{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":306,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":393,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx5":474,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx6":475,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":805,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":263,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":276,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":589,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":465,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":710,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":809,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":203,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":564,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":778,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIsEmpty":628,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":779,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":26,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":133,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":780,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":379,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsSelfHashCode":94,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":346,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":651,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":163,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":135,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":520,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":313,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":362,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":529,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":821,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":506,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalEmptyCollectionExists":209,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":608,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":729,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":513,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":303,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":78,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":560,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":510,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":44,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetContains3":426,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetContains2":425,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":508,"org.apache.commons.collections4.queue.PredicatedQueueTest.testFullQueueCompatibility":613,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetContains1":424,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":716,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":256,"org.apache.commons.collections4.CollectionUtilsTest.select":11,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":495,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":588,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":264,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":398,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":172,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":410,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":243,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":131,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":832,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":735,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":791,"org.apache.commons.collections4.map.HashedMapTest.testInternalState":42,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":138,"org.apache.commons.collections4.CollectionUtilsTest.intersection":16,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":222,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":572,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":356,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":497,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":334,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray":635,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":863,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":228,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":283,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":111,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":284,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking2":462,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":565,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":285,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":524,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":806,"org.apache.commons.collections4.map.LRUMapTest.testEmptyMapCompatibility":175,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":598,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":275,"org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull":695,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":35,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":183,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":660,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":553,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":824,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastValues":732,"org.apache.commons.collections4.map.CompositeMapTest.testPut":25,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":527,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":697,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":607,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":718,"org.apache.commons.collections4.functors.AllPredicateTest.trueAndFalseCombined":480,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":831,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":211,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":308,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":388,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":106,"org.apache.commons.collections4.map.ReferenceMapTest.testEmptyMapCompatibility":62,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":403,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":722,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":55,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":723,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":295,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":296,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":297,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":315,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":817,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":81,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":33,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEqualsNull":144,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":407,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":464,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":769,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":76,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":77,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":75,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":50,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":288,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":545,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":195,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":584,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":367,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":242,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":113,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":31,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":233,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":229,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":431,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":586,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":630,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":848,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate":858,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":764,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabelAndMap":318,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":165,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":294,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":541,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":571,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":234,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":235,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":715,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":236,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":860,"org.apache.commons.collections4.functors.AllPredicateTest.emptyCollectionToGetInstance":479,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":378,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":784,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":593,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":38,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":859,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":856,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":168,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveChangesMap":458,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":796,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx3":857,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":503,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":86,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":702,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":501,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":752,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":391,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":523,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorSet":774,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":602,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":358,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":170,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":386,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":511,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":212,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":191,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":377,"org.apache.commons.collections4.queue.PredicatedQueueTest.testSerializeDeserializeThenCompare":634,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":140,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePoll":615,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":686,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":304,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":842,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":692,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":539,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":472,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":70,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":537,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":176,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":562,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":382,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":260,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":703,"org.apache.commons.collections4.functors.AllPredicateTest.singletonCollectionToGetInstance":481,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":644,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":305,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":820,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":156,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":439,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsContract":93,"org.apache.commons.collections4.queue.PredicatedQueueTest.testEmptyQueueSerialization":617,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":190,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":189,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":82,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":188,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":816,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":493,"org.apache.commons.collections4.map.LRUMapTest.testReset":157,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":368,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":665,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":749,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":123,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":213,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":763,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":8,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":789,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":258,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":119,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":811,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testDecorateFactory":218,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":494,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveChangesMap":455,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":556,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing":866,"org.apache.commons.collections4.functors.AllPredicateTest.nullCollectionToGetInstance":312,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":788,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":51,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":98,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":134,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":349,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":477,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":750,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":158,"org.apache.commons.collections4.QueueUtilsTest.testPredicatedQueue":609,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullStream":321,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":32,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":173,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":68,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":194,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":760,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":500,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":601,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":107,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":483,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":193,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":339,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":668,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":384,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullMapIterator":773,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":406,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":338,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":342,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":100,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":112,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":363,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":139,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":353,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":654,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":815,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":650,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":118,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":143,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":278,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRetainAll":631,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":653,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":600,"org.apache.commons.collections4.queue.PredicatedQueueTest.testSimpleSerialization":641,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":69,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":217,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":647,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":399,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":274,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":505,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":128,"org.apache.commons.collections4.map.HashedMapTest.testClone":41,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":129,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":130,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking2":438,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":504,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":550,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_getByIndex":708,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":825,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":664,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":528,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectEqualsSelf":92,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":525,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":287,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":787,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":271,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":402,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":440,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":34,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":395,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":246,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":154,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":10,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":812,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":868,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":375,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRetainAll":726,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":490,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":776,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":266,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":265,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":30,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":267,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":80,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":559,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":13,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":286,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":676,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":652,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":516,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":23,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":830,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":663,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":696,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":682,"org.apache.commons.collections4.functors.AllPredicateTest.allTrue":478,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":673,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRetainAll":681,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIterator":435,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":526,"org.apache.commons.collections4.ListUtilsTest.testSelect":22,"org.apache.commons.collections4.map.LinkedMapTest.testClone":39,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":759,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":758,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":21,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalFullCollectionExists":210,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRetainAll":747,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContains":627,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":332,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":333,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":861,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":549,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":125,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":126,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":127,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":772,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":164,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":790,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":717,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsContract":146,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":871,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":540,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":160,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":152,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":240,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":699,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove2":744,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":818,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":544,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove1":743,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":533,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":793,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCanonicalEmptyCollectionExists":640,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":843,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":49,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":762,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":536,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":63,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":535,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":534,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":827,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":122,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRetainAll":771,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":740,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":205,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":364,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveChangesMap":459,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":822,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":542,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":476,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":161,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":432,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":675,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":348,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectHashCodeEqualsContract":642,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":840,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":447,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":839,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":838,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":14,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":460,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":376,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":221,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":116,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":672,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":64,"org.apache.commons.collections4.queue.PredicatedQueueTest.testFullQueueSerialization":620,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":437,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":802,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":408,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":347,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":597,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":245,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":849,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":862,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":782,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":43,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":445,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueElement":616,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":88,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":184,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":646,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":700,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":713,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":141,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":412,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":662,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":558,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":182,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":548,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":325,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":155,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":594,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":12,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":52,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":531,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":522,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":327,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":757,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":340,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":181,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveChangesMap":454,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testKeySetRemoveChangesMap":457,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKey":657,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastValues":711,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":241,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":351,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":67,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":855,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":192,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":567,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":741,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":171,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":724,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":394,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":343,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":223,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":436,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":709,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":810,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":84,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":714,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":433,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueRemove":612,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":781,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":576,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":18,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":53,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":136,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionSize":623,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":392,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":569,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":570,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":6,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":767,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":61,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":262,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCanonicalFullCollectionExists":638,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":765,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":110,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":492,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":688,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":231,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":485,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":727,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIterator":636,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":121,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":674,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":108,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":216,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":514,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":381,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":124,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":846,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveChangesMap":453,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":214,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRetainAll":684,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking":434,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":579,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":803,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":580,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":693,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":578,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIteratorRemove":625,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":65,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":197,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":277,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":473,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":666,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":198,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":659,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullStream":320,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":783,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":841,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":850,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":706,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":328,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":79,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":47,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContainsAll":621,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":90,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":416,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":261,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":350,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":799,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll":864,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":499,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":57,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":603,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":430,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":552,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveAll":725,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":370,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":389,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":847,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":272,"org.apache.commons.collections4.map.CompositeMapTest.testGet":24,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":48,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabelAndMap":319,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":671,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":551,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":417,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":795,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testCanonicalFullCollectionExists":150,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":298,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":489,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":546,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":807,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":691,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":89,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":300,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":299,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":626,"org.apache.commons.collections4.map.ReferenceMapTest.testEqualsNull":91,"org.apache.commons.collections4.queue.PredicatedQueueTest.testGet":610,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":3,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":159,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":557,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":591,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":745,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":834,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":828,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":248,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveChangesMap":456,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":383,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":414,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":756,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsSelfHashCode":147,"org.apache.commons.collections4.CollectionUtilsTest.union":15,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":226,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":450,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueOffer":619,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":5,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":227,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":366,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInCollectionToGetInstance":482,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":577,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":844,"org.apache.commons.collections4.map.ReferenceMapTest.testCanonicalFullCollectionExists":97,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":568,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":491,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":867,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":360,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":573,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":721,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":73,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":72,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":561,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":74,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":239,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":819,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":238,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":237,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":279,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":46,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":373,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":733,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":365,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":419,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":720,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":547,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":583,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":754,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":582,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":581,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":200,"org.apache.commons.collections4.map.LRUMapTest.testClone":151,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":694,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":335,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":656,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":249,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":162,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":443,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":109,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveAll":680,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_Decorate":669,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":405,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":345,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":766,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":801,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":352,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":829,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":566,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":225,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":751,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":451,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":851,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":786,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":498,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":452,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":336,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":648,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":865,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testCanonicalEmptyCollectionExists":149,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":224,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":330,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":199,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":232,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":690,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":661,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":590,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":380,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":486,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":404,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":813,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":604,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":207,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemove":633,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":518,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":331,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":797,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":587,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":28,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":329,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":27,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":60,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":411,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":202,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":488,"org.apache.commons.collections4.SetUtilsTest.testpredicatedSet":804,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":101,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":114,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":169,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains3":423,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":307,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":117,"org.apache.commons.collections4.map.ReferenceMapTest.testCanonicalEmptyCollectionExists":96,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":208,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":1,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains2":422,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":293,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":401,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains1":421,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":102,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking":461,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":753,"org.apache.commons.collections4.queue.PredicatedQueueTest.testRemove":611,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":852,"org.apache.commons.collections4.map.ReferenceMapTest.testSimpleSerialization":95,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray2":622,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAdd":632,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":555,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToString":624,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":689,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":215,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":270,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":269,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":268,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":397,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":400,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":40,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":808,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":739,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":104,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":83,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":530,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":0,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":137,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":685,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":369,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":204,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":7,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":132,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEmptyMapCompatibility":115,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":9,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":167,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":853,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":253,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":29,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":254,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":255,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":670,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":354,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":301,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":291,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":4,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":418,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":322,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":854,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":420,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":667,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":120,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":742,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":592,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":712,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":87,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":734,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveAll":770,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":178,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":201,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":707,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":292,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":17,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":316,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":728,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":427,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":429,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":428,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":257,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":196,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":507,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":247,"org.apache.commons.collections4.queue.PredicatedQueueTest.testEqualsNull":639,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintCasting":314,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex":704,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":317,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":496,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":515,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":409,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":869,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":54,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":385,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapGet":679,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveAll":683,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":153,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":775,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":543,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":645,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":512,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":355,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":442,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":761,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.initializationError":220,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":45,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":463,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionClear":629,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":826,"org.apache.commons.collections4.set.CompositeSetTest.testContains":2,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectEqualsSelf":145,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":180,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":309,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":359,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":56,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":337,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":273,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":20,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":371,"org.apache.commons.collections4.PredicateUtilsTest.testInstanceOfPredicate":484,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":387,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":658,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":738,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveAll":746,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":599,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetValueByIndex":731,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":444,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":777,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":595,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":596,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":357,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":521,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":678,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":538,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx6":471,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":785,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":823,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx4":311,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":532,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx5":470,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":649,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":448,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":85,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":517,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":446,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":323,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":698,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":166,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":37,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePeek":614,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":800,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":66,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_Decorate":677,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":719,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":441,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":449,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":833,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":396,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":655,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":585,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":59,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":574,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":58,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":554,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":794,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":730,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":103,"org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex":705,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":179,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":374,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":344,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":251,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":814,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":252,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":99,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":250,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":736,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":835,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":836,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":837,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":575,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":361,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":219,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":289,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":415,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":310,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":206,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":792,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":280,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":281,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":390,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":563,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":701,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":177,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":519,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":737,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":372,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":509,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":290,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectEqualsSelf":637,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":244,"org.apache.commons.collections4.queue.PredicatedQueueTest.testEmptyQueueCompatibility":618,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":870,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":467,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx5":466,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":606,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":687,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSimpleSerialization":148,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":302,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":187,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":413,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":341,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":845,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectHashCodeEqualsSelfHashCode":643,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":185,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":605,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":186,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":755,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":502,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx6":469,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx5":468,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":282,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":259,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":230,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":798,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":324,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":326,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":105,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":487,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":748,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":142,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":174,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":768},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:764","type":"CtBinaryOperatorImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"tindex":"83bce340-3f26-11e6-8962-e90af7b16507","method":{"position":"org.apache.commons.collections4.CollectionUtils:98","type":"CtMethodImpl","sourcecode":"public int freqA(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            return getFreq(obj, java.util.Map<O, java.lang.Integer>);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"shortObject":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:104","type":"CtBinaryOperatorImpl"},"failures":[32],"tindex":"83bd3161-3f26-11e6-8962-0126d2b90bfa","method":{"position":"org.apache.commons.collections4.ClosureUtils:113","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> forClosure(final int count, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (count == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ForClosure.forClosure(count, closure);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"83bd3162-3f26-11e6-8962-fd373f152fa0","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:57","type":"CtMethodImpl","sourcecode":"static boolean isOutOfBoundsIndex(final int bitIndex) {\n    if (bitIndex < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bound":"bitIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:383","type":"CtBinaryOperatorImpl"},"failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210],"tindex":"83bd3163-3f26-11e6-8962-6759a3499cb9","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:663","type":"CtMethodImpl","sourcecode":"protected int calculateNewCapacity(final int proposedCapacity) {\n    if (proposedCapacity < 4) {\n        {\n            int int = 1;\n            if (proposedCapacity > (org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n                newCapacity = org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.int;\n            } else {\n                while (newCapacity < proposedCapacity) {\n                    newCapacity <<= 1;\n                }\n                if (newCapacity > (org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n                    newCapacity = org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.int;\n                } \n            }\n            return newCapacity;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"proposedCapacity"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:148","type":"CtInvocationImpl"},"failures":[],"tindex":"83bd5874-3f26-11e6-8962-0d1ddbb35f5c","method":{"position":"org.apache.commons.collections4.MapUtils:1422","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMap<K, V> orderedMap(final java.util.Map<K, V> map) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.listOrderedMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:782","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"83bd5875-3f26-11e6-8962-6932c83d8a83","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1720","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(inRange(castKey(key)))) {\n                return null;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:331","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"83bd5876-3f26-11e6-8962-fb7bdcc089aa","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:245","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void removeNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == node) {\n        {\n            super.removeNode(node);\n            broadcastNodeRemoved(node);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.IllegalArgumentException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1365","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"83be90f7-3f26-11e6-8962-677616062496","method":{"position":"org.apache.commons.collections4.map.CompositeMap:133","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic synchronized void addComposited(final java.util.Map<K, V> map) throws java.lang.IllegalArgumentException {\n    for (int int = (java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n        final java.util.Collection<K> java.util.Collection<K> = org.apache.commons.collections4.CollectionUtils.intersection(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].keySet(), map.keySet());\n        if ((intersect.size()) != 0) {\n            if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n            } \n            org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i], map, intersect);\n        } \n    }\n    final java.util.Map<K, V>[] java.util.Map<K, V>[] = new java.util.Map[(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) + 1];\n    java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], 0, temp, 0, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int);\n    temp[((temp.int) - 1)] = map;\n    org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[] = temp;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:91","type":"CtBinaryOperatorImpl"},"failures":[32],"tindex":"83bf0628-3f26-11e6-8962-bb77565172a4","method":{"position":"org.apache.commons.collections4.functors.ForClosure:51","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> forClosure(final int count, final org.apache.commons.collections4.Closure<? super E> closure) {\n    if (count <= 0) {\n        {\n            if ((count <= 0) || (closure == null)) {\n                return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n            } \n            if (count == 1) {\n                return ((org.apache.commons.collections4.Closure<E>)(closure));\n            } \n            return new org.apache.commons.collections4.functors.ForClosure<E>(count , closure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl"},"failures":[211,212,213],"tindex":"83bf0629-3f26-11e6-8962-d18b4cba4cb0","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:404","type":"CtMethodImpl","sourcecode":"public java.util.Iterator<V> iterator(final java.lang.Object key) {\n    if (key instanceof java.util.Enumeration<?>) {\n        {\n            if (!(containsKey(key))) {\n                return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n            } \n            return new ValuesIterator(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:187","type":"CtBinaryOperatorImpl"},"failures":[214,215,216],"tindex":"83bf062a-3f26-11e6-8962-a56ea64adb2f","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:427","type":"CtMethodImpl","sourcecode":"protected void updateNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node, final E value) {\n    if (node == null) {\n        {\n            node.setValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cachedNode":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl"},"failures":[217,218],"tindex":"83bf062b-3f26-11e6-8962-e55d03179ee5","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:54","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> unmodifiableQueue(final java.util.Queue<? extends E> queue) {\n    if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.Queue<E> java.util.Queue<E> = ((java.util.Queue<E>)(queue));\n                return tmpQueue;\n            } \n            return new org.apache.commons.collections4.queue.UnmodifiableQueue<E>(queue);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl"},"failures":[219],"tindex":"83bf062c-3f26-11e6-8962-ab6f296a034a","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll.isEmpty()) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:281","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"83bf2d3d-3f26-11e6-8962-93b255954ce3","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object instanceof java.lang.Long) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:58","type":"CtBinaryOperatorImpl"},"failures":[220],"tindex":"83bf2d3e-3f26-11e6-8962-a5d81a0c091a","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:57","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.SortedBidiMap<K, V> unmodifiableSortedBidiMap(final org.apache.commons.collections4.SortedBidiMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.SortedBidiMap<K, V> org.apache.commons.collections4.SortedBidiMap<K, V> = ((org.apache.commons.collections4.SortedBidiMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:113","type":"CtBinaryOperatorImpl"},"failures":[221],"tindex":"83bf2d3f-3f26-11e6-8962-37839710e1db","method":{"position":"org.apache.commons.collections4.CollectionUtils:705","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>T forAllButLastDo(final java.lang.Iterable<T> collection, final C closure) {\n    if (collection == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (collection == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return (collection != null) && (closure != null) ? org.apache.commons.collections4.CollectionUtils.forAllButLastDo(collection.iterator(), closure) : null;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"items":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"83bf2d40-3f26-11e6-8962-6bfd755dbb5a","method":{"position":"org.apache.commons.collections4.SetUtils:306","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> predicatedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.PredicatedSortedSet.predicatedSortedSet(set, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtBinaryOperatorImpl"},"failures":[222],"tindex":"83bf2d41-3f26-11e6-8962-599eb3bde74c","method":{"position":"org.apache.commons.collections4.PredicateUtils:352","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> eitherPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate2 == null) || (predicate1 == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>onePredicate(predicate1, predicate2);\n            return onePredicate;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate2","predicate2":"predicate1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:547","type":"CtBinaryOperatorImpl"},"failures":[223,224,225],"tindex":"83bf2d42-3f26-11e6-8962-830e9d376fd9","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:278","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) != (coll.size())) {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if ((coll.contains(it.next())) == false) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"coll","b":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:384","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"83bf5453-3f26-11e6-8962-698d63acedd7","method":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:94","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int index) {\n    if ((1 <= index) && (otherCount <= index)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().listIterator(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"myCount":"index","otherCount":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1145","type":"CtBinaryOperatorImpl"},"failures":[226,227,228,229,230,231,232,36,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,40,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,43,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,46,294,295,296,297,298,299,300,301,166,167,169,170,171,174,177,180,181,185,186,187,188,189,190,199],"tindex":"83bf5454-3f26-11e6-8962-33d2734b0118","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1103","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1360","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"83c017a5-3f26-11e6-8962-b146ca22bb0e","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1054","type":"CtMethodImpl","sourcecode":"protected void rangeCheck(final int index, final int beyond) {\n    if (beyond > 0) {\n        {\n            if ((index < 0) || (index >= beyond)) {\n                throw new java.lang.IndexOutOfBoundsException(((((\"Index '\" + index) + \"' out of bounds for size '\") + (int)) + \"'\"));\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeCount":"beyond"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"83c017a6-3f26-11e6-8962-f3c799252111","method":{"position":"org.apache.commons.collections4.bag.SynchronizedSortedBag:50","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.SynchronizedSortedBag<E> synchronizedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bag.SynchronizedSortedBag<E>(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtBinaryOperatorImpl"},"failures":[302,303,304,305,306,307,308,309,310],"tindex":"83c017a7-3f26-11e6-8962-011ec6856530","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:178","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n            return (lookupValue(value)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl"},"failures":[311,312],"tindex":"83c017a8-3f26-11e6-8962-61ea482d6126","method":{"position":"org.apache.commons.collections4.functors.AllPredicate:79","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> allPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<T>[] org.apache.commons.collections4.Predicate<T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n            } \n            if ((preds.int) == 1) {\n                return preds[0];\n            } \n            return new org.apache.commons.collections4.functors.AllPredicate<T>(preds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:224","type":"CtInvocationImpl"},"failures":[],"tindex":"83c017a9-3f26-11e6-8962-27d333607ab3","method":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:131","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final E E : coll) {\n                validate(item);\n            }\n            return decorated().addAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtBinaryOperatorImpl"},"failures":[313],"tindex":"83c017aa-3f26-11e6-8962-b5a1bdc0846e","method":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:254","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index == (-1)) {\n        {\n            final int int = size();\n            if ((index < 0) || (index >= sz)) {\n                throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(index), java.lang.Integer.valueOf(sz)));\n            } \n            final int int = ((int) + index) % (int);\n            return E[][idx];\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lastReturned":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:109","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"83c03ebb-3f26-11e6-8962-59552b5bc943","method":{"position":"org.apache.commons.collections4.IteratorUtils:446","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> unmodifiableIterator(final java.util.Iterator<E> iterator) {\n    return org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(iterator);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl"},"failures":[314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331],"tindex":"83c03ebc-3f26-11e6-8962-35b6eb9a89bf","method":{"position":"org.apache.commons.collections4.MapUtils:968","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\nprivate static void verbosePrintInternal(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map, final org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>> lineage, final boolean debug) {\n    if ((label instanceof java.util.Map<?, ?>) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            if (map == null) {\n                if (label != null) {\n                    out.print(label);\n                    out.print(\" = \");\n                } \n                out.println(\"null\");\n                return ;\n            } \n            if (label != null) {\n                out.print(label);\n                out.println(\" = \");\n            } \n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            out.println(\"{\");\n            lineage.push(map);\n            for (final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> : map.entrySet()) {\n                final java.lang.Object java.lang.Object = entry.getKey();\n                final java.lang.Object java.lang.Object = entry.getValue();\n                if ((childValue instanceof java.util.Map) && (!(lineage.contains(childValue)))) {\n                    org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, (childKey == null ? \"null\" : childKey), ((java.util.Map<?, ?>)(childValue)), lineage, debug);\n                } else {\n                    org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n                    out.print(childKey);\n                    out.print(\" = \");\n                    final int int = lineage.indexOf(childValue);\n                    if (lineageIndex == (-1)) {\n                        out.print(childValue);\n                    } else if (((lineage.size()) - 1) == lineageIndex) {\n                        out.print(\"(this Map)\");\n                    } else {\n                        out.print(((\"(ancestor[\" + ((((lineage.size()) - 1) - lineageIndex) - 1)) + \"] Map)\"));\n                    }\n                    if (debug && (childValue != null)) {\n                        out.print(' ');\n                        out.println(childValue.getClass().getName());\n                    } else {\n                        out.println();\n                    }\n                }\n            }\n            lineage.pop();\n            org.apache.commons.collections4.MapUtils.printIndent(out, lineage.size());\n            out.println((debug ? \"} \" + (map.getClass().getName()) : \"}\"));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"label"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1055","type":"CtBinaryOperatorImpl"},"failures":[332],"tindex":"83c065cd-3f26-11e6-8962-2fe450e24a6f","method":{"position":"org.apache.commons.collections4.IteratorUtils:278","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final E[] array, final int start) {\n    if (start == 0) {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayIterator<E>(array , start);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"83c065ce-3f26-11e6-8962-85b185bd4f95","method":{"position":"org.apache.commons.collections4.map.PredicatedMap:185","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : mapToCopy.entrySet()) {\n                validate(entry.getKey(), entry.getValue());\n            }\n            super.putAll(mapToCopy);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"83c065cf-3f26-11e6-8962-a7f7379ed1e6","method":{"position":"org.apache.commons.collections4.CollectionUtils:994","type":"CtMethodImpl","sourcecode":"public static <I, O>java.util.Collection<O> collect(final java.lang.Iterable<I> inputCollection, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<O> java.util.Collection<O> = inputCollection instanceof java.util.Collection<?> ? new java.util.ArrayList<O>(((java.util.Collection<?>)(inputCollection)).size()) : new java.util.ArrayList<O>();\n            return org.apache.commons.collections4.CollectionUtils.collect(inputCollection, transformer, answer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transform":"transformer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:331","type":"CtBinaryOperatorImpl"},"failures":[214,333,334,335,336,337,338,339,340,223,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,215,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,224,416,417,418,419,420],"tindex":"83c065d0-3f26-11e6-8962-3fe4ee2b38b5","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:233","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void addNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> nodeToInsert, final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> insertBeforeNode) {\n    if (insertBeforeNode == insertBeforeNode) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            super.addNode(nodeToInsert, insertBeforeNode);\n            broadcastNodeInserted(nodeToInsert);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"insertBeforeNode","header":"insertBeforeNode"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:124","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"83c065d1-3f26-11e6-8962-2312ed09abe5","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:708","type":"CtMethodImpl","sourcecode":"private void atomic(final java.lang.Runnable r, final int bucket) {\n    if (bucket == (-1)) {\n        {\n            if (bucket >= (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int)) {\n                r.run();\n                return ;\n            } \n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][bucket]) {\n                atomic(r, (bucket + 1));\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"largestKey":"bucket"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:61","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"83c08ce2-3f26-11e6-8962-4f3ead794fbb","method":{"position":"org.apache.commons.collections4.MapUtils:1521","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> unmodifiableSortedMap(final java.util.SortedMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.UnmodifiableSortedMap.unmodifiableSortedMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"83c08ce3-3f26-11e6-8962-f3f17ef4bd97","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:346","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            if ((org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.isEmpty()) || (coll.isEmpty())) {\n                return false;\n            } \n            boolean boolean = false;\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (it.hasNext()) {\n                modified |= remove(it.next());\n            }\n            return modified;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"83c08ce4-3f26-11e6-8962-f1bc58d5b63d","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:281","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key instanceof java.util.Collection<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key == null) {\n                return null;\n            } \n            purgeBeforeWrite();\n            return super.remove(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"83c08ce5-3f26-11e6-8962-99a8821a5727","method":{"position":"org.apache.commons.collections4.MapUtils:1037","type":"CtMethodImpl","sourcecode":"private static void printIndent(final java.io.PrintStream out, final int indent) {\n    if (indent > indent) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = 0 ; i < indent ; i++) {\n                out.print(org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.java.lang.String);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"indent","proposedCapacity":"indent"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtBinaryOperatorImpl"},"failures":[421,422,423,424,425,426,427,428,429],"tindex":"83c08ce6-3f26-11e6-8962-d3810256a960","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:616","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object obj) {\n    if ((obj instanceof java.util.List) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getEntrySet().contains(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:178","type":"CtBinaryOperatorImpl"},"failures":[375],"tindex":"83c08ce7-3f26-11e6-8962-dfe0add2c1e8","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:988","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index == (-1)) {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            final E E = org.apache.commons.collections4.list.AbstractLinkedList<E>.remove((index + (int)));\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            (int)--;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lastItemIndex":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:83","type":"CtBinaryOperatorImpl"},"failures":[430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447],"tindex":"83c0b3f8-3f26-11e6-8962-dd350a17ab62","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:97","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index == 0) {\n        {\n            return decorated().get(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"callCounter":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:181","type":"CtBinaryOperatorImpl"},"failures":[448],"tindex":"83c0b3f9-3f26-11e6-8962-5d455414b4f1","method":{"position":"org.apache.commons.collections4.IteratorUtils:920","type":"CtMethodImpl","sourcecode":"public static <E>java.lang.Iterable<E> asMultipleUseIterable(final java.util.Iterator<? extends E> iterator) {\n    if (iterator != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorIterable<E>(iterator , true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"currentIterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"83c0b3fa-3f26-11e6-8962-fbac2efacd60","method":{"position":"org.apache.commons.collections4.CollectionUtils:1137","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.util.Enumeration<? extends C> enumeration) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            boolean boolean = false;\n            while (enumeration.hasMoreElements()) {\n                changed |= collection.add(enumeration.nextElement());\n            }\n            return changed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:844","type":"CtBinaryOperatorImpl"},"failures":[303,449,450,451,452,453,454,455,456,457,458,459,460],"tindex":"83c0b3fb-3f26-11e6-8962-b713dec8bdb4","method":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"doubleObject":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:317","type":"CtBinaryOperatorImpl"},"failures":[461,437,462],"tindex":"83c0b3fc-3f26-11e6-8962-291d7dd3ecb4","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:147","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (index > 0) {\n        {\n            return decorated().set(index, object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl"},"failures":[463],"tindex":"83c0b3fd-3f26-11e6-8962-9d270513530a","method":{"position":"org.apache.commons.collections4.BagUtils:214","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> predicatedSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.PredicatedSortedBag.predicatedSortedBag(bag, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:424","type":"CtInvocationImpl"},"failures":[],"tindex":"83c0db0e-3f26-11e6-8962-3100dfd1cf85","method":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:81","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.BidiMap<V, K> createBidiMap(final java.util.Map<V, K> normalMap, final java.util.Map<K, V> reverseMap, final org.apache.commons.collections4.BidiMap<K, V> inverseBidiMap) {\n    return new org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap<V, K>(normalMap , reverseMap , inverseBidiMap);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"inverseBidiMap"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:113","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"83c0db0f-3f26-11e6-8962-39228b3fee7d","method":{"position":"org.apache.commons.collections4.CollectionUtils:705","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>T forAllButLastDo(final java.lang.Iterable<T> collection, final C closure) {\n    if (collection == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (collection == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return (collection != null) && (closure != null) ? org.apache.commons.collections4.CollectionUtils.forAllButLastDo(collection.iterator(), closure) : null;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"items":"collection"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1278","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"83c0db10-3f26-11e6-8962-2536109e0129","method":{"position":"org.apache.commons.collections4.list.TransformedList:160","type":"CtMethodImpl","sourcecode":"public java.util.List<E> subList(final int fromIndex, final int toIndex) {\n    if (toIndex == (-1)) {\n        {\n            final java.util.List<E> java.util.List<E> = getList().subList(fromIndex, toIndex);\n            return new org.apache.commons.collections4.list.TransformedList<E>(sub , org.apache.commons.collections4.Transformer<? super E, ? extends E>);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"toIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtBinaryOperatorImpl"},"failures":[464,465],"tindex":"83c0db11-3f26-11e6-8962-affb184bd96c","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:143","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.sequence.SequencesComparator.Snake buildSnake(final int start, final int diag, final int end1, final int end2) {\n    if (diag >= end2) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = start;\n            while ((((end - diag) < end2) && (end < end1)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(end), java.util.List<T>.get((end - diag))))) {\n                ++end;\n            }\n            return new org.apache.commons.collections4.sequence.SequencesComparator.Snake(start , end , diag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"diag","maxElements":"end2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl"},"failures":[466,467,468,469,470,471,472,473,474,475,476,477,478,478,479,480,480,481,482,483],"tindex":"83c0db12-3f26-11e6-8962-e115bc6f5dac","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:96","type":"CtMethodImpl","sourcecode":"static <T>org.apache.commons.collections4.Predicate<T>[] validate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            if (predicates == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\");\n            } \n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T>[] org.apache.commons.collections4.Predicate<T>[] = new org.apache.commons.collections4.Predicate[predicates.size()];\n            int int = 0;\n            for (final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> : predicates) {\n                preds[i] = predicate;\n                if ((preds[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + i) + \" was null\"));\n                } \n                i++;\n            }\n            return preds;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl"},"failures":[484],"tindex":"83c1c573-3f26-11e6-8962-d90e88dccfb8","method":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:69","type":"CtMethodImpl","sourcecode":"public boolean evaluate(final java.lang.Object object) {\n    if (object instanceof java.util.Iterator<?>) {\n        {\n            return java.lang.Class<?>.isInstance(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:236","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"83c1c574-3f26-11e6-8962-33d6105e7c52","method":{"position":"org.apache.commons.collections4.ComparatorUtils:235","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>E max(final E o1, final E o2, java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            final int int = comparator.compare(o1, o2);\n            return c > 0 ? o1 : o2;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedClosure:68","type":"CtBinaryOperatorImpl"},"failures":[485],"tindex":"83c1c575-3f26-11e6-8962-d5549c640bcb","method":{"position":"org.apache.commons.collections4.ClosureUtils:218","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final java.util.Collection<org.apache.commons.collections4.Closure<E>> closures) {\n    if (closures == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(closures);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"83c1c576-3f26-11e6-8962-e9bbbd2ca458","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:379","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl"},"failures":[9],"tindex":"83c1ec87-3f26-11e6-8962-f9d2cf5e7a62","method":{"position":"org.apache.commons.collections4.CollectionUtils:494","type":"CtMethodImpl","sourcecode":"public static boolean isProperSubCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if (b.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((a.size()) < (b.size())) && (org.apache.commons.collections4.CollectionUtils.isSubCollection(a, b));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl"},"failures":[486,487],"tindex":"83c1ec88-3f26-11e6-8962-a5ea6d679748","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:70","type":"CtMethodImpl","sourcecode":"public static <K, C>org.apache.commons.collections4.collection.IndexedCollection<K, C> uniqueIndexedCollection(final java.util.Collection<C> coll, final org.apache.commons.collections4.Transformer<C, K> keyTransformer) {\n    if (coll instanceof java.util.List<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.collection.IndexedCollection<K, C>(coll , keyTransformer , org.apache.commons.collections4.map.MultiValueMap.<K, C>multiValueMap(new java.util.HashMap<K, java.util.Collection<C>>()) , true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl"},"failures":[488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504],"tindex":"83c1ec89-3f26-11e6-8962-2d4766b56384","method":{"position":"org.apache.commons.collections4.set.CompositeSet:127","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object obj) {\n    if (obj != null) {\n        {\n            for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n                if (item.contains(obj)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:104","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"83c1ec8a-3f26-11e6-8962-73c827a6a9b2","method":{"position":"org.apache.commons.collections4.map.LinkedMap:293","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<K> listIterator(final int fromIndex) {\n    if (fromIndex == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(super.listIterator(fromIndex));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"fromIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtBinaryOperatorImpl"},"failures":[505,506],"tindex":"83c1ec8b-3f26-11e6-8962-972fc11cfcf8","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (object == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1022","type":"CtInvocationImpl"},"failures":[507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,302,525,526,527,528,529,530,531,532,533,534,535,536,303,537,538,539,449,540,541,542,543,544,545,546,547,548,549,550,551,304,552,305,306,553,554,555,556,557,558,559,560,561,562,563,564,565,307,566,567,568,569,570,308,571,572,573,574,575,576,577,578,579,580,581,582,583,309,584,585,310,586,587,588,589,590,591,592,593],"tindex":"83c1ec8c-3f26-11e6-8962-5dd5a17618fa","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:879","type":"CtMethodImpl","sourcecode":"private void doRedBlackInsert(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> insertedNode, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(insertedNode, dataElement)) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = insertedNode;\n            org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(currentNode, dataElement);\n            while (((currentNode != null) && (currentNode != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()]))) && (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(currentNode.getParent(dataElement), dataElement))) {\n                if (currentNode.isLeftChild(dataElement)) {\n                    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = getRightChild(getGrandParent(currentNode, dataElement), dataElement);\n                    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(y, dataElement)) {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getParent(currentNode, dataElement), dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(y, dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(getGrandParent(currentNode, dataElement), dataElement);\n                        currentNode = getGrandParent(currentNode, dataElement);\n                    } else {\n                        if (currentNode.isRightChild(dataElement)) {\n                            currentNode = getParent(currentNode, dataElement);\n                            rotateLeft(currentNode, dataElement);\n                        } \n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getParent(currentNode, dataElement), dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(getGrandParent(currentNode, dataElement), dataElement);\n                        if ((getGrandParent(currentNode, dataElement)) != null) {\n                            rotateRight(getGrandParent(currentNode, dataElement), dataElement);\n                        } \n                    }\n                } else {\n                    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = getLeftChild(getGrandParent(currentNode, dataElement), dataElement);\n                    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(y, dataElement)) {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getParent(currentNode, dataElement), dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(y, dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(getGrandParent(currentNode, dataElement), dataElement);\n                        currentNode = getGrandParent(currentNode, dataElement);\n                    } else {\n                        if (currentNode.isLeftChild(dataElement)) {\n                            currentNode = getParent(currentNode, dataElement);\n                            rotateRight(currentNode, dataElement);\n                        } \n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getParent(currentNode, dataElement), dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(getGrandParent(currentNode, dataElement), dataElement);\n                        if ((getGrandParent(currentNode, dataElement)) != null) {\n                            rotateLeft(getGrandParent(currentNode, dataElement), dataElement);\n                        } \n                    }\n                }\n            }\n            org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()], dataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"siblingNode":"insertedNode","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtInvocationImpl"},"failures":[],"tindex":"83c2139d-3f26-11e6-8962-e76efc5cf5d0","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:389","type":"CtMethodImpl","sourcecode":"public K get(final int index) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(index)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<K>.get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtBinaryOperatorImpl"},"failures":[433],"tindex":"83c2139e-3f26-11e6-8962-37c3e2376473","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:122","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index < (index / 2)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new FixedSizeListIterator(decorated().listIterator(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:610","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"83c2139f-3f26-11e6-8962-83d7c0fa31bc","method":{"position":"org.apache.commons.collections4.CollectionUtils:946","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Collection<O> selectRejected(final java.lang.Iterable<? extends O> inputCollection, final org.apache.commons.collections4.Predicate<? super O> predicate) {\n    if (inputCollection instanceof org.apache.commons.collections4.Bag<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Collection<O> java.util.Collection<O> = inputCollection instanceof java.util.Collection<?> ? new java.util.ArrayList<O>(((java.util.Collection<?>)(inputCollection)).size()) : new java.util.ArrayList<O>();\n            return org.apache.commons.collections4.CollectionUtils.selectRejected(inputCollection, predicate, answer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"inputCollection"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtBinaryOperatorImpl"},"failures":[594,595,596,597,598,599,600,601,602,603,604],"tindex":"83c239b0-3f26-11e6-8962-8f8619ead0a4","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:316","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        if (null == prev) {\n                            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        } else {\n                            prev.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        }\n                        (org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash].int)--;\n                        return n.V;\n                    } \n                    prev = n;\n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"83c239b1-3f26-11e6-8962-a97d7b9fceb8","method":{"position":"org.apache.commons.collections4.MapUtils:1262","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> unmodifiableMap(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.UnmodifiableMap.unmodifiableMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:261","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"83c239b2-3f26-11e6-8962-27f164ccb460","method":{"position":"org.apache.commons.collections4.CollectionUtils:80","type":"CtMethodImpl","sourcecode":"public final int max(final java.lang.Object obj) {\n    if (!(obj == null ? obj == null : obj1.equals(obj2))) {\n        {\n            return java.lang.Math.max(freqA(obj), freqB(obj));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj2":"obj","obj1":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:120","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"83c239b3-3f26-11e6-8962-692533ecf5a8","method":{"position":"org.apache.commons.collections4.CollectionUtils:1427","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Collection<?> coll) {\n    if (((coll == null) || (coll == null)) || ((set1.size()) != (set2.size()))) {\n        {\n            return !(org.apache.commons.collections4.CollectionUtils.isEmpty(coll));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"coll","set1":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.GrowthList:183","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"83c239b4-3f26-11e6-8962-71694bef0c3d","method":{"position":"org.apache.commons.collections4.list.LazyList:111","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E get(final int index) {\n    if (index >= index) {\n        {\n            final int int = decorated().size();\n            if (index < size) {\n                E E = decorated().get(index);\n                if (object == null) {\n                    object = org.apache.commons.collections4.Factory<? extends E>.create();\n                    decorated().set(index, object);\n                    return object;\n                } \n                return object;\n            } \n            for (int int = size ; i < index ; i++) {\n                decorated().add(null);\n            }\n            final E E = org.apache.commons.collections4.Factory<? extends E>.create();\n            decorated().add(object);\n            return object;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1162","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"83c260c5-3f26-11e6-8962-5de6a46b8469","method":{"position":"org.apache.commons.collections4.IteratorUtils:431","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final java.lang.Object array, final int start, final int end) {\n    if (array != null) {\n        {\n            if (array instanceof java.lang.Object[]) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return new org.apache.commons.collections4.iterators.ArrayListIterator<E>(array , start , end);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"array"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:127","type":"CtBinaryOperatorImpl"},"failures":[605,606,607,608,153,154,155,156],"tindex":"83c260c6-3f26-11e6-8962-5913aa347930","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:492","type":"CtMethodImpl","sourcecode":"protected void reuseEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final int hashCode, final K key, final V value) {\n    if ((hashIndex % 2) == 0) {\n        {\n            entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex];\n            entry.int = hashCode;\n            entry.java.lang.Object = key;\n            entry.java.lang.Object = value;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"hashIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtBinaryOperatorImpl"},"failures":[609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643],"tindex":"83c287d7-3f26-11e6-8962-ddcf6ae14857","method":{"position":"org.apache.commons.collections4.queue.PredicatedQueue:56","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.PredicatedQueue<E> predicatedQueue(final java.util.Queue<E> Queue, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.queue.PredicatedQueue<E>(Queue , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"83c287d8-3f26-11e6-8962-cb78c8cc699e","method":{"position":"org.apache.commons.collections4.map.LinkedMap:238","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lastIndexOf(final java.lang.Object obj) {\n    if (null == obj) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.indexOf(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:973","type":"CtBinaryOperatorImpl"},"failures":[644,645,487,515,517,518,519,526,544,545,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,33,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,213,696,697,698,699,700,701,702,241,242,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,421,422,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,424,425,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,427,428,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774],"tindex":"83c287d9-3f26-11e6-8962-a7eca8d76a67","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:93","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"label":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:46","type":"CtBinaryOperatorImpl"},"failures":[484,775],"tindex":"83c287da-3f26-11e6-8962-45fef7d2963a","method":{"position":"org.apache.commons.collections4.PredicateUtils:174","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.Predicate<java.lang.Object> instanceofPredicate(final java.lang.Class<?> type) {\n    if (type == null) {\n        {\n            return org.apache.commons.collections4.functors.InstanceofPredicate.instanceOfPredicate(type);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:313","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"83c287db-3f26-11e6-8962-e3ab14b3339b","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:331","type":"CtMethodImpl","sourcecode":"protected void broadcastNodeRemoved(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == node) {\n        {\n            final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator();\n            while (it.hasNext()) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = ref.get();\n                if (cursor == null) {\n                    it.remove();\n                } else {\n                    cursor.nodeRemoved(node);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl"},"failures":[776,38],"tindex":"83c2aeec-3f26-11e6-8962-d197b97f921e","method":{"position":"org.apache.commons.collections4.map.Flat3Map:977","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key instanceof org.w3c.dom.NodeList) {\n        {\n            return org.apache.commons.collections4.map.Flat3Map<K, ?>.containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:534","type":"CtUnaryOperatorImpl"},"failures":[777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797],"tindex":"83c2aeed-3f26-11e6-8962-9f1e64c4d57c","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:480","type":"CtMethodImpl","sourcecode":"V removeEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> h) {\n    if (!(h.isInternalNode())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (h != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n                if (h.isInternalNode()) {\n                    removeInternalEntry(h);\n                } else {\n                    removeExternalEntry(h);\n                }\n            } \n            decrementSize();\n            return h.setKeyValue(null, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"h":"h"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:863","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"83c2aeee-3f26-11e6-8962-67f3497f41f7","method":{"position":"org.apache.commons.collections4.MapUtils:1422","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMap<K, V> orderedMap(final java.util.Map<K, V> map) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.listOrderedMap(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:616","type":"CtBinaryOperatorImpl"},"failures":[798,799,800,801,802,803,195],"tindex":"83c2aeef-3f26-11e6-8962-3b425ff04ade","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:951","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.containsKey(key);\n            org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.remove(key);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:105","type":"CtFieldReadImpl"},"failures":[],"tindex":"83c2aef0-3f26-11e6-8962-8fb98b210d1e","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2207","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean inFromRange(final K key, final boolean forceInclusive) {\n    if (forceInclusive) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getKeyAnalyzer().isPrefix(K, int, int, key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"removeAllowed":"forceInclusive"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:97","type":"CtBinaryOperatorImpl"},"failures":[804],"tindex":"83c2aef1-3f26-11e6-8962-ddaa0ca315d1","method":{"position":"org.apache.commons.collections4.SetUtils:210","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Set<E> predicatedSet(final java.util.Set<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (set == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.PredicatedSet.predicatedSet(set, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:381","type":"CtConditionalImpl"},"failures":[],"tindex":"83c2d602-3f26-11e6-8962-c3cd9504f56e","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:106","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object == null ? object == null : nextElement.equals(p)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.lang.Object) {\n                return getBag().getCount(object);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"object","nextElement":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:167","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"83c2d603-3f26-11e6-8962-b72cdc62935f","method":{"position":"org.apache.commons.collections4.map.TransformedMap:76","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedMap<K, V> transformingMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    return new org.apache.commons.collections4.map.TransformedMap<K, V>(map , keyTransformer , valueTransformer);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"83c2d604-3f26-11e6-8962-d93904319f99","method":{"position":"org.apache.commons.collections4.collection.IndexedCollection:157","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) < (coll.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.lang.Object java.lang.Object : coll) {\n                if (!(contains(o))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll","coll1":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:309","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"83c2d605-3f26-11e6-8962-773648222df7","method":{"position":"org.apache.commons.collections4.SplitMapUtils:59","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (null != key) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Get<K, V>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"orderingBits":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtBinaryOperatorImpl"},"failures":[29,805,806,807,503],"tindex":"83c2d606-3f26-11e6-8962-2fef2107ee85","method":{"position":"org.apache.commons.collections4.map.CompositeMap:413","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key instanceof java.util.Enumeration<?>) {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].remove(key);\n                } \n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"83c2d607-3f26-11e6-8962-79a2024534c6","method":{"position":"org.apache.commons.collections4.iterators.FilterIterator:162","type":"CtMethodImpl","sourcecode":"public void setPredicate(final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.FilterIterator.this.org.apache.commons.collections4.Predicate<? super E> = predicate;\n            E = null;\n            boolean = false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1069","type":"CtInvocationImpl"},"failures":[808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,789,832,833,834,835,836,837,838,839,840,790,841,842,791,792,843,844,793,794,795,796,797],"tindex":"83c32428-3f26-11e6-8962-d76ad0d47dec","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:79","type":"CtMethodImpl","sourcecode":"static boolean isValidBitIndex(final int bitIndex) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(bitIndex)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return bitIndex >= 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl"},"failures":[845,846,847,848,849,850,851,852],"tindex":"83c32429-3f26-11e6-8962-0fc7508f6c24","method":{"position":"org.apache.commons.collections4.bag.PredicatedBag:97","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int count) {\n    if (count < 0) {\n        {\n            return decorated().remove(object, count);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl"},"failures":[853],"tindex":"83c34b3a-3f26-11e6-8962-0da0a6a82bf8","method":{"position":"org.apache.commons.collections4.PredicateUtils:535","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.TransformedPredicate.<T>transformedPredicate(transformer, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:260","type":"CtBinaryOperatorImpl"},"failures":[14],"tindex":"83c34b3b-3f26-11e6-8962-a9f307310878","method":{"position":"org.apache.commons.collections4.CollectionUtils:552","type":"CtMethodImpl","sourcecode":"public org.apache.commons.collections4.CollectionUtils.EquatorWrapper<?> transform(final java.lang.Object input) {\n    if (input instanceof java.lang.Integer) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.CollectionUtils.EquatorWrapper(equator , input);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"input"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:643","type":"CtBinaryOperatorImpl"},"failures":[854,855],"tindex":"83c34b3c-3f26-11e6-8962-59fed61c5cde","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:384","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key3 == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return ((((multi.size()) == 3) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"integerObject":"key3"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl"},"failures":[856,857,858,859,221,860,861,862,863],"tindex":"83c34b3d-3f26-11e6-8962-23d7ad827bd8","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:53","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName) {\n    if (methodName == null) {\n        {\n            if (methodName == null) {\n                throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(methodName);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:376","type":"CtBinaryOperatorImpl"},"failures":[864,865,866,867,868,869],"tindex":"83c34b3e-3f26-11e6-8962-d11076daad93","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:272","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<E>.get(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtBinaryOperatorImpl"},"failures":[870],"tindex":"83c34b3f-3f26-11e6-8962-91b57f8d07ac","method":{"position":"org.apache.commons.collections4.ListUtils:574","type":"CtMethodImpl","sourcecode":"public static java.lang.String longestCommonSubsequence(final java.lang.CharSequence a, final java.lang.CharSequence b) {\n    if ((b == null) || (a == null)) {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"CharSequence must not be null\");\n            } \n            final java.util.List<java.lang.Character> java.util.List<java.lang.Character> = org.apache.commons.collections4.ListUtils.longestCommonSubsequence(new org.apache.commons.collections4.ListUtils.CharSequenceAsList(a), new org.apache.commons.collections4.ListUtils.CharSequenceAsList(b));\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            for (java.lang.Character java.lang.Character : lcs) {\n                sb.append(ch);\n            }\n            return sb.toString();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"a"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"83c37250-3f26-11e6-8962-c37f25a4ffb1","method":{"position":"org.apache.commons.collections4.IteratorUtils:431","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final java.lang.Object array, final int start, final int end) {\n    if (array != null) {\n        {\n            if (array instanceof java.lang.Object[]) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return new org.apache.commons.collections4.iterators.ArrayListIterator<E>(array , start , end);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"array"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:103","type":"CtBinaryOperatorImpl"},"failures":[871],"tindex":"83c37251-3f26-11e6-8962-5d5856727ba0","method":{"position":"org.apache.commons.collections4.SplitMapUtils:79","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if ((key instanceof java.util.Map.Entry) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.Get<K, V>.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:985","type":"CtInvocationImpl"},"failures":[],"tindex":"83c37252-3f26-11e6-8962-09b38695dfe5","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:978","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E obj) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(index)) {\n        {\n            rangeCheck(index, ((int) + 1));\n            checkModCount();\n            org.apache.commons.collections4.list.AbstractLinkedList<E>.add((index + (int)), obj);\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            (int)++;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331712661/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:584","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"83c4f8f3-3f26-11e6-8962-8f3252ff4f81","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:57","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformingBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    return new org.apache.commons.collections4.bag.TransformedBag<E>(bag , transformer);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}