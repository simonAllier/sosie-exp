{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":765,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx5":627,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":863,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx6":628,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":664,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":198,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":327,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":623,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":906,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx1":585,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":453,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testRemove":148,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":528,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":348,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullValue":445,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":177,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":773,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":537,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIsEmpty":738,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testEqualsNull":749,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":546,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":133,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":698,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":227,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":354,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":809,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":661,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicate":714,"org.apache.commons.collections4.list.TransformedListTest.testListListIterator":10,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":34,"org.apache.commons.collections4.map.Flat3MapTest.testObjectEqualsSelf":68,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":490,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":810,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":180,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":817,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":888,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":274,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":690,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndexBoundsChecking":4,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":807,"org.apache.commons.collections4.IteratorUtilsTest.testNodeIterator":619,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":517,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":769,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":496,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEqualsNull":574,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":803,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":378,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":868,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":424,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":363,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":849,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":302,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutNullValue":417,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreater":914,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":660,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreaterOrEqual":913,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":120,"org.apache.commons.collections4.CollectionUtilsTest.emptyIfNull":715,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":866,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":800,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":329,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":125,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":40,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapHashCode":442,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":282,"org.apache.commons.collections4.ListUtilsTest.testEquals":162,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray":745,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":56,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":30,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapClear":423,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":613,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":228,"org.apache.commons.collections4.CollectionUtilsTest.intersection":548,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":340,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testGetSet":730,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullKey":478,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":783,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":678,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":165,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":305,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":206,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":207,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":215,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":774,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":208,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":368,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":359,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":503,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":665,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":592,"org.apache.commons.collections4.list.TransformedListTest.testEmptyListCompatibility":5,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullIterator":150,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":197,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":425,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAdd":727,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":766,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":21,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":350,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastKeySet":846,"org.apache.commons.collections4.map.CompositeMapTest.testPut":536,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":491,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":507,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEmptyBagCompatibility":562,"org.apache.commons.collections4.iterators.IteratorChainTest.testObjectEqualsSelf":703,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":58,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRetainAll":463,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":685,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":558,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":586,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToString":32,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":185,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":781,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":842,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":652,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":712,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":211,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":922,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":486,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPut":432,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":891,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":265,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":266,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":267,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapHashCode":414,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":406,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":347,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":248,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":249,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":247,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":257,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":525,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":421,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":116,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":796,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":549,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":841,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveAll":428,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":726,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":542,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":905,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testSerializeDeserializeThenCompare":158,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":311,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":306,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRetainAll":413,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":798,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullValue":479,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":739,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndexBoundsChecking":15,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPut":509,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":397,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":639,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCanonicalEmptyCollectionExists":754,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":480,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":264,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetIteratorRemoveChangesMap":416,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":167,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":567,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetIteratorRemoveChangesMap":402,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":449,"org.apache.commons.collections4.list.TransformedListTest.testCanonicalFullCollectionExists":46,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":82,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":427,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":522,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":353,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":782,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":312,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":313,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":314,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":616,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":813,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":657,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectEqualsSelf":575,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":626,"org.apache.commons.collections4.TrieUtilsTest.testUnmodifiableTrie":527,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":825,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":320,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":65,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveAll":456,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":856,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":812,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":1,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":815,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":688,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":881,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":103,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":252,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEqualsNull":153,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":725,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetIteratorRemoveChangesMap":494,"org.apache.commons.collections4.set.MapBackedSetTest.testCanonicalEmptyCollectionExists":93,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testBagEqualsSelf":561,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":684,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":343,"org.apache.commons.collections4.iterators.IteratorChainTest.testCanonicalEmptyCollectionExists":706,"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":94,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":502,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorSet":147,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":280,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":497,"org.apache.commons.collections4.list.TransformedListTest.testObjectHashCodeEqualsContract":50,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRetainAll":435,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":903,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiKeySetValuesOrder":871,"org.apache.commons.collections4.map.SingletonMapTest.testMapHashCode":373,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":862,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking2":16,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":419,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":879,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapHashCode":386,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":230,"org.apache.commons.collections4.iterators.IteratorChainTest.testEqualsNull":705,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":762,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetIteratorRemoveChangesMap":883,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullKey":394,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":499,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":836,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":832,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":518,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":771,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":324,"org.apache.commons.collections4.iterators.IteratorChainTest.testObjectHashCodeEqualsContract":708,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":764,"org.apache.commons.collections4.iterators.IteratorChainTest.testSimpleSerialization":707,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":292,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":598,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":291,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":250,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":290,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":658,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapClear":470,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutAll":401,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemovePrevious":19,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":426,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":565,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":396,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":186,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":554,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPut":477,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":322,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":489,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastValues":899,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":659,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":370,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":759,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":126,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":375,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":597,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":823,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":243,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":603,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":129,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":675,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":361,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":683,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":655,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":919,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":136,"org.apache.commons.collections4.set.MapBackedSetTest.testEqualsNull":92,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSimpleSerialization":753,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":212,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRetainAll":743,"org.apache.commons.collections4.ListUtilsTest.testPartition":187,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":87,"org.apache.commons.collections4.map.Flat3MapTest.testSerializeDeserializeThenCompare":67,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":824,"org.apache.commons.collections4.list.TransformedListTest.testCollectionSize":31,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":106,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullMapIterator":146,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":53,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":216,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":229,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetIteratorRemoveChangesMap":458,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":6,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":819,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":614,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectHashCodeEqualsContract":156,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":78,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":356,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":474,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":200,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":170,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":821,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":12,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":24,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":573,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":553,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutAll":429,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":196,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":816,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":224,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":80,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":225,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":467,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":226,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":689,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":733,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":127,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":130,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":508,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":72,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":505,"org.apache.commons.collections4.list.TransformedListTest.testObjectEqualsSelf":45,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":256,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":336,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":469,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":60,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":647,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":95,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":855,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":649,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":73,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":544,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":826,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":721,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":887,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":44,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":374,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":892,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":64,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":651,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":843,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":331,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareLessOrEqual":912,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":330,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":332,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":541,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemove":741,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":768,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":209,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":358,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectHashCodeEqualsSelfHashCode":577,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":493,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":141,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag":555,"org.apache.commons.collections4.list.TransformedListTest.testEmptyListSerialization":27,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":606,"org.apache.commons.collections4.iterators.IteratorChainTest.testObjectHashCodeEqualsSelfHashCode":709,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetIteratorRemoveChangesMap":909,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains3":410,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":506,"org.apache.commons.collections4.iterators.IteratorChainTest.testSerializeDeserializeThenCompare":710,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionClear":735,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":385,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":38,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":383,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains1":408,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains2":409,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":123,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapClear":451,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":310,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":481,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":640,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":339,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":621,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":221,"org.apache.commons.collections4.list.TransformedListTest.testEqualsNull":47,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":222,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":223,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetIteratorRemoveChangesMap":444,"org.apache.commons.collections4.list.TransformedListTest.testSerializeDeserializeThenCompare":42,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":521,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveChangesMap":440,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiKeySetValuesOrder":858,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray":43,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":273,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":594,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":318,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":454,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":864,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectHashCodeEqualsSelfHashCode":752,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":178,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":134,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":455,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPut":404,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":122,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":513,"org.apache.commons.collections4.iterators.IteratorChainTest.testCanonicalFullCollectionExists":704,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":663,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":701,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":393,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":516,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":515,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":472,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":514,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":617,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":713,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":25,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":121,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":461,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":341,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCanonicalFullCollectionExists":580,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveChangesMap":446,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":181,"org.apache.commons.collections4.ListUtilsTest.testPredicatedList":159,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":523,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":629,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":736,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":275,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":811,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":890,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":86,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":581,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndexBoundsChecking2":22,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":468,"org.apache.commons.collections4.functors.ComparatorPredicateTest.predicateSanityTests":915,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":390,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":637,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContainsAll":737,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutNullKey":422,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":886,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":241,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":571,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":587,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":907,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":74,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":880,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":924,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":59,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":885,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":889,"org.apache.commons.collections4.map.LRUMapTest.testLRU":630,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":589,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetEquals":731,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":33,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":686,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":596,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":893,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":201,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":254,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":482,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testComparator":729,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":483,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":484,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":110,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":699,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":720,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":349,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":118,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":107,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":465,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":653,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":611,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":610,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":459,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastKeySet":898,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":591,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":384,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":231,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":767,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":172,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":191,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":641,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSimpleSerialization":578,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":757,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":545,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetIteratorRemoveChangesMap":870,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":511,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":501,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":452,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRetainAll":441,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":286,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":859,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveChangesMap":418,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNull":362,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":662,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":342,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":97,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":99,"org.apache.commons.collections4.IteratorUtilsTest.testNodeListIterator":618,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":242,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":139,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapHashCode":475,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":777,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":853,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":447,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":71,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":281,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":679,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":466,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":119,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":161,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIteratorRemove":740,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":691,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSortOrder":831,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":635,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":166,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":367,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":787,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":234,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveChangesMap":412,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":609,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastValues":874,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":779,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":780,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":400,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":54,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":240,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":326,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":55,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":398,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":109,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":214,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":434,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":854,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":656,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":81,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":742,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":124,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":308,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":473,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEmptyIterator":149,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":220,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiKeySetValuesOrder":896,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapRemove":433,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":35,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":351,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":878,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":117,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":360,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":808,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":894,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":462,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":601,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":90,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorOrder":144,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":839,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":790,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":791,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":734,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":789,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":41,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":199,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":431,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":89,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareLess":911,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":590,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":2,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":711,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":923,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":325,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":671,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":105,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":833,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":681,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":237,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":763,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":638,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":682,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":194,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":387,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":174,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":233,"org.apache.commons.collections4.map.CompositeMapTest.testGet":535,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":605,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":761,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":268,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":650,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":526,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":666,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":882,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":255,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":405,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectEqualsSelf":151,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastValues":847,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":270,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":269,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":115,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":88,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":376,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":100,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":171,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":532,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":276,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":642,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":560,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":188,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":760,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":624,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":70,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":184,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":63,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":552,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":556,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":476,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":303,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":485,"org.apache.commons.collections4.CollectionUtilsTest.union":547,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiKeySetValuesOrder":844,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":471,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":848,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":304,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":534,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":788,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":778,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":654,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":717,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":643,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":784,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":346,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":901,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":245,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":244,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":365,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":770,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemoveNext":28,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":246,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastKeySet":860,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":595,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":369,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":615,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":179,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":317,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":316,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":315,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":719,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":202,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":263,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":8,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":756,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":794,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":793,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":792,"org.apache.commons.collections4.list.TransformedListTest.testObjectHashCodeEqualsSelfHashCode":51,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":294,"org.apache.commons.collections4.map.LRUMapTest.testClone":272,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":822,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":877,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsSelfHashCode":96,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":66,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":884,"org.apache.commons.collections4.list.TransformedListTest.testFullListCompatibility":26,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":213,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":173,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectHashCodeEqualsContract":576,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":411,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":164,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveAll":448,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":399,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":84,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":669,"org.apache.commons.collections4.map.SingletonMapTest.testLastKey":364,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":568,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":776,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":488,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":667,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":668,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":593,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":680,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":36,"org.apache.commons.collections4.map.Flat3MapTest.testObjectHashCodeEqualsContract":69,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":437,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":438,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":599,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectHashCodeEqualsContract":751,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":436,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":828,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":14,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":189,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":137,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testCanonicalEmptyCollectionExists":154,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":583,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":0,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":716,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":876,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":293,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":309,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":694,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":132,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullKey":450,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":902,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":801,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray2":746,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetIteratorRemoveChangesMap":830,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRetainAll":407,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":696,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":805,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":799,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":539,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":538,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":845,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapClear":395,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":724,"org.apache.commons.collections4.CollectionUtilsTest.countMatches":818,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":492,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemovePrevious":3,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapRemove":829,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":646,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":210,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":217,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":279,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":775,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":218,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":76,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":530,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":262,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":838,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":108,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":11,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndexBoundsChecking2":23,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":338,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":379,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":102,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testOrderedMapIterator":142,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSerializeDeserializeThenCompare":748,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":192,"org.apache.commons.collections4.list.TransformedListTest.testCollectionClear":37,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":758,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetIteratorRemoveChangesMap":430,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":176,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":335,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":77,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":112,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":334,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":333,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":169,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":328,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiMapIteratorSet":140,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":510,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":529,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":372,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":875,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":98,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":612,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":692,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":543,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":278,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":728,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":487,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":702,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":904,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":299,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":300,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":540,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":301,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":676,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":271,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":582,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":260,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":533,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionSize":744,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":135,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":851,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":101,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":219,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":625,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":7,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemoveNext":13,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":253,"org.apache.commons.collections4.set.MapBackedSetTest.testCanonicalFullCollectionExists":91,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":604,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":631,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":295,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCanonicalEmptyCollectionExists":579,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":588,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":261,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":190,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":380,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetHashCode":732,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":382,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":381,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":700,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":835,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":897,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":321,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":345,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":602,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":802,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":61,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":677,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectEqualsSelf":750,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":895,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":908,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":498,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":722,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":235,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":563,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":559,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":869,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":160,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":114,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":837,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":695,"org.apache.commons.collections4.list.TransformedListTest.testCanonicalEmptyCollectionExists":48,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":524,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":850,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":111,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":128,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":75,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":62,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":391,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.initializationError":464,"org.apache.commons.collections4.set.ListOrderedSetTest.testOrdering":718,"org.apache.commons.collections4.set.ListOrderedSet2Test.testOrdering":723,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":357,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":557,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":183,"org.apache.commons.collections4.set.CompositeSetTest.testContains":531,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testCanonicalFullCollectionExists":152,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":104,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":193,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":285,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndexBoundsChecking":9,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":569,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":319,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareEquals":910,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":795,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":236,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":865,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":648,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":195,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":918,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":572,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":566,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":900,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":550,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEmptyMapIterator":145,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicateEx1":921,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testSimpleSerialization":155,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":916,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":917,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":500,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":814,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag":551,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":519,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":182,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":512,"org.apache.commons.collections4.IteratorUtilsTest.testAsIterable":620,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":608,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":371,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":251,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":804,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":672,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":674,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":673,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":131,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":277,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":163,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":168,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":443,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":439,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testObjectHashCodeEqualsSelfHashCode":157,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastKeySet":873,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":634,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":415,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":520,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":344,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutAll":457,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":820,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":797,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":239,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":785,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":867,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":238,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":920,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveAll":392,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":632,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":297,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":298,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":52,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":296,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":693,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":697,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":786,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPut":460,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":636,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testDecorateFactory":143,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":258,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":622,"org.apache.commons.collections4.list.TransformedListTest.testFullListSerialization":17,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":203,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":204,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":772,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":284,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetIteratorRemoveChangesMap":857,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndexBoundsChecking2":20,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":806,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullValue":389,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":495,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":570,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":259,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":607,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":57,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCanonicalFullCollectionExists":755,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testLastKey":377,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":29,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveAll":420,"org.apache.commons.collections4.map.SingletonMapTest.testPreviousKey":366,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToString":747,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx4":633,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":83,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":670,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":644,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":827,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":504,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":645,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":289,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":600,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":584,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":872,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":834,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":840,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":138,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":175,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":287,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":288,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":355,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":687,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":352,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":852,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":205,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":323,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":79,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":307,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetIteratorRemoveChangesMap":388,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":85,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":337,"org.apache.commons.collections4.list.TransformedListTest.testSimpleSerialization":49,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":39,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndexBoundsChecking":18,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastValues":861,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":232,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":564,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":113,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":283,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":403},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:120","type":"CtBinaryOperatorImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],"tindex":"cdc30eab-3f43-11e6-a3b2-e792f70e3408","method":{"position":"org.apache.commons.collections4.list.TransformedList:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.TransformedList<E> transformingList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (list == null) {\n        {\n            return new org.apache.commons.collections4.list.TransformedList<E>(list , transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cdc3f90c-3f43-11e6-a3b2-07030763c160","method":{"position":"org.apache.commons.collections4.MapUtils:255","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Integer getInteger(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Integer) {\n                return ((java.lang.Integer)(answer));\n            } \n            return java.lang.Integer.valueOf(answer.intValue());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:260","type":"CtBinaryOperatorImpl"},"failures":[52,53],"tindex":"cdc4201d-3f43-11e6-a3b2-453d7878cf33","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:204","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean isEqualKey(final java.lang.Object key1, java.lang.Object key2) {\n    if (key1 instanceof java.lang.Integer) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key2 = isKeyType(org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? key2 : ((java.lang.ref.Reference<?>)(key2)).get();\n            return key1 == key2;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:488","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cdc4472e-3f43-11e6-a3b2-170392e742af","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2156","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(obj, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:295","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cdc4472f-3f43-11e6-a3b2-2db5442effbb","method":{"position":"org.apache.commons.collections4.ListUtils:126","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> subtract(final java.util.List<E> list1, final java.util.List<? extends E> list2) {\n    if (list1 == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.ArrayList<E> java.util.ArrayList<E> = new java.util.ArrayList<E>();\n            final org.apache.commons.collections4.bag.HashBag<E> org.apache.commons.collections4.bag.HashBag<E> = new org.apache.commons.collections4.bag.HashBag<E>(list2);\n            for (final E E : list1) {\n                if (!(bag.remove(e, 1))) {\n                    result.add(e);\n                } \n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"values":"list1"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl"},"failures":[54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69],"tindex":"cdc46e40-3f43-11e6-a3b2-c96692079e1c","method":{"position":"org.apache.commons.collections4.map.Flat3Map:1138","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (obj == (org.apache.commons.collections4.map.Flat3Map.this)) {\n                return true;\n            } \n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.equals(obj);\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((int) != (other.size())) {\n                return false;\n            } \n            if ((int) > 0) {\n                java.lang.Object java.lang.Object = null;\n                switch (int) {\n                    case 3 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                    case 2 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                    case 1 :\n                        if ((other.containsKey(K)) == false) {\n                            return false;\n                        } \n                        otherValue = other.get(K);\n                        if ((V) == null ? otherValue != null : !(V.equals(otherValue))) {\n                            return false;\n                        } \n                }\n            } \n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtBinaryOperatorImpl"},"failures":[70,71],"tindex":"cdc49551-3f43-11e6-a3b2-f9b2c148d98f","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:518","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.containsValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.MapBackedSet:75","type":"CtBinaryOperatorImpl"},"failures":[72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120],"tindex":"cdc4bc62-3f43-11e6-a3b2-ffa229021b86","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:74","type":"CtMethodImpl","sourcecode":"public static <E, V>org.apache.commons.collections4.set.MapBackedSet<E, V> mapBackedSet(final java.util.Map<E, ? super V> map, final V dummyValue) {\n    if (map == null) {\n        {\n            if (map == null) {\n                throw new java.lang.IllegalArgumentException(\"The map must not be null\");\n            } \n            return new org.apache.commons.collections4.set.MapBackedSet<E, V>(map , dummyValue);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:468","type":"CtBinaryOperatorImpl"},"failures":[121,60,64,122],"tindex":"cdc4e373-3f43-11e6-a3b2-15399ec269a9","method":{"position":"org.apache.commons.collections4.map.Flat3Map:244","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                {\n                    if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                        return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsValue(value);\n                    } \n                    if (value == null) {\n                        switch (int) {\n                            case 3 :\n                                if ((V) == null) {\n                                    return true;\n                                } \n                            case 2 :\n                                if ((V) == null) {\n                                    return true;\n                                } \n                            case 1 :\n                                if ((V) == null) {\n                                    return true;\n                                } \n                        }\n                    } else {\n                        switch (int) {\n                            case 3 :\n                                if (value.equals(V)) {\n                                    return true;\n                                } \n                            case 2 :\n                                if (value.equals(V)) {\n                                    return true;\n                                } \n                            case 1 :\n                                if (value.equals(V)) {\n                                    return true;\n                                } \n                        }\n                    }\n                    return false;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1377","type":"CtBinaryOperatorImpl"},"failures":[123],"tindex":"cdc50a84-3f43-11e6-a3b2-3d5cee0bf807","method":{"position":"org.apache.commons.collections4.IteratorUtils:316","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end) {\n    if (start == 0) {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayIterator<E>(array , start , end);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeCount":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:164","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cdc50a85-3f43-11e6-a3b2-b73b471519b4","method":{"position":"org.apache.commons.collections4.ListUtils:442","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> transformedList(final java.util.List<E> list, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (list == null) {\n        {\n            return org.apache.commons.collections4.list.TransformedList.transformingList(list, transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtBinaryOperatorImpl"},"failures":[124],"tindex":"cdc53196-3f43-11e6-a3b2-6becf720fb57","method":{"position":"org.apache.commons.collections4.functors.FunctorUtils:134","type":"CtMethodImpl","sourcecode":"static void validate(final org.apache.commons.collections4.Closure<?>... closures) {\n    if (closures == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (closures == null) {\n                throw new java.lang.IllegalArgumentException(\"The closure array must not be null\");\n            } \n            for (int int = 0 ; i < (closures.int) ; i++) {\n                if ((closures[i]) == null) {\n                    throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + i) + \" was null\"));\n                } \n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.EnumerationIterator:107","type":"CtBinaryOperatorImpl"},"failures":[125,126],"tindex":"cdc53197-3f43-11e6-a3b2-1937fbd36e99","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:275","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeCollection without a CollectionMutator strategy\");\n            } \n            return org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>.addAll(org.apache.commons.collections4.collection.CompositeCollection.this, java.util.List<java.util.Collection<E>>, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtBinaryOperatorImpl"},"failures":[127,128],"tindex":"cdc558a8-3f43-11e6-a3b2-35e645bc49e2","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:597","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> nextGreater(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n            if (node == null) {\n                rval = null;\n            } else if ((node.getRight(dataElement)) != null) {\n                rval = leastNode(node.getRight(dataElement), dataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getParent(dataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n                while ((parent != null) && (child == (parent.getRight(dataElement)))) {\n                    child = parent;\n                    parent = parent.getParent(dataElement);\n                }\n                rval = parent;\n            }\n            return rval;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:117","type":"CtBinaryOperatorImpl"},"failures":[129,130,131,132,133,134],"tindex":"cdc558a9-3f43-11e6-a3b2-6b6d7d7c9f8a","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:94","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll == coll) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"coll","set1":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtBinaryOperatorImpl"},"failures":[135],"tindex":"cdc57fba-3f43-11e6-a3b2-e1b365f03d9e","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:264","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key2 == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:51","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cdc57fbb-3f43-11e6-a3b2-0914890d2ced","method":{"position":"org.apache.commons.collections4.IteratorUtils:824","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> peekingIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.iterators.PeekingIterator.peekingIterator(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:255","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"cdc5a6cc-3f43-11e6-a3b2-e107410f2f64","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2215","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean inToRange(final K key, final boolean forceInclusive) {\n    if (!forceInclusive) {\n        {\n            return getKeyAnalyzer().isPrefix(K, int, int, key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"contains":"forceInclusive"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:46","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cdc5a6cd-3f43-11e6-a3b2-7f8cad593a36","method":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:186","type":"CtMethodImpl","sourcecode":"public void setListIterator(final java.util.ListIterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.FilterListIterator.this.java.util.ListIterator<? extends E> = iterator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:804","type":"CtBinaryOperatorImpl"},"failures":[136,137,138,139],"tindex":"cdc5a6ce-3f43-11e6-a3b2-6fbc70e29266","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:154","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2) {\n    if (key1 == null) {\n        {\n            final int int = hash(key1, key2);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"longObject":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:49","type":"CtBinaryOperatorImpl"},"failures":[140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158],"tindex":"cdc5cddf-3f43-11e6-a3b2-3fa8cc94d1e9","method":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:46","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final org.apache.commons.collections4.OrderedMapIterator<K, ? extends V> iterator) {\n    if (iterator == null) {\n        {\n            if (iterator == null) {\n                throw new java.lang.IllegalArgumentException(\"OrderedMapIterator must not be null\");\n            } \n            if (iterator instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedMapIterator<K, V> org.apache.commons.collections4.OrderedMapIterator<K, V> = ((org.apache.commons.collections4.OrderedMapIterator<K, V>)(iterator));\n                return tmpIterator;\n            } \n            return new org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator<K, V>(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:548","type":"CtBinaryOperatorImpl"},"failures":[159],"tindex":"cdc5cde0-3f43-11e6-a3b2-8b79a9f7ab80","method":{"position":"org.apache.commons.collections4.ListUtils:418","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> predicatedList(final java.util.List<E> list, final org.apache.commons.collections4.Predicate<E> predicate) {\n    if ((list == null) || (list == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.PredicatedList.predicatedList(list, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"list","b":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:295","type":"CtInvocationImpl"},"failures":[],"tindex":"cdc5cde1-3f43-11e6-a3b2-3361f2d99e19","method":{"position":"org.apache.commons.collections4.queue.TransformedQueue:53","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.TransformedQueue<E> transformingQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    return new org.apache.commons.collections4.queue.TransformedQueue<E>(queue , transformer);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"queue"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtBinaryOperatorImpl"},"failures":[160],"tindex":"cdc5f4f2-3f43-11e6-a3b2-5d06e13db67c","method":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:62","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.collection.PredicatedCollection<T> predicatedCollection(final java.util.Collection<T> coll, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.collection.PredicatedCollection<T>(coll , predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:282","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cdc5f4f3-3f43-11e6-a3b2-077f74bb0346","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:621","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getEntrySet().containsAll(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cdc61c04-3f43-11e6-a3b2-75948e151c09","method":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:55","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Factory<T> instantiateFactory(final java.lang.Class<T> classToInstantiate, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (classToInstantiate == null) {\n        {\n            if (classToInstantiate == null) {\n                throw new java.lang.IllegalArgumentException(\"Class to instantiate must not be null\");\n            } \n            if ((((paramTypes == null) && (args != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && ((paramTypes.int) != (args.int)))) {\n                throw new java.lang.IllegalArgumentException(\"Parameter types must match the arguments\");\n            } \n            if ((paramTypes == null) || ((paramTypes.int) == 0)) {\n                return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate);\n            } \n            return new org.apache.commons.collections4.functors.InstantiateFactory<T>(classToInstantiate , paramTypes , args);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classToInstantiate":"classToInstantiate"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:508","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cdc61c05-3f43-11e6-a3b2-5f993a200d45","method":{"position":"org.apache.commons.collections4.MapUtils:506","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Long getLong(final java.util.Map<? super K, ?> map, final K key, final java.lang.Long defaultValue) {\n    if (defaultValue == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"defaultValue"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cdc61c06-3f43-11e6-a3b2-6be137547e94","method":{"position":"org.apache.commons.collections4.MapUtils:659","type":"CtMethodImpl","sourcecode":"public static <K>long getLongValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n            if (longObject == null) {\n                return 0L;\n            } \n            return longObject.longValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl"},"failures":[161],"tindex":"cdc64317-3f43-11e6-a3b2-2717d07a2ec5","method":{"position":"org.apache.commons.collections4.TransformerUtils:417","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> invokerTransformer(final java.lang.String methodName, final java.lang.Class<?>[] paramTypes, final java.lang.Object[] args) {\n    if (methodName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.InvokerTransformer.<I, O>invokerTransformer(methodName, paramTypes, args);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:147","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cdc64318-3f43-11e6-a3b2-0f0fad277501","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:120","type":"CtMethodImpl","sourcecode":"public static <K, V, C extends java.util.Collection<V>>org.apache.commons.collections4.map.MultiValueMap<K, V> multiValueMap(final java.util.Map<K, ? super C> map, final org.apache.commons.collections4.Factory<C> collectionFactory) {\n    if (collectionFactory == null) {\n        {\n            return new org.apache.commons.collections4.map.MultiValueMap<K, V>(map , collectionFactory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collectionFactory":"collectionFactory"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtBinaryOperatorImpl"},"failures":[162],"tindex":"cdc64319-3f43-11e6-a3b2-f7e15c64434b","method":{"position":"org.apache.commons.collections4.ListUtils:244","type":"CtMethodImpl","sourcecode":"public static boolean isEqualList(final java.util.Collection<?> list1, final java.util.Collection<?> list2) {\n    if (list1 == list2) {\n        {\n            if (list1 == list2) {\n                return true;\n            } \n            if (((list1 == null) || (list2 == null)) || ((list1.size()) != (list2.size()))) {\n                return false;\n            } \n            final java.util.Iterator<?> java.util.Iterator<?> = list1.iterator();\n            final java.util.Iterator<?> java.util.Iterator<?> = list2.iterator();\n            java.lang.Object java.lang.Object = null;\n            java.lang.Object java.lang.Object = null;\n            while ((it1.hasNext()) && (it2.hasNext())) {\n                obj1 = it1.next();\n                obj2 = it2.next();\n                if (!(obj1 == null ? obj2 == null : obj1.equals(obj2))) {\n                    return false;\n                } \n            }\n            return !((it1.hasNext()) || (it2.hasNext()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"list1","list2":"list2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:187","type":"CtBinaryOperatorImpl"},"failures":[163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186],"tindex":"cdc66a2a-3f43-11e6-a3b2-398c8906d0ec","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1463","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (o instanceof java.lang.Number) {\n        {\n            return containsKey(o);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:187","type":"CtBinaryOperatorImpl"},"failures":[187],"tindex":"cdc66a2b-3f43-11e6-a3b2-fbbed35f3e4e","method":{"position":"org.apache.commons.collections4.ListUtils:654","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<java.util.List<T>> partition(final java.util.List<T> list, final int size) {\n    if (size == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (size <= 0) {\n                throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n            } \n            return new org.apache.commons.collections4.ListUtils.Partition<T>(list , size);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"size"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:141","type":"CtBinaryOperatorImpl"},"failures":[188,189,190,191,192,193],"tindex":"cdc66a2c-3f43-11e6-a3b2-1fd3a74ba77a","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:125","type":"CtMethodImpl","sourcecode":"public boolean add(final E object, final int nCopies) {\n    if (nCopies < 0) {\n        {\n            return getBag().add(transform(object), nCopies);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"initialCapacity":"nCopies"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cdc6913d-3f43-11e6-a3b2-77099101aa1c","method":{"position":"org.apache.commons.collections4.ListUtils:162","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> union(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if (list1 instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.ArrayList<E> java.util.ArrayList<E> = new java.util.ArrayList<E>(list1);\n            result.addAll(list2);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list1"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl"},"failures":[194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,52,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,56,57,59,60,61,63,66,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336],"tindex":"cdc6913e-3f43-11e6-a3b2-31e8ee8e54b9","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:453","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> getEntry(java.lang.Object key) {\n    if (key == null) {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return entry;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1152","type":"CtBinaryOperatorImpl"},"failures":[337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,189,190,360],"tindex":"cdc6b84f-3f43-11e6-a3b2-71a4665cfc50","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:163","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            decorated().add(object, count);\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtBinaryOperatorImpl"},"failures":[361],"tindex":"cdc6df60-3f43-11e6-a3b2-13a84b64637e","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:134","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == coll) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((coll.size()) != (coll.size())) {\n                        {\n                            throw new java.lang.UnsupportedOperationException();\n                        }\n                    } else {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"coll","b":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:568","type":"CtBinaryOperatorImpl"},"failures":[362],"tindex":"cdc6df61-3f43-11e6-a3b2-9970986bef04","method":{"position":"org.apache.commons.collections4.MapUtils:1217","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.util.Map<?, ?> map) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return !(org.apache.commons.collections4.MapUtils.isEmpty(map));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl"},"failures":[66],"tindex":"cdc6df62-3f43-11e6-a3b2-bd845d57b8c2","method":{"position":"org.apache.commons.collections4.map.Flat3Map:437","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(key);\n            } \n            if ((int) == 0) {\n                return null;\n            } \n            if (key == null) {\n                switch (int) {\n                    case 3 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 2;\n                            return old;\n                        } \n                        return null;\n                    case 2 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 1;\n                            return old;\n                        } \n                        if ((K) == null) {\n                            final V V = V;\n                            int = int;\n                            K = K;\n                            V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 1;\n                            return old;\n                        } \n                        return null;\n                    case 1 :\n                        if ((K) == null) {\n                            final V V = V;\n                            int = 0;\n                            K = null;\n                            V = null;\n                            int = 0;\n                            return old;\n                        } \n                }\n            } else {\n                if ((int) > 0) {\n                    final int int = key.hashCode();\n                    switch (int) {\n                        case 3 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 2;\n                                return old;\n                            } \n                            return null;\n                        case 2 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 1;\n                                return old;\n                            } \n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = int;\n                                K = K;\n                                V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 1;\n                                return old;\n                            } \n                            return null;\n                        case 1 :\n                            if (((int) == hashCode) && (key.equals(K))) {\n                                final V V = V;\n                                int = 0;\n                                K = null;\n                                V = null;\n                                int = 0;\n                                return old;\n                            } \n                    }\n                } \n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:391","type":"CtBinaryOperatorImpl"},"failures":[363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,129,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,130,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,131,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,133,493,494,495,496,128,497,498,141,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,134,525,526],"tindex":"cdc72d83-3f43-11e6-a3b2-89b86901acb3","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:54","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Set<java.util.Map.Entry<K, V>> unmodifiableEntrySet(final java.util.Set<java.util.Map.Entry<K, V>> set) {\n    if (set == null) {\n        {\n            if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n                return set;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableEntrySet<K, V>(set);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entrySet":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:916","type":"CtInvocationImpl"},"failures":[],"tindex":"cdc75494-3f43-11e6-a3b2-3fb48b236962","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isBitSet(final java.lang.String key, final int bitIndex, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        {\n            if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((key == null) || (bitIndex >= lengthInBits)) {\n                        return false;\n                    } \n                    final int int = bitIndex / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n                    final int int = bitIndex % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n                    return ((key.charAt(index)) & (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(bit))) != 0;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"bitIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:55","type":"CtBinaryOperatorImpl"},"failures":[527,528],"tindex":"cdc77ba5-3f43-11e6-a3b2-7568a41a1a7d","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:54","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.Trie<K, V> unmodifiableTrie(final org.apache.commons.collections4.Trie<K, ? extends V> trie) {\n    if (trie instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (trie instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.Trie<K, V> org.apache.commons.collections4.Trie<K, V> = ((org.apache.commons.collections4.Trie<K, V>)(trie));\n                return tmpTrie;\n            } \n            return new org.apache.commons.collections4.trie.UnmodifiableTrie<K, V>(trie);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trie":"trie"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1105","type":"CtBinaryOperatorImpl"},"failures":[529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550],"tindex":"cdc77ba6-3f43-11e6-a3b2-7313162a90fe","method":{"position":"org.apache.commons.collections4.CollectionUtils:1104","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.lang.Iterable<? extends C> iterable) {\n    if (iterable instanceof java.util.Collection<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterable instanceof java.util.Collection<?>) {\n                return collection.addAll(((java.util.Collection<? extends C>)(iterable)));\n            } \n            return org.apache.commons.collections4.CollectionUtils.addAll(collection, iterable.iterator());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterable":"iterable"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cdc7a2b7-3f43-11e6-a3b2-a903cdbed20f","method":{"position":"org.apache.commons.collections4.TransformerUtils:227","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I> predicate, final org.apache.commons.collections4.Transformer<? super I, ? extends O> trueTransformer, final org.apache.commons.collections4.Transformer<? super I, ? extends O> falseTransformer) {\n    if (falseTransformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.SwitchTransformer.switchTransformer(new org.apache.commons.collections4.Predicate[]{ predicate }, new org.apache.commons.collections4.Transformer[]{ trueTransformer }, falseTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transform":"falseTransformer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.GrowthList:183","type":"CtBinaryOperatorImpl"},"failures":[360],"tindex":"cdc7a2b8-3f43-11e6-a3b2-af84953f508a","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:143","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count >= count) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"count","index":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:165","type":"CtInvocationImpl"},"failures":[],"tindex":"cdc7a2b9-3f43-11e6-a3b2-39f3d67600c6","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:564","type":"CtMethodImpl","sourcecode":"protected void removeMapping(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(hashIndex)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            (int)++;\n            removeEntry(entry, hashIndex, previous);\n            (int)--;\n            destroyEntry(entry);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"hashIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cdc7c9ca-3f43-11e6-a3b2-01f4e76df6b4","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:313","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) < (coll.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n                changed |= item.retainAll(coll);\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll","coll1":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cdc7c9cb-3f43-11e6-a3b2-119069eef036","method":{"position":"org.apache.commons.collections4.MapUtils:364","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<K, V> map, final K key, final V defaultValue) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                final V V = map.get(key);\n                if (answer != null) {\n                    return answer;\n                } \n            } \n            return defaultValue;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl"},"failures":[551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,361,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580],"tindex":"cdc7c9cc-3f43-11e6-a3b2-9bd02eec6785","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> unmodifiableSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n                return bag;\n            } \n            return new org.apache.commons.collections4.bag.UnmodifiableSortedBag<E>(bag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtBinaryOperatorImpl"},"failures":[581,582],"tindex":"cdc9024d-3f43-11e6-a3b2-d3bbefb192c5","method":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:57","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers, final org.apache.commons.collections4.Transformer<? super I, ? extends O> defaultTransformer) {\n    if (defaultTransformer == null) {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n            if ((predicates.int) != (transformers.int)) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and transformer arrays must be the same size\");\n            } \n            if ((predicates.int) == 0) {\n                return ((org.apache.commons.collections4.Transformer<I, O>)(defaultTransformer == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer() : defaultTransformer));\n            } \n            return new org.apache.commons.collections4.functors.SwitchTransformer<I, O>(predicates , transformers , defaultTransformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transform":"defaultTransformer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl"},"failures":[546],"tindex":"cdc9295e-3f43-11e6-a3b2-8f359fdc339b","method":{"position":"org.apache.commons.collections4.CollectionUtils:1120","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.util.Iterator<? extends C> iterator) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            boolean boolean = false;\n            while (iterator.hasNext()) {\n                changed |= collection.add(iterator.next());\n            }\n            return changed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl"},"failures":[583,584],"tindex":"cdc9295f-3f43-11e6-a3b2-134b95aaaa85","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:186","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            V V = null;\n            if (java.util.Map<K, V>.containsKey(key)) {\n                value = java.util.Map<K, V>.remove(key);\n                java.util.Map<V, K>.remove(value);\n            } \n            return value;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cdc95070-3f43-11e6-a3b2-3d4bffb1edc9","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:645","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.ListOrderedMap.EntrySetView.this)) {\n                return true;\n            } \n            return getEntrySet().equals(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ArrayStack:157","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cdc95071-3f43-11e6-a3b2-356dfad48282","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:281","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (((key == null) && (key == null)) || ((object != null) && (object.equals(current)))) {\n        {\n            if (key == null) {\n                return null;\n            } \n            purgeBeforeWrite();\n            return super.remove(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"current":"key","object":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl"},"failures":[585],"tindex":"cdc95072-3f43-11e6-a3b2-c346e930e7ef","method":{"position":"org.apache.commons.collections4.functors.OnePredicate:52","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(predicates[0]));\n            } \n            return new org.apache.commons.collections4.functors.OnePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:744","type":"CtBinaryOperatorImpl"},"failures":[586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617],"tindex":"cdc97783-3f43-11e6-a3b2-e99965ff29be","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:298","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (mut == null) {\n                return false;\n            } \n            (int)++;\n            java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(object);\n            int -= mut.int;\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"byteObject":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:85","type":"CtInvocationImpl"},"failures":[618,619,620],"tindex":"cdc97784-3f43-11e6-a3b2-b9b461e1adf9","method":{"position":"org.apache.commons.collections4.IteratorUtils:904","type":"CtMethodImpl","sourcecode":"public static <E>java.lang.Iterable<E> asIterable(final java.util.Iterator<? extends E> iterator) {\n    if (iterator.hasNext()) {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorIterable<E>(iterator , false);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtBinaryOperatorImpl"},"failures":[621,622,623,624,625,626,497],"tindex":"cdc97785-3f43-11e6-a3b2-013ffb1698e6","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:631","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> nextSmaller(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement).getLeft(dataElement)) == node) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n            if (node == null) {\n                rval = null;\n            } else if ((node.getLeft(dataElement)) != null) {\n                rval = greatestNode(node.getLeft(dataElement), dataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getParent(dataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n                while ((parent != null) && (child == (parent.getLeft(dataElement)))) {\n                    child = parent;\n                    parent = parent.getParent(dataElement);\n                }\n                rval = parent;\n            }\n            return rval;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl"},"failures":[627,628,629],"tindex":"cdc99e96-3f43-11e6-a3b2-4bdbaf188ed1","method":{"position":"org.apache.commons.collections4.functors.OnePredicate:72","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> onePredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            return new org.apache.commons.collections4.functors.OnePredicate<T>(preds);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:193","type":"CtBinaryOperatorImpl"},"failures":[630,273,284,631,632],"tindex":"cdc99e97-3f43-11e6-a3b2-2be3b95f8e79","method":{"position":"org.apache.commons.collections4.map.LRUMap:224","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void updateEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final V newValue) {\n    if (entry != entry) {\n        {\n            moveToMRU(((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(entry)));\n            entry.setValue(newValue);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry","header":"entry","after":"entry"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.IteratorChain:212","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cdc9c5a8-3f43-11e6-a3b2-991edbf98026","method":{"position":"org.apache.commons.collections4.iterators.IteratorEnumeration:91","type":"CtMethodImpl","sourcecode":"public void setIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.IteratorEnumeration.this.java.util.Iterator<? extends E> = iterator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"currentIterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:111","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cdc9c5a9-3f43-11e6-a3b2-db120f824e52","method":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:109","type":"CtMethodImpl","sourcecode":"public T transform(final java.lang.Class<? extends T> input) {\n    if (input == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            try {\n                if (input == null) {\n                    throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Input object was not an instanceof Class, it was a null object\");\n                } \n                final java.lang.reflect.Constructor<? extends T> java.lang.reflect.Constructor<? extends T> = input.getConstructor(java.lang.Class<?>[]);\n                return con.newInstance(java.lang.Object[]);\n            } catch (final java.lang.NoSuchMethodException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: The constructor must exist and be public \");\n            } catch (final java.lang.InstantiationException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: InstantiationException\" , ex);\n            } catch (final java.lang.IllegalAccessException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Constructor must be public\" , ex);\n            } catch (final java.lang.reflect.InvocationTargetException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Constructor threw an exception\" , ex);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cdc9c5aa-3f43-11e6-a3b2-75b671de5fce","method":{"position":"org.apache.commons.collections4.MapUtils:318","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Double getDouble(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Double) {\n                return ((java.lang.Double)(answer));\n            } \n            return java.lang.Double.valueOf(answer.doubleValue());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtBinaryOperatorImpl"},"failures":[633],"tindex":"cdc9ecbb-3f43-11e6-a3b2-c94e7234f709","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:76","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.Predicate<? super T>[] org.apache.commons.collections4.Predicate<? super T>[] = org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((preds.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((preds.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(preds[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(preds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cdc9ecbc-3f43-11e6-a3b2-05974f732460","method":{"position":"org.apache.commons.collections4.map.LinkedMap:233","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int indexOf(final java.lang.Object obj) {\n    if (obj instanceof java.lang.Object[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.indexOf(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:138","type":"CtBinaryOperatorImpl"},"failures":[634,635,636,637,638,639,126,640,641,642,643,533,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711],"tindex":"cdc9ecbd-3f43-11e6-a3b2-91229f329986","method":{"position":"org.apache.commons.collections4.iterators.IteratorChain:159","type":"CtMethodImpl","sourcecode":"public void addIterator(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        {\n            checkLocked();\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            java.util.Queue<java.util.Iterator<? extends E>>.add(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl"},"failures":[712,713,714],"tindex":"cdca13ce-3f43-11e6-a3b2-3b6ee4fae8fb","method":{"position":"org.apache.commons.collections4.PredicateUtils:451","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> notPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if ((predicate == null) || (predicate == null)) {\n        {\n            return org.apache.commons.collections4.functors.NotPredicate.notPredicate(predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate","predicate2":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:113","type":"CtBinaryOperatorImpl"},"failures":[715],"tindex":"cdca13cf-3f43-11e6-a3b2-918e3883fe65","method":{"position":"org.apache.commons.collections4.CollectionUtils:208","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>java.util.Collection<T> emptyIfNull(final java.util.Collection<T> collection) {\n    if (collection == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return collection == null ? org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.java.util.Collection : collection;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"items":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:139","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cdca13d0-3f43-11e6-a3b2-8dcf1e1268c6","method":{"position":"org.apache.commons.collections4.IteratorUtils:396","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final java.lang.Object array, final int start) {\n    if ((array[start]) == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayListIterator<E>(array , start);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"array","i":"start"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:379","type":"CtBinaryOperatorImpl"},"failures":[716,717,718,719,720,721,722,723,724,725],"tindex":"cdca13d1-3f43-11e6-a3b2-35f19efec6af","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:211","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        {\n            final boolean boolean = decorated().remove(object);\n            if (result) {\n                java.util.List<E>.remove(object);\n            } \n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cdca3ae2-3f43-11e6-a3b2-8147845dc57b","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:344","type":"CtMethodImpl","sourcecode":"public java.lang.Object remove(final int index) {\n    if (index > index) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Object java.lang.Object = java.util.List<E>.remove(index);\n            remove(obj);\n            return obj;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:784","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cdca3ae3-3f43-11e6-a3b2-9dd153ea21ff","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1729","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(inRange(castKey(key)))) {\n                return null;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"integerObject":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl"},"failures":[211,212,213,214,215,726,217,218,219,220,230,231],"tindex":"cdca61f4-3f43-11e6-a3b2-79d84170e28b","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:188","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected int hashEntry(final java.lang.Object key, final java.lang.Object value) {\n    if (key == null) {\n        {\n            return (java.lang.System.identityHashCode(key)) ^ (java.lang.System.identityHashCode(value));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cdca61f5-3f43-11e6-a3b2-d7ed3c571619","method":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.util.Map<?, ?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((org.apache.commons.collections4.comparators.BooleanComparator.this) == object) || ((object instanceof org.apache.commons.collections4.comparators.BooleanComparator) && ((org.apache.commons.collections4.comparators.BooleanComparator.this.boolean) == (((org.apache.commons.collections4.comparators.BooleanComparator)(object)).boolean)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.IllegalArgumentException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:700","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cdca61f6-3f43-11e6-a3b2-b3b62d7bf0f6","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1281","type":"CtMethodImpl","sourcecode":"private void insertValue(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> newNode) throws java.lang.IllegalArgumentException {\n    if (newNode != null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n            while (true) {\n                final int int = org.apache.commons.collections4.bidimap.TreeBidiMap.compare(newNode.getValue(), node.getValue());\n                if (cmp == 0) {\n                    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (newNode.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n                } else if (cmp < 0) {\n                    if ((node.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                        node = node.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                    } else {\n                        node.setLeft(newNode, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                        newNode.setParent(node, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                        doRedBlackInsert(newNode, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                        break;\n                    }\n                } else {\n                    if ((node.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                        node = node.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                    } else {\n                        node.setRight(newNode, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                        newNode.setParent(node, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                        doRedBlackInsert(newNode, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                        break;\n                    }\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IllegalArgumentException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"rval":"newNode"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtBinaryOperatorImpl"},"failures":[727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755],"tindex":"cdcab017-3f43-11e6-a3b2-bd2b21ee6ee0","method":{"position":"org.apache.commons.collections4.set.PredicatedSortedSet:59","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.PredicatedSortedSet<E> predicatedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        {\n            return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(set , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtBinaryOperatorImpl"},"failures":[756,757,127,621,758,759,760,761,762,763,764,765,766,767,768,769,622,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,623,801,624,625,626,802,803,495,496,128,497,804,805,806,807,808,498,141,499,809,500,501,502,503,504,505,506,507,508,810,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,134,525,526],"tindex":"cdcab018-3f43-11e6-a3b2-85a3560871e7","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:823","type":"CtMethodImpl","sourcecode":"private void rotateLeft(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if ((node.getParent(dataElement)) == null) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getRight(dataElement);\n            node.setRight(rightChild.getLeft(dataElement), dataElement);\n            if ((rightChild.getLeft(dataElement)) != null) {\n                rightChild.getLeft(dataElement).setParent(node, dataElement);\n            } \n            rightChild.setParent(node.getParent(dataElement), dataElement);\n            if ((node.getParent(dataElement)) == null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = rightChild;\n            } else if ((node.getParent(dataElement).getLeft(dataElement)) == node) {\n                node.getParent(dataElement).setLeft(rightChild, dataElement);\n            } else {\n                node.getParent(dataElement).setRight(rightChild, dataElement);\n            }\n            rightChild.setLeft(node, dataElement);\n            node.setParent(rightChild, dataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","dataElement":"dataElement"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:404","type":"CtBinaryOperatorImpl"},"failures":[811,161,812,813,814,815],"tindex":"cdcad729-3f43-11e6-a3b2-3f7b58f6ed6e","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:122","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic O transform(final java.lang.Object input) {\n    if (input != null) {\n        {\n            if (input == null) {\n                return null;\n            } \n            try {\n                final java.lang.Class<?> java.lang.Class<?> = input.getClass();\n                final java.lang.reflect.Method java.lang.reflect.Method = cls.getMethod(java.lang.String, java.lang.Class<?>[]);\n                return ((O)(method.invoke(input, java.lang.Object[])));\n            } catch (final java.lang.NoSuchMethodException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' does not exist\"));\n            } catch (final java.lang.IllegalAccessException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' cannot be accessed\"));\n            } catch (final java.lang.reflect.InvocationTargetException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' threw an exception\") , ex);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"expirationTimeObject":"input"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:874","type":"CtBinaryOperatorImpl"},"failures":[816,817],"tindex":"cdcafe3a-3f43-11e6-a3b2-67b712bb3981","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"removeCollection":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:825","type":"CtBinaryOperatorImpl"},"failures":[818],"tindex":"cdcafe3b-3f43-11e6-a3b2-8b6c73e56770","method":{"position":"org.apache.commons.collections4.CollectionUtils:823","type":"CtMethodImpl","sourcecode":"public static <C>int countMatches(final java.lang.Iterable<C> input, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if ((input != null) && (predicate != null)) {\n        {\n            int int = 0;\n            if ((input != null) && (predicate != null)) {\n                for (final C C : input) {\n                    if (predicate.evaluate(o)) {\n                        count++;\n                    } \n                }\n            } \n            return count;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input","predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:157","type":"CtInvocationImpl"},"failures":[819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,465,468,469,471,472,473,476,481,491,858,859,860,861,862,863,864,865,866,867,868,869,583,870,871,872,873,874,875,876,877,878,879,880,881,882,584,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909],"tindex":"cdcafe3c-3f43-11e6-a3b2-e1a270fab6bf","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:264","type":"CtMethodImpl","sourcecode":"protected java.util.Iterator<K> createKeySetIterator(final java.util.Iterator<K> iterator) {\n    if (iterator.hasNext()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySetIterator<K>(iterator , org.apache.commons.collections4.bidimap.AbstractDualBidiMap.this);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"it":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:109","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cdcb254d-3f43-11e6-a3b2-d1e184e44aa3","method":{"position":"org.apache.commons.collections4.MapUtils:108","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<? super K, V> map, final K key) {\n    if (map != null) {\n        {\n            if (map != null) {\n                return map.get(key);\n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:267","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cdcb254e-3f43-11e6-a3b2-0dabe6f6a84b","method":{"position":"org.apache.commons.collections4.ComparatorUtils:135","type":"CtMethodImpl","sourcecode":"public static java.util.Comparator<java.lang.Boolean> booleanComparator(final boolean trueFirst) {\n    if (trueFirst == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.comparators.BooleanComparator.booleanComparator(trueFirst);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isLocked":"trueFirst"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cdcb254f-3f43-11e6-a3b2-2be8188abda1","method":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.collections4.CollectionUtils.isSubCollection(mapToCopy.keySet(), keySet())) {\n                throw new java.lang.IllegalArgumentException(\"Cannot put new key/value pair - Map is fixed size\");\n            } \n            java.util.Map<K, V>.putAll(mapToCopy);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:123","type":"CtBinaryOperatorImpl"},"failures":[910,911,912,913,914,915],"tindex":"cdcb2550-3f43-11e6-a3b2-0fdf5ae8a39e","method":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:121","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> comparatorPredicate(final T object, final java.util.Comparator<T> comparator, final org.apache.commons.collections4.functors.ComparatorPredicate.Criterion criterion) {\n    if (comparator == null) {\n        {\n            if (comparator == null) {\n                throw new java.lang.IllegalArgumentException(\"Comparator must not be null.\");\n            } \n            if (criterion == null) {\n                throw new java.lang.IllegalArgumentException(\"Criterion must not be null.\");\n            } \n            return new org.apache.commons.collections4.functors.ComparatorPredicate<T>(object , comparator , criterion);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtBinaryOperatorImpl"},"failures":[916,917,918,919],"tindex":"cdcb4c61-3f43-11e6-a3b2-2d46d0b53f46","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:589","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final int int = getHash(entry.getKey());\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] ; n != null ; n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                    if (n.equals(entry)) {\n                        org.apache.commons.collections4.map.StaticBucketMap.this.remove(n.getKey());\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:661","type":"CtBinaryOperatorImpl"},"failures":[920,758,759,760,762,804,805,806],"tindex":"cdcb4c62-3f43-11e6-a3b2-19ef86885bef","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:283","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if (value == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(value);\n            return node == null ? null : node.getKey();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"longObject":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cdcb4c63-3f43-11e6-a3b2-33990739c004","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:134","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == coll) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((coll.size()) != (coll.size())) {\n                        {\n                            throw new java.lang.UnsupportedOperationException();\n                        }\n                    } else {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:671","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cdcb7374-3f43-11e6-a3b2-a7b5e24fef6c","method":{"position":"org.apache.commons.collections4.map.Flat3Map:244","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (value != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                {\n                    if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n                        return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsValue(value);\n                    } \n                    if (value == null) {\n                        switch (int) {\n                            case 3 :\n                                if ((V) == null) {\n                                    return true;\n                                } \n                            case 2 :\n                                if ((V) == null) {\n                                    return true;\n                                } \n                            case 1 :\n                                if ((V) == null) {\n                                    return true;\n                                } \n                        }\n                    } else {\n                        switch (int) {\n                            case 3 :\n                                if (value.equals(V)) {\n                                    return true;\n                                } \n                            case 2 :\n                                if (value.equals(V)) {\n                                    return true;\n                                } \n                            case 1 :\n                                if (value.equals(V)) {\n                                    return true;\n                                } \n                        }\n                    }\n                    return false;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key5":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:217","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cdcb7375-3f43-11e6-a3b2-d5d5cac67555","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:77","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E object) {\n    if ((index != (-1)) && (pos != index)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pos":"index","index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:175","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cdcb9a86-3f43-11e6-a3b2-5db30263e06b","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isBitSet(final java.lang.String key, final int bitIndex, final int lengthInBits) {\n    if (lengthInBits == 0) {\n        {\n            if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(bitIndex)) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((key == null) || (bitIndex >= lengthInBits)) {\n                        return false;\n                    } \n                    final int int = bitIndex / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n                    final int int = bitIndex % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n                    return ((key.charAt(index)) & (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(bit))) != 0;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"lengthInBits"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtBinaryOperatorImpl"},"failures":[921],"tindex":"cdcb9a87-3f43-11e6-a3b2-63a50062489a","method":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:45","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nullIsTruePredicate(final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.NullIsTruePredicate<T>(predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtBinaryOperatorImpl"},"failures":[922],"tindex":"cdcb9a88-3f43-11e6-a3b2-d39d44a895b3","method":{"position":"org.apache.commons.collections4.ClosureUtils:331","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> predicatesAndClosures) {\n    if (predicatesAndClosures == null) {\n        {\n            return org.apache.commons.collections4.functors.SwitchClosure.switchClosure(predicatesAndClosures);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicatesAndClosures":"predicatesAndClosures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl"},"failures":[457],"tindex":"cdcb9a89-3f43-11e6-a3b2-af10fbd1afd1","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:120","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"CtBinaryOperatorImpl"},"failures":[0,1,2,3,5,6,7,8,10,11,12,13,14,19,21,24,25,26,28,29,30,33,34,35,36,37,38,39,40,41,42,44,50],"tindex":"cdcbc19a-3f43-11e6-a3b2-41b9d12f54d1","method":{"position":"org.apache.commons.collections4.list.TransformedList:151","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int i) {\n    if (i < 0) {\n        {\n            return new TransformedListIterator(getList().listIterator(i));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bound":"i"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:509","type":"CtBinaryOperatorImpl"},"failures":[923,924],"tindex":"cdcbc19b-3f43-11e6-a3b2-950cf6aa2aed","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:230","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object != null) {\n        {\n            final boolean boolean = java.util.Set<E>.remove(object);\n            if (result) {\n                super.remove(object);\n            } \n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:365","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cdcbc19c-3f43-11e6-a3b2-45a267fe44dd","method":{"position":"org.apache.commons.collections4.SplitMapUtils:59","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return org.apache.commons.collections4.Get<K, V>.containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:362","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cdcbc19d-3f43-11e6-a3b2-ff8e0a105a43","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:134","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (coll == coll) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((coll.size()) != (coll.size())) {\n                        {\n                            throw new java.lang.UnsupportedOperationException();\n                        }\n                    } else {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:124","type":"CtBinaryOperatorImpl"},"failures":[123],"tindex":"cdcbe8ae-3f43-11e6-a3b2-59102b30053a","method":{"position":"org.apache.commons.collections4.IteratorUtils:335","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableIterator<E> arrayIterator(final java.lang.Object array, final int start, final int end) {\n    if (start == (-1)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341756936/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ArrayIterator<E>(array , start , end);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"largestKey":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}