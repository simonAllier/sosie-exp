{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":298,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":501,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContainsAll":573,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":747,"org.apache.commons.collections4.map.DefaultedMapTest.testMapSize":196,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":354,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":689,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":23,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":313,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":338,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":392,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":453,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":652,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":31,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":619,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":592,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":671,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":744,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":391,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":655,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":694,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":545,"org.apache.commons.collections4.map.LazyMapTest.testKeySetClearChangesMap":88,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEqualsNull":681,"org.apache.commons.collections4.map.MultiKeyMapTest.testEqualsNull":19,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":9,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":712,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":309,"org.apache.commons.collections4.CollectionUtilsTest.collect":234,"org.apache.commons.collections4.map.LazySortedMapTest.testLastKey":125,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":81,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":323,"org.apache.commons.collections4.map.LazySortedMapTest.testMakeMap":146,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastEntrySet":173,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking2":408,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":494,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":733,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":55,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":259,"org.apache.commons.collections4.CollectionUtilsTest.get":347,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":604,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":315,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":316,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":713,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":731,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":269,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":552,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":499,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":521,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":252,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":452,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":612,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":277,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetIteratorRemoveChangesMap":189,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":511,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":39,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":305,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":595,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":610,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":249,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":378,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":675,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":247,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":72,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetIteratorRemoveChangesMap":158,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":366,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":422,"org.apache.commons.collections4.map.LazyMapTest.testValuesRetainAll":83,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":589,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":50,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":607,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":624,"org.apache.commons.collections4.TransformerUtilsTest.testInstantiateTransformerNull":693,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking2":755,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":398,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetIteratorRemoveChangesMap":207,"org.apache.commons.collections4.CollectionUtilsTest.transform2":232,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":386,"org.apache.commons.collections4.CollectionUtilsTest.transform1":345,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":445,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":650,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":123,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":253,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":358,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":752,"org.apache.commons.collections4.map.LazyMapTest.testMapPutAll":108,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRetainAll":132,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":337,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":455,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":630,"org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer":73,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":657,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveChangesMap":89,"org.apache.commons.collections4.map.LazyMapTest.testFailFastKeySet":76,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":209,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetClearChangesMap":92,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":529,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":742,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveChangesMap":187,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":433,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":53,"org.apache.commons.collections4.map.LazySortedMapTest.testMapToString":152,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":703,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2":2,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":567,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":621,"org.apache.commons.collections4.map.DefaultedMapTest.testFullMapCompatibility":200,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":326,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":327,"org.apache.commons.collections4.map.DefaultedMapTest.testSimpleSerialization":217,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":325,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":56,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectHashCodeEqualsSelfHashCode":219,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testGetSetComparator":231,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":638,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":649,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":467,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEqualsNull":678,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":319,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullStream":62,"org.apache.commons.collections4.map.LazySortedMapTest.testMapHashCode":133,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":706,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":15,"org.apache.commons.collections4.map.LazyMapTest.testMapPutNullValue":93,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":420,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":69,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":474,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":29,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3":172,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":310,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":475,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":714,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":476,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":263,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":202,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContainsAll":587,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":715,"org.apache.commons.collections4.IteratorUtilsTest.testUnmodifiableIteratorImmutability":1,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectHashCodeEqualsContract":218,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":244,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":466,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":21,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":608,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":634,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":374,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":497,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":299,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":699,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":296,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":267,"org.apache.commons.collections4.map.LazyMapTest.testFullMapCompatibility":102,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":718,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":463,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":493,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":235,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":294,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":387,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":632,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":569,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":489,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":558,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":288,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":599,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":226,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":317,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContainsAll":582,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":46,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":508,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":745,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":491,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":490,"org.apache.commons.collections4.map.ReferenceMapTest.testEqualsNull":28,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":71,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveChangesMap":82,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":486,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":687,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":737,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":487,"org.apache.commons.collections4.map.HashedMapTest.testEqualsNull":24,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":488,"org.apache.commons.collections4.IteratorUtilsTest.testUnmodifiableIteratorIteration":0,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":524,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":67,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":640,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":697,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":40,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":153,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":222,"org.apache.commons.collections4.map.LazyMapTest.testSimpleSerialization":119,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":302,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":340,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":382,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":705,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEqualsNull":26,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":557,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":437,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEqualsNull":30,"org.apache.commons.collections4.map.LazySortedMapTest.testFirstKey":126,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":663,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":38,"org.apache.commons.collections4.ListUtilsTest.testIndexOf":344,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":505,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":37,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":34,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectEqualsSelf":213,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":479,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":728,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":105,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":193,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":287,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":673,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":368,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":606,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":104,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":418,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":416,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":332,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":364,"org.apache.commons.collections4.map.LazyMapTest.testMapPutNullKey":99,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":724,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":70,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":229,"org.apache.commons.collections4.map.DefaultedMapTest.testSerializeDeserializeThenCompare":220,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":385,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":726,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":324,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":419,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":710,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveAll":205,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":729,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":236,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":314,"org.apache.commons.collections4.map.LazySortedMapTest.testEmptyMapCompatibility":149,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":352,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":383,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":425,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":421,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":740,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains1":176,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains2":177,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":320,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":413,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains3":178,"org.apache.commons.collections4.list.TreeListTest.testRemove":404,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRetainAll":154,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":400,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":335,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":377,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":503,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":417,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":502,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate":7,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRemoveChangesMap":143,"org.apache.commons.collections4.map.DefaultedMapTest.testEqualsNull":215,"org.apache.commons.collections4.map.LazySortedMapTest.testSortOrder":124,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":306,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":661,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEqualsNull":679,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":504,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabelAndMap":61,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEqualsNull":682,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":431,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":551,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":430,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":485,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":429,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":674,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking":754,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":470,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":484,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":653,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":283,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":609,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":318,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":414,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":426,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":665,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":427,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":428,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":12,"org.apache.commons.collections4.map.LazySortedMapTest.testEqualsNull":166,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":289,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":330,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":637,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":329,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":328,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":342,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":371,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":447,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":622,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":203,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":541,"org.apache.commons.collections4.map.LRUMapTest.testClone":522,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":690,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":397,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":393,"org.apache.commons.collections4.map.LazyMapTest.testFailFastValues":77,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":628,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove3":185,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":438,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":10,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove2":184,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":641,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove1":183,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":5,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx3":6,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":570,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":510,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectEqualsSelf":164,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":598,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":643,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":43,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":629,"org.apache.commons.collections4.map.DefaultedMapTest.testMakeMap":195,"org.apache.commons.collections4.map.LazyMapTest.testSerializeDeserializeThenCompare":122,"org.apache.commons.collections4.map.DefaultedMapTest.testEmptyMapCompatibility":198,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":722,"org.apache.commons.collections4.CollectionUtilsTest.get1":348,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":662,"org.apache.commons.collections4.map.DefaultedMapTest.testMapToString":201,"org.apache.commons.collections4.map.DefaultedMapTest.testMapHashCode":182,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":262,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":618,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveChangesMap":94,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":701,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":528,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":251,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":312,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":380,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":651,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testInitialCapacityZero":241,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":227,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":403,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":112,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":353,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":691,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":605,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":399,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":577,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":646,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":58,"org.apache.commons.collections4.map.LazyMapTest.testObjectHashCodeEqualsSelfHashCode":121,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":375,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":295,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":707,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":749,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":179,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":280,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveAll":194,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContainsAll":575,"org.apache.commons.collections4.map.LazyMapTest.testEmptyMapCompatibility":100,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":361,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveChangesMap":192,"org.apache.commons.collections4.CollectionUtilsTest.getFromObject":351,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":278,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":307,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectHashCodeEqualsContract":169,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":66,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":395,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRetainAll":113,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":540,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":423,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":451,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":379,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains3":80,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":339,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains2":79,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":666,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":297,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":698,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":230,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains1":78,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":539,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContainsAll":579,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":538,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":41,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":537,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":696,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":549,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":130,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":257,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":571,"org.apache.commons.collections4.map.LazyMapTest.testMapToString":103,"org.apache.commons.collections4.map.LazyMapTest.testMapIsEmpty":106,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":336,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":228,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":743,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContainsAll":578,"org.apache.commons.collections4.map.LazyMapTest.testCanonicalFullCollectionExists":116,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":660,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":559,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":594,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":449,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":695,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":301,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":753,"org.apache.commons.collections4.map.LazyMapTest.testKeySetIteratorRemoveChangesMap":109,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":35,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContainsAll":576,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":54,"org.apache.commons.collections4.map.HashedMapTest.testInitialCapacityZero":240,"org.apache.commons.collections4.map.DefaultedMapTest.testMapIsEmpty":204,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":506,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":406,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":513,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":527,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":369,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":732,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":36,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":311,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":692,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":415,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":735,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":514,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":757,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":483,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":717,"org.apache.commons.collections4.map.LazySortedMapTest.testFullMapCompatibility":151,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":620,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":669,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":47,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":159,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":748,"org.apache.commons.collections4.map.LazyMapTest.testMapSize":98,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":509,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":685,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove1":134,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastValues":175,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove2":135,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove3":136,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":370,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":300,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEqualsNull":680,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicateEx":225,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":461,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":460,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":611,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":459,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":716,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":512,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":758,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":111,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":57,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":454,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":544,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutAll":206,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":49,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":270,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":756,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":548,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRetainAll":162,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectHashCodeEqualsSelfHashCode":170,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":394,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":647,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":741,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":367,"org.apache.commons.collections4.MapUtilsTest.testInvertMap":746,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":686,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":32,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":648,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":468,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":736,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":672,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":526,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":759,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":381,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":442,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":396,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":443,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":444,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":580,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":90,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":243,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":492,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":25,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":543,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetIteratorRemoveChangesMap":140,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":465,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":51,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":389,"org.apache.commons.collections4.map.LazyMapTest.testMapHashCode":84,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":52,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContainsAll":584,"org.apache.commons.collections4.map.HashedMapTest.testClone":734,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":750,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":224,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":519,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":291,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":515,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":555,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":633,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetIteratorRemoveChangesMap":91,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":95,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":341,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":631,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":268,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":44,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":144,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":683,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":265,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":626,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":478,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":542,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":462,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":363,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":482,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":616,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":436,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":642,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":68,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":596,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetClearChangesMap":186,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveChangesMap":138,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":372,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":546,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetClearChangesMap":190,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRetainAll":211,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":591,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":448,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":246,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":613,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":20,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":160,"org.apache.commons.collections4.map.LazySortedMapTest.testMapIsEmpty":155,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":412,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":384,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":254,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":457,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":456,"org.apache.commons.collections4.CollectionUtilsTest.getFromPrimativeArray":350,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":495,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":602,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":458,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":409,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":304,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":590,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":477,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":17,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove3":87,"org.apache.commons.collections4.map.LazyMapTest.testObjectHashCodeEqualsContract":120,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove1":85,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove2":86,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":285,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":74,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContainsAll":574,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":255,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":627,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetClearChangesMap":137,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":388,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":250,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":702,"org.apache.commons.collections4.map.LazyMapTest.testCanonicalEmptyCollectionExists":118,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":658,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":727,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":738,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":208,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":556,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveAll":156,"org.apache.commons.collections4.list.TreeListTest.testBug35258":405,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":532,"org.apache.commons.collections4.CollectionUtilsTest.getFromObjectArray":349,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":446,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":331,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveAll":107,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":266,"org.apache.commons.collections4.map.LazyMapTest.testObjectEqualsSelf":115,"org.apache.commons.collections4.map.LinkedMapTest.testClone":730,"org.apache.commons.collections4.map.LinkedMapTest.testEqualsNull":22,"org.apache.commons.collections4.map.LazyMapTest.testValuesClearChangesMap":114,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":496,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":357,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":676,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutNullValue":191,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":751,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":424,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":464,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":13,"org.apache.commons.collections4.map.DefaultedMapTest.testCanonicalFullCollectionExists":214,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":292,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":376,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":516,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":517,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":518,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":566,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":282,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains1":127,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex3":4,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains2":128,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastKeySet":174,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":260,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":720,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":3,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains3":129,"org.apache.commons.collections4.map.LazySortedMapTest.testCanonicalFullCollectionExists":165,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":520,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":279,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRetainAll":181,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesClearChangesMap":212,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":432,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":554,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":272,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":356,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":625,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":550,"org.apache.commons.collections4.map.LazyMapTest.testFailFastEntrySet":75,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":286,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":656,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":161,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutNullValue":142,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":42,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":256,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":63,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":237,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking":407,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":273,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":568,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":525,"org.apache.commons.collections4.map.DefaultedMapTest.testCanonicalEmptyCollectionExists":216,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":709,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":725,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":645,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":670,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":33,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContainsAll":581,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":659,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":719,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":276,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":275,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":603,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":274,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":365,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":281,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutNullKey":197,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":700,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":667,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":704,"org.apache.commons.collections4.map.LazySortedMapTest.testMapClear":150,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":617,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveAll":139,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":333,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":321,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":498,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":360,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":27,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveChangesMap":180,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetClearChangesMap":141,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":293,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":711,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":48,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":553,"org.apache.commons.collections4.map.LazySortedMapTest.testCanonicalEmptyCollectionExists":167,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":284,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":8,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":523,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":110,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":242,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":440,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":547,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":441,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":362,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":565,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":439,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":507,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":564,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":563,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":233,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":560,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":561,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContainsAll":583,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":562,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":639,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":11,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":359,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveChangesMap":131,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":322,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":210,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContainsAll":585,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":480,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":500,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEqualsNull":677,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":334,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveAll":96,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutAll":157,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":593,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":615,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":401,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":684,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesClearChangesMap":163,"org.apache.commons.collections4.map.DefaultedMapTest.testMapClear":199,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":644,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":708,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":245,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":346,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":471,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":472,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":308,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":355,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":435,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":721,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":623,"org.apache.commons.collections4.map.LazySortedMapTest.testSerializeDeserializeThenCompare":171,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":531,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":258,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":411,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":14,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":248,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":481,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":434,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":601,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":635,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":469,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":600,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":45,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":664,"org.apache.commons.collections4.map.LazyMapTest.testEqualsNull":117,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContainsAll":586,"org.apache.commons.collections4.IteratorUtilsTest.testToArray":343,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":16,"org.apache.commons.collections4.map.LazySortedMapTest.testMapSize":147,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":221,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":614,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":373,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":264,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":668,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":59,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":536,"org.apache.commons.collections4.map.LinkedMapTest.testInitialCapacityZero":239,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":188,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":303,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":636,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":402,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":597,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":739,"org.apache.commons.collections4.map.LazyMapTest.testMakeMap":97,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":534,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":535,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":290,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":64,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":223,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":390,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":271,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":473,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":261,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":450,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":18,"org.apache.commons.collections4.map.LazySortedMapTest.testSimpleSerialization":168,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":410,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx1":572,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":654,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":65,"org.apache.commons.collections4.map.LazyMapTest.testMapClear":101,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":533,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":588,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":238,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":60,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":688,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRemoveAll":145,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutNullKey":148,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":530,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":723},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:336","type":"CtBinaryOperatorImpl"},"failures":[0,1],"tindex":"61274f92-3f48-11e6-84fd-1930ea390acc","method":{"position":"org.apache.commons.collections4.IteratorUtils:446","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Iterator<E> unmodifiableIterator(final java.util.Iterator<E> iterator) {\n    if (iterator == null) {\n        {\n            return org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(iterator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cursor":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1068","type":"CtBinaryOperatorImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15],"tindex":"61279db3-3f48-11e6-84fd-b533c623af67","method":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:122","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic O transform(final java.lang.Object input) {\n    if (input instanceof java.util.Map) {\n        {\n            if (input == null) {\n                return null;\n            } \n            try {\n                final java.lang.Class<?> java.lang.Class<?> = input.getClass();\n                final java.lang.reflect.Method java.lang.reflect.Method = cls.getMethod(java.lang.String, java.lang.Class<?>[]);\n                return ((O)(method.invoke(input, java.lang.Object[])));\n            } catch (final java.lang.NoSuchMethodException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' does not exist\"));\n            } catch (final java.lang.IllegalAccessException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' cannot be accessed\"));\n            } catch (final java.lang.reflect.InvocationTargetException ex) {\n                throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method '\" + (java.lang.String)) + \"' on '\") + (input.getClass())) + \"' threw an exception\") , ex);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"input"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtBinaryOperatorImpl"},"failures":[16],"tindex":"6127c4c4-3f48-11e6-84fd-5dc33b12d082","method":{"position":"org.apache.commons.collections4.ListUtils:574","type":"CtMethodImpl","sourcecode":"public static java.lang.String longestCommonSubsequence(final java.lang.CharSequence a, final java.lang.CharSequence b) {\n    if ((b == null) || (b == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"CharSequence must not be null\");\n            } \n            final java.util.List<java.lang.Character> java.util.List<java.lang.Character> = org.apache.commons.collections4.ListUtils.longestCommonSubsequence(new org.apache.commons.collections4.ListUtils.CharSequenceAsList(a), new org.apache.commons.collections4.ListUtils.CharSequenceAsList(b));\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            for (java.lang.Character java.lang.Character : lcs) {\n                sb.append(ch);\n            }\n            return sb.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"6127c4c5-3f48-11e6-84fd-cbc7031e848c","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl"},"failures":[17],"tindex":"6127ebd6-3f48-11e6-84fd-8725e138c332","method":{"position":"org.apache.commons.collections4.CollectionUtils:1749","type":"CtMethodImpl","sourcecode":"public static <C>java.util.Collection<C> predicatedCollection(final java.util.Collection<C> collection, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            return org.apache.commons.collections4.collection.PredicatedCollection.predicatedCollection(collection, predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:764","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"6127ebd7-3f48-11e6-84fd-8551d3c1efab","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:119","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.set.ListOrderedSet<E> listOrderedSet(final java.util.List<E> list) {\n    if (list == null) {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            final java.util.Set<E> java.util.Set<E> = new java.util.HashSet<E>(list);\n            list.retainAll(set);\n            return new org.apache.commons.collections4.set.ListOrderedSet<E>(set , list);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl"},"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],"tindex":"6127ebd8-3f48-11e6-84fd-6928ec07d182","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1309","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj != null) {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractHashedMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            if ((map.size()) != (size())) {\n                return false;\n            } \n            final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = mapIterator();\n            try {\n                while (it.hasNext()) {\n                    final java.lang.Object java.lang.Object = it.next();\n                    final java.lang.Object java.lang.Object = it.getValue();\n                    if (value == null) {\n                        if (((map.get(key)) != null) || ((map.containsKey(key)) == false)) {\n                            return false;\n                        } \n                    } else {\n                        if ((value.equals(map.get(key))) == false) {\n                            return false;\n                        } \n                    }\n                }\n            } catch (final java.lang.ClassCastException ignored) {\n                return false;\n            } catch (final java.lang.NullPointerException ignored) {\n                return false;\n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:94","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"612812e9-3f48-11e6-84fd-fd310b7300ee","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2207","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected boolean inFromRange(final K key, final boolean forceInclusive) {\n    if (forceInclusive == true) {\n        {\n            return getKeyAnalyzer().isPrefix(K, int, int, key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"reverse":"forceInclusive"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"612812ea-3f48-11e6-84fd-5d36294be2d7","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:342","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) < (coll.size())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            if (coll != null) {\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final boolean boolean = remove(i.next(), 1);\n                    result = result || changed;\n                }\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll","coll1":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:174","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"612812eb-3f48-11e6-84fd-f716b2472907","method":{"position":"org.apache.commons.collections4.map.LinkedMap:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K get(final int index) {\n    if ((index == 0) || (index == 0)) {\n        {\n            return org.apache.commons.collections4.map.LinkedMap<K, ?>.get(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"m":"index","n":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:548","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"612812ec-3f48-11e6-84fd-a7c801d97d7c","method":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.keyvalue.DefaultKeyValue.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n                return false;\n            } \n            final org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?> org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?> = ((org.apache.commons.collections4.keyvalue.DefaultKeyValue<?, ?>)(obj));\n            return ((getKey()) == null ? (other.getKey()) == null : getKey().equals(other.getKey())) && ((getValue()) == null ? (other.getValue()) == null : getValue().equals(other.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"612839fd-3f48-11e6-84fd-a18324ea92a7","method":{"position":"org.apache.commons.collections4.ListUtils:162","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> union(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if (list1 instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.ArrayList<E> java.util.ArrayList<E> = new java.util.ArrayList<E>(list1);\n            result.addAll(list2);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list1"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl"},"failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],"tindex":"612839fe-3f48-11e6-84fd-6b89957d367d","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:281","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                return null;\n            } \n            purgeBeforeWrite();\n            return super.remove(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtBinaryOperatorImpl"},"failures":[61,62,63,64,65,66,67,68,69],"tindex":"612839ff-3f48-11e6-84fd-b90978b63a85","method":{"position":"org.apache.commons.collections4.MapUtils:915","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\npublic static void verbosePrint(final java.io.PrintStream out, final java.lang.Object label, final java.util.Map<?, ?> map) {\n    if ((label instanceof java.util.Map) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.MapUtils.verbosePrintInternal(out, label, map, new org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>(), false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"label"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:126","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"61283a00-3f48-11e6-84fd-41ef97cc4ccc","method":{"position":"org.apache.commons.collections4.MapUtils:466","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Short getShort(final java.util.Map<? super K, ?> map, final K key, final java.lang.Short defaultValue) {\n    if (map != null) {\n        {\n            java.lang.Short java.lang.Short = org.apache.commons.collections4.MapUtils.getShort(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl"},"failures":[70,71],"tindex":"61286011-3f48-11e6-84fd-7369fc57dd48","method":{"position":"org.apache.commons.collections4.map.LinkedMap:143","type":"CtMethodImpl","sourcecode":"public K get(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getEntry(index).getKey();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ChainedClosure:68","type":"CtBinaryOperatorImpl"},"failures":[72],"tindex":"61286012-3f48-11e6-84fd-e77bcd36e3eb","method":{"position":"org.apache.commons.collections4.ClosureUtils:218","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final java.util.Collection<org.apache.commons.collections4.Closure<E>> closures) {\n    if (closures == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(closures);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:549","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"61286013-3f48-11e6-84fd-21216711eec8","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:948","type":"CtMethodImpl","sourcecode":"private void doRedBlackDelete(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> deletedNode) {\n    if (deletedNode != null) {\n        {\n            if (deletedNode == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    for (final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement : org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.values()) {\n                        if (((deletedNode.getLeft(dataElement)) != null) && ((deletedNode.getRight(dataElement)) != null)) {\n                            swapPosition(nextGreater(deletedNode, dataElement), deletedNode, dataElement);\n                        } \n                        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = (deletedNode.getLeft(dataElement)) != null ? deletedNode.getLeft(dataElement) : deletedNode.getRight(dataElement);\n                        if (replacement != null) {\n                            replacement.setParent(deletedNode.getParent(dataElement), dataElement);\n                            if ((deletedNode.getParent(dataElement)) == null) {\n                                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = replacement;\n                            } else if (deletedNode == (deletedNode.getParent(dataElement).getLeft(dataElement))) {\n                                deletedNode.getParent(dataElement).setLeft(replacement, dataElement);\n                            } else {\n                                deletedNode.getParent(dataElement).setRight(replacement, dataElement);\n                            }\n                            deletedNode.setLeft(null, dataElement);\n                            deletedNode.setRight(null, dataElement);\n                            deletedNode.setParent(null, dataElement);\n                            if (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(deletedNode, dataElement)) {\n                                doRedBlackDeleteFixup(replacement, dataElement);\n                            } \n                        } else {\n                            if ((deletedNode.getParent(dataElement)) == null) {\n                                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = null;\n                            } else {\n                                if (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(deletedNode, dataElement)) {\n                                    doRedBlackDeleteFixup(deletedNode, dataElement);\n                                } \n                                if ((deletedNode.getParent(dataElement)) != null) {\n                                    if (deletedNode == (deletedNode.getParent(dataElement).getLeft(dataElement))) {\n                                        deletedNode.getParent(dataElement).setLeft(null, dataElement);\n                                    } else {\n                                        deletedNode.getParent(dataElement).setRight(null, dataElement);\n                                    }\n                                    deletedNode.setParent(null, dataElement);\n                                } \n                            }\n                        }\n                    }\n                    shrink();\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"deletedNode"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"61288724-3f48-11e6-84fd-67d12b2521f2","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:231","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if ((map.size()) != 1) {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1071","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"61288725-3f48-11e6-84fd-efddef785853","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:316","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key instanceof org.w3c.dom.NodeList) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        if (null == prev) {\n                            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash] = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        } else {\n                            prev.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                        }\n                        (org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash].int)--;\n                        return n.V;\n                    } \n                    prev = n;\n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1242","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"6128ae36-3f48-11e6-84fd-3f31ddbc0398","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:758","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            while (true) {\n                org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                if (child.isEmpty()) {\n                    child = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n                } \n                if ((child.int) <= (node.int)) {\n                    return child;\n                } \n                node = child;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtBinaryOperatorImpl"},"failures":[73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220],"tindex":"6128ae37-3f48-11e6-84fd-0b6fb6dd51b7","method":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:47","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> factoryTransformer(final org.apache.commons.collections4.Factory<? extends O> factory) {\n    if (factory == null) {\n        {\n            if (factory == null) {\n                throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.FactoryTransformer<I, O>(factory);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl"},"failures":[221,222,223,224],"tindex":"6128ae38-3f48-11e6-84fd-a1e13c0cafdc","method":{"position":"org.apache.commons.collections4.map.CompositeMap:223","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if (null == value) {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsValue(value)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl"},"failures":[225],"tindex":"6128ae39-3f48-11e6-84fd-737917cccee6","method":{"position":"org.apache.commons.collections4.functors.OrPredicate:48","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> orPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate2 == null) || (predicate1 == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((predicate1 == null) || (predicate2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.OrPredicate<T>(predicate1 , predicate2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate2","predicate2":"predicate1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:167","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"6128d54a-3f48-11e6-84fd-91d73fa140d6","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:90","type":"CtMethodImpl","sourcecode":"public static <J, K, U, V>org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V> transformingMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super J, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super U, ? extends V> valueTransformer) {\n    return new org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>(map , keyTransformer , valueTransformer);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:74","type":"CtBinaryOperatorImpl"},"failures":[226,227,228],"tindex":"6128d54b-3f48-11e6-84fd-5d746e384242","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:404","type":"CtMethodImpl","sourcecode":"public java.util.Iterator<V> iterator(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (!(containsKey(key))) {\n                return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n            } \n            return new ValuesIterator(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"result":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl"},"failures":[229],"tindex":"6128d54c-3f48-11e6-84fd-696f4baf0289","method":{"position":"org.apache.commons.collections4.map.LinkedMap:164","type":"CtMethodImpl","sourcecode":"public int indexOf(java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            int int = 0;\n            for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> , i++) {\n                if (isEqualKey(key, entry.java.lang.Object)) {\n                    return i;\n                } \n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"6128d54d-3f48-11e6-84fd-bf40834e9cee","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:713","type":"CtMethodImpl","sourcecode":"protected int entryHashCode(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry) {\n    if ((entry.getValue()) == null) {\n        {\n            return entry.int;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"entry"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:109","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"6128d54e-3f48-11e6-84fd-371d38f5a999","method":{"position":"org.apache.commons.collections4.MapUtils:108","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<? super K, V> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                return map.get(key);\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtBinaryOperatorImpl"},"failures":[230,231],"tindex":"6128fc5f-3f48-11e6-84fd-4bbb07005f90","method":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:224","type":"CtMethodImpl","sourcecode":"public void setComparator(final java.util.Comparator<? super E> comp) {\n    if (comp == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            checkNotStarted();\n            java.util.Comparator<? super E> = comp;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comp"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"6128fc60-3f48-11e6-84fd-2163eac5b63b","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:238","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(e.getKey(), e.getValue());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:782","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"6128fc61-3f48-11e6-84fd-736230b82b3b","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1415","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            if ((contains(obj)) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(entry.getKey());\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1065","type":"CtBinaryOperatorImpl"},"failures":[232,233,234],"tindex":"6128fc62-3f48-11e6-84fd-435b2515cc79","method":{"position":"org.apache.commons.collections4.CollectionUtils:1063","type":"CtMethodImpl","sourcecode":"public static <I, O, R extends java.util.Collection<? super O>>R collect(final java.util.Iterator<? extends I> inputIterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer, final R outputCollection) {\n    if ((inputIterator != null) && (transformer != null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((inputIterator != null) && (transformer != null)) {\n                while (inputIterator.hasNext()) {\n                    final I I = inputIterator.next();\n                    final O O = transformer.transform(item);\n                    outputCollection.add(value);\n                }\n            } \n            return outputCollection;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inputIterator":"inputIterator","transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:607","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"6128fc63-3f48-11e6-84fd-355ea0f86745","method":{"position":"org.apache.commons.collections4.map.SingletonMap:287","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"byteObject":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1068","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"6128fc64-3f48-11e6-84fd-8fc5d2b91aaf","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:645","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (null != obj) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof java.util.Map) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (obj == (org.apache.commons.collections4.map.ListOrderedMap.EntrySetView.this)) {\n                        return true;\n                    } \n                    return getEntrySet().equals(obj);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"61292375-3f48-11e6-84fd-f9b42e10085b","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:948","type":"CtMethodImpl","sourcecode":"private void doRedBlackDelete(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> deletedNode) {\n    if (deletedNode != null) {\n        {\n            if (deletedNode == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    for (final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement : org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.values()) {\n                        if (((deletedNode.getLeft(dataElement)) != null) && ((deletedNode.getRight(dataElement)) != null)) {\n                            swapPosition(nextGreater(deletedNode, dataElement), deletedNode, dataElement);\n                        } \n                        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = (deletedNode.getLeft(dataElement)) != null ? deletedNode.getLeft(dataElement) : deletedNode.getRight(dataElement);\n                        if (replacement != null) {\n                            replacement.setParent(deletedNode.getParent(dataElement), dataElement);\n                            if ((deletedNode.getParent(dataElement)) == null) {\n                                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = replacement;\n                            } else if (deletedNode == (deletedNode.getParent(dataElement).getLeft(dataElement))) {\n                                deletedNode.getParent(dataElement).setLeft(replacement, dataElement);\n                            } else {\n                                deletedNode.getParent(dataElement).setRight(replacement, dataElement);\n                            }\n                            deletedNode.setLeft(null, dataElement);\n                            deletedNode.setRight(null, dataElement);\n                            deletedNode.setParent(null, dataElement);\n                            if (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(deletedNode, dataElement)) {\n                                doRedBlackDeleteFixup(replacement, dataElement);\n                            } \n                        } else {\n                            if ((deletedNode.getParent(dataElement)) == null) {\n                                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = null;\n                            } else {\n                                if (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(deletedNode, dataElement)) {\n                                    doRedBlackDeleteFixup(deletedNode, dataElement);\n                                } \n                                if ((deletedNode.getParent(dataElement)) != null) {\n                                    if (deletedNode == (deletedNode.getParent(dataElement).getLeft(dataElement))) {\n                                        deletedNode.getParent(dataElement).setLeft(null, dataElement);\n                                    } else {\n                                        deletedNode.getParent(dataElement).setRight(null, dataElement);\n                                    }\n                                    deletedNode.setParent(null, dataElement);\n                                } \n                            }\n                        }\n                    }\n                    shrink();\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"to":"deletedNode"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.TransformedCollection:110","type":"CtBinaryOperatorImpl"},"failures":[235],"tindex":"61292376-3f48-11e6-84fd-494ce7e15f8e","method":{"position":"org.apache.commons.collections4.BagUtils:236","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> transformingSortedBag(final org.apache.commons.collections4.SortedBag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.TransformedSortedBag.transformingSortedBag(bag, transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:86","type":"CtInvocationImpl"},"failures":[236,237,238],"tindex":"61292377-3f48-11e6-84fd-0505e6eeb331","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:71","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.SetUniqueList<E> setUniqueList(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (list.isEmpty()) {\n                return new org.apache.commons.collections4.list.SetUniqueList<E>(list , new java.util.HashSet<E>());\n            } \n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(list);\n            list.clear();\n            final org.apache.commons.collections4.list.SetUniqueList<E> org.apache.commons.collections4.list.SetUniqueList<E> = new org.apache.commons.collections4.list.SetUniqueList<E>(list , new java.util.HashSet<E>());\n            sl.addAll(temp);\n            return sl;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:571","type":"CtBinaryOperatorImpl"},"failures":[239,240,241],"tindex":"61294a88-3f48-11e6-84fd-0bd6f7d76def","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:663","type":"CtMethodImpl","sourcecode":"protected int calculateNewCapacity(final int proposedCapacity) {\n    if (proposedCapacity == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 1;\n            if (proposedCapacity > (org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n                newCapacity = org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.int;\n            } else {\n                while (newCapacity < proposedCapacity) {\n                    newCapacity <<= 1;\n                }\n                if (newCapacity > (org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n                    newCapacity = org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.int;\n                } \n            }\n            return newCapacity;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cmp":"proposedCapacity"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtBinaryOperatorImpl"},"failures":[242,243],"tindex":"61294a89-3f48-11e6-84fd-0919516070fd","method":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:57","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers, final org.apache.commons.collections4.Transformer<? super I, ? extends O> defaultTransformer) {\n    if (defaultTransformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n            if ((predicates.int) != (transformers.int)) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and transformer arrays must be the same size\");\n            } \n            if ((predicates.int) == 0) {\n                return ((org.apache.commons.collections4.Transformer<I, O>)(defaultTransformer == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer() : defaultTransformer));\n            } \n            return new org.apache.commons.collections4.functors.SwitchTransformer<I, O>(predicates , transformers , defaultTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transform":"defaultTransformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtBinaryOperatorImpl"},"failures":[244,245],"tindex":"61294a8a-3f48-11e6-84fd-6ff6e048949a","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:230","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        {\n            final boolean boolean = java.util.Set<E>.remove(object);\n            if (result) {\n                super.remove(object);\n            } \n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtBinaryOperatorImpl"},"failures":[246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342],"tindex":"61294a8b-3f48-11e6-84fd-b1b131bc4c3f","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:755","type":"CtMethodImpl","sourcecode":"private static void makeRed(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node != null) {\n                node.setRed(dataElement);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1086","type":"CtBinaryOperatorImpl"},"failures":[343],"tindex":"61294a8c-3f48-11e6-84fd-8bd022ec5265","method":{"position":"org.apache.commons.collections4.IteratorUtils:955","type":"CtMethodImpl","sourcecode":"public static java.lang.Object[] toArray(final java.util.Iterator<?> iterator) {\n    if (iterator != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            final java.util.List<?> java.util.List<?> = org.apache.commons.collections4.IteratorUtils.toList(iterator, 100);\n            return list.toArray();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"it":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:140","type":"CtInvocationImpl"},"failures":[344],"tindex":"6129719d-3f48-11e6-84fd-27df8478080f","method":{"position":"org.apache.commons.collections4.ListUtils:508","type":"CtMethodImpl","sourcecode":"public static <E>int indexOf(final java.util.List<E> list, final org.apache.commons.collections4.Predicate<E> predicate) {\n    if (list.isEmpty()) {\n        {\n            if ((list != null) && (predicate != null)) {\n                for (int int = 0 ; i < (list.size()) ; i++) {\n                    final E E = list.get(i);\n                    if (predicate.evaluate(item)) {\n                        return i;\n                    } \n                }\n            } \n            return -1;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:798","type":"CtBinaryOperatorImpl"},"failures":[345],"tindex":"6129719e-3f48-11e6-84fd-51fd67f3df96","method":{"position":"org.apache.commons.collections4.CollectionUtils:795","type":"CtMethodImpl","sourcecode":"public static <C>void transform(final java.util.Collection<C> collection, final org.apache.commons.collections4.Transformer<? super C, ? extends C> transformer) {\n    if ((collection != null) && (transformer != null)) {\n        {\n            if ((collection != null) && (transformer != null)) {\n                if (collection instanceof java.util.List<?>) {\n                    final java.util.List<C> java.util.List<C> = ((java.util.List<C>)(collection));\n                    for (final java.util.ListIterator<C> java.util.ListIterator<C> = list.listIterator() ; it.hasNext() ; ) {\n                        it.set(transformer.transform(it.next()));\n                    }\n                } else {\n                    final java.util.Collection<C> java.util.Collection<C> = org.apache.commons.collections4.CollectionUtils.collect(collection, transformer);\n                    collection.clear();\n                    collection.addAll(resultCollection);\n                }\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer","collection":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:138","type":"CtBinaryOperatorImpl"},"failures":[346,347,348,349,350,351],"tindex":"6129719f-3f48-11e6-84fd-4b6042c1337b","method":{"position":"org.apache.commons.collections4.CollectionUtils:1250","type":"CtMethodImpl","sourcecode":"public static java.lang.Object get(final java.lang.Object object, final int index) {\n    if (index == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = index;\n            if (i < 0) {\n                throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + i));\n            } \n            if (object instanceof java.util.Map<?, ?>) {\n                final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(object));\n                final java.util.Iterator<?> java.util.Iterator<?> = map.entrySet().iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.lang.Object[]) {\n                return ((java.lang.Object[])(object))[i];\n            } else if (object instanceof java.util.Iterator<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(object));\n                while (it.hasNext()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.next();\n                    } \n                    it.next();\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object instanceof java.util.Collection<?>) {\n                final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(object)).iterator();\n                return org.apache.commons.collections4.CollectionUtils.get(iterator, i);\n            } else if (object instanceof java.util.Enumeration<?>) {\n                final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(object));\n                while (it.hasMoreElements()) {\n                    i--;\n                    if (i == (-1)) {\n                        return it.nextElement();\n                    } else {\n                        it.nextElement();\n                    }\n                }\n                throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + i));\n            } else if (object == null) {\n                throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n            } else {\n                try {\n                    return java.lang.reflect.Array.get(object, i);\n                } catch (final java.lang.IllegalArgumentException ex) {\n                    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:184","type":"CtInvocationImpl"},"failures":[352],"tindex":"612998b0-3f48-11e6-84fd-f116d5de4acb","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:183","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Map<K, V> transformMap(final java.util.Map<? extends J, ? extends U> map) {\n    if (map.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map.isEmpty()) {\n                {\n                    if (map.isEmpty()) {\n                        return ((java.util.Map<K, V>)(map));\n                    } \n                    final java.util.Map<K, V> java.util.Map<K, V> = new org.apache.commons.collections4.map.LinkedMap<K, V>(map.size());\n                    for (final java.util.Map.Entry<? extends J, ? extends U> java.util.Map.Entry<? extends J, ? extends U> : map.entrySet()) {\n                        result.put(transformKey(entry.getKey()), transformValue(entry.getValue()));\n                    }\n                    return result;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:117","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"612998b1-3f48-11e6-84fd-bf2441dcf20c","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll == coll) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"coll","set1":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:157","type":"CtInvocationImpl"},"failures":[353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402],"tindex":"612998b2-3f48-11e6-84fd-0fa730e65aaf","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:264","type":"CtMethodImpl","sourcecode":"protected java.util.Iterator<K> createKeySetIterator(final java.util.Iterator<K> iterator) {\n    if (iterator.hasNext()) {\n        {\n            return new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySetIterator<K>(iterator , org.apache.commons.collections4.bidimap.AbstractDualBidiMap.this);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"it":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:136","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"612998b3-3f48-11e6-84fd-05368daeabdf","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:94","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll instanceof org.apache.commons.collections4.Bag) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"612998b4-3f48-11e6-84fd-9b3e230c6d2e","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:413","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Collection<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((obj instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n                return false;\n            } \n            return (((org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger)(obj)).int) == (int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:295","type":"CtBinaryOperatorImpl"},"failures":[403],"tindex":"6129bfc5-3f48-11e6-84fd-3b0b772b42fa","method":{"position":"org.apache.commons.collections4.CollectionUtils:1642","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Collection<java.util.List<E>> permutations(final java.util.Collection<E> collection) {\n    if (collection == null) {\n        {\n            final org.apache.commons.collections4.iterators.PermutationIterator<E> org.apache.commons.collections4.iterators.PermutationIterator<E> = new org.apache.commons.collections4.iterators.PermutationIterator<E>(collection);\n            final java.util.Collection<java.util.List<E>> java.util.Collection<java.util.List<E>> = new java.util.LinkedList<java.util.List<E>>();\n            while (it.hasNext()) {\n                result.add(it.next());\n            }\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"values":"collection"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:627","type":"CtBinaryOperatorImpl"},"failures":[404,405,406,407,408,409,410,411,412,413,414,415,416,417],"tindex":"6129bfc6-3f48-11e6-84fd-fb64cf7ae2b0","method":{"position":"org.apache.commons.collections4.list.TreeList:258","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index <= index) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            (int)++;\n            checkInterval(index, 0, ((size()) - 1));\n            final E E = get(index);\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(index);\n            (int)--;\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"oldCapacity":"index","newCapacity":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl"},"failures":[418,419,420,421,18,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,20,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,21,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,23,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,25,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,27,498,499,500,501,36,502,503,504,37,38,505,41,42,43,44,45,46,506,507,508,509,510,511,29,512,513,514,515,50,516,517,518,51,52,519,55,56,57,58,59,60,520,521,522,523,524,525,526,527,528,31,529,530,531,532,533,534,535,536,537,538,539,540,541,542],"tindex":"6129bfc7-3f48-11e6-84fd-a73a52cc1ed3","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:453","type":"CtMethodImpl","sourcecode":"protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> getEntry(java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return entry;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"6129e6d8-3f48-11e6-84fd-2dd549aa9226","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1729","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(inRange(castKey(key)))) {\n                return null;\n            } \n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:309","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"6129e6d9-3f48-11e6-84fd-3bbe724a8763","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:645","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (null != obj) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof java.util.Map) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (obj == (org.apache.commons.collections4.map.ListOrderedMap.EntrySetView.this)) {\n                        return true;\n                    } \n                    return getEntrySet().equals(obj);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"orderingBits":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:724","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"6129e6da-3f48-11e6-84fd-39598ad8bd48","method":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:79","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal K castKey(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((K)(key));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"booleanObject":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:724","type":"CtBinaryOperatorImpl"},"failures":[246,247,248,249,250,251,256,257,258,252,253,254,255,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,300,301,302,294,295,296,297,298,299,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342],"tindex":"6129e6db-3f48-11e6-84fd-37091463b94b","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:195","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupKey(key);\n            return node == null ? null : node.getValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"booleanObject":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtBinaryOperatorImpl"},"failures":[543],"tindex":"6129e6dc-3f48-11e6-84fd-21f4ce8c2a08","method":{"position":"org.apache.commons.collections4.QueueUtils:55","type":"CtMethodImpl","sourcecode":"public static <E>java.util.Queue<E> unmodifiableQueue(final java.util.Queue<? extends E> queue) {\n    if (queue instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.queue.UnmodifiableQueue.unmodifiableQueue(queue);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"queue":"queue"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:689","type":"CtBinaryOperatorImpl"},"failures":[544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571],"tindex":"612a0ded-3f48-11e6-84fd-3d6428399149","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:610","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node == null) {\n        {\n            if (node == null) {\n                return firstEntry();\n            } else {\n                return nextEntryImpl(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node, null);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"current":"node","right":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:584","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"612a0dee-3f48-11e6-84fd-e3f351ebca1c","method":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:50","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.bag.SynchronizedBag<E> synchronizedBag(final org.apache.commons.collections4.Bag<E> bag) {\n    return new org.apache.commons.collections4.bag.SynchronizedBag<E>(bag);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"bag"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:721","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"612a0def-3f48-11e6-84fd-1f6187706dbe","method":{"position":"org.apache.commons.collections4.IteratorUtils:718","type":"CtMethodImpl","sourcecode":"public static <E>java.util.ListIterator<E> filteredListIterator(final java.util.ListIterator<? extends E> listIterator, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (listIterator == null) {\n        {\n            if (listIterator == null) {\n                throw new java.lang.NullPointerException(\"ListIterator must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.NullPointerException(\"Predicate must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.FilterListIterator<E>(listIterator , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"listIterator":"listIterator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:136","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"612a0df0-3f48-11e6-84fd-81d7d80ef224","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:708","type":"CtMethodImpl","sourcecode":"protected <T>java.lang.Object toReference(final org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength type, final T referent, final int hash) {\n    if (hash == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (type == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength)) {\n                return referent;\n            } \n            if (type == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength)) {\n                return new org.apache.commons.collections4.map.AbstractReferenceMap.SoftRef<T>(hash , referent , org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.java.lang.ref.ReferenceQueue<java.lang.Object>);\n            } \n            if (type == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength)) {\n                return new org.apache.commons.collections4.map.AbstractReferenceMap.WeakRef<T>(hash , referent , org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.java.lang.ref.ReferenceQueue<java.lang.Object>);\n            } \n            throw new java.lang.Error();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cacheSize":"hash"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:159","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"612a0df1-3f48-11e6-84fd-bf4f1c284a02","method":{"position":"org.apache.commons.collections4.IteratorUtils:378","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.ResettableListIterator<E> arrayListIterator(final E[] array, final int start) {\n    if (start < start) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>(array , start);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"start","end":"start"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.IndexOutOfBoundsException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:312","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"612a3502-3f48-11e6-84fd-c58c389cf91d","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:167","type":"CtMethodImpl","sourcecode":"public void setComparator(final int index, final java.util.Comparator<E> comparator) throws java.lang.IndexOutOfBoundsException {\n    if (index == 0) {\n        {\n            setComparator(index, comparator, false);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IndexOutOfBoundsException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeCount":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"612a3503-3f48-11e6-84fd-b5e9ecf71023","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:57","type":"CtMethodImpl","sourcecode":"static boolean isOutOfBoundsIndex(final int bitIndex) {\n    if (((bitIndex % bitIndex) != 0) || ((bitIndex % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n        {\n            return bitIndex == (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.int);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"offsetInBits":"bitIndex","lengthInBits":"bitIndex","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"bitIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"612a3504-3f48-11e6-84fd-5bc258b90037","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:978","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E obj) {\n    if (index == (-1)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            rangeCheck(index, ((int) + 1));\n            checkModCount();\n            org.apache.commons.collections4.list.AbstractLinkedList<E>.add((index + (int)), obj);\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            (int)++;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:48","type":"CtBinaryOperatorImpl"},"failures":[572],"tindex":"612a3505-3f48-11e6-84fd-05269d0b2e14","method":{"position":"org.apache.commons.collections4.PredicateUtils:469","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> asPredicate(final org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean> transformer) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.TransformerPredicate.transformerPredicate(transformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtBinaryOperatorImpl"},"failures":[573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,353,354,356,357,358,360,589,590,361,260,261,263,264,265,268,362,363,364,365,366,368,369,370,371,372,373,375,591,376,377,379,380,381,383,592,593,384,594,385,386,388,389,390,392,595,596,393,597,394,395,397,398,399,401,598,599,402,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676],"tindex":"612a3506-3f48-11e6-84fd-63290cca0301","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:135","type":"CtMethodImpl","sourcecode":"public boolean containsAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) == 0) {\n        {\n            return decorated().containsAll(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"612a3507-3f48-11e6-84fd-276eebdaca49","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:285","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.Object object) {\n    if (object instanceof java.util.Map) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<E>.indexOf(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"612a5c18-3f48-11e6-84fd-53e841f94c17","method":{"position":"org.apache.commons.collections4.MapUtils:742","type":"CtMethodImpl","sourcecode":"public static <K>byte getByteValue(final java.util.Map<? super K, ?> map, final K key, final byte defaultValue) {\n    if (map != null) {\n        {\n            final java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.getByte(map, key);\n            if (byteObject == null) {\n                return defaultValue;\n            } \n            return byteObject.byteValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:538","type":"CtBinaryOperatorImpl"},"failures":[358,677,366,678,373,679,381,680,390,681,399,682],"tindex":"612a5c19-3f48-11e6-84fd-35f4e56ddeb1","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof java.util.Map) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<K, V>.equals(obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:239","type":"CtBinaryOperatorImpl"},"failures":[683,684,685,686,687,688],"tindex":"612a5c1a-3f48-11e6-84fd-c30b46b281b9","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:946","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key instanceof java.lang.Short) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtBinaryOperatorImpl"},"failures":[451,453,689,690,528,531,691,692],"tindex":"612a5c1b-3f48-11e6-84fd-4fec7ff8bbe0","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:139","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n                    if ((entry.getValue()) == null) {\n                        return true;\n                    } \n                }\n            } else {\n                for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; entry != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; entry = entry.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n                    if (isEqualValue(value, entry.getValue())) {\n                        return true;\n                    } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:281","type":"CtInvocationImpl"},"failures":[],"tindex":"612a832c-3f48-11e6-84fd-9d03d00391f5","method":{"position":"org.apache.commons.collections4.queue.TransformedQueue:53","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.queue.TransformedQueue<E> transformingQueue(final java.util.Queue<E> queue, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    return new org.apache.commons.collections4.queue.TransformedQueue<E>(queue , transformer);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"queue"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:111","type":"CtBinaryOperatorImpl"},"failures":[693],"tindex":"612a832d-3f48-11e6-84fd-c778828a5f65","method":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:109","type":"CtMethodImpl","sourcecode":"public T transform(final java.lang.Class<? extends T> input) {\n    if (input == null) {\n        {\n            try {\n                if (input == null) {\n                    throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Input object was not an instanceof Class, it was a null object\");\n                } \n                final java.lang.reflect.Constructor<? extends T> java.lang.reflect.Constructor<? extends T> = input.getConstructor(java.lang.Class<?>[]);\n                return con.newInstance(java.lang.Object[]);\n            } catch (final java.lang.NoSuchMethodException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: The constructor must exist and be public \");\n            } catch (final java.lang.InstantiationException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: InstantiationException\" , ex);\n            } catch (final java.lang.IllegalAccessException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Constructor must be public\" , ex);\n            } catch (final java.lang.reflect.InvocationTargetException ex) {\n                throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Constructor threw an exception\" , ex);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:84","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"612a832e-3f48-11e6-84fd-43c0a572399d","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"612aaa3f-3f48-11e6-84fd-03ecc885ff29","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1243","type":"CtMethodImpl","sourcecode":"private static void checkKeyAndValue(final java.lang.Object key, final java.lang.Object value) {\n    if (value instanceof java.util.Enumeration) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(key);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl"},"failures":[544,545,694,695,696,546,547,548,549,697,550,551,698,552,553,554,699,555,556,700,557,701,702,558,559,703,704,705,560,561,562,563,564,565,566,706,707,567,708,709,710,568,711,569,570,571],"tindex":"612aaa40-3f48-11e6-84fd-afca158171fd","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:51","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int lengthInBits(final java.lang.String key) {\n    if (key == null) {\n        {\n            return key != null ? (key.length()) * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int) : 0;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:424","type":"CtBinaryOperatorImpl"},"failures":[712,713,714,715],"tindex":"612aaa41-3f48-11e6-84fd-4303fd724535","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:362","type":"CtMethodImpl","sourcecode":"public int size(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final java.util.Collection<V> java.util.Collection<V> = getCollection(key);\n            if (coll == null) {\n                return 0;\n            } \n            return coll.size();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl"},"failures":[494,495,496,497,27,499,500,501,36,502,503,504,37,38,505,43,716,508,509,510,511,29,513,514,515,50,516,517,518,51,52,519,57],"tindex":"612aaa42-3f48-11e6-84fd-a32ae76ffa7d","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:664","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            final java.lang.Object java.lang.Object = entry.getValue();\n            if ((entryKey == null) || (entryValue == null)) {\n                return false;\n            } \n            return (org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.isEqualKey(entryKey, java.lang.Object)) && (org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.isEqualValue(entryValue, getValue()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtBinaryOperatorImpl"},"failures":[717,718],"tindex":"612aaa43-3f48-11e6-84fd-7def660866cc","method":{"position":"org.apache.commons.collections4.set.CompositeSet:303","type":"CtMethodImpl","sourcecode":"public boolean retainAll(final java.util.Collection<?> coll) {\n    if ((coll.size()) < (coll.size())) {\n        {\n            boolean boolean = false;\n            for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n                changed |= item.retainAll(coll);\n            }\n            return changed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll","coll1":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:510","type":"CtBinaryOperatorImpl"},"failures":[719],"tindex":"612aaa44-3f48-11e6-84fd-f59b3e80e3bd","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:304","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index > 0) {\n                {\n                    return new org.apache.commons.collections4.list.SetUniqueList.SetListListIterator<E>(super.listIterator(index) , java.util.Set<E>);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtBinaryOperatorImpl"},"failures":[72],"tindex":"612ad155-3f48-11e6-84fd-b3f200752789","method":{"position":"org.apache.commons.collections4.ClosureUtils:200","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> chainedClosure(final org.apache.commons.collections4.Closure<? super E>... closures) {\n    if (closures == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(closures);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closures":"closures"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1773","type":"CtBinaryOperatorImpl"},"failures":[720],"tindex":"612ad156-3f48-11e6-84fd-7516f542837f","method":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:89","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedSortedMap<K, V> transformedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (map == null) {\n        {\n            final org.apache.commons.collections4.map.TransformedSortedMap<K, V> org.apache.commons.collections4.map.TransformedSortedMap<K, V> = new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(map , keyTransformer , valueTransformer);\n            if ((map.size()) > 0) {\n                final java.util.Map<K, V> java.util.Map<K, V> = decorated.transformMap(map);\n                decorated.clear();\n                decorated.decorated().putAll(transformed);\n            } \n            return decorated;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sortedMap":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:236","type":"CtBinaryOperatorImpl"},"failures":[721,722,723,724,725,726,727,728,729,730,70,731,732,733,734,735,736,737,738,739,740,741,742,743,508,509,510,511,29,513,514,515,50],"tindex":"612ad157-3f48-11e6-84fd-41c21111b312","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:179","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(java.lang.Object key) {\n    if (key == null) {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    return entry.getValue();\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"612ad158-3f48-11e6-84fd-19c730df2f88","method":{"position":"org.apache.commons.collections4.SetUtils:306","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> predicatedSortedSet(final java.util.SortedSet<E> set, final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.set.PredicatedSortedSet.predicatedSortedSet(set, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"CtBinaryOperatorImpl"},"failures":[744],"tindex":"612ad159-3f48-11e6-84fd-3b5268960ddd","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:547","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final int index) {\n    if (index > index) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.ValuesView.this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.remove(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"index","bound":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtBinaryOperatorImpl"},"failures":[745],"tindex":"612af86a-3f48-11e6-84fd-6f2ea51cbfbb","method":{"position":"org.apache.commons.collections4.functors.SwitchClosure:89","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchClosure(final java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> predicatesAndClosures) {\n    if (predicatesAndClosures == null) {\n        {\n            if (predicatesAndClosures == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and closure map must not be null\");\n            } \n            final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> = predicatesAndClosures.remove(null);\n            final int int = predicatesAndClosures.size();\n            if (size == 0) {\n                return ((org.apache.commons.collections4.Closure<E>)(defaultClosure == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : defaultClosure));\n            } \n            final org.apache.commons.collections4.Closure<E>[] org.apache.commons.collections4.Closure<E>[] = new org.apache.commons.collections4.Closure[size];\n            final org.apache.commons.collections4.Predicate<E>[] org.apache.commons.collections4.Predicate<E>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> : predicatesAndClosures.entrySet()) {\n                preds[i] = entry.getKey();\n                closures[i] = entry.getValue();\n                i++;\n            }\n            return new org.apache.commons.collections4.functors.SwitchClosure<E>(false , preds , closures , defaultClosure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicatesAndClosures":"predicatesAndClosures"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1191","type":"CtBinaryOperatorImpl"},"failures":[746],"tindex":"612af86b-3f48-11e6-84fd-3d4a24e456fb","method":{"position":"org.apache.commons.collections4.MapUtils:1060","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<V, K> invertMap(final java.util.Map<K, V> map) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Map<V, K> java.util.Map<V, K> = new java.util.HashMap<V, K>(map.size());\n            for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : map.entrySet()) {\n                out.put(entry.getValue(), entry.getKey());\n            }\n            return out;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:204","type":"CtBinaryOperatorImpl"},"failures":[747,748,749],"tindex":"612af86c-3f48-11e6-84fd-f782ec683d64","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:285","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key1 == null) {\n        {\n            final int int = hash(key1, key2, key3);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"position":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:120","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"612af86d-3f48-11e6-84fd-4d5bdf7d9643","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:255","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (((coll == null) || (coll == null)) || ((set1.size()) != (set2.size()))) {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n            while (it.hasNext()) {\n                if (coll.contains(it.next())) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"coll","set1":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"612b1f7e-3f48-11e6-84fd-45cc94da5237","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:151","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().addAll(transform(coll));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:218","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"612b1f7f-3f48-11e6-84fd-87ac00e35490","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:532","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> entry, final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key2 instanceof java.lang.Byte) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = entry.getKey();\n            return (((((multi.size()) == 4) && ((key1 == (multi.getKey(0))) || ((key1 != null) && (key1.equals(multi.getKey(0)))))) && ((key2 == (multi.getKey(1))) || ((key2 != null) && (key2.equals(multi.getKey(1)))))) && ((key3 == (multi.getKey(2))) || ((key3 != null) && (key3.equals(multi.getKey(2)))))) && ((key4 == (multi.getKey(3))) || ((key4 != null) && (key4.equals(multi.getKey(3)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key2"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:147","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"612b1f80-3f48-11e6-84fd-af9794ecf8db","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:304","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index > 0) {\n                {\n                    return new org.apache.commons.collections4.list.SetUniqueList.SetListListIterator<E>(super.listIterator(index) , java.util.Set<E>);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:184","type":"CtInvocationImpl"},"failures":[],"tindex":"612b1f81-3f48-11e6-84fd-a340fff72ed4","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:183","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Map<K, V> transformMap(final java.util.Map<? extends J, ? extends U> map) {\n    if (map.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map.isEmpty()) {\n                {\n                    if (map.isEmpty()) {\n                        return ((java.util.Map<K, V>)(map));\n                    } \n                    final java.util.Map<K, V> java.util.Map<K, V> = new org.apache.commons.collections4.map.LinkedMap<K, V>(map.size());\n                    for (final java.util.Map.Entry<? extends J, ? extends U> java.util.Map.Entry<? extends J, ? extends U> : map.entrySet()) {\n                        result.put(transformKey(entry.getKey()), transformValue(entry.getValue()));\n                    }\n                    return result;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtBinaryOperatorImpl"},"failures":[750,616,720,634],"tindex":"612b1f82-3f48-11e6-84fd-4de539ce90d7","method":{"position":"org.apache.commons.collections4.map.TransformedMap:197","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Map<K, V> transformMap(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map.isEmpty()) {\n                return ((java.util.Map<K, V>)(map));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = new org.apache.commons.collections4.map.LinkedMap<K, V>(map.size());\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                result.put(transformKey(entry.getKey()), transformValue(entry.getValue()));\n            }\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:175","type":"CtBinaryOperatorImpl"},"failures":[404,751,405,406,752,753,754,755,756,757,758],"tindex":"612b4693-3f48-11e6-84fd-99b5415f4a4b","method":{"position":"org.apache.commons.collections4.list.TreeList:200","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final int index, final E obj) {\n    if (index == 0) {\n        {\n            (int)++;\n            checkInterval(index, 0, size());\n            if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(index , obj , null , null);\n            } else {\n                org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(index, obj);\n            }\n            (int)++;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl"},"failures":[759],"tindex":"612b4694-3f48-11e6-84fd-250a6eede25c","method":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:51","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> transformedPredicate(final org.apache.commons.collections4.Transformer<? super T, ? extends T> transformer, final org.apache.commons.collections4.Predicate<? super T> predicate) {\n    if ((predicate == null) || (predicate == null)) {\n        {\n            if (transformer == null) {\n                throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n            } \n            if (predicate == null) {\n                throw new java.lang.IllegalArgumentException(\"The predicate to call must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.TransformedPredicate<T>(transformer , predicate);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate","predicate2":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtBinaryOperatorImpl"},"failures":[295,297,298,317,321,331,334,335,338,339,340,341,342],"tindex":"612b4695-3f48-11e6-84fd-01998d96b0ab","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1015","type":"CtMethodImpl","sourcecode":"private void doRedBlackDeleteFixup(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> replacementNode, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (replacementNode == null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = replacementNode;\n            while ((currentNode != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()])) && (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(currentNode, dataElement))) {\n                if (currentNode.isLeftChild(dataElement)) {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = getRightChild(getParent(currentNode, dataElement), dataElement);\n                    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(siblingNode, dataElement)) {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(siblingNode, dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(getParent(currentNode, dataElement), dataElement);\n                        rotateLeft(getParent(currentNode, dataElement), dataElement);\n                        siblingNode = getRightChild(getParent(currentNode, dataElement), dataElement);\n                    } \n                    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getLeftChild(siblingNode, dataElement), dataElement)) && (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getRightChild(siblingNode, dataElement), dataElement))) {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(siblingNode, dataElement);\n                        currentNode = getParent(currentNode, dataElement);\n                    } else {\n                        if (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getRightChild(siblingNode, dataElement), dataElement)) {\n                            org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getLeftChild(siblingNode, dataElement), dataElement);\n                            org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(siblingNode, dataElement);\n                            rotateRight(siblingNode, dataElement);\n                            siblingNode = getRightChild(getParent(currentNode, dataElement), dataElement);\n                        } \n                        copyColor(getParent(currentNode, dataElement), siblingNode, dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getParent(currentNode, dataElement), dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getRightChild(siblingNode, dataElement), dataElement);\n                        rotateLeft(getParent(currentNode, dataElement), dataElement);\n                        currentNode = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()];\n                    }\n                } else {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = getLeftChild(getParent(currentNode, dataElement), dataElement);\n                    if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(siblingNode, dataElement)) {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(siblingNode, dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(getParent(currentNode, dataElement), dataElement);\n                        rotateRight(getParent(currentNode, dataElement), dataElement);\n                        siblingNode = getLeftChild(getParent(currentNode, dataElement), dataElement);\n                    } \n                    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getRightChild(siblingNode, dataElement), dataElement)) && (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getLeftChild(siblingNode, dataElement), dataElement))) {\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(siblingNode, dataElement);\n                        currentNode = getParent(currentNode, dataElement);\n                    } else {\n                        if (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getLeftChild(siblingNode, dataElement), dataElement)) {\n                            org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getRightChild(siblingNode, dataElement), dataElement);\n                            org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(siblingNode, dataElement);\n                            rotateLeft(siblingNode, dataElement);\n                            siblingNode = getLeftChild(getParent(currentNode, dataElement), dataElement);\n                        } \n                        copyColor(getParent(currentNode, dataElement), siblingNode, dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getParent(currentNode, dataElement), dataElement);\n                        org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getLeftChild(siblingNode, dataElement), dataElement);\n                        rotateRight(getParent(currentNode, dataElement), dataElement);\n                        currentNode = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()];\n                    }\n                }\n            }\n            org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(currentNode, dataElement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467346194826/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"replacementNode"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}