{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":1012,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":116,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":317,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":986,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":52,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":1005,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":460,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":568,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":207,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSerializeDeserializeThenCompare":382,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullValue":557,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":255,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":254,"org.apache.commons.collections4.CollectionUtilsTest.collect":1013,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":167,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":1046,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":306,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":140,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":269,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testSerializeDeserializeThenCompare":586,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":916,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":76,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":439,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":966,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":285,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":233,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":99,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":443,"org.apache.commons.collections4.MapUtilsTest.testLazyMapTransformer":537,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":181,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":171,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":629,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":21,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":117,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":728,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":131,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":212,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":33,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":935,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":854,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionSize":376,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":610,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":716,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":826,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetIteratorRemoveChangesMap":693,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":996,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":56,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":323,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapHashCode":553,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":337,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":954,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":964,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":77,"org.apache.commons.collections4.comparators.ComparableComparatorTest.testEqualsNull":910,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":197,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":480,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":796,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":850,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":897,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":423,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":967,"org.apache.commons.collections4.CollectionUtilsTest.intersection":164,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":435,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":750,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":789,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking":1014,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":952,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":279,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":263,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsContract":203,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":103,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":976,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndexBoundsChecking2":358,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":960,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":977,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":456,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":619,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":909,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetIteratorRemoveChangesMap":787,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove3":673,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove2":672,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove1":671,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":28,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":413,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":884,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":184,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":389,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":717,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRetainAll":578,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":832,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":856,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":188,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":84,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":751,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":332,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":1001,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":647,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":1025,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":868,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":32,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":632,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":328,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":721,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove3":723,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":722,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":505,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testDecorateFactory":543,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":936,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":534,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":334,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":484,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":737,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnmodifiable":373,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":428,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":934,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":933,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":855,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":930,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":997,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":703,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":853,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":621,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":403,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":923,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":165,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":259,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":134,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":646,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":29,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionSize":364,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":1031,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":463,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":589,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToString":377,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":465,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":114,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":491,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":104,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":350,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":125,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":974,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":829,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":1004,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":22,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":503,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":395,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":734,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabelAndMap":508,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetIteratorRemoveChangesMap":667,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":891,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":946,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":53,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testSimpleSerialization":583,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":861,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListCompatibility":361,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":562,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":118,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":119,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":715,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":120,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":881,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":865,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":303,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":408,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":1009,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":622,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":37,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveAll":571,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":20,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":225,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":34,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":97,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":200,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":461,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":747,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":432,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":6,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":939,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":106,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":814,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":907,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":464,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":858,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":315,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":1018,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":281,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testUnmodifiable":544,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":308,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":394,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":981,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiKeySetValuesOrder":147,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":752,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":987,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":921,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":302,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":654,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":85,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":744,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":969,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNonEmptyMap":531,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":210,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":641,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":637,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":841,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":309,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":46,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":707,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":607,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":180,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":26,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":359,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":894,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":920,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":919,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":937,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":852,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":875,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":177,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetIteratorRemoveChangesMap":725,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":292,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":655,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":848,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":809,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":1039,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":468,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":817,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":753,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":955,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":733,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":189,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":43,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":1036,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":402,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":827,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":129,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":152,"org.apache.commons.collections4.map.LazyMapTest.testKeySetIteratorRemoveChangesMap":704,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":39,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":931,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":1022,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":965,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":272,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":810,"org.apache.commons.collections4.MapUtilsTest.testConvertResourceBundle":527,"org.apache.commons.collections4.map.LinkedMapTest.testReset":31,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullStream":511,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testEqualsNull":603,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":950,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":75,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectHashCodeEqualsContract":605,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":932,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":871,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":922,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":501,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":102,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":496,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":730,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet":683,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":137,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":738,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":444,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":600,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":418,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":1026,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":304,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":777,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":393,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":311,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":675,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":9,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullMapIterator":617,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":893,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":333,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":258,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":291,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":1021,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":286,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":498,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":1030,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetIteratorRemoveChangesMap":573,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":968,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":400,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":276,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":497,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":540,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":176,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":900,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":67,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":911,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":466,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":139,"org.apache.commons.collections4.MapUtilsTest.testInvertMap":538,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":1035,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":864,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":448,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":542,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":407,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":818,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":223,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":699,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":324,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":170,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":866,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":962,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":453,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":892,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":963,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndexBoundsChecking2":356,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":1044,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":185,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":653,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":658,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":426,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":115,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetIteratorRemoveChangesMap":700,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":256,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":611,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":479,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToString":365,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":74,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":327,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":360,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":79,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":319,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":24,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":161,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":217,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":299,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":628,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":246,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove3":769,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove2":768,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove1":767,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":237,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":633,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":648,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":61,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":422,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":60,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":62,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":168,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":495,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":903,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":38,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":98,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":455,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":982,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":41,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":457,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":135,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":241,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsSelfHashCode":204,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":656,"org.apache.commons.collections4.ListUtilsTest.testDefaultIfNull":487,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":141,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":536,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedAdd":378,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":213,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":539,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithNonEmptyMap":529,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":73,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":72,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":441,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":649,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRetainAll":666,"org.apache.commons.collections4.list.TreeListTest.testBug35258":492,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":999,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIterator":353,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":674,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapClear":565,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":92,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":888,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":985,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":113,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":262,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":391,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":1041,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":126,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":232,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":1042,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":1043,"org.apache.commons.collections4.MapUtilsTest.testEmptyIfNull":525,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":95,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetIteratorRemoveChangesMap":556,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":94,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":93,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":917,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":196,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":956,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetIteratorRemoveChangesMap":811,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveChangesMap":551,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":824,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiKeySetValuesOrder":142,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":252,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":676,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":819,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":249,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":820,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":132,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":569,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":235,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove3":805,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove2":804,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":178,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":570,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":620,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":458,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testCanonicalFullCollectionExists":580,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":107,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":872,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove1":803,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":198,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":992,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testFullMapCompatibility":566,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":51,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetIteratorRemoveChangesMap":783,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":765,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":929,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":732,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":410,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":1038,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRetainAll":774,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray":383,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":993,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":800,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":576,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":429,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":857,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":287,"org.apache.commons.collections4.MapUtilsTest.testPutAll_Map_array":526,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveChangesMap":558,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":182,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":815,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":351,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":271,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":615,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":631,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":914,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":398,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":195,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":194,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":371,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":193,"org.apache.commons.collections4.MapUtilsTest.testPopulateMap":532,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":845,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":301,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":612,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":144,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveChangesMap":754,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":1033,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":668,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":627,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":406,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":355,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":835,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":980,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":335,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":270,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testFirstKey":546,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":626,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":231,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":630,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":243,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":844,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":239,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":670,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":384,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithEmptyMap":528,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":634,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":896,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":368,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":739,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":941,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":146,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":13,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":773,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":216,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":437,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":471,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":485,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":10,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":138,"org.apache.commons.collections4.map.TransformedSortedMapTest.testKeySetRemoveChangesMap":662,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":476,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":869,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":574,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":713,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSimpleSerialization":604,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":970,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":339,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":415,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":624,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":898,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":515,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":25,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":162,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":567,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":517,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRetainAll":552,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":678,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":305,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":918,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":143,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNull":524,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":945,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":533,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":451,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":133,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":0,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":2,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":274,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":90,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":66,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEqualsNull":581,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":801,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":559,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":949,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":318,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":979,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":149,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":260,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":261,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":978,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":354,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":714,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":352,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetIteratorRemoveChangesMap":749,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":445,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":613,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":124,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":499,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":1047,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":475,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove1":741,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":862,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":316,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove3":743,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove2":742,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":44,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":48,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":50,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":244,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":248,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIsEmpty":380,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":735,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetIteratorRemoveChangesMap":689,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":12,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":1029,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":876,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":846,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":825,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":108,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetIteratorRemoveChangesMap":763,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":961,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":412,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":88,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":651,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":1027,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":470,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":849,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":438,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":812,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":419,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":228,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":267,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":494,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":635,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":577,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":1040,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":886,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":973,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapRemove":596,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":257,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveChangesMap":746,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRetainAll":792,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":644,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":245,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":836,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":951,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRemoveChangesMap":724,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":839,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":924,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullStream":510,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":1011,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":847,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":518,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3":681,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet4":682,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":411,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet2":680,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":344,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetRemoveChangesMap":806,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":47,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":273,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":8,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":638,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetIteratorRemoveChangesMap":807,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":1019,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetIteratorRemoveChangesMap":729,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":594,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":349,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":431,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":294,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":313,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":726,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":86,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":828,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":483,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":409,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":416,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabelAndMap":509,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":786,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":199,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":345,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":947,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":49,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":172,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":397,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":942,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":522,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":948,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":18,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":109,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":3,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveChangesMap":695,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":984,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":157,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":58,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":1016,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":860,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":224,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":153,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":1007,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":187,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":156,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":111,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":242,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":82,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetIteratorRemoveChangesMap":771,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":691,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":310,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":341,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":677,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":885,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":100,"org.apache.commons.collections4.CollectionUtilsTest.union":163,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":474,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":502,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":889,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":81,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":873,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":618,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":30,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":101,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":159,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":289,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":388,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":427,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":998,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":80,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":283,"org.apache.commons.collections4.list.TreeListTest.testRemove":489,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":720,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRetainAll":762,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":148,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectHashCodeEqualsContract":584,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":436,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRemoveChangesMap":760,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":901,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":234,"org.apache.commons.collections4.MapUtilsTest.testIsEmptyWithNull":523,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":890,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":822,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":381,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":486,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":706,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":123,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":179,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":54,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":122,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":227,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":121,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":173,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":895,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":975,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":297,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":230,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":417,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":794,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":880,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":500,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":943,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":1017,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":288,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":452,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":347,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":719,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":35,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove3":781,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":692,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove2":780,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove1":779,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":926,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":264,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":59,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":625,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove3":687,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":989,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove2":686,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":906,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove1":685,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":366,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testKeySetRemoveChangesMap":772,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":915,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":1028,"org.apache.commons.collections4.ListUtilsTest.testSubtract":211,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveAll":665,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":128,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":598,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":657,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":831,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":863,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":414,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":330,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":430,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveAll":560,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":268,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":736,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":70,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":913,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":222,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":275,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveChangesMap":701,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":404,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":709,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":251,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":944,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testKeySetIteratorRemoveChangesMap":775,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":473,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":424,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":469,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":459,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":548,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":462,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":549,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":879,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":547,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":446,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove3":661,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":91,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove1":659,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove2":660,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":300,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveChangesMap":690,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":219,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":343,"org.apache.commons.collections4.MapUtilsTest.testPredicatedMap":535,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":520,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":925,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":110,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullKey":563,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":623,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":1006,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":307,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":608,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":329,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":247,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":220,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":813,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":851,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":154,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":878,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":201,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":521,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithEmptyMap":530,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testCanonicalEmptyCollectionExists":582,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":519,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":215,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":240,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":338,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":68,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":488,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":601,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testLastKey":545,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":174,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":870,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContainsAll":374,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":928,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":1023,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":493,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":1032,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":236,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":434,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":1034,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":821,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":1015,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":326,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":643,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":11,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":650,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":764,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":957,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":710,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":421,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":711,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":5,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":390,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove1":755,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":481,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove2":756,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove3":757,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":972,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":221,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":322,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":65,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":15,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":57,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":64,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":785,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":63,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":321,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":325,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":127,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":55,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":206,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":150,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":799,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectEqualsSelf":602,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSerializeDeserializeThenCompare":202,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":959,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":1048,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":995,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":293,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":905,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":145,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":588,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":1,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveChangesMap":664,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":386,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":477,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":877,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":983,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":1045,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":160,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":990,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":991,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":782,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":277,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":953,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":158,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":346,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetIteratorRemoveChangesMap":759,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":842,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":512,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":843,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":89,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":348,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":4,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":78,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetIteratorRemoveChangesMap":745,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":802,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":1037,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":702,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":1008,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":712,"org.apache.commons.collections4.map.TransformedSortedMapTest.testKeySetIteratorRemoveChangesMap":663,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":795,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":940,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":761,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveAll":770,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":874,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":927,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":708,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":834,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":790,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":506,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":727,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":96,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":447,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveChangesMap":778,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":640,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":42,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":229,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":392,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":401,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":867,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":385,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintCasting":504,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":433,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":507,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":379,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":595,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":636,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":336,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":312,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":387,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveAll":791,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":23,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSimpleSerialization":205,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":478,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":592,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":591,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":17,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove3":698,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":642,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":740,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove1":696,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":887,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove2":697,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":837,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":449,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":14,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":112,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":278,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":363,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":731,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":823,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":467,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":614,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":599,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":186,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":616,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":694,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":7,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":482,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":405,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":36,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":226,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":282,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":1003,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMakeMap":561,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":238,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectHashCodeEqualsSelfHashCode":606,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":290,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":833,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":899,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":425,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray":370,"org.apache.commons.collections4.map.TransformedMapTest.testKeySetRemoveChangesMap":784,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":490,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":882,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":166,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":295,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":218,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":331,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":840,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":367,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":27,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":280,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":183,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEmptyMapCompatibility":564,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":652,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":679,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":859,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":938,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":136,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":513,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":590,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":399,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":555,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicate":597,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectHashCodeEqualsSelfHashCode":585,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":554,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":550,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":994,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray2":375,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":776,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":669,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":718,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":904,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":362,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":830,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutAll":572,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":320,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":788,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":541,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveAll":758,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":1002,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveChangesMap":684,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":151,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":838,"org.apache.commons.collections4.list.FixedSizeListTest.testSerializeDeserializeThenCompare":369,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":793,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":908,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":958,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":130,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":298,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveChangesMap":766,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":169,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":265,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":705,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":175,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":902,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":1020,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":797,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":396,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":190,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":191,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":192,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":284,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPut":575,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":342,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectEqualsSelf":579,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":1000,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":1010,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":314,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":87,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":450,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":155,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":798,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":296,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":442,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":988,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":208,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":209,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testDecorateFactory":372,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":250,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":748,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":340,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":266,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":688,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":454,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":883,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":639,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":645,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":214,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx1":587,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":440,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":83,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":45,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":105,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":912,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":514,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":253,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":420,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":516,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":19,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListSerialization":357,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":1024,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":609,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":593,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":971,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":472,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":816,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":16,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":808},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:269","type":"CtBinaryOperatorImpl","sourcecode":"reuse == null"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80],"tindex":"7fa30221-3e4a-11e6-b121-2b80454131aa","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:283","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> createEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next, final int hashCode, final K key, final V value) {\n    if (next == null) {\n        {\n            return new org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>(next , hashCode , convertKey(key) , value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"reuse":"next"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[],"tindex":"7fa41392-3e4a-11e6-b121-9f8ad9a1779a","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1515","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o instanceof java.util.Collection<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Iterator<V> java.util.Iterator<V> = iterator() ; it.hasNext() ; ) {\n                final V V = it.next();\n                if (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(value, o)) {\n                    it.remove();\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtBinaryOperatorImpl","sourcecode":"nCopies <= 0"},"failures":[],"tindex":"7fa43aa3-3e4a-11e6-b121-1b714f4da027","method":{"position":"org.apache.commons.collections4.list.TreeList:286","type":"CtMethodImpl","sourcecode":"private void checkInterval(final int index, final int startIndex, final int endIndex) {\n    if (index < index) {\n        {\n            if (startIndex <= 0) {\n                {\n                    if ((index < startIndex) || (index > endIndex)) {\n                        throw new java.lang.IndexOutOfBoundsException((((\"Invalid index:\" + index) + \", size=\") + (size())));\n                    } \n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nCopies":"startIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtBinaryOperatorImpl","sourcecode":"(predicate1 == null) || (predicate2 == null)"},"failures":[81],"tindex":"7fa43aa4-3e4a-11e6-b121-717afd904be8","method":{"position":"org.apache.commons.collections4.PredicateUtils:402","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> neitherPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if ((predicate2 == null) || (predicate1 == null)) {\n        {\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>nonePredicate(predicate1, predicate2);\n            return nonePredicate;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate1":"predicate2","predicate2":"predicate1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:508","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[82,83,84,85,86],"tindex":"7fa461b5-3e4a-11e6-b121-f9d984c06df1","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:119","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return remove(object, 1);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:816","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135],"tindex":"7fa488c6-3e4a-11e6-b121-392becdcf561","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:815","type":"CtMethodImpl","sourcecode":"protected void checkKey(final org.apache.commons.collections4.keyvalue.MultiKey<?> key) {\n    if (key == null) {\n        {\n            if (key == null) {\n                throw new java.lang.NullPointerException(\"Key must not be null\");\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:668","type":"CtBinaryOperatorImpl","sourcecode":"key4 != null"},"failures":[136],"tindex":"7fa488c7-3e4a-11e6-b121-f9e99b25c8f3","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object != null) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key4":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:230","type":"CtInvocationImpl","sourcecode":"isAtFullCapacity()"},"failures":[],"tindex":"7fa4afd8-3e4a-11e6-b121-5dfa13df9378","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:359","type":"CtMethodImpl","sourcecode":"public void addComposited(final java.util.Collection<E> compositeCollection1, final java.util.Collection<E> compositeCollection2) {\n    java.util.List<java.util.Collection<E>>.add(compositeCollection1);\n    java.util.List<java.util.Collection<E>>.add(compositeCollection2);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"compositeCollection2"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[],"tindex":"7fa4afd9-3e4a-11e6-b121-51480c2ad1b3","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:255","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return doRemoveKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtInvocationImpl","sourcecode":"coll2.isEmpty()"},"failures":[137],"tindex":"7fa4d6ea-3e4a-11e6-b121-0d1114a46680","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:134","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (coll.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[138,139,140,141,142,143,144,145,146,147,148,149,150],"tindex":"7fa4d6eb-3e4a-11e6-b121-07e8eb65332d","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:134","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Map<K, V>.get(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[],"tindex":"7fa4fdfc-3e4a-11e6-b121-611051f1dd96","method":{"position":"org.apache.commons.collections4.ClosureUtils:162","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> invokerClosure(final java.lang.String methodName) {\n    if (methodName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.ClosureUtils.asClosure(org.apache.commons.collections4.functors.InvokerTransformer.<E, java.lang.Object>invokerTransformer(methodName));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"methodName"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:81","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"7fa4fdfd-3e4a-11e6-b121-872b23697083","method":{"position":"org.apache.commons.collections4.iterators.FilterIterator:162","type":"CtMethodImpl","sourcecode":"public void setPredicate(final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.FilterIterator.this.org.apache.commons.collections4.Predicate<? super E> = predicate;\n            E = null;\n            boolean = false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:281","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Long"},"failures":[151,152,153,154,155],"tindex":"7fa5250e-3e4a-11e6-b121-49b88880013f","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2057","type":"CtMethodImpl","sourcecode":"public K get(final java.lang.Object key) {\n    if (key instanceof java.lang.Long) {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.getKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[156],"tindex":"7fa54c1f-3e4a-11e6-b121-336f8fd79ebc","method":{"position":"org.apache.commons.collections4.BagUtils:194","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.SortedBag<E> unmodifiableSortedBag(final org.apache.commons.collections4.SortedBag<E> bag) {\n    if (bag instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bag.UnmodifiableSortedBag.unmodifiableSortedBag(bag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtBinaryOperatorImpl","sourcecode":"index >= (size)"},"failures":[],"tindex":"7fa54c20-3e4a-11e6-b121-ffd7dfaa10db","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:122","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.ListIterator<E> listIterator(final int index) {\n    if (index >= index) {\n        {\n            return new FixedSizeListIterator(decorated().listIterator(index));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[157,158,159,160,161,162,163,164,165,166,167,168],"tindex":"7fa54c21-3e4a-11e6-b121-e9d51f331520","method":{"position":"org.apache.commons.collections4.CollectionUtils:155","type":"CtMethodImpl","sourcecode":"public void setCardinality(final O obj, final int count) {\n    if (count > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = 0 ; i < count ; i++) {\n                java.util.List<O>.add(obj);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtBinaryOperatorImpl","sourcecode":"count != null"},"failures":[169],"tindex":"7fa57332-3e4a-11e6-b121-1db8ac26db1f","method":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:458","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key != null) {\n        {\n            java.util.Map<java.lang.Object, java.lang.Long>.remove(key);\n            return super.remove(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[170,171],"tindex":"7fa57333-3e4a-11e6-b121-4da9f42222ee","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final java.lang.Object object) {\n    if (object == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[172],"tindex":"7fa57334-3e4a-11e6-b121-05633db06006","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:131","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if ((key == null) || (key == null)) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"key","b":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[],"tindex":"7fa59a45-3e4a-11e6-b121-75627eccff24","method":{"position":"org.apache.commons.collections4.MapUtils:659","type":"CtMethodImpl","sourcecode":"public static <K>long getLongValue(final java.util.Map<? super K, ?> map, final K key) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Long java.lang.Long = org.apache.commons.collections4.MapUtils.getLong(map, key);\n            if (longObject == null) {\n                return 0L;\n            } \n            return longObject.longValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[173,174],"tindex":"7fa59a46-3e4a-11e6-b121-8df7219b7003","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                result |= remove(name);\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1117","type":"CtInvocationImpl","sourcecode":"entry.isEmpty()"},"failures":[175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207],"tindex":"7fa59a47-3e4a-11e6-b121-415b249c406c","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:610","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (node.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node == null) {\n                return firstEntry();\n            } else {\n                return nextEntryImpl(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node, null);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"entry":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map<?, ?>) == false"},"failures":[],"tindex":"7fa5c158-3e4a-11e6-b121-af8c1e880b38","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:85","type":"CtMethodImpl","sourcecode":"public boolean containsValue(final java.lang.Object value) {\n    if ((value instanceof java.util.Map<?, ?>) == false) {\n        {\n            return decorated().containsValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[208,209,210],"tindex":"7fa5c159-3e4a-11e6-b121-797027faa7d0","method":{"position":"org.apache.commons.collections4.PredicateUtils:321","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        {\n            return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(predicates);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtBinaryOperatorImpl","sourcecode":"(size()) == 0"},"failures":[],"tindex":"7fa5e86a-3e4a-11e6-b121-05ebfe85f008","method":{"position":"org.apache.commons.collections4.map.TransformedMap:76","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedMap<K, V> transformingMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    return new org.apache.commons.collections4.map.TransformedMap<K, V>(map , keyTransformer , valueTransformer);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[],"tindex":"7fa5e86b-3e4a-11e6-b121-33974d2176e0","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2014","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (o != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(o));\n            final K K = entry.getKey();\n            if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.inRange(key))) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(key);\n            return (node != null) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(node.getValue(), entry.getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:331","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[],"tindex":"7fa5e86c-3e4a-11e6-b121-055530f5c34f","method":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:162","type":"CtMethodImpl","sourcecode":"protected void addNodeToCache(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == node) {\n        {\n            if (isCacheFull()) {\n                return ;\n            } \n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n            node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = null;\n            node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = nextCachedNode;\n            node.setValue(null);\n            org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = node;\n            (int)++;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"7fa60f7d-3e4a-11e6-b121-7b21d0a98ca3","method":{"position":"org.apache.commons.collections4.MapUtils:276","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Long getLong(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Long) {\n                return ((java.lang.Long)(answer));\n            } \n            return java.lang.Long.valueOf(answer.longValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtBinaryOperatorImpl","sourcecode":"pos < index"},"failures":[],"tindex":"7fa60f7e-3e4a-11e6-b121-696dff317e3c","method":{"position":"org.apache.commons.collections4.list.TreeList:286","type":"CtMethodImpl","sourcecode":"private void checkInterval(final int index, final int startIndex, final int endIndex) {\n    if (index < index) {\n        {\n            if (startIndex <= 0) {\n                {\n                    if ((index < startIndex) || (index > endIndex)) {\n                        throw new java.lang.IndexOutOfBoundsException((((\"Invalid index:\" + index) + \", size=\") + (size())));\n                    } \n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pos":"index","index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.SetUniqueList:75","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[211,212],"tindex":"7fa6368f-3e4a-11e6-b121-cb8ac08524ca","method":{"position":"org.apache.commons.collections4.ListUtils:126","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> subtract(final java.util.List<E> list1, final java.util.List<? extends E> list2) {\n    if (list1.isEmpty()) {\n        {\n            final java.util.ArrayList<E> java.util.ArrayList<E> = new java.util.ArrayList<E>();\n            final org.apache.commons.collections4.bag.HashBag<E> org.apache.commons.collections4.bag.HashBag<E> = new org.apache.commons.collections4.bag.HashBag<E>(list2);\n            for (final E E : list1) {\n                if (!(bag.remove(e, 1))) {\n                    result.add(e);\n                } \n            }\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1122","type":"CtBinaryOperatorImpl","sourcecode":"(cloned.delegateMap) != null"},"failures":[],"tindex":"7fa63690-3e4a-11e6-b121-018b1ee4d6c6","method":{"position":"org.apache.commons.collections4.MapUtils:364","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<K, V> map, final K key, final V defaultValue) {\n    if (map != null) {\n        {\n            if (map != null) {\n                {\n                    if (map != null) {\n                        final V V = map.get(key);\n                        if (answer != null) {\n                            return answer;\n                        } \n                    } \n                    return defaultValue;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cloned":"map","delegateMap":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:365","type":"CtBinaryOperatorImpl","sourcecode":"key3 != null"},"failures":[],"tindex":"7fa63691-3e4a-11e6-b121-7f83e0b20d2c","method":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:165","type":"CtMethodImpl","sourcecode":"public void add(final java.lang.Object o) {\n    if (o != null) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"add() method is not supported\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key3":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:331","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348],"tindex":"7fa65da2-3e4a-11e6-b121-4d99013da507","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:493","type":"CtMethodImpl","sourcecode":"protected void addNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> nodeToInsert, final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> insertBeforeNode) {\n    if (nodeToInsert == insertBeforeNode) {\n        {\n            nodeToInsert.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = insertBeforeNode;\n            nodeToInsert.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = insertBeforeNode.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n            insertBeforeNode.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = nodeToInsert;\n            insertBeforeNode.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = nodeToInsert;\n            (int)++;\n            (int)++;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"nodeToInsert","header":"insertBeforeNode"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:86","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,136,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384],"tindex":"7fa684b3-3e4a-11e6-b121-cd9900199f97","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:55","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.FixedSizeList<E> fixedSizeList(final java.util.List<E> list) {\n    if (list.isEmpty()) {\n        {\n            return new org.apache.commons.collections4.list.FixedSizeList<E>(list);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:764","type":"CtBinaryOperatorImpl","sourcecode":"shortObject == null"},"failures":[385,386,387,388,389,390,391,392,393,394,395,396,397],"tindex":"7fa684b4-3e4a-11e6-b121-d7b266acb7b9","method":{"position":"org.apache.commons.collections4.bag.AbstractBagDecorator:68","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return decorated().getCount(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"shortObject":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Collection<?>"},"failures":[398,386,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,388,416,417,418,419,420,421,422,423,424,389,425,426,427,428,429,430,431,432,433,390,434,435,392,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,393,451,452,453,454,455,456,457,458,459,394,460,461,462,463,464,465,466,467,468,469,470,395,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,397,486],"tindex":"7fa6abc5-3e4a-11e6-b121-21c5694599d0","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:125","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.Object object) {\n    if (object instanceof java.util.Collection<?>) {\n        {\n            return java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.containsKey(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.LRUMap:246","type":"CtInvocationImpl","sourcecode":"isFull()"},"failures":[],"tindex":"7fa6abc6-3e4a-11e6-b121-c142e38240ee","method":{"position":"org.apache.commons.collections4.MapUtils:1191","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.Map<K, V> emptyIfNull(final java.util.Map<K, V> map) {\n    return map == null ? java.util.Collections.<K, V>emptyMap() : map;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.EnumerationIterator:107","type":"CtBinaryOperatorImpl","sourcecode":"(collection) != null"},"failures":[],"tindex":"7fa6abc7-3e4a-11e6-b121-75404875f4c7","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll != null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator"},"failures":[],"tindex":"7fa6d2d8-3e4a-11e6-b121-3947af0e6d9e","method":{"position":"org.apache.commons.collections4.collection.TransformedCollection:136","type":"CtMethodImpl","sourcecode":"protected java.util.Collection<E> transform(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(coll.size());\n            for (final E E : coll) {\n                list.add(transform(item));\n            }\n            return list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"7fa6d2d9-3e4a-11e6-b121-e37ee5f25082","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:180","type":"CtMethodImpl","sourcecode":"public void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"items == null"},"failures":[487],"tindex":"7fa6f9ea-3e4a-11e6-b121-ab3bbdb78cde","method":{"position":"org.apache.commons.collections4.ListUtils:75","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<T> defaultIfNull(final java.util.List<T> list, final java.util.List<T> defaultList) {\n    if (list == null) {\n        {\n            return list == null ? defaultList : list;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"items":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:160","type":"CtBinaryOperatorImpl","sourcecode":"(root) == null"},"failures":[488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503],"tindex":"7fa6f9eb-3e4a-11e6-b121-bf8a9f9e231e","method":{"position":"org.apache.commons.collections4.list.TreeList:730","type":"CtMethodImpl","sourcecode":"private int getHeight(final org.apache.commons.collections4.list.TreeList.AVLNode<E> node) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return node == null ? -1 : node.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"7fa6f9ec-3e4a-11e6-b121-8523da51fb6a","method":{"position":"org.apache.commons.collections4.MapUtils:340","type":"CtMethodImpl","sourcecode":"public static <K>java.util.Map<?, ?> getMap(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                final java.lang.Object java.lang.Object = map.get(key);\n                if ((answer != null) && (answer instanceof java.util.Map)) {\n                    return ((java.util.Map<?, ?>)(answer));\n                } \n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:613","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521],"tindex":"7fa720fd-3e4a-11e6-b121-81229a36adcb","method":{"position":"org.apache.commons.collections4.MapUtils:1037","type":"CtMethodImpl","sourcecode":"private static void printIndent(final java.io.PrintStream out, final int indent) {\n    if (indent == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = 0 ; i < indent ; i++) {\n                out.print(org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.java.lang.String);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"indent"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"7fa720fe-3e4a-11e6-b121-3560d12cbe35","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:95","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if ((key instanceof java.util.Map) == false) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[522],"tindex":"7fa720ff-3e4a-11e6-b121-7b7bc969a202","method":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:122","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:160","type":"CtBinaryOperatorImpl","sourcecode":"(root) == null"},"failures":[488,489,492,493,494,490,497,495,496,498,499,501,503],"tindex":"7fa74810-3e4a-11e6-b121-1f3ebbe70084","method":{"position":"org.apache.commons.collections4.list.TreeList:793","type":"CtMethodImpl","sourcecode":"private void setRight(final org.apache.commons.collections4.list.TreeList.AVLNode<E> node, final org.apache.commons.collections4.list.TreeList.AVLNode<E> next) {\n    if (next == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean = node == null;\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = boolean ? next : node;\n            recalcHeight();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"next"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:172","type":"CtInvocationImpl","sourcecode":"hm.isEmpty()"},"failures":[],"tindex":"7fa74811-3e4a-11e6-b121-f191934b71d6","method":{"position":"org.apache.commons.collections4.MapUtils:1542","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> predicatedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Predicate<? super K> keyPred, final org.apache.commons.collections4.Predicate<? super V> valuePred) {\n    if (map.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.PredicatedSortedMap.predicatedSortedMap(map, keyPred, valuePred);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"hm":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:55","type":"CtBinaryOperatorImpl","sourcecode":"trie instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[523,524,525,526,527,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586],"tindex":"7fa74812-3e4a-11e6-b121-4d32ff080593","method":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:60","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> unmodifiableSortedMap(final java.util.SortedMap<K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = ((java.util.SortedMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableSortedMap<K, V>(map);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trie":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[587],"tindex":"7fa76f23-3e4a-11e6-b121-17b74b0a6f07","method":{"position":"org.apache.commons.collections4.functors.NonePredicate:50","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicates == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n                    if ((predicates.int) == 0) {\n                        return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n                    } \n                    return new org.apache.commons.collections4.functors.NonePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:502","type":"CtBinaryOperatorImpl","sourcecode":"cmp == 0"},"failures":[],"tindex":"7fa79634-3e4a-11e6-b121-ef62ae302450","method":{"position":"org.apache.commons.collections4.list.TreeList:709","type":"CtMethodImpl","sourcecode":"private int setOffset(final org.apache.commons.collections4.list.TreeList.AVLNode<E> node, final int newOffest) {\n    if (newOffest == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (node == null) {\n                return 0;\n            } \n            final int int = getOffset(node);\n            node.int = newOffest;\n            return oldOffset;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cmp":"newOffest"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtBinaryOperatorImpl","sourcecode":"set instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"7fa79635-3e4a-11e6-b121-4b4864222176","method":{"position":"org.apache.commons.collections4.SetUtils:288","type":"CtMethodImpl","sourcecode":"public static <E>java.util.SortedSet<E> unmodifiableSortedSet(final java.util.SortedSet<E> set) {\n    if (set instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return org.apache.commons.collections4.set.UnmodifiableSortedSet.unmodifiableSortedSet(set);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set":"set"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:295","type":"CtBinaryOperatorImpl","sourcecode":"(values) == null"},"failures":[588,589,590,591,592,593,594,595],"tindex":"7fa79636-3e4a-11e6-b121-47c760c9a55d","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:71","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.list.SetUniqueList<E> setUniqueList(final java.util.List<E> list) {\n    if (list == null) {\n        {\n            if (list == null) {\n                throw new java.lang.IllegalArgumentException(\"List must not be null\");\n            } \n            if (list.isEmpty()) {\n                return new org.apache.commons.collections4.list.SetUniqueList<E>(list , new java.util.HashSet<E>());\n            } \n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(list);\n            list.clear();\n            final org.apache.commons.collections4.list.SetUniqueList<E> org.apache.commons.collections4.list.SetUniqueList<E> = new org.apache.commons.collections4.list.SetUniqueList<E>(list , new java.util.HashSet<E>());\n            sl.addAll(temp);\n            return sl;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"values":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[596],"tindex":"7fa7bd47-3e4a-11e6-b121-999211512c76","method":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:121","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:313","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[],"tindex":"7fa7bd48-3e4a-11e6-b121-4728be0e6cf4","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:495","type":"CtMethodImpl","sourcecode":"protected void nodeChanged(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == node) {\n        {\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[597],"tindex":"7fa7bd49-3e4a-11e6-b121-014de4a5ee55","method":{"position":"org.apache.commons.collections4.PredicateUtils:256","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> andPredicate(final org.apache.commons.collections4.Predicate<? super T> predicate1, final org.apache.commons.collections4.Predicate<? super T> predicate2) {\n    if (predicate2 == null) {\n        {\n            return org.apache.commons.collections4.functors.AndPredicate.<T>andPredicate(predicate1, predicate2);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ClosureUtils:355","type":"CtBinaryOperatorImpl","sourcecode":"objectsAndClosures == null"},"failures":[598],"tindex":"7fa7e45a-3e4a-11e6-b121-1d9b7a861674","method":{"position":"org.apache.commons.collections4.ClosureUtils:354","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>org.apache.commons.collections4.Closure<E> switchMapClosure(final java.util.Map<? extends E, org.apache.commons.collections4.Closure<E>> objectsAndClosures) {\n    if (objectsAndClosures == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (objectsAndClosures == null) {\n                throw new java.lang.IllegalArgumentException(\"The object and closure map must not be null\");\n            } \n            final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> = objectsAndClosures.remove(null);\n            final int int = objectsAndClosures.size();\n            final org.apache.commons.collections4.Closure<? super E>[] org.apache.commons.collections4.Closure<? super E>[] = new org.apache.commons.collections4.Closure[size];\n            final org.apache.commons.collections4.Predicate<E>[] org.apache.commons.collections4.Predicate<E>[] = new org.apache.commons.collections4.Predicate[size];\n            int int = 0;\n            for (final java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> : objectsAndClosures.entrySet()) {\n                preds[i] = org.apache.commons.collections4.functors.EqualPredicate.<E>equalPredicate(entry.getKey());\n                trs[i] = entry.getValue();\n                i++;\n            }\n            return org.apache.commons.collections4.ClosureUtils.<E>switchClosure(preds, trs, def);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsAndClosures":"objectsAndClosures"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1145","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[],"tindex":"7fa7e45b-3e4a-11e6-b121-353636ca3312","method":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:69","type":"CtMethodImpl","sourcecode":"public K getKey(final java.lang.Object value) {\n    if ((value instanceof java.util.Map) == false) {\n        {\n            return decorated().getKey(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtBinaryOperatorImpl","sourcecode":"closure == null"},"failures":[599],"tindex":"7fa80b6c-3e4a-11e6-b121-39012839daec","method":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:47","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Transformer<T, T> closureTransformer(final org.apache.commons.collections4.Closure<? super T> closure) {\n    if (closure == null) {\n        {\n            if (closure == null) {\n                throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n            } \n            return new org.apache.commons.collections4.functors.ClosureTransformer<T>(closure);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"closure":"closure"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtBinaryOperatorImpl","sourcecode":"index > 0"},"failures":[217,220,221,222,223,600,224,225,226,228,230,231,232,233,234,235,236,237,238,241,242,244,245,246,247,248,249,250,251,254,265,311,314,315,316,317,601,318,319,320,322,324,325,326,327,328,329,330,333,334,336,337,338,339,340,341,342,343,346],"tindex":"7fa80b6d-3e4a-11e6-b121-593404e542fa","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:111","type":"CtMethodImpl","sourcecode":"public E get(final int index) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, false);\n            return node.getValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:505","type":"CtBinaryOperatorImpl","sourcecode":"cmp < 0"},"failures":[213,215,216,218,214,235,236,237,238,239,240,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,306,309,310,312,308,329,330,331,332,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348],"tindex":"7fa8327e-3e4a-11e6-b121-ffb86f8f3d63","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:219","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index < 0) {\n        {\n            final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = getNode(index, true);\n            for (final E E : coll) {\n                addNodeBefore(node, e);\n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cmp":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ArrayStack:107","type":"CtBinaryOperatorImpl","sourcecode":"m < 0"},"failures":[],"tindex":"7fa8327f-3e4a-11e6-b121-db26724f206c","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isPrefix(final java.lang.String prefix, final int offsetInBits, final int lengthInBits, final java.lang.String key) {\n    if (lengthInBits < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n                throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n            } \n            final java.lang.String java.lang.String = prefix.substring((offsetInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)), (lengthInBits / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)));\n            return key.startsWith(s1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"m":"lengthInBits"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:59","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[372,373,374,375,376,377,378,379,380,381,382,383,384,602,603,604,605,606],"tindex":"7fa85990-3e4a-11e6-b121-6fcb54d9dc73","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:58","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.BoundedCollection<E> unmodifiableBoundedCollection(final org.apache.commons.collections4.BoundedCollection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.BoundedCollection<E> org.apache.commons.collections4.BoundedCollection<E> = ((org.apache.commons.collections4.BoundedCollection<E>)(coll));\n                return tmpColl;\n            } \n            return new org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[533,607,608,609,610,611,612,613,614,615,616,617,618,140,141,619,620,621,540,541,542,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,555,559,569,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,103,110,121,122,123,128,131,132,133,134,135,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811],"tindex":"7fa85991-3e4a-11e6-b121-df11f6b9ad54","method":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:81","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return decorated().containsKey(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map<?, ?>) == false"},"failures":[],"tindex":"7fa880a2-3e4a-11e6-b121-01b270ce1bbd","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:143","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.Object value) {\n    if ((value instanceof java.util.Map<?, ?>) == false) {\n        {\n            int int = (int) - 1;\n            for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; node != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; node = node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n                if (isEqualValue(node.getValue(), value)) {\n                    return i;\n                } \n                i--;\n            }\n            return -1;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtBinaryOperatorImpl","sourcecode":"size <= 0"},"failures":[812],"tindex":"7fa8a7b3-3e4a-11e6-b121-3b1e458020a5","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:143","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean add(final E object, final int count) {\n    if (count <= 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:408","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[813,385,814,815,386,402,387,407,816,817,818,408,819,820,821,822,823,410,824,825,826,827,828,388,829,416,830,831,417,832,833,834,835,836,419,837,838,839,840,841,389,425,842,843,426,844,845,846,847,848,428,849,850,851,852,853,390,854,434,855,856,391,857,858,392,439,442,443,859,860,861,862,863,445,864,865,866,867,868,393,451,869,870,452,871,872,873,874,875,454,876,877,878,879,880,394,460,881,882,463,883,884,885,886,887,465,888,889,890,891,892,395,471,893,894,396,475,895,896,477,478,897,898,899,900,901,480,902,903,904,905,906,397,907,486,908,909],"tindex":"7fa8a7b4-3e4a-11e6-b121-39481149cfde","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:109","type":"CtMethodImpl","sourcecode":"public int getCount(final java.lang.Object object) {\n    if (object == null) {\n        {\n            final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(object);\n            if (count != null) {\n                return count.int;\n            } \n            return 0;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.SetUtils:120","type":"CtBinaryOperatorImpl","sourcecode":"((set1 == null) || (set2 == null)) || ((set1.size()) != (set2.size()))"},"failures":[],"tindex":"7fa8cec5-3e4a-11e6-b121-9d6906a9e4c6","method":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:342","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.util.Collection<?> coll) {\n    if (((coll == null) || (coll == null)) || ((set1.size()) != (set2.size()))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            if (coll != null) {\n                final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n                while (i.hasNext()) {\n                    final boolean boolean = remove(i.next(), 1);\n                    result = result || changed;\n                }\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"set2":"coll","set1":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtBinaryOperatorImpl","sourcecode":"null == object"},"failures":[910],"tindex":"7fa8cec6-3e4a-11e6-b121-51e18fce41e1","method":{"position":"org.apache.commons.collections4.comparators.ComparableComparator:123","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (null == object) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((org.apache.commons.collections4.comparators.ComparableComparator.this) == object) || ((null != object) && (object.getClass().equals(org.apache.commons.collections4.comparators.ComparableComparator.this.getClass())));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:190","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.String"},"failures":[911,912,913,914,0,7,8,13,15,24,26,23,25,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,30,38,39,40,56,63,64,66,69,70,73,74,75,76,77,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999],"tindex":"7fa8cec7-3e4a-11e6-b121-d9c4333bcdb5","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:337","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(java.lang.Object key) {\n    if (key instanceof java.lang.String) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            key = convertKey(key);\n            final int int = hash(key);\n            final int int = hashIndex(hashCode, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][index];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(key, entry.java.lang.Object))) {\n                    final V V = entry.getValue();\n                    removeMapping(entry, index, previous);\n                    return oldValue;\n                } \n                previous = entry;\n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"7fa8f5d8-3e4a-11e6-b121-916cc19247e7","method":{"position":"org.apache.commons.collections4.TransformerUtils:273","type":"CtMethodImpl","sourcecode":"public static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers, final org.apache.commons.collections4.Transformer<? super I, ? extends O> defaultTransformer) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.SwitchTransformer.<I, O>switchTransformer(predicates, transformers, defaultTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1037","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(bitIndex)"},"failures":[],"tindex":"7fa91ce9-3e4a-11e6-b121-4b86080310a6","method":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:196","type":"CtMethodImpl","sourcecode":"public void setForwardSort(final int index) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(index)) {\n        {\n            checkLocked();\n            java.util.BitSet.clear(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtBinaryOperatorImpl","sourcecode":"(delegateMap) != null"},"failures":[],"tindex":"7fa91cea-3e4a-11e6-b121-2bb3e13febaf","method":{"position":"org.apache.commons.collections4.MapUtils:364","type":"CtMethodImpl","sourcecode":"public static <K, V>V getObject(final java.util.Map<K, V> map, final K key, final V defaultValue) {\n    if (map != null) {\n        {\n            if (map != null) {\n                {\n                    if (map != null) {\n                        final V V = map.get(key);\n                        if (answer != null) {\n                            return answer;\n                        } \n                    } \n                    return defaultValue;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegateMap":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.IllegalArgumentException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:891","type":"CtBinaryOperatorImpl","sourcecode":"(size()) > 1"},"failures":[],"tindex":"7fa943fb-3e4a-11e6-b121-6b9147bb6020","method":{"position":"org.apache.commons.collections4.map.CompositeMap:133","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic synchronized void addComposited(final java.util.Map<K, V> map) throws java.lang.IllegalArgumentException {\n    for (int int = (java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n        final java.util.Collection<K> java.util.Collection<K> = org.apache.commons.collections4.CollectionUtils.intersection(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].keySet(), map.keySet());\n        if ((intersect.size()) != 0) {\n            if ((org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n                throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n            } \n            org.apache.commons.collections4.map.CompositeMap.this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(org.apache.commons.collections4.map.CompositeMap.this, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i], map, intersect);\n        } \n    }\n    final java.util.Map<K, V>[] java.util.Map<K, V>[] = new java.util.Map[(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) + 1];\n    java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], 0, temp, 0, org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int);\n    temp[((temp.int) - 1)] = map;\n    org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[] = temp;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:305","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[257,261,258,259,260,265,266,262,263,264,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,271,306,304,305,307,267,268,269,270,309,310,311,312,308,323,324,325,326,327,328,329,330,331,332,315,313,314,316,317,318,319,320,321,322,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348],"tindex":"7fa96b0c-3e4a-11e6-b121-13fe6e88d188","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:233","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void addNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> nodeToInsert, final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> insertBeforeNode) {\n    if (insertBeforeNode == insertBeforeNode) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            super.addNode(nodeToInsert, insertBeforeNode);\n            broadcastNodeInserted(nodeToInsert);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"insertBeforeNode","header":"insertBeforeNode"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"7fa96b0d-3e4a-11e6-b121-19ca115e0706","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:587","type":"CtMethodImpl","sourcecode":"protected java.util.ListIterator<E> createSubListListIterator(final org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E> subList, final int fromIndex) {\n    if (fromIndex < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubListIterator<E>(subList , fromIndex);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"fromIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[],"tindex":"7fa9921e-3e4a-11e6-b121-7f2290583c3d","method":{"position":"org.apache.commons.collections4.functors.NonePredicate:50","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> nonePredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (predicates == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n                    if ((predicates.int) == 0) {\n                        return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n                    } \n                    return new org.apache.commons.collections4.functors.NonePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1112","type":"CtBinaryOperatorImpl","sourcecode":"x == yFormerParent"},"failures":[1000,1001,1002,1003,1004,1005,1006,1007,1008,1009],"tindex":"7fa9921f-3e4a-11e6-b121-bd95b36dc21a","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1098","type":"CtMethodImpl","sourcecode":"private void swapPosition(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> x, final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> y, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (y == x) {\n        {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = x.getParent(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = x.getLeft(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = x.getRight(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = y.getParent(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = y.getLeft(dataElement);\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = y.getRight(dataElement);\n            final boolean boolean = ((x.getParent(dataElement)) != null) && (x == (x.getParent(dataElement).getLeft(dataElement)));\n            final boolean boolean = ((y.getParent(dataElement)) != null) && (y == (y.getParent(dataElement).getLeft(dataElement)));\n            if (x == yFormerParent) {\n                x.setParent(y, dataElement);\n                if (yWasLeftChild) {\n                    y.setLeft(x, dataElement);\n                    y.setRight(xFormerRightChild, dataElement);\n                } else {\n                    y.setRight(x, dataElement);\n                    y.setLeft(xFormerLeftChild, dataElement);\n                }\n            } else {\n                x.setParent(yFormerParent, dataElement);\n                if (yFormerParent != null) {\n                    if (yWasLeftChild) {\n                        yFormerParent.setLeft(x, dataElement);\n                    } else {\n                        yFormerParent.setRight(x, dataElement);\n                    }\n                } \n                y.setLeft(xFormerLeftChild, dataElement);\n                y.setRight(xFormerRightChild, dataElement);\n            }\n            if (y == xFormerParent) {\n                y.setParent(x, dataElement);\n                if (xWasLeftChild) {\n                    x.setLeft(y, dataElement);\n                    x.setRight(yFormerRightChild, dataElement);\n                } else {\n                    x.setRight(y, dataElement);\n                    x.setLeft(yFormerLeftChild, dataElement);\n                }\n            } else {\n                y.setParent(xFormerParent, dataElement);\n                if (xFormerParent != null) {\n                    if (xWasLeftChild) {\n                        xFormerParent.setLeft(y, dataElement);\n                    } else {\n                        xFormerParent.setRight(y, dataElement);\n                    }\n                } \n                x.setLeft(yFormerLeftChild, dataElement);\n                x.setRight(yFormerRightChild, dataElement);\n            }\n            if ((x.getLeft(dataElement)) != null) {\n                x.getLeft(dataElement).setParent(x, dataElement);\n            } \n            if ((x.getRight(dataElement)) != null) {\n                x.getRight(dataElement).setParent(x, dataElement);\n            } \n            if ((y.getLeft(dataElement)) != null) {\n                y.getLeft(dataElement).setParent(y, dataElement);\n            } \n            if ((y.getRight(dataElement)) != null) {\n                y.getRight(dataElement).setParent(y, dataElement);\n            } \n            x.swapColors(y, dataElement);\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()]) == x) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = y;\n            } else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()]) == y) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()] = x;\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"x":"y","yFormerParent":"x"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[1010,1011],"tindex":"7fa9b830-3e4a-11e6-b121-6f15844ce449","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1468","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o instanceof java.util.Enumeration<?>) {\n        {\n            if (o instanceof java.util.Enumeration<?>) {\n                {\n                    final int int = size();\n                    org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(o);\n                    return size != (size());\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:553","type":"CtBinaryOperatorImpl","sourcecode":"index < ((size) / 2)"},"failures":[],"tindex":"7fa9df41-3e4a-11e6-b121-f5f3fcaf5ea4","method":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:79","type":"CtMethodImpl","sourcecode":"static boolean isValidBitIndex(final int bitIndex) {\n    if (bitIndex < (bitIndex / 2)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return bitIndex >= 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"bitIndex","index":"bitIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:151","type":"CtBinaryOperatorImpl","sourcecode":"(normalMap) instanceof org.apache.commons.collections4.OrderedMap"},"failures":[],"tindex":"7fa9df42-3e4a-11e6-b121-a554e68226df","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:86","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.DefaultedMap<K, V> defaultedMap(final java.util.Map<K, V> map, final V defaultValue) {\n    if (map instanceof org.apache.commons.collections4.OrderedMap) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.map.DefaultedMap<K, V>(map , org.apache.commons.collections4.functors.ConstantTransformer.constantTransformer(defaultValue));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"normalMap":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:388","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[1012],"tindex":"7fa9df43-3e4a-11e6-b121-b566616b6bcd","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1585","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getValue();\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = lookupValue(entry.getKey());\n            if ((node != null) && (node.getKey().equals(value))) {\n                doRedBlackDelete(node);\n                return true;\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.EqualPredicate:109","type":"CtBinaryOperatorImpl","sourcecode":"(equator) != null"},"failures":[],"tindex":"7faa0654-3e4a-11e6-b121-7340f1fbcc85","method":{"position":"org.apache.commons.collections4.functors.EqualPredicate:69","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> equalPredicate(final T object, final org.apache.commons.collections4.Equator<T> equator) {\n    if (equator != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == null) {\n                return org.apache.commons.collections4.functors.NullPredicate.nullPredicate();\n            } \n            return new org.apache.commons.collections4.functors.EqualPredicate<T>(object , equator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"equator":"equator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ComparatorUtils:173","type":"CtBinaryOperatorImpl","sourcecode":"comparator == null"},"failures":[],"tindex":"7faa0655-3e4a-11e6-b121-f1865c4f0139","method":{"position":"org.apache.commons.collections4.ComparatorUtils:172","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <E>java.util.Comparator<E> nullHighComparator(java.util.Comparator<E> comparator) {\n    if (comparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (comparator == null) {\n                comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator;\n            } \n            return new org.apache.commons.collections4.comparators.NullComparator<E>(comparator , true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparator":"comparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtBinaryOperatorImpl","sourcecode":"transform == null"},"failures":[1013],"tindex":"7faa2d66-3e4a-11e6-b121-7f00c650f5b1","method":{"position":"org.apache.commons.collections4.CollectionUtils:1063","type":"CtMethodImpl","sourcecode":"public static <I, O, R extends java.util.Collection<? super O>>R collect(final java.util.Iterator<? extends I> inputIterator, final org.apache.commons.collections4.Transformer<? super I, ? extends O> transformer, final R outputCollection) {\n    if (transformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((inputIterator != null) && (transformer != null)) {\n                while (inputIterator.hasNext()) {\n                    final I I = inputIterator.next();\n                    final O O = transformer.transform(item);\n                    outputCollection.add(value);\n                }\n            } \n            return outputCollection;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transform":"transformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.EnumerationIterator:107","type":"CtBinaryOperatorImpl","sourcecode":"(collection) != null"},"failures":[],"tindex":"7faa2d67-3e4a-11e6-b121-e1676e30cbd5","method":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:99","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll != null) {\n        {\n            return decorated().addAll(coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Enumeration<?>"},"failures":[],"tindex":"7faa2d68-3e4a-11e6-b121-6d2b8b4b2925","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1468","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o instanceof java.util.Enumeration<?>) {\n        {\n            if (o instanceof java.util.Enumeration<?>) {\n                {\n                    final int int = size();\n                    org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(o);\n                    return size != (size());\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[],"tindex":"7faa5479-3e4a-11e6-b121-69c2756a4e9d","method":{"position":"org.apache.commons.collections4.CollectionUtils:1154","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final C[] elements) {\n    if (collection instanceof java.util.List<?>) {\n        {\n            boolean boolean = false;\n            for (final C C : elements) {\n                changed |= collection.add(element);\n            }\n            return changed;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"collection"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"7faa547a-3e4a-11e6-b121-3f95440207c9","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:289","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic void putAll(final java.util.Map<? extends K, ?> map) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                {\n                    if (map instanceof org.apache.commons.collections4.MultiMap) {\n                        for (final java.util.Map.Entry<? extends K, java.lang.Object> java.util.Map.Entry<? extends K, java.lang.Object> : ((org.apache.commons.collections4.MultiMap<? extends K, V>)(map)).entrySet()) {\n                            putAll(entry.getKey(), ((java.util.Collection<V>)(entry.getValue())));\n                        }\n                    } else {\n                        for (final java.util.Map.Entry<? extends K, ?> java.util.Map.Entry<? extends K, ?> : map.entrySet()) {\n                            put(entry.getKey(), entry.getValue());\n                        }\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:184","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"7faa7b8b-3e4a-11e6-b121-eb10ac342843","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:289","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic void putAll(final java.util.Map<? extends K, ?> map) {\n    if (map != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map != null) {\n                {\n                    if (map instanceof org.apache.commons.collections4.MultiMap) {\n                        for (final java.util.Map.Entry<? extends K, java.lang.Object> java.util.Map.Entry<? extends K, java.lang.Object> : ((org.apache.commons.collections4.MultiMap<? extends K, V>)(map)).entrySet()) {\n                            putAll(entry.getKey(), ((java.util.Collection<V>)(entry.getValue())));\n                        }\n                    } else {\n                        for (final java.util.Map.Entry<? extends K, ?> java.util.Map.Entry<? extends K, ?> : map.entrySet()) {\n                            put(entry.getKey(), entry.getValue());\n                        }\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[423,435,449,458,469,473],"tindex":"7faa7b8c-3e4a-11e6-b121-3b00c98c1166","method":{"position":"org.apache.commons.collections4.bag.CollectionBag:92","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n            while (e.hasNext()) {\n                if (!(contains(e.next()))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:215","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[],"tindex":"7faa7b8d-3e4a-11e6-b121-b78ad6cecd2d","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1517","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object o) {\n    if (o == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (doRemoveValue(o)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[1014,1015],"tindex":"7faaa29e-3e4a-11e6-b121-1ff5ab5c9bb9","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:239","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final E E = super.remove(index);\n            java.util.Set<E>.remove(result);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:204","type":"CtBinaryOperatorImpl","sourcecode":"position == null"},"failures":[1016,1017,1018,1019],"tindex":"7faaa29f-3e4a-11e6-b121-b9367f1c9b6f","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:200","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        return n.V;\n                    } \n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"position":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtBinaryOperatorImpl","sourcecode":"list instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"7faac9b0-3e4a-11e6-b121-55fceed76260","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:999","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            return addAll(int, coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:305","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[257,322],"tindex":"7faac9b1-3e4a-11e6-b121-63a4098b570f","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:220","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void updateNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node, final E value) {\n    if (node == node) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            super.updateNode(node, value);\n            broadcastNodeChanged(node);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:158","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(bitIndex))"},"failures":[],"tindex":"7faac9b2-3e4a-11e6-b121-5318e2b94894","method":{"position":"org.apache.commons.collections4.list.GrowthList:181","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E element) {\n    if (!(org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(index))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = decorated().size();\n            if (index >= size) {\n                decorated().addAll(java.util.Collections.<E>nCopies(((index - size) + 1), null));\n            } \n            return decorated().set(index, element);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bitIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:124","type":"CtBinaryOperatorImpl","sourcecode":"largestKey == (-1)"},"failures":[488,489,490,492,493,494,496,497,498],"tindex":"7faaf0c3-3e4a-11e6-b121-d7d991895d67","method":{"position":"org.apache.commons.collections4.list.TreeList:517","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.list.TreeList.AVLNode<E> insertOnRight(final int indexRelativeToMe, final E obj) {\n    if (indexRelativeToMe == (-1)) {\n        {\n            if ((getRightSubTree()) == null) {\n                setRight(new org.apache.commons.collections4.list.TreeList.AVLNode<E>((+1) , obj , org.apache.commons.collections4.list.TreeList.AVLNode<E> , org.apache.commons.collections4.list.TreeList.AVLNode.this), null);\n            } else {\n                setRight(org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(indexRelativeToMe, obj), null);\n            }\n            if ((int) < 0) {\n                (int)--;\n            } \n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = balance();\n            recalcHeight();\n            return ret;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"largestKey":"indexRelativeToMe"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.lang.Object[]"},"failures":[1020,1021,1022,1023,957,958,959,1024,1025,1026,1027,1028,1029,960,1030,1031,1032,1033,1034,1035,1036,1037,961,1038,1039,1040,1041,1042,1043,962,963,1044,964,1045,1046,965,966,1047,1048,967,968,969,970,971],"tindex":"7faaf0c4-3e4a-11e6-b121-c5cf13e6deb9","method":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:174","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected int hash(final java.lang.Object key) {\n    if (key instanceof java.lang.Object[]) {\n        {\n            return java.lang.System.identityHashCode(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234478257/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}