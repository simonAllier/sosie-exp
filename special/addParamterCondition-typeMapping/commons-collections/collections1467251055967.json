{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":442,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":486,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":699,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":390,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":51,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":78,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":874,"org.apache.commons.collections4.ListUtilsTest.testIntersectListWithNoOverlapAndDifferentTypes":888,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":529,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":164,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":780,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":804,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":468,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":348,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":470,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":469,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":673,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":849,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":643,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":223,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":322,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":349,"org.apache.commons.collections4.CollectionUtilsTest.get":122,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":657,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":412,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":366,"org.apache.commons.collections4.list.TransformedListTest.testListListIterator":602,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":616,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":434,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":758,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":511,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":212,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":443,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":456,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":289,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":273,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":55,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":732,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":491,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":551,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":902,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":417,"org.apache.commons.collections4.CollectionUtilsTest.select":117,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":489,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiRemove":15,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":53,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":317,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":705,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":918,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":622,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":227,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":404,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":714,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":83,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":346,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":323,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":837,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":788,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":131,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":745,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":614,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":631,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":352,"org.apache.commons.collections4.CollectionUtilsTest.intersection":125,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRemoveChangesMap":828,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":652,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":636,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsContract":776,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":92,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":810,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":374,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":69,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":375,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":376,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":870,"org.apache.commons.collections4.list.TransformedListTest.testEmptyListCompatibility":598,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":152,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":77,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":252,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":233,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":608,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastKeySet":548,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":761,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":480,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":211,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":733,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":394,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":138,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":765,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":629,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":793,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testObjectEqualsSelf":168,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":694,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":879,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":544,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":65,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":882,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":908,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":288,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":514,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":266,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":690,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":393,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":258,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":833,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":148,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":203,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":711,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":742,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":271,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":272,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":270,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":57,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":255,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":418,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":243,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":128,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":681,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":459,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":543,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":284,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":389,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":403,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":333,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":528,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":98,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":900,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":93,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":582,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":451,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":905,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":360,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":135,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":873,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesIteratorRemoveChangesMap":166,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":213,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":588,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":740,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":64,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":225,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":812,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":303,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":180,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":444,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":445,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":731,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":446,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":640,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":878,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":501,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":294,"org.apache.commons.collections4.list.TreeListTest.testIterationOrder":899,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":401,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":558,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":210,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":291,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":432,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":595,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":226,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":773,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":574,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":570,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":787,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":191,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":280,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":915,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRetainAll":868,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":436,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":697,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":18,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":677,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":30,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":689,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":593,"org.apache.commons.collections4.list.TransformedListTest.testObjectHashCodeEqualsContract":626,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":382,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":526,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiKeySetValuesOrder":560,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":794,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":391,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":485,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":2,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":639,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":568,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":354,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetIteratorRemoveChangesMap":573,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":841,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":137,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":538,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":534,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":265,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":229,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":685,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":48,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":824,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":757,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":217,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":240,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":239,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":238,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":276,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":754,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":163,"org.apache.commons.collections4.map.LRUMapTest.testReset":204,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemovePrevious":607,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":664,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":338,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":795,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":739,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":112,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":766,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":1,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":46,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":336,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":830,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastValues":522,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":454,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":11,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":400,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":859,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":296,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":256,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":919,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":6,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":155,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":646,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":863,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":411,"org.apache.commons.collections4.keyvalue.TiedMapEntryTest.testEqualsAndHashCode":856,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":218,"org.apache.commons.collections4.map.LinkedMapTest.testReset":286,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":154,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":499,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":228,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":321,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":44,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":143,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":586,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":435,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":909,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet":853,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":423,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":66,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":242,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":674,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":23,"org.apache.commons.collections4.ListUtilsTest.testIntersectNonEmptyWithEmptyList":885,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":500,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":630,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":687,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":194,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":710,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":663,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":680,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":326,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":821,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":332,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":658,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":911,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":353,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":650,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":495,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":583,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":599,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":632,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":753,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":314,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":176,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":380,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":335,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":102,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":80,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":797,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":497,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":604,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":609,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":162,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":264,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":706,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":114,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":76,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":343,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":178,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":134,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":344,"org.apache.commons.collections4.map.HashedMapTest.testClone":357,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":345,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":762,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":441,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":21,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":56,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":823,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":320,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":474,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":709,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":462,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":701,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":86,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":557,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":215,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":172,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":116,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":502,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":831,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":847,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":16,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":510,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":625,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":862,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":515,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":903,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":398,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":545,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":914,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":309,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":308,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":310,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":361,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":275,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":578,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":295,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":121,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":383,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":433,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":298,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":460,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsSelfHashCode":777,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":108,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":836,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":916,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":907,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":319,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":318,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesIteratorRemoveChangesMap":140,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetIteratorRemoveChangesMap":532,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":287,"org.apache.commons.collections4.list.TreeListTest.testBug35258":898,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":420,"org.apache.commons.collections4.ListUtilsTest.testSelect":107,"org.apache.commons.collections4.map.LinkedMapTest.testClone":290,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":913,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":160,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":620,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":130,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":917,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":425,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":386,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":97,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":479,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":682,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesIteratorRemoveChangesMap":146,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":592,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":784,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":340,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":341,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":452,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":342,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":428,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":427,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":224,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":426,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":770,"org.apache.commons.collections4.list.TransformedListTest.testSerializeDeserializeThenCompare":624,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":141,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":369,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiKeySetValuesOrder":481,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":219,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":206,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":457,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":487,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":367,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":755,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":437,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":8,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":100,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":771,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":843,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":302,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":103,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":254,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":738,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":261,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":476,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":834,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":337,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":633,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":610,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":158,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":749,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":402,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":659,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":759,"org.apache.commons.collections4.ListUtilsTest.testPredicatedList":727,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":220,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":513,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":645,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":184,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":590,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":142,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":466,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":473,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":465,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":464,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":123,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":638,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":334,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":509,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":42,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":530,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":379,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":22,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":569,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":712,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":297,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":644,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":85,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":415,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":508,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":512,"org.apache.commons.collections4.ListUtilsTest.testIntersectNonEmptySubset":887,"org.apache.commons.collections4.map.LRUMapTest.testLRU":205,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":580,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":615,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":132,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":516,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":81,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":101,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":282,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":198,"org.apache.commons.collections4.map.StaticBucketMapTest.testObjectHashCodeEqualsContract":792,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":195,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":234,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":472,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastKeySet":521,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":729,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":355,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":716,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":799,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":362,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":232,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":216,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":790,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":118,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":257,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetIteratorRemoveChangesMap":494,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":675,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":35,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":482,"org.apache.commons.collections4.ListUtilsTest.testIntersectionOrderInsensitivity":890,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":458,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":187,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":188,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":648,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":43,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":381,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":430,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":241,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":4,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":555,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":750,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":31,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":5,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":157,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":700,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":679,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":7,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":678,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":829,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":278,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":730,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSortOrder":533,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":883,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":811,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":827,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":869,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":153,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":127,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":450,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":36,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":584,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":350,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastValues":563,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":628,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":698,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":299,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":300,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":110,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":41,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":50,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":68,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":197,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":556,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testStaticFactoryMethods":106,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":179,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":95,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":159,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":477,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":807,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":805,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":806,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":73,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiKeySetValuesOrder":519,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":9,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":331,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":617,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":567,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":99,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":641,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":577,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":517,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":339,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":359,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":635,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":541,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":623,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":262,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":245,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":79,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":186,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":246,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":396,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":840,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":596,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":891,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":115,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3":851,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet4":852,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":274,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet2":850,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":3,"org.apache.commons.collections4.comparators.BooleanComparatorTest.testEqualsCompatibleInstance":105,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":822,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":414,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":721,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":647,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":193,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":535,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":39,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":19,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testObjectHashCodeEqualsContract":170,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":819,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":666,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":695,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":74,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":253,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":801,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":722,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":772,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":301,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":571,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":283,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":634,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastValues":549,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":202,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":185,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":438,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":25,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":385,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":798,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":221,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":306,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":17,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":12,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":876,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":839,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":764,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":88,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":439,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":686,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":718,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":478,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":90,"org.apache.commons.collections4.CollectionUtilsTest.union":124,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":587,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiKeySetValuesOrder":546,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":475,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":285,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":550,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":91,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":661,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":844,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":419,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":463,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":655,"org.apache.commons.collections4.list.TreeListTest.testRemove":575,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":736,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":524,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":268,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":267,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":912,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemoveNext":612,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":269,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastKeySet":483,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":871,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":449,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":756,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":304,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":448,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":447,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":82,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":63,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":601,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":669,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":743,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":585,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":20,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":660,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":724,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":735,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":292,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":855,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":248,"org.apache.commons.collections4.map.LRUMapTest.testClone":207,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":150,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":637,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":498,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":566,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":365,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":89,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":307,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":507,"org.apache.commons.collections4.list.TransformedListTest.testFullListCompatibility":611,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":222,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":67,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":800,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":165,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":453,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":377,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":144,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":692,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":809,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":642,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":741,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":316,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":182,"org.apache.commons.collections4.list.TreeListTest.testListEquals":901,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":649,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":835,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":893,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":618,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":504,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":606,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":906,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":424,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":151,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":493,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":671,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":594,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":846,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":720,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":565,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":786,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":247,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":96,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":364,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":525,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":875,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":676,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":785,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":691,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetIteratorRemoveChangesMap":506,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":832,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":13,"org.apache.commons.collections4.map.SingletonMapTest.testClone":858,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":774,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":825,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":547,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":260,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":715,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":315,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":896,"org.apache.commons.collections4.CollectionUtilsTest.countMatches":881,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":250,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemovePrevious":597,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapRemove":505,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":324,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":29,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":70,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":576,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":119,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":363,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":71,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":174,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":62,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":540,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":708,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":196,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":603,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":104,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":327,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":894,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":895,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":190,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":358,"org.apache.commons.collections4.list.TransformedListTest.testCollectionClear":619,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":704,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":313,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":803,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":175,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":200,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":305,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":312,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":311,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":703,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":707,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":796,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":161,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":52,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":779,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":748,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":329,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSerializeDeserializeThenCompare":775,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":277,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":351,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":861,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":416,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":564,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":665,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":910,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":24,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":111,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":384,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":347,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":113,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":28,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":527,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":408,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":409,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":410,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":672,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":591,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":60,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":723,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":422,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":553,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":725,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":189,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":461,"org.apache.commons.collections4.ListUtilsTest.testIntersectListWithSelf":889,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":72,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":751,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":877,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":728,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":600,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemoveNext":605,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":281,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":744,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":230,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":249,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":892,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":61,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":126,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":431,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":368,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":520,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":537,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":45,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":244,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":87,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":814,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":815,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":816,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":581,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":518,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":531,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":713,"org.apache.commons.collections4.map.StaticBucketMapTest.testObjectEqualsSelf":791,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":904,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":37,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":688,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":120,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testSerializeDeserializeThenCompare":171,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":214,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":492,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSimpleSerialization":778,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":818,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":201,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testEqualsNull":169,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":539,"org.apache.commons.collections4.ListUtilsTest.testIntersectEmptyWithEmptyList":886,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":552,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":199,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":440,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":173,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":651,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":395,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":737,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveAll":867,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":763,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":192,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":34,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":378,"org.apache.commons.collections4.ListUtilsTest.testEmptyIfNull":589,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":293,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":654,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":872,"org.apache.commons.collections4.CollectionUtilsTest.testMatchesAll":845,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":789,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":662,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":488,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":897,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":75,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":523,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesIteratorRemoveChangesMap":133,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":129,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":667,"org.apache.commons.collections4.map.SingletonMapTest.testValuesIteratorRemoveChangesMap":156,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":693,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":251,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":653,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":471,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":760,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":627,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":783,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":860,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":781,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesIteratorRemoveChangesMap":139,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":279,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":848,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":817,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":27,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":808,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":813,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":147,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":388,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":413,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":387,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":263,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastKeySet":562,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":782,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":734,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":838,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":702,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":496,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains3":865,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains2":864,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains1":857,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":259,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":880,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":490,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":10,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":467,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":328,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":231,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":455,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":670,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":683,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":149,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":406,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":752,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":407,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":325,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":405,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":370,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":54,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":746,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":767,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":768,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":769,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":884,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":656,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":399,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":58,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":719,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":826,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":136,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":842,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":371,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveChangesMap":866,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":372,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":696,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":421,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":33,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetIteratorRemoveChangesMap":559,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":14,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":747,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":668,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":59,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":820,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":84,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":613,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":392,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":397,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx1":726,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":920,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":181,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":145,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":208,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":503,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testDecorateFactory":0,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":237,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":717,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":684,"org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap":109,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":854,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":572,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":561,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":536,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":542,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":235,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":429,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":802,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":236,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":554,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":373,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":47,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":94,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":177,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":579,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":183,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":209,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":621,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":330,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastValues":484,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":167,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":356,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":26,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":32},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtBinaryOperatorImpl","sourcecode":"(size()) == 0"},"failures":[],"tindex":"2765bfee-3e64-11e6-99af-27a233119f02","method":{"position":"org.apache.commons.collections4.map.TransformedMap:99","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.map.TransformedMap<K, V> transformedMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    final org.apache.commons.collections4.map.TransformedMap<K, V> org.apache.commons.collections4.map.TransformedMap<K, V> = new org.apache.commons.collections4.map.TransformedMap<K, V>(map , keyTransformer , valueTransformer);\n    if ((map.size()) > 0) {\n        final java.util.Map<K, V> java.util.Map<K, V> = decorated.transformMap(map);\n        decorated.clear();\n        decorated.decorated().putAll(transformed);\n    } \n    return decorated;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[0],"tindex":"2766d15f-3e64-11e6-99af-17b76d6a5417","method":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:60","type":"CtMethodImpl","sourcecode":"public static <K, V>org.apache.commons.collections4.OrderedMap<K, V> unmodifiableOrderedMap(final org.apache.commons.collections4.OrderedMap<? extends K, ? extends V> map) {\n    if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map instanceof org.apache.commons.collections4.Unmodifiable) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final org.apache.commons.collections4.OrderedMap<K, V> org.apache.commons.collections4.OrderedMap<K, V> = ((org.apache.commons.collections4.OrderedMap<K, V>)(map));\n                return tmpMap;\n            } \n            return new org.apache.commons.collections4.map.UnmodifiableOrderedMap<K, V>(map);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.TransformedBag:78","type":"CtBinaryOperatorImpl","sourcecode":"((transformer != null) && (bag != null)) && ((bag.size()) > 0)"},"failures":[1],"tindex":"2766f870-3e64-11e6-99af-8d7cae07c286","method":{"position":"org.apache.commons.collections4.BagUtils:136","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Bag<E> transformingBag(final org.apache.commons.collections4.Bag<E> bag, final org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer) {\n    if (((transformer != null) && (bag != null)) && ((bag.size()) > 0)) {\n        {\n            return org.apache.commons.collections4.bag.TransformedBag.transformingBag(bag, transformer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformer":"transformer","bag":"bag"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:157","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.String"},"failures":[2,3,4,5,6,7,8,9],"tindex":"2766f871-3e64-11e6-99af-eb4d13ccc42c","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1030","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value instanceof java.lang.String) {\n        {\n            return org.apache.commons.collections4.map.AbstractHashedMap<?, V>.containsValue(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1145","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof java.util.Map) == false"},"failures":[10,11,12,13,14],"tindex":"27671f82-3e64-11e6-99af-eb10f62cecf7","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2057","type":"CtMethodImpl","sourcecode":"public K get(final java.lang.Object key) {\n    if ((key instanceof java.util.Map) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.bidimap.TreeBidiMap.this.getKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:154","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Boolean"},"failures":[15],"tindex":"27671f83-3e64-11e6-99af-7b0e917ef060","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:117","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value instanceof java.lang.Boolean) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:138","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[16],"tindex":"27674694-3e64-11e6-99af-6b3e852d06b5","method":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:988","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E remove(final int index) {\n    if (index == 0) {\n        {\n            rangeCheck(index, int);\n            checkModCount();\n            final E E = org.apache.commons.collections4.list.AbstractLinkedList<E>.remove((index + (int)));\n            int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n            (int)--;\n            (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:420","type":"CtBinaryOperatorImpl","sourcecode":"k == null"},"failures":[17,18,19,20],"tindex":"27676da5-3e64-11e6-99af-a3a6f59f5d85","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:200","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key == null) {\n        {\n            final int int = getHash(key);\n            synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][hash]) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][hash];\n                while (n != null) {\n                    if (((n.K) == key) || (((n.K) != null) && (n.K.equals(key)))) {\n                        return n.V;\n                    } \n                    n = n.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n                }\n            }\n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:128","type":"CtBinaryOperatorImpl","sourcecode":"answer != null"},"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98],"tindex":"276794b6-3e64-11e6-99af-65123dcf6229","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:946","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.AbstractHashedMap<K, ?>.containsKey(key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:184","type":"CtInvocationImpl","sourcecode":"map.isEmpty()"},"failures":[],"tindex":"2767bbc7-3e64-11e6-99af-b73849842f70","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:183","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprotected java.util.Map<K, V> transformMap(final java.util.Map<? extends J, ? extends U> map) {\n    if (map.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (map.isEmpty()) {\n                return ((java.util.Map<K, V>)(map));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = new org.apache.commons.collections4.map.LinkedMap<K, V>(map.size());\n            for (final java.util.Map.Entry<? extends J, ? extends U> java.util.Map.Entry<? extends J, ? extends U> : map.entrySet()) {\n                result.put(transformKey(entry.getKey()), transformValue(entry.getValue()));\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.LazyList:113","type":"CtBinaryOperatorImpl","sourcecode":"index < size"},"failures":[],"tindex":"2767bbc8-3e64-11e6-99af-2f79ebc67d56","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:147","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic E set(final int index, final E object) {\n    if (index < index) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return decorated().set(index, object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"byteObject == null"},"failures":[99,100],"tindex":"2767e2d9-3e64-11e6-99af-15ecc9ab52db","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:94","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(final java.lang.Object key) {\n    if (key == null) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"byteObject":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:57","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[101,102,103,104],"tindex":"2767e2da-3e64-11e6-99af-4b3e4a8b2c35","method":{"position":"org.apache.commons.collections4.map.PredicatedMap:185","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> mapToCopy) {\n    if (mapToCopy instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : mapToCopy.entrySet()) {\n                validate(entry.getKey(), entry.getValue());\n            }\n            super.putAll(mapToCopy);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"mapToCopy"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.set.ListOrderedSet:329","type":"CtVariableReadImpl","sourcecode":"changed"},"failures":[],"tindex":"276809eb-3e64-11e6-99af-4fa582dd9a86","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2245","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.SortedMap<K, V> createRangeMap(final K fromKey, final boolean fromInclusive, final K toKey, final boolean toInclusive) {\n    if (toInclusive) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new RangeEntryMap(fromKey , fromInclusive , toKey , toInclusive);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"changed":"toInclusive"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterIterator:98","type":"CtUnaryOperatorImpl","sourcecode":"!(nextObjectSet)"},"failures":[105,106],"tindex":"276830fc-3e64-11e6-99af-df0df6385a9f","method":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:96","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.collections4.comparators.BooleanComparator booleanComparator(final boolean trueFirst) {\n    if (!trueFirst) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return trueFirst ? org.apache.commons.collections4.comparators.BooleanComparator.org.apache.commons.collections4.comparators.BooleanComparator.org.apache.commons.collections4.comparators.BooleanComparator : org.apache.commons.collections4.comparators.BooleanComparator.org.apache.commons.collections4.comparators.BooleanComparator.org.apache.commons.collections4.comparators.BooleanComparator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nextObjectSet":"trueFirst"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtBinaryOperatorImpl","sourcecode":"bag instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[],"tindex":"2769426d-3e64-11e6-99af-df6e874314ef","method":{"position":"org.apache.commons.collections4.MapUtils:1737","type":"CtMethodImpl","sourcecode":"public static <K, V, E>void populateMap(final org.apache.commons.collections4.MultiMap<K, V> map, final java.lang.Iterable<? extends E> elements, final org.apache.commons.collections4.Transformer<E, K> keyTransformer, final org.apache.commons.collections4.Transformer<E, V> valueTransformer) {\n    if (elements instanceof org.apache.commons.collections4.Unmodifiable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = elements.iterator();\n            while (iter.hasNext()) {\n                final E E = iter.next();\n                map.put(keyTransformer.transform(temp), valueTransformer.transform(temp));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bag":"elements"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.sequence.ReplacementsFinder:90","type":"CtBinaryOperatorImpl","sourcecode":"(pendingDeletions.isEmpty()) && (pendingInsertions.isEmpty())"},"failures":[],"tindex":"2769697e-3e64-11e6-99af-dbe0aec1dec6","method":{"position":"org.apache.commons.collections4.CollectionUtils:705","type":"CtMethodImpl","sourcecode":"public static <T, C extends org.apache.commons.collections4.Closure<? super T>>T forAllButLastDo(final java.lang.Iterable<T> collection, final C closure) {\n    if ((collection.isEmpty()) && (collection.isEmpty())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (collection != null) && (closure != null) ? org.apache.commons.collections4.CollectionUtils.forAllButLastDo(collection.iterator(), closure) : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pendingDeletions":"collection","pendingInsertions":"collection"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"map != null"},"failures":[],"tindex":"2769697f-3e64-11e6-99af-ada7c80e2430","method":{"position":"org.apache.commons.collections4.MapUtils:318","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Double getDouble(final java.util.Map<? super K, ?> map, final K key) {\n    if (map != null) {\n        {\n            final java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                return null;\n            } \n            if (answer instanceof java.lang.Double) {\n                return ((java.lang.Double)(answer));\n            } \n            return java.lang.Double.valueOf(answer.doubleValue());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:781","type":"CtBinaryOperatorImpl","sourcecode":"(size()) == 0"},"failures":[],"tindex":"27699090-3e64-11e6-99af-6ffc6c2e047e","method":{"position":"org.apache.commons.collections4.map.CompositeMap:156","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic synchronized java.util.Map<K, V> removeComposited(final java.util.Map<K, V> map) {\n    final int int = org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int;\n    for (int int = 0 ; i < size ; ++i) {\n        if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].equals(map)) {\n            final java.util.Map<K, V>[] java.util.Map<K, V>[] = new java.util.Map[size - 1];\n            java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], 0, temp, 0, i);\n            java.lang.System.arraycopy(org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[], (i + 1), temp, i, ((size - i) - 1));\n            org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[] = temp;\n            return map;\n        } \n    }\n    return null;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:97","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) instanceof java.util.ListIterator"},"failures":[],"tindex":"27699091-3e64-11e6-99af-23869298ec3d","method":{"position":"org.apache.commons.collections4.IteratorUtils:920","type":"CtMethodImpl","sourcecode":"public static <E>java.lang.Iterable<E> asMultipleUseIterable(final java.util.Iterator<? extends E> iterator) {\n    if (iterator instanceof java.util.ListIterator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            return new org.apache.commons.collections4.iterators.IteratorIterable<E>(iterator , true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.EqualPredicate:109","type":"CtBinaryOperatorImpl","sourcecode":"(equator) != null"},"failures":[],"tindex":"2769b7a2-3e64-11e6-99af-b131e37e76ff","method":{"position":"org.apache.commons.collections4.functors.EqualPredicate:69","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.collections4.Predicate<T> equalPredicate(final T object, final org.apache.commons.collections4.Equator<T> equator) {\n    if (equator != null) {\n        {\n            if (object == null) {\n                return org.apache.commons.collections4.functors.NullPredicate.nullPredicate();\n            } \n            return new org.apache.commons.collections4.functors.EqualPredicate<T>(object , equator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"equator":"equator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) > 0"},"failures":[],"tindex":"2769b7a3-3e64-11e6-99af-4d11e3d1bfef","method":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:90","type":"CtMethodImpl","sourcecode":"public static <J, K, U, V>org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V> transformingMap(final java.util.Map<K, V> map, final org.apache.commons.collections4.Transformer<? super J, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super U, ? extends V> valueTransformer) {\n    if ((map.size()) > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>(map , keyTransformer , valueTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof java.util.Set<?>"},"failures":[107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167],"tindex":"2769b7a4-3e64-11e6-99af-d98e56e814ce","method":{"position":"org.apache.commons.collections4.CollectionUtils:438","type":"CtMethodImpl","sourcecode":"public static <O>java.util.Map<O, java.lang.Integer> getCardinalityMap(final java.lang.Iterable<? extends O> coll) {\n    if (coll instanceof java.util.Set<?>) {\n        {\n            final java.util.Map<O, java.lang.Integer> java.util.Map<O, java.lang.Integer> = new java.util.HashMap<O, java.lang.Integer>();\n            for (final O O : coll) {\n                final java.lang.Integer java.lang.Integer = count.get(obj);\n                if (c == null) {\n                    count.put(obj, java.lang.Integer.valueOf(1));\n                } else {\n                    count.put(obj, java.lang.Integer.valueOf(((c.intValue()) + 1)));\n                }\n            }\n            return count;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:302","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Float"},"failures":[168,169,170,171],"tindex":"2769deb5-3e64-11e6-99af-2dcb0a195359","method":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:279","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object object) {\n    if (object instanceof java.lang.Float) {\n        {\n            if ((org.apache.commons.collections4.comparators.FixedOrderComparator.this) == object) {\n                return true;\n            } \n            if (null == object) {\n                return false;\n            } \n            if (object.getClass().equals(org.apache.commons.collections4.comparators.FixedOrderComparator.this.getClass())) {\n                final org.apache.commons.collections4.comparators.FixedOrderComparator<?> org.apache.commons.collections4.comparators.FixedOrderComparator<?> = ((org.apache.commons.collections4.comparators.FixedOrderComparator<?>)(object));\n                return null == (java.util.Map<T, java.lang.Integer>) ? null == (comp.java.util.Map<?, java.lang.Integer>) : (java.util.Map<T, java.lang.Integer>.equals(comp.java.util.Map<?, java.lang.Integer>)) && (null == (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) ? null == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) : ((((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) && ((int) == (comp.int))) && ((boolean) == (comp.boolean))) && ((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (comp.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior));\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:320","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[21,172,22,173,174,175,176,177,178,179,180,181,182,183,184,23,185,186,187,24,188,25,189,190,191,192,193,194,195,196,197,198,199,200,26,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,143,225,27,28,226,29,30,31,227,228,32,229,33,230,231,34,35,232,233,234,235,236,237,238,239,240,2,241,242,243,244,245,246,247,248,249,250,251,252,3,253,254,255,256,148,257,36,37,258,38,39,40,259,260,41,261,42,262,263,43,44,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,150,298,45,46,299,47,48,49,300,301,50,302,51,303,304,52,53,305,306,307,308,309,310,311,312,313,4,314,315,316,317,318,319,320,321,322,323,6,324,325,326,327,328,329,155,330,65,66,331,67,68,69,332,333,70,334,71,335,336,72,73,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,157,361,74,75,362,76,77,78,363,364,79,365,80,366,367,81,82,368,369,370,371,372,373,374,375,376,7,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,158,393,83,84,394,85,86,87,395,396,88,397,398,399,400,401,89,402,403,404,405,406,407,408,409,410,8,411,412,413,414,415,416,417,418,419,420,9,421,422,423,424,425,426,427,428,429,430,431,432,433,161,434,90,91,435,92,93,94,436,437,95,438,96,439,440,97,98,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463],"tindex":"276a05c6-3e64-11e6-99af-07fda5006ba7","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:381","type":"CtMethodImpl","sourcecode":"protected java.lang.Object convertKey(final java.lang.Object key) {\n    if (key == null) {\n        {\n            return key == null ? org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object : key;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:488","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[464,465,466,467,468,469,470,471],"tindex":"276a2cd7-3e64-11e6-99af-67fa0a1b149d","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1415","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            if ((contains(obj)) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(entry.getKey());\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:157","type":"CtInvocationImpl","sourcecode":"it.hasNext()"},"failures":[472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573],"tindex":"276a53e8-3e64-11e6-99af-f9d359dced19","method":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:264","type":"CtMethodImpl","sourcecode":"protected java.util.Iterator<K> createKeySetIterator(final java.util.Iterator<K> iterator) {\n    if (iterator.hasNext()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySetIterator<K>(iterator , org.apache.commons.collections4.bidimap.AbstractDualBidiMap.this);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"it":"iterator"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtBinaryOperatorImpl","sourcecode":"((list1 == null) || (list2 == null)) || ((list1.size()) != (list2.size()))"},"failures":[],"tindex":"276a7af9-3e64-11e6-99af-8d5a6d2adf43","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean retainAll(final java.util.Collection<?> coll) {\n    if (((coll == null) || (coll == null)) || ((list1.size()) != (list2.size()))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list1":"coll","list2":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtBinaryOperatorImpl","sourcecode":"key2 != null"},"failures":[430,423,424],"tindex":"276a7afa-3e64-11e6-99af-1b4b8ea1ca79","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:426","type":"CtMethodImpl","sourcecode":"public boolean containsKey(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key1 != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = hash(key1, key2, key3, key4);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][decorated().hashIndex(hashCode, decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)];\n            while (entry != null) {\n                if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n                    return true;\n                } \n                entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key2":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:806","type":"CtBinaryOperatorImpl","sourcecode":"node == null"},"failures":[574],"tindex":"276aa20b-3e64-11e6-99af-6ddd188a2992","method":{"position":"org.apache.commons.collections4.map.CompositeMap:413","type":"CtMethodImpl","sourcecode":"public V remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[].int) - 1 ; i >= 0 ; --i) {\n                if (org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].containsKey(key)) {\n                    return org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].remove(key);\n                } \n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:804","type":"CtBinaryOperatorImpl","sourcecode":"longObject == null"},"failures":[],"tindex":"276aa20c-3e64-11e6-99af-e31eed558664","method":{"position":"org.apache.commons.collections4.MapUtils:426","type":"CtMethodImpl","sourcecode":"public static <K>java.lang.Number getNumber(final java.util.Map<? super K, ?> map, final K key, final java.lang.Number defaultValue) {\n    if (defaultValue == null) {\n        {\n            java.lang.Number java.lang.Number = org.apache.commons.collections4.MapUtils.getNumber(map, key);\n            if (answer == null) {\n                answer = defaultValue;\n            } \n            return answer;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"longObject":"defaultValue"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Enumeration"},"failures":[],"tindex":"276aa20d-3e64-11e6-99af-4db1e3af20d7","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:764","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3) {\n    if (key1 instanceof java.util.Enumeration) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if (((((multi.size()) >= 3) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key1"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"276ac91e-3e64-11e6-99af-f9c4568f22cd","method":{"position":"org.apache.commons.collections4.CollectionUtils:494","type":"CtMethodImpl","sourcecode":"public static boolean isProperSubCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if (b != null) {\n        {\n            return ((a.size()) < (b.size())) && (org.apache.commons.collections4.CollectionUtils.isSubCollection(a, b));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"b"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:186","type":"CtBinaryOperatorImpl","sourcecode":"(root) != null"},"failures":[575,576,577,578,579,580,581,582,583,584,585,586,587,588],"tindex":"276ac91f-3e64-11e6-99af-9f719a4c0ed3","method":{"position":"org.apache.commons.collections4.list.TreeList:781","type":"CtMethodImpl","sourcecode":"private void setLeft(final org.apache.commons.collections4.list.TreeList.AVLNode<E> node, final org.apache.commons.collections4.list.TreeList.AVLNode<E> previous) {\n    if (node != null) {\n        {\n            boolean = node == null;\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = boolean ? previous : node;\n            recalcHeight();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[589],"tindex":"276aef30-3e64-11e6-99af-87e8fa816df9","method":{"position":"org.apache.commons.collections4.ListUtils:61","type":"CtMethodImpl","sourcecode":"public static <T>java.util.List<T> emptyIfNull(final java.util.List<T> list) {\n    if (list == null) {\n        {\n            return list == null ? java.util.Collections.<T>emptyList() : list;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.TreeList:224","type":"CtInvocationImpl","sourcecode":"c.isEmpty()"},"failures":[],"tindex":"276aef31-3e64-11e6-99af-3d0a2f54ba6c","method":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll.isEmpty()) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtBinaryOperatorImpl","sourcecode":"transform == null"},"failures":[590,591],"tindex":"276aef32-3e64-11e6-99af-f9f75669937d","method":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:57","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <I, O>org.apache.commons.collections4.Transformer<I, O> switchTransformer(final org.apache.commons.collections4.Predicate<? super I>[] predicates, final org.apache.commons.collections4.Transformer<? super I, ? extends O>[] transformers, final org.apache.commons.collections4.Transformer<? super I, ? extends O> defaultTransformer) {\n    if (defaultTransformer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            org.apache.commons.collections4.functors.FunctorUtils.validate(transformers);\n            if ((predicates.int) != (transformers.int)) {\n                throw new java.lang.IllegalArgumentException(\"The predicate and transformer arrays must be the same size\");\n            } \n            if ((predicates.int) == 0) {\n                return ((org.apache.commons.collections4.Transformer<I, O>)(defaultTransformer == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I, O>nullTransformer() : defaultTransformer));\n            } \n            return new org.apache.commons.collections4.functors.SwitchTransformer<I, O>(predicates , transformers , defaultTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transform":"defaultTransformer"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtBinaryOperatorImpl","sourcecode":"(coll1.size()) < (coll2.size())"},"failures":[112,113,121,127],"tindex":"276b1643-3e64-11e6-99af-d1f3e0921949","method":{"position":"org.apache.commons.collections4.CollectionUtils:463","type":"CtMethodImpl","sourcecode":"public static boolean isSubCollection(final java.util.Collection<?> a, final java.util.Collection<?> b) {\n    if ((b.size()) < (b.size())) {\n        {\n            final org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object> = new org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>(a , b);\n            for (final java.lang.Object java.lang.Object : a) {\n                if ((helper.freqA(obj)) > (helper.freqB(obj))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll2":"b","coll1":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:959","type":"CtBinaryOperatorImpl","sourcecode":"replacement != null"},"failures":[592,593],"tindex":"276b1644-3e64-11e6-99af-293c526acf95","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:631","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> nextSmaller(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n            if (node == null) {\n                rval = null;\n            } else if ((node.getLeft(dataElement)) != null) {\n                rval = greatestNode(node.getLeft(dataElement), dataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node.getParent(dataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = node;\n                while ((parent != null) && (child == (parent.getLeft(dataElement)))) {\n                    child = parent;\n                    parent = parent.getParent(dataElement);\n                }\n                rval = parent;\n            }\n            return rval;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"replacement":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:548","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[99],"tindex":"276b3d55-3e64-11e6-99af-ffd5d116f3fc","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:118","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1278","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626],"tindex":"276b3d56-3e64-11e6-99af-595b66e7d505","method":{"position":"org.apache.commons.collections4.list.TransformedList:151","type":"CtMethodImpl","sourcecode":"public java.util.ListIterator<E> listIterator(final int i) {\n    if (i == (-1)) {\n        {\n            return new TransformedListIterator(getList().listIterator(i));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"i"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtBinaryOperatorImpl","sourcecode":"pos < index"},"failures":[],"tindex":"276b3d57-3e64-11e6-99af-abc3c69d88b4","method":{"position":"org.apache.commons.collections4.list.PredicatedList:117","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index < index) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final E E : coll) {\n                validate(aColl);\n            }\n            return decorated().addAll(index, coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pos":"index","index":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtBinaryOperatorImpl","sourcecode":"mut == null"},"failures":[627,628,629,630,631,632,633,634],"tindex":"276b6468-3e64-11e6-99af-8724388903d2","method":{"position":"org.apache.commons.collections4.bag.TransformedBag:119","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object object, final int nCopies) {\n    if (object == null) {\n        {\n            return getBag().remove(object, nCopies);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mut":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtBinaryOperatorImpl","sourcecode":"(iterator) == null"},"failures":[],"tindex":"276b6469-3e64-11e6-99af-81b90a4bd190","method":{"position":"org.apache.commons.collections4.IteratorUtils:1000","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> toList(final java.util.Iterator<? extends E> iterator) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.IteratorUtils.toList(iterator, 10);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"276b646a-3e64-11e6-99af-791569514651","method":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:141","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:341","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,16,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725],"tindex":"276b8b7b-3e64-11e6-99af-bd4b2cff0f76","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:350","type":"CtMethodImpl","sourcecode":"protected void broadcastNodeInserted(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == node) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator();\n            while (it.hasNext()) {\n                final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = it.next();\n                final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = ref.get();\n                if (cursor == null) {\n                    it.remove();\n                } else {\n                    cursor.nodeInserted(node);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[726],"tindex":"276b8b7c-3e64-11e6-99af-c3ff06dd695f","method":{"position":"org.apache.commons.collections4.functors.AnyPredicate:52","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>org.apache.commons.collections4.Predicate<T> anyPredicate(final org.apache.commons.collections4.Predicate<? super T>... predicates) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.functors.FunctorUtils.validate(predicates);\n            if ((predicates.int) == 0) {\n                return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n            } \n            if ((predicates.int) == 1) {\n                return ((org.apache.commons.collections4.Predicate<T>)(predicates[0]));\n            } \n            return new org.apache.commons.collections4.functors.AnyPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(predicates));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:58","type":"CtBinaryOperatorImpl","sourcecode":"list == null"},"failures":[727],"tindex":"276bb28d-3e64-11e6-99af-69e1fd4aecdd","method":{"position":"org.apache.commons.collections4.ListUtils:418","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> predicatedList(final java.util.List<E> list, final org.apache.commons.collections4.Predicate<E> predicate) {\n    if (list == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.PredicatedList.predicatedList(list, predicate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtUnaryOperatorImpl","sourcecode":"!(o1 == null ? o2 == null : o1.equals(o2))"},"failures":[],"tindex":"276bb28e-3e64-11e6-99af-8990c1e96de5","method":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:425","type":"CtMethodImpl","sourcecode":"protected boolean isEqualValue(final java.lang.Object value1, final java.lang.Object value2) {\n    if (!(value1 == null ? value2 == null : o1.equals(o2))) {\n        {\n            return (value1 == value2) || (value1.equals(value2));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o1":"value1","o2":"value2"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[425],"tindex":"276bd99f-3e64-11e6-99af-793c5c4200ec","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:714","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1) {\n    if (key1 == null) {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if (((multi.size()) >= 1) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtBinaryOperatorImpl","sourcecode":"key1 != null"},"failures":[36,37,38,39,40,41,42,43,44,267,268,269,270,271,272,280,326,65,66,67,68,69,70,71,72,73,340,341,342,343,344,345,353],"tindex":"276bd9a0-3e64-11e6-99af-bb44743ceac1","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:664","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map.Entry) == false) {\n                return false;\n            } \n            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n            final java.lang.Object java.lang.Object = entry.getKey();\n            final java.lang.Object java.lang.Object = entry.getValue();\n            if ((entryKey == null) || (entryValue == null)) {\n                return false;\n            } \n            return (org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.isEqualKey(entryKey, java.lang.Object)) && (org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.isEqualValue(entryValue, getValue()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key1":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:643","type":"CtBinaryOperatorImpl","sourcecode":"integerObject == null"},"failures":[728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751],"tindex":"276c00b1-3e64-11e6-99af-cbc690deb5d6","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:568","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object value) {\n    if (value == null) {\n        {\n            return org.apache.commons.collections4.map.ListOrderedMap.KeySetView.this.org.apache.commons.collections4.map.ListOrderedMap<K, java.lang.Object>.containsKey(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"integerObject":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:917","type":"CtUnaryOperatorImpl","sourcecode":"!(root.isEmpty())"},"failures":[752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,464,465,466,770,131,771,772,773,774,775,776,777,778,779,780],"tindex":"276c00b2-3e64-11e6-99af-9913fc1e44d1","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:610","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> nextEntry(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> node) {\n    if (!(node.isEmpty())) {\n        {\n            if (node == null) {\n                return firstEntry();\n            } else {\n                return nextEntryImpl(node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, node, null);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[],"tindex":"276c27c3-3e64-11e6-99af-f9bdf89a3887","method":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:205","type":"CtMethodImpl","sourcecode":"public void setPredicate(final org.apache.commons.collections4.Predicate<? super E> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.collections4.iterators.FilterListIterator.this.org.apache.commons.collections4.Predicate<? super E> = predicate;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtBinaryOperatorImpl","sourcecode":"transformers == null"},"failures":[781,782,783,784,785,786,20,787,788,789,790,791,792],"tindex":"276c27c4-3e64-11e6-99af-1371467faa9c","method":{"position":"org.apache.commons.collections4.map.StaticBucketMap:405","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (obj == (org.apache.commons.collections4.map.StaticBucketMap.this)) {\n                return true;\n            } \n            if ((obj instanceof java.util.Map<?, ?>) == false) {\n                return false;\n            } \n            final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(obj));\n            return entrySet().equals(other.entrySet());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"transformers":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.GrowthList:183","type":"CtBinaryOperatorImpl","sourcecode":"index >= size"},"failures":[],"tindex":"276c27c5-3e64-11e6-99af-c77b39f9645f","method":{"position":"org.apache.commons.collections4.map.LinkedMap:298","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<K> subList(final int fromIndexInclusive, final int toIndexExclusive) {\n    if (fromIndexInclusive >= toIndexExclusive) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.list.UnmodifiableList.unmodifiableList(super.subList(fromIndexInclusive, toIndexExclusive));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"toIndexExclusive","index":"fromIndexInclusive"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:661","type":"CtBinaryOperatorImpl","sourcecode":"longObject == null"},"failures":[793,794,795],"tindex":"276c4ed6-3e64-11e6-99af-11381e84de97","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:404","type":"CtMethodImpl","sourcecode":"public java.util.Iterator<V> iterator(final java.lang.Object key) {\n    if (key == null) {\n        {\n            if (!(containsKey(key))) {\n                return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n            } \n            return new ValuesIterator(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"longObject":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:548","type":"CtBinaryOperatorImpl","sourcecode":"answer == null"},"failures":[755,756,758,759,760,763,764,765,766,767,768,769,464,465,466,467,796,797,798,799,800,801,802,803,804,805,806,807,468,469,470,471,808,809,810,811,812,813,814,815,816],"tindex":"276c4ed7-3e64-11e6-99af-7566500ae71d","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1405","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (o == null) {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = getEntry(((java.util.Map.Entry<?, ?>)(o)).getKey());\n            return (candidate != null) && (candidate.equals(o));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:323","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Double"},"failures":[817,818,819,820,821,822,823,824,825,826],"tindex":"276c4ed8-3e64-11e6-99af-19ef32ae0432","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:284","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object object) {\n    if (object instanceof java.lang.Double) {\n        {\n            return java.util.Set<E>.contains(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:154","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.Boolean"},"failures":[770,827,828],"tindex":"276c75e9-3e64-11e6-99af-996649fa2486","method":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1505","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(final java.lang.Object o) {\n    if (o instanceof java.lang.Boolean) {\n        {\n            return containsValue(o);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:1152","type":"CtBinaryOperatorImpl","sourcecode":"(size) > 0"},"failures":[829,830,831,832,752,753,754,833,755,756,757,758,759,760,761,762,763,834,764,835,836,765,766,837,838,839,767,768,769,464,465,466,770,840,841,131,842,843,844,771,467,772,773,774,779,780],"tindex":"276c75ea-3e64-11e6-99af-675bbfeda188","method":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:114","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean isBitSet(final java.lang.String key, final int bitIndex, final int lengthInBits) {\n    if (lengthInBits > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((key == null) || (bitIndex >= lengthInBits)) {\n                return false;\n            } \n            final int int = bitIndex / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            final int int = bitIndex % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n            return ((key.charAt(index)) & (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(bit))) != 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"lengthInBits"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.SingletonMap:121","type":"CtBinaryOperatorImpl","sourcecode":"(map.size()) != 1"},"failures":[],"tindex":"276dae6b-3e64-11e6-99af-0d5aaed748d7","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:231","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void putAll(final java.util.Map<? extends K, ? extends V> map) {\n    if ((map.size()) != 1) {\n        {\n            for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : map.entrySet()) {\n                put(entry.getKey(), entry.getValue());\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:305","type":"CtBinaryOperatorImpl","sourcecode":"node == (header)"},"failures":[678,679,680,684,646,650,672,651,652,653,677,654,655,656,659,660,661,662,663,665,666,16,674,642,644,645,685,686,687,688,689,709,690,691,692,706,712,717,718,719,720],"tindex":"276dae6c-3e64-11e6-99af-9d6ee69eaa81","method":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:245","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void removeNode(final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> node) {\n    if (node == node) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            super.removeNode(node);\n            broadcastNodeRemoved(node);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node","header":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:157","type":"CtBinaryOperatorImpl","sourcecode":"answer instanceof java.lang.String"},"failures":[428],"tindex":"276dd57d-3e64-11e6-99af-6b2590df7ad3","method":{"position":"org.apache.commons.collections4.map.MultiKeyMap:792","type":"CtMethodImpl","sourcecode":"public boolean removeAll(final java.lang.Object key1, final java.lang.Object key2, final java.lang.Object key3, final java.lang.Object key4) {\n    if (key2 instanceof java.lang.String) {\n        {\n            boolean boolean = false;\n            final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = mapIterator();\n            while (it.hasNext()) {\n                final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = it.next();\n                if ((((((multi.size()) >= 4) && (key1 == null ? (multi.getKey(0)) == null : key1.equals(multi.getKey(0)))) && (key2 == null ? (multi.getKey(1)) == null : key2.equals(multi.getKey(1)))) && (key3 == null ? (multi.getKey(2)) == null : key3.equals(multi.getKey(2)))) && (key4 == null ? (multi.getKey(3)) == null : key4.equals(multi.getKey(3)))) {\n                    it.remove();\n                    modified = true;\n                } \n            }\n            return modified;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"key2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtBinaryOperatorImpl","sourcecode":"collection instanceof java.util.List<?>"},"failures":[845],"tindex":"276dd57e-3e64-11e6-99af-4344f64b21b4","method":{"position":"org.apache.commons.collections4.CollectionUtils:871","type":"CtMethodImpl","sourcecode":"public static <C>boolean matchesAll(final java.lang.Iterable<C> input, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (input instanceof java.util.List<?>) {\n        {\n            if (predicate == null) {\n                return false;\n            } \n            if (input != null) {\n                for (final C C : input) {\n                    if (!(predicate.evaluate(o))) {\n                        return false;\n                    } \n                }\n            } \n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"input"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:325","type":"CtBinaryOperatorImpl","sourcecode":"(nodeCount) == 0"},"failures":[846,847],"tindex":"276dd57f-3e64-11e6-99af-c9320abf9863","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:316","type":"CtMethodImpl","sourcecode":"public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            for (final E E : coll) {\n                if (contains(e)) {\n                    continue;\n                } \n                decorated().add(e);\n                toAdd.add(e);\n                changed = true;\n            }\n            if (changed) {\n                java.util.List<E>.addAll(index, toAdd);\n            } \n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeCount":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtBinaryOperatorImpl","sourcecode":"(a == null) || (b == null)"},"failures":[848],"tindex":"276dfc90-3e64-11e6-99af-97abaa252a38","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((object == null) || (object == null)) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"object","b":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:84","type":"CtBinaryOperatorImpl","sourcecode":"(collection.size()) == 0"},"failures":[],"tindex":"276dfc91-3e64-11e6-99af-2b8385c1892c","method":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:108","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if ((coll.size()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = coll.iterator();\n            while (i.hasNext()) {\n                final boolean boolean = add(i.next(), 1);\n                changed = changed || added;\n            }\n            return changed;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collection":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1105","type":"CtBinaryOperatorImpl","sourcecode":"iterable instanceof java.util.Collection<?>"},"failures":[849],"tindex":"276dfc92-3e64-11e6-99af-31f87b4b7ef8","method":{"position":"org.apache.commons.collections4.CollectionUtils:1104","type":"CtMethodImpl","sourcecode":"public static <C>boolean addAll(final java.util.Collection<C> collection, final java.lang.Iterable<? extends C> iterable) {\n    if (iterable instanceof java.util.Collection<?>) {\n        {\n            if (iterable instanceof java.util.Collection<?>) {\n                return collection.addAll(((java.util.Collection<? extends C>)(iterable)));\n            } \n            return org.apache.commons.collections4.CollectionUtils.addAll(collection, iterable.iterator());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterable":"iterable"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:148","type":"CtInvocationImpl","sourcecode":"isEmpty()"},"failures":[],"tindex":"276e23a3-3e64-11e6-99af-11f1aef1fff7","method":{"position":"org.apache.commons.collections4.MapUtils:1588","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> fixedSizeSortedMap(final java.util.SortedMap<K, V> map) {\n    return org.apache.commons.collections4.map.FixedSizeSortedMap.fixedSizeSortedMap(map);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[3,36,37,38,39,40,41,42,43,44,270,271,272,276,279,280,281,282,283,6,325,65,66,67,68,69,70,71,72,73,343,344,345,349,352,353,354,355,356],"tindex":"276e23a4-3e64-11e6-99af-7d20993a7ba3","method":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:211","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(final java.lang.Object key) {\n    if (key instanceof java.util.Iterator<?>) {\n        {\n            purgeBeforeRead();\n            final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = getEntry(key);\n            if (entry == null) {\n                return false;\n            } \n            return (entry.getValue()) != null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:1077","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Dictionary"},"failures":[850,851,852,853,854,855],"tindex":"276e4ab5-3e64-11e6-99af-31c56aa42939","method":{"position":"org.apache.commons.collections4.map.DefaultedMap:200","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic V get(final java.lang.Object key) {\n    if (key instanceof java.util.Dictionary) {\n        {\n            if ((java.util.Map<K, V>.containsKey(key)) == false) {\n                return org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(((K)(key)));\n            } \n            return java.util.Map<K, V>.get(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1150","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map.Entry"},"failures":[856,857],"tindex":"276e4ab6-3e64-11e6-99af-13c23579c273","method":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:99","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (obj instanceof java.util.Map.Entry) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (obj == (org.apache.commons.collections4.keyvalue.TiedMapEntry.this)) {\n                        return true;\n                    } \n                    if ((obj instanceof java.util.Map.Entry) == false) {\n                        return false;\n                    } \n                    final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n                    final java.lang.Object java.lang.Object = getValue();\n                    return ((K) == null ? (other.getKey()) == null : K.equals(other.getKey())) && (value == null ? (other.getValue()) == null : value.equals(other.getValue()));\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:1773","type":"CtBinaryOperatorImpl","sourcecode":"sortedMap == null"},"failures":[],"tindex":"276e4ab7-3e64-11e6-99af-11734e2ee97a","method":{"position":"org.apache.commons.collections4.MapUtils:1570","type":"CtMethodImpl","sourcecode":"public static <K, V>java.util.SortedMap<K, V> transformedSortedMap(final java.util.SortedMap<K, V> map, final org.apache.commons.collections4.Transformer<? super K, ? extends K> keyTransformer, final org.apache.commons.collections4.Transformer<? super V, ? extends V> valueTransformer) {\n    if (map == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.map.TransformedSortedMap.transformingSortedMap(map, keyTransformer, valueTransformer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sortedMap":"map"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:505","type":"CtBinaryOperatorImpl","sourcecode":"cmp < 0"},"failures":[],"tindex":"276e71c8-3e64-11e6-99af-f5e7cd1e556e","method":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:169","type":"CtMethodImpl","sourcecode":"private org.apache.commons.collections4.sequence.SequencesComparator.Snake getMiddleSnake(final int start1, final int end1, final int start2, final int end2) {\n    if (end1 < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = end1 - start1;\n            final int int = end2 - start2;\n            if ((m == 0) || (n == 0)) {\n                return null;\n            } \n            final int int = m - n;\n            final int int = n + m;\n            final int int = ((sum % 2) == 0 ? sum : sum + 1) / 2;\n            int[][(1 + offset)] = start1;\n            int[][(1 + offset)] = end1 + 1;\n            for (int int = 0 ; d <= offset ; ++d) {\n                for (int int = -d ; k <= d ; k += 2) {\n                    final int int = k + offset;\n                    if ((k == (-d)) || ((k != d) && ((int[][(i - 1)]) < (int[][(i + 1)])))) {\n                        int[][i] = int[][(i + 1)];\n                    } else {\n                        int[][i] = (int[][(i - 1)]) + 1;\n                    }\n                    int int = int[][i];\n                    int int = ((x - start1) + start2) - k;\n                    while (((x < end1) && (y < end2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                        int[][i] = ++x;\n                        ++y;\n                    }\n                    if ((((delta % 2) != 0) && ((delta - d) <= k)) && (k <= (delta + d))) {\n                        if ((int[][(i - delta)]) <= (int[][i])) {\n                            return buildSnake(int[][(i - delta)], ((k + start1) - start2), end1, end2);\n                        } \n                    } \n                }\n                for (int int = delta - d ; k <= (delta + d) ; k += 2) {\n                    final int int = (k + offset) - delta;\n                    if ((k == (delta - d)) || ((k != (delta + d)) && ((int[][(i + 1)]) <= (int[][(i - 1)])))) {\n                        int[][i] = (int[][(i + 1)]) - 1;\n                    } else {\n                        int[][i] = int[][(i - 1)];\n                    }\n                    int int = (int[][i]) - 1;\n                    int int = ((x - start1) + start2) - k;\n                    while (((x >= start1) && (y >= start2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n                        int[][i] = x--;\n                        y--;\n                    }\n                    if ((((delta % 2) == 0) && ((-d) <= k)) && (k <= d)) {\n                        if ((int[][i]) <= (int[][(i + delta)])) {\n                            return buildSnake(int[][i], ((k + start1) - start2), end1, end2);\n                        } \n                    } \n                }\n            }\n            throw new java.lang.RuntimeException(\"Internal Error\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cmp":"end1"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Map<?, ?>"},"failures":[858,859,860,861,862,863,864,865,866,867,868,869,870,871],"tindex":"276e98d9-3e64-11e6-99af-8d061c6aace5","method":{"position":"org.apache.commons.collections4.map.SingletonMap:385","type":"CtMethodImpl","sourcecode":"protected boolean isEqualKey(final java.lang.Object key) {\n    if (key instanceof java.util.Map<?, ?>) {\n        {\n            return key == null ? (getKey()) == null : key.equals(getKey());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:159","type":"CtBinaryOperatorImpl","sourcecode":"keys == null"},"failures":[],"tindex":"276e98da-3e64-11e6-99af-13e5bda8bb6a","method":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:99","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (obj instanceof java.util.Map.Entry) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (obj == (org.apache.commons.collections4.keyvalue.TiedMapEntry.this)) {\n                        return true;\n                    } \n                    if ((obj instanceof java.util.Map.Entry) == false) {\n                        return false;\n                    } \n                    final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n                    final java.lang.Object java.lang.Object = getValue();\n                    return ((K) == null ? (other.getKey()) == null : K.equals(other.getKey())) && (value == null ? (other.getValue()) == null : value.equals(other.getValue()));\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"keys":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[872,136,873,874,875,876,877,878,879,880],"tindex":"276ebfeb-3e64-11e6-99af-535262a0876a","method":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:755","type":"CtMethodImpl","sourcecode":"private static void makeRed(final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> node, final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement dataElement) {\n    if (node != null) {\n        {\n            if (node != null) {\n                node.setRed(dataElement);\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtBinaryOperatorImpl","sourcecode":"predicate == null"},"failures":[881],"tindex":"276ebfec-3e64-11e6-99af-c7cacd44b01a","method":{"position":"org.apache.commons.collections4.CollectionUtils:823","type":"CtMethodImpl","sourcecode":"public static <C>int countMatches(final java.lang.Iterable<C> input, final org.apache.commons.collections4.Predicate<? super C> predicate) {\n    if (predicate == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            if ((input != null) && (predicate != null)) {\n                for (final C C : input) {\n                    if (predicate.evaluate(o)) {\n                        count++;\n                    } \n                }\n            } \n            return count;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicate":"predicate"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"predicates == null"},"failures":[882],"tindex":"276ebfed-3e64-11e6-99af-4fd2e1e9b2e0","method":{"position":"org.apache.commons.collections4.ClosureUtils:279","type":"CtMethodImpl","sourcecode":"public static <E>org.apache.commons.collections4.Closure<E> switchClosure(final org.apache.commons.collections4.Predicate<? super E>[] predicates, final org.apache.commons.collections4.Closure<? super E>[] closures) {\n    if (predicates == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.collections4.functors.SwitchClosure.<E>switchClosure(predicates, closures, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"predicates":"predicates"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:616","type":"CtBinaryOperatorImpl","sourcecode":"element == null"},"failures":[],"tindex":"276ee6fe-3e64-11e6-99af-bfe35f5c660f","method":{"position":"org.apache.commons.collections4.CollectionUtils:552","type":"CtMethodImpl","sourcecode":"public org.apache.commons.collections4.CollectionUtils.EquatorWrapper<?> transform(final java.lang.Object input) {\n    if (input == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.collections4.CollectionUtils.EquatorWrapper(equator , input);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"input"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[883],"tindex":"276ee6ff-3e64-11e6-99af-c326c4a1703e","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:237","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"remove() is not supported on CompositeCollection without a CollectionMutator strategy\");\n            } \n            return org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>.remove(org.apache.commons.collections4.collection.CompositeCollection.this, java.util.List<java.util.Collection<E>>, obj);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtBinaryOperatorImpl","sourcecode":"map instanceof org.apache.commons.collections4.MultiMap"},"failures":[884],"tindex":"276ee700-3e64-11e6-99af-e19383ef6ecf","method":{"position":"org.apache.commons.collections4.map.MultiValueMap:289","type":"CtMethodImpl","sourcecode":"@java.lang.Override\n@java.lang.SuppressWarnings(value = \"unchecked\")\npublic void putAll(final java.util.Map<? extends K, ?> map) {\n    if (map instanceof org.apache.commons.collections4.MultiMap) {\n        {\n            if (map instanceof org.apache.commons.collections4.MultiMap) {\n                for (final java.util.Map.Entry<? extends K, java.lang.Object> java.util.Map.Entry<? extends K, java.lang.Object> : ((org.apache.commons.collections4.MultiMap<? extends K, V>)(map)).entrySet()) {\n                    putAll(entry.getKey(), ((java.util.Collection<V>)(entry.getValue())));\n                }\n            } else {\n                for (final java.util.Map.Entry<? extends K, ?> java.util.Map.Entry<? extends K, ?> : map.entrySet()) {\n                    put(entry.getKey(), entry.getValue());\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtBinaryOperatorImpl","sourcecode":"coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator"},"failures":[],"tindex":"276f0e11-3e64-11e6-99af-2f0719600cd2","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return addAll(size(), coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtBinaryOperatorImpl","sourcecode":"size <= 0"},"failures":[192,193,198,200,214,215,216,217,429],"tindex":"276f0e12-3e64-11e6-99af-55c56d3573b2","method":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:298","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void removeEntry(final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry, final int hashIndex, final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> previous) {\n    if (hashIndex <= 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(entry));\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = null;\n            link.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = null;\n            super.removeEntry(entry, hashIndex, previous);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"hashIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtBinaryOperatorImpl","sourcecode":"list instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[885,886,887,888,889,890],"tindex":"276f3523-3e64-11e6-99af-bb9b18deead8","method":{"position":"org.apache.commons.collections4.ListUtils:89","type":"CtMethodImpl","sourcecode":"public static <E>java.util.List<E> intersection(final java.util.List<? extends E> list1, final java.util.List<? extends E> list2) {\n    if (list2 instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n            java.util.List<? extends E> java.util.List<? extends E> = list1;\n            java.util.List<? extends E> java.util.List<? extends E> = list2;\n            if ((list1.size()) > (list2.size())) {\n                smaller = list2;\n                larger = list1;\n            } \n            final java.util.HashSet<E> java.util.HashSet<E> = new java.util.HashSet<E>(smaller);\n            for (final E E : larger) {\n                if (hashSet.contains(e)) {\n                    result.add(e);\n                    hashSet.remove(e);\n                } \n            }\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"list2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.IteratorUtils:782","type":"CtBinaryOperatorImpl","sourcecode":"nodeList == null"},"failures":[],"tindex":"276f3524-3e64-11e6-99af-d161322d06c2","method":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:118","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic K removeValue(final java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                {\n                    throw new java.lang.UnsupportedOperationException();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nodeList":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtBinaryOperatorImpl","sourcecode":"index >= (maxElements)"},"failures":[891,892,893,894,895],"tindex":"276f3525-3e64-11e6-99af-2fb0756444f4","method":{"position":"org.apache.commons.collections4.map.ListOrderedMap:447","type":"CtMethodImpl","sourcecode":"public V put(int index, final K key, final V value) {\n    if (index >= index) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((index < 0) || (index > (java.util.List<K>.size()))) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Size: \") + (java.util.List<K>.size())));\n            } \n            final java.util.Map<K, V> java.util.Map<K, V> = decorated();\n            if (m.containsKey(key)) {\n                final V V = m.remove(key);\n                final int int = java.util.List<K>.indexOf(key);\n                java.util.List<K>.remove(pos);\n                if (pos < index) {\n                    index--;\n                } \n                java.util.List<K>.add(index, key);\n                m.put(key, value);\n                return result;\n            } else {\n                java.util.List<K>.add(index, key);\n                m.put(key, value);\n                return null;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"maxElements":"index","index":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:138","type":"CtBinaryOperatorImpl","sourcecode":"lengthInBits == 0"},"failures":[],"tindex":"276f5c36-3e64-11e6-99af-17cce81d2ba3","method":{"position":"org.apache.commons.collections4.list.UnmodifiableList:128","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n    if (index == 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lengthInBits":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtBinaryOperatorImpl","sourcecode":"(currentIndex) == 0"},"failures":[896,897,898,576,899,577,575,900,583,901,902,903,904,905,906,578,907,908,579,580,581,582,909,910,911,584,912,913,914,915,585,586,587,588,916,917],"tindex":"276f5c37-3e64-11e6-99af-e5802b87d3d8","method":{"position":"org.apache.commons.collections4.list.TreeList:413","type":"CtMethodImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> get(final int index) {\n    if (index == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = index - (int);\n            if (indexRelativeToMe == 0) {\n                return org.apache.commons.collections4.list.TreeList.AVLNode.this;\n            } \n            final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = indexRelativeToMe < 0 ? getLeftSubTree() : getRightSubTree();\n            if (nextNode == null) {\n                return null;\n            } \n            return nextNode.get(indexRelativeToMe);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"currentIndex":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtBinaryOperatorImpl","sourcecode":"r == null"},"failures":[],"tindex":"276f8348-3e64-11e6-99af-d12c18d327e2","method":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:89","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"r":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtBinaryOperatorImpl","sourcecode":"list instanceof org.apache.commons.collections4.Unmodifiable"},"failures":[918,919],"tindex":"276f8349-3e64-11e6-99af-991a065a9e84","method":{"position":"org.apache.commons.collections4.collection.CompositeCollection:275","type":"CtMethodImpl","sourcecode":"public boolean addAll(final java.util.Collection<? extends E> coll) {\n    if (coll instanceof org.apache.commons.collections4.Unmodifiable) {\n        {\n            if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n                throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeCollection without a CollectionMutator strategy\");\n            } \n            return org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>.addAll(org.apache.commons.collections4.collection.CompositeCollection.this, java.util.List<java.util.Collection<E>>, coll);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"coll"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:48","type":"CtBinaryOperatorImpl","sourcecode":"iterator == null"},"failures":[],"tindex":"276f834a-3e64-11e6-99af-ad2e320396d9","method":{"position":"org.apache.commons.collections4.IteratorUtils:976","type":"CtMethodImpl","sourcecode":"public static <E>E[] toArray(final java.util.Iterator<? extends E> iterator, final java.lang.Class<E> arrayClass) {\n    if (iterator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterator == null) {\n                throw new java.lang.NullPointerException(\"Iterator must not be null\");\n            } \n            if (arrayClass == null) {\n                throw new java.lang.NullPointerException(\"Array class must not be null\");\n            } \n            final java.util.List<E> java.util.List<E> = org.apache.commons.collections4.IteratorUtils.toList(iterator, 100);\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final E[] E[] = ((E[])(java.lang.reflect.Array.newInstance(arrayClass, list.size())));\n            return list.toArray(array);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:91","type":"CtBinaryOperatorImpl","sourcecode":"size <= 0"},"failures":[],"tindex":"276faa5b-3e64-11e6-99af-6961e47cdac9","method":{"position":"org.apache.commons.collections4.set.ListOrderedSet:344","type":"CtMethodImpl","sourcecode":"public java.lang.Object remove(final int index) {\n    if (index <= 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Object java.lang.Object = java.util.List<E>.remove(index);\n            remove(obj);\n            return obj;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtBinaryOperatorImpl","sourcecode":"key != null"},"failures":[],"tindex":"276faa5c-3e64-11e6-99af-43416138cb2e","method":{"position":"org.apache.commons.collections4.SplitMapUtils:79","type":"CtMethodImpl","sourcecode":"public V get(final java.lang.Object key) {\n    if (key != null) {\n        {\n            return org.apache.commons.collections4.Get<K, V>.get(key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof java.util.Iterator<?>"},"failures":[184,187,200],"tindex":"276faa5d-3e64-11e6-99af-670d7acfaca8","method":{"position":"org.apache.commons.collections4.set.MapBackedSet:130","type":"CtMethodImpl","sourcecode":"public boolean remove(final java.lang.Object obj) {\n    if (obj instanceof java.util.Iterator<?>) {\n        {\n            final int int = java.util.Map<E, ? super V>.size();\n            java.util.Map<E, ? super V>.remove(obj);\n            return (java.util.Map<E, ? super V>.size()) != size;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtBinaryOperatorImpl","sourcecode":"key == null"},"failures":[],"tindex":"276faa5e-3e64-11e6-99af-13a3b0f876a3","method":{"position":"org.apache.commons.collections4.map.Flat3Map:982","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = org.apache.commons.collections4.map.Flat3Map<K, ?>.containsKey(key);\n            org.apache.commons.collections4.map.Flat3Map<K, ?>.remove(key);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"key":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtBinaryOperatorImpl","sourcecode":"coll != null"},"failures":[],"tindex":"276fd16f-3e64-11e6-99af-0b3f363ca0c4","method":{"position":"org.apache.commons.collections4.list.SetUniqueList:246","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean removeAll(final java.util.Collection<?> coll) {\n    if (coll != null) {\n        {\n            boolean boolean = false;\n            for (final java.lang.Object java.lang.Object : coll) {\n                result |= remove(name);\n            }\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtBinaryOperatorImpl","sourcecode":"methodName == null"},"failures":[920],"tindex":"276fd170-3e64-11e6-99af-67c9b9a371f8","method":{"position":"org.apache.commons.collections4.ListUtils:574","type":"CtMethodImpl","sourcecode":"public static java.lang.String longestCommonSubsequence(final java.lang.CharSequence a, final java.lang.CharSequence b) {\n    if (a == null) {\n        {\n            if ((a == null) || (b == null)) {\n                throw new java.lang.IllegalArgumentException(\"CharSequence must not be null\");\n            } \n            final java.util.List<java.lang.Character> java.util.List<java.lang.Character> = org.apache.commons.collections4.ListUtils.longestCommonSubsequence(new org.apache.commons.collections4.ListUtils.CharSequenceAsList(a), new org.apache.commons.collections4.ListUtils.CharSequenceAsList(b));\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            for (java.lang.Character java.lang.Character : lcs) {\n                sb.append(ch);\n            }\n            return sb.toString();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"a"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.collections4.MapUtils:153","type":"CtBinaryOperatorImpl","sourcecode":"answer != null"},"failures":[],"tindex":"276fd171-3e64-11e6-99af-016119d19315","method":{"position":"org.apache.commons.collections4.list.FixedSizeList:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(final java.lang.Object object) {\n    if (object != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((object == null) || (object == null)) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467245511145/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    throw new java.lang.UnsupportedOperationException(\"List is fixed size\");\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"answer":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}