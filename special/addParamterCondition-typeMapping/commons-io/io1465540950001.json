{"failureDictionary":{},"transformations":[{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.filefilter.MagicNumberFileFilter:239","type":"CtBinaryOperatorImpl","sourcecode":"((file != null) && (file.isFile())) && (file.canRead())"},"failures":[],"tindex":"80d23f22-2ed6-11e6-bebc-6de6d1befee1","method":{"position":"org.apache.commons.io.FileUtils:1189","type":"CtMethodImpl","sourcecode":"public static void copyDirectoryToDirectory(java.io.File srcDir, java.io.File destDir) throws java.io.IOException {\n    if (((srcDir != null) && (file.isFile())) && (file.canRead())) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (srcDir == null) {\n                throw new java.lang.NullPointerException(\"Source must not be null\");\n            } \n            if ((srcDir.exists()) && ((srcDir.isDirectory()) == false)) {\n                throw new java.lang.IllegalArgumentException(((\"Source '\" + destDir) + \"' is not a directory\"));\n            } \n            if (destDir == null) {\n                throw new java.lang.NullPointerException(\"Destination must not be null\");\n            } \n            if ((destDir.exists()) && ((destDir.isDirectory()) == false)) {\n                throw new java.lang.IllegalArgumentException(((\"Destination '\" + destDir) + \"' is not a directory\"));\n            } \n            org.apache.commons.io.FileUtils.copyDirectory(srcDir, new java.io.File(destDir , srcDir.getName()), true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"srcDir"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.HexDump:81","type":"CtBinaryOperatorImpl","sourcecode":"stream == null"},"failures":[],"tindex":"80d377a3-2ed6-11e6-bebc-654bfe804302","method":{"position":"org.apache.commons.io.CopyUtils:134","type":"CtMethodImpl","sourcecode":"public static void copy(byte[] input, java.io.OutputStream output) throws java.io.IOException {\n    if (output == null) {\n        {\n            output.write(input);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"stream":"output"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOCase:165","type":"CtBinaryOperatorImpl","sourcecode":"(str1 == null) || (str2 == null)"},"failures":[],"tindex":"80d377a4-2ed6-11e6-bebc-3b3716edb653","method":{"position":"org.apache.commons.io.FilenameUtils:1064","type":"CtMethodImpl","sourcecode":"public static boolean equalsOnSystem(java.lang.String filename1, java.lang.String filename2) {\n    if ((filename1 == null) || (filename1 == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.io.FilenameUtils.equals(filename1, filename2, false, org.apache.commons.io.IOCase.org.apache.commons.io.IOCase.org.apache.commons.io.IOCase);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str1":"filename1","str2":"filename1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOUtils:504","type":"CtBinaryOperatorImpl","sourcecode":"size < 0"},"failures":[],"tindex":"80d39eb5-2ed6-11e6-bebc-8f2797c9ad91","method":{"position":"org.apache.commons.io.EndianUtils:168","type":"CtMethodImpl","sourcecode":"public static int readSwappedInteger(byte[] data, int offset) {\n    if (offset < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (((((data[(offset + 0)]) & 255) << 0) + (((data[(offset + 1)]) & 255) << 8)) + (((data[(offset + 2)]) & 255) << 16)) + (((data[(offset + 3)]) & 255) << 24);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"offset"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:275","type":"CtBinaryOperatorImpl","sourcecode":"file == null"},"failures":[],"tindex":"80d48916-2ed6-11e6-bebc-79e85d138c21","method":{"position":"org.apache.commons.io.TaggedIOException:64","type":"CtMethodImpl","sourcecode":"public static boolean isTaggedWith(java.lang.Throwable throwable, java.lang.Object tag) {\n    if (tag == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((tag != null) && (throwable instanceof org.apache.commons.io.TaggedIOException)) && (tag.equals(((org.apache.commons.io.TaggedIOException)(throwable)).java.io.Serializable));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"tag"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:56","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"80d4b027-2ed6-11e6-bebc-35d429ad2180","method":{"position":"org.apache.commons.io.IOUtils:2177","type":"CtMethodImpl","sourcecode":"public static boolean contentEquals(java.io.InputStream input1, java.io.InputStream input2) throws java.io.IOException {\n    if (null != input1) {\n        {\n            if (!(input1 instanceof java.io.BufferedInputStream)) {\n                input1 = new java.io.BufferedInputStream(input1);\n            } \n            if (!(input2 instanceof java.io.BufferedInputStream)) {\n                input2 = new java.io.BufferedInputStream(input2);\n            } \n            int int = input1.read();\n            while ((org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.int) != ch) {\n                int int = input2.read();\n                if (ch != ch2) {\n                    return false;\n                } \n                ch = input1.read();\n            }\n            int int = input2.read();\n            return ch2 == (org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.int);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input1"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.monitor.FileAlterationObserver:242","type":"CtBinaryOperatorImpl","sourcecode":"listener != null"},"failures":[],"tindex":"80d4d738-2ed6-11e6-bebc-cf3ba93b8df0","method":{"position":"org.apache.commons.io.monitor.FileAlterationObserver:241","type":"CtMethodImpl","sourcecode":"public void addListener(final org.apache.commons.io.monitor.FileAlterationListener listener) {\n    if (listener != null) {\n        {\n            if (listener != null) {\n                java.util.List<org.apache.commons.io.monitor.FileAlterationListener>.add(listener);\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"listener":"listener"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:2286","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.io.IOUtils.SKIP_BYTE_BUFFER) == null"},"failures":[],"tindex":"80d4d739-2ed6-11e6-bebc-a52d6d207e15","method":{"position":"org.apache.commons.io.output.ProxyOutputStream:68","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(byte[] bts) throws java.io.IOException {\n    if (bts == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            try {\n                int int = bts != null ? bts.int : 0;\n                beforeWrite(len);\n                java.io.OutputStream.write(bts);\n                afterWrite(len);\n            } catch (java.io.IOException e) {\n                handleIOException(e);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.io.IOUtils.SKIP_BYTE_BUFFER":"bts"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:689","type":"CtBinaryOperatorImpl","sourcecode":"filename == null"},"failures":[],"tindex":"80d4d73a-2ed6-11e6-bebc-ddc8659c0234","method":{"position":"org.apache.commons.io.FilenameUtils:1097","type":"CtMethodImpl","sourcecode":"public static boolean equalsNormalizedOnSystem(java.lang.String filename1, java.lang.String filename2) {\n    if (filename2 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.io.FilenameUtils.equals(filename1, filename2, true, org.apache.commons.io.IOCase.org.apache.commons.io.IOCase.org.apache.commons.io.IOCase);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename":"filename2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:2179","type":"CtUnaryOperatorImpl","sourcecode":"!(input1 instanceof java.io.BufferedInputStream)"},"failures":[],"tindex":"80d4fe4b-2ed6-11e6-bebc-5d7713268459","method":{"position":"org.apache.commons.io.EndianUtils:311","type":"CtMethodImpl","sourcecode":"public static int readSwappedUnsignedShort(java.io.InputStream input) throws java.io.IOException {\n    if (!(input instanceof java.io.BufferedInputStream)) {\n        {\n            int int = org.apache.commons.io.EndianUtils.read(input);\n            int int = org.apache.commons.io.EndianUtils.read(input);\n            return ((value1 & 255) << 0) + ((value2 & 255) << 8);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input1":"input"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.RegexFileFilter:72","type":"CtBinaryOperatorImpl","sourcecode":"pattern == null"},"failures":[],"tindex":"80d4fe4c-2ed6-11e6-bebc-0fab85b22a5b","method":{"position":"org.apache.commons.io.FilenameUtils:481","type":"CtMethodImpl","sourcecode":"public static java.lang.String concat(java.lang.String basePath, java.lang.String fullFilenameToAdd) {\n    if (fullFilenameToAdd == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = org.apache.commons.io.FilenameUtils.getPrefixLength(fullFilenameToAdd);\n            if (prefix < 0) {\n                return null;\n            } \n            if (prefix > 0) {\n                return org.apache.commons.io.FilenameUtils.normalize(fullFilenameToAdd);\n            } \n            if (basePath == null) {\n                return null;\n            } \n            int int = basePath.length();\n            if (len == 0) {\n                return org.apache.commons.io.FilenameUtils.normalize(fullFilenameToAdd);\n            } \n            char char = basePath.charAt((len - 1));\n            if (org.apache.commons.io.FilenameUtils.isSeparator(ch)) {\n                return org.apache.commons.io.FilenameUtils.normalize((basePath + fullFilenameToAdd));\n            } else {\n                return org.apache.commons.io.FilenameUtils.normalize(((basePath + '/') + fullFilenameToAdd));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pattern":"fullFilenameToAdd"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.XmlStreamWriter:190","type":"CtBinaryOperatorImpl","sourcecode":"(encoding) != null"},"failures":[],"tindex":"80d5255d-2ed6-11e6-bebc-3124ea7f5855","method":{"position":"org.apache.commons.io.IOUtils:1616","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static void write(java.lang.StringBuffer data, java.io.OutputStream output, java.lang.String encoding) throws java.io.IOException {\n    if (encoding != null) {\n        {\n            if (data != null) {\n                output.write(data.toString().getBytes(org.apache.commons.io.Charsets.toCharset(encoding)));\n            } \n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"encoding":"encoding"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2896","type":"CtUnaryOperatorImpl","sourcecode":"!(src.exists())"},"failures":[],"tindex":"80d5255e-2ed6-11e6-bebc-6ff3ee204e8e","method":{"position":"org.apache.commons.io.filefilter.NotFileFilter:66","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File file, java.lang.String name) {\n    if (!(file.exists())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return !(org.apache.commons.io.filefilter.IOFileFilter.accept(file, name));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"src":"file"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.RegexFileFilter:57","type":"CtBinaryOperatorImpl","sourcecode":"pattern == null"},"failures":[],"tindex":"80d5255f-2ed6-11e6-bebc-5986b08c6b41","method":{"position":"org.apache.commons.io.FilenameUtils:1194","type":"CtMethodImpl","sourcecode":"public static boolean isExtension(java.lang.String filename, java.util.Collection<java.lang.String> extensions) {\n    if (filename == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (filename == null) {\n                return false;\n            } \n            if ((extensions == null) || (extensions.isEmpty())) {\n                return (org.apache.commons.io.FilenameUtils.indexOfExtension(filename)) == (-1);\n            } \n            java.lang.String java.lang.String = org.apache.commons.io.FilenameUtils.getExtension(filename);\n            for (java.lang.String java.lang.String : extensions) {\n                if (fileExt.equals(extension)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pattern":"filename"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:723","type":"CtBinaryOperatorImpl","sourcecode":"c == (-1)"},"failures":[],"tindex":"80d54c70-2ed6-11e6-bebc-ade8d0975dcc","method":{"position":"org.apache.commons.io.input.BOMInputStream:367","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized void mark(int readlimit) {\n    if (readlimit == (-1)) {\n        {\n            int = int;\n            boolean = (int[]) == null;\n            java.io.InputStream.mark(readlimit);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"readlimit"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:295","type":"CtBinaryOperatorImpl","sourcecode":"(file.canRead()) == false"},"failures":[],"tindex":"80d54c71-2ed6-11e6-bebc-f7e7c4e79878","method":{"position":"org.apache.commons.io.FileUtils:2205","type":"CtMethodImpl","sourcecode":"public static void writeLines(java.io.File file, java.lang.String encoding, java.util.Collection<?> lines, java.lang.String lineEnding, boolean append) throws java.io.IOException {\n    if ((file.canRead()) == false) {\n        throw new java.io.IOException();\n    } else {\n        {\n            java.io.FileOutputStream java.io.FileOutputStream = null;\n            try {\n                out = org.apache.commons.io.FileUtils.openOutputStream(file, append);\n                final java.io.BufferedOutputStream java.io.BufferedOutputStream = new java.io.BufferedOutputStream(out);\n                org.apache.commons.io.IOUtils.writeLines(lines, lineEnding, buffer, encoding);\n                buffer.flush();\n                out.close();\n            } finally {\n                org.apache.commons.io.IOUtils.closeQuietly(out);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOUtils:1249","type":"CtBinaryOperatorImpl","sourcecode":"data != null"},"failures":[],"tindex":"80d57382-2ed6-11e6-bebc-6919bfa3b378","method":{"position":"org.apache.commons.io.output.NullOutputStream:44","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(byte[] b, int off, int len) {\n    if (b != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"data":"b"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2331","type":"CtUnaryOperatorImpl","sourcecode":"!(directory.isDirectory())"},"failures":[],"tindex":"80d57383-2ed6-11e6-bebc-f50da6f1cfbf","method":{"position":"org.apache.commons.io.FileUtils:626","type":"CtMethodImpl","sourcecode":"public static java.util.Iterator<java.io.File> iterateFiles(java.io.File directory, org.apache.commons.io.filefilter.IOFileFilter fileFilter, org.apache.commons.io.filefilter.IOFileFilter dirFilter) {\n    if (!(directory.isDirectory())) {\n        {\n            return org.apache.commons.io.FileUtils.listFiles(directory, fileFilter, dirFilter).iterator();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"directory"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.OrFileFilter:75","type":"CtBinaryOperatorImpl","sourcecode":"(filter1 == null) || (filter2 == null)"},"failures":[],"tindex":"80d57384-2ed6-11e6-bebc-bf8cd89536cc","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:242","type":"CtMethodImpl","sourcecode":"public static java.util.Set<java.io.File> filterSet(org.apache.commons.io.filefilter.IOFileFilter filter, java.lang.Iterable<java.io.File> files) {\n    if ((filter == null) || (filter == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.io.filefilter.FileFilterUtils.filter(filter, files, new java.util.HashSet<java.io.File>());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filter1":"filter","filter2":"filter"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOUtils:2182","type":"CtUnaryOperatorImpl","sourcecode":"!(input2 instanceof java.io.BufferedInputStream)"},"failures":[],"tindex":"80d59a95-2ed6-11e6-bebc-fd0d171b841d","method":{"position":"org.apache.commons.io.IOUtils:300","type":"CtMethodImpl","sourcecode":"public static void closeQuietly(java.io.Closeable closeable) {\n    if (!(closeable instanceof java.io.BufferedInputStream)) {\n        {\n            try {\n                if (closeable != null) {\n                    closeable.close();\n                } \n            } catch (java.io.IOException ioe) {\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input2":"closeable"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:399","type":"CtBinaryOperatorImpl","sourcecode":"(size.divide(org.apache.commons.io.FileUtils.ONE_MB_BI).compareTo(java.math.BigInteger.ZERO)) > 0"},"failures":[],"tindex":"80d59a96-2ed6-11e6-bebc-f5b33979086d","method":{"position":"org.apache.commons.io.FileUtils:388","type":"CtMethodImpl","sourcecode":"public static java.lang.String byteCountToDisplaySize(java.math.BigInteger size) {\n    if ((size.divide(size).compareTo(size)) > 0) {\n        {\n            java.lang.String java.lang.String;\n            if ((size.divide(org.apache.commons.io.FileUtils.org.apache.commons.io.FileUtils.java.math.BigInteger).compareTo(java.math.BigInteger.java.math.BigInteger.java.math.BigInteger)) > 0) {\n                displaySize = (java.lang.String.valueOf(size.divide(org.apache.commons.io.FileUtils.org.apache.commons.io.FileUtils.java.math.BigInteger))) + \" EB\";\n            } else if ((size.divide(org.apache.commons.io.FileUtils.org.apache.commons.io.FileUtils.java.math.BigInteger).compareTo(java.math.BigInteger.java.math.BigInteger.java.math.BigInteger)) > 0) {\n                displaySize = (java.lang.String.valueOf(size.divide(org.apache.commons.io.FileUtils.org.apache.commons.io.FileUtils.java.math.BigInteger))) + \" PB\";\n            } else if ((size.divide(org.apache.commons.io.FileUtils.org.apache.commons.io.FileUtils.java.math.BigInteger).compareTo(java.math.BigInteger.java.math.BigInteger.java.math.BigInteger)) > 0) {\n                displaySize = (java.lang.String.valueOf(size.divide(org.apache.commons.io.FileUtils.org.apache.commons.io.FileUtils.java.math.BigInteger))) + \" TB\";\n            } else if ((size.divide(org.apache.commons.io.FileUtils.org.apache.commons.io.FileUtils.java.math.BigInteger).compareTo(java.math.BigInteger.java.math.BigInteger.java.math.BigInteger)) > 0) {\n                displaySize = (java.lang.String.valueOf(size.divide(org.apache.commons.io.FileUtils.org.apache.commons.io.FileUtils.java.math.BigInteger))) + \" GB\";\n            } else if ((size.divide(org.apache.commons.io.FileUtils.org.apache.commons.io.FileUtils.java.math.BigInteger).compareTo(java.math.BigInteger.java.math.BigInteger.java.math.BigInteger)) > 0) {\n                displaySize = (java.lang.String.valueOf(size.divide(org.apache.commons.io.FileUtils.org.apache.commons.io.FileUtils.java.math.BigInteger))) + \" MB\";\n            } else if ((size.divide(org.apache.commons.io.FileUtils.org.apache.commons.io.FileUtils.java.math.BigInteger).compareTo(java.math.BigInteger.java.math.BigInteger.java.math.BigInteger)) > 0) {\n                displaySize = (java.lang.String.valueOf(size.divide(org.apache.commons.io.FileUtils.org.apache.commons.io.FileUtils.java.math.BigInteger))) + \" KB\";\n            } else {\n                displaySize = (java.lang.String.valueOf(size)) + \" bytes\";\n            }\n            return displaySize;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.io.FileUtils.ONE_MB_BI":"size","size":"size","java.math.BigInteger.ZERO":"size"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOCase:147","type":"CtBinaryOperatorImpl","sourcecode":"(str1 == null) || (str2 == null)"},"failures":[],"tindex":"80d5c1a7-2ed6-11e6-bebc-d76861270ebc","method":{"position":"org.apache.commons.io.output.ProxyWriter:93","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.io.Writer append(java.lang.CharSequence csq) throws java.io.IOException {\n    if ((csq == null) || (csq == null)) {\n        {\n            try {\n                int int = 0;\n                if (csq != null) {\n                    len = csq.length();\n                } \n                beforeWrite(len);\n                java.io.Writer.append(csq);\n                afterWrite(len);\n            } catch (java.io.IOException e) {\n                handleIOException(e);\n            }\n            return org.apache.commons.io.output.ProxyWriter.this;\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str1":"csq","str2":"csq"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:1146","type":"CtBinaryOperatorImpl","sourcecode":"filename == null"},"failures":[],"tindex":"80d5c1a8-2ed6-11e6-bebc-7d6df6965c01","method":{"position":"org.apache.commons.io.FilenameUtils:1080","type":"CtMethodImpl","sourcecode":"public static boolean equalsNormalized(java.lang.String filename1, java.lang.String filename2) {\n    if (filename1 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.io.FilenameUtils.equals(filename1, filename2, true, org.apache.commons.io.IOCase.org.apache.commons.io.IOCase.org.apache.commons.io.IOCase);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename":"filename1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2368","type":"CtUnaryOperatorImpl","sourcecode":"!(directory.isDirectory())"},"failures":[],"tindex":"80d5e8b9-2ed6-11e6-bebc-4d40852e27a9","method":{"position":"org.apache.commons.io.FileCleaningTracker:106","type":"CtMethodImpl","sourcecode":"public void track(java.lang.String path, java.lang.Object marker) {\n    if (!(marker.isDirectory())) {\n        {\n            track(path, marker, ((org.apache.commons.io.FileDeleteStrategy)(null)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"marker"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.ByteOrderMark:174","type":"CtBinaryOperatorImpl","sourcecode":"i > 0"},"failures":[],"tindex":"80d6d31a-2ed6-11e6-bebc-8ffbffc239ea","method":{"position":"org.apache.commons.io.IOUtils:502","type":"CtMethodImpl","sourcecode":"public static byte[] toByteArray(java.io.InputStream input, int size) throws java.io.IOException {\n    if (size > 0) {\n        {\n            if (size < 0) {\n                throw new java.lang.IllegalArgumentException((\"Size must be equal or greater than zero: \" + size));\n            } \n            if (size == 0) {\n                return new byte[0];\n            } \n            byte[] byte[] = new byte[size];\n            int int = 0;\n            int int;\n            while ((offset < size) && ((readed = input.read(data, offset, (size - offset))) != (org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.int))) {\n                offset += readed;\n            }\n            if (offset != size) {\n                throw new java.io.IOException((((\"Unexpected readed size. current: \" + offset) + \", excepted: \") + size));\n            } \n            return data;\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"size"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:1640","type":"CtUnaryOperatorImpl","sourcecode":"!(directory.isDirectory())"},"failures":[],"tindex":"80d6d31b-2ed6-11e6-bebc-e5afbe844f7b","method":{"position":"org.apache.commons.io.FileUtils:1484","type":"CtMethodImpl","sourcecode":"public static void copyURLToFile(java.net.URL source, java.io.File destination, int connectionTimeout, int readTimeout) throws java.io.IOException {\n    if (!(destination.isDirectory())) {\n        {\n            java.net.URLConnection java.net.URLConnection = source.openConnection();\n            connection.setConnectTimeout(connectionTimeout);\n            connection.setReadTimeout(readTimeout);\n            java.io.InputStream java.io.InputStream = connection.getInputStream();\n            org.apache.commons.io.FileUtils.copyInputStreamToFile(input, destination);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"destination"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:810","type":"CtBinaryOperatorImpl","sourcecode":"charsetName == null"},"failures":[],"tindex":"80d6fa2c-2ed6-11e6-bebc-cd8d3469cf32","method":{"position":"org.apache.commons.io.FilenameUtils:1145","type":"CtMethodImpl","sourcecode":"public static boolean isExtension(java.lang.String filename, java.lang.String extension) {\n    if (extension == null) {\n        {\n            if (filename == null) {\n                return false;\n            } \n            if ((extension == null) || ((extension.length()) == 0)) {\n                return (org.apache.commons.io.FilenameUtils.indexOfExtension(filename)) == (-1);\n            } \n            java.lang.String java.lang.String = org.apache.commons.io.FilenameUtils.getExtension(filename);\n            return fileExt.equals(extension);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"charsetName":"extension"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.NullInputStream:284","type":"CtBinaryOperatorImpl","sourcecode":"(position) == (size)"},"failures":[],"tindex":"80d7966d-2ed6-11e6-bebc-b532df412b81","method":{"position":"org.apache.commons.io.IOUtils:482","type":"CtMethodImpl","sourcecode":"public static byte[] toByteArray(java.io.InputStream input, long size) throws java.io.IOException {\n    if (size == size) {\n        {\n            if (size > (java.lang.Integer.java.lang.Integer.int)) {\n                throw new java.lang.IllegalArgumentException((\"Size cannot be greater than Integer max value: \" + size));\n            } \n            return org.apache.commons.io.IOUtils.toByteArray(input, ((int)(size)));\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"size","position":"size"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:77","type":"CtBinaryOperatorImpl","sourcecode":"filter == null"},"failures":[],"tindex":"80d7bd7e-2ed6-11e6-bebc-d19dde4e133d","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:757","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.filefilter.IOFileFilter makeSVNAware(org.apache.commons.io.filefilter.IOFileFilter filter) {\n    if (filter == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (filter == null) {\n                return org.apache.commons.io.filefilter.FileFilterUtils.org.apache.commons.io.filefilter.FileFilterUtils.org.apache.commons.io.filefilter.IOFileFilter;\n            } else {\n                return org.apache.commons.io.filefilter.FileFilterUtils.and(filter, org.apache.commons.io.filefilter.FileFilterUtils.org.apache.commons.io.filefilter.FileFilterUtils.org.apache.commons.io.filefilter.IOFileFilter);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filter":"filter"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"commons-io","transformationCount":29,"projectType":"maven","artifactId":"commons-io","generatorVersion":"1.0","version":"2.4"}}