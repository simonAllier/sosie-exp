{"failureDictionary":{},"transformations":[{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.CharSequenceInputStream:114","type":"CtBinaryOperatorImpl","sourcecode":"b == null"},"failures":[],"tindex":"9e113cfc-2e80-11e6-b122-856caaac6f9f","method":{"position":"org.apache.commons.io.IOUtils:2557","type":"CtMethodImpl","sourcecode":"public static void readFully(java.io.InputStream input, byte[] buffer) throws java.io.IOException {\n    if (buffer == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (buffer == null) {\n                throw new java.io.IOException();\n            } else {\n                {\n                    org.apache.commons.io.IOUtils.readFully(input, buffer, 0, buffer.int);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"buffer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.LineIterator:90","type":"CtFieldReadImpl","sourcecode":"finished"},"failures":[],"tindex":"9e11d93d-2e80-11e6-b122-2549c262fa4b","method":{"position":"org.apache.commons.io.monitor.FileEntry:247","type":"CtMethodImpl","sourcecode":"public void setExists(boolean exists) {\n    if (exists) {\n        {\n            org.apache.commons.io.monitor.FileEntry.this.boolean = exists;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"finished":"exists"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.NameFileFilter:100","type":"CtBinaryOperatorImpl","sourcecode":"names == null"},"failures":[],"tindex":"9e12004e-2e80-11e6-b122-874b445c3276","method":{"position":"org.apache.commons.io.FileUtils:191","type":"CtMethodImpl","sourcecode":"public static java.io.File getFile(java.io.File directory, java.lang.String... names) {\n    if (names == null) {\n        {\n            if (directory == null) {\n                throw new java.lang.NullPointerException(\"directorydirectory must not be null\");\n            } \n            if (names == null) {\n                throw new java.lang.NullPointerException(\"names must not be null\");\n            } \n            java.io.File java.io.File = directory;\n            for (java.lang.String java.lang.String : names) {\n                file = new java.io.File(file , name);\n            }\n            return file;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"names":"names"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:56","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"9e12275f-2e80-11e6-b122-d3f993c39d67","method":{"position":"org.apache.commons.io.EndianUtils:311","type":"CtMethodImpl","sourcecode":"public static int readSwappedUnsignedShort(java.io.InputStream input) throws java.io.IOException {\n    if (null != input) {\n        throw new java.io.IOException();\n    } else {\n        {\n            int int = org.apache.commons.io.EndianUtils.read(input);\n            int int = org.apache.commons.io.EndianUtils.read(input);\n            return ((value1 & 255) << 0) + ((value2 & 255) << 8);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.ProxyWriter:134","type":"CtBinaryOperatorImpl","sourcecode":"chr != null"},"failures":[],"tindex":"9e122760-2e80-11e6-b122-c7169beb8821","method":{"position":"org.apache.commons.io.input.NullReader:191","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int read(char[] chars) throws java.io.IOException {\n    if (chars != null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            return read(chars, 0, chars.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chr":"chars"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.AndFileFilter:76","type":"CtBinaryOperatorImpl","sourcecode":"(filter1 == null) || (filter2 == null)"},"failures":[],"tindex":"9e122761-2e80-11e6-b122-89eb6b3f29dc","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:180","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.io.File> filterList(org.apache.commons.io.filefilter.IOFileFilter filter, java.io.File... files) {\n    if ((filter == null) || (filter == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.io.File[] java.io.File[] = org.apache.commons.io.filefilter.FileFilterUtils.filter(filter, files);\n            return java.util.Arrays.asList(acceptedFiles);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filter1":"filter","filter2":"filter"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2778","type":"CtBinaryOperatorImpl","sourcecode":"src == null"},"failures":[],"tindex":"9e124d72-2e80-11e6-b122-917e91a5e7af","method":{"position":"org.apache.commons.io.output.LockableFileWriter:268","type":"CtMethodImpl","sourcecode":"private java.io.Writer initWriter(java.io.File file, java.nio.charset.Charset encoding, boolean append) throws java.io.IOException {\n    if (file == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            boolean boolean = file.exists();\n            java.io.OutputStream java.io.OutputStream = null;\n            java.io.Writer java.io.Writer = null;\n            try {\n                stream = new java.io.FileOutputStream(file.getAbsolutePath() , append);\n                writer = new java.io.OutputStreamWriter(stream , org.apache.commons.io.Charsets.toCharset(encoding));\n            } catch (java.io.IOException ex) {\n                org.apache.commons.io.IOUtils.closeQuietly(writer);\n                org.apache.commons.io.IOUtils.closeQuietly(stream);\n                org.apache.commons.io.FileUtils.deleteQuietly(java.io.File);\n                if (fileExistedAlready == false) {\n                    org.apache.commons.io.FileUtils.deleteQuietly(file);\n                } \n                throw ex;\n            } catch (java.lang.RuntimeException ex) {\n                org.apache.commons.io.IOUtils.closeQuietly(writer);\n                org.apache.commons.io.IOUtils.closeQuietly(stream);\n                org.apache.commons.io.FileUtils.deleteQuietly(java.io.File);\n                if (fileExistedAlready == false) {\n                    org.apache.commons.io.FileUtils.deleteQuietly(file);\n                } \n                throw ex;\n            }\n            return writer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"src":"file"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:1561","type":"CtBinaryOperatorImpl","sourcecode":"file == null"},"failures":[],"tindex":"9e127483-2e80-11e6-b122-71e1302e4d66","method":{"position":"org.apache.commons.io.FileUtils:1747","type":"CtMethodImpl","sourcecode":"public static java.lang.String readFileToString(java.io.File file) throws java.io.IOException {\n    if (file == null) {\n        {\n            return org.apache.commons.io.FileUtils.readFileToString(file, java.nio.charset.Charset.defaultCharset());\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.TeeInputStream:145","type":"CtBinaryOperatorImpl","sourcecode":"n != (-1)"},"failures":[],"tindex":"9e129b94-2e80-11e6-b122-a72bcd8db30e","method":{"position":"org.apache.commons.io.input.ProxyInputStream:200","type":"CtMethodImpl","sourcecode":"protected void beforeRead(int n) throws java.io.IOException {\n    if (n != (-1)) {\n        {\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"n"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileSystemUtils:380","type":"CtBinaryOperatorImpl","sourcecode":"(path.length()) == 0"},"failures":[],"tindex":"9e129b95-2e80-11e6-b122-b382cf3e97be","method":{"position":"org.apache.commons.io.IOUtils:1448","type":"CtMethodImpl","sourcecode":"public static void write(java.lang.CharSequence data, java.io.OutputStream output, java.nio.charset.Charset encoding) throws java.io.IOException {\n    if ((data.length()) == 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (data != null) {\n                org.apache.commons.io.IOUtils.write(data.toString(), output, encoding);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"path":"data"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.XmlStreamWriter:140","type":"CtBinaryOperatorImpl","sourcecode":"(writer) != null"},"failures":[],"tindex":"9e12c2a6-2e80-11e6-b122-4703cf10e824","method":{"position":"org.apache.commons.io.CopyUtils:215","type":"CtMethodImpl","sourcecode":"public static int copy(java.io.Reader input, java.io.Writer output) throws java.io.IOException {\n    if (input == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (output != null) {\n                throw new java.io.IOException();\n            } else {\n                {\n                    char[] char[] = new char[org.apache.commons.io.CopyUtils.org.apache.commons.io.CopyUtils.int];\n                    int int = 0;\n                    int int = 0;\n                    while ((-1) != (n = input.read(buffer))) {\n                        output.write(buffer, 0, n);\n                        count += n;\n                    }\n                    return count;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"writer":"output"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOUtils:1526","type":"CtBinaryOperatorImpl","sourcecode":"data != null"},"failures":[],"tindex":"9e12c2a7-2e80-11e6-b122-910fe73cf403","method":{"position":"org.apache.commons.io.FilenameUtils:688","type":"CtMethodImpl","sourcecode":"public static int indexOfLastSeparator(java.lang.String filename) {\n    if (filename == null) {\n        {\n            if (filename != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (filename == null) {\n                        return -1;\n                    } \n                    int int = filename.lastIndexOf(org.apache.commons.io.FilenameUtils.org.apache.commons.io.FilenameUtils.char);\n                    int int = filename.lastIndexOf(org.apache.commons.io.FilenameUtils.org.apache.commons.io.FilenameUtils.char);\n                    return java.lang.Math.max(lastUnixPos, lastWindowsPos);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"data":"filename"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.input.ReaderInputStream:231","type":"CtBinaryOperatorImpl","sourcecode":"len == 0"},"failures":[],"tindex":"9e12e9b8-2e80-11e6-b122-9f2ccabfc536","method":{"position":"org.apache.commons.io.EndianUtils:154","type":"CtMethodImpl","sourcecode":"public static void writeSwappedInteger(byte[] data, int offset, int value) {\n    if (value > 16) {\n        {\n            if (value == 0) {\n                {\n                    data[(offset + 0)] = ((byte)((value >> 0) & 255));\n                    data[(offset + 1)] = ((byte)((value >> 8) & 255));\n                    data[(offset + 2)] = ((byte)((value >> 16) & 255));\n                    data[(offset + 3)] = ((byte)((value >> 24) & 255));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.NullReader:140","type":"CtUnaryOperatorImpl","sourcecode":"!(markSupported)"},"failures":[],"tindex":"9e1310c9-2e80-11e6-b122-29d533309c82","method":{"position":"org.apache.commons.io.FileSystemUtils:379","type":"CtMethodImpl","sourcecode":"long freeSpaceUnix(java.lang.String path, boolean kb, boolean posix, long timeout) throws java.io.IOException {\n    if (!posix) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if ((path.length()) == 0) {\n                throw new java.lang.IllegalArgumentException(\"Path must not be empty\");\n            } \n            java.lang.String java.lang.String = \"-\";\n            if (kb) {\n                flags += \"k\";\n            } \n            if (posix) {\n                flags += \"P\";\n            } \n            java.lang.String[] java.lang.String[] = (flags.length()) > 1 ? new java.lang.String[]{ org.apache.commons.io.FileSystemUtils.org.apache.commons.io.FileSystemUtils.java.lang.String , flags , path } : new java.lang.String[]{ org.apache.commons.io.FileSystemUtils.org.apache.commons.io.FileSystemUtils.java.lang.String , path };\n            java.util.List<java.lang.String> java.util.List<java.lang.String> = performCommand(cmdAttribs, 3, timeout);\n            if ((lines.size()) < 2) {\n                throw new java.io.IOException(((((((\"Command line '\" + (org.apache.commons.io.FileSystemUtils.org.apache.commons.io.FileSystemUtils.java.lang.String)) + \"' did not return info as expected \") + \"for path '\") + path) + \"'- response was \") + lines));\n            } \n            java.lang.String java.lang.String = lines.get(1);\n            java.util.StringTokenizer java.util.StringTokenizer = new java.util.StringTokenizer(line2 , \" \");\n            if ((tok.countTokens()) < 4) {\n                if (((tok.countTokens()) == 1) && ((lines.size()) >= 3)) {\n                    java.lang.String java.lang.String = lines.get(2);\n                    tok = new java.util.StringTokenizer(line3 , \" \");\n                } else {\n                    throw new java.io.IOException((((((\"Command line '\" + (org.apache.commons.io.FileSystemUtils.org.apache.commons.io.FileSystemUtils.java.lang.String)) + \"' did not return data as expected \") + \"for path '\") + path) + \"'- check path is valid\"));\n                }\n            } else {\n                tok.nextToken();\n            }\n            tok.nextToken();\n            tok.nextToken();\n            java.lang.String java.lang.String = tok.nextToken();\n            return parseBytes(freeSpace, path);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"markSupported":"posix"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:643","type":"CtBinaryOperatorImpl","sourcecode":"(posUnix == (-1)) && (posWin == (-1))"},"failures":[],"tindex":"9e1337da-2e80-11e6-b122-91189695dbfd","method":{"position":"org.apache.commons.io.input.CharSequenceInputStream:189","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized void mark(@java.lang.SuppressWarnings(value = \"unused\")\nint readlimit) {\n    if ((readlimit == (-1)) && (readlimit == (-1))) {\n        {\n            org.apache.commons.io.input.CharSequenceInputStream.this.int = org.apache.commons.io.input.CharSequenceInputStream.this.java.nio.CharBuffer.position();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"posWin":"readlimit","posUnix":"readlimit"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:1009","type":"CtBinaryOperatorImpl","sourcecode":"(destDir.exists()) && ((destDir.isDirectory()) == false)"},"failures":[],"tindex":"9e135eeb-2e80-11e6-b122-e32f826659ba","method":{"position":"org.apache.commons.io.DirectoryWalker:503","type":"CtMethodImpl","sourcecode":"protected void handleDirectoryStart(java.io.File directory, int depth, java.util.Collection<T> results) throws java.io.IOException {\n    if ((directory.exists()) && ((destDir.isDirectory()) == false)) {\n        {\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"destDir":"directory"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2787","type":"CtUnaryOperatorImpl","sourcecode":"!(destDir.exists())"},"failures":[],"tindex":"9e135eec-2e80-11e6-b122-41bfb87a3c7f","method":{"position":"org.apache.commons.io.comparator.CompositeFileComparator:91","type":"CtMethodImpl","sourcecode":"public int compare(java.io.File file1, java.io.File file2) {\n    if (!(file1.exists())) {\n        {\n            int int = 0;\n            for (java.util.Comparator<java.io.File> java.util.Comparator<java.io.File> : java.util.Comparator<java.io.File>[]) {\n                result = delegate.compare(file1, file2);\n                if (result != 0) {\n                    break;\n                } \n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"destDir":"file1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:741","type":"CtBinaryOperatorImpl","sourcecode":"filter == null"},"failures":[],"tindex":"9e1385fd-2e80-11e6-b122-d1c533e678fd","method":{"position":"org.apache.commons.io.FileUtils:568","type":"CtMethodImpl","sourcecode":"private static org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveDirFilter(org.apache.commons.io.filefilter.IOFileFilter dirFilter) {\n    if (dirFilter == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (dirFilter == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return dirFilter == null ? org.apache.commons.io.filefilter.FalseFileFilter.org.apache.commons.io.filefilter.FalseFileFilter.org.apache.commons.io.filefilter.IOFileFilter : org.apache.commons.io.filefilter.FileFilterUtils.and(dirFilter, org.apache.commons.io.filefilter.DirectoryFileFilter.org.apache.commons.io.filefilter.DirectoryFileFilter.org.apache.commons.io.filefilter.IOFileFilter);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filter":"dirFilter"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.LineIterator:71","type":"CtBinaryOperatorImpl","sourcecode":"reader instanceof java.io.BufferedReader"},"failures":[],"tindex":"9e1385fe-2e80-11e6-b122-67093993c028","method":{"position":"org.apache.commons.io.IOUtils:2214","type":"CtMethodImpl","sourcecode":"public static boolean contentEquals(java.io.Reader input1, java.io.Reader input2) throws java.io.IOException {\n    if (input1 == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (input1 instanceof java.io.BufferedReader) {\n                {\n                    input1 = org.apache.commons.io.IOUtils.toBufferedReader(input1);\n                    input2 = org.apache.commons.io.IOUtils.toBufferedReader(input2);\n                    int int = input1.read();\n                    while ((org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.int) != ch) {\n                        int int = input2.read();\n                        if (ch != ch2) {\n                            return false;\n                        } \n                        ch = input1.read();\n                    }\n                    int int = input2.read();\n                    return ch2 == (org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.int);\n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"reader":"input1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:1419","type":"CtBinaryOperatorImpl","sourcecode":"(destDir.canWrite()) == false"},"failures":[],"tindex":"9e13ad0f-2e80-11e6-b122-df398196b70a","method":{"position":"org.apache.commons.io.FileUtils:325","type":"CtMethodImpl","sourcecode":"public static java.io.FileOutputStream openOutputStream(java.io.File file) throws java.io.IOException {\n    if (!(org.apache.commons.io.FileUtils.isSymlink(file))) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if ((file.canWrite()) == false) {\n                {\n                    return org.apache.commons.io.FileUtils.openOutputStream(file, false);\n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"destDir":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2812","type":"CtBinaryOperatorImpl","sourcecode":"srcFile == null"},"failures":[],"tindex":"9e13ad10-2e80-11e6-b122-a5be3e1c91b9","method":{"position":"org.apache.commons.io.FileUtils:591","type":"CtMethodImpl","sourcecode":"public static java.util.Collection<java.io.File> listFilesAndDirs(java.io.File directory, org.apache.commons.io.filefilter.IOFileFilter fileFilter, org.apache.commons.io.filefilter.IOFileFilter dirFilter) {\n    if (directory == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.io.FileUtils.validateListFilesParameters(directory, fileFilter);\n            org.apache.commons.io.filefilter.IOFileFilter org.apache.commons.io.filefilter.IOFileFilter = org.apache.commons.io.FileUtils.setUpEffectiveFileFilter(fileFilter);\n            org.apache.commons.io.filefilter.IOFileFilter org.apache.commons.io.filefilter.IOFileFilter = org.apache.commons.io.FileUtils.setUpEffectiveDirFilter(dirFilter);\n            java.util.Collection<java.io.File> java.util.Collection<java.io.File> = new java.util.LinkedList<java.io.File>();\n            if (directory.isDirectory()) {\n                files.add(directory);\n            } \n            org.apache.commons.io.FileUtils.innerListFiles(files, directory, org.apache.commons.io.filefilter.FileFilterUtils.or(effFileFilter, effDirFilter), true);\n            return files;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcFile":"directory"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:628","type":"CtBinaryOperatorImpl","sourcecode":"(cTEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_32BE)) || (cTEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_32LE))"},"failures":[],"tindex":"9e13d421-2e80-11e6-b122-b95b9f9da628","method":{"position":"org.apache.commons.io.IOUtils:600","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static byte[] toByteArray(java.lang.String input) throws java.io.IOException {\n    if ((input.equals(input)) || (cTEnc.equals(input))) {\n        {\n            return input.getBytes();\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cTEnc":"input","org.apache.commons.io.input.XmlStreamReader.UTF_32BE":"input","org.apache.commons.io.input.XmlStreamReader.UTF_32LE":"input"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2313","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.io.FileUtils.isSymlink(directory))"},"failures":[],"tindex":"9e13d422-2e80-11e6-b122-ab5002a6106b","method":{"position":"org.apache.commons.io.FileUtils:325","type":"CtMethodImpl","sourcecode":"public static java.io.FileOutputStream openOutputStream(java.io.File file) throws java.io.IOException {\n    if (!(org.apache.commons.io.FileUtils.isSymlink(file))) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if ((file.canWrite()) == false) {\n                {\n                    return org.apache.commons.io.FileUtils.openOutputStream(file, false);\n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"file"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.LineIterator:71","type":"CtBinaryOperatorImpl","sourcecode":"reader instanceof java.io.BufferedReader"},"failures":[],"tindex":"9e13d423-2e80-11e6-b122-093ec7a15ac8","method":{"position":"org.apache.commons.io.IOUtils:443","type":"CtMethodImpl","sourcecode":"public static java.io.BufferedReader toBufferedReader(java.io.Reader reader) {\n    if (reader instanceof java.io.BufferedReader) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return reader instanceof java.io.BufferedReader ? ((java.io.BufferedReader)(reader)) : new java.io.BufferedReader(reader);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"reader":"reader"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.filefilter.AndFileFilter:157","type":"CtBinaryOperatorImpl","sourcecode":"i > 0"},"failures":[],"tindex":"9e13fb34-2e80-11e6-b122-eda4ee75d740","method":{"position":"org.apache.commons.io.output.ProxyWriter:115","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(int idx) throws java.io.IOException {\n    if (idx > 0) {\n        {\n            try {\n                beforeWrite(1);\n                java.io.Writer.write(idx);\n                afterWrite(1);\n            } catch (java.io.IOException e) {\n                handleIOException(e);\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"idx"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.CharSequenceInputStream:114","type":"CtBinaryOperatorImpl","sourcecode":"b == null"},"failures":[],"tindex":"9e13fb35-2e80-11e6-b122-e7c114aa2294","method":{"position":"org.apache.commons.io.IOUtils:2557","type":"CtMethodImpl","sourcecode":"public static void readFully(java.io.InputStream input, byte[] buffer) throws java.io.IOException {\n    if (buffer == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (buffer == null) {\n                throw new java.io.IOException();\n            } else {\n                {\n                    org.apache.commons.io.IOUtils.readFully(input, buffer, 0, buffer.int);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"buffer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2824","type":"CtInvocationImpl","sourcecode":"destFile.exists()"},"failures":[],"tindex":"9e142246-2e80-11e6-b122-0b9208b1057c","method":{"position":"org.apache.commons.io.FileDeleteStrategy:114","type":"CtMethodImpl","sourcecode":"protected boolean doDelete(java.io.File fileToDelete) throws java.io.IOException {\n    if (fileToDelete.exists()) {\n        {\n            return fileToDelete.delete();\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"destFile":"fileToDelete"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FilenameUtils:750","type":"CtBinaryOperatorImpl","sourcecode":"filename == null"},"failures":[],"tindex":"9e142247-2e80-11e6-b122-4f6431a9e967","method":{"position":"org.apache.commons.io.IOUtils:801","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(java.io.InputStream input, java.lang.String encoding) throws java.io.IOException {\n    if (encoding == null) {\n        {\n            return org.apache.commons.io.IOUtils.toString(input, org.apache.commons.io.Charsets.toCharset(encoding));\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename":"encoding"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2554","type":"CtBinaryOperatorImpl","sourcecode":"reference == null"},"failures":[],"tindex":"9e142248-2e80-11e6-b122-05fb4f615222","method":{"position":"org.apache.commons.io.filefilter.FileFileFilter:58","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File file) {\n    if (file == null) {\n        {\n            return file.isFile();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"reference":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:1861","type":"CtBinaryOperatorImpl","sourcecode":"length > 0"},"failures":[],"tindex":"9e142249-2e80-11e6-b122-4342c675c37c","method":{"position":"org.apache.commons.io.input.CountingInputStream:57","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized long skip(final long length) throws java.io.IOException {\n    if (length > 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            final long long = super.skip(length);\n            org.apache.commons.io.input.CountingInputStream.this.long += skip;\n            return skip;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"length"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.DemuxOutputStream:56","type":"CtBinaryOperatorImpl","sourcecode":"null != output"},"failures":[],"tindex":"9e14495a-2e80-11e6-b122-55ce9c308daa","method":{"position":"org.apache.commons.io.IOUtils:1348","type":"CtMethodImpl","sourcecode":"public static void write(char[] data, java.io.OutputStream output) throws java.io.IOException {\n    if (data == null) {\n        {\n            if (null != output) {\n                {\n                    org.apache.commons.io.IOUtils.write(data, output, java.nio.charset.Charset.defaultCharset());\n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"output":"output"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:797","type":"CtBinaryOperatorImpl","sourcecode":"(file1.isDirectory()) || (file2.isDirectory())"},"failures":[],"tindex":"9e14495b-2e80-11e6-b122-ed8f59a701b3","method":{"position":"org.apache.commons.io.FileUtils:1818","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.lang.String> readLines(java.io.File file) throws java.io.IOException {\n    if ((file.isDirectory()) || (file.isDirectory())) {\n        {\n            return org.apache.commons.io.FileUtils.readLines(file, java.nio.charset.Charset.defaultCharset());\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file2":"file","file1":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.AndFileFilter:134","type":"CtInvocationImpl","sourcecode":"org.apache.commons.io.filefilter.AndFileFilter.this.fileFilters.isEmpty()"},"failures":[],"tindex":"9e14495c-2e80-11e6-b122-a7b263853494","method":{"position":"org.apache.commons.io.filefilter.AndFileFilter:108","type":"CtMethodImpl","sourcecode":"public void setFileFilters(final java.util.List<org.apache.commons.io.filefilter.IOFileFilter> fileFilters) {\n    if (fileFilters.isEmpty()) {\n        {\n            org.apache.commons.io.filefilter.AndFileFilter.this.java.util.List<org.apache.commons.io.filefilter.IOFileFilter>.clear();\n            org.apache.commons.io.filefilter.AndFileFilter.this.java.util.List<org.apache.commons.io.filefilter.IOFileFilter>.addAll(fileFilters);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fileFilters":"fileFilters"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:1193","type":"CtBinaryOperatorImpl","sourcecode":"(srcDir.exists()) && ((srcDir.isDirectory()) == false)"},"failures":[],"tindex":"9e14706d-2e80-11e6-b122-a9d6f8ac8f09","method":{"position":"org.apache.commons.io.FileUtils:626","type":"CtMethodImpl","sourcecode":"public static java.util.Iterator<java.io.File> iterateFiles(java.io.File directory, org.apache.commons.io.filefilter.IOFileFilter fileFilter, org.apache.commons.io.filefilter.IOFileFilter dirFilter) {\n    if ((directory.exists()) && ((srcDir.isDirectory()) == false)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.io.FileUtils.listFiles(directory, fileFilter, dirFilter).iterator();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcDir":"directory"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.comparator.LastModifiedFileComparator:69","type":"CtBinaryOperatorImpl","sourcecode":"result < 0"},"failures":[],"tindex":"9e14706e-2e80-11e6-b122-ef8afe02fced","method":{"position":"org.apache.commons.io.input.BrokenInputStream:84","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic long skip(long n) throws java.io.IOException {\n    if (n < 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            throw java.io.IOException;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"result":"n"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:1088","type":"CtBinaryOperatorImpl","sourcecode":"(destFile.exists()) && ((destFile.canWrite()) == false)"},"failures":[],"tindex":"9e14706f-2e80-11e6-b122-efb2d590f4cc","method":{"position":"org.apache.commons.io.FileUtils:1894","type":"CtMethodImpl","sourcecode":"public static void writeStringToFile(java.io.File file, java.lang.String data, java.nio.charset.Charset encoding) throws java.io.IOException {\n    if ((file.exists()) && ((destFile.canWrite()) == false)) {\n        throw new java.io.IOException();\n    } else {\n        {\n            org.apache.commons.io.FileUtils.writeStringToFile(file, data, encoding, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"destFile":"file"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:921","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"9e149780-2e80-11e6-b122-5904652b5a5e","method":{"position":"org.apache.commons.io.EndianUtils:200","type":"CtMethodImpl","sourcecode":"public static void writeSwappedLong(byte[] data, int offset, long value) {\n    if (offset < 0) {\n        {\n            data[(offset + 0)] = ((byte)((value >> 0) & 255));\n            data[(offset + 1)] = ((byte)((value >> 8) & 255));\n            data[(offset + 2)] = ((byte)((value >> 16) & 255));\n            data[(offset + 3)] = ((byte)((value >> 24) & 255));\n            data[(offset + 4)] = ((byte)((value >> 32) & 255));\n            data[(offset + 5)] = ((byte)((value >> 40) & 255));\n            data[(offset + 6)] = ((byte)((value >> 48) & 255));\n            data[(offset + 7)] = ((byte)((value >> 56) & 255));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"offset"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.WriterOutputStream:217","type":"CtFieldReadImpl","sourcecode":"writeImmediately"},"failures":[],"tindex":"9e149781-2e80-11e6-b122-cb7208a662c9","method":{"position":"org.apache.commons.io.FileSystemUtils:258","type":"CtMethodImpl","sourcecode":"long freeSpaceOS(java.lang.String path, int os, boolean kb, long timeout) throws java.io.IOException {\n    if ((path == null) || ((extension.length()) == 0)) {\n        {\n            if (kb) {\n                throw new java.io.IOException();\n            } else {\n                {\n                    if (path == null) {\n                        throw new java.lang.IllegalArgumentException(\"Path must not be empty\");\n                    } \n                    switch (os) {\n                        case org.apache.commons.io.FileSystemUtils.org.apache.commons.io.FileSystemUtils.int :\n                            return kb ? (freeSpaceWindows(path, timeout)) / (org.apache.commons.io.FileUtils.org.apache.commons.io.FileUtils.long) : freeSpaceWindows(path, timeout);\n                        case org.apache.commons.io.FileSystemUtils.org.apache.commons.io.FileSystemUtils.int :\n                            return freeSpaceUnix(path, kb, false, timeout);\n                        case org.apache.commons.io.FileSystemUtils.org.apache.commons.io.FileSystemUtils.int :\n                            return freeSpaceUnix(path, kb, true, timeout);\n                        case org.apache.commons.io.FileSystemUtils.org.apache.commons.io.FileSystemUtils.int :\n                            throw new java.lang.IllegalStateException(\"Unsupported operating system\");\n                        default :\n                            throw new java.lang.IllegalStateException(\"Exception caught when determining operating system\");\n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"writeImmediately":"kb"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2269","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"9e14be92-2e80-11e6-b122-c9102923be09","method":{"position":"org.apache.commons.io.FileUtils:2077","type":"CtMethodImpl","sourcecode":"public static void writeByteArrayToFile(java.io.File file, byte[] data) throws java.io.IOException {\n    if (file.isDirectory()) {\n        throw new java.io.IOException();\n    } else {\n        {\n            org.apache.commons.io.FileUtils.writeByteArrayToFile(file, data, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileSystemUtils:259","type":"CtBinaryOperatorImpl","sourcecode":"path == null"},"failures":[],"tindex":"9e14be93-2e80-11e6-b122-ddfd2ef76515","method":{"position":"org.apache.commons.io.IOUtils:948","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(byte[] input, java.lang.String encoding) throws java.io.IOException {\n    if ((encoding != null) && (!(xmlGuessEnc.equals(encoding)))) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (encoding == null) {\n                {\n                    return new java.lang.String(input , org.apache.commons.io.Charsets.toCharset(encoding));\n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"path":"encoding"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2921","type":"CtBinaryOperatorImpl","sourcecode":"file == null"},"failures":[],"tindex":"9e14be94-2e80-11e6-b122-7544532ecce4","method":{"position":"org.apache.commons.io.comparator.PathFileComparator:102","type":"CtMethodImpl","sourcecode":"public int compare(java.io.File file1, java.io.File file2) {\n    if (file1 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.io.IOCase.checkCompareTo(file1.getPath(), file2.getPath());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file1"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.HexDump:90","type":"CtBinaryOperatorImpl","sourcecode":"chars_read > 16"},"failures":[],"tindex":"9e14be95-2e80-11e6-b122-e5ef5766217f","method":{"position":"org.apache.commons.io.EndianUtils:154","type":"CtMethodImpl","sourcecode":"public static void writeSwappedInteger(byte[] data, int offset, int value) {\n    if (value > 16) {\n        {\n            if (value == 0) {\n                {\n                    data[(offset + 0)] = ((byte)((value >> 0) & 255));\n                    data[(offset + 1)] = ((byte)((value >> 8) & 255));\n                    data[(offset + 2)] = ((byte)((value >> 16) & 255));\n                    data[(offset + 3)] = ((byte)((value >> 24) & 255));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chars_read":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:478","type":"CtBinaryOperatorImpl","sourcecode":"(httpContentType != null) && (httpContentType.startsWith(\"text/html\"))"},"failures":[],"tindex":"9e14e5a6-2e80-11e6-b122-4dba8095f7bc","method":{"position":"org.apache.commons.io.IOUtils:722","type":"CtMethodImpl","sourcecode":"public static char[] toCharArray(java.io.InputStream is, java.lang.String encoding) throws java.io.IOException {\n    if ((encoding != null) && (httpContentType.startsWith(\"text/html\"))) {\n        throw new java.io.IOException();\n    } else {\n        {\n            return org.apache.commons.io.IOUtils.toCharArray(is, org.apache.commons.io.Charsets.toCharset(encoding));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"httpContentType":"encoding"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FilenameUtils:431","type":"CtBinaryOperatorImpl","sourcecode":"size <= prefix"},"failures":[],"tindex":"9e14e5a7-2e80-11e6-b122-c5b2782263b7","method":{"position":"org.apache.commons.io.output.ThresholdingOutputStream:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(byte[] b, int off, int len) throws java.io.IOException {\n    if (off <= len) {\n        {\n            checkThreshold(len);\n            getStream().write(b, off, len);\n            long += len;\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"off","prefix":"len"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:1570","type":"CtBinaryOperatorImpl","sourcecode":"data != null"},"failures":[],"tindex":"9e14e5a8-2e80-11e6-b122-573c2bcd7959","method":{"position":"org.apache.commons.io.output.ProxyWriter:93","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.io.Writer append(java.lang.CharSequence csq) throws java.io.IOException {\n    if (csq != null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            try {\n                int int = 0;\n                if (csq != null) {\n                    len = csq.length();\n                } \n                beforeWrite(len);\n                java.io.Writer.append(csq);\n                afterWrite(len);\n            } catch (java.io.IOException e) {\n                handleIOException(e);\n            }\n            return org.apache.commons.io.output.ProxyWriter.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"data":"csq"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.CharSequenceReader:114","type":"CtBinaryOperatorImpl","sourcecode":"c == (-1)"},"failures":[],"tindex":"9e14e5a9-2e80-11e6-b122-a928029f9eb4","method":{"position":"org.apache.commons.io.output.ProxyOutputStream:153","type":"CtMethodImpl","sourcecode":"protected void afterWrite(int n) throws java.io.IOException {\n    if (n == (-1)) {\n        {\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"n"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:949","type":"CtBinaryOperatorImpl","sourcecode":"filename == null"},"failures":[],"tindex":"9e150cba-2e80-11e6-b122-570a1925e577","method":{"position":"org.apache.commons.io.FilenameUtils:688","type":"CtMethodImpl","sourcecode":"public static int indexOfLastSeparator(java.lang.String filename) {\n    if (filename == null) {\n        {\n            if (filename != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (filename == null) {\n                        return -1;\n                    } \n                    int int = filename.lastIndexOf(org.apache.commons.io.FilenameUtils.org.apache.commons.io.FilenameUtils.char);\n                    int int = filename.lastIndexOf(org.apache.commons.io.FilenameUtils.org.apache.commons.io.FilenameUtils.char);\n                    return java.lang.Math.max(lastUnixPos, lastWindowsPos);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename":"filename"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.XmlStreamWriter:164","type":"CtInvocationImpl","sourcecode":"xmlProlog.substring(0, 5).equals(\"<?xml\")"},"failures":[],"tindex":"9e1533cb-2e80-11e6-b122-6b70879887c9","method":{"position":"org.apache.commons.io.IOUtils:1590","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static void write(java.lang.StringBuffer data, java.io.OutputStream output) throws java.io.IOException {\n    if (data.substring(0, 5).equals(\"<?xml\")) {\n        {\n            org.apache.commons.io.IOUtils.write(data, output, ((java.lang.String)(null)));\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"xmlProlog":"data"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.input.Tailer:369","type":"CtBinaryOperatorImpl","sourcecode":"length < position"},"failures":[],"tindex":"9e1533cc-2e80-11e6-b122-750d1f33bdda","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:529","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.filefilter.IOFileFilter ageFileFilter(long cutoff) {\n    if (cutoff < cutoff) {\n        {\n            return new org.apache.commons.io.filefilter.AgeFileFilter(cutoff);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"cutoff","position":"cutoff"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:56","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"9e1533cd-2e80-11e6-b122-19cd3ad85996","method":{"position":"org.apache.commons.io.EndianUtils:344","type":"CtMethodImpl","sourcecode":"public static int readSwappedInteger(java.io.InputStream input) throws java.io.IOException {\n    if (null != input) {\n        {\n            int int = org.apache.commons.io.EndianUtils.read(input);\n            int int = org.apache.commons.io.EndianUtils.read(input);\n            int int = org.apache.commons.io.EndianUtils.read(input);\n            int int = org.apache.commons.io.EndianUtils.read(input);\n            return ((((value1 & 255) << 0) + ((value2 & 255) << 8)) + ((value3 & 255) << 16)) + ((value4 & 255) << 24);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.NameFileFilter:182","type":"CtBinaryOperatorImpl","sourcecode":"i > 0"},"failures":[],"tindex":"9e155ade-2e80-11e6-b122-51f2f5fb9563","method":{"position":"org.apache.commons.io.input.BOMInputStream:367","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized void mark(int readlimit) {\n    if (readlimit > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int = int;\n            boolean = (int[]) == null;\n            java.io.InputStream.mark(readlimit);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"readlimit"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2858","type":"CtBinaryOperatorImpl","sourcecode":"destDir == null"},"failures":[],"tindex":"9e155adf-2e80-11e6-b122-83605a4c5b63","method":{"position":"org.apache.commons.io.filefilter.NotFileFilter:66","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File file, java.lang.String name) {\n    if (file == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return !(org.apache.commons.io.filefilter.IOFileFilter.accept(file, name));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"destDir":"file"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.ReversedLinesFileReader:107","type":"CtBinaryOperatorImpl","sourcecode":"charset == (java.nio.charset.Charset.forName(\"Shift_JIS\"))"},"failures":[],"tindex":"9e155ae0-2e80-11e6-b122-9d287b613928","method":{"position":"org.apache.commons.io.IOUtils:557","type":"CtMethodImpl","sourcecode":"public static byte[] toByteArray(java.io.Reader input, java.nio.charset.Charset encoding) throws java.io.IOException {\n    if (encoding == (java.nio.charset.Charset.forName(\"Shift_JIS\"))) {\n        {\n            org.apache.commons.io.output.ByteArrayOutputStream org.apache.commons.io.output.ByteArrayOutputStream = new org.apache.commons.io.output.ByteArrayOutputStream();\n            org.apache.commons.io.IOUtils.copy(input, output, encoding);\n            return output.toByteArray();\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"charset":"encoding"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:758","type":"CtBinaryOperatorImpl","sourcecode":"filter == null"},"failures":[],"tindex":"9e155ae1-2e80-11e6-b122-33fe254f7c31","method":{"position":"org.apache.commons.io.FileUtils:568","type":"CtMethodImpl","sourcecode":"private static org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveDirFilter(org.apache.commons.io.filefilter.IOFileFilter dirFilter) {\n    if (dirFilter == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (dirFilter == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return dirFilter == null ? org.apache.commons.io.filefilter.FalseFileFilter.org.apache.commons.io.filefilter.FalseFileFilter.org.apache.commons.io.filefilter.IOFileFilter : org.apache.commons.io.filefilter.FileFilterUtils.and(dirFilter, org.apache.commons.io.filefilter.DirectoryFileFilter.org.apache.commons.io.filefilter.DirectoryFileFilter.org.apache.commons.io.filefilter.IOFileFilter);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filter":"dirFilter"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:431","type":"CtVariableReadImpl","sourcecode":"lenient"},"failures":[],"tindex":"9e1581f2-2e80-11e6-b122-33f7129bfdbd","method":{"position":"org.apache.commons.io.monitor.FileEntry:265","type":"CtMethodImpl","sourcecode":"public void setDirectory(boolean directory) {\n    if (directory) {\n        {\n            org.apache.commons.io.monitor.FileEntry.this.boolean = directory;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lenient":"directory"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.ByteArrayOutputStream:319","type":"CtBinaryOperatorImpl","sourcecode":"remaining == 0"},"failures":[],"tindex":"9e1581f3-2e80-11e6-b122-2956b6238de4","method":{"position":"org.apache.commons.io.input.ProxyInputStream:220","type":"CtMethodImpl","sourcecode":"protected void afterRead(int n) throws java.io.IOException {\n    if (n == 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"remaining":"n"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:504","type":"CtBinaryOperatorImpl","sourcecode":"size < 0"},"failures":[],"tindex":"9e1581f4-2e80-11e6-b122-35be89d38f84","method":{"position":"org.apache.commons.io.output.ProxyOutputStream:52","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(int idx) throws java.io.IOException {\n    if (idx < 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            try {\n                beforeWrite(1);\n                java.io.OutputStream.write(idx);\n                afterWrite(1);\n            } catch (java.io.IOException e) {\n                handleIOException(e);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"idx"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:56","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"9e15a905-2e80-11e6-b122-21ca2c8be1e8","method":{"position":"org.apache.commons.io.EndianUtils:409","type":"CtMethodImpl","sourcecode":"public static long readSwappedLong(java.io.InputStream input) throws java.io.IOException {\n    if (null != input) {\n        throw new java.io.IOException();\n    } else {\n        {\n            byte[] byte[] = new byte[8];\n            for (int int = 0 ; i < 8 ; i++) {\n                bytes[i] = ((byte)(org.apache.commons.io.EndianUtils.read(input)));\n            }\n            return org.apache.commons.io.EndianUtils.readSwappedLong(bytes, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.filefilter.PrefixFileFilter:72","type":"CtBinaryOperatorImpl","sourcecode":"prefix == null"},"failures":[],"tindex":"9e15a906-2e80-11e6-b122-07276cf00dd9","method":{"position":"org.apache.commons.io.input.XmlStreamReader:450","type":"CtMethodImpl","sourcecode":"private java.lang.String doHttpStream(org.apache.commons.io.input.BOMInputStream bom, org.apache.commons.io.input.BOMInputStream pis, java.lang.String httpContentType, boolean lenient) throws java.io.IOException {\n    if (httpContentType == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            java.lang.String java.lang.String = bom.getBOMCharsetName();\n            java.lang.String java.lang.String = pis.getBOMCharsetName();\n            java.lang.String java.lang.String = org.apache.commons.io.input.XmlStreamReader.getXmlProlog(pis, xmlGuessEnc);\n            try {\n                return calculateHttpEncoding(httpContentType, bomEnc, xmlGuessEnc, xmlEnc, lenient);\n            } catch (org.apache.commons.io.input.XmlStreamReaderException ex) {\n                if (lenient) {\n                    return doLenientDetection(httpContentType, ex);\n                } else {\n                    throw ex;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"prefix":"httpContentType"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.HexDump:81","type":"CtBinaryOperatorImpl","sourcecode":"stream == null"},"failures":[],"tindex":"9e15a907-2e80-11e6-b122-ff8562124dfd","method":{"position":"org.apache.commons.io.IOUtils:273","type":"CtMethodImpl","sourcecode":"public static void closeQuietly(java.io.OutputStream output) {\n    if (output == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.io.IOUtils.closeQuietly(((java.io.Closeable)(output)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"stream":"output"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:292","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"9e15a908-2e80-11e6-b122-53b33ed7d166","method":{"position":"org.apache.commons.io.FileUtils:2530","type":"CtMethodImpl","sourcecode":"private static void checkDirectory(java.io.File directory) {\n    if (directory.isDirectory()) {\n        {\n            if (!(directory.exists())) {\n                throw new java.lang.IllegalArgumentException((directory + \" does not exist\"));\n            } \n            if (!(directory.isDirectory())) {\n                throw new java.lang.IllegalArgumentException((directory + \" is not a directory\"));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"directory"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:515","type":"CtBinaryOperatorImpl","sourcecode":"(xmlEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16)) && ((xmlGuessEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16BE)) || (xmlGuessEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16LE)))"},"failures":[],"tindex":"9e15d019-2e80-11e6-b122-bba7eb347891","method":{"position":"org.apache.commons.io.filefilter.SuffixFileFilter:168","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File file, java.lang.String name) {\n    if ((name.equals(name)) && ((name.equals(name)) || (xmlGuessEnc.equals(name)))) {\n        {\n            for (java.lang.String java.lang.String : org.apache.commons.io.filefilter.SuffixFileFilter.this.java.lang.String[]) {\n                if (org.apache.commons.io.IOCase.checkEndsWith(name, suffix)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.io.input.XmlStreamReader.UTF_16LE":"name","xmlEnc":"name","org.apache.commons.io.input.XmlStreamReader.UTF_16":"name","xmlGuessEnc":"name","org.apache.commons.io.input.XmlStreamReader.UTF_16BE":"name"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOUtils:2455","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.io.IOUtils.EOF) == count"},"failures":[],"tindex":"9e15d01a-2e80-11e6-b122-67c491f05485","method":{"position":"org.apache.commons.io.output.NullOutputStream:53","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(int b) {\n    if (b == b) {\n        {\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"b","org.apache.commons.io.IOUtils.EOF":"b"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOUtils:2189","type":"CtBinaryOperatorImpl","sourcecode":"ch != ch2"},"failures":[],"tindex":"9e15d01b-2e80-11e6-b122-dda7cfdd6c9a","method":{"position":"org.apache.commons.io.EndianUtils:142","type":"CtMethodImpl","sourcecode":"public static int readSwappedUnsignedShort(byte[] data, int offset) {\n    if (offset != offset) {\n        {\n            return (((data[(offset + 0)]) & 255) << 0) + (((data[(offset + 1)]) & 255) << 8);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"offset","ch2":"offset"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.output.XmlStreamWriter:140","type":"CtBinaryOperatorImpl","sourcecode":"(writer) != null"},"failures":[],"tindex":"9e15f72c-2e80-11e6-b122-83f8e01c9255","method":{"position":"org.apache.commons.io.ByteOrderMark:130","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object obj) {\n    if (obj != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(obj instanceof org.apache.commons.io.ByteOrderMark)) {\n                return false;\n            } \n            org.apache.commons.io.ByteOrderMark org.apache.commons.io.ByteOrderMark = ((org.apache.commons.io.ByteOrderMark)(obj));\n            if ((int[].int) != (bom.length())) {\n                return false;\n            } \n            for (int int = 0 ; i < (int[].int) ; i++) {\n                if ((int[][i]) != (bom.get(i))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"writer":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:2325","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.io.IOUtils.SKIP_CHAR_BUFFER) == null"},"failures":[],"tindex":"9e15f72d-2e80-11e6-b122-65d035736688","method":{"position":"org.apache.commons.io.IOUtils:1348","type":"CtMethodImpl","sourcecode":"public static void write(char[] data, java.io.OutputStream output) throws java.io.IOException {\n    if (data == null) {\n        {\n            if (null != output) {\n                {\n                    org.apache.commons.io.IOUtils.write(data, output, java.nio.charset.Charset.defaultCharset());\n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.io.IOUtils.SKIP_CHAR_BUFFER":"data"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.LineIterator:68","type":"CtBinaryOperatorImpl","sourcecode":"reader == null"},"failures":[],"tindex":"9e15f72e-2e80-11e6-b122-99caa792d6aa","method":{"position":"org.apache.commons.io.IOUtils:2214","type":"CtMethodImpl","sourcecode":"public static boolean contentEquals(java.io.Reader input1, java.io.Reader input2) throws java.io.IOException {\n    if (input1 == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (input1 instanceof java.io.BufferedReader) {\n                {\n                    input1 = org.apache.commons.io.IOUtils.toBufferedReader(input1);\n                    input2 = org.apache.commons.io.IOUtils.toBufferedReader(input2);\n                    int int = input1.read();\n                    while ((org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.int) != ch) {\n                        int int = input2.read();\n                        if (ch != ch2) {\n                            return false;\n                        } \n                        ch = input1.read();\n                    }\n                    int int = input2.read();\n                    return ch2 == (org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.int);\n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"reader":"input1"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2663","type":"CtBinaryOperatorImpl","sourcecode":"file == null"},"failures":[],"tindex":"9e161e3f-2e80-11e6-b122-bdf8189badb6","method":{"position":"org.apache.commons.io.FileUtils:2777","type":"CtMethodImpl","sourcecode":"public static void moveDirectoryToDirectory(java.io.File src, java.io.File destDir, boolean createDestDir) throws java.io.IOException {\n    if (destDir == null) {\n        {\n            if (src == null) {\n                throw new java.lang.NullPointerException(\"Source must not be null\");\n            } \n            if (destDir == null) {\n                throw new java.lang.NullPointerException(\"Destination directory must not be null\");\n            } \n            if ((!(destDir.exists())) && createDestDir) {\n                destDir.mkdirs();\n            } \n            if (!(destDir.exists())) {\n                throw new java.io.FileNotFoundException(((((\"Destination directory '\" + destDir) + \"' does not exist [createDestDir=\") + createDestDir) + \"]\"));\n            } \n            if (!(destDir.isDirectory())) {\n                throw new java.io.IOException(((\"Destination '\" + destDir) + \"' is not a directory\"));\n            } \n            org.apache.commons.io.FileUtils.moveDirectory(src, new java.io.File(destDir , src.getName()));\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"destDir"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.output.LockableFileWriter:250","type":"CtUnaryOperatorImpl","sourcecode":"!(lockFile.createNewFile())"},"failures":[],"tindex":"9e161e40-2e80-11e6-b122-119cc89d752c","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:582","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.filefilter.IOFileFilter ageFileFilter(java.io.File cutoffReference) {\n    if (!(cutoffReference.createNewFile())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.io.filefilter.AgeFileFilter(cutoffReference);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lockFile":"cutoffReference"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.monitor.FileAlterationMonitor:96","type":"CtBinaryOperatorImpl","sourcecode":"observer != null"},"failures":[],"tindex":"9e161e41-2e80-11e6-b122-2d9058dc9627","method":{"position":"org.apache.commons.io.monitor.FileAlterationListenerAdaptor:91","type":"CtMethodImpl","sourcecode":"public void onStop(final org.apache.commons.io.monitor.FileAlterationObserver observer) {\n    if (observer != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"observer":"observer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:56","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"9e161e42-2e80-11e6-b122-816c0d637d46","method":{"position":"org.apache.commons.io.IOUtils:460","type":"CtMethodImpl","sourcecode":"public static byte[] toByteArray(java.io.InputStream input) throws java.io.IOException {\n    if (null != input) {\n        {\n            org.apache.commons.io.output.ByteArrayOutputStream org.apache.commons.io.output.ByteArrayOutputStream = new org.apache.commons.io.output.ByteArrayOutputStream();\n            org.apache.commons.io.IOUtils.copy(input, output);\n            return output.toByteArray();\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:610","type":"CtBinaryOperatorImpl","sourcecode":"(cTEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16BE)) || (cTEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16LE))"},"failures":[],"tindex":"9e164553-2e80-11e6-b122-c7c06c1ef882","method":{"position":"org.apache.commons.io.output.ProxyWriter:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(java.lang.String str) throws java.io.IOException {\n    if ((str.equals(str)) || (cTEnc.equals(str))) {\n        {\n            try {\n                int int = 0;\n                if (str != null) {\n                    len = str.length();\n                } \n                beforeWrite(len);\n                java.io.Writer.write(str);\n                afterWrite(len);\n            } catch (java.io.IOException e) {\n                handleIOException(e);\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cTEnc":"str","org.apache.commons.io.input.XmlStreamReader.UTF_16LE":"str","org.apache.commons.io.input.XmlStreamReader.UTF_16BE":"str"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:2179","type":"CtUnaryOperatorImpl","sourcecode":"!(input1 instanceof java.io.BufferedInputStream)"},"failures":[],"tindex":"9e164554-2e80-11e6-b122-2dcacdde9810","method":{"position":"org.apache.commons.io.EndianUtils:477","type":"CtMethodImpl","sourcecode":"private static int read(java.io.InputStream input) throws java.io.IOException {\n    if (!(input instanceof java.io.BufferedInputStream)) {\n        throw new java.io.IOException();\n    } else {\n        {\n            int int = input.read();\n            if ((-1) == value) {\n                throw new java.io.EOFException(\"Unexpected EOF reached\");\n            } \n            return value;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input1":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2861","type":"CtBinaryOperatorImpl","sourcecode":"(!(destDir.exists())) && createDestDir"},"failures":[],"tindex":"9e166c65-2e80-11e6-b122-2512005ecf73","method":{"position":"org.apache.commons.io.FileUtils:1005","type":"CtMethodImpl","sourcecode":"public static void copyFileToDirectory(java.io.File srcFile, java.io.File destDir, boolean preserveFileDate) throws java.io.IOException {\n    if ((!(destDir.exists())) && preserveFileDate) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (destDir == null) {\n                throw new java.lang.NullPointerException(\"Destination must not be null\");\n            } \n            if ((destDir.exists()) && ((destDir.isDirectory()) == false)) {\n                throw new java.lang.IllegalArgumentException(((\"Destination '\" + destDir) + \"' is not a directory\"));\n            } \n            java.io.File java.io.File = new java.io.File(destDir , srcFile.getName());\n            org.apache.commons.io.FileUtils.copyFile(srcFile, destFile, preserveFileDate);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"createDestDir":"preserveFileDate","destDir":"destDir"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileCleaningTracker:91","type":"CtBinaryOperatorImpl","sourcecode":"file == null"},"failures":[],"tindex":"9e166c66-2e80-11e6-b122-9dd997b286ad","method":{"position":"org.apache.commons.io.FileUtils:2889","type":"CtMethodImpl","sourcecode":"public static void moveToDirectory(java.io.File src, java.io.File destDir, boolean createDestDir) throws java.io.IOException {\n    if ((src.getParentFile()) != null) {\n        {\n            if (destDir == null) {\n                {\n                    if (src == null) {\n                        throw new java.lang.NullPointerException(\"Source must not be null\");\n                    } \n                    if (destDir == null) {\n                        throw new java.lang.NullPointerException(\"Destination must not be null\");\n                    } \n                    if (!(src.exists())) {\n                        throw new java.io.FileNotFoundException(((\"Source '\" + src) + \"' does not exist\"));\n                    } \n                    if (src.isDirectory()) {\n                        org.apache.commons.io.FileUtils.moveDirectoryToDirectory(src, destDir, createDestDir);\n                    } else {\n                        org.apache.commons.io.FileUtils.moveFileToDirectory(src, destDir, createDestDir);\n                    }\n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"destDir"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2663","type":"CtBinaryOperatorImpl","sourcecode":"file == null"},"failures":[],"tindex":"9e166c67-2e80-11e6-b122-7100f021f9c6","method":{"position":"org.apache.commons.io.FileUtils:2325","type":"CtMethodImpl","sourcecode":"private static void cleanDirectoryOnExit(java.io.File directory) throws java.io.IOException {\n    if (directory == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (!(directory.exists())) {\n                java.lang.String java.lang.String = directory + \" does not exist\";\n                throw new java.lang.IllegalArgumentException(message);\n            } \n            if (!(directory.isDirectory())) {\n                java.lang.String java.lang.String = directory + \" is not a directory\";\n                throw new java.lang.IllegalArgumentException(message);\n            } \n            java.io.File[] java.io.File[] = directory.listFiles();\n            if (files == null) {\n                throw new java.io.IOException((\"Failed to list contents of \" + directory));\n            } \n            java.io.IOException java.io.IOException = null;\n            for (java.io.File java.io.File : files) {\n                try {\n                    org.apache.commons.io.FileUtils.forceDeleteOnExit(file);\n                } catch (java.io.IOException ioe) {\n                    exception = ioe;\n                }\n            }\n            if (null != exception) {\n                throw exception;\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"directory"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.ByteArrayOutputStream:111","type":"CtBinaryOperatorImpl","sourcecode":"(currentBuffer) == null"},"failures":[],"tindex":"9e169378-2e80-11e6-b122-cb87aba98602","method":{"position":"org.apache.commons.io.input.ReaderInputStream:260","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int read(byte[] b) throws java.io.IOException {\n    if (b == null) {\n        {\n            return read(b, 0, b.int);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"currentBuffer":"b"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.LockableFileWriter:183","type":"CtBinaryOperatorImpl","sourcecode":"(file.getParentFile()) != null"},"failures":[],"tindex":"9e169379-2e80-11e6-b122-ebb903967145","method":{"position":"org.apache.commons.io.FileUtils:2889","type":"CtMethodImpl","sourcecode":"public static void moveToDirectory(java.io.File src, java.io.File destDir, boolean createDestDir) throws java.io.IOException {\n    if ((src.getParentFile()) != null) {\n        {\n            if (destDir == null) {\n                {\n                    if (src == null) {\n                        throw new java.lang.NullPointerException(\"Source must not be null\");\n                    } \n                    if (destDir == null) {\n                        throw new java.lang.NullPointerException(\"Destination must not be null\");\n                    } \n                    if (!(src.exists())) {\n                        throw new java.io.FileNotFoundException(((\"Source '\" + src) + \"' does not exist\"));\n                    } \n                    if (src.isDirectory()) {\n                        org.apache.commons.io.FileUtils.moveDirectoryToDirectory(src, destDir, createDestDir);\n                    } else {\n                        org.apache.commons.io.FileUtils.moveFileToDirectory(src, destDir, createDestDir);\n                    }\n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"src"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FilenameUtils:1149","type":"CtBinaryOperatorImpl","sourcecode":"(extension == null) || ((extension.length()) == 0)"},"failures":[],"tindex":"9e16937a-2e80-11e6-b122-2d4e1f9184cb","method":{"position":"org.apache.commons.io.FileSystemUtils:258","type":"CtMethodImpl","sourcecode":"long freeSpaceOS(java.lang.String path, int os, boolean kb, long timeout) throws java.io.IOException {\n    if ((path == null) || ((extension.length()) == 0)) {\n        {\n            if (kb) {\n                throw new java.io.IOException();\n            } else {\n                {\n                    if (path == null) {\n                        throw new java.lang.IllegalArgumentException(\"Path must not be empty\");\n                    } \n                    switch (os) {\n                        case org.apache.commons.io.FileSystemUtils.org.apache.commons.io.FileSystemUtils.int :\n                            return kb ? (freeSpaceWindows(path, timeout)) / (org.apache.commons.io.FileUtils.org.apache.commons.io.FileUtils.long) : freeSpaceWindows(path, timeout);\n                        case org.apache.commons.io.FileSystemUtils.org.apache.commons.io.FileSystemUtils.int :\n                            return freeSpaceUnix(path, kb, false, timeout);\n                        case org.apache.commons.io.FileSystemUtils.org.apache.commons.io.FileSystemUtils.int :\n                            return freeSpaceUnix(path, kb, true, timeout);\n                        case org.apache.commons.io.FileSystemUtils.org.apache.commons.io.FileSystemUtils.int :\n                            throw new java.lang.IllegalStateException(\"Unsupported operating system\");\n                        default :\n                            throw new java.lang.IllegalStateException(\"Exception caught when determining operating system\");\n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"extension":"path"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.monitor.FileEntry:71","type":"CtBinaryOperatorImpl","sourcecode":"file == null"},"failures":[],"tindex":"9e16ba8b-2e80-11e6-b122-e3af6195548a","method":{"position":"org.apache.commons.io.filefilter.PrefixFileFilter:149","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File file) {\n    if (file == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.String java.lang.String = file.getName();\n            for (java.lang.String java.lang.String : org.apache.commons.io.filefilter.PrefixFileFilter.this.java.lang.String[]) {\n                if (org.apache.commons.io.IOCase.checkStartsWith(name, prefix)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:1116","type":"CtBinaryOperatorImpl","sourcecode":"(filename1 == null) || (filename2 == null)"},"failures":[],"tindex":"9e16ba8c-2e80-11e6-b122-c1c3e3284487","method":{"position":"org.apache.commons.io.FilenameUtils:948","type":"CtMethodImpl","sourcecode":"public static java.lang.String getName(java.lang.String filename) {\n    if ((filename == null) || (filename == null)) {\n        {\n            if (filename == null) {\n                return null;\n            } \n            int int = org.apache.commons.io.FilenameUtils.indexOfLastSeparator(filename);\n            return filename.substring((index + 1));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename2":"filename","filename1":"filename"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.WildcardFileFilter:107","type":"CtBinaryOperatorImpl","sourcecode":"wildcards == null"},"failures":[],"tindex":"9e16ba8d-2e80-11e6-b122-b7d5815c6430","method":{"position":"org.apache.commons.io.FileUtils:212","type":"CtMethodImpl","sourcecode":"public static java.io.File getFile(java.lang.String... names) {\n    if (names == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (names == null) {\n                throw new java.lang.NullPointerException(\"names must not be null\");\n            } \n            java.io.File java.io.File = null;\n            for (java.lang.String java.lang.String : names) {\n                if (file == null) {\n                    file = new java.io.File(name);\n                } else {\n                    file = new java.io.File(file , name);\n                }\n            }\n            return file;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"wildcards":"names"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FilenameUtils:921","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"9e16ba8e-2e80-11e6-b122-8fb9faec9fc6","method":{"position":"org.apache.commons.io.DirectoryWalker:434","type":"CtMethodImpl","sourcecode":"protected boolean handleIsCancelled(java.io.File file, int depth, java.util.Collection<T> results) throws java.io.IOException {\n    if (depth < 0) {\n        {\n            return false;\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"depth"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:524","type":"CtBinaryOperatorImpl","sourcecode":"(xmlGuessEnc != null) && (!(xmlGuessEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_8)))"},"failures":[],"tindex":"9e16e19f-2e80-11e6-b122-bb9756820643","method":{"position":"org.apache.commons.io.IOUtils:948","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(byte[] input, java.lang.String encoding) throws java.io.IOException {\n    if ((encoding != null) && (!(xmlGuessEnc.equals(encoding)))) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (encoding == null) {\n                {\n                    return new java.lang.String(input , org.apache.commons.io.Charsets.toCharset(encoding));\n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.io.input.XmlStreamReader.UTF_8":"encoding","xmlGuessEnc":"encoding"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FilenameUtils:1026","type":"CtBinaryOperatorImpl","sourcecode":"filename == null"},"failures":[],"tindex":"9e16e1a0-2e80-11e6-b122-3113229973a4","method":{"position":"org.apache.commons.io.input.XmlStreamReader:579","type":"CtMethodImpl","sourcecode":"java.lang.String calculateHttpEncoding(java.lang.String httpContentType, java.lang.String bomEnc, java.lang.String xmlGuessEnc, java.lang.String xmlEnc, boolean lenient) throws java.io.IOException {\n    if (bomEnc == null) {\n        {\n            if (lenient && (xmlEnc != null)) {\n                return xmlEnc;\n            } \n            java.lang.String java.lang.String = org.apache.commons.io.input.XmlStreamReader.getContentTypeMime(httpContentType);\n            java.lang.String java.lang.String = org.apache.commons.io.input.XmlStreamReader.getContentTypeEncoding(httpContentType);\n            boolean boolean = org.apache.commons.io.input.XmlStreamReader.isAppXml(cTMime);\n            boolean boolean = org.apache.commons.io.input.XmlStreamReader.isTextXml(cTMime);\n            if ((!appXml) && (!textXml)) {\n                java.lang.String java.lang.String = java.text.MessageFormat.format(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n                throw new org.apache.commons.io.input.XmlStreamReaderException(msg , cTMime , cTEnc , bomEnc , xmlGuessEnc , xmlEnc);\n            } \n            if (cTEnc == null) {\n                if (appXml) {\n                    return calculateRawEncoding(bomEnc, xmlGuessEnc, xmlEnc);\n                } else {\n                    return (java.lang.String) == null ? org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String : java.lang.String;\n                }\n            } \n            if ((cTEnc.equals(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String)) || (cTEnc.equals(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String))) {\n                if (bomEnc != null) {\n                    java.lang.String java.lang.String = java.text.MessageFormat.format(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n                    throw new org.apache.commons.io.input.XmlStreamReaderException(msg , cTMime , cTEnc , bomEnc , xmlGuessEnc , xmlEnc);\n                } \n                return cTEnc;\n            } \n            if (cTEnc.equals(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String)) {\n                if ((bomEnc != null) && (bomEnc.startsWith(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String))) {\n                    return bomEnc;\n                } \n                java.lang.String java.lang.String = java.text.MessageFormat.format(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n                throw new org.apache.commons.io.input.XmlStreamReaderException(msg , cTMime , cTEnc , bomEnc , xmlGuessEnc , xmlEnc);\n            } \n            if ((cTEnc.equals(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String)) || (cTEnc.equals(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String))) {\n                if (bomEnc != null) {\n                    java.lang.String java.lang.String = java.text.MessageFormat.format(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n                    throw new org.apache.commons.io.input.XmlStreamReaderException(msg , cTMime , cTEnc , bomEnc , xmlGuessEnc , xmlEnc);\n                } \n                return cTEnc;\n            } \n            if (cTEnc.equals(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String)) {\n                if ((bomEnc != null) && (bomEnc.startsWith(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String))) {\n                    return bomEnc;\n                } \n                java.lang.String java.lang.String = java.text.MessageFormat.format(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.lang.String, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);\n                throw new org.apache.commons.io.input.XmlStreamReaderException(msg , cTMime , cTEnc , bomEnc , xmlGuessEnc , xmlEnc);\n            } \n            return cTEnc;\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename":"bomEnc"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:866","type":"CtBinaryOperatorImpl","sourcecode":"(url != null) && ((url.indexOf('%')) >= 0)"},"failures":[],"tindex":"9e172fc1-2e80-11e6-b122-95c5f71dd23a","method":{"position":"org.apache.commons.io.IOUtils:1690","type":"CtMethodImpl","sourcecode":"public static void writeLines(java.util.Collection<?> lines, java.lang.String lineEnding, java.io.OutputStream output, java.lang.String encoding) throws java.io.IOException {\n    if ((encoding != null) && ((url.indexOf('%')) >= 0)) {\n        {\n            org.apache.commons.io.IOUtils.writeLines(lines, lineEnding, output, org.apache.commons.io.Charsets.toCharset(encoding));\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"url":"encoding"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:1084","type":"CtBinaryOperatorImpl","sourcecode":"(!(parentFile.mkdirs())) && (!(parentFile.isDirectory()))"},"failures":[],"tindex":"9e1756d2-2e80-11e6-b122-33719aadaa19","method":{"position":"org.apache.commons.io.filefilter.WildcardFileFilter:167","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File file) {\n    if ((!(file.mkdirs())) && (!(parentFile.isDirectory()))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.String java.lang.String = file.getName();\n            for (java.lang.String java.lang.String : java.lang.String[]) {\n                if (org.apache.commons.io.FilenameUtils.wildcardMatch(name, wildcard, org.apache.commons.io.IOCase)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"parentFile":"file"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOCase:147","type":"CtBinaryOperatorImpl","sourcecode":"(str1 == null) || (str2 == null)"},"failures":[],"tindex":"9e177de3-2e80-11e6-b122-27530d791909","method":{"position":"org.apache.commons.io.IOUtils:1395","type":"CtMethodImpl","sourcecode":"public static void write(char[] data, java.io.OutputStream output, java.lang.String encoding) throws java.io.IOException {\n    if ((encoding == null) || (encoding == null)) {\n        throw new java.io.IOException();\n    } else {\n        {\n            org.apache.commons.io.IOUtils.write(data, output, org.apache.commons.io.Charsets.toCharset(encoding));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str1":"encoding","str2":"encoding"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.comparator.AbstractFileComparator:61","type":"CtBinaryOperatorImpl","sourcecode":"files != null"},"failures":[],"tindex":"9e177de4-2e80-11e6-b122-cb3339517f9a","method":{"position":"org.apache.commons.io.FileUtils:462","type":"CtMethodImpl","sourcecode":"public static java.io.File[] convertFileCollectionToFileArray(java.util.Collection<java.io.File> files) {\n    if (files != null) {\n        {\n            return files.toArray(new java.io.File[files.size()]);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"files":"files"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:1371","type":"CtBinaryOperatorImpl","sourcecode":"((text.indexOf('?')) == (-1)) && ((text.indexOf('*')) == (-1))"},"failures":[],"tindex":"9e177de5-2e80-11e6-b122-eb236da68fae","method":{"position":"org.apache.commons.io.input.TailerListenerAdapter:54","type":"CtMethodImpl","sourcecode":"public void handle(java.lang.String line) {\n    if (((line.indexOf('?')) == (-1)) && ((text.indexOf('*')) == (-1))) {\n        {\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"text":"line"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.ByteOrderMark:174","type":"CtBinaryOperatorImpl","sourcecode":"i > 0"},"failures":[],"tindex":"9e17a4f6-2e80-11e6-b122-bfcc6974d694","method":{"position":"org.apache.commons.io.output.ThresholdingOutputStream:90","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(int b) throws java.io.IOException {\n    if (b > 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            checkThreshold(1);\n            getStream().write(b);\n            (long)++;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"b"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:790","type":"CtBinaryOperatorImpl","sourcecode":"filter == null"},"failures":[],"tindex":"9e17a4f7-2e80-11e6-b122-d9e5b9763622","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:789","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.filefilter.IOFileFilter makeFileOnly(org.apache.commons.io.filefilter.IOFileFilter filter) {\n    if (filter == null) {\n        {\n            if (filter == null) {\n                return org.apache.commons.io.filefilter.FileFileFilter.org.apache.commons.io.filefilter.FileFileFilter.org.apache.commons.io.filefilter.IOFileFilter;\n            } \n            return new org.apache.commons.io.filefilter.AndFileFilter(org.apache.commons.io.filefilter.FileFileFilter.org.apache.commons.io.filefilter.FileFileFilter.org.apache.commons.io.filefilter.IOFileFilter , filter);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filter":"filter"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.ReversedLinesFileReader:103","type":"CtBinaryOperatorImpl","sourcecode":"charset == (java.nio.charset.Charset.forName(\"UTF-8\"))"},"failures":[],"tindex":"9e186848-2e80-11e6-b122-9f5487bbaf89","method":{"position":"org.apache.commons.io.IOUtils:1101","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.LineIterator lineIterator(java.io.InputStream input, java.nio.charset.Charset encoding) throws java.io.IOException {\n    if (encoding == (java.nio.charset.Charset.forName(\"UTF-8\"))) {\n        {\n            return new org.apache.commons.io.LineIterator(new java.io.InputStreamReader(input , org.apache.commons.io.Charsets.toCharset(encoding)));\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"charset":"encoding"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.HexDump:103","type":"CtBinaryOperatorImpl","sourcecode":"((data[(k + j)]) >= ' ') && ((data[(k + j)]) < 127)"},"failures":[],"tindex":"9e188f59-2e80-11e6-b122-7d7f28378f21","method":{"position":"org.apache.commons.io.EndianUtils:250","type":"CtMethodImpl","sourcecode":"public static float readSwappedFloat(byte[] data, int offset) {\n    if (((data[(offset + offset)]) >= ' ') && ((data[(k + j)]) < 127)) {\n        {\n            return java.lang.Float.intBitsToFloat(org.apache.commons.io.EndianUtils.readSwappedInteger(data, offset));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"data":"data","j":"offset","k":"offset"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:295","type":"CtBinaryOperatorImpl","sourcecode":"(file.canRead()) == false"},"failures":[],"tindex":"9e18b66a-2e80-11e6-b122-b1ceae89dba7","method":{"position":"org.apache.commons.io.FileDeleteStrategy:71","type":"CtMethodImpl","sourcecode":"public boolean deleteQuietly(java.io.File fileToDelete) {\n    if ((fileToDelete.getParentFile()) != null) {\n        {\n            if ((fileToDelete.canRead()) == false) {\n                {\n                    if ((fileToDelete == null) || ((fileToDelete.exists()) == false)) {\n                        return true;\n                    } \n                    try {\n                        return doDelete(fileToDelete);\n                    } catch (java.io.IOException ex) {\n                        return false;\n                    }\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"fileToDelete"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.LineIterator:68","type":"CtBinaryOperatorImpl","sourcecode":"reader == null"},"failures":[],"tindex":"9e18b66b-2e80-11e6-b122-7567a1a0a173","method":{"position":"org.apache.commons.io.CopyUtils:215","type":"CtMethodImpl","sourcecode":"public static int copy(java.io.Reader input, java.io.Writer output) throws java.io.IOException {\n    if (input == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (output != null) {\n                throw new java.io.IOException();\n            } else {\n                {\n                    char[] char[] = new char[org.apache.commons.io.CopyUtils.org.apache.commons.io.CopyUtils.int];\n                    int int = 0;\n                    int int = 0;\n                    while ((-1) != (n = input.read(buffer))) {\n                        output.write(buffer, 0, n);\n                        count += n;\n                    }\n                    return count;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"reader":"input"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:2325","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.io.IOUtils.SKIP_CHAR_BUFFER) == null"},"failures":[],"tindex":"9e18dd7c-2e80-11e6-b122-a1ac8f366ff0","method":{"position":"org.apache.commons.io.IOUtils:1328","type":"CtMethodImpl","sourcecode":"public static void write(char[] data, java.io.Writer output) throws java.io.IOException {\n    if (data == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (data != null) {\n                output.write(data);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.io.IOUtils.SKIP_CHAR_BUFFER":"data"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.output.XmlStreamWriter:167","type":"CtBinaryOperatorImpl","sourcecode":"xmlPrologEnd > 0"},"failures":[],"tindex":"9e18dd7d-2e80-11e6-b122-5545aa8875c1","method":{"position":"org.apache.commons.io.output.NullOutputStream:44","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(byte[] b, int off, int len) {\n    if (off > 0) {\n        {\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"xmlPrologEnd":"off"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.output.LockableFileWriter:183","type":"CtBinaryOperatorImpl","sourcecode":"(file.getParentFile()) != null"},"failures":[],"tindex":"9e19048e-2e80-11e6-b122-b198bb0d5d09","method":{"position":"org.apache.commons.io.FileDeleteStrategy:71","type":"CtMethodImpl","sourcecode":"public boolean deleteQuietly(java.io.File fileToDelete) {\n    if ((fileToDelete.getParentFile()) != null) {\n        {\n            if ((fileToDelete.canRead()) == false) {\n                {\n                    if ((fileToDelete == null) || ((fileToDelete.exists()) == false)) {\n                        return true;\n                    } \n                    try {\n                        return doDelete(fileToDelete);\n                    } catch (java.io.IOException ex) {\n                        return false;\n                    }\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"fileToDelete"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.LineIterator:71","type":"CtBinaryOperatorImpl","sourcecode":"reader instanceof java.io.BufferedReader"},"failures":[],"tindex":"9e19048f-2e80-11e6-b122-afac57cf3fbc","method":{"position":"org.apache.commons.io.IOUtils:1067","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.LineIterator lineIterator(java.io.Reader reader) {\n    if (reader instanceof java.io.BufferedReader) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.io.LineIterator(reader);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"reader":"reader"},"type":"special","returnInThen":false,"status":0}],"header":{"groupId":"commons-io","transformationCount":100,"projectType":"maven","artifactId":"commons-io","generatorVersion":"1.0","version":"2.4"}}