{"failureDictionary":{},"transformations":[{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FilenameUtils:824","type":"CtBinaryOperatorImpl","sourcecode":"filename == null"},"failures":[],"tindex":"f18a4b3a-2e8c-11e6-9b38-b92cb71ab90e","method":{"position":"org.apache.commons.io.IOUtils:1488","type":"CtMethodImpl","sourcecode":"public static void write(java.lang.String data, java.io.Writer output) throws java.io.IOException {\n    if (data == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (data != null) {\n                output.write(data);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename":"data"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.filefilter.MagicNumberFileFilter:206","type":"CtBinaryOperatorImpl","sourcecode":"magicNumber == null"},"failures":[],"tindex":"f18b0e8b-2e8c-11e6-9b38-5f40a922c6dd","method":{"position":"org.apache.commons.io.input.TeeInputStream:143","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int read(byte[] bts) throws java.io.IOException {\n    if (bts == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            int int = super.read(bts);\n            if (n != (-1)) {\n                java.io.OutputStream.write(bts, 0, n);\n            } \n            return n;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"magicNumber":"bts"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.LineIterator:68","type":"CtBinaryOperatorImpl","sourcecode":"reader == null"},"failures":[],"tindex":"f18b0e8c-2e8c-11e6-9b38-4d2b0796a42c","method":{"position":"org.apache.commons.io.IOUtils:738","type":"CtMethodImpl","sourcecode":"public static char[] toCharArray(java.io.Reader input) throws java.io.IOException {\n    if (input == null) {\n        {\n            java.io.CharArrayWriter java.io.CharArrayWriter = new java.io.CharArrayWriter();\n            org.apache.commons.io.IOUtils.copy(input, sw);\n            return sw.toCharArray();\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"reader":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:923","type":"CtBinaryOperatorImpl","sourcecode":"url != null"},"failures":[],"tindex":"f18b359d-2e8c-11e6-9b38-bdc32615e282","method":{"position":"org.apache.commons.io.FileUtils:840","type":"CtMethodImpl","sourcecode":"public static java.io.File toFile(java.net.URL url) {\n    if (url != null) {\n        {\n            if ((url == null) || (!(\"file\".equalsIgnoreCase(url.getProtocol())))) {\n                return null;\n            } else {\n                java.lang.String java.lang.String = url.getFile().replace('/', java.io.File.java.io.File.char);\n                filename = org.apache.commons.io.FileUtils.decodeUrl(filename);\n                return new java.io.File(filename);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"url":"url"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:1361","type":"CtBinaryOperatorImpl","sourcecode":"srcDir == null"},"failures":[],"tindex":"f18b359e-2e8c-11e6-9b38-93ac17b33e8a","method":{"position":"org.apache.commons.io.monitor.FileAlterationListenerAdaptor:59","type":"CtMethodImpl","sourcecode":"public void onDirectoryDelete(final java.io.File directory) {\n    if (directory == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcDir":"directory"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:1067","type":"CtBinaryOperatorImpl","sourcecode":"srcFile == null"},"failures":[],"tindex":"f18b5caf-2e8c-11e6-9b38-8bedac9430a0","method":{"position":"org.apache.commons.io.FileUtils:2268","type":"CtMethodImpl","sourcecode":"public static void forceDelete(java.io.File file) throws java.io.IOException {\n    if (file == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (file.isDirectory()) {\n                org.apache.commons.io.FileUtils.deleteDirectory(file);\n            } else {\n                boolean boolean = file.exists();\n                if (!(file.delete())) {\n                    if (!filePresent) {\n                        throw new java.io.FileNotFoundException((\"File does not exist: \" + file));\n                    } \n                    java.lang.String java.lang.String = \"Unable to delete file: \" + file;\n                    throw new java.io.IOException(message);\n                } \n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcFile":"file"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.LineIterator:175","type":"CtBinaryOperatorImpl","sourcecode":"iterator != null"},"failures":[],"tindex":"f18b5cb0-2e8c-11e6-9b38-fde7b529e470","method":{"position":"org.apache.commons.io.LineIterator:174","type":"CtMethodImpl","sourcecode":"public static void closeQuietly(org.apache.commons.io.LineIterator iterator) {\n    if (iterator != null) {\n        {\n            if (iterator != null) {\n                iterator.close();\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iterator":"iterator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:1419","type":"CtBinaryOperatorImpl","sourcecode":"(destDir.canWrite()) == false"},"failures":[],"tindex":"f18b83c1-2e8c-11e6-9b38-ed9a385c123f","method":{"position":"org.apache.commons.io.comparator.DirectoryFileComparator:62","type":"CtMethodImpl","sourcecode":"public int compare(java.io.File file1, java.io.File file2) {\n    if ((file1.canWrite()) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (getType(file1)) - (getType(file2));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"destDir":"file1"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:1009","type":"CtBinaryOperatorImpl","sourcecode":"(destDir.exists()) && ((destDir.isDirectory()) == false)"},"failures":[],"tindex":"f18b83c2-2e8c-11e6-9b38-9140d97ccd5e","method":{"position":"org.apache.commons.io.DirectoryWalker:434","type":"CtMethodImpl","sourcecode":"protected boolean handleIsCancelled(java.io.File file, int depth, java.util.Collection<T> results) throws java.io.IOException {\n    if ((file.exists()) && ((destDir.isDirectory()) == false)) {\n        {\n            return false;\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"destDir":"file"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2380","type":"CtUnaryOperatorImpl","sourcecode":"!(directory.isDirectory())"},"failures":[],"tindex":"f18baad3-2e8c-11e6-9b38-659b8cd3b33b","method":{"position":"org.apache.commons.io.filefilter.PrefixFileFilter:167","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File file, java.lang.String name) {\n    if (!(file.isDirectory())) {\n        {\n            for (java.lang.String java.lang.String : java.lang.String[]) {\n                if (org.apache.commons.io.IOCase.checkStartsWith(name, prefix)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:689","type":"CtBinaryOperatorImpl","sourcecode":"filename == null"},"failures":[],"tindex":"f18baad4-2e8c-11e6-9b38-611e77e0f063","method":{"position":"org.apache.commons.io.input.XmlStreamReader:774","type":"CtMethodImpl","sourcecode":"static boolean isTextXml(java.lang.String mime) {\n    if (mime == null) {\n        {\n            return (mime != null) && (((mime.equals(\"text/xml\")) || (mime.equals(\"text/xml-external-parsed-entity\"))) || ((mime.startsWith(\"text/\")) && (mime.endsWith(\"+xml\"))));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename":"mime"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:924","type":"CtBinaryOperatorImpl","sourcecode":"(url.getProtocol().equals(\"file\")) == false"},"failures":[],"tindex":"f18bd1e5-2e8c-11e6-9b38-b71fd947866f","method":{"position":"org.apache.commons.io.IOUtils:893","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(java.net.URL url, java.nio.charset.Charset encoding) throws java.io.IOException {\n    if ((url.getProtocol().equals(\"file\")) == false) {\n        throw new java.io.IOException();\n    } else {\n        {\n            java.io.InputStream java.io.InputStream = url.openStream();\n            try {\n                return org.apache.commons.io.IOUtils.toString(inputStream, encoding);\n            } finally {\n                inputStream.close();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"url":"url"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.TeeInputStream:128","type":"CtBinaryOperatorImpl","sourcecode":"n != (-1)"},"failures":[],"tindex":"f18bd1e6-2e8c-11e6-9b38-2bac74428308","method":{"position":"org.apache.commons.io.output.BrokenOutputStream:61","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(int b) throws java.io.IOException {\n    if (b != (-1)) {\n        throw new java.io.IOException();\n    } else {\n        {\n            throw java.io.IOException;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"b"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:449","type":"CtBinaryOperatorImpl","sourcecode":"filters == null"},"failures":[],"tindex":"f18bf8f7-2e8c-11e6-9b38-73aa95773dd4","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:420","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter... filters) {\n    if (filters == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.io.filefilter.AndFileFilter(org.apache.commons.io.filefilter.FileFilterUtils.toList(filters));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filters":"filters"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.ReaderInputStream:231","type":"CtBinaryOperatorImpl","sourcecode":"len == 0"},"failures":[],"tindex":"f18bf8f8-2e8c-11e6-9b38-2d602e01188b","method":{"position":"org.apache.commons.io.input.XmlStreamReader:399","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int read(char[] buf, int offset, int len) throws java.io.IOException {\n    if (offset == 0) {\n        {\n            return java.io.Reader.read(buf, offset, len);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"offset"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:1659","type":"CtBinaryOperatorImpl","sourcecode":"null != exception"},"failures":[],"tindex":"f18c2009-2e8c-11e6-9b38-09ade5f256e4","method":{"position":"org.apache.commons.io.output.TaggedOutputStream:101","type":"CtMethodImpl","sourcecode":"public void throwIfCauseOf(java.lang.Exception exception) throws java.io.IOException {\n    if (null != exception) {\n        throw new java.io.IOException();\n    } else {\n        {\n            org.apache.commons.io.TaggedIOException.throwCauseIfTaggedWith(exception, java.io.Serializable);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"exception":"exception"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:707","type":"CtBinaryOperatorImpl","sourcecode":"guessedEnc != null"},"failures":[],"tindex":"f18c200a-2e8c-11e6-9b38-5f699173b71f","method":{"position":"org.apache.commons.io.IOCase:241","type":"CtMethodImpl","sourcecode":"public boolean checkRegionMatches(java.lang.String str, int strStartIndex, java.lang.String search) {\n    if (search != null) {\n        {\n            return str.regionMatches((!(boolean)), strStartIndex, search, 0, search.length());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"guessedEnc":"search"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:1079","type":"CtInvocationImpl","sourcecode":"srcFile.getCanonicalPath().equals(destFile.getCanonicalPath())"},"failures":[],"tindex":"f18c471b-2e8c-11e6-9b38-654b867639cb","method":{"position":"org.apache.commons.io.monitor.FileEntry:124","type":"CtMethodImpl","sourcecode":"public org.apache.commons.io.monitor.FileEntry newChildInstance(java.io.File file) {\n    if (file.getCanonicalPath().equals(file.getCanonicalPath())) {\n        {\n            return new org.apache.commons.io.monitor.FileEntry(org.apache.commons.io.monitor.FileEntry.this , file);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"destFile":"file","srcFile":"file"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.monitor.FileAlterationObserver:242","type":"CtBinaryOperatorImpl","sourcecode":"listener != null"},"failures":[],"tindex":"f18d317c-2e8c-11e6-9b38-8d858f738c9b","method":{"position":"org.apache.commons.io.monitor.FileAlterationObserver:252","type":"CtMethodImpl","sourcecode":"public void removeListener(final org.apache.commons.io.monitor.FileAlterationListener listener) {\n    if (listener != null) {\n        {\n            if (listener != null) {\n                while (java.util.List<org.apache.commons.io.monitor.FileAlterationListener>.remove(listener)) {\n                }\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"listener":"listener"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.NotFileFilter:41","type":"CtBinaryOperatorImpl","sourcecode":"filter == null"},"failures":[],"tindex":"f18d317d-2e8c-11e6-9b38-3158f79cc0c6","method":{"position":"org.apache.commons.io.filefilter.AndFileFilter:87","type":"CtMethodImpl","sourcecode":"public void addFileFilter(final org.apache.commons.io.filefilter.IOFileFilter ioFileFilter) {\n    if (ioFileFilter == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.io.filefilter.AndFileFilter.this.java.util.List<org.apache.commons.io.filefilter.IOFileFilter>.add(ioFileFilter);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filter":"ioFileFilter"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.XmlStreamWriter:167","type":"CtBinaryOperatorImpl","sourcecode":"xmlPrologEnd > 0"},"failures":[],"tindex":"f18d588e-2e8c-11e6-9b38-7168a194525b","method":{"position":"org.apache.commons.io.output.ProxyOutputStream:87","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(byte[] bts, int st, int end) throws java.io.IOException {\n    if (end > 0) {\n        {\n            try {\n                beforeWrite(end);\n                java.io.OutputStream.write(bts, st, end);\n                afterWrite(end);\n            } catch (java.io.IOException e) {\n                handleIOException(e);\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"xmlPrologEnd":"end"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.NameFileFilter:69","type":"CtBinaryOperatorImpl","sourcecode":"name == null"},"failures":[],"tindex":"f18d588f-2e8c-11e6-9b38-e7f1510ffcfc","method":{"position":"org.apache.commons.io.FilenameUtils:1080","type":"CtMethodImpl","sourcecode":"public static boolean equalsNormalized(java.lang.String filename1, java.lang.String filename2) {\n    if (filename2 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.io.FilenameUtils.equals(filename1, filename2, true, org.apache.commons.io.IOCase.org.apache.commons.io.IOCase.org.apache.commons.io.IOCase);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"filename2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2513","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.io.FileUtils.isSymlink(file))"},"failures":[],"tindex":"f18d5890-2e8c-11e6-9b38-bf6ca89ccc1c","method":{"position":"org.apache.commons.io.FileUtils:2292","type":"CtMethodImpl","sourcecode":"public static void forceDeleteOnExit(java.io.File file) throws java.io.IOException {\n    if (!(org.apache.commons.io.FileUtils.isSymlink(file))) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (file.isDirectory()) {\n                org.apache.commons.io.FileUtils.deleteDirectoryOnExit(file);\n            } else {\n                file.deleteOnExit();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2313","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.io.FileUtils.isSymlink(directory))"},"failures":[],"tindex":"f18d7ea1-2e8c-11e6-9b38-8b77cf4b4501","method":{"position":"org.apache.commons.io.filefilter.AbstractFileFilter:39","type":"CtMethodImpl","sourcecode":"public boolean accept(java.io.File file) {\n    if (!(org.apache.commons.io.FileUtils.isSymlink(file))) {\n        {\n            return accept(file.getParentFile(), file.getName());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"file"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOUtils:2331","type":"CtBinaryOperatorImpl","sourcecode":"n < 0"},"failures":[],"tindex":"f18d7ea2-2e8c-11e6-9b38-9d50addc0096","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:636","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.filefilter.IOFileFilter sizeRangeFileFilter(long minSizeInclusive, long maxSizeInclusive) {\n    if (minSizeInclusive < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.io.filefilter.IOFileFilter org.apache.commons.io.filefilter.IOFileFilter = new org.apache.commons.io.filefilter.SizeFileFilter(minSizeInclusive , true);\n            org.apache.commons.io.filefilter.IOFileFilter org.apache.commons.io.filefilter.IOFileFilter = new org.apache.commons.io.filefilter.SizeFileFilter((maxSizeInclusive + 1L) , false);\n            return new org.apache.commons.io.filefilter.AndFileFilter(minimumFilter , maximumFilter);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"minSizeInclusive"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.input.Tailer:412","type":"CtFieldReadImpl","sourcecode":"reOpen"},"failures":[],"tindex":"f18d7ea3-2e8c-11e6-9b38-7d874e2a100c","method":{"position":"org.apache.commons.io.monitor.FileEntry:265","type":"CtMethodImpl","sourcecode":"public void setDirectory(boolean directory) {\n    if (directory) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.io.monitor.FileEntry.this.boolean = directory;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"reOpen":"directory"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileSystemUtils:343","type":"CtBinaryOperatorImpl","sourcecode":"((!(java.lang.Character.isDigit(c))) && (c != ',')) && (c != '.')"},"failures":[],"tindex":"f18da5b4-2e8c-11e6-9b38-d19d79427866","method":{"position":"org.apache.commons.io.output.ProxyWriter:53","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.io.Writer append(char c) throws java.io.IOException {\n    if (((!(java.lang.Character.isDigit(c))) && (c != ',')) && (c != '.')) {\n        {\n            try {\n                beforeWrite(1);\n                java.io.Writer.append(c);\n                afterWrite(1);\n            } catch (java.io.IOException e) {\n                handleIOException(e);\n            }\n            return org.apache.commons.io.output.ProxyWriter.this;\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"c"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2350","type":"CtBinaryOperatorImpl","sourcecode":"null != exception"},"failures":[],"tindex":"f18da5b5-2e8c-11e6-9b38-c5664f719196","method":{"position":"org.apache.commons.io.output.ProxyOutputStream:165","type":"CtMethodImpl","sourcecode":"protected void handleIOException(java.io.IOException e) throws java.io.IOException {\n    if (null != e) {\n        {\n            throw e;\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"exception":"e"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:523","type":"CtInvocationImpl","sourcecode":"bomEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_8)"},"failures":[],"tindex":"f18e9016-2e8c-11e6-9b38-4f0649b5c358","method":{"position":"org.apache.commons.io.FilenameUtils:553","type":"CtMethodImpl","sourcecode":"public static java.lang.String separatorsToUnix(java.lang.String path) {\n    if (path.equals(path)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((path == null) || ((path.indexOf(org.apache.commons.io.FilenameUtils.org.apache.commons.io.FilenameUtils.char)) == (-1))) {\n                return path;\n            } \n            return path.replace(org.apache.commons.io.FilenameUtils.org.apache.commons.io.FilenameUtils.char, org.apache.commons.io.FilenameUtils.org.apache.commons.io.FilenameUtils.char);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.io.input.XmlStreamReader.UTF_8":"path","bomEnc":"path"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.filefilter.WildcardFilter:130","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"f18e9017-2e8c-11e6-9b38-f50eb561a1c2","method":{"position":"org.apache.commons.io.FileUtils:351","type":"CtMethodImpl","sourcecode":"public static java.io.FileOutputStream openOutputStream(java.io.File file, boolean append) throws java.io.IOException {\n    if (file.isDirectory()) {\n        {\n            if (file.isDirectory()) {\n                {\n                    if (file.exists()) {\n                        if (file.isDirectory()) {\n                            throw new java.io.IOException(((\"File '\" + file) + \"' exists but is a directory\"));\n                        } \n                        if ((file.canWrite()) == false) {\n                            throw new java.io.IOException(((\"File '\" + file) + \"' cannot be written to\"));\n                        } \n                    } else {\n                        java.io.File java.io.File = file.getParentFile();\n                        if (parent != null) {\n                            if ((!(parent.mkdirs())) && (!(parent.isDirectory()))) {\n                                throw new java.io.IOException(((\"Directory '\" + parent) + \"' could not be created\"));\n                            } \n                        } \n                    }\n                    return new java.io.FileOutputStream(file , append);\n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2738","type":"CtBinaryOperatorImpl","sourcecode":"destDir == null"},"failures":[],"tindex":"f18eb728-2e8c-11e6-9b38-cdf60de78d4f","method":{"position":"org.apache.commons.io.TaggedIOException:92","type":"CtMethodImpl","sourcecode":"public static void throwCauseIfTaggedWith(java.lang.Throwable throwable, java.lang.Object tag) throws java.io.IOException {\n    if (tag == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (org.apache.commons.io.TaggedIOException.isTaggedWith(throwable, tag)) {\n                throw ((org.apache.commons.io.TaggedIOException)(throwable)).getCause();\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"destDir":"tag"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:2538","type":"CtBinaryOperatorImpl","sourcecode":"actual != length"},"failures":[],"tindex":"f18eb729-2e8c-11e6-9b38-f5d47c7f2a2c","method":{"position":"org.apache.commons.io.input.ProxyInputStream:200","type":"CtMethodImpl","sourcecode":"protected void beforeRead(int n) throws java.io.IOException {\n    if (n != n) {\n        {\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"actual":"n","length":"n"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.WildcardFilter:130","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"f18eb72a-2e8c-11e6-9b38-2d18a39b1869","method":{"position":"org.apache.commons.io.filefilter.TrueFileFilter:67","type":"CtMethodImpl","sourcecode":"public boolean accept(java.io.File dir, java.lang.String name) {\n    if (dir.isDirectory()) {\n        {\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"dir"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.DirectoryWalker:355","type":"CtBinaryOperatorImpl","sourcecode":"((depthLimit) < 0) || (childDepth <= (depthLimit))"},"failures":[],"tindex":"f18eb72b-2e8c-11e6-9b38-11e5bc702c66","method":{"position":"org.apache.commons.io.EndianUtils:183","type":"CtMethodImpl","sourcecode":"public static long readSwappedUnsignedInteger(byte[] data, int offset) {\n    if ((offset < 0) || (offset <= (int))) {\n        {\n            long long = ((((data[(offset + 0)]) & 255) << 0) + (((data[(offset + 1)]) & 255) << 8)) + (((data[(offset + 2)]) & 255) << 16);\n            long long = (data[(offset + 3)]) & 255;\n            return (high << 24) + (4294967295L & low);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"childDepth":"offset","depthLimit":"offset"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:2402","type":"CtBinaryOperatorImpl","sourcecode":"length < 0"},"failures":[],"tindex":"f18ede3c-2e8c-11e6-9b38-fdf1027559df","method":{"position":"org.apache.commons.io.output.TeeOutputStream:63","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized void write(byte[] b, int off, int len) throws java.io.IOException {\n    if (len < 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            super.write(b, off, len);\n            org.apache.commons.io.output.TeeOutputStream.this.java.io.OutputStream.write(b, off, len);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"len"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.input.BOMInputStream:226","type":"CtBinaryOperatorImpl","sourcecode":"(byteOrderMark) != null"},"failures":[],"tindex":"f18ede3d-2e8c-11e6-9b38-d10c69ab6d8d","method":{"position":"org.apache.commons.io.input.BOMInputStream:139","type":"CtMethodImpl","sourcecode":"public int compare(org.apache.commons.io.ByteOrderMark bom1, org.apache.commons.io.ByteOrderMark bom2) {\n    if (bom1 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = bom1.length();\n            int int = bom2.length();\n            if (len1 > len2) {\n                return -1;\n            } \n            if (len2 > len1) {\n                return 1;\n            } \n            return 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"byteOrderMark":"bom1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.ByteArrayOutputStream:195","type":"CtBinaryOperatorImpl","sourcecode":"inBufferPos == (currentBuffer.length)"},"failures":[],"tindex":"f18f054e-2e8c-11e6-9b38-45c305a1d1fc","method":{"position":"org.apache.commons.io.input.TeeInputStream:126","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int read(byte[] bts, int st, int end) throws java.io.IOException {\n    if (end == st) {\n        throw new java.io.IOException();\n    } else {\n        {\n            int int = super.read(bts, st, end);\n            if (n != (-1)) {\n                java.io.OutputStream.write(bts, st, n);\n            } \n            return n;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"currentBuffer":"bts","inBufferPos":"end","length":"st"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:550","type":"CtBinaryOperatorImpl","sourcecode":"(xmlGuessEnc != null) && (!(xmlGuessEnc.equals(bomEnc)))"},"failures":[],"tindex":"f18f054f-2e8c-11e6-9b38-1f706643d805","method":{"position":"org.apache.commons.io.IOCase:197","type":"CtMethodImpl","sourcecode":"public boolean checkEndsWith(java.lang.String str, java.lang.String end) {\n    if ((end != null) && (!(xmlGuessEnc.equals(end)))) {\n        {\n            int int = end.length();\n            return str.regionMatches((!(boolean)), ((str.length()) - endLen), end, 0, endLen);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bomEnc":"end","xmlGuessEnc":"end"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:810","type":"CtBinaryOperatorImpl","sourcecode":"charsetName == null"},"failures":[],"tindex":"f18f0550-2e8c-11e6-9b38-e15b57d53c93","method":{"position":"org.apache.commons.io.FileUtils:2014","type":"CtMethodImpl","sourcecode":"public static void write(java.io.File file, java.lang.CharSequence data, java.nio.charset.Charset encoding) throws java.io.IOException {\n    if (data == null) {\n        {\n            org.apache.commons.io.FileUtils.write(file, data, encoding, false);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"charsetName":"data"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOUtils:400","type":"CtBinaryOperatorImpl","sourcecode":"sock != null"},"failures":[],"tindex":"f18f2c61-2e8c-11e6-9b38-fd58e7402af6","method":{"position":"org.apache.commons.io.IOUtils:399","type":"CtMethodImpl","sourcecode":"public static void closeQuietly(java.net.ServerSocket sock) {\n    if (sock != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (sock != null) {\n                try {\n                    sock.close();\n                } catch (java.io.IOException ioe) {\n                }\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sock":"sock"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:1635","type":"CtUnaryOperatorImpl","sourcecode":"!(directory.exists())"},"failures":[],"tindex":"f18f2c62-2e8c-11e6-9b38-978e74bc7c85","method":{"position":"org.apache.commons.io.FileUtils:1508","type":"CtMethodImpl","sourcecode":"public static void copyInputStreamToFile(java.io.InputStream source, java.io.File destination) throws java.io.IOException {\n    if (!(destination.exists())) {\n        throw new java.io.IOException();\n    } else {\n        {\n            try {\n                java.io.FileOutputStream java.io.FileOutputStream = org.apache.commons.io.FileUtils.openOutputStream(destination);\n                try {\n                    org.apache.commons.io.IOUtils.copy(source, output);\n                    output.close();\n                } finally {\n                    org.apache.commons.io.IOUtils.closeQuietly(output);\n                }\n            } finally {\n                org.apache.commons.io.IOUtils.closeQuietly(source);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"destination"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:1129","type":"CtBinaryOperatorImpl","sourcecode":"(destFile.exists()) && (destFile.isDirectory())"},"failures":[],"tindex":"f18f2c63-2e8c-11e6-9b38-ffd3ef68d5b2","method":{"position":"org.apache.commons.io.filefilter.PrefixFileFilter:149","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File file) {\n    if ((file.exists()) && (destFile.isDirectory())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.String java.lang.String = file.getName();\n            for (java.lang.String java.lang.String : org.apache.commons.io.filefilter.PrefixFileFilter.this.java.lang.String[]) {\n                if (org.apache.commons.io.IOCase.checkStartsWith(name, prefix)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"destFile":"file"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.ThreadMonitor:69","type":"CtBinaryOperatorImpl","sourcecode":"timeout > 0"},"failures":[],"tindex":"f18f5374-2e8c-11e6-9b38-01b160163d6d","method":{"position":"org.apache.commons.io.monitor.FileEntry:209","type":"CtMethodImpl","sourcecode":"public void setLastModified(long lastModified) {\n    if (lastModified > 0) {\n        {\n            org.apache.commons.io.monitor.FileEntry.this.long = lastModified;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeout":"lastModified"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:2448","type":"CtBinaryOperatorImpl","sourcecode":"length < 0"},"failures":[],"tindex":"f18f5375-2e8c-11e6-9b38-a3c6d60fcbdc","method":{"position":"org.apache.commons.io.output.ProxyOutputStream:153","type":"CtMethodImpl","sourcecode":"protected void afterWrite(int n) throws java.io.IOException {\n    if (n < 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"n"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.ReaderInputStream:231","type":"CtBinaryOperatorImpl","sourcecode":"len == 0"},"failures":[],"tindex":"f18f5376-2e8c-11e6-9b38-cd92f1c281b5","method":{"position":"org.apache.commons.io.output.XmlStreamWriter:211","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(char[] cbuf, int off, int len) throws java.io.IOException {\n    if (len == 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if ((java.io.StringWriter) != null) {\n                detectEncoding(cbuf, off, len);\n            } else {\n                java.io.Writer.write(cbuf, off, len);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"len"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2308","type":"CtUnaryOperatorImpl","sourcecode":"!(directory.exists())"},"failures":[],"tindex":"f18f7a87-2e8c-11e6-9b38-0be5612d7b51","method":{"position":"org.apache.commons.io.FileUtils:519","type":"CtMethodImpl","sourcecode":"public static java.util.Collection<java.io.File> listFiles(java.io.File directory, org.apache.commons.io.filefilter.IOFileFilter fileFilter, org.apache.commons.io.filefilter.IOFileFilter dirFilter) {\n    if (!(directory.exists())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.io.FileUtils.validateListFilesParameters(directory, fileFilter);\n            org.apache.commons.io.filefilter.IOFileFilter org.apache.commons.io.filefilter.IOFileFilter = org.apache.commons.io.FileUtils.setUpEffectiveFileFilter(fileFilter);\n            org.apache.commons.io.filefilter.IOFileFilter org.apache.commons.io.filefilter.IOFileFilter = org.apache.commons.io.FileUtils.setUpEffectiveDirFilter(dirFilter);\n            java.util.Collection<java.io.File> java.util.Collection<java.io.File> = new java.util.LinkedList<java.io.File>();\n            org.apache.commons.io.FileUtils.innerListFiles(files, directory, org.apache.commons.io.filefilter.FileFilterUtils.or(effFileFilter, effDirFilter), false);\n            return files;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"directory"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:1861","type":"CtBinaryOperatorImpl","sourcecode":"length > 0"},"failures":[],"tindex":"f18f7a88-2e8c-11e6-9b38-cf9b4cdfa9f7","method":{"position":"org.apache.commons.io.input.CountingInputStream:57","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized long skip(final long length) throws java.io.IOException {\n    if (length > 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            final long long = super.skip(length);\n            org.apache.commons.io.input.CountingInputStream.this.long += skip;\n            return skip;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"length"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:658","type":"CtBinaryOperatorImpl","sourcecode":"i >= 0"},"failures":[],"tindex":"f18f7a89-2e8c-11e6-9b38-9370b64957de","method":{"position":"org.apache.commons.io.input.NullInputStream:156","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized void mark(int readlimit) {\n    if (readlimit >= 0) {\n        {\n            if (!(boolean)) {\n                throw new java.lang.UnsupportedOperationException(\"Mark not supported\");\n            } \n            long = long;\n            org.apache.commons.io.input.NullInputStream.this.long = readlimit;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"readlimit"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:722","type":"CtBinaryOperatorImpl","sourcecode":"firstGT == (-1)"},"failures":[],"tindex":"f18fa19a-2e8c-11e6-9b38-57703b30dab0","method":{"position":"org.apache.commons.io.FileSystemUtils:258","type":"CtMethodImpl","sourcecode":"long freeSpaceOS(java.lang.String path, int os, boolean kb, long timeout) throws java.io.IOException {\n    if (os == (-1)) {\n        {\n            if (path == null) {\n                throw new java.lang.IllegalArgumentException(\"Path must not be empty\");\n            } \n            switch (os) {\n                case org.apache.commons.io.FileSystemUtils.org.apache.commons.io.FileSystemUtils.int :\n                    return kb ? (freeSpaceWindows(path, timeout)) / (org.apache.commons.io.FileUtils.org.apache.commons.io.FileUtils.long) : freeSpaceWindows(path, timeout);\n                case org.apache.commons.io.FileSystemUtils.org.apache.commons.io.FileSystemUtils.int :\n                    return freeSpaceUnix(path, kb, false, timeout);\n                case org.apache.commons.io.FileSystemUtils.org.apache.commons.io.FileSystemUtils.int :\n                    return freeSpaceUnix(path, kb, true, timeout);\n                case org.apache.commons.io.FileSystemUtils.org.apache.commons.io.FileSystemUtils.int :\n                    throw new java.lang.IllegalStateException(\"Unsupported operating system\");\n                default :\n                    throw new java.lang.IllegalStateException(\"Exception caught when determining operating system\");\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"firstGT":"os"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.ReaderInputStream:199","type":"CtBinaryOperatorImpl","sourcecode":"c == (-1)"},"failures":[],"tindex":"f18fa19b-2e8c-11e6-9b38-e383d3cf657e","method":{"position":"org.apache.commons.io.input.ProxyInputStream:220","type":"CtMethodImpl","sourcecode":"protected void afterRead(int n) throws java.io.IOException {\n    if (n == (-1)) {\n        {\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"n"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.LineIterator:71","type":"CtBinaryOperatorImpl","sourcecode":"reader instanceof java.io.BufferedReader"},"failures":[],"tindex":"f18fc8ac-2e8c-11e6-9b38-0b54b8278586","method":{"position":"org.apache.commons.io.CopyUtils:215","type":"CtMethodImpl","sourcecode":"public static int copy(java.io.Reader input, java.io.Writer output) throws java.io.IOException {\n    if (input instanceof java.io.BufferedReader) {\n        throw new java.io.IOException();\n    } else {\n        {\n            char[] char[] = new char[org.apache.commons.io.CopyUtils.org.apache.commons.io.CopyUtils.int];\n            int int = 0;\n            int int = 0;\n            while ((-1) != (n = input.read(buffer))) {\n                output.write(buffer, 0, n);\n                count += n;\n            }\n            return count;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"reader":"input"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.comparator.SizeFileComparator:122","type":"CtBinaryOperatorImpl","sourcecode":"result < 0"},"failures":[],"tindex":"f18fc8ad-2e8c-11e6-9b38-3faac78b1c39","method":{"position":"org.apache.commons.io.IOUtils:2354","type":"CtMethodImpl","sourcecode":"public static void skipFully(java.io.InputStream input, long toSkip) throws java.io.IOException {\n    if (toSkip < 0) {\n        {\n            if (toSkip < 0) {\n                throw new java.lang.IllegalArgumentException((\"Bytes to skip must not be negative: \" + toSkip));\n            } \n            long long = org.apache.commons.io.IOUtils.skip(input, toSkip);\n            if (skipped != toSkip) {\n                throw new java.io.EOFException((((\"Bytes to skip: \" + toSkip) + \" actual: \") + skipped));\n            } \n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"result":"toSkip"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.SuffixFileFilter:73","type":"CtBinaryOperatorImpl","sourcecode":"suffix == null"},"failures":[],"tindex":"f18fc8ae-2e8c-11e6-9b38-9d9b4387b1e1","method":{"position":"org.apache.commons.io.FilenameUtils:287","type":"CtMethodImpl","sourcecode":"public static java.lang.String normalizeNoEndSeparator(java.lang.String filename) {\n    if (filename == null) {\n        {\n            if (filename == null) {\n                {\n                    return org.apache.commons.io.FilenameUtils.doNormalize(filename, org.apache.commons.io.FilenameUtils.org.apache.commons.io.FilenameUtils.char, false);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"suffix":"filename"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:600","type":"CtInvocationImpl","sourcecode":"directory.isDirectory()"},"failures":[],"tindex":"f18fefbf-2e8c-11e6-9b38-cdb3e3a97eab","method":{"position":"org.apache.commons.io.FileUtils:351","type":"CtMethodImpl","sourcecode":"public static java.io.FileOutputStream openOutputStream(java.io.File file, boolean append) throws java.io.IOException {\n    if (file.isDirectory()) {\n        {\n            if (file.isDirectory()) {\n                {\n                    if (file.exists()) {\n                        if (file.isDirectory()) {\n                            throw new java.io.IOException(((\"File '\" + file) + \"' exists but is a directory\"));\n                        } \n                        if ((file.canWrite()) == false) {\n                            throw new java.io.IOException(((\"File '\" + file) + \"' cannot be written to\"));\n                        } \n                    } else {\n                        java.io.File java.io.File = file.getParentFile();\n                        if (parent != null) {\n                            if ((!(parent.mkdirs())) && (!(parent.isDirectory()))) {\n                                throw new java.io.IOException(((\"Directory '\" + parent) + \"' could not be created\"));\n                            } \n                        } \n                    }\n                    return new java.io.FileOutputStream(file , append);\n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"file"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.RegexFileFilter:90","type":"CtBinaryOperatorImpl","sourcecode":"pattern == null"},"failures":[],"tindex":"f18fefc0-2e8c-11e6-9b38-2db1fa1a483d","method":{"position":"org.apache.commons.io.IOCase:146","type":"CtMethodImpl","sourcecode":"public int checkCompareTo(java.lang.String str1, java.lang.String str2) {\n    if (str1 == null) {\n        {\n            if ((str1 == null) || (str2 == null)) {\n                throw new java.lang.NullPointerException(\"The strings must not be null\");\n            } \n            return boolean ? str1.compareTo(str2) : str1.compareToIgnoreCase(str2);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pattern":"str1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:1076","type":"CtInvocationImpl","sourcecode":"srcFile.isDirectory()"},"failures":[],"tindex":"f18fefc1-2e8c-11e6-9b38-510d583b5e99","method":{"position":"org.apache.commons.io.FileUtils:1961","type":"CtMethodImpl","sourcecode":"public static void writeStringToFile(java.io.File file, java.lang.String data) throws java.io.IOException {\n    if (file.isDirectory()) {\n        throw new java.io.IOException();\n    } else {\n        {\n            org.apache.commons.io.FileUtils.writeStringToFile(file, data, java.nio.charset.Charset.defaultCharset(), false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcFile":"file"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.WriterOutputStream:301","type":"CtBinaryOperatorImpl","sourcecode":"(decoderOut.position()) > 0"},"failures":[],"tindex":"f19016d2-2e8c-11e6-9b38-ab5c39fba9f0","method":{"position":"org.apache.commons.io.input.ProxyReader:113","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int read(java.nio.CharBuffer target) throws java.io.IOException {\n    if ((target.position()) > 0) {\n        {\n            try {\n                beforeRead((target != null ? target.length() : 0));\n                int int = java.io.Reader.read(target);\n                afterRead(n);\n                return n;\n            } catch (java.io.IOException e) {\n                handleIOException(e);\n                return -1;\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"decoderOut":"target"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:611","type":"CtBinaryOperatorImpl","sourcecode":"bomEnc != null"},"failures":[],"tindex":"f19016d3-2e8c-11e6-9b38-1bb395b96e12","method":{"position":"org.apache.commons.io.output.ProxyWriter:93","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.io.Writer append(java.lang.CharSequence csq) throws java.io.IOException {\n    if (csq != null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            try {\n                int int = 0;\n                if (csq != null) {\n                    len = csq.length();\n                } \n                beforeWrite(len);\n                java.io.Writer.append(csq);\n                afterWrite(len);\n            } catch (java.io.IOException e) {\n                handleIOException(e);\n            }\n            return org.apache.commons.io.output.ProxyWriter.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bomEnc":"csq"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2864","type":"CtUnaryOperatorImpl","sourcecode":"!(destDir.exists())"},"failures":[],"tindex":"f19016d4-2e8c-11e6-9b38-53cfefd59b0e","method":{"position":"org.apache.commons.io.comparator.LastModifiedFileComparator:67","type":"CtMethodImpl","sourcecode":"public int compare(java.io.File file1, java.io.File file2) {\n    if (!(file2.exists())) {\n        {\n            long long = (file1.lastModified()) - (file2.lastModified());\n            if (result < 0) {\n                return -1;\n            } else if (result > 0) {\n                return 1;\n            } else {\n                return 0;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"destDir":"file2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.filefilter.MagicNumberFileFilter:206","type":"CtBinaryOperatorImpl","sourcecode":"magicNumber == null"},"failures":[],"tindex":"f1903de5-2e8c-11e6-9b38-85352ba1da77","method":{"position":"org.apache.commons.io.output.TeeOutputStream:50","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized void write(byte[] b) throws java.io.IOException {\n    if (b == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            super.write(b);\n            org.apache.commons.io.output.TeeOutputStream.this.java.io.OutputStream.write(b);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"magicNumber":"b"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2350","type":"CtBinaryOperatorImpl","sourcecode":"null != exception"},"failures":[],"tindex":"f1903de6-2e8c-11e6-9b38-b9b960719b74","method":{"position":"org.apache.commons.io.input.TaggedInputStream:101","type":"CtMethodImpl","sourcecode":"public void throwIfCauseOf(java.lang.Throwable throwable) throws java.io.IOException {\n    if (null != throwable) {\n        {\n            org.apache.commons.io.TaggedIOException.throwCauseIfTaggedWith(throwable, java.io.Serializable);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"exception":"throwable"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.ByteArrayOutputStream:295","type":"CtBinaryOperatorImpl","sourcecode":"remaining == 0"},"failures":[],"tindex":"f1903de7-2e8c-11e6-9b38-e35cd3bf42dd","method":{"position":"org.apache.commons.io.output.ProxyWriter:259","type":"CtMethodImpl","sourcecode":"protected void afterWrite(int n) throws java.io.IOException {\n    if (n == 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"remaining":"n"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2818","type":"CtUnaryOperatorImpl","sourcecode":"!(srcFile.exists())"},"failures":[],"tindex":"f1903de8-2e8c-11e6-9b38-a327943c3ef2","method":{"position":"org.apache.commons.io.monitor.FileAlterationObserver:428","type":"CtMethodImpl","sourcecode":"private java.io.File[] listFiles(java.io.File file) {\n    if (!(file.exists())) {\n        {\n            java.io.File[] java.io.File[] = null;\n            if (file.isDirectory()) {\n                children = (java.io.FileFilter) == null ? file.listFiles() : file.listFiles(java.io.FileFilter);\n            } \n            if (children == null) {\n                children = org.apache.commons.io.FileUtils.org.apache.commons.io.FileUtils.java.io.File[];\n            } \n            if (((java.util.Comparator<java.io.File>) != null) && ((children.int) > 1)) {\n                java.util.Arrays.sort(children, java.util.Comparator<java.io.File>);\n            } \n            return children;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcFile":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.PrefixFileFilter:72","type":"CtBinaryOperatorImpl","sourcecode":"prefix == null"},"failures":[],"tindex":"f1910139-2e8c-11e6-9b38-83a3787ec981","method":{"position":"org.apache.commons.io.FilenameUtils:287","type":"CtMethodImpl","sourcecode":"public static java.lang.String normalizeNoEndSeparator(java.lang.String filename) {\n    if (filename == null) {\n        {\n            if (filename == null) {\n                {\n                    return org.apache.commons.io.FilenameUtils.doNormalize(filename, org.apache.commons.io.FilenameUtils.org.apache.commons.io.FilenameUtils.char, false);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"prefix":"filename"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.input.CharSequenceReader:114","type":"CtBinaryOperatorImpl","sourcecode":"c == (-1)"},"failures":[],"tindex":"f191013a-2e8c-11e6-9b38-838455799d3b","method":{"position":"org.apache.commons.io.output.NullWriter:105","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(char[] chr, int st, int end) {\n    if (st == (-1)) {\n        {\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"st"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"commons-io","transformationCount":65,"projectType":"maven","artifactId":"commons-io","generatorVersion":"1.0","version":"2.4"}}