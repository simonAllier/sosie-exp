{"failureDictionary":{},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2778","type":"CtBinaryOperatorImpl","sourcecode":"src == null"},"failures":[],"tindex":"479b3ce1-2ed0-11e6-b10a-7734ce752705","method":{"position":"org.apache.commons.io.FileUtils:2502","type":"CtMethodImpl","sourcecode":"public static java.math.BigInteger sizeOfDirectoryAsBigInteger(java.io.File directory) {\n    if (directory == null) {\n        {\n            org.apache.commons.io.FileUtils.checkDirectory(directory);\n            final java.io.File[] java.io.File[] = directory.listFiles();\n            if (files == null) {\n                return java.math.BigInteger.java.math.BigInteger.java.math.BigInteger;\n            } \n            java.math.BigInteger java.math.BigInteger = java.math.BigInteger.java.math.BigInteger.java.math.BigInteger;\n            for (final java.io.File java.io.File : files) {\n                try {\n                    if (!(org.apache.commons.io.FileUtils.isSymlink(file))) {\n                        size = size.add(java.math.BigInteger.valueOf(org.apache.commons.io.FileUtils.sizeOf(file)));\n                    } \n                } catch (java.io.IOException ioe) {\n                }\n            }\n            return size;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"src":"directory"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.BOMInputStream:226","type":"CtBinaryOperatorImpl","sourcecode":"(byteOrderMark) != null"},"failures":[],"tindex":"479c2742-2ed0-11e6-b10a-47e4f362a296","method":{"position":"org.apache.commons.io.input.BOMInputStream:196","type":"CtMethodImpl","sourcecode":"public boolean hasBOM(org.apache.commons.io.ByteOrderMark bom) throws java.io.IOException {\n    if (bom != null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (!(java.util.List<org.apache.commons.io.ByteOrderMark>.contains(bom))) {\n                throw new java.lang.IllegalArgumentException((\"Stream not configure to detect \" + bom));\n            } \n            return ((org.apache.commons.io.ByteOrderMark) != null) && (getBOM().equals(bom));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"byteOrderMark":"bom"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.NullInputStream:284","type":"CtBinaryOperatorImpl","sourcecode":"(position) == (size)"},"failures":[],"tindex":"479c2743-2ed0-11e6-b10a-db9069ff3aa0","method":{"position":"org.apache.commons.io.input.NullReader:263","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic long skip(long numberOfChars) throws java.io.IOException {\n    if (numberOfChars == numberOfChars) {\n        {\n            if (boolean) {\n                throw new java.io.IOException(\"Skip after end of file\");\n            } \n            if ((long) == (long)) {\n                return doEndOfFile();\n            } \n            long += numberOfChars;\n            long long = numberOfChars;\n            if ((long) > (long)) {\n                returnLength = numberOfChars - ((long) - (long));\n                long = long;\n            } \n            return returnLength;\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"numberOfChars","position":"numberOfChars"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:504","type":"CtBinaryOperatorImpl","sourcecode":"size < 0"},"failures":[],"tindex":"479c4e54-2ed0-11e6-b10a-275921ccc0fc","method":{"position":"org.apache.commons.io.output.FileWriterWithEncoding:266","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(int idx) throws java.io.IOException {\n    if (idx < 0) {\n        {\n            java.io.Writer.write(idx);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"idx"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:638","type":"CtBinaryOperatorImpl","sourcecode":"(bomEnc != null) && (bomEnc.startsWith(org.apache.commons.io.input.XmlStreamReader.UTF_32))"},"failures":[],"tindex":"479c4e55-2ed0-11e6-b10a-51a0f5064dbc","method":{"position":"org.apache.commons.io.output.LockableFileWriter:349","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(java.lang.String str) throws java.io.IOException {\n    if (str.equals(str)) {\n        {\n            if ((str != null) && (bomEnc.startsWith(str))) {\n                {\n                    java.io.Writer.write(str);\n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bomEnc":"str","org.apache.commons.io.input.XmlStreamReader.UTF_32":"str"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:758","type":"CtBinaryOperatorImpl","sourcecode":"filter == null"},"failures":[],"tindex":"479c7566-2ed0-11e6-b10a-77cecbb55be7","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:740","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.filefilter.IOFileFilter makeCVSAware(org.apache.commons.io.filefilter.IOFileFilter filter) {\n    if (filter == null) {\n        {\n            if (filter == null) {\n                return org.apache.commons.io.filefilter.FileFilterUtils.org.apache.commons.io.filefilter.FileFilterUtils.org.apache.commons.io.filefilter.IOFileFilter;\n            } else {\n                return org.apache.commons.io.filefilter.FileFilterUtils.and(filter, org.apache.commons.io.filefilter.FileFilterUtils.org.apache.commons.io.filefilter.FileFilterUtils.org.apache.commons.io.filefilter.IOFileFilter);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filter":"filter"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.output.XmlStreamWriter:163","type":"CtBinaryOperatorImpl","sourcecode":"(xmlProlog.length()) >= 5"},"failures":[],"tindex":"479c7567-2ed0-11e6-b10a-5309cb9db8a8","method":{"position":"org.apache.commons.io.IOUtils:1164","type":"CtMethodImpl","sourcecode":"public static java.io.InputStream toInputStream(java.lang.CharSequence input, java.nio.charset.Charset encoding) {\n    if ((input.length()) >= 5) {\n        {\n            return org.apache.commons.io.IOUtils.toInputStream(input.toString(), encoding);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"xmlProlog":"input"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:1489","type":"CtBinaryOperatorImpl","sourcecode":"data != null"},"failures":[],"tindex":"479c9c78-2ed0-11e6-b10a-219a6bb808f9","method":{"position":"org.apache.commons.io.FileUtils:1987","type":"CtMethodImpl","sourcecode":"public static void write(java.io.File file, java.lang.CharSequence data) throws java.io.IOException {\n    if (data != null) {\n        {\n            org.apache.commons.io.FileUtils.write(file, data, java.nio.charset.Charset.defaultCharset(), false);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"data":"data"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:1848","type":"CtBinaryOperatorImpl","sourcecode":"length == 0"},"failures":[],"tindex":"479c9c79-2ed0-11e6-b10a-55ba31ad0dc1","method":{"position":"org.apache.commons.io.IOUtils:2277","type":"CtMethodImpl","sourcecode":"public static long skip(java.io.InputStream input, long toSkip) throws java.io.IOException {\n    if (toSkip == 0) {\n        {\n            if (toSkip < 0) {\n                throw new java.lang.IllegalArgumentException((\"Skip count must be non-negative, actual: \" + toSkip));\n            } \n            if ((org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.byte[]) == null) {\n                org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.byte[] = new byte[org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.int];\n            } \n            long long = toSkip;\n            while (remain > 0) {\n                long long = input.read(org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.byte[], 0, ((int)(java.lang.Math.min(remain, org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.int))));\n                if (n < 0) {\n                    break;\n                } \n                remain -= n;\n            }\n            return toSkip - remain;\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"toSkip"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:1196","type":"CtBinaryOperatorImpl","sourcecode":"destDir == null"},"failures":[],"tindex":"479cc38a-2ed0-11e6-b10a-13c2f7e64b62","method":{"position":"org.apache.commons.io.FileUtils:2014","type":"CtMethodImpl","sourcecode":"public static void write(java.io.File file, java.lang.CharSequence data, java.nio.charset.Charset encoding) throws java.io.IOException {\n    if (file == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            org.apache.commons.io.FileUtils.write(file, data, encoding, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"destDir":"file"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.input.BOMInputStream:226","type":"CtBinaryOperatorImpl","sourcecode":"(byteOrderMark) != null"},"failures":[],"tindex":"479cc38b-2ed0-11e6-b10a-19e22da576d9","method":{"position":"org.apache.commons.io.input.BOMInputStream:139","type":"CtMethodImpl","sourcecode":"public int compare(org.apache.commons.io.ByteOrderMark bom1, org.apache.commons.io.ByteOrderMark bom2) {\n    if (bom2 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = bom1.length();\n            int int = bom2.length();\n            if (len1 > len2) {\n                return -1;\n            } \n            if (len2 > len1) {\n                return 1;\n            } \n            return 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"byteOrderMark":"bom2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:1659","type":"CtBinaryOperatorImpl","sourcecode":"null != exception"},"failures":[],"tindex":"479cea9c-2ed0-11e6-b10a-75b091449eb5","method":{"position":"org.apache.commons.io.output.TaggedOutputStream:101","type":"CtMethodImpl","sourcecode":"public void throwIfCauseOf(java.lang.Exception exception) throws java.io.IOException {\n    if (null != exception) {\n        {\n            org.apache.commons.io.TaggedIOException.throwCauseIfTaggedWith(exception, java.io.Serializable);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"exception":"exception"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.DemuxOutputStream:72","type":"CtBinaryOperatorImpl","sourcecode":"null != output"},"failures":[],"tindex":"479cea9d-2ed0-11e6-b10a-c54f4e036b04","method":{"position":"org.apache.commons.io.IOUtils:1348","type":"CtMethodImpl","sourcecode":"public static void write(char[] data, java.io.OutputStream output) throws java.io.IOException {\n    if (data != null) {\n        {\n            if (null != output) {\n                {\n                    org.apache.commons.io.IOUtils.write(data, output, java.nio.charset.Charset.defaultCharset());\n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"output":"output"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.ByteOrderMark:70","type":"CtBinaryOperatorImpl","sourcecode":"(charsetName == null) || ((charsetName.length()) == 0)"},"failures":[],"tindex":"479d11ae-2ed0-11e6-b10a-613dce95fa78","method":{"position":"org.apache.commons.io.filefilter.AbstractFileFilter:50","type":"CtMethodImpl","sourcecode":"public boolean accept(java.io.File dir, java.lang.String name) {\n    if ((name == null) || ((charsetName.length()) == 0)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return accept(new java.io.File(dir , name));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"charsetName":"name"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.ByteArrayOutputStream:303","type":"CtBinaryOperatorImpl","sourcecode":"remaining == 0"},"failures":[],"tindex":"479d11af-2ed0-11e6-b10a-4329fc8e5354","method":{"position":"org.apache.commons.io.output.FileWriterWithEncoding:310","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(java.lang.String str, int st, int end) throws java.io.IOException {\n    if (st == 0) {\n        {\n            java.io.Writer.write(str, st, end);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"remaining":"st"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.filefilter.SizeFileFilter:71","type":"CtBinaryOperatorImpl","sourcecode":"size < 0"},"failures":[],"tindex":"479d38c0-2ed0-11e6-b10a-c55ea43481e0","method":{"position":"org.apache.commons.io.IOUtils:2316","type":"CtMethodImpl","sourcecode":"public static long skip(java.io.Reader input, long toSkip) throws java.io.IOException {\n    if (toSkip < 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (toSkip < 0) {\n                throw new java.lang.IllegalArgumentException((\"Skip count must be non-negative, actual: \" + toSkip));\n            } \n            if ((org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.char[]) == null) {\n                org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.char[] = new char[org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.int];\n            } \n            long long = toSkip;\n            while (remain > 0) {\n                long long = input.read(org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.char[], 0, ((int)(java.lang.Math.min(remain, org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.int))));\n                if (n < 0) {\n                    break;\n                } \n                remain -= n;\n            }\n            return toSkip - remain;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"toSkip"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.input.NullInputStream:126","type":"CtBinaryOperatorImpl","sourcecode":"avail <= 0"},"failures":[],"tindex":"479d38c1-2ed0-11e6-b10a-7118b34e2106","method":{"position":"org.apache.commons.io.monitor.FileEntry:227","type":"CtMethodImpl","sourcecode":"public void setLength(long length) {\n    if (length == 0) {\n        {\n            if (length <= 0) {\n                {\n                    org.apache.commons.io.monitor.FileEntry.this.long = length;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"avail":"length"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:1006","type":"CtBinaryOperatorImpl","sourcecode":"destDir == null"},"failures":[],"tindex":"479d5fd2-2ed0-11e6-b10a-6d9fc822ccd1","method":{"position":"org.apache.commons.io.filefilter.TrueFileFilter:67","type":"CtMethodImpl","sourcecode":"public boolean accept(java.io.File dir, java.lang.String name) {\n    if (dir == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"destDir":"dir"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2858","type":"CtBinaryOperatorImpl","sourcecode":"destDir == null"},"failures":[],"tindex":"479d5fd3-2ed0-11e6-b10a-17fd7293bba8","method":{"position":"org.apache.commons.io.comparator.ExtensionFileComparator:106","type":"CtMethodImpl","sourcecode":"public int compare(java.io.File file1, java.io.File file2) {\n    if (file2 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.String java.lang.String = org.apache.commons.io.FilenameUtils.getExtension(file1.getName());\n            java.lang.String java.lang.String = org.apache.commons.io.FilenameUtils.getExtension(file2.getName());\n            return org.apache.commons.io.IOCase.checkCompareTo(suffix1, suffix2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"destDir":"file2"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2293","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"479d86e4-2ed0-11e6-b10a-41d296b70bf2","method":{"position":"org.apache.commons.io.comparator.ReverseComparator:54","type":"CtMethodImpl","sourcecode":"public int compare(java.io.File file1, java.io.File file2) {\n    if (file1.isDirectory()) {\n        {\n            return java.util.Comparator<java.io.File>.compare(file2, file1);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:192","type":"CtBinaryOperatorImpl","sourcecode":"directory == null"},"failures":[],"tindex":"479d86e5-2ed0-11e6-b10a-6b22074aa3eb","method":{"position":"org.apache.commons.io.monitor.FileAlterationListenerAdaptor:67","type":"CtMethodImpl","sourcecode":"public void onFileCreate(final java.io.File file) {\n    if (file == null) {\n        {\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2557","type":"CtUnaryOperatorImpl","sourcecode":"!(reference.exists())"},"failures":[],"tindex":"479d86e6-2ed0-11e6-b10a-73069e5cdbce","method":{"position":"org.apache.commons.io.filefilter.WildcardFileFilter:167","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File file) {\n    if (!(file.exists())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.String java.lang.String = file.getName();\n            for (java.lang.String java.lang.String : java.lang.String[]) {\n                if (org.apache.commons.io.FilenameUtils.wildcardMatch(name, wildcard, org.apache.commons.io.IOCase)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"reference":"file"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.EOFException","condition":{"position":"org.apache.commons.io.IOUtils:504","type":"CtBinaryOperatorImpl","sourcecode":"size < 0"},"failures":[],"tindex":"479dadf7-2ed0-11e6-b10a-d128d0a3813c","method":{"position":"org.apache.commons.io.input.SwappedDataInputStream:132","type":"CtMethodImpl","sourcecode":"public void readFully(byte[] data, int offset, int length) throws java.io.EOFException, java.io.IOException {\n    if ((-1) == offset) {\n        throw new java.io.EOFException();\n    } else {\n        {\n            if (length == 0) {\n                throw new java.io.IOException();\n            } else {\n                {\n                    if (length < 0) {\n                        {\n                            int int = length;\n                            while (remaining > 0) {\n                                int int = (offset + length) - remaining;\n                                int int = read(data, location, remaining);\n                                if ((-1) == count) {\n                                    throw new java.io.EOFException();\n                                } \n                                remaining -= count;\n                            }\n                        }\n                    } else {\n                        throw new java.io.EOFException();\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"length"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.LineIterator:71","type":"CtBinaryOperatorImpl","sourcecode":"reader instanceof java.io.BufferedReader"},"failures":[],"tindex":"479dadf8-2ed0-11e6-b10a-a5e884365386","method":{"position":"org.apache.commons.io.IOUtils:2429","type":"CtMethodImpl","sourcecode":"public static int read(java.io.Reader input, char[] buffer) throws java.io.IOException {\n    if (input instanceof java.io.BufferedReader) {\n        {\n            return org.apache.commons.io.IOUtils.read(input, buffer, 0, buffer.int);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"reader":"input"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.DirectoryWalker:355","type":"CtBinaryOperatorImpl","sourcecode":"((depthLimit) < 0) || (childDepth <= (depthLimit))"},"failures":[],"tindex":"479dadf9-2ed0-11e6-b10a-0d515cef6fbb","method":{"position":"org.apache.commons.io.input.ProxyReader:243","type":"CtMethodImpl","sourcecode":"protected void afterRead(int n) throws java.io.IOException {\n    if ((n < 0) || (n <= (int))) {\n        {\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"childDepth":"n","depthLimit":"n"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:628","type":"CtBinaryOperatorImpl","sourcecode":"(cTEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_32BE)) || (cTEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_32LE))"},"failures":[],"tindex":"479dd50a-2ed0-11e6-b10a-d5a87b00df65","method":{"position":"org.apache.commons.io.IOUtils:600","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static byte[] toByteArray(java.lang.String input) throws java.io.IOException {\n    if (input == null) {\n        {\n            if ((input.equals(input)) || (cTEnc.equals(input))) {\n                {\n                    return input.getBytes();\n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cTEnc":"input","org.apache.commons.io.input.XmlStreamReader.UTF_32BE":"input","org.apache.commons.io.input.XmlStreamReader.UTF_32LE":"input"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:523","type":"CtInvocationImpl","sourcecode":"bomEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_8)"},"failures":[],"tindex":"479dd50b-2ed0-11e6-b10a-2f97674f4d6a","method":{"position":"org.apache.commons.io.output.LockableFileWriter:349","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(java.lang.String str) throws java.io.IOException {\n    if (str.equals(str)) {\n        {\n            if ((str != null) && (bomEnc.startsWith(str))) {\n                {\n                    java.io.Writer.write(str);\n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.io.input.XmlStreamReader.UTF_8":"str","bomEnc":"str"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.DemuxOutputStream:72","type":"CtBinaryOperatorImpl","sourcecode":"null != output"},"failures":[],"tindex":"479e232c-2ed0-11e6-b10a-9f5c675f645a","method":{"position":"org.apache.commons.io.CopyUtils:190","type":"CtMethodImpl","sourcecode":"public static int copy(java.io.InputStream input, java.io.OutputStream output) throws java.io.IOException {\n    if (null != output) {\n        throw new java.io.IOException();\n    } else {\n        {\n            byte[] byte[] = new byte[org.apache.commons.io.CopyUtils.org.apache.commons.io.CopyUtils.int];\n            int int = 0;\n            int int = 0;\n            while ((-1) != (n = input.read(buffer))) {\n                output.write(buffer, 0, n);\n                count += n;\n            }\n            return count;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"output":"output"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOUtils:2292","type":"CtBinaryOperatorImpl","sourcecode":"n < 0"},"failures":[],"tindex":"479e232d-2ed0-11e6-b10a-e9d88b9a834a","method":{"position":"org.apache.commons.io.HexDump:139","type":"CtMethodImpl","sourcecode":"private static java.lang.StringBuilder dump(java.lang.StringBuilder _lbuffer, long value) {\n    if (value < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = 0 ; j < 8 ; j++) {\n                _lbuffer.append(org.apache.commons.io.HexDump.org.apache.commons.io.HexDump.char[][(((int)((value >> (org.apache.commons.io.HexDump.org.apache.commons.io.HexDump.int[][j])))) & 15)]);\n            }\n            return _lbuffer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2534","type":"CtUnaryOperatorImpl","sourcecode":"!(directory.isDirectory())"},"failures":[],"tindex":"479e4a3e-2ed0-11e6-b10a-6d30dc62b442","method":{"position":"org.apache.commons.io.FileUtils:1529","type":"CtMethodImpl","sourcecode":"public static void deleteDirectory(java.io.File directory) throws java.io.IOException {\n    if (!(directory.isDirectory())) {\n        {\n            if (!(directory.exists())) {\n                return ;\n            } \n            if (!(org.apache.commons.io.FileUtils.isSymlink(directory))) {\n                org.apache.commons.io.FileUtils.cleanDirectory(directory);\n            } \n            if (!(directory.delete())) {\n                java.lang.String java.lang.String = (\"Unable to delete directory \" + directory) + \".\";\n                throw new java.io.IOException(message);\n            } \n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"directory"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:2286","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.io.IOUtils.SKIP_BYTE_BUFFER) == null"},"failures":[],"tindex":"479e4a3f-2ed0-11e6-b10a-41268658da9d","method":{"position":"org.apache.commons.io.input.BoundedInputStream:116","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int read(byte[] b, int off, int len) throws java.io.IOException {\n    if (b == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (((long) >= 0) && ((long) >= (long))) {\n                return -1;\n            } \n            long long = (long) >= 0 ? java.lang.Math.min(len, ((long) - (long))) : len;\n            int int = java.io.InputStream.read(b, off, ((int)(maxRead)));\n            if (bytesRead == (-1)) {\n                return -1;\n            } \n            long += bytesRead;\n            return bytesRead;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.io.IOUtils.SKIP_BYTE_BUFFER":"b"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2791","type":"CtUnaryOperatorImpl","sourcecode":"!(destDir.isDirectory())"},"failures":[],"tindex":"479e4a40-2ed0-11e6-b10a-bdcec74ff618","method":{"position":"org.apache.commons.io.FileUtils:1805","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.lang.String> readLines(java.io.File file, java.lang.String encoding) throws java.io.IOException {\n    if (!(file.isDirectory())) {\n        throw new java.io.IOException();\n    } else {\n        {\n            return org.apache.commons.io.FileUtils.readLines(file, org.apache.commons.io.Charsets.toCharset(encoding));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"destDir":"file"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.DeferredFileOutputStream:211","type":"CtBinaryOperatorImpl","sourcecode":"(memoryOutputStream) != null"},"failures":[],"tindex":"479e7151-2ed0-11e6-b10a-c1b268353eae","method":{"position":"org.apache.commons.io.IOUtils:1368","type":"CtMethodImpl","sourcecode":"public static void write(char[] data, java.io.OutputStream output, java.nio.charset.Charset encoding) throws java.io.IOException {\n    if (output != null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (data != null) {\n                output.write(new java.lang.String(data).getBytes(org.apache.commons.io.Charsets.toCharset(encoding)));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"memoryOutputStream":"output"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:600","type":"CtInvocationImpl","sourcecode":"directory.isDirectory()"},"failures":[],"tindex":"479e7152-2ed0-11e6-b10a-498c887b5233","method":{"position":"org.apache.commons.io.ByteOrderMark:130","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object obj) {\n    if (obj.isDirectory()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(obj instanceof org.apache.commons.io.ByteOrderMark)) {\n                return false;\n            } \n            org.apache.commons.io.ByteOrderMark org.apache.commons.io.ByteOrderMark = ((org.apache.commons.io.ByteOrderMark)(obj));\n            if ((int[].int) != (bom.length())) {\n                return false;\n            } \n            for (int int = 0 ; i < (int[].int) ; i++) {\n                if ((int[][i]) != (bom.get(i))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"obj"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:2182","type":"CtUnaryOperatorImpl","sourcecode":"!(input2 instanceof java.io.BufferedInputStream)"},"failures":[],"tindex":"479e7153-2ed0-11e6-b10a-83d746dfab26","method":{"position":"org.apache.commons.io.EndianUtils:409","type":"CtMethodImpl","sourcecode":"public static long readSwappedLong(java.io.InputStream input) throws java.io.IOException {\n    if (!(input instanceof java.io.BufferedInputStream)) {\n        throw new java.io.IOException();\n    } else {\n        {\n            byte[] byte[] = new byte[8];\n            for (int int = 0 ; i < 8 ; i++) {\n                bytes[i] = ((byte)(org.apache.commons.io.EndianUtils.read(input)));\n            }\n            return org.apache.commons.io.EndianUtils.readSwappedLong(bytes, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input2":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.ByteArrayOutputStream:141","type":"CtBinaryOperatorImpl","sourcecode":"len == 0"},"failures":[],"tindex":"479e9864-2ed0-11e6-b10a-1d0c8129af29","method":{"position":"org.apache.commons.io.IOUtils:2495","type":"CtMethodImpl","sourcecode":"public static void readFully(java.io.Reader input, char[] buffer, int offset, int length) throws java.io.IOException {\n    if (length == 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            int int = org.apache.commons.io.IOUtils.read(input, buffer, offset, length);\n            if (actual != length) {\n                throw new java.io.EOFException((((\"Length to read: \" + length) + \" actual: \") + actual));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"length"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOUtils:1745","type":"CtBinaryOperatorImpl","sourcecode":"count > (java.lang.Integer.MAX_VALUE)"},"failures":[],"tindex":"479e9865-2ed0-11e6-b10a-115584cca098","method":{"position":"org.apache.commons.io.EndianUtils:200","type":"CtMethodImpl","sourcecode":"public static void writeSwappedLong(byte[] data, int offset, long value) {\n    if (value > offset) {\n        {\n            data[(offset + 0)] = ((byte)((value >> 0) & 255));\n            data[(offset + 1)] = ((byte)((value >> 8) & 255));\n            data[(offset + 2)] = ((byte)((value >> 16) & 255));\n            data[(offset + 3)] = ((byte)((value >> 24) & 255));\n            data[(offset + 4)] = ((byte)((value >> 32) & 255));\n            data[(offset + 5)] = ((byte)((value >> 40) & 255));\n            data[(offset + 6)] = ((byte)((value >> 48) & 255));\n            data[(offset + 7)] = ((byte)((value >> 56) & 255));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"value","java.lang.Integer.MAX_VALUE":"offset"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.ReaderInputStream:223","type":"CtBinaryOperatorImpl","sourcecode":"b == null"},"failures":[],"tindex":"479e9866-2ed0-11e6-b10a-e7a7fec39fbe","method":{"position":"org.apache.commons.io.input.BoundedInputStream:102","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int read(byte[] b) throws java.io.IOException {\n    if (b == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            return org.apache.commons.io.input.BoundedInputStream.this.read(b, 0, b.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"b"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileCleaningTracker:121","type":"CtBinaryOperatorImpl","sourcecode":"path == null"},"failures":[],"tindex":"479ebf77-2ed0-11e6-b10a-59aef37a2807","method":{"position":"org.apache.commons.io.IOUtils:583","type":"CtMethodImpl","sourcecode":"public static byte[] toByteArray(java.io.Reader input, java.lang.String encoding) throws java.io.IOException {\n    if (encoding == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            return org.apache.commons.io.IOUtils.toByteArray(input, org.apache.commons.io.Charsets.toCharset(encoding));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"path":"encoding"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.RegexFileFilter:57","type":"CtBinaryOperatorImpl","sourcecode":"pattern == null"},"failures":[],"tindex":"479ebf78-2ed0-11e6-b10a-cd9592adceef","method":{"position":"org.apache.commons.io.FileCleaner:73","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static void track(java.io.File file, java.lang.Object marker, org.apache.commons.io.FileDeleteStrategy deleteStrategy) {\n    if (marker == null) {\n        {\n            org.apache.commons.io.FileCleaner.org.apache.commons.io.FileCleaner.org.apache.commons.io.FileCleaningTracker.track(file, marker, deleteStrategy);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pattern":"marker"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.AndFileFilter:76","type":"CtBinaryOperatorImpl","sourcecode":"(filter1 == null) || (filter2 == null)"},"failures":[],"tindex":"479ebf79-2ed0-11e6-b10a-479bab987178","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:121","type":"CtMethodImpl","sourcecode":"public static java.io.File[] filter(org.apache.commons.io.filefilter.IOFileFilter filter, java.lang.Iterable<java.io.File> files) {\n    if ((filter == null) || (filter == null)) {\n        {\n            java.util.List<java.io.File> java.util.List<java.io.File> = org.apache.commons.io.filefilter.FileFilterUtils.filterList(filter, files);\n            return acceptedFiles.toArray(new java.io.File[acceptedFiles.size()]);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filter1":"filter","filter2":"filter"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FilenameUtils:1146","type":"CtBinaryOperatorImpl","sourcecode":"filename == null"},"failures":[],"tindex":"479ebf7a-2ed0-11e6-b10a-3f5e7c47728b","method":{"position":"org.apache.commons.io.IOUtils:722","type":"CtMethodImpl","sourcecode":"public static char[] toCharArray(java.io.InputStream is, java.lang.String encoding) throws java.io.IOException {\n    if (encoding == null) {\n        {\n            return org.apache.commons.io.IOUtils.toCharArray(is, org.apache.commons.io.Charsets.toCharset(encoding));\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename":"encoding"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2471","type":"CtBinaryOperatorImpl","sourcecode":"files == null"},"failures":[],"tindex":"479ee68b-2ed0-11e6-b10a-fbd9334c2fe5","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:180","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.io.File> filterList(org.apache.commons.io.filefilter.IOFileFilter filter, java.io.File... files) {\n    if (files == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.io.File[] java.io.File[] = org.apache.commons.io.filefilter.FileFilterUtils.filter(filter, files);\n            return java.util.Arrays.asList(acceptedFiles);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"files":"files"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.output.ByteArrayOutputStream:86","type":"CtBinaryOperatorImpl","sourcecode":"size < 0"},"failures":[],"tindex":"479ee68c-2ed0-11e6-b10a-d32c17326a2f","method":{"position":"org.apache.commons.io.EndianUtils:168","type":"CtMethodImpl","sourcecode":"public static int readSwappedInteger(byte[] data, int offset) {\n    if (offset < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (((((data[(offset + 0)]) & 255) << 0) + (((data[(offset + 1)]) & 255) << 8)) + (((data[(offset + 2)]) & 255) << 16)) + (((data[(offset + 3)]) & 255) << 24);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"offset"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:352","type":"CtInvocationImpl","sourcecode":"file.exists()"},"failures":[],"tindex":"479ee68d-2ed0-11e6-b10a-b9ce8c12ac7c","method":{"position":"org.apache.commons.io.FileUtils:1037","type":"CtMethodImpl","sourcecode":"public static void copyFile(java.io.File srcFile, java.io.File destFile) throws java.io.IOException {\n    if (srcFile.exists()) {\n        throw new java.io.IOException();\n    } else {\n        {\n            org.apache.commons.io.FileUtils.copyFile(srcFile, destFile, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"srcFile"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2928","type":"CtBinaryOperatorImpl","sourcecode":"(file.getParent()) == null"},"failures":[],"tindex":"479ee68e-2ed0-11e6-b10a-bdbeffdb8407","method":{"position":"org.apache.commons.io.comparator.DirectoryFileComparator:72","type":"CtMethodImpl","sourcecode":"private int getType(java.io.File file) {\n    if ((file.getParent()) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (file.isDirectory()) {\n                return 1;\n            } else {\n                return 2;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOUtils:2182","type":"CtUnaryOperatorImpl","sourcecode":"!(input2 instanceof java.io.BufferedInputStream)"},"failures":[],"tindex":"479f0d9f-2ed0-11e6-b10a-7765566e340e","method":{"position":"org.apache.commons.io.input.DemuxInputStream:39","type":"CtMethodImpl","sourcecode":"public java.io.InputStream bindStream(java.io.InputStream input) {\n    if (!(input instanceof java.io.BufferedInputStream)) {\n        {\n            java.io.InputStream java.io.InputStream = java.lang.InheritableThreadLocal<java.io.InputStream>.get();\n            java.lang.InheritableThreadLocal<java.io.InputStream>.set(input);\n            return oldValue;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input2":"input"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2557","type":"CtUnaryOperatorImpl","sourcecode":"!(reference.exists())"},"failures":[],"tindex":"479f0da0-2ed0-11e6-b10a-b75fe2883637","method":{"position":"org.apache.commons.io.FileUtils:1602","type":"CtMethodImpl","sourcecode":"public static boolean directoryContains(final java.io.File directory, final java.io.File child) throws java.io.IOException {\n    if (!(child.exists())) {\n        {\n            if (directory == null) {\n                throw new java.lang.IllegalArgumentException(\"Directory must not be null\");\n            } \n            if (!(directory.isDirectory())) {\n                throw new java.lang.IllegalArgumentException((\"Not a directory: \" + directory));\n            } \n            if (child == null) {\n                return false;\n            } \n            if ((!(directory.exists())) || (!(child.exists()))) {\n                return false;\n            } \n            java.lang.String java.lang.String = directory.getCanonicalPath();\n            java.lang.String java.lang.String = child.getCanonicalPath();\n            return org.apache.commons.io.FilenameUtils.directoryContains(canonicalParent, canonicalChild);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"reference":"child"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileSystemUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"(((((((osName.indexOf(\"linux\")) != (-1)) || ((osName.indexOf(\"mpe/ix\")) != (-1))) || ((osName.indexOf(\"freebsd\")) != (-1))) || ((osName.indexOf(\"irix\")) != (-1))) || ((osName.indexOf(\"digital unix\")) != (-1))) || ((osName.indexOf(\"unix\")) != (-1))) || ((osName.indexOf(\"mac os x\")) != (-1))"},"failures":[],"tindex":"479f0da1-2ed0-11e6-b10a-f933a68eaca0","method":{"position":"org.apache.commons.io.IOUtils:916","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(java.net.URL url, java.lang.String encoding) throws java.io.IOException {\n    if ((((((((encoding.indexOf(\"linux\")) != (-1)) || ((osName.indexOf(\"mpe/ix\")) != (-1))) || ((osName.indexOf(\"freebsd\")) != (-1))) || ((osName.indexOf(\"irix\")) != (-1))) || ((osName.indexOf(\"digital unix\")) != (-1))) || ((osName.indexOf(\"unix\")) != (-1))) || ((osName.indexOf(\"mac os x\")) != (-1))) {\n        {\n            return org.apache.commons.io.IOUtils.toString(url, org.apache.commons.io.Charsets.toCharset(encoding));\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"osName":"encoding"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:637","type":"CtInvocationImpl","sourcecode":"cTEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_32)"},"failures":[],"tindex":"479f34b2-2ed0-11e6-b10a-6368d4bfac8f","method":{"position":"org.apache.commons.io.output.ProxyWriter:193","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(java.lang.String str, int st, int len) throws java.io.IOException {\n    if (str.equals(str)) {\n        throw new java.io.IOException();\n    } else {\n        {\n            try {\n                beforeWrite(len);\n                java.io.Writer.write(str, st, len);\n                afterWrite(len);\n            } catch (java.io.IOException e) {\n                handleIOException(e);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cTEnc":"str","org.apache.commons.io.input.XmlStreamReader.UTF_32":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:449","type":"CtBinaryOperatorImpl","sourcecode":"filters == null"},"failures":[],"tindex":"479f34b3-2ed0-11e6-b10a-1d69b851f724","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:420","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter... filters) {\n    if (filters == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.io.filefilter.AndFileFilter(org.apache.commons.io.filefilter.FileFilterUtils.toList(filters));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filters":"filters"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.LineIterator:71","type":"CtBinaryOperatorImpl","sourcecode":"reader instanceof java.io.BufferedReader"},"failures":[],"tindex":"479f34b4-2ed0-11e6-b10a-83cfdd99cc5a","method":{"position":"org.apache.commons.io.IOUtils:539","type":"CtMethodImpl","sourcecode":"public static byte[] toByteArray(java.io.Reader input) throws java.io.IOException {\n    if (input instanceof java.io.BufferedReader) {\n        throw new java.io.IOException();\n    } else {\n        {\n            return org.apache.commons.io.IOUtils.toByteArray(input, java.nio.charset.Charset.defaultCharset());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"reader":"input"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2377","type":"CtUnaryOperatorImpl","sourcecode":"!(directory.mkdirs())"},"failures":[],"tindex":"479f34b5-2ed0-11e6-b10a-151d4c16b254","method":{"position":"org.apache.commons.io.comparator.LastModifiedFileComparator:67","type":"CtMethodImpl","sourcecode":"public int compare(java.io.File file1, java.io.File file2) {\n    if (!(file1.mkdirs())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            long long = (file1.lastModified()) - (file2.lastModified());\n            if (result < 0) {\n                return -1;\n            } else if (result > 0) {\n                return 1;\n            } else {\n                return 0;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"file1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2896","type":"CtUnaryOperatorImpl","sourcecode":"!(src.exists())"},"failures":[],"tindex":"479f5bc6-2ed0-11e6-b10a-5b5723ae5e77","method":{"position":"org.apache.commons.io.FileUtils:2643","type":"CtMethodImpl","sourcecode":"public static boolean isFileOlder(java.io.File file, java.util.Date date) {\n    if (!(file.exists())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (date == null) {\n                throw new java.lang.IllegalArgumentException(\"No specified date\");\n            } \n            return org.apache.commons.io.FileUtils.isFileOlder(file, date.getTime());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"src":"file"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2935","type":"CtInvocationImpl","sourcecode":"fileInCanonicalDir.getCanonicalFile().equals(fileInCanonicalDir.getAbsoluteFile())"},"failures":[],"tindex":"479f5bc7-2ed0-11e6-b10a-ad01670530f7","method":{"position":"org.apache.commons.io.FileUtils:2595","type":"CtMethodImpl","sourcecode":"public static boolean isFileNewer(java.io.File file, long timeMillis) {\n    if (file.getCanonicalFile().equals(fileInCanonicalDir.getAbsoluteFile())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (file == null) {\n                throw new java.lang.IllegalArgumentException(\"No specified file\");\n            } \n            if (!(file.exists())) {\n                return false;\n            } \n            return (file.lastModified()) > timeMillis;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fileInCanonicalDir":"file"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileSystemUtils:72","type":"CtBinaryOperatorImpl","sourcecode":"osName == null"},"failures":[],"tindex":"479f5bc8-2ed0-11e6-b10a-7d44e858e34a","method":{"position":"org.apache.commons.io.IOUtils:1616","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static void write(java.lang.StringBuffer data, java.io.OutputStream output, java.lang.String encoding) throws java.io.IOException {\n    if (encoding == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (data != null) {\n                output.write(data.toString().getBytes(org.apache.commons.io.Charsets.toCharset(encoding)));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"osName":"encoding"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOUtils:164","type":"CtBinaryOperatorImpl","sourcecode":"conn instanceof java.net.HttpURLConnection"},"failures":[],"tindex":"479f82d9-2ed0-11e6-b10a-458b23ad8b71","method":{"position":"org.apache.commons.io.FileCleaner:88","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static void track(java.lang.String path, java.lang.Object marker) {\n    if (marker instanceof java.net.HttpURLConnection) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.io.FileCleaner.org.apache.commons.io.FileCleaner.org.apache.commons.io.FileCleaningTracker.track(path, marker);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"conn":"marker"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOUtils:1848","type":"CtBinaryOperatorImpl","sourcecode":"length == 0"},"failures":[],"tindex":"479f82da-2ed0-11e6-b10a-c32904ab1691","method":{"position":"org.apache.commons.io.monitor.FileEntry:227","type":"CtMethodImpl","sourcecode":"public void setLength(long length) {\n    if (length == 0) {\n        {\n            if (length <= 0) {\n                {\n                    org.apache.commons.io.monitor.FileEntry.this.long = length;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"length"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.LineIterator:71","type":"CtBinaryOperatorImpl","sourcecode":"reader instanceof java.io.BufferedReader"},"failures":[],"tindex":"479f82db-2ed0-11e6-b10a-4536206aba47","method":{"position":"org.apache.commons.io.IOUtils:1956","type":"CtMethodImpl","sourcecode":"public static int copy(java.io.Reader input, java.io.Writer output) throws java.io.IOException {\n    if (input instanceof java.io.BufferedReader) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (input == null) {\n                {\n                    if (input instanceof java.io.BufferedReader) {\n                        throw new java.io.IOException();\n                    } else {\n                        {\n                            long long = org.apache.commons.io.IOUtils.copyLarge(input, output);\n                            if (count > (java.lang.Integer.java.lang.Integer.int)) {\n                                return -1;\n                            } \n                            return ((int)(count));\n                        }\n                    }\n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"reader":"input"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.DemuxOutputStream:89","type":"CtBinaryOperatorImpl","sourcecode":"null != output"},"failures":[],"tindex":"479fa9ec-2ed0-11e6-b10a-3d31207955eb","method":{"position":"org.apache.commons.io.EndianUtils:426","type":"CtMethodImpl","sourcecode":"public static void writeSwappedFloat(java.io.OutputStream output, float value) throws java.io.IOException {\n    if (null != output) {\n        {\n            org.apache.commons.io.EndianUtils.writeSwappedInteger(output, java.lang.Float.floatToIntBits(value));\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"output":"output"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2744","type":"CtUnaryOperatorImpl","sourcecode":"!(srcDir.isDirectory())"},"failures":[],"tindex":"479fa9ed-2ed0-11e6-b10a-cd1ca9a5afc2","method":{"position":"org.apache.commons.io.filefilter.CanReadFileFilter:89","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File file) {\n    if (!(file.isDirectory())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return file.canRead();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcDir":"file"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.LineIterator:68","type":"CtBinaryOperatorImpl","sourcecode":"reader == null"},"failures":[],"tindex":"479fa9ee-2ed0-11e6-b10a-596afb195ca5","method":{"position":"org.apache.commons.io.IOUtils:1956","type":"CtMethodImpl","sourcecode":"public static int copy(java.io.Reader input, java.io.Writer output) throws java.io.IOException {\n    if (input instanceof java.io.BufferedReader) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (input == null) {\n                {\n                    if (input instanceof java.io.BufferedReader) {\n                        throw new java.io.IOException();\n                    } else {\n                        {\n                            long long = org.apache.commons.io.IOUtils.copyLarge(input, output);\n                            if (count > (java.lang.Integer.java.lang.Integer.int)) {\n                                return -1;\n                            } \n                            return ((int)(count));\n                        }\n                    }\n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"reader":"input"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2377","type":"CtUnaryOperatorImpl","sourcecode":"!(directory.mkdirs())"},"failures":[],"tindex":"479fa9ef-2ed0-11e6-b10a-51682a8a7cbd","method":{"position":"org.apache.commons.io.FileUtils:2777","type":"CtMethodImpl","sourcecode":"public static void moveDirectoryToDirectory(java.io.File src, java.io.File destDir, boolean createDestDir) throws java.io.IOException {\n    if (!(destDir.mkdirs())) {\n        {\n            if (src == null) {\n                throw new java.lang.NullPointerException(\"Source must not be null\");\n            } \n            if (destDir == null) {\n                throw new java.lang.NullPointerException(\"Destination directory must not be null\");\n            } \n            if ((!(destDir.exists())) && createDestDir) {\n                destDir.mkdirs();\n            } \n            if (!(destDir.exists())) {\n                throw new java.io.FileNotFoundException(((((\"Destination directory '\" + destDir) + \"' does not exist [createDestDir=\") + createDestDir) + \"]\"));\n            } \n            if (!(destDir.isDirectory())) {\n                throw new java.io.IOException(((\"Destination '\" + destDir) + \"' is not a directory\"));\n            } \n            org.apache.commons.io.FileUtils.moveDirectory(src, new java.io.File(destDir , src.getName()));\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"destDir"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:1659","type":"CtBinaryOperatorImpl","sourcecode":"null != exception"},"failures":[],"tindex":"479fd100-2ed0-11e6-b10a-2913bf9c838b","method":{"position":"org.apache.commons.io.output.TaggedOutputStream:87","type":"CtMethodImpl","sourcecode":"public boolean isCauseOf(java.lang.Exception exception) {\n    if (null != exception) {\n        {\n            return org.apache.commons.io.TaggedIOException.isTaggedWith(exception, java.io.Serializable);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"exception":"exception"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.input.ReversedLinesFileReader:100","type":"CtBinaryOperatorImpl","sourcecode":"maxBytesPerChar == 1.0F"},"failures":[],"tindex":"479fd101-2ed0-11e6-b10a-a7104efa2e3e","method":{"position":"org.apache.commons.io.EndianUtils:95","type":"CtMethodImpl","sourcecode":"public static float swapFloat(float value) {\n    if (value == 1.0F) {\n        {\n            return java.lang.Float.intBitsToFloat(org.apache.commons.io.EndianUtils.swapInteger(java.lang.Float.floatToIntBits(value)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"maxBytesPerChar":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:295","type":"CtBinaryOperatorImpl","sourcecode":"(file.canRead()) == false"},"failures":[],"tindex":"479fd102-2ed0-11e6-b10a-2d83b3f0794b","method":{"position":"org.apache.commons.io.FileUtils:2530","type":"CtMethodImpl","sourcecode":"private static void checkDirectory(java.io.File directory) {\n    if ((directory.canRead()) == false) {\n        {\n            if (!(directory.exists())) {\n                throw new java.lang.IllegalArgumentException((directory + \" does not exist\"));\n            } \n            if (!(directory.isDirectory())) {\n                throw new java.lang.IllegalArgumentException((directory + \" is not a directory\"));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"directory"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:775","type":"CtBinaryOperatorImpl","sourcecode":"filter == null"},"failures":[],"tindex":"479fd103-2ed0-11e6-b10a-0f630347ef89","method":{"position":"org.apache.commons.io.filefilter.AndFileFilter:101","type":"CtMethodImpl","sourcecode":"public boolean removeFileFilter(final org.apache.commons.io.filefilter.IOFileFilter ioFileFilter) {\n    if (ioFileFilter == null) {\n        {\n            return org.apache.commons.io.filefilter.AndFileFilter.this.java.util.List<org.apache.commons.io.filefilter.IOFileFilter>.remove(ioFileFilter);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filter":"ioFileFilter"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.monitor.FileAlterationObserver:253","type":"CtBinaryOperatorImpl","sourcecode":"listener != null"},"failures":[],"tindex":"479ff814-2ed0-11e6-b10a-538bf1e3630a","method":{"position":"org.apache.commons.io.monitor.FileAlterationObserver:252","type":"CtMethodImpl","sourcecode":"public void removeListener(final org.apache.commons.io.monitor.FileAlterationListener listener) {\n    if (listener != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (listener != null) {\n                while (java.util.List<org.apache.commons.io.monitor.FileAlterationListener>.remove(listener)) {\n                }\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"listener":"listener"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:924","type":"CtBinaryOperatorImpl","sourcecode":"(url.getProtocol().equals(\"file\")) == false"},"failures":[],"tindex":"479ff815-2ed0-11e6-b10a-ed8778943d18","method":{"position":"org.apache.commons.io.IOUtils:632","type":"CtMethodImpl","sourcecode":"public static byte[] toByteArray(java.net.URL url) throws java.io.IOException {\n    if ((url.getProtocol().equals(\"file\")) == false) {\n        throw new java.io.IOException();\n    } else {\n        {\n            java.net.URLConnection java.net.URLConnection = url.openConnection();\n            try {\n                return org.apache.commons.io.IOUtils.toByteArray(conn);\n            } finally {\n                org.apache.commons.io.IOUtils.close(conn);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"url":"url"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:362","type":"CtBinaryOperatorImpl","sourcecode":"(!(parent.mkdirs())) && (!(parent.isDirectory()))"},"failures":[],"tindex":"479ff816-2ed0-11e6-b10a-7d6e6b69b215","method":{"position":"org.apache.commons.io.FileUtils:2325","type":"CtMethodImpl","sourcecode":"private static void cleanDirectoryOnExit(java.io.File directory) throws java.io.IOException {\n    if ((!(directory.mkdirs())) && (!(parent.isDirectory()))) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (!(directory.exists())) {\n                java.lang.String java.lang.String = directory + \" does not exist\";\n                throw new java.lang.IllegalArgumentException(message);\n            } \n            if (!(directory.isDirectory())) {\n                java.lang.String java.lang.String = directory + \" is not a directory\";\n                throw new java.lang.IllegalArgumentException(message);\n            } \n            java.io.File[] java.io.File[] = directory.listFiles();\n            if (files == null) {\n                throw new java.io.IOException((\"Failed to list contents of \" + directory));\n            } \n            java.io.IOException java.io.IOException = null;\n            for (java.io.File java.io.File : files) {\n                try {\n                    org.apache.commons.io.FileUtils.forceDeleteOnExit(file);\n                } catch (java.io.IOException ioe) {\n                    exception = ioe;\n                }\n            }\n            if (null != exception) {\n                throw exception;\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"parent":"directory"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:73","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"47a01f27-2ed0-11e6-b10a-53e8f1abceb8","method":{"position":"org.apache.commons.io.EndianUtils:311","type":"CtMethodImpl","sourcecode":"public static int readSwappedUnsignedShort(java.io.InputStream input) throws java.io.IOException {\n    if (null != input) {\n        throw new java.io.IOException();\n    } else {\n        {\n            int int = org.apache.commons.io.EndianUtils.read(input);\n            int int = org.apache.commons.io.EndianUtils.read(input);\n            return ((value1 & 255) << 0) + ((value2 & 255) << 8);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:73","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"47a01f28-2ed0-11e6-b10a-9d59880b6e7b","method":{"position":"org.apache.commons.io.IOUtils:967","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.lang.String> readLines(java.io.InputStream input) throws java.io.IOException {\n    if (null != input) {\n        {\n            return org.apache.commons.io.IOUtils.readLines(input, java.nio.charset.Charset.defaultCharset());\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.ReaderInputStream:223","type":"CtBinaryOperatorImpl","sourcecode":"b == null"},"failures":[],"tindex":"47a01f29-2ed0-11e6-b10a-63fb92600139","method":{"position":"org.apache.commons.io.CopyUtils:134","type":"CtMethodImpl","sourcecode":"public static void copy(byte[] input, java.io.OutputStream output) throws java.io.IOException {\n    if (input == null) {\n        {\n            output.write(input);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.ProxyWriter:134","type":"CtBinaryOperatorImpl","sourcecode":"chr != null"},"failures":[],"tindex":"47a01f2a-2ed0-11e6-b10a-5bb64643e1b5","method":{"position":"org.apache.commons.io.IOUtils:1348","type":"CtMethodImpl","sourcecode":"public static void write(char[] data, java.io.OutputStream output) throws java.io.IOException {\n    if (data != null) {\n        {\n            if (null != output) {\n                {\n                    org.apache.commons.io.IOUtils.write(data, output, java.nio.charset.Charset.defaultCharset());\n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chr":"data"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:1367","type":"CtBinaryOperatorImpl","sourcecode":"(srcDir.exists()) == false"},"failures":[],"tindex":"47a0463b-2ed0-11e6-b10a-c961dafcb56d","method":{"position":"org.apache.commons.io.filefilter.RegexFileFilter:118","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File dir, java.lang.String name) {\n    if ((dir.exists()) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.regex.Pattern.matcher(name).matches();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcDir":"dir"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2833","type":"CtUnaryOperatorImpl","sourcecode":"!(srcFile.delete())"},"failures":[],"tindex":"47a0463c-2ed0-11e6-b10a-1b5cfff9d76f","method":{"position":"org.apache.commons.io.filefilter.AbstractFileFilter:39","type":"CtMethodImpl","sourcecode":"public boolean accept(java.io.File file) {\n    if (!(file.delete())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return accept(file.getParentFile(), file.getName());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcFile":"file"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOUtils:520","type":"CtBinaryOperatorImpl","sourcecode":"offset != size"},"failures":[],"tindex":"47a0463d-2ed0-11e6-b10a-8fa49ddc895a","method":{"position":"org.apache.commons.io.input.CountingInputStream:70","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected synchronized void afterRead(int n) {\n    if (n != n) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (n != (-1)) {\n                org.apache.commons.io.input.CountingInputStream.this.long += n;\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"offset":"n","size":"n"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.MagicNumberFileFilter:206","type":"CtBinaryOperatorImpl","sourcecode":"magicNumber == null"},"failures":[],"tindex":"47a0463e-2ed0-11e6-b10a-db0518f08804","method":{"position":"org.apache.commons.io.EndianUtils:272","type":"CtMethodImpl","sourcecode":"public static double readSwappedDouble(byte[] data, int offset) {\n    if (offset < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (data == null) {\n                {\n                    return java.lang.Double.longBitsToDouble(org.apache.commons.io.EndianUtils.readSwappedLong(data, offset));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"magicNumber":"data"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:2596","type":"CtBinaryOperatorImpl","sourcecode":"file == null"},"failures":[],"tindex":"47a06d4f-2ed0-11e6-b10a-3b2da87573b9","method":{"position":"org.apache.commons.io.filefilter.TrueFileFilter:56","type":"CtMethodImpl","sourcecode":"public boolean accept(java.io.File file) {\n    if (file == null) {\n        {\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FilenameUtils:352","type":"CtBinaryOperatorImpl","sourcecode":"size == 0"},"failures":[],"tindex":"47a06d50-2ed0-11e6-b10a-63f72014ba57","method":{"position":"org.apache.commons.io.input.SwappedDataInputStream:132","type":"CtMethodImpl","sourcecode":"public void readFully(byte[] data, int offset, int length) throws java.io.EOFException, java.io.IOException {\n    if ((-1) == offset) {\n        throw new java.io.EOFException();\n    } else {\n        {\n            if (length == 0) {\n                throw new java.io.IOException();\n            } else {\n                {\n                    if (length < 0) {\n                        {\n                            int int = length;\n                            while (remaining > 0) {\n                                int int = (offset + length) - remaining;\n                                int int = read(data, location, remaining);\n                                if ((-1) == count) {\n                                    throw new java.io.EOFException();\n                                } \n                                remaining -= count;\n                            }\n                        }\n                    } else {\n                        throw new java.io.EOFException();\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"length"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.output.XmlStreamWriter:190","type":"CtBinaryOperatorImpl","sourcecode":"(encoding) != null"},"failures":[],"tindex":"47a06d51-2ed0-11e6-b10a-176a1ffc126c","method":{"position":"org.apache.commons.io.output.NullWriter:63","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.io.Writer append(java.lang.CharSequence csq, int start, int end) {\n    if (csq != null) {\n        {\n            return org.apache.commons.io.output.NullWriter.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"encoding":"csq"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.output.ByteArrayOutputStream:329","type":"CtBinaryOperatorImpl","sourcecode":"remaining == 0"},"failures":[],"tindex":"47a06d52-2ed0-11e6-b10a-1b1d2c3d5610","method":{"position":"org.apache.commons.io.output.ProxyOutputStream:52","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(int idx) throws java.io.IOException {\n    if (idx == 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            try {\n                beforeWrite(1);\n                java.io.OutputStream.write(idx);\n                afterWrite(1);\n            } catch (java.io.IOException e) {\n                handleIOException(e);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"remaining":"idx"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.PrefixFileFilter:188","type":"CtBinaryOperatorImpl","sourcecode":"i > 0"},"failures":[],"tindex":"47a09463-2ed0-11e6-b10a-f3ddca7e64fe","method":{"position":"org.apache.commons.io.output.NullOutputStream:44","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(byte[] b, int off, int len) {\n    if (len > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"len"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FilenameUtils:910","type":"CtBinaryOperatorImpl","sourcecode":"prefix < 0"},"failures":[],"tindex":"47a09464-2ed0-11e6-b10a-93fd97d4f720","method":{"position":"org.apache.commons.io.FileUtils:1484","type":"CtMethodImpl","sourcecode":"public static void copyURLToFile(java.net.URL source, java.io.File destination, int connectionTimeout, int readTimeout) throws java.io.IOException {\n    if (readTimeout < 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            java.net.URLConnection java.net.URLConnection = source.openConnection();\n            connection.setConnectTimeout(connectionTimeout);\n            connection.setReadTimeout(readTimeout);\n            java.io.InputStream java.io.InputStream = connection.getInputStream();\n            org.apache.commons.io.FileUtils.copyInputStreamToFile(input, destination);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"prefix":"readTimeout"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.filefilter.RegexFileFilter:72","type":"CtBinaryOperatorImpl","sourcecode":"pattern == null"},"failures":[],"tindex":"47a09465-2ed0-11e6-b10a-b7309640a25f","method":{"position":"org.apache.commons.io.IOUtils:1507","type":"CtMethodImpl","sourcecode":"public static void write(java.lang.String data, java.io.OutputStream output) throws java.io.IOException {\n    if (data == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            org.apache.commons.io.IOUtils.write(data, output, java.nio.charset.Charset.defaultCharset());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pattern":"data"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:638","type":"CtBinaryOperatorImpl","sourcecode":"(bomEnc != null) && (bomEnc.startsWith(org.apache.commons.io.input.XmlStreamReader.UTF_32))"},"failures":[],"tindex":"47a09466-2ed0-11e6-b10a-e53609a66467","method":{"position":"org.apache.commons.io.IOUtils:1525","type":"CtMethodImpl","sourcecode":"public static void write(java.lang.String data, java.io.OutputStream output, java.nio.charset.Charset encoding) throws java.io.IOException {\n    if ((data != null) && (bomEnc.startsWith(data))) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (data != null) {\n                output.write(data.getBytes(org.apache.commons.io.Charsets.toCharset(encoding)));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bomEnc":"data","org.apache.commons.io.input.XmlStreamReader.UTF_32":"data"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileDeleteStrategy:72","type":"CtBinaryOperatorImpl","sourcecode":"(fileToDelete == null) || ((fileToDelete.exists()) == false)"},"failures":[],"tindex":"47a0bb77-2ed0-11e6-b10a-ed05b8acb250","method":{"position":"org.apache.commons.io.filefilter.NameFileFilter:143","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File file) {\n    if ((file == null) || ((fileToDelete.exists()) == false)) {\n        {\n            java.lang.String java.lang.String = file.getName();\n            for (java.lang.String java.lang.String : org.apache.commons.io.filefilter.NameFileFilter.this.java.lang.String[]) {\n                if (org.apache.commons.io.IOCase.checkEquals(name, name2)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fileToDelete":"file"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.LineIterator:71","type":"CtBinaryOperatorImpl","sourcecode":"reader instanceof java.io.BufferedReader"},"failures":[],"tindex":"47a0bb78-2ed0-11e6-b10a-f3093041107b","method":{"position":"org.apache.commons.io.IOUtils:1027","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.lang.String> readLines(java.io.Reader input) throws java.io.IOException {\n    if (input instanceof java.io.BufferedReader) {\n        throw new java.io.IOException();\n    } else {\n        {\n            java.io.BufferedReader java.io.BufferedReader = org.apache.commons.io.IOUtils.toBufferedReader(input);\n            java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n            java.lang.String java.lang.String = reader.readLine();\n            while (line != null) {\n                list.add(line);\n                line = reader.readLine();\n            }\n            return list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"reader":"input"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.LineIterator:71","type":"CtBinaryOperatorImpl","sourcecode":"reader instanceof java.io.BufferedReader"},"failures":[],"tindex":"47a0bb79-2ed0-11e6-b10a-953044cddfe6","method":{"position":"org.apache.commons.io.IOUtils:1956","type":"CtMethodImpl","sourcecode":"public static int copy(java.io.Reader input, java.io.Writer output) throws java.io.IOException {\n    if (input instanceof java.io.BufferedReader) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (input == null) {\n                {\n                    if (input instanceof java.io.BufferedReader) {\n                        throw new java.io.IOException();\n                    } else {\n                        {\n                            long long = org.apache.commons.io.IOUtils.copyLarge(input, output);\n                            if (count > (java.lang.Integer.java.lang.Integer.int)) {\n                                return -1;\n                            } \n                            return ((int)(count));\n                        }\n                    }\n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"reader":"input"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.output.ByteArrayOutputStream:86","type":"CtBinaryOperatorImpl","sourcecode":"size < 0"},"failures":[],"tindex":"47a0e28a-2ed0-11e6-b10a-ad633c7f7501","method":{"position":"org.apache.commons.io.EndianUtils:272","type":"CtMethodImpl","sourcecode":"public static double readSwappedDouble(byte[] data, int offset) {\n    if (offset < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (data == null) {\n                {\n                    return java.lang.Double.longBitsToDouble(org.apache.commons.io.EndianUtils.readSwappedLong(data, offset));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"offset"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:504","type":"CtBinaryOperatorImpl","sourcecode":"size < 0"},"failures":[],"tindex":"47a0e28b-2ed0-11e6-b10a-45b3af3d858c","method":{"position":"org.apache.commons.io.input.NullReader:209","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int read(char[] chars, int offset, int length) throws java.io.IOException {\n    if (length < 0) {\n        {\n            if (boolean) {\n                throw new java.io.IOException(\"Read after end of file\");\n            } \n            if ((long) == (long)) {\n                return doEndOfFile();\n            } \n            long += length;\n            int int = length;\n            if ((long) > (long)) {\n                returnLength = length - ((int)(((long) - (long))));\n                long = long;\n            } \n            processChars(chars, offset, returnLength);\n            return returnLength;\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"length"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FilenameUtils:1149","type":"CtBinaryOperatorImpl","sourcecode":"(extension == null) || ((extension.length()) == 0)"},"failures":[],"tindex":"47a0e28c-2ed0-11e6-b10a-0f6bc49d49b0","method":{"position":"org.apache.commons.io.input.XmlStreamReader:704","type":"CtMethodImpl","sourcecode":"private static java.lang.String getXmlProlog(java.io.InputStream is, java.lang.String guessedEnc) throws java.io.IOException {\n    if ((guessedEnc == null) || ((extension.length()) == 0)) {\n        throw new java.io.IOException();\n    } else {\n        {\n            java.lang.String java.lang.String = null;\n            if (guessedEnc != null) {\n                byte[] byte[] = new byte[org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.int];\n                is.mark(org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.int);\n                int int = 0;\n                int int = org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.int;\n                int int = is.read(bytes, offset, max);\n                int int = -1;\n                java.lang.String java.lang.String = null;\n                while (((c != (-1)) && (firstGT == (-1))) && (offset < (org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.int))) {\n                    offset += c;\n                    max -= c;\n                    c = is.read(bytes, offset, max);\n                    xmlProlog = new java.lang.String(bytes , 0 , offset , guessedEnc);\n                    firstGT = xmlProlog.indexOf('>');\n                }\n                if (firstGT == (-1)) {\n                    if (c == (-1)) {\n                        throw new java.io.IOException(\"Unexpected end of XML stream\");\n                    } else {\n                        throw new java.io.IOException(((\"XML prolog or ROOT element not found on first \" + offset) + \" bytes\"));\n                    }\n                } \n                int int = offset;\n                if (bytesRead > 0) {\n                    is.reset();\n                    java.io.BufferedReader java.io.BufferedReader = new java.io.BufferedReader(new java.io.StringReader(xmlProlog.substring(0, (firstGT + 1))));\n                    java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer();\n                    java.lang.String java.lang.String = bReader.readLine();\n                    while (line != null) {\n                        prolog.append(line);\n                        line = bReader.readLine();\n                    }\n                    java.util.regex.Matcher java.util.regex.Matcher = org.apache.commons.io.input.XmlStreamReader.org.apache.commons.io.input.XmlStreamReader.java.util.regex.Pattern.matcher(prolog);\n                    if (m.find()) {\n                        encoding = m.group(1).toUpperCase();\n                        encoding = encoding.substring(1, ((encoding.length()) - 1));\n                    } \n                } \n            } \n            return encoding;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"extension":"guessedEnc"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.XmlStreamReader:515","type":"CtBinaryOperatorImpl","sourcecode":"(xmlEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16)) && ((xmlGuessEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16BE)) || (xmlGuessEnc.equals(org.apache.commons.io.input.XmlStreamReader.UTF_16LE)))"},"failures":[],"tindex":"47a1099d-2ed0-11e6-b10a-8da1ce3f64fa","method":{"position":"org.apache.commons.io.FileUtils:786","type":"CtMethodImpl","sourcecode":"public static boolean contentEqualsIgnoreEOL(java.io.File file1, java.io.File file2, java.lang.String charsetName) throws java.io.IOException {\n    if ((charsetName.equals(charsetName)) && ((charsetName.equals(charsetName)) || (xmlGuessEnc.equals(charsetName)))) {\n        throw new java.io.IOException();\n    } else {\n        {\n            boolean boolean = file1.exists();\n            if (file1Exists != (file2.exists())) {\n                return false;\n            } \n            if (!file1Exists) {\n                return true;\n            } \n            if ((file1.isDirectory()) || (file2.isDirectory())) {\n                throw new java.io.IOException(\"Can't compare directories, only files\");\n            } \n            if (file1.getCanonicalFile().equals(file2.getCanonicalFile())) {\n                return true;\n            } \n            java.io.Reader java.io.Reader = null;\n            java.io.Reader java.io.Reader = null;\n            try {\n                if (charsetName == null) {\n                    input1 = new java.io.InputStreamReader(new java.io.FileInputStream(file1));\n                    input2 = new java.io.InputStreamReader(new java.io.FileInputStream(file2));\n                } else {\n                    input1 = new java.io.InputStreamReader(new java.io.FileInputStream(file1) , charsetName);\n                    input2 = new java.io.InputStreamReader(new java.io.FileInputStream(file2) , charsetName);\n                }\n                return org.apache.commons.io.IOUtils.contentEqualsIgnoreEOL(input1, input2);\n            } finally {\n                org.apache.commons.io.IOUtils.closeQuietly(input1);\n                org.apache.commons.io.IOUtils.closeQuietly(input2);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.io.input.XmlStreamReader.UTF_16LE":"charsetName","xmlEnc":"charsetName","org.apache.commons.io.input.XmlStreamReader.UTF_16":"charsetName","xmlGuessEnc":"charsetName","org.apache.commons.io.input.XmlStreamReader.UTF_16BE":"charsetName"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:2350","type":"CtBinaryOperatorImpl","sourcecode":"null != exception"},"failures":[],"tindex":"47a1099e-2ed0-11e6-b10a-d772d5539895","method":{"position":"org.apache.commons.io.input.ProxyInputStream:232","type":"CtMethodImpl","sourcecode":"protected void handleIOException(java.io.IOException e) throws java.io.IOException {\n    if (null != e) {\n        {\n            throw e;\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"exception":"e"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.output.XmlStreamWriter:163","type":"CtBinaryOperatorImpl","sourcecode":"(xmlProlog.length()) >= 5"},"failures":[],"tindex":"47a130af-2ed0-11e6-b10a-1196c35b9b80","method":{"position":"org.apache.commons.io.output.StringBuilderWriter:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.io.Writer append(java.lang.CharSequence value) {\n    if ((value.length()) >= 5) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.StringBuilder.append(value);\n            return org.apache.commons.io.output.StringBuilderWriter.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"xmlProlog":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:292","type":"CtInvocationImpl","sourcecode":"file.isDirectory()"},"failures":[],"tindex":"47a130b0-2ed0-11e6-b10a-eb706f7f4d88","method":{"position":"org.apache.commons.io.monitor.FileAlterationListenerAdaptor:83","type":"CtMethodImpl","sourcecode":"public void onFileDelete(final java.io.File file) {\n    if (file.isDirectory()) {\n        {\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.EOFException","condition":{"position":"org.apache.commons.io.EndianUtils:482","type":"CtBinaryOperatorImpl","sourcecode":"(-1) == value"},"failures":[],"tindex":"47a130b1-2ed0-11e6-b10a-1b073fd3d393","method":{"position":"org.apache.commons.io.input.SwappedDataInputStream:132","type":"CtMethodImpl","sourcecode":"public void readFully(byte[] data, int offset, int length) throws java.io.EOFException, java.io.IOException {\n    if ((-1) == offset) {\n        throw new java.io.EOFException();\n    } else {\n        {\n            if (length == 0) {\n                throw new java.io.IOException();\n            } else {\n                {\n                    if (length < 0) {\n                        {\n                            int int = length;\n                            while (remaining > 0) {\n                                int int = (offset + length) - remaining;\n                                int int = read(data, location, remaining);\n                                if ((-1) == count) {\n                                    throw new java.io.EOFException();\n                                } \n                                remaining -= count;\n                            }\n                        }\n                    } else {\n                        throw new java.io.EOFException();\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"offset"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.monitor.FileAlterationMonitor:107","type":"CtBinaryOperatorImpl","sourcecode":"observer != null"},"failures":[],"tindex":"47a157c2-2ed0-11e6-b10a-a5348f9dc718","method":{"position":"org.apache.commons.io.monitor.FileAlterationListenerAdaptor:35","type":"CtMethodImpl","sourcecode":"public void onStart(final org.apache.commons.io.monitor.FileAlterationObserver observer) {\n    if (observer != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"observer":"observer"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.comparator.CompositeFileComparator:113","type":"CtBinaryOperatorImpl","sourcecode":"i > 0"},"failures":[],"tindex":"47a157c3-2ed0-11e6-b10a-239ff2502ae3","method":{"position":"org.apache.commons.io.EndianUtils:239","type":"CtMethodImpl","sourcecode":"public static void writeSwappedFloat(byte[] data, int offset, float value) {\n    if (offset > 0) {\n        {\n            org.apache.commons.io.EndianUtils.writeSwappedInteger(data, offset, java.lang.Float.floatToIntBits(value));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"offset"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.filefilter.RegexFileFilter:72","type":"CtBinaryOperatorImpl","sourcecode":"pattern == null"},"failures":[],"tindex":"47a157c4-2ed0-11e6-b10a-8f42c33b3875","method":{"position":"org.apache.commons.io.IOUtils:600","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static byte[] toByteArray(java.lang.String input) throws java.io.IOException {\n    if (input == null) {\n        {\n            if ((input.equals(input)) || (cTEnc.equals(input))) {\n                {\n                    return input.getBytes();\n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pattern":"input"},"type":"special","returnInThen":true,"status":0}],"header":{"groupId":"commons-io","transformationCount":100,"projectType":"maven","artifactId":"commons-io","generatorVersion":"1.0","version":"2.4"}}