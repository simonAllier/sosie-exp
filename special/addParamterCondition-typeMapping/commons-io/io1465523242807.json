{"failureDictionary":{},"transformations":[{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FilenameUtils:1116","type":"CtBinaryOperatorImpl","sourcecode":"(filename1 == null) || (filename2 == null)"},"failures":[],"tindex":"467ff6c0-2ead-11e6-9320-0db53a93553e","method":{"position":"org.apache.commons.io.IOUtils:801","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(java.io.InputStream input, java.lang.String encoding) throws java.io.IOException {\n    if ((encoding == null) || (encoding == null)) {\n        {\n            return org.apache.commons.io.IOUtils.toString(input, org.apache.commons.io.Charsets.toCharset(encoding));\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename2":"encoding","filename1":"encoding"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.filefilter.DelegateFileFilter:59","type":"CtBinaryOperatorImpl","sourcecode":"filter == null"},"failures":[],"tindex":"4680ba11-2ead-11e6-9320-a5382da33af8","method":{"position":"org.apache.commons.io.output.FileWriterWithEncoding:222","type":"CtMethodImpl","sourcecode":"private static java.io.Writer initWriter(java.io.File file, java.lang.Object encoding, boolean append) throws java.io.IOException {\n    if (encoding == null) {\n        {\n            if (encoding == null) {\n                {\n                    if (file == null) {\n                        throw new java.lang.NullPointerException(\"File is missing\");\n                    } \n                    if (encoding == null) {\n                        throw new java.lang.NullPointerException(\"Encoding is missing\");\n                    } \n                    boolean boolean = file.exists();\n                    java.io.OutputStream java.io.OutputStream = null;\n                    java.io.Writer java.io.Writer = null;\n                    try {\n                        stream = new java.io.FileOutputStream(file , append);\n                        if (encoding instanceof java.nio.charset.Charset) {\n                            writer = new java.io.OutputStreamWriter(stream , ((java.nio.charset.Charset)(encoding)));\n                        } else if (encoding instanceof java.nio.charset.CharsetEncoder) {\n                            writer = new java.io.OutputStreamWriter(stream , ((java.nio.charset.CharsetEncoder)(encoding)));\n                        } else {\n                            writer = new java.io.OutputStreamWriter(stream , ((java.lang.String)(encoding)));\n                        }\n                    } catch (java.io.IOException ex) {\n                        org.apache.commons.io.IOUtils.closeQuietly(writer);\n                        org.apache.commons.io.IOUtils.closeQuietly(stream);\n                        if (fileExistedAlready == false) {\n                            org.apache.commons.io.FileUtils.deleteQuietly(file);\n                        } \n                        throw ex;\n                    } catch (java.lang.RuntimeException ex) {\n                        org.apache.commons.io.IOUtils.closeQuietly(writer);\n                        org.apache.commons.io.IOUtils.closeQuietly(stream);\n                        if (fileExistedAlready == false) {\n                            org.apache.commons.io.FileUtils.deleteQuietly(file);\n                        } \n                        throw ex;\n                    }\n                    return writer;\n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filter":"encoding"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:685","type":"CtBinaryOperatorImpl","sourcecode":"extensions == null"},"failures":[],"tindex":"46810832-2ead-11e6-9320-17287c783f84","method":{"position":"org.apache.commons.io.output.FileWriterWithEncoding:222","type":"CtMethodImpl","sourcecode":"private static java.io.Writer initWriter(java.io.File file, java.lang.Object encoding, boolean append) throws java.io.IOException {\n    if (encoding == null) {\n        {\n            if (encoding == null) {\n                {\n                    if (file == null) {\n                        throw new java.lang.NullPointerException(\"File is missing\");\n                    } \n                    if (encoding == null) {\n                        throw new java.lang.NullPointerException(\"Encoding is missing\");\n                    } \n                    boolean boolean = file.exists();\n                    java.io.OutputStream java.io.OutputStream = null;\n                    java.io.Writer java.io.Writer = null;\n                    try {\n                        stream = new java.io.FileOutputStream(file , append);\n                        if (encoding instanceof java.nio.charset.Charset) {\n                            writer = new java.io.OutputStreamWriter(stream , ((java.nio.charset.Charset)(encoding)));\n                        } else if (encoding instanceof java.nio.charset.CharsetEncoder) {\n                            writer = new java.io.OutputStreamWriter(stream , ((java.nio.charset.CharsetEncoder)(encoding)));\n                        } else {\n                            writer = new java.io.OutputStreamWriter(stream , ((java.lang.String)(encoding)));\n                        }\n                    } catch (java.io.IOException ex) {\n                        org.apache.commons.io.IOUtils.closeQuietly(writer);\n                        org.apache.commons.io.IOUtils.closeQuietly(stream);\n                        if (fileExistedAlready == false) {\n                            org.apache.commons.io.FileUtils.deleteQuietly(file);\n                        } \n                        throw ex;\n                    } catch (java.lang.RuntimeException ex) {\n                        org.apache.commons.io.IOUtils.closeQuietly(writer);\n                        org.apache.commons.io.IOUtils.closeQuietly(stream);\n                        if (fileExistedAlready == false) {\n                            org.apache.commons.io.FileUtils.deleteQuietly(file);\n                        } \n                        throw ex;\n                    }\n                    return writer;\n                }\n            } else {\n                throw new java.io.IOException();\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"extensions":"encoding"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:1286","type":"CtBinaryOperatorImpl","sourcecode":"data != null"},"failures":[],"tindex":"46812f43-2ead-11e6-9320-3f684013ff1b","method":{"position":"org.apache.commons.io.IOUtils:931","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static java.lang.String toString(byte[] input) throws java.io.IOException {\n    if (input != null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            return new java.lang.String(input);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"data":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileSystemUtils:79","type":"CtBinaryOperatorImpl","sourcecode":"(((((((osName.indexOf(\"linux\")) != (-1)) || ((osName.indexOf(\"mpe/ix\")) != (-1))) || ((osName.indexOf(\"freebsd\")) != (-1))) || ((osName.indexOf(\"irix\")) != (-1))) || ((osName.indexOf(\"digital unix\")) != (-1))) || ((osName.indexOf(\"unix\")) != (-1))) || ((osName.indexOf(\"mac os x\")) != (-1))"},"failures":[],"tindex":"46815654-2ead-11e6-9320-436b31226d22","method":{"position":"org.apache.commons.io.FilenameUtils:579","type":"CtMethodImpl","sourcecode":"public static java.lang.String separatorsToSystem(java.lang.String path) {\n    if ((((((((path.indexOf(\"linux\")) != (-1)) || ((osName.indexOf(\"mpe/ix\")) != (-1))) || ((osName.indexOf(\"freebsd\")) != (-1))) || ((osName.indexOf(\"irix\")) != (-1))) || ((osName.indexOf(\"digital unix\")) != (-1))) || ((osName.indexOf(\"unix\")) != (-1))) || ((osName.indexOf(\"mac os x\")) != (-1))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (path == null) {\n                return null;\n            } \n            if (org.apache.commons.io.FilenameUtils.isSystemWindows()) {\n                return org.apache.commons.io.FilenameUtils.separatorsToWindows(path);\n            } else {\n                return org.apache.commons.io.FilenameUtils.separatorsToUnix(path);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"osName":"path"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:1617","type":"CtBinaryOperatorImpl","sourcecode":"(!(directory.exists())) || (!(child.exists()))"},"failures":[],"tindex":"46817d65-2ead-11e6-9320-afcba8fa7dba","method":{"position":"org.apache.commons.io.FileUtils:1560","type":"CtMethodImpl","sourcecode":"public static boolean deleteQuietly(java.io.File file) {\n    if ((!(file.exists())) || (!(file.exists()))) {\n        {\n            if (file == null) {\n                return false;\n            } \n            try {\n                if (file.isDirectory()) {\n                    org.apache.commons.io.FileUtils.cleanDirectory(file);\n                } \n            } catch (java.lang.Exception ignored) {\n            }\n            try {\n                return file.delete();\n            } catch (java.lang.Exception ignored) {\n                return false;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"file","child":"file"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.ReaderInputStream:223","type":"CtBinaryOperatorImpl","sourcecode":"b == null"},"failures":[],"tindex":"4681a476-2ead-11e6-9320-433517d19bf1","method":{"position":"org.apache.commons.io.IOUtils:2475","type":"CtMethodImpl","sourcecode":"public static int read(java.io.InputStream input, byte[] buffer) throws java.io.IOException {\n    if (buffer == null) {\n        {\n            return org.apache.commons.io.IOUtils.read(input, buffer, 0, buffer.int);\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"buffer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.input.ReversedLinesFileReader:90","type":"CtBinaryOperatorImpl","sourcecode":"(totalByteLength) > 0"},"failures":[],"tindex":"4681cb87-2ead-11e6-9320-53186b0c4804","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:636","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.filefilter.IOFileFilter sizeRangeFileFilter(long minSizeInclusive, long maxSizeInclusive) {\n    if (maxSizeInclusive > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.io.filefilter.IOFileFilter org.apache.commons.io.filefilter.IOFileFilter = new org.apache.commons.io.filefilter.SizeFileFilter(minSizeInclusive , true);\n            org.apache.commons.io.filefilter.IOFileFilter org.apache.commons.io.filefilter.IOFileFilter = new org.apache.commons.io.filefilter.SizeFileFilter((maxSizeInclusive + 1L) , false);\n            return new org.apache.commons.io.filefilter.AndFileFilter(minimumFilter , maximumFilter);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"totalByteLength":"maxSizeInclusive"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.FileUtils:356","type":"CtBinaryOperatorImpl","sourcecode":"(file.canWrite()) == false"},"failures":[],"tindex":"4681cb88-2ead-11e6-9320-a1c7c9e69395","method":{"position":"org.apache.commons.io.FileUtils:2077","type":"CtMethodImpl","sourcecode":"public static void writeByteArrayToFile(java.io.File file, byte[] data) throws java.io.IOException {\n    if ((file.canWrite()) == false) {\n        throw new java.io.IOException();\n    } else {\n        {\n            org.apache.commons.io.FileUtils.writeByteArrayToFile(file, data, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"file":"file"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.input.BOMInputStream:336","type":"CtBinaryOperatorImpl","sourcecode":"b >= 0"},"failures":[],"tindex":"4681f299-2ead-11e6-9320-c78dab3848b7","method":{"position":"org.apache.commons.io.output.NullOutputStream:44","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(byte[] b, int off, int len) {\n    if (len >= 0) {\n        {\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"len"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:1640","type":"CtUnaryOperatorImpl","sourcecode":"!(directory.isDirectory())"},"failures":[],"tindex":"4681f29a-2ead-11e6-9320-81737ced7182","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:582","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.io.filefilter.IOFileFilter ageFileFilter(java.io.File cutoffReference) {\n    if (!(cutoffReference.isDirectory())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.io.filefilter.AgeFileFilter(cutoffReference);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"directory":"cutoffReference"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FilenameUtils:1281","type":"CtBinaryOperatorImpl","sourcecode":"(filename == null) || (wildcardMatcher == null)"},"failures":[],"tindex":"468219ab-2ead-11e6-9320-ab19939d096f","method":{"position":"org.apache.commons.io.FileCleaningTracker:76","type":"CtMethodImpl","sourcecode":"public void track(java.io.File file, java.lang.Object marker) {\n    if ((marker == null) || (marker == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            track(file, marker, ((org.apache.commons.io.FileDeleteStrategy)(null)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filename":"marker","wildcardMatcher":"marker"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:790","type":"CtBinaryOperatorImpl","sourcecode":"filter == null"},"failures":[],"tindex":"468240bc-2ead-11e6-9320-ef4bdabb76e0","method":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:76","type":"CtMethodImpl","sourcecode":"public static java.io.File[] filter(org.apache.commons.io.filefilter.IOFileFilter filter, java.io.File... files) {\n    if (filter == null) {\n        {\n            if (filter == null) {\n                throw new java.lang.IllegalArgumentException(\"file filter is null\");\n            } \n            if (files == null) {\n                return new java.io.File[0];\n            } \n            java.util.List<java.io.File> java.util.List<java.io.File> = new java.util.ArrayList<java.io.File>();\n            for (java.io.File java.io.File : files) {\n                if (file == null) {\n                    throw new java.lang.IllegalArgumentException(\"file array contains null\");\n                } \n                if (filter.accept(file)) {\n                    acceptedFiles.add(file);\n                } \n            }\n            return acceptedFiles.toArray(new java.io.File[acceptedFiles.size()]);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"filter":"filter"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.ByteOrderMark:174","type":"CtBinaryOperatorImpl","sourcecode":"i > 0"},"failures":[],"tindex":"468267cd-2ead-11e6-9320-c3761ef55f30","method":{"position":"org.apache.commons.io.output.XmlStreamWriter:211","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(char[] cbuf, int off, int len) throws java.io.IOException {\n    if (len > 0) {\n        {\n            if ((java.io.StringWriter) != null) {\n                detectEncoding(cbuf, off, len);\n            } else {\n                java.io.Writer.write(cbuf, off, len);\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"len"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOUtils:1526","type":"CtBinaryOperatorImpl","sourcecode":"data != null"},"failures":[],"tindex":"468267ce-2ead-11e6-9320-1ff7e6ae4131","method":{"position":"org.apache.commons.io.FilenameUtils:995","type":"CtMethodImpl","sourcecode":"public static java.lang.String getExtension(java.lang.String filename) {\n    if (filename != null) {\n        {\n            if (filename == null) {\n                return null;\n            } \n            int int = org.apache.commons.io.FilenameUtils.indexOfExtension(filename);\n            if (index == (-1)) {\n                return \"\";\n            } else {\n                return filename.substring((index + 1));\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"data":"filename"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.monitor.FileAlterationObserver:253","type":"CtBinaryOperatorImpl","sourcecode":"listener != null"},"failures":[],"tindex":"46828edf-2ead-11e6-9320-d9fdd6685f15","method":{"position":"org.apache.commons.io.monitor.FileAlterationObserver:252","type":"CtMethodImpl","sourcecode":"public void removeListener(final org.apache.commons.io.monitor.FileAlterationListener listener) {\n    if (listener != null) {\n        {\n            if (listener != null) {\n                while (java.util.List<org.apache.commons.io.monitor.FileAlterationListener>.remove(listener)) {\n                }\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"listener":"listener"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.DirectoryWalker:301","type":"CtBinaryOperatorImpl","sourcecode":"(directoryFilter == null) && (fileFilter == null)"},"failures":[],"tindex":"46828ee0-2ead-11e6-9320-83997a0fe991","method":{"position":"org.apache.commons.io.filefilter.OrFileFilter:100","type":"CtMethodImpl","sourcecode":"public boolean removeFileFilter(org.apache.commons.io.filefilter.IOFileFilter ioFileFilter) {\n    if ((ioFileFilter == null) && (ioFileFilter == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.io.filefilter.OrFileFilter.this.java.util.List<org.apache.commons.io.filefilter.IOFileFilter>.remove(ioFileFilter);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fileFilter":"ioFileFilter","directoryFilter":"ioFileFilter"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.filefilter.WildcardFilter:114","type":"CtInvocationImpl","sourcecode":"org.apache.commons.io.FilenameUtils.wildcardMatch(name, wildcard)"},"failures":[],"tindex":"4682b5f1-2ead-11e6-9320-f5f5cdf080de","method":{"position":"org.apache.commons.io.FilenameUtils:905","type":"CtMethodImpl","sourcecode":"private static java.lang.String doGetFullPath(java.lang.String filename, boolean includeSeparator) {\n    if (org.apache.commons.io.FilenameUtils.wildcardMatch(filename, filename)) {\n        {\n            if (filename == null) {\n                return null;\n            } \n            int int = org.apache.commons.io.FilenameUtils.getPrefixLength(filename);\n            if (prefix < 0) {\n                return null;\n            } \n            if (prefix >= (filename.length())) {\n                if (includeSeparator) {\n                    return org.apache.commons.io.FilenameUtils.getPrefix(filename);\n                } else {\n                    return filename;\n                }\n            } \n            int int = org.apache.commons.io.FilenameUtils.indexOfLastSeparator(filename);\n            if (index < 0) {\n                return filename.substring(0, prefix);\n            } \n            int int = index + (includeSeparator ? 1 : 0);\n            if (end == 0) {\n                end++;\n            } \n            return filename.substring(0, end);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"filename","wildcard":"filename"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:810","type":"CtBinaryOperatorImpl","sourcecode":"charsetName == null"},"failures":[],"tindex":"4682dd02-2ead-11e6-9320-2b4635a0a66e","method":{"position":"org.apache.commons.io.FilenameUtils:1277","type":"CtMethodImpl","sourcecode":"public static boolean wildcardMatch(java.lang.String filename, java.lang.String wildcardMatcher, org.apache.commons.io.IOCase caseSensitivity) {\n    if (filename == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((filename == null) && (wildcardMatcher == null)) {\n                return true;\n            } \n            if ((filename == null) || (wildcardMatcher == null)) {\n                return false;\n            } \n            if (caseSensitivity == null) {\n                caseSensitivity = org.apache.commons.io.IOCase.org.apache.commons.io.IOCase.org.apache.commons.io.IOCase;\n            } \n            java.lang.String[] java.lang.String[] = org.apache.commons.io.FilenameUtils.splitOnTokens(wildcardMatcher);\n            boolean boolean = false;\n            int int = 0;\n            int int = 0;\n            java.util.Stack<int[]> java.util.Stack<int[]> = new java.util.Stack<int[]>();\n            do {\n                if ((backtrack.size()) > 0) {\n                    int[] int[] = backtrack.pop();\n                    wcsIdx = array[0];\n                    textIdx = array[1];\n                    anyChars = true;\n                } \n                while (wcsIdx < (wcs.int)) {\n                    if (wcs[wcsIdx].equals(\"?\")) {\n                        textIdx++;\n                        if (textIdx > (filename.length())) {\n                            break;\n                        } \n                        anyChars = false;\n                    } else if (wcs[wcsIdx].equals(\"*\")) {\n                        anyChars = true;\n                        if (wcsIdx == ((wcs.int) - 1)) {\n                            textIdx = filename.length();\n                        } \n                    } else {\n                        if (anyChars) {\n                            textIdx = caseSensitivity.checkIndexOf(filename, textIdx, wcs[wcsIdx]);\n                            if (textIdx == (-1)) {\n                                break;\n                            } \n                            int int = caseSensitivity.checkIndexOf(filename, (textIdx + 1), wcs[wcsIdx]);\n                            if (repeat >= 0) {\n                                backtrack.push(new int[]{ wcsIdx , repeat });\n                            } \n                        } else {\n                            if (!(caseSensitivity.checkRegionMatches(filename, textIdx, wcs[wcsIdx]))) {\n                                break;\n                            } \n                        }\n                        textIdx += wcs[wcsIdx].length();\n                        anyChars = false;\n                    }\n                    wcsIdx++;\n                }\n                if ((wcsIdx == (wcs.int)) && (textIdx == (filename.length()))) {\n                    return true;\n                } \n            } while ((backtrack.size()) > 0 );\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"charsetName":"filename"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.IOUtils:2448","type":"CtBinaryOperatorImpl","sourcecode":"length < 0"},"failures":[],"tindex":"46830413-2ead-11e6-9320-9d088dfa8a11","method":{"position":"org.apache.commons.io.output.NullWriter:105","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(char[] chr, int st, int end) {\n    if (end < 0) {\n        {\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"end"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:2331","type":"CtBinaryOperatorImpl","sourcecode":"n < 0"},"failures":[],"tindex":"46832b24-2ead-11e6-9320-89198d495dcc","method":{"position":"org.apache.commons.io.FileSystemUtils:463","type":"CtMethodImpl","sourcecode":"java.util.List<java.lang.String> performCommand(java.lang.String[] cmdAttribs, int max, long timeout) throws java.io.IOException {\n    if (timeout < 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>(20);\n            java.lang.Process java.lang.Process = null;\n            java.io.InputStream java.io.InputStream = null;\n            java.io.OutputStream java.io.OutputStream = null;\n            java.io.InputStream java.io.InputStream = null;\n            java.io.BufferedReader java.io.BufferedReader = null;\n            try {\n                java.lang.Thread java.lang.Thread = org.apache.commons.io.ThreadMonitor.start(timeout);\n                proc = openProcess(cmdAttribs);\n                in = proc.getInputStream();\n                out = proc.getOutputStream();\n                err = proc.getErrorStream();\n                inr = new java.io.BufferedReader(new java.io.InputStreamReader(in));\n                java.lang.String java.lang.String = inr.readLine();\n                while ((line != null) && ((lines.size()) < max)) {\n                    line = line.toLowerCase(java.util.Locale.java.util.Locale.java.util.Locale).trim();\n                    lines.add(line);\n                    line = inr.readLine();\n                }\n                proc.waitFor();\n                org.apache.commons.io.ThreadMonitor.stop(monitor);\n                if ((proc.exitValue()) != 0) {\n                    throw new java.io.IOException((((\"Command line returned OS error code '\" + (proc.exitValue())) + \"' for command \") + (java.util.Arrays.asList(cmdAttribs))));\n                } \n                if (lines.isEmpty()) {\n                    throw new java.io.IOException(((\"Command line did not return any info \" + \"for command \") + (java.util.Arrays.asList(cmdAttribs))));\n                } \n                return lines;\n            } catch (java.lang.InterruptedException ex) {\n                throw new org.apache.commons.io.IOExceptionWithCause(((((\"Command line threw an InterruptedException \" + \"for command \") + (java.util.Arrays.asList(cmdAttribs))) + \" timeout=\") + timeout) , ex);\n            } finally {\n                org.apache.commons.io.IOUtils.closeQuietly(in);\n                org.apache.commons.io.IOUtils.closeQuietly(out);\n                org.apache.commons.io.IOUtils.closeQuietly(err);\n                org.apache.commons.io.IOUtils.closeQuietly(inr);\n                if (proc != null) {\n                    proc.destroy();\n                } \n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"timeout"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.io.FileUtils:1076","type":"CtInvocationImpl","sourcecode":"srcFile.isDirectory()"},"failures":[],"tindex":"46835235-2ead-11e6-9320-1befb594d300","method":{"position":"org.apache.commons.io.filefilter.RegexFileFilter:118","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean accept(java.io.File dir, java.lang.String name) {\n    if (dir.isDirectory()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.regex.Pattern.matcher(name).matches();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcFile":"dir"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:56","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"46837946-2ead-11e6-9320-afa10aaa05be","method":{"position":"org.apache.commons.io.EndianUtils:297","type":"CtMethodImpl","sourcecode":"public static short readSwappedShort(java.io.InputStream input) throws java.io.IOException {\n    if (null != input) {\n        {\n            return ((short)((((org.apache.commons.io.EndianUtils.read(input)) & 255) << 0) + (((org.apache.commons.io.EndianUtils.read(input)) & 255) << 8)));\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.input.DemuxInputStream:73","type":"CtBinaryOperatorImpl","sourcecode":"null != input"},"failures":[],"tindex":"46837947-2ead-11e6-9320-71ca096a9b68","method":{"position":"org.apache.commons.io.IOUtils:985","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.lang.String> readLines(java.io.InputStream input, java.nio.charset.Charset encoding) throws java.io.IOException {\n    if (null != input) {\n        throw new java.io.IOException();\n    } else {\n        {\n            java.io.InputStreamReader java.io.InputStreamReader = new java.io.InputStreamReader(input , org.apache.commons.io.Charsets.toCharset(encoding));\n            return org.apache.commons.io.IOUtils.readLines(reader);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.io.IOUtils:2179","type":"CtUnaryOperatorImpl","sourcecode":"!(input1 instanceof java.io.BufferedInputStream)"},"failures":[],"tindex":"4683a058-2ead-11e6-9320-b77e78d58a37","method":{"position":"org.apache.commons.io.EndianUtils:465","type":"CtMethodImpl","sourcecode":"public static double readSwappedDouble(java.io.InputStream input) throws java.io.IOException {\n    if (!(input instanceof java.io.BufferedInputStream)) {\n        {\n            return java.lang.Double.longBitsToDouble(org.apache.commons.io.EndianUtils.readSwappedLong(input));\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input1":"input"},"type":"special","returnInThen":true,"status":0}],"header":{"groupId":"commons-io","transformationCount":25,"projectType":"maven","artifactId":"commons-io","generatorVersion":"1.0","version":"2.4"}}