{"failureDictionary":{"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":3,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":78,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":45,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringString":75,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":39,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedFieldForceAccess":187,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":4,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteDeclaredNamedField":193,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOf_StringInt":82,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadDeclaredNamedStaticField":171,"org.apache.commons.lang3.ArrayUtilsTest.testIsEmptyPrimitives":246,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":36,"org.apache.commons.lang3.ValidateTest.testNotBlankMsgBlankStringWithWhitespacesShouldThrow":209,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNull":43,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":25,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArrayEqualAsObject":14,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":31,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContains_StringWithBadSupplementaryChars":85,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHiragana":132,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":12,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang708":123,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiCharArray":216,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiShortArray":226,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlVersions":130,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiBooleanArray":220,"org.apache.commons.lang3.StringUtilsTest.testIsNoneBlank":144,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":1,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml10":119,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePartialString_noReplace":63,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml11":120,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringStringarray":74,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiLongArray":224,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":27,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":58,"org.apache.commons.lang3.CharRangeTest.testContains_Char":65,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOf_String":84,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfLong":23,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetFieldIllegalArgumentException3":169,"org.apache.commons.lang3.math.NumberUtilsTest.testMinFloat_nullArray":105,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetFieldIllegalArgumentException4":170,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":28,"org.apache.commons.lang3.ValidateTest.testNotBlankMsgEmptyStringShouldThrow":199,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfLongWithStartIndex":24,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMixedArray":222,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetDeclaredField":194,"org.apache.commons.lang3.time.FastDateParserTest.testSpecialCharacters":88,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":32,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeEcmaScript":126,"org.apache.commons.lang3.StringUtilsTest.testRemoveEndIgnoreCase":214,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJavaWithSlash":118,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetPrefix":60,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringStringarray":71,"org.apache.commons.lang3.ValidateTest.testNotBlankNotBlankStringShouldNotThrow":205,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringString":68,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetSuffix":62,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairsLang858":110,"org.apache.commons.lang3.StringEscapeUtilsTest.testStandaloneAmphersand":113,"org.apache.commons.lang3.builder.CompareToBuilderTest.testObjectArray":215,"org.apache.commons.lang3.ValidateTest.testNotBlankMsgNotBlankStringShouldNotThrow":206,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiFloatArray":221,"org.apache.commons.lang3.time.FastDateParserTest.testParseNumerics":91,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":100,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedStaticFieldForceAccess":188,"org.apache.commons.lang3.time.FastDateParserTest.testParseZone":89,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmpty":59,"org.apache.commons.lang3.StringUtilsTest.testDefaultIfBlank_StringBuffers":141,"org.apache.commons.lang3.StringUtilsTest.testDefaultIfBlank_CharBuffers":145,"org.apache.commons.lang3.math.NumberUtilsTest.testMinFloat":104,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetValueDelimiter":54,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeUnknownEntity":131,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadStaticFieldIllegalArgumentException2":181,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_CharArray_int_int":244,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":37,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":8,"org.apache.commons.lang3.StringUtilsTest.testUnescapeSurrogatePairs":109,"org.apache.commons.lang3.time.FastDateParserTest.testLang538":92,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContains_StringWithSupplementaryChars":79,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":61,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":38,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtml":115,"org.apache.commons.lang3.LocaleUtilsTest.testThreeCharsLocale":212,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":13,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorNoArgs":41,"org.apache.commons.lang3.StringUtilsTest.testIsAnyBlank":139,"org.apache.commons.lang3.time.DateUtilsTest.testIsSameLocalTime_Cal":138,"org.apache.commons.lang3.ValidateTest.testNotBlankMsgBlankStringShouldThrow":200,"org.apache.commons.lang3.builder.EqualsBuilderTest.testSuper":102,"org.apache.commons.lang3.text.StrBuilderTest.testAsWriter":245,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":18,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiIntArray":223,"org.apache.commons.lang3.reflect.FieldUtilsTest.testAmbig":175,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":236,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":134,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetFieldForceAccessIllegalArgumentException4":186,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadStaticFieldForceAccessIllegalArgumentException2":176,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetFieldForceAccessIllegalArgumentException3":185,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseNumerics":98,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringString":70,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadStaticFieldForceAccess":163,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":6,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":21,"org.apache.commons.lang3.ValidateTest.testNotBlankMsgNotBlankStringWithNewlinesShouldNotThrow":208,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementShortArray":247,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang538":99,"org.apache.commons.lang3.CharSetTest.testContains_Char":66,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBetween":64,"org.apache.commons.lang3.builder.DiffBuilderTest.testStylePassedToDiffResult":10,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseZone":96,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":47,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testOrdinalIndexOf":80,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairs":108,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringString":73,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang720":124,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":26,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringStringarray":72,"org.apache.commons.lang3.ValidateTest.testNotBlankBlankStringWithWhitespacesShouldThrow":211,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":149,"org.apache.commons.lang3.StringUtilsTest.testDefaultIfBlank_StringString":140,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHexCharsHtml":128,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeXmlSupplementaryCharacters":129,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadDeclaredNamedStaticFieldForceAccess":166,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":7,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":52,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang313":122,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":0,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedField":177,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":93,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedStaticField":165,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":2,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":56,"org.apache.commons.lang3.math.NumberUtilsTest.testLang300":154,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":19,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberFailure_1":157,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberFailure_2":158,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteDeclaredNamedFieldForceAccess":178,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberFailure_3":159,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":40,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberFailure_4":160,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":16,"org.apache.commons.lang3.builder.CompareToBuilderTest.testObjectArrayHiddenByObject":218,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadStaticField":189,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":48,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementFloatArray":249,"org.apache.commons.lang3.ConversionTest.testHexToInt":136,"org.apache.commons.lang3.text.StrBuilderTest.testToCharArrayIntInt":135,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetDeclaredFieldForceAccess":195,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlSupplementaryCharacters":121,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContains_String":81,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":156,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadField":183,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoVariables":49,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":51,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetEscape":57,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringStringArray":83,"org.apache.commons.lang3.math.NumberUtilsTest.testLANG971":150,"org.apache.commons.lang3.math.NumberUtilsTest.testLANG972":151,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":15,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":53,"org.apache.commons.lang3.text.translate.LookupTranslatorTest.testLang882":107,"org.apache.commons.lang3.StringUtilsTest.testIsNotBlank":142,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":29,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHtml4":114,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":241,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":242,"org.apache.commons.lang3.ValidateTest.testNotBlankMsgNotBlankStringWithWhitespacesShouldNotThrow":204,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_CharArray_int_int":243,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":34,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadFieldForceAccess":196,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":33,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiByteArray":219,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringInt":22,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":30,"org.apache.commons.lang3.ValidateTest.testNotBlankBlankStringWithNewlinesShouldThrow":203,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":11,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testAmPm":97,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testIsBlank":148,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":116,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetField":168,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetDeclaredFieldAccessIllegalArgumentException4":191,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetDeclaredFieldAccessIllegalArgumentException3":190,"org.apache.commons.lang3.ValidateTest.testNotBlankNotBlankStringWithWhitespacesShouldNotThrow":210,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":42,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":112,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testEndsWithIgnoreCase":213,"org.apache.commons.lang3.math.NumberUtilsTest.testLANG992":152,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":9,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testIsNotBlank":147,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddCombinations":67,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":125,"org.apache.commons.lang3.text.StrTokenizerTest.test5":234,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrChar":248,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadDeclaredNamedField":164,"org.apache.commons.lang3.text.StrTokenizerTest.test4":233,"org.apache.commons.lang3.StringUtilsSubstringTest.testCountMatches_String":86,"org.apache.commons.lang3.text.StrTokenizerTest.test6":235,"org.apache.commons.lang3.text.StrTokenizerTest.test1":230,"org.apache.commons.lang3.text.StrTokenizerTest.test3":232,"org.apache.commons.lang3.math.NumberUtilsTest.testMinFloat_emptyArray":103,"org.apache.commons.lang3.text.StrTokenizerTest.test2":231,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml":133,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedStaticFieldForceAccess":172,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":17,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedFieldForceAccess":197,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":87,"org.apache.commons.lang3.time.FastDateParserTest.testAmPm":90,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJson":117,"org.apache.commons.lang3.StringUtilsTest.testDefaultIfBlank_StringBuilders":143,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiDoubleArray":225,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetDeclaredFieldForceAccessIllegalArgumentException3":173,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":111,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetDeclaredFieldForceAccessIllegalArgumentException4":174,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteDeclaredNamedStaticFieldForceAccess":192,"org.apache.commons.lang3.time.FastDateParserTest.testQuotes":94,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":20,"org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss":162,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":35,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlHighUnicode":127,"org.apache.commons.lang3.ValidateTest.testNotBlankEmptyStringShouldThrow":207,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":5,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringStringarray":77,"org.apache.commons.lang3.text.translate.LookupTranslatorTest.testBasicLookup":106,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":227,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":229,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":228,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":240,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetFieldForceAccess":182,"org.apache.commons.lang3.builder.CompareToBuilderTest.testRaggedArray":217,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedField":180,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testSpecialCharacters":95,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":46,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateBigDecimal":155,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedStaticField":184,"org.apache.commons.lang3.ValidateTest.testNotBlankNotBlankStringWithNewlinesShouldNotThrow":198,"org.apache.commons.lang3.StringUtilsTest.testDefault_String":137,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":238,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringString":69,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":239,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":55,"org.apache.commons.lang3.StringUtilsTest.testIsBlank":146,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":237,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringStringarray":76,"org.apache.commons.lang3.ValidateTest.testNotBlankReturnValues2":202,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":50,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadDeclaredNamedFieldForceAccess":167,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteDeclaredNamedStaticField":179,"org.apache.commons.lang3.ValidateTest.testNotBlankReturnValues1":201,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testQuotes":101,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":153,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":44,"org.apache.commons.lang3.math.NumberUtilsTest.TestLang747":161},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:493","type":"CtBinaryOperatorImpl","sourcecode":"(numerator) == (java.lang.Integer.MIN_VALUE)"},"failures":[],"tindex":"c1765eff-2e8f-11e6-961b-25b40cc9978f","method":{"position":"org.apache.commons.lang3.time.DateUtils:584","type":"CtMethodImpl","sourcecode":"public static java.util.Date setHours(final java.util.Date date, final int amount) {\n    if (amount == amount) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.set(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.lang.Integer.MIN_VALUE":"amount","numerator":"amount"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:192","type":"CtBinaryOperatorImpl","sourcecode":"(duration.length()) != 0"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],"tindex":"c1772250-2e8f-11e6-961b-d1009150b7d7","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:757","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final short[] lhs, final short[] rhs) {\n    if ((fieldName.length()) != 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (fieldName == null) {\n                throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n            } \n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if (!(java.util.Arrays.equals(lhs, rhs))) {\n                java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Short[]>(fieldName) {\n                    private static final long serialVersionUID = 1L;\n\n                    @java.lang.Override\n                    public java.lang.Short[] getLeft() {\n                        return org.apache.commons.lang3.ArrayUtils.toObject(lhs);\n                    }\n\n                    @java.lang.Override\n                    public java.lang.Short[] getRight() {\n                        return org.apache.commons.lang3.ArrayUtils.toObject(rhs);\n                    }\n                });\n            } \n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"duration":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:701","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[],"tindex":"c1774961-2e8f-11e6-961b-cf5bcbd0d856","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:423","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.String format(final java.util.Date date) {\n    if (date == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.FastDatePrinter.format(date);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4253","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.startsWithIgnoreCase(str, remove)"},"failures":[],"tindex":"c1777072-2e8f-11e6-961b-b7c16660db5d","method":{"position":"org.apache.commons.lang3.text.StrBuilder:851","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendln(final java.lang.Object obj) {\n    if (org.apache.commons.lang3.StringUtils.startsWithIgnoreCase(obj, obj)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return append(obj).appendNewLine();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"obj","remove":"obj"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1499","type":"CtBinaryOperatorImpl","sourcecode":"str != null"},"failures":[22],"tindex":"c1779783-2e8f-11e6-961b-637d6b352db6","method":{"position":"org.apache.commons.lang3.text.WordUtils:96","type":"CtMethodImpl","sourcecode":"public static java.lang.String wrap(final java.lang.String str, final int wrapLength) {\n    if (str != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.text.WordUtils.wrap(str, wrapLength, null, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:973","type":"CtBinaryOperatorImpl","sourcecode":"0 == nHex"},"failures":[23,24],"tindex":"c1779784-2e8f-11e6-961b-cbb6473a32c2","method":{"position":"org.apache.commons.lang3.ArrayUtils:2064","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final long[] array, final long valueToFind, int startIndex) {\n    if (0 == startIndex) {\n        {\n            if (array == null) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } else if (startIndex >= (array.int)) {\n                startIndex = (array.int) - 1;\n            } \n            for (int int = startIndex ; i >= 0 ; i--) {\n                if (valueToFind == (array[i])) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nHex":"startIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:79","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[],"tindex":"c177be95-2e8f-11e6-961b-9f76696b5210","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:232","type":"CtMethodImpl","sourcecode":"public static int reflectionCompare(final java.lang.Object lhs, final java.lang.Object rhs, final java.lang.String... excludeFields) {\n    if (rhs == null) {\n        {\n            return org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(lhs, rhs, false, null, excludeFields);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"rhs"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:860","type":"CtBinaryOperatorImpl","sourcecode":"delim == null"},"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],"tindex":"c177e5a6-2e8f-11e6-961b-39e3d50a68d1","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1110","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrSubstitutor setValueDelimiterMatcher(final org.apache.commons.lang3.text.StrMatcher valueDelimiterMatcher) {\n    if (valueDelimiterMatcher == null) {\n        {\n            org.apache.commons.lang3.text.StrSubstitutor.this.org.apache.commons.lang3.text.StrMatcher = valueDelimiterMatcher;\n            return org.apache.commons.lang3.text.StrSubstitutor.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delim":"valueDelimiterMatcher"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2656","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[64],"tindex":"c177e5a7-2e8f-11e6-961b-2f9918187fda","method":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:95","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.translate.UnicodeEscaper between(final int codepointLow, final int codepointHigh) {\n    if (codepointLow < 0) {\n        {\n            return new org.apache.commons.lang3.text.translate.UnicodeEscaper(codepointLow , codepointHigh , true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"codepointLow"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5731","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isLowerCase(firstChar)"},"failures":[65,66,67,68,69,70,71,72,73,74,75,76,77],"tindex":"c1780cb8-2e8f-11e6-961b-a76512c6d8d1","method":{"position":"org.apache.commons.lang3.CharRange:170","type":"CtMethodImpl","sourcecode":"public boolean contains(final char ch) {\n    if (java.lang.Character.isLowerCase(ch)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((ch >= (char)) && (ch <= (char))) != (boolean);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"firstChar":"ch"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:388","type":"CtBinaryOperatorImpl","sourcecode":"(java.lang.Double.doubleToLongBits(lhs)) != (java.lang.Double.doubleToLongBits(rhs))"},"failures":[78],"tindex":"c17833c9-2e8f-11e6-961b-170bc7652ad4","method":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:102","type":"CtMethodImpl","sourcecode":"public static double min(final double a, final double b) {\n    if ((java.lang.Double.doubleToLongBits(b)) != (java.lang.Double.doubleToLongBits(b))) {\n        {\n            if (java.lang.Double.isNaN(a)) {\n                return b;\n            } else if (java.lang.Double.isNaN(b)) {\n                return a;\n            } else {\n                return java.lang.Math.min(a, b);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"b","rhs":"b"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2830","type":"CtBinaryOperatorImpl","sourcecode":"end > beg"},"failures":[79,80,81,82,83,84,85,86],"tindex":"c17833ca-2e8f-11e6-961b-3160455c2109","method":{"position":"org.apache.commons.lang3.CharSequenceUtils:94","type":"CtMethodImpl","sourcecode":"static int indexOf(final java.lang.CharSequence cs, final java.lang.CharSequence searchChar, final int start) {\n    if (start > start) {\n        {\n            return cs.toString().indexOf(searchChar.toString(), start);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"beg":"start","end":"start"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.reflect.FieldUtils:106","type":"CtUnaryOperatorImpl","sourcecode":"!(java.lang.reflect.Modifier.isPublic(field.getModifiers()))"},"failures":[],"tindex":"c1785adb-2e8f-11e6-961b-c57d3f692a22","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:488","type":"CtMethodImpl","sourcecode":"public static void writeStaticField(final java.lang.reflect.Field field, final java.lang.Object value) throws java.lang.IllegalAccessException {\n    if (!(java.lang.reflect.Modifier.isPublic(value.getModifiers()))) {\n        {\n            org.apache.commons.lang3.reflect.FieldUtils.writeStaticField(field, value, false);\n        }\n    } else {\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"value"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2485","type":"CtBinaryOperatorImpl","sourcecode":"start != (org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND)"},"failures":[87,88,89,90,91,92,93,94,95,96,97,98,99,100,101],"tindex":"c1785adc-2e8f-11e6-961b-f197a994726b","method":{"position":"org.apache.commons.lang3.time.FastDateParser:814","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nint modify(final int iValue) {\n    if (iValue != iValue) {\n        {\n            return iValue % 24;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND":"iValue","start":"iValue"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:130","type":"CtBinaryOperatorImpl","sourcecode":"expression == false"},"failures":[102],"tindex":"c17881ed-2e8f-11e6-961b-957e12e1c3e1","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:433","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.EqualsBuilder appendSuper(final boolean superEquals) {\n    if (superEquals == false) {\n        {\n            if ((boolean) == false) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            boolean = superEquals;\n            return org.apache.commons.lang3.builder.EqualsBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"expression":"superEquals"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:860","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[103,104,105],"tindex":"c17881ee-2e8f-11e6-961b-3b244ecefaae","method":{"position":"org.apache.commons.lang3.math.NumberUtils:908","type":"CtMethodImpl","sourcecode":"public static float min(final float[] array) {\n    if (array == array) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.math.NumberUtils.validateArray(array);\n            float float = array[0];\n            for (int int = 1 ; i < (array.int) ; i++) {\n                if (java.lang.Float.isNaN(array[i])) {\n                    return java.lang.Float.java.lang.Float.float;\n                } \n                if ((array[i]) < min) {\n                    min = array[i];\n                } \n            }\n            return min;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array","rhs":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.math.Fraction:183","type":"CtBinaryOperatorImpl","sourcecode":"whole < 0"},"failures":[106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134],"tindex":"c178a8ff-2e8f-11e6-961b-6d9426a18ab4","method":{"position":"org.apache.commons.lang3.text.translate.LookupTranslator:69","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int translate(final java.lang.CharSequence input, final int index, final java.io.Writer out) throws java.io.IOException {\n    if (index < 0) {\n        {\n            int int = int;\n            if ((index + (int)) > (input.length())) {\n                max = (input.length()) - index;\n            } \n            for (int int = max ; i >= (int) ; i--) {\n                final java.lang.CharSequence java.lang.CharSequence = input.subSequence(index, (index + i));\n                final java.lang.CharSequence java.lang.CharSequence = java.util.HashMap<java.lang.String, java.lang.CharSequence>.get(subSeq.toString());\n                if (result != null) {\n                    out.write(result.toString());\n                    return i;\n                } \n            }\n            return 0;\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"whole":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1470","type":"CtBinaryOperatorImpl","sourcecode":"0 == nHexs"},"failures":[135],"tindex":"c1799360-2e8f-11e6-961b-69bcfd86dee9","method":{"position":"org.apache.commons.lang3.text.StrBuilder:375","type":"CtMethodImpl","sourcecode":"public char[] toCharArray(final int startIndex, int endIndex) {\n    if (0 == startIndex) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            endIndex = validateRange(startIndex, endIndex);\n            final int int = endIndex - startIndex;\n            if (len == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.char[];\n            } \n            final char[] char[] = new char[len];\n            java.lang.System.arraycopy(char[], startIndex, chars, 0, len);\n            return chars;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nHexs":"startIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3764","type":"CtBinaryOperatorImpl","sourcecode":"noOfItems <= 0"},"failures":[136],"tindex":"c179ba71-2e8f-11e6-961b-a7654ef3b5a2","method":{"position":"org.apache.commons.lang3.Conversion:938","type":"CtMethodImpl","sourcecode":"public static int hexToInt(final java.lang.String src, final int srcPos, final int dstInit, final int dstPos, final int nHex) {\n    if (dstInit <= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (0 == nHex) {\n                return dstInit;\n            } \n            if ((((nHex - 1) * 4) + dstPos) >= 32) {\n                throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+dstPos is greather or equal to than 32\");\n            } \n            int int = dstInit;\n            int int = 0;\n            for (int int = 0 ; i < nHex ; i++) {\n                shift = (i * 4) + dstPos;\n                final int int = (15 & (org.apache.commons.lang3.Conversion.hexDigitToInt(src.charAt((i + srcPos))))) << shift;\n                final int int = 15 << shift;\n                out = (out & (~mask)) | bits;\n            }\n            return out;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"noOfItems":"dstInit"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1496","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[137],"tindex":"c179e182-2e8f-11e6-961b-852f970a05b9","method":{"position":"org.apache.commons.lang3.StringUtils:6198","type":"CtMethodImpl","sourcecode":"public static java.lang.String defaultString(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return str == null ? org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String : str;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:180","type":"CtBinaryOperatorImpl","sourcecode":"(cal1 == null) || (cal2 == null)"},"failures":[138],"tindex":"c179e183-2e8f-11e6-961b-ab0fc099d930","method":{"position":"org.apache.commons.lang3.time.DateUtils:238","type":"CtMethodImpl","sourcecode":"public static boolean isSameLocalTime(final java.util.Calendar cal1, final java.util.Calendar cal2) {\n    if ((cal1 == null) || (cal1 == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((cal1 == null) || (cal2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            return ((((((((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.getClass()) == (cal2.getClass()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cal2":"cal1","cal1":"cal1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:642","type":"CtBinaryOperatorImpl","sourcecode":"cls == null"},"failures":[],"tindex":"c17a0894-2e8f-11e6-961b-f9c824154924","method":{"position":"org.apache.commons.lang3.Validate:1250","type":"CtMethodImpl","sourcecode":"public static void isAssignableFrom(final java.lang.Class<?> superType, final java.lang.Class<?> type, final java.lang.String message, final java.lang.Object... values) {\n    if (superType == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((superType.isAssignableFrom(type)) == false) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message, values));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"superType"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5660","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212],"tindex":"c17a0895-2e8f-11e6-961b-e1cd3af6dc58","method":{"position":"org.apache.commons.lang3.StringUtils:306","type":"CtMethodImpl","sourcecode":"public static boolean isBlank(final java.lang.CharSequence cs) {\n    if (cs == null) {\n        {\n            int int;\n            if ((cs == null) || ((strLen = cs.length()) == 0)) {\n                return true;\n            } \n            for (int int = 0 ; i < strLen ; i++) {\n                if ((java.lang.Character.isWhitespace(cs.charAt(i))) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"cs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1970","type":"CtBinaryOperatorImpl","sourcecode":"nullText == null"},"failures":[213,214],"tindex":"c17a2fa6-2e8f-11e6-961b-41bfd524f088","method":{"position":"org.apache.commons.lang3.StringUtils:7296","type":"CtMethodImpl","sourcecode":"public static boolean endsWithIgnoreCase(final java.lang.CharSequence str, final java.lang.CharSequence suffix) {\n    if (str == null) {\n        {\n            return org.apache.commons.lang3.StringUtils.endsWith(str, suffix, true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nullText":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6689","type":"CtBinaryOperatorImpl","sourcecode":"(strs[0]) == null"},"failures":[215,216,217,218,219,220,221,222,223,224,225,226],"tindex":"c17a2fa7-2e8f-11e6-961b-9d1b9c90dd98","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:647","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final java.lang.Object[] lhs, final java.lang.Object[] rhs, final java.util.Comparator<?> comparator) {\n    if ((rhs[0]) == null) {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == null) {\n                int = -1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (rhs == null) {\n                int = +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                int = (lhs.int) < (rhs.int) ? -1 : +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && ((int) == 0) ; i++) {\n                append(lhs[i], rhs[i], comparator);\n            }\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"strs":"rhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:346","type":"CtBinaryOperatorImpl","sourcecode":"pos < 0"},"failures":[227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,25,28,30,31,33,37,38,47,50,52,56,243,244,245],"tindex":"c17a56b8-2e8f-11e6-961b-8906f89216e9","method":{"position":"org.apache.commons.lang3.text.StrBuilder:744","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder append(final char[] chars, final int startIndex, final int length) {\n    if (startIndex < 0) {\n        {\n            if (chars == null) {\n                return appendNull();\n            } \n            if ((startIndex < 0) || (startIndex > (chars.int))) {\n                throw new java.lang.StringIndexOutOfBoundsException((\"Invalid startIndex: \" + length));\n            } \n            if ((length < 0) || ((startIndex + length) > (chars.int))) {\n                throw new java.lang.StringIndexOutOfBoundsException((\"Invalid length: \" + length));\n            } \n            if (length > 0) {\n                final int int = length();\n                ensureCapacity((len + length));\n                java.lang.System.arraycopy(chars, startIndex, char[], len, length);\n                int += length;\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pos":"startIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:774","type":"CtBinaryOperatorImpl","sourcecode":"lhs == null"},"failures":[246,247],"tindex":"c17a7dc9-2e8f-11e6-961b-53ddbbb54ee1","method":{"position":"org.apache.commons.lang3.ArrayUtils:3531","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final short[] array) {\n    if (array == null) {\n        {\n            return (array == null) || ((array.int) == 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:427","type":"CtBinaryOperatorImpl","sourcecode":"lhs instanceof double[]"},"failures":[179],"tindex":"c17a7dca-2e8f-11e6-961b-07138b37d63d","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:576","type":"CtMethodImpl","sourcecode":"public static void writeDeclaredStaticField(final java.lang.Class<?> cls, final java.lang.String fieldName, final java.lang.Object value) throws java.lang.IllegalAccessException {\n    if (value instanceof double[]) {\n        {\n            org.apache.commons.lang3.reflect.FieldUtils.writeDeclaredStaticField(cls, fieldName, value, false);\n        }\n    } else {\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:640","type":"CtBinaryOperatorImpl","sourcecode":"lhs != rhs"},"failures":[],"tindex":"c17aa4db-2e8f-11e6-961b-7792008f6ed4","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:443","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final long value) {\n    if (value != value) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, value);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"value","rhs":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:705","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[],"tindex":"c17aa4dc-2e8f-11e6-961b-356bb954cd51","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:757","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final int[] array) {\n    if (array == array) {\n        {\n            if (array == null) {\n                int = (int) * (int);\n            } else {\n                for (final int int : array) {\n                    append(element);\n                }\n            }\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array","rhs":"array"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:549","type":"CtBinaryOperatorImpl","sourcecode":"power == 0"},"failures":[],"tindex":"c17aa4dd-2e8f-11e6-961b-8f9f468b4223","method":{"position":"org.apache.commons.lang3.CharUtils:285","type":"CtMethodImpl","sourcecode":"public static int toIntValue(final java.lang.Character ch, final int defaultValue) {\n    if (defaultValue == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (ch == null) {\n                return defaultValue;\n            } \n            return org.apache.commons.lang3.CharUtils.toIntValue(ch.charValue(), defaultValue);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"power":"defaultValue"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5429","type":"CtBinaryOperatorImpl","sourcecode":"pads < padLen"},"failures":[248],"tindex":"c17acbee-2e8f-11e6-961b-5d49ce4ad2b2","method":{"position":"org.apache.commons.lang3.ArrayUtils:1034","type":"CtMethodImpl","sourcecode":"public static char[] subarray(final char[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (endIndexExclusive < startIndexInclusive) {\n        {\n            if (array == null) {\n                return null;\n            } \n            if (startIndexInclusive < 0) {\n                startIndexInclusive = 0;\n            } \n            if (endIndexExclusive > (array.int)) {\n                endIndexExclusive = array.int;\n            } \n            final int int = endIndexExclusive - startIndexInclusive;\n            if (newSize <= 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.char[];\n            } \n            final char[] char[] = new char[newSize];\n            java.lang.System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);\n            return subarray;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pads":"endIndexExclusive","padLen":"startIndexInclusive"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2080","type":"CtBinaryOperatorImpl","sourcecode":"len > (size)"},"failures":[],"tindex":"c17acbef-2e8f-11e6-961b-65f3c22a88a7","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1575","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder insert(int index, final boolean value) {\n    if (index > index) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            validateIndex(index);\n            if (value) {\n                ensureCapacity(((int) + 4));\n                java.lang.System.arraycopy(char[], index, char[], (index + 4), ((int) - index));\n                char[][(index++)] = 't';\n                char[][(index++)] = 'r';\n                char[][(index++)] = 'u';\n                char[][index] = 'e';\n                int += 4;\n            } else {\n                ensureCapacity(((int) + 5));\n                java.lang.System.arraycopy(char[], index, char[], (index + 5), ((int) - index));\n                char[][(index++)] = 'f';\n                char[][(index++)] = 'a';\n                char[][(index++)] = 'l';\n                char[][(index++)] = 's';\n                char[][index] = 'e';\n                int += 5;\n            }\n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"index","size":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:200","type":"CtBinaryOperatorImpl","sourcecode":"length < 0"},"failures":[],"tindex":"c17af300-2e8f-11e6-961b-a90f6429ab9d","method":{"position":"org.apache.commons.lang3.math.Fraction:576","type":"CtMethodImpl","sourcecode":"private static int greatestCommonDivisor(int u, int v) {\n    if (v < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((u == 0) || (v == 0)) {\n                if ((u == (java.lang.Integer.java.lang.Integer.int)) || (v == (java.lang.Integer.java.lang.Integer.int))) {\n                    throw new java.lang.ArithmeticException(\"overflow: gcd is 2^31\");\n                } \n                return (java.lang.Math.abs(u)) + (java.lang.Math.abs(v));\n            } \n            if (((java.lang.Math.abs(u)) == 1) || ((java.lang.Math.abs(v)) == 1)) {\n                return 1;\n            } \n            if (u > 0) {\n                u = -u;\n            } \n            if (v > 0) {\n                v = -v;\n            } \n            int int = 0;\n            while ((((u & 1) == 0) && ((v & 1) == 0)) && (k < 31)) {\n                u /= 2;\n                v /= 2;\n                k++;\n            }\n            if (k == 31) {\n                throw new java.lang.ArithmeticException(\"overflow: gcd is 2^31\");\n            } \n            int int = (u & 1) == 1 ? v : -(u / 2);\n            do {\n                while ((t & 1) == 0) {\n                    t /= 2;\n                }\n                if (t > 0) {\n                    u = -t;\n                } else {\n                    v = t;\n                }\n                t = (v - u) / 2;\n            } while (t != 0 );\n            return (-u) * (1 << k);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"v"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:64","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[249],"tindex":"c17af301-2e8f-11e6-961b-1d46e936b249","method":{"position":"org.apache.commons.lang3.ArrayUtils:4966","type":"CtMethodImpl","sourcecode":"public static float[] removeElement(final float[] array, final float element) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = org.apache.commons.lang3.ArrayUtils.indexOf(array, element);\n            if (index == (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int)) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            return org.apache.commons.lang3.ArrayUtils.remove(array, index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5299","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"c17b1a12-2e8f-11e6-961b-bbebc29cda00","method":{"position":"org.apache.commons.lang3.StringUtils:4457","type":"CtMethodImpl","sourcecode":"public static java.lang.String removePattern(final java.lang.String source, final java.lang.String regex) {\n    if (source == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.replacePattern(source, regex, org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"source"},"type":"special","returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":36,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}