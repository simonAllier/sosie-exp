{"failureDictionary":{"org.apache.commons.lang3.text.StrBuilderTest.testDeleteFirst_String":24,"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":419,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":117,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":289,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":305,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":112,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":283,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":194,"org.apache.commons.lang3.builder.CompareToBuilderTest.testBoolean":141,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testConstantFuture_null":401,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":147,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":150,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":420,"org.apache.commons.lang3.ArrayUtilsTest.testIsEmptyPrimitives":357,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":109,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArrayEqualAsObject":430,"org.apache.commons.lang3.time.FastDateParserTest.testLANG_832":57,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":104,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiBooleanArray":332,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddDash":376,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_AD":86,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":166,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":263,"org.apache.commons.lang3.time.FastDatePrinterTest.testEquals":133,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":183,"org.apache.commons.lang3.text.StrBuilderTest.testContains_StrMatcher":452,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparators_Array":19,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDefaults":136,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":185,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":300,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":428,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_char":512,"org.apache.commons.lang3.text.StrBuilderTest.testGetSetNewLineText":462,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":193,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_primitive_emptyInput":450,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":163,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":222,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":417,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":195,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringCharArrayWithSupplementaryChars":347,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringStringarray":391,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":308,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":100,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_1Part":42,"org.apache.commons.lang3.text.StrLookupTest.testMapLookup":459,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_BC":64,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":275,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":310,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":101,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testConstantFuture_Integer":400,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":279,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_BC":87,"org.apache.commons.lang3.reflect.TypeLiteralTest.testEquals":476,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testLongArrayAsObject":413,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOf_StrMatcher_int":451,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":246,"org.apache.commons.lang3.reflect.TypeLiteralTest.testBasic":474,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":282,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringString":364,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":367,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_AD":63,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":218,"org.apache.commons.lang3.math.FractionTest.testDivide":446,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_int_int_String":455,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":153,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringCharArrayWithSupplementaryChars":342,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringCharArrayWithBadSupplementaryChars":344,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":264,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":257,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSizeStartText":494,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeEx":9,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":169,"org.apache.commons.lang3.AnnotationUtilsTest.testNonEquivalentAnnotationsOfSameType":489,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StringBuilder":18,"org.apache.commons.lang3.time.FastDateParserTest.testParseNumerics":54,"org.apache.commons.lang3.CharUtilsTest.testToString_char":96,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":208,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":148,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringString":346,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":160,"org.apache.commons.lang3.AnnotationUtilsTest.testSameInstance":483,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":110,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseChecked":1,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":149,"org.apache.commons.lang3.CharSetTest.testConstructor_String_simple":358,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":189,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":128,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":254,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":111,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":174,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_2Part":43,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOf_char":399,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":304,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":429,"org.apache.commons.lang3.AnnotationUtilsTest.testEquivalence":484,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":373,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringString":348,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseError":7,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithNullText":15,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_AD":61,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":155,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteAll_StrMatcher":26,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetContentEnd":493,"org.apache.commons.lang3.time.FastDateParserTest.testDayOf":48,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":170,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseNumerics":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":253,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringString":387,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":238,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang538":79,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":268,"org.apache.commons.lang3.CharSetTest.testContains_Char":379,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":317,"org.apache.commons.lang3.time.DateFormatUtilsTest.testConstructor":368,"org.apache.commons.lang3.builder.DiffBuilderTest.testStylePassedToDiffResult":426,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":204,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":290,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testLongArray":411,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":213,"org.apache.commons.lang3.math.FractionTest.testReducedFactory_int_int":441,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":241,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetTypeArguments":477,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":157,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":168,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang303":78,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":182,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":179,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":423,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationPluralWords":35,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":301,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetCheckedException":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":232,"org.apache.commons.lang3.CharRangeTest.testIterator":363,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":231,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":60,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":303,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_BC":85,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":199,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":237,"org.apache.commons.lang3.StringUtilsTest.testIsAllLowerCase":38,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testArrayList":509,"org.apache.commons.lang3.StringUtilsTest.testRepeat_StringInt":338,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":252,"org.apache.commons.lang3.builder.DiffBuilderTest.testSimilarObjectIgnoresAppends":505,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testBlank":200,"org.apache.commons.lang3.mutable.MutableObjectTest.testEquals":460,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":251,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":119,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":152,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":188,"org.apache.commons.lang3.StringUtilsTest.testRightPad_StringIntChar":339,"org.apache.commons.lang3.builder.DiffResultTest.testNullStyle":465,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":240,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_AD":84,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsInstance":478,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":144,"org.apache.commons.lang3.StringUtilsTest.testRepeat_StringStringInt":91,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsOnly_CharArray":352,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":274,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":172,"org.apache.commons.lang3.LocaleUtilsTest.testLang328":39,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":210,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":225,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":316,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":314,"org.apache.commons.lang3.builder.DiffBuilderTest.testNullLhs":507,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":106,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSummaryObjectEndText":504,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":103,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":427,"org.apache.commons.lang3.ValidateTest.testMatchesPattern_withMessage":331,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":196,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":280,"org.apache.commons.lang3.math.FractionTest.testAdd":442,"org.apache.commons.lang3.mutable.MutableIntTest.testAddValuePrimitive":93,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":156,"org.apache.commons.lang3.builder.DiffTest.testGetFieldName":469,"org.apache.commons.lang3.builder.DiffBuilderTest.testSameObjectIgnoresAppends":506,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testLong":409,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsOnly_String":343,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":403,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":277,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":288,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":217,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetArraySeparator":502,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":229,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":425,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddCombinations":381,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":315,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_AD":81,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":161,"org.apache.commons.lang3.StringUtilsTest.testLeftPad_StringIntChar":337,"org.apache.commons.lang3.ArrayUtilsTest.testToMap":406,"org.apache.commons.lang3.CharSetTest.testGetInstance":384,"org.apache.commons.lang3.builder.DiffTest.testToString":470,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testLinkedList":511,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseError":3,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":433,"org.apache.commons.lang3.time.FastDateParserTest.testAmPm":50,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAnyBut_StringCharArrayWithSupplementaryChars":349,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":220,"org.apache.commons.lang3.time.FastDateFormatTest.testLang954":369,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_BC":82,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_BC":76,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringCharArray":355,"org.apache.commons.lang3.AnnotationUtilsTest.testGeneratedAnnotationEquivalentToRealAnnotation":487,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":436,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":270,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":108,"org.apache.commons.lang3.builder.CompareToBuilderTest.testShortArrayHiddenByObject":396,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":421,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":190,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringStringarray":394,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testDouble":412,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":187,"org.apache.commons.lang3.CharSetTest.testConstructor_String_combo":380,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationHMS":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":284,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":165,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringWithSupplementaryChars":351,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseNull":4,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang645":145,"org.apache.commons.lang3.text.StrLookupTest.testMapLookup_nullMap":458,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":216,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":255,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance":438,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testSpecialCharacters":68,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":292,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAnyBut_StringCharArray":350,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParses":88,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":245,"org.apache.commons.lang3.text.StrLookupTest.testSystemProperiesLookup":456,"org.apache.commons.lang3.reflect.TypeUtilsTest.testTypesSatisfyVariables":480,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOf_StrMatcher":453,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetFieldNameValueSeparator":498,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_StrMatcher":28,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":125,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringStringarray":393,"org.apache.commons.lang3.reflect.TypeLiteralTest.testRaw":473,"org.apache.commons.lang3.StringUtilsTest.testLeftPad_StringInt":90,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":319,"org.apache.commons.lang3.ClassUtilsTest.test_isInnerClass_Class":454,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSimpleGet":30,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testDayOf":71,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testMilleniumBug":70,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvString":340,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayDouble":513,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":233,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":224,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSizeEndText":497,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testQuotes":89,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":374,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringWithBadSupplementaryChars":345,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":294,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":116,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":205,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringCharArray":354,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":402,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":287,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":330,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringString":392,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSplit":31,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":286,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone":371,"org.apache.commons.lang3.time.DateUtilsTest.testSetYears":92,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":201,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":159,"org.apache.commons.lang3.CharSetTest.testHashCode":382,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isNot":361,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":311,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":212,"org.apache.commons.lang3.builder.DiffResultTest.testListIsNonModifiable":464,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String":370,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDifferingStyles":137,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":98,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testDoubleArrayAsObject":410,"org.apache.commons.lang3.ObjectUtilsTest.testHashCodeMulti_multiple_nullArray":405,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_StrMatcher_int":29,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_StringBuffer_int_int":94,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":221,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":198,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiShortArray":398,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiBooleanArray":140,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":258,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StrBuilder":16,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":366,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePartialString_noReplace":129,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDefaults":138,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementCharArray":356,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseNullCause":5,"org.apache.commons.lang3.builder.DiffResultTest.testNullRhs":468,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":127,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":175,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":291,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_String":17,"org.apache.commons.lang3.time.FastDateParserTest.testSpecialCharacters":45,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":202,"org.apache.commons.lang3.time.FastDateParserTest.testLowYearPadding":51,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_AD":75,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":105,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":259,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":269,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":167,"org.apache.commons.lang3.math.FractionTest.testMultiply":447,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":215,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetRawType":481,"org.apache.commons.lang3.time.FastDateFormatTest.testDateDefaults":135,"org.apache.commons.lang3.time.FastDateParserTest.testMilleniumBug":47,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":219,"org.apache.commons.lang3.CharSetTest.testEquals_Object":378,"org.apache.commons.lang3.builder.CompareToBuilderTest.testShortArray":397,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringStringarray":388,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":207,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDateDefaults":134,"org.apache.commons.lang3.builder.CompareToBuilderTest.testShort":395,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":164,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":223,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":296,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":146,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":306,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":83,"org.apache.commons.lang3.time.FastDateParserTest.testParseZone":49,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseNull":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":261,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmpty":12,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":313,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":235,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringStringWithSupplementaryChars":353,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_primitive_nullInput":449,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":424,"org.apache.commons.lang3.time.FastDateParserTest.testLang538":56,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendNewLine":461,"org.apache.commons.lang3.time.FastDateParserTest.testLang303":55,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":230,"org.apache.commons.lang3.AnnotationUtilsTest.testBothArgsNull":488,"org.apache.commons.lang3.LocaleUtilsTest.testThreeCharsLocale":40,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_AD":52,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":307,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":295,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":285,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetNullText":496,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLANG984":33,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLANG982":32,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":173,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorNoArgs":114,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":236,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":272,"org.apache.commons.lang3.StringUtilsTest.testGetCommonPrefix_StringArray":365,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":243,"org.apache.commons.lang3.builder.DiffTest.testCannotModify":471,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":186,"org.apache.commons.lang3.BitFieldTest.testIsAllSet":375,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":434,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":154,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":197,"org.apache.commons.lang3.AnnotationUtilsTest.testOneArgNull":482,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationWords":37,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_BC":53,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":479,"org.apache.commons.lang3.reflect.TypeUtilsTest.testDetermineTypeVariableAssignments":440,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":422,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":437,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":162,"org.apache.commons.lang3.builder.DiffResultTest.testNullList":491,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":176,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":248,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseZone":72,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":180,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":271,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":262,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvWriter":341,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_3Part":44,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":118,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringString":390,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":99,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":184,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testBlank":298,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeResultsIsSuccessfulFalse":10,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringStringarray":389,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":309,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":249,"org.apache.commons.lang3.builder.DiffResultTest.testIterator":466,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":278,"org.apache.commons.lang3.builder.DiffResultTest.testNoDifferencesString":492,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":234,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":181,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":123,"org.apache.commons.lang3.text.StrBuilderTest.testConstructors":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":273,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":416,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":256,"org.apache.commons.lang3.StringUtilsTest.testRemoveStart":448,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparators_Collection":13,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayBoolean":335,"org.apache.commons.lang3.ArrayUtilsTest.testIsEquals":336,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":320,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":418,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":126,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":209,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":435,"org.apache.commons.lang3.reflect.TypeLiteralTest.testTyped":475,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":281,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":239,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_BC":59,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":113,"org.apache.commons.lang3.builder.CompareToBuilderTest.testBooleanArray":142,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":432,"org.apache.commons.lang3.ConversionTest.testHexToInt":27,"org.apache.commons.lang3.builder.EqualsBuilderTest.testBooleanArrayHiddenByObject":334,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testDoubleArray":414,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":69,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":191,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":178,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":302,"org.apache.commons.lang3.StringUtilsTest.testAppendIfMissing":97,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteAll_char":22,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoVariables":120,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":122,"org.apache.commons.lang3.AnnotationUtilsTest.testAnnotationsOfDifferingTypes":485,"org.apache.commons.lang3.math.FractionTest.testFactory_double":445,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyShortEmptyArray":130,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":431,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_Locale":372,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":124,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testCopyOnWriteArrayList":510,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":260,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testEquals":139,"org.apache.commons.lang3.builder.DiffResultTest.testNullLhs":467,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":102,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectAtIndex":95,"org.apache.commons.lang3.CharUtilsTest.testToString_Character":404,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":203,"org.apache.commons.lang3.ArrayUtilsTest.testToString":329,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseChecked":2,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstring_StringInt":408,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetContentStart":495,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteFirst_char":25,"org.apache.commons.lang3.CharSetTest.testGetInstance_Stringarray":383,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyShortNull":131,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDuration":36,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":107,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":226,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":151,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_BC":62,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":299,"org.apache.commons.lang3.builder.CompareToBuilderTest.testBooleanArrayHiddenByObject":143,"org.apache.commons.lang3.text.StrLookupTest.testNoneLookup":457,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOf_String":407,"org.apache.commons.lang3.CharSetTest.testSerialization":377,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testAmPm":73,"org.apache.commons.lang3.text.StrBuilderTest.testChaining":463,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddNegate":360,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSummaryObjectStartText":500,"org.apache.commons.lang3.AnnotationUtilsTest.testHashCode":486,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":250,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteFirst_StrMatcher":20,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteAll_String":21,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_AD":58,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":214,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":115,"org.apache.commons.lang3.CharSetTest.testStatics":385,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparators_Iterator":14,"org.apache.commons.lang3.builder.DiffTest.testGetType":472,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":192,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":276,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":265,"org.apache.commons.lang3.text.StrTokenizerTest.test8":328,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":171,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLowYearPadding":74,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLANG_832":80,"org.apache.commons.lang3.text.StrTokenizerTest.test5":325,"org.apache.commons.lang3.text.StrTokenizerTest.test4":324,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":266,"org.apache.commons.lang3.text.StrTokenizerTest.test7":327,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":267,"org.apache.commons.lang3.text.StrTokenizerTest.test6":326,"org.apache.commons.lang3.text.StrTokenizerTest.test1":321,"org.apache.commons.lang3.LocaleUtilsTest.testParseAllLocales":41,"org.apache.commons.lang3.text.StrTokenizerTest.test3":323,"org.apache.commons.lang3.text.StrTokenizerTest.test2":322,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":242,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetFieldSeparator":501,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":312,"org.apache.commons.lang3.ArrayUtilsTest.testContainsDouble":439,"org.apache.commons.lang3.AnnotationUtilsTest.testIsValidAnnotationMemberType":490,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":206,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":67,"org.apache.commons.lang3.CharRangeTest.testContains_Charrange":362,"org.apache.commons.lang3.math.FractionTest.testSubtract":444,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":228,"org.apache.commons.lang3.time.FastDateParserTest.testQuotes":66,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testEquals":132,"org.apache.commons.lang3.math.FractionTest.testPow":443,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":211,"org.apache.commons.lang3.builder.EqualsBuilderTest.testBooleanArray":333,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetArrayEnd":499,"org.apache.commons.lang3.ArrayUtilsTest.testHashCode":415,"org.apache.commons.lang3.builder.DiffBuilderTest.testNullRhs":508,"org.apache.commons.lang3.time.FastDateParserTest.testParses":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":227,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":11,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetArrayStart":503,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringString":386,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":318,"org.apache.commons.lang3.CharSetTest.testConstructor_String_comboNegated":359,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":293,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":247,"org.apache.commons.lang3.mutable.MutableBooleanTest.testGetSet":0,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":158,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":177,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":121,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":244,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":297},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:343","type":"CtFieldReadImpl","sourcecode":"objectsTriviallyEqual"},"failures":[0],"tindex":"fb015e12-2e79-11e6-8751-477701961822","method":{"position":"org.apache.commons.lang3.mutable.MutableBoolean:87","type":"CtMethodImpl","sourcecode":"public void setValue(final boolean value) {\n    if (value) {\n        {\n            org.apache.commons.lang3.mutable.MutableBoolean.this.boolean = value;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsTriviallyEqual":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:159","type":"CtBinaryOperatorImpl","sourcecode":"(ex.getCause()) instanceof java.lang.RuntimeException"},"failures":[1,2,3,4,5,6,7,8,9,10],"tindex":"fb024873-2e79-11e6-8751-119a21434c85","method":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:60","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.concurrent.ConcurrentException extractCause(final java.util.concurrent.ExecutionException ex) {\n    if ((ex.getCause()) instanceof java.lang.RuntimeException) {\n        {\n            if ((ex == null) || ((ex.getCause()) == null)) {\n                return null;\n            } \n            org.apache.commons.lang3.concurrent.ConcurrentUtils.throwCause(ex);\n            return new org.apache.commons.lang3.concurrent.ConcurrentException(ex.getMessage() , ex.getCause());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ex":"ex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:297","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(className)"},"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"fb024874-2e79-11e6-8751-4d58f123226e","method":{"position":"org.apache.commons.lang3.text.StrBuilder:509","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder append(final java.lang.String str) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return appendNull();\n            } \n            final int int = str.length();\n            if (strLen > 0) {\n                final int int = length();\n                ensureCapacity((len + strLen));\n                str.getChars(0, strLen, char[], len);\n                int += strLen;\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"className":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6765","type":"CtBinaryOperatorImpl","sourcecode":"n == 0"},"failures":[27],"tindex":"fb026f85-2e79-11e6-8751-fd4dc06a9343","method":{"position":"org.apache.commons.lang3.Conversion:938","type":"CtMethodImpl","sourcecode":"public static int hexToInt(final java.lang.String src, final int srcPos, final int dstInit, final int dstPos, final int nHex) {\n    if (dstInit == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (0 == nHex) {\n                return dstInit;\n            } \n            if ((((nHex - 1) * 4) + dstPos) >= 32) {\n                throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+dstPos is greather or equal to than 32\");\n            } \n            int int = dstInit;\n            int int = 0;\n            for (int int = 0 ; i < nHex ; i++) {\n                shift = (i * 4) + dstPos;\n                final int int = (15 & (org.apache.commons.lang3.Conversion.hexDigitToInt(src.charAt((i + srcPos))))) << shift;\n                final int int = 15 << shift;\n                out = (out & (~mask)) | bits;\n            }\n            return out;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"dstInit"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:179","type":"CtBinaryOperatorImpl","sourcecode":"wrapLength < 1"},"failures":[28,29],"tindex":"fb029696-2e79-11e6-8751-cd718c96d323","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2512","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final org.apache.commons.lang3.text.StrMatcher matcher, int startIndex) {\n    if (startIndex < 1) {\n        {\n            startIndex = startIndex >= (int) ? (int) - 1 : startIndex;\n            if ((matcher == null) || (startIndex < 0)) {\n                return -1;\n            } \n            final char[] char[] = char[];\n            final int int = startIndex + 1;\n            for (int int = startIndex ; i >= 0 ; i--) {\n                if ((matcher.isMatch(buf, i, 0, endIndex)) > 0) {\n                    return i;\n                } \n            }\n            return -1;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"wrapLength":"startIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:516","type":"CtVariableReadImpl","sourcecode":"detail"},"failures":[30,31,32,33,34,35,36,37],"tindex":"fb02bda7-2e79-11e6-8751-c1ae56dd9e90","method":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:126","type":"CtMethodImpl","sourcecode":"public static java.lang.String formatDuration(final long durationMillis, final java.lang.String format, final boolean padWithZeros) {\n    if (padWithZeros) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.lang3.time.DurationFormatUtils.Token[] org.apache.commons.lang3.time.DurationFormatUtils.Token[] = org.apache.commons.lang3.time.DurationFormatUtils.lexx(format);\n            long long = 0;\n            long long = 0;\n            long long = 0;\n            long long = 0;\n            long long = durationMillis;\n            if (org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(tokens, org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n                days = milliseconds / (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.long);\n                milliseconds = milliseconds - (days * (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.long));\n            } \n            if (org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(tokens, org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n                hours = milliseconds / (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.long);\n                milliseconds = milliseconds - (hours * (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.long));\n            } \n            if (org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(tokens, org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n                minutes = milliseconds / (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.long);\n                milliseconds = milliseconds - (minutes * (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.long));\n            } \n            if (org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(tokens, org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n                seconds = milliseconds / (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.long);\n                milliseconds = milliseconds - (seconds * (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.long));\n            } \n            return org.apache.commons.lang3.time.DurationFormatUtils.format(tokens, 0, 0, days, hours, minutes, seconds, milliseconds, padWithZeros);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"detail":"padWithZeros"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:1121","type":"CtInvocationImpl","sourcecode":"className.startsWith(\"L\")"},"failures":[],"tindex":"fb030bc8-2e79-11e6-8751-e576925f6999","method":{"position":"org.apache.commons.lang3.ArrayUtils:6062","type":"CtMethodImpl","sourcecode":"static java.lang.Object removeAll(final java.lang.Object array, final java.util.BitSet indices) {\n    if (array.startsWith(\"L\")) {\n        {\n            final int int = org.apache.commons.lang3.ArrayUtils.getLength(array);\n            final int int = indices.cardinality();\n            final java.lang.Object java.lang.Object = java.lang.reflect.Array.newInstance(array.getClass().getComponentType(), (srcLength - removals));\n            int int = 0;\n            int int = 0;\n            int int;\n            int int;\n            while ((set = indices.nextSetBit(srcIndex)) != (-1)) {\n                count = set - srcIndex;\n                if (count > 0) {\n                    java.lang.System.arraycopy(array, srcIndex, result, destIndex, count);\n                    destIndex += count;\n                } \n                srcIndex = indices.nextClearBit(set);\n            }\n            count = srcLength - srcIndex;\n            if (count > 0) {\n                java.lang.System.arraycopy(array, srcIndex, result, destIndex, count);\n            } \n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"className":"array"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2054","type":"CtBinaryOperatorImpl","sourcecode":"len < (size)"},"failures":[],"tindex":"fb030bc9-2e79-11e6-8751-59239b13e967","method":{"position":"org.apache.commons.lang3.StringUtils:3906","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final float[] array, final char separator, final int startIndex, final int endIndex) {\n    if (startIndex < startIndex) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            final int int = endIndex - startIndex;\n            if (noOfItems <= 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder((noOfItems * 16));\n            for (int int = startIndex ; i < endIndex ; i++) {\n                if (i > startIndex) {\n                    buf.append(separator);\n                } \n                buf.append(array[i]);\n            }\n            return buf.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"startIndex","size":"startIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.SystemUtils:1448","type":"CtBinaryOperatorImpl","sourcecode":"(osName == null) || (osVersion == null)"},"failures":[38,39,40,41,42,43,44],"tindex":"fb0332da-2e79-11e6-8751-1dc7475a0ad0","method":{"position":"org.apache.commons.lang3.StringUtils:6135","type":"CtMethodImpl","sourcecode":"public static boolean isAllLowerCase(final java.lang.CharSequence cs) {\n    if ((cs == null) || (cs == null)) {\n        {\n            if ((cs == null) || (org.apache.commons.lang3.StringUtils.isEmpty(cs))) {\n                return false;\n            } \n            final int int = cs.length();\n            for (int int = 0 ; i < sz ; i++) {\n                if ((java.lang.Character.isLowerCase(cs.charAt(i))) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"osVersion":"cs","osName":"cs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6765","type":"CtBinaryOperatorImpl","sourcecode":"n == 0"},"failures":[45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89],"tindex":"fb0359eb-2e79-11e6-8751-2903e3ae5a16","method":{"position":"org.apache.commons.lang3.time.FastDateParser:684","type":"CtMethodImpl","sourcecode":"int modify(final int iValue) {\n    if (iValue == 0) {\n        {\n            return iValue;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"n":"iValue"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.StringUtils:2119","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"fb0380fc-2e79-11e6-8751-5932e904a07a","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:530","type":"CtMethodImpl","sourcecode":"public static void writeStaticField(final java.lang.Class<?> cls, final java.lang.String fieldName, final java.lang.Object value) throws java.lang.IllegalAccessException {\n    if (fieldName == null) {\n        throw new java.lang.IllegalAccessException();\n    } else {\n        {\n            org.apache.commons.lang3.reflect.FieldUtils.writeStaticField(cls, fieldName, value, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:465","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[90],"tindex":"fb0380fd-2e79-11e6-8751-6be826742123","method":{"position":"org.apache.commons.lang3.StringUtils:5348","type":"CtMethodImpl","sourcecode":"public static java.lang.String leftPad(final java.lang.String str, final int size) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.leftPad(str, size, ' ');\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5315","type":"CtBinaryOperatorImpl","sourcecode":"pads == padLen"},"failures":[91],"tindex":"fb0380fe-2e79-11e6-8751-139ee4546a12","method":{"position":"org.apache.commons.lang3.StringUtils:5178","type":"CtMethodImpl","sourcecode":"public static java.lang.String repeat(final java.lang.String str, final java.lang.String separator, final int repeat) {\n    if (repeat == repeat) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((str == null) || (separator == null)) {\n                return org.apache.commons.lang3.StringUtils.repeat(str, repeat);\n            } \n            final java.lang.String java.lang.String = org.apache.commons.lang3.StringUtils.repeat((str + separator), repeat);\n            return org.apache.commons.lang3.StringUtils.removeEnd(result, separator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pads":"repeat","padLen":"repeat"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:6038","type":"CtBinaryOperatorImpl","sourcecode":"(end - index) > 1"},"failures":[92],"tindex":"fb03a80f-2e79-11e6-8751-79b46b590a24","method":{"position":"org.apache.commons.lang3.time.DateUtils:538","type":"CtMethodImpl","sourcecode":"public static java.util.Date setYears(final java.util.Date date, final int amount) {\n    if ((amount - amount) > 1) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.set(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"amount","end":"amount"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:551","type":"CtBinaryOperatorImpl","sourcecode":"power < 0"},"failures":[93],"tindex":"fb03cf20-2e79-11e6-8751-91bb7f674986","method":{"position":"org.apache.commons.lang3.mutable.MutableInt:137","type":"CtMethodImpl","sourcecode":"public void add(final int operand) {\n    if (operand < 0) {\n        {\n            org.apache.commons.lang3.mutable.MutableInt.this.int += operand;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"power":"operand"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.reflect.InvocationTargetException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:738","type":"CtBinaryOperatorImpl","sourcecode":"rhs == null"},"failures":[],"tindex":"fb03cf21-2e79-11e6-8751-0b08ce3bb514","method":{"position":"org.apache.commons.lang3.reflect.MethodUtils:92","type":"CtMethodImpl","sourcecode":"public static java.lang.Object invokeMethod(final java.lang.Object object, final java.lang.String methodName, java.lang.Object... args) throws java.lang.IllegalAccessException, java.lang.NoSuchMethodException, java.lang.reflect.InvocationTargetException {\n    if (object == null) {\n        throw new java.lang.reflect.InvocationTargetException();\n    } else {\n        {\n            args = org.apache.commons.lang3.ArrayUtils.nullToEmpty(args);\n            final java.lang.Class<?>[] java.lang.Class<?>[] = org.apache.commons.lang3.ClassUtils.toClass(args);\n            return org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(object, methodName, args, parameterTypes);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"rhs":"object"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:912","type":"CtBinaryOperatorImpl","sourcecode":"(toString) == null"},"failures":[],"tindex":"fb03f632-2e79-11e6-8751-619e8b17c7b7","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:884","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrTokenizer setDelimiterString(final java.lang.String delim) {\n    if (delim == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return setDelimiterMatcher(org.apache.commons.lang3.text.StrMatcher.stringMatcher(delim));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toString":"delim"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1327","type":"CtBinaryOperatorImpl","sourcecode":"(((nBytes - 1) * 8) + srcPos) >= 32"},"failures":[],"tindex":"fb03f633-2e79-11e6-8751-57120fbeca4b","method":{"position":"org.apache.commons.lang3.time.DateUtils:1761","type":"CtMethodImpl","sourcecode":"public static int truncatedCompareTo(final java.util.Calendar cal1, final java.util.Calendar cal2, final int field) {\n    if ((((field - 1) * 8) + field) >= 32) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Calendar java.util.Calendar = org.apache.commons.lang3.time.DateUtils.truncate(cal1, field);\n            final java.util.Calendar java.util.Calendar = org.apache.commons.lang3.time.DateUtils.truncate(cal2, field);\n            return truncatedCal1.compareTo(truncatedCal2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nBytes":"field","srcPos":"field"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4957","type":"CtBinaryOperatorImpl","sourcecode":"start > end"},"failures":[94],"tindex":"fb041d44-2e79-11e6-8751-3ffd14732df1","method":{"position":"org.apache.commons.lang3.text.StrBuilder:942","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendln(final java.lang.StringBuffer str, final int startIndex, final int length) {\n    if (startIndex > length) {\n        {\n            return append(str, startIndex, length).appendNewLine();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"startIndex","end":"length"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:533","type":"CtBinaryOperatorImpl","sourcecode":"(array == null) || ((array.length) == 0)"},"failures":[95],"tindex":"fb041d45-2e79-11e6-8751-3d1ad50563ca","method":{"position":"org.apache.commons.lang3.ArrayUtils:4482","type":"CtMethodImpl","sourcecode":"public static long[] add(final long[] array, final int index, final long element) {\n    if ((array == null) || (index == 0)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((long[])(org.apache.commons.lang3.ArrayUtils.add(array, index, java.lang.Long.valueOf(element), java.lang.Long.java.lang.Long.java.lang.Class<java.lang.Long>)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array","length":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:308","type":"CtBinaryOperatorImpl","sourcecode":"ch < 128"},"failures":[96],"tindex":"fb044456-2e79-11e6-8751-0919b5bdfa59","method":{"position":"org.apache.commons.lang3.CharUtils:307","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(final char ch) {\n    if (ch < 128) {\n        {\n            if (ch < 128) {\n                return org.apache.commons.lang3.CharUtils.org.apache.commons.lang3.CharUtils.java.lang.String[][ch];\n            } \n            return new java.lang.String(new char[]{ ch });\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:694","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[97],"tindex":"fb044457-2e79-11e6-8751-c3e70167d08e","method":{"position":"org.apache.commons.lang3.StringUtils:7459","type":"CtMethodImpl","sourcecode":"public static java.lang.String appendIfMissing(final java.lang.String str, final java.lang.CharSequence suffix, final java.lang.CharSequence... suffixes) {\n    if (suffix == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.appendIfMissing(str, suffix, false, suffixes);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"suffix"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"((((ch0 == 't') || (ch0 == 'T')) && ((ch1 == 'r') || (ch1 == 'R'))) && ((ch2 == 'u') || (ch2 == 'U'))) && ((ch3 == 'e') || (ch3 == 'E'))"},"failures":[],"tindex":"fb046b68-2e79-11e6-8751-8bf40af208cd","method":{"position":"org.apache.commons.lang3.text.translate.OctalUnescaper:68","type":"CtMethodImpl","sourcecode":"private boolean isOctalDigit(char ch) {\n    if (((((ch == 't') || (ch0 == 'T')) && ((ch == 'r') || (ch1 == 'R'))) && ((ch == 'u') || (ch2 == 'U'))) && ((ch == 'e') || (ch3 == 'E'))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (ch >= '0') && (ch <= '7');\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch0":"ch","ch2":"ch","ch1":"ch","ch3":"ch"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:4575","type":"CtBinaryOperatorImpl","sourcecode":"index < length"},"failures":[98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,11,118,119,120,121,122,123,124,125,126,127,12,128,129],"tindex":"fb046b69-2e79-11e6-8751-01c82a61d79d","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:734","type":"CtMethodImpl","sourcecode":"protected boolean substitute(final org.apache.commons.lang3.text.StrBuilder buf, final int offset, final int length) {\n    if (offset < offset) {\n        {\n            return (substitute(buf, offset, length, null)) > 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"offset","index":"offset"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5445","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))"},"failures":[130,131],"tindex":"fb04927a-2e79-11e6-8751-1358c25ea40a","method":{"position":"org.apache.commons.lang3.ArrayUtils:572","type":"CtMethodImpl","sourcecode":"public static short[] nullToEmpty(final short[] array) {\n    if ((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(array))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((array == null) || ((array.int) == 0)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.short[];\n            } \n            return array;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array","values":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:135","type":"CtBinaryOperatorImpl","sourcecode":"name == null"},"failures":[132,133,134,135,136,137,138,139],"tindex":"fb04927b-2e79-11e6-8751-5945a4dc37f6","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:528","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if ((obj instanceof org.apache.commons.lang3.time.FastDatePrinter) == false) {\n                return false;\n            } \n            final org.apache.commons.lang3.time.FastDatePrinter org.apache.commons.lang3.time.FastDatePrinter = ((org.apache.commons.lang3.time.FastDatePrinter)(obj));\n            return ((java.lang.String.equals(other.java.lang.String)) && (java.util.TimeZone.equals(other.java.util.TimeZone))) && (java.util.Locale.equals(other.java.util.Locale));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:544","type":"CtVariableReadImpl","sourcecode":"detail"},"failures":[140,141,142,143],"tindex":"fb04b98c-2e79-11e6-8751-c97c137ade59","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:584","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final boolean lhs, final boolean rhs) {\n    if (lhs) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == false) {\n                int = -1;\n            } else {\n                int = +1;\n            }\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"detail":"lhs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:388","type":"CtBinaryOperatorImpl","sourcecode":"(java.lang.Double.doubleToLongBits(lhs)) != (java.lang.Double.doubleToLongBits(rhs))"},"failures":[],"tindex":"fb04b98d-2e79-11e6-8751-972572ba1462","method":{"position":"org.apache.commons.lang3.mutable.MutableDouble:156","type":"CtMethodImpl","sourcecode":"public void add(final double operand) {\n    if ((java.lang.Double.doubleToLongBits(operand)) != (java.lang.Double.doubleToLongBits(operand))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.mutable.MutableDouble.this.double += operand;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"operand","rhs":"operand"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:518","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176],"tindex":"fb04e09e-2e79-11e6-8751-055e3c6337c5","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:423","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.String format(final java.util.Date date) {\n    if (date == null) {\n        {\n            return org.apache.commons.lang3.time.FastDatePrinter.format(date);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:430","type":"CtBinaryOperatorImpl","sourcecode":"cls == null"},"failures":[],"tindex":"fb04e09f-2e79-11e6-8751-991d57ae9e2a","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:844","type":"CtMethodImpl","sourcecode":"private static java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> getTypeArguments(final java.lang.reflect.ParameterizedType parameterizedType, final java.lang.Class<?> toClass, final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> subtypeVarAssigns) {\n    if (toClass == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Class<?> java.lang.Class<?> = org.apache.commons.lang3.reflect.TypeUtils.getRawType(parameterizedType);\n            if (!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(cls, toClass))) {\n                return null;\n            } \n            final java.lang.reflect.Type java.lang.reflect.Type = parameterizedType.getOwnerType();\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>;\n            if (ownerType instanceof java.lang.reflect.ParameterizedType) {\n                final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(ownerType));\n                typeVarAssigns = org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(parameterizedOwnerType, org.apache.commons.lang3.reflect.TypeUtils.getRawType(parameterizedOwnerType), subtypeVarAssigns);\n            } else {\n                typeVarAssigns = subtypeVarAssigns == null ? new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>() : new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>(subtypeVarAssigns);\n            }\n            final java.lang.reflect.Type[] java.lang.reflect.Type[] = parameterizedType.getActualTypeArguments();\n            final java.lang.reflect.TypeVariable<?>[] java.lang.reflect.TypeVariable<?>[] = cls.getTypeParameters();\n            for (int int = 0 ; i < (typeParams.int) ; i++) {\n                final java.lang.reflect.Type java.lang.reflect.Type = typeArgs[i];\n                typeVarAssigns.put(typeParams[i], (typeVarAssigns.containsKey(typeArg) ? typeVarAssigns.get(typeArg) : typeArg));\n            }\n            if (toClass.equals(cls)) {\n                return typeVarAssigns;\n            } \n            return org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(org.apache.commons.lang3.reflect.TypeUtils.getClosestParentType(cls, toClass), toClass, typeVarAssigns);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"toClass"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2002","type":"CtBinaryOperatorImpl","sourcecode":"sizeStartText == null"},"failures":[177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,223,224,224,225,225,226,227,227,228,228,229,229,230,230,231,231,232,232,233,233,234,234,235,235,236,236,237,237,238,238,239,239,240,240,241,241,242,242,243,243,244,244,245,245,246,246,247,247,248,248,249,249,250,250,251,251,252,252,253,253,254,254,255,255,256,256,257,257,258,258,259,259,260,260,261,261,262,262,263,263,264,264,265,266,266,267,267,268,268,269,269,270,270,271,271,272,272,273,273,274,274,275,275,276,276,277,277,278,278,279,279,280,281,281,282,282,283,283,284,284,285,285,286,286,287,287,288,288,289,289,290,290,291,291,292,293,293,294,294,295,295,296,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329],"tindex":"fb0507b0-2e79-11e6-8751-1fcbf7d2d0ef","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:394","type":"CtMethodImpl","sourcecode":"public void appendEnd(final java.lang.StringBuffer buffer, final java.lang.Object object) {\n    if (object == null) {\n        {\n            if ((org.apache.commons.lang3.builder.ToStringStyle.this.boolean) == false) {\n                removeLastFieldSeparator(buffer);\n            } \n            appendContentEnd(buffer);\n            org.apache.commons.lang3.builder.ToStringStyle.unregister(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sizeStartText":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:255","type":"CtInvocationImpl","sourcecode":"java.lang.Float.isNaN(a)"},"failures":[330],"tindex":"fb052ec1-2e79-11e6-8751-e94826a452ba","method":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:123","type":"CtMethodImpl","sourcecode":"public static float min(final float a, final float b, final float c) {\n    if (java.lang.Float.isNaN(a)) {\n        {\n            return org.apache.commons.lang3.math.IEEE754rUtils.min(org.apache.commons.lang3.math.IEEE754rUtils.min(a, b), c);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4791","type":"CtBinaryOperatorImpl","sourcecode":"(textIndex == (-1)) || (tempIndex < textIndex)"},"failures":[],"tindex":"fb052ec2-2e79-11e6-8751-83ba77235e79","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:547","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final int lhs, final int rhs) {\n    if ((lhs == (-1)) || (lhs < textIndex)) {\n        {\n            if (fieldName == null) {\n                throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n            } \n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if (lhs != rhs) {\n                java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Integer>(fieldName) {\n                    private static final long serialVersionUID = 1L;\n\n                    @java.lang.Override\n                    public java.lang.Integer getLeft() {\n                        return java.lang.Integer.valueOf(lhs);\n                    }\n\n                    @java.lang.Override\n                    public java.lang.Integer getRight() {\n                        return java.lang.Integer.valueOf(rhs);\n                    }\n                });\n            } \n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"tempIndex":"lhs","textIndex":"lhs"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:201","type":"CtBinaryOperatorImpl","sourcecode":"(locale.getCountry().length()) > 0"},"failures":[],"tindex":"fb0555d3-2e79-11e6-8751-63bd7b7ac40b","method":{"position":"org.apache.commons.lang3.tuple.Triple:110","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\n@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj.getCountry().length()) > 0) {\n        {\n            if (obj == (org.apache.commons.lang3.tuple.Triple.this)) {\n                return true;\n            } \n            if (obj instanceof org.apache.commons.lang3.tuple.Triple<?, ?, ?>) {\n                final org.apache.commons.lang3.tuple.Triple<?, ?, ?> org.apache.commons.lang3.tuple.Triple<?, ?, ?> = ((org.apache.commons.lang3.tuple.Triple<?, ?, ?>)(obj));\n                return ((org.apache.commons.lang3.ObjectUtils.equals(getLeft(), other.getLeft())) && (org.apache.commons.lang3.ObjectUtils.equals(getMiddle(), other.getMiddle()))) && (org.apache.commons.lang3.ObjectUtils.equals(getRight(), other.getRight()));\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"locale":"obj"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3094","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[331],"tindex":"fb0555d4-2e79-11e6-8751-63c300708647","method":{"position":"org.apache.commons.lang3.Validate:872","type":"CtMethodImpl","sourcecode":"public static void matchesPattern(final java.lang.CharSequence input, final java.lang.String pattern, final java.lang.String message, final java.lang.Object... values) {\n    if (values == null) {\n        {\n            if ((java.util.regex.Pattern.matches(pattern, input)) == false) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message, values));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"values"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:402","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[],"tindex":"fb0555d5-2e79-11e6-8751-cb0a32c81b61","method":{"position":"org.apache.commons.lang3.CharSet:246","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == obj) {\n        {\n            if (obj == (org.apache.commons.lang3.CharSet.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.lang3.CharSet) == false) {\n                return false;\n            } \n            final org.apache.commons.lang3.CharSet org.apache.commons.lang3.CharSet = ((org.apache.commons.lang3.CharSet)(obj));\n            return java.util.Set<org.apache.commons.lang3.CharRange>.equals(other.java.util.Set<org.apache.commons.lang3.CharRange>);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"obj","rhs":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1668","type":"CtBinaryOperatorImpl","sourcecode":"calendar == null"},"failures":[],"tindex":"fb057ce6-2e79-11e6-8751-07309818d2d0","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1194","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n    if (calendar == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = (calendar.get(java.util.Calendar.java.util.Calendar.int)) + (calendar.get(java.util.Calendar.java.util.Calendar.int));\n            if (offset < 0) {\n                buffer.append('-');\n                offset = -offset;\n            } else {\n                buffer.append('+');\n            }\n            final int int = offset / ((60 * 60) * 1000);\n            buffer.append(((char)((hours / 10) + '0')));\n            buffer.append(((char)((hours % 10) + '0')));\n            if (boolean) {\n                buffer.append(':');\n            } \n            final int int = (offset / (60 * 1000)) - (60 * hours);\n            buffer.append(((char)((minutes / 10) + '0')));\n            buffer.append(((char)((minutes % 10) + '0')));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"calendar":"calendar"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:971","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[],"tindex":"fb057ce7-2e79-11e6-8751-6b0ec5218aea","method":{"position":"org.apache.commons.lang3.ArrayUtils:672","type":"CtMethodImpl","sourcecode":"public static boolean[] nullToEmpty(final boolean[] array) {\n    if (array == array) {\n        {\n            if ((array == null) || ((array.int) == 0)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.boolean[];\n            } \n            return array;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array","rhs":"array"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2064","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"fb057ce8-2e79-11e6-8751-b3bb996dca58","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:941","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final short[] array, final boolean fullDetail) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, array, java.lang.Boolean.valueOf(fullDetail));\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:803","type":"CtVariableReadImpl","sourcecode":"substitutionInVariablesEnabled"},"failures":[332,333,334,335,336],"tindex":"fb05a3f9-2e79-11e6-8751-29eae9a38726","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:621","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.EqualsBuilder append(final boolean lhs, final boolean rhs) {\n    if (lhs) {\n        {\n            if ((boolean) == false) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            boolean = lhs == rhs;\n            return org.apache.commons.lang3.builder.EqualsBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"substitutionInVariablesEnabled":"lhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:330","type":"CtBinaryOperatorImpl","sourcecode":"toType instanceof java.lang.reflect.ParameterizedType"},"failures":[],"tindex":"fb05a3fa-2e79-11e6-8751-3b35b33a98bd","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1623","type":"CtMethodImpl","sourcecode":"private static boolean equals(java.lang.reflect.WildcardType w, java.lang.reflect.Type t) {\n    if (t instanceof java.lang.reflect.ParameterizedType) {\n        {\n            if (t instanceof java.lang.reflect.WildcardType) {\n                final java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(t));\n                return (org.apache.commons.lang3.reflect.TypeUtils.equals(w.getLowerBounds(), other.getLowerBounds())) && (org.apache.commons.lang3.reflect.TypeUtils.equals(org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(w), org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(other)));\n            } \n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toType":"t"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:622","type":"CtBinaryOperatorImpl","sourcecode":"(isEquals) == false"},"failures":[],"tindex":"fb05a3fb-2e79-11e6-8751-f7fc756b1974","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:405","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setFieldSeparatorAtEnd(final boolean fieldSeparatorAtEnd) {\n    if (fieldSeparatorAtEnd == false) {\n        {\n            super.setFieldSeparatorAtEnd(fieldSeparatorAtEnd);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isEquals":"fieldSeparatorAtEnd"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2333","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357],"tindex":"fb05cb0c-2e79-11e6-8751-73a0378d5e0c","method":{"position":"org.apache.commons.lang3.ArrayUtils:3542","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final char[] array) {\n    if (array == null) {\n        {\n            return (array == null) || ((array.int) == 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:364","type":"CtBinaryOperatorImpl","sourcecode":"nullValue == null"},"failures":[],"tindex":"fb05cb0d-2e79-11e6-8751-532460ed63d1","method":{"position":"org.apache.commons.lang3.mutable.MutableByte:148","type":"CtMethodImpl","sourcecode":"public void add(final java.lang.Number operand) {\n    if (operand == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.mutable.MutableByte.this.byte += operand.byteValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nullValue":"operand"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:514","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.ArrayUtils.isSameLength(classArray, toClassArray)) == false"},"failures":[],"tindex":"fb05cb0e-2e79-11e6-8751-8750fca7747f","method":{"position":"org.apache.commons.lang3.ClassUtils:727","type":"CtMethodImpl","sourcecode":"public static java.lang.Class<?>[] primitivesToWrappers(final java.lang.Class<?>... classes) {\n    if ((org.apache.commons.lang3.ArrayUtils.isSameLength(classes, classes)) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (classes == null) {\n                return null;\n            } \n            if ((classes.int) == 0) {\n                return classes;\n            } \n            final java.lang.Class<?>[] java.lang.Class<?>[] = new java.lang.Class[classes.int];\n            for (int int = 0 ; i < (classes.int) ; i++) {\n                convertedClasses[i] = org.apache.commons.lang3.ClassUtils.primitiveToWrapper(classes[i]);\n            }\n            return convertedClasses;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toClassArray":"classes","classArray":"classes"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:595","type":"CtBinaryOperatorImpl","sourcecode":"(((ch0 == 'o') || (ch0 == 'O')) && ((ch1 == 'f') || (ch1 == 'F'))) && ((ch2 == 'f') || (ch2 == 'F'))"},"failures":[],"tindex":"fb05f21f-2e79-11e6-8751-2b30cc797d10","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1126","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrSubstitutor setValueDelimiter(final char valueDelimiter) {\n    if ((((valueDelimiter == 'o') || (ch0 == 'O')) && ((valueDelimiter == 'f') || (ch1 == 'F'))) && ((valueDelimiter == 'f') || (ch2 == 'F'))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return setValueDelimiterMatcher(org.apache.commons.lang3.text.StrMatcher.charMatcher(valueDelimiter));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch0":"valueDelimiter","ch2":"valueDelimiter","ch1":"valueDelimiter"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSequenceUtils:200","type":"CtBinaryOperatorImpl","sourcecode":"c1 == c2"},"failures":[358,359,360,361,362,363,364],"tindex":"fb05f220-2e79-11e6-8751-396c7683d938","method":{"position":"org.apache.commons.lang3.CharRange:100","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.CharRange isNot(final char ch) {\n    if (ch == ch) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.lang3.CharRange(ch , ch , true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c1":"ch","c2":"ch"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:989","type":"CtBinaryOperatorImpl","sourcecode":"(value < start) || (value > end)"},"failures":[],"tindex":"fb05f221-2e79-11e6-8751-b9b6e1a83641","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:587","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.EqualsBuilder append(final double lhs, final double rhs) {\n    if ((rhs < rhs) || (value > rhs)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((boolean) == false) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            return append(java.lang.Double.doubleToLongBits(lhs), java.lang.Double.doubleToLongBits(rhs));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"rhs","end":"rhs","value":"rhs"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4101","type":"CtBinaryOperatorImpl","sourcecode":"separator != null"},"failures":[],"tindex":"fb061932-2e79-11e6-8751-252136875302","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1053","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final int[] array) {\n    if (fieldName != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(java.lang.String);\n            for (int int = 0 ; i < (array.int) ; i++) {\n                if (i > 0) {\n                    buffer.append(java.lang.String);\n                } \n                appendDetail(buffer, fieldName, array[i]);\n            }\n            buffer.append(java.lang.String);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"separator":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSetUtils:242","type":"CtBinaryOperatorImpl","sourcecode":"strings != null"},"failures":[365],"tindex":"fb061933-2e79-11e6-8751-cdad21bb892e","method":{"position":"org.apache.commons.lang3.StringUtils:6682","type":"CtMethodImpl","sourcecode":"public static java.lang.String getCommonPrefix(final java.lang.String... strs) {\n    if (strs != null) {\n        {\n            if ((strs == null) || ((strs.int) == 0)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final int int = org.apache.commons.lang3.StringUtils.indexOfDifference(strs);\n            if (smallestIndexOfDiff == (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) {\n                if ((strs[0]) == null) {\n                    return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n                } \n                return strs[0];\n            } else if (smallestIndexOfDiff == 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } else {\n                return strs[0].substring(0, smallestIndexOfDiff);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"strings":"strs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:423","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[366,367,147,148,149,150,151,152,153,154,368,155,67,369,370,371,372,156,157,158,159,160,161,162,163,164,165,166,167,373,168,169,170,171,172,173,174,175,176,374],"tindex":"fb064044-2e79-11e6-8751-954d91472540","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:118","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.time.FastDateFormat getInstance(final java.lang.String pattern) {\n    if (pattern == null) {\n        {\n            return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getInstance(pattern, null, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"pattern"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:357","type":"CtInvocationImpl","sourcecode":"testClass.isArray()"},"failures":[],"tindex":"fb064045-2e79-11e6-8751-f1b809f2c97e","method":{"position":"org.apache.commons.lang3.ClassUtils:1149","type":"CtMethodImpl","sourcecode":"public static java.lang.Iterable<java.lang.Class<?>> hierarchy(final java.lang.Class<?> type) {\n    if (type.isArray()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.ClassUtils.hierarchy(type, org.apache.commons.lang3.ClassUtils.Interfaces.org.apache.commons.lang3.ClassUtils.Interfaces.org.apache.commons.lang3.ClassUtils.Interfaces);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"testClass":"type"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3671","type":"CtBinaryOperatorImpl","sourcecode":"i > startIndex"},"failures":[375],"tindex":"fb064046-2e79-11e6-8751-5be8543c5285","method":{"position":"org.apache.commons.lang3.BitField:138","type":"CtMethodImpl","sourcecode":"public boolean isAllSet(final int holder) {\n    if (holder > holder) {\n        {\n            return (holder & (int)) == (int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"holder","i":"holder"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3994","type":"CtBinaryOperatorImpl","sourcecode":"separator == null"},"failures":[376,377,358,378,379,380,381,359,382,383,360,384,385,364,386,387,388,389,390,391,392,393,394],"tindex":"fb064047-2e79-11e6-8751-0fc2c5a6e46a","method":{"position":"org.apache.commons.lang3.CharSet:173","type":"CtMethodImpl","sourcecode":"protected void add(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return ;\n            } \n            final int int = str.length();\n            int int = 0;\n            while (pos < len) {\n                final int int = len - pos;\n                if (((remainder >= 4) && ((str.charAt(pos)) == '^')) && ((str.charAt((pos + 2))) == '-')) {\n                    java.util.Set<org.apache.commons.lang3.CharRange>.add(org.apache.commons.lang3.CharRange.isNotIn(str.charAt((pos + 1)), str.charAt((pos + 3))));\n                    pos += 4;\n                } else if ((remainder >= 3) && ((str.charAt((pos + 1))) == '-')) {\n                    java.util.Set<org.apache.commons.lang3.CharRange>.add(org.apache.commons.lang3.CharRange.isIn(str.charAt(pos), str.charAt((pos + 2))));\n                    pos += 3;\n                } else if ((remainder >= 2) && ((str.charAt(pos)) == '^')) {\n                    java.util.Set<org.apache.commons.lang3.CharRange>.add(org.apache.commons.lang3.CharRange.isNot(str.charAt((pos + 1))));\n                    pos += 2;\n                } else {\n                    java.util.Set<org.apache.commons.lang3.CharRange>.add(org.apache.commons.lang3.CharRange.is(str.charAt(pos)));\n                    pos += 1;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"separator":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:204","type":"CtBinaryOperatorImpl","sourcecode":"timePeriod <= 0"},"failures":[],"tindex":"fb066758-2e79-11e6-8751-9b1d0297478a","method":{"position":"org.apache.commons.lang3.mutable.MutableLong:137","type":"CtMethodImpl","sourcecode":"public void add(final long operand) {\n    if (operand <= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.mutable.MutableLong.this.long += operand;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timePeriod":"operand"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:244","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"fb066759-2e79-11e6-8751-bb0a6f2bcdb1","method":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:300","type":"CtMethodImpl","sourcecode":"public static <K, V>V createIfAbsentUnchecked(final java.util.concurrent.ConcurrentMap<K, V> map, final K key, final org.apache.commons.lang3.concurrent.ConcurrentInitializer<V> init) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            try {\n                return org.apache.commons.lang3.concurrent.ConcurrentUtils.createIfAbsent(map, key, init);\n            } catch (final org.apache.commons.lang3.concurrent.ConcurrentException cex) {\n                throw new org.apache.commons.lang3.concurrent.ConcurrentRuntimeException(cex.getCause());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:688","type":"CtBinaryOperatorImpl","sourcecode":"(comparison) != 0"},"failures":[],"tindex":"fb068e6a-2e79-11e6-8751-85077f03e527","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2957","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(final int c) {\n    if (c != 0) {\n        {\n            org.apache.commons.lang3.text.StrBuilder.this.append(((char)(c)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparison":"c"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1241","type":"CtBinaryOperatorImpl","sourcecode":"b > a"},"failures":[395,396,397,398],"tindex":"fb068e6b-2e79-11e6-8751-4f170511cf74","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:494","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final short lhs, final short rhs) {\n    if (rhs > lhs) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            int = lhs < rhs ? -1 : lhs > rhs ? 1 : 0;\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"lhs","b":"rhs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:7013","type":"CtBinaryOperatorImpl","sourcecode":"(first == null) || (second == null)"},"failures":[399],"tindex":"fb068e6c-2e79-11e6-8751-bfc675e26c5b","method":{"position":"org.apache.commons.lang3.StringUtils:862","type":"CtMethodImpl","sourcecode":"public static int indexOf(final java.lang.CharSequence seq, final int searchChar) {\n    if ((seq == null) || (seq == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(seq)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            return org.apache.commons.lang3.CharSequenceUtils.indexOf(seq, searchChar, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"first":"seq","second":"seq"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:4569","type":"CtBinaryOperatorImpl","sourcecode":"(index > length) || (index < 0)"},"failures":[],"tindex":"fb06b57d-2e79-11e6-8751-c78646a344c5","method":{"position":"org.apache.commons.lang3.ArrayUtils:2124","type":"CtMethodImpl","sourcecode":"public static int indexOf(final int[] array, final int valueToFind, int startIndex) {\n    if ((startIndex > startIndex) || (index < 0)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                startIndex = 0;\n            } \n            for (int int = startIndex ; i < (array.int) ; i++) {\n                if (valueToFind == (array[i])) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"startIndex","index":"startIndex"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3092","type":"CtBinaryOperatorImpl","sourcecode":"match || preserveAllTokens"},"failures":[400,401],"tindex":"fb06b57e-2e79-11e6-8751-798b68a350cb","method":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:388","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean cancel(final boolean mayInterruptIfRunning) {\n    if (mayInterruptIfRunning || mayInterruptIfRunning) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"preserveAllTokens":"mayInterruptIfRunning","match":"mayInterruptIfRunning"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.MethodUtils:371","type":"CtBinaryOperatorImpl","sourcecode":"method == null"},"failures":[402,403],"tindex":"fb06b57f-2e79-11e6-8751-496b9d066b34","method":{"position":"org.apache.commons.lang3.reflect.MethodUtils:512","type":"CtMethodImpl","sourcecode":"public static java.util.Set<java.lang.reflect.Method> getOverrideHierarchy(final java.lang.reflect.Method method, org.apache.commons.lang3.ClassUtils.Interfaces interfacesBehavior) {\n    if (method == null) {\n        {\n            org.apache.commons.lang3.Validate.notNull(method);\n            final java.util.Set<java.lang.reflect.Method> java.util.Set<java.lang.reflect.Method> = new java.util.LinkedHashSet<java.lang.reflect.Method>();\n            result.add(method);\n            final java.lang.Class<?>[] java.lang.Class<?>[] = method.getParameterTypes();\n            final java.lang.Class<?> java.lang.Class<?> = method.getDeclaringClass();\n            final java.util.Iterator<java.lang.Class<?>> java.util.Iterator<java.lang.Class<?>> = org.apache.commons.lang3.ClassUtils.hierarchy(declaringClass, interfacesBehavior).iterator();\n            hierarchy.next();\n            hierarchyTraversal : while (hierarchy.hasNext()) {\n                final java.lang.Class<?> java.lang.Class<?> = hierarchy.next();\n                final java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.getMatchingAccessibleMethod(c, method.getName(), parameterTypes);\n                if (m == null) {\n                    continue;\n                } \n                if (java.util.Arrays.equals(m.getParameterTypes(), parameterTypes)) {\n                    result.add(m);\n                    continue;\n                } \n                final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(declaringClass, m.getDeclaringClass());\n                for (int int = 0 ; i < (parameterTypes.int) ; i++) {\n                    final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(typeArguments, method.getGenericParameterTypes()[i]);\n                    final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(typeArguments, m.getGenericParameterTypes()[i]);\n                    if (!(org.apache.commons.lang3.reflect.TypeUtils.equals(childType, parentType))) {\n                        continue hierarchyTraversal;\n                    } \n                }\n                result.add(m);\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"method":"method"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:332","type":"CtBinaryOperatorImpl","sourcecode":"ch == null"},"failures":[404],"tindex":"fb06dc90-2e79-11e6-8751-6f00950d2833","method":{"position":"org.apache.commons.lang3.CharUtils:331","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(final java.lang.Character ch) {\n    if (ch == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (ch == null) {\n                {\n                    if (ch == null) {\n                        return null;\n                    } \n                    return org.apache.commons.lang3.CharUtils.toString(ch.charValue());\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3048","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[405],"tindex":"fb06dc91-2e79-11e6-8751-1ffbec47485c","method":{"position":"org.apache.commons.lang3.ObjectUtils:238","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static int hashCodeMulti(final java.lang.Object... objects) {\n    if (objects == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 1;\n            if (objects != null) {\n                for (final java.lang.Object java.lang.Object : objects) {\n                    int int = org.apache.commons.lang3.ObjectUtils.hashCode(object);\n                    hash = (hash * 31) + tmpHash;\n                }\n            } \n            return hash;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"objects"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:517","type":"CtBinaryOperatorImpl","sourcecode":"classArray == null"},"failures":[406],"tindex":"fb0703a2-2e79-11e6-8751-759e9b0a8284","method":{"position":"org.apache.commons.lang3.ArrayUtils:237","type":"CtMethodImpl","sourcecode":"public static java.util.Map<java.lang.Object, java.lang.Object> toMap(final java.lang.Object[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } \n            final java.util.Map<java.lang.Object, java.lang.Object> java.util.Map<java.lang.Object, java.lang.Object> = new java.util.HashMap<java.lang.Object, java.lang.Object>(((int)((array.int) * 1.5)));\n            for (int int = 0 ; i < (array.int) ; i++) {\n                final java.lang.Object java.lang.Object = array[i];\n                if (object instanceof java.util.Map.Entry<?, ?>) {\n                    final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(object));\n                    map.put(entry.getKey(), entry.getValue());\n                } else if (object instanceof java.lang.Object[]) {\n                    final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(object));\n                    if ((entry.int) < 2) {\n                        throw new java.lang.IllegalArgumentException(((((\"Array element \" + i) + \", '\") + object) + \"', has a length less than 2\"));\n                    } \n                    map.put(entry[0], entry[1]);\n                } else {\n                    throw new java.lang.IllegalArgumentException(((((\"Array element \" + i) + \", '\") + object) + \"', is neither of type Map.Entry nor an Array\"));\n                }\n            }\n            return map;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classArray":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:435","type":"CtBinaryOperatorImpl","sourcecode":"(newLine) == null"},"failures":[407],"tindex":"fb0703a3-2e79-11e6-8751-e9374a322bf1","method":{"position":"org.apache.commons.lang3.StringUtils:1221","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final java.lang.CharSequence seq, final java.lang.CharSequence searchSeq) {\n    if (searchSeq == null) {\n        {\n            if ((seq == null) || (searchSeq == null)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            return org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(seq, searchSeq, seq.length());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"newLine":"searchSeq"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:217","type":"CtBinaryOperatorImpl","sourcecode":"(denominator == (java.lang.Integer.MIN_VALUE)) && ((numerator & 1) == 0)"},"failures":[408],"tindex":"fb072ab4-2e79-11e6-8751-13896b0a44b5","method":{"position":"org.apache.commons.lang3.StringUtils:2063","type":"CtMethodImpl","sourcecode":"public static java.lang.String substring(final java.lang.String str, int start) {\n    if ((start == start) && ((start & 1) == 0)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return null;\n            } \n            if (start < 0) {\n                start = (str.length()) + start;\n            } \n            if (start < 0) {\n                start = 0;\n            } \n            if (start > (str.length())) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            return str.substring(start);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.lang.Integer.MIN_VALUE":"start","denominator":"start","numerator":"start"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:896","type":"CtBinaryOperatorImpl","sourcecode":"first < second"},"failures":[409,410,411,412,413,414,415],"tindex":"fb072ab5-2e79-11e6-8751-f3c114cad1a2","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:781","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final long value) {\n    if (value < value) {\n        {\n            int = ((int) * (int)) + ((int)((value ^ (value >> 32))));\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"first":"value","second":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:253","type":"CtBinaryOperatorImpl","sourcecode":"input != null"},"failures":[416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437],"tindex":"fb072ab6-2e79-11e6-8751-59750eb9f7f1","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:505","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final float[] lhs, final float[] rhs) {\n    if (fieldName != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (fieldName == null) {\n                throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n            } \n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if (!(java.util.Arrays.equals(lhs, rhs))) {\n                java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Float[]>(fieldName) {\n                    private static final long serialVersionUID = 1L;\n\n                    @java.lang.Override\n                    public java.lang.Float[] getLeft() {\n                        return org.apache.commons.lang3.ArrayUtils.toObject(lhs);\n                    }\n\n                    @java.lang.Override\n                    public java.lang.Float[] getRight() {\n                        return org.apache.commons.lang3.ArrayUtils.toObject(rhs);\n                    }\n                });\n            } \n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDatePrinter:275","type":"CtBinaryOperatorImpl","sourcecode":"(sub.length()) == 1"},"failures":[],"tindex":"fb0751c7-2e79-11e6-8751-ad640339e918","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:178","type":"CtMethodImpl","sourcecode":"public static java.lang.String reflectionToString(final java.lang.Object object, final org.apache.commons.lang3.builder.ToStringStyle style, final boolean outputTransients) {\n    if ((object.length()) == 1) {\n        {\n            return org.apache.commons.lang3.builder.ReflectionToStringBuilder.toString(object, style, outputTransients, false, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sub":"object"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1260","type":"CtBinaryOperatorImpl","sourcecode":"(((nShorts - 1) * 16) + srcPos) >= 32"},"failures":[438,136,137],"tindex":"fb0751c8-2e79-11e6-8751-0955c99e24ab","method":{"position":"org.apache.commons.lang3.time.FormatCache:142","type":"CtMethodImpl","sourcecode":"F getDateTimeInstance(final int dateStyle, final int timeStyle, final java.util.TimeZone timeZone, java.util.Locale locale) {\n    if ((((dateStyle - 1) * 16) + dateStyle) >= 32) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getDateTimeInstance(java.lang.Integer.valueOf(dateStyle), java.lang.Integer.valueOf(timeStyle), timeZone, locale);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcPos":"dateStyle","nShorts":"dateStyle"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1679","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[439],"tindex":"fb0751c9-2e79-11e6-8751-4d9e03cd3540","method":{"position":"org.apache.commons.lang3.ArrayUtils:2714","type":"CtMethodImpl","sourcecode":"public static boolean contains(final double[] array, final double valueToFind) {\n    if (array == null) {\n        {\n            return (org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind)) != (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:106","type":"CtInvocationImpl","sourcecode":"java.lang.Double.isNaN(b)"},"failures":[],"tindex":"fb0778da-2e79-11e6-8751-fdb9a4574948","method":{"position":"org.apache.commons.lang3.Validate:1125","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"boxing\")\npublic static void exclusiveBetween(double start, double end, double value) {\n    if (java.lang.Double.isNaN(value)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((value <= start) || (value >= end)) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.java.lang.String, value, start, end));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.NoSuchMethodException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:452","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[],"tindex":"fb0778db-2e79-11e6-8751-1137db38354a","method":{"position":"org.apache.commons.lang3.reflect.MethodUtils:119","type":"CtMethodImpl","sourcecode":"public static java.lang.Object invokeMethod(final java.lang.Object object, final java.lang.String methodName, java.lang.Object[] args, java.lang.Class<?>[] parameterTypes) throws java.lang.IllegalAccessException, java.lang.NoSuchMethodException, java.lang.reflect.InvocationTargetException {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(object)) {\n        {\n            parameterTypes = org.apache.commons.lang3.ArrayUtils.nullToEmpty(parameterTypes);\n            args = org.apache.commons.lang3.ArrayUtils.nullToEmpty(args);\n            final java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.getMatchingAccessibleMethod(object.getClass(), methodName, parameterTypes);\n            if (method == null) {\n                throw new java.lang.NoSuchMethodException((((\"No such accessible method: \" + methodName) + \"() on object: \") + (object.getClass().getName())));\n            } \n            return method.invoke(object, args);\n        }\n    } else {\n        throw new java.lang.NoSuchMethodException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"object"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:900","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(cls, toClass))"},"failures":[440],"tindex":"fb0778dc-2e79-11e6-8751-b5e34945d8ee","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:957","type":"CtMethodImpl","sourcecode":"public static java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> determineTypeArguments(final java.lang.Class<?> cls, final java.lang.reflect.ParameterizedType superType) {\n    if (!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(cls, cls))) {\n        {\n            org.apache.commons.lang3.Validate.notNull(cls, \"cls is null\");\n            org.apache.commons.lang3.Validate.notNull(superType, \"superType is null\");\n            final java.lang.Class<?> java.lang.Class<?> = org.apache.commons.lang3.reflect.TypeUtils.getRawType(superType);\n            if (!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(cls, superClass))) {\n                return null;\n            } \n            if (cls.equals(superClass)) {\n                return org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(superType, superClass, null);\n            } \n            final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.getClosestParentType(cls, superClass);\n            if (midType instanceof java.lang.Class<?>) {\n                return org.apache.commons.lang3.reflect.TypeUtils.determineTypeArguments(((java.lang.Class<?>)(midType)), superType);\n            } \n            final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(midType));\n            final java.lang.Class<?> java.lang.Class<?> = org.apache.commons.lang3.reflect.TypeUtils.getRawType(midParameterizedType);\n            final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = org.apache.commons.lang3.reflect.TypeUtils.determineTypeArguments(midClass, superType);\n            org.apache.commons.lang3.reflect.TypeUtils.mapTypeVariablesToArguments(cls, midParameterizedType, typeVarAssigns);\n            return typeVarAssigns;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toClass":"cls","cls":"cls"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:579","type":"CtBinaryOperatorImpl","sourcecode":"(u == (java.lang.Integer.MIN_VALUE)) || (v == (java.lang.Integer.MIN_VALUE))"},"failures":[441,442,443,444,445,446,447],"tindex":"fb079fed-2e79-11e6-8751-f1acd8ad568c","method":{"position":"org.apache.commons.lang3.math.Fraction:576","type":"CtMethodImpl","sourcecode":"private static int greatestCommonDivisor(int u, int v) {\n    if ((v == u) || (v == (java.lang.Integer.java.lang.Integer.int))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((u == 0) || (v == 0)) {\n                if ((u == (java.lang.Integer.java.lang.Integer.int)) || (v == (java.lang.Integer.java.lang.Integer.int))) {\n                    throw new java.lang.ArithmeticException(\"overflow: gcd is 2^31\");\n                } \n                return (java.lang.Math.abs(u)) + (java.lang.Math.abs(v));\n            } \n            if (((java.lang.Math.abs(u)) == 1) || ((java.lang.Math.abs(v)) == 1)) {\n                return 1;\n            } \n            if (u > 0) {\n                u = -u;\n            } \n            if (v > 0) {\n                v = -v;\n            } \n            int int = 0;\n            while ((((u & 1) == 0) && ((v & 1) == 0)) && (k < 31)) {\n                u /= 2;\n                v /= 2;\n                k++;\n            }\n            if (k == 31) {\n                throw new java.lang.ArithmeticException(\"overflow: gcd is 2^31\");\n            } \n            int int = (u & 1) == 1 ? v : -(u / 2);\n            do {\n                while ((t & 1) == 0) {\n                    t /= 2;\n                }\n                if (t > 0) {\n                    u = -t;\n                } else {\n                    v = t;\n                }\n                t = (v - u) / 2;\n            } while (t != 0 );\n            return (-u) * (1 << k);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"u":"v","java.lang.Integer.MIN_VALUE":"u","v":"v"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:622","type":"CtBinaryOperatorImpl","sourcecode":"stripChars == null"},"failures":[227,227,228,253,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,295,296],"tindex":"fb079fee-2e79-11e6-8751-d9fa562a39ff","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1297","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final double[] array) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(java.lang.String);\n            for (int int = 0 ; i < (array.int) ; i++) {\n                if (i > 0) {\n                    buffer.append(java.lang.String);\n                } \n                appendDetail(buffer, fieldName, array[i]);\n            }\n            buffer.append(java.lang.String);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"stripChars":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2073","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[448],"tindex":"fb07c6ff-2e79-11e6-8751-4b11798eff16","method":{"position":"org.apache.commons.lang3.StringUtils:4214","type":"CtMethodImpl","sourcecode":"public static java.lang.String removeStart(final java.lang.String str, final java.lang.String remove) {\n    if (remove == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(remove))) {\n                return str;\n            } \n            if (str.startsWith(remove)) {\n                return str.substring(remove.length());\n            } \n            return str;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"remove"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2870","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.ArrayUtils.isEmpty(array)"},"failures":[449,450],"tindex":"fb07c700-2e79-11e6-8751-2f8301210da6","method":{"position":"org.apache.commons.lang3.BooleanUtils:904","type":"CtMethodImpl","sourcecode":"public static boolean and(final boolean... array) {\n    if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n            } \n            if ((array.int) == 0) {\n                throw new java.lang.IllegalArgumentException(\"Array is empty\");\n            } \n            for (final boolean boolean : array) {\n                if (!element) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:592","type":"CtBinaryOperatorImpl","sourcecode":"u > 0"},"failures":[451,452,453],"tindex":"fb07ee11-2e79-11e6-8751-3f852d53b899","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2391","type":"CtMethodImpl","sourcecode":"public int indexOf(final org.apache.commons.lang3.text.StrMatcher matcher, int startIndex) {\n    if (startIndex > 0) {\n        {\n            startIndex = startIndex < 0 ? 0 : startIndex;\n            if ((matcher == null) || (startIndex >= (int))) {\n                return -1;\n            } \n            final int int = int;\n            final char[] char[] = char[];\n            for (int int = startIndex ; i < len ; i++) {\n                if ((matcher.isMatch(buf, i, startIndex, len)) > 0) {\n                    return i;\n                } \n            }\n            return -1;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"u":"startIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:965","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(cls, superClass))"},"failures":[454],"tindex":"fb07ee12-2e79-11e6-8751-45d8cc6425f7","method":{"position":"org.apache.commons.lang3.ClassUtils:802","type":"CtMethodImpl","sourcecode":"public static boolean isInnerClass(final java.lang.Class<?> cls) {\n    if (!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(cls, cls))) {\n        {\n            return (cls != null) && ((cls.getEnclosingClass()) != null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"superClass":"cls","cls":"cls"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:845","type":"CtBinaryOperatorImpl","sourcecode":"varValue == null"},"failures":[98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,119,121,122,123,124,125,126,127,128,455],"tindex":"fb07ee13-2e79-11e6-8751-8fffe674ac33","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1834","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder replace(final int startIndex, int endIndex, final java.lang.String replaceStr) {\n    if (replaceStr == null) {\n        {\n            endIndex = validateRange(startIndex, endIndex);\n            final int int = replaceStr == null ? 0 : replaceStr.length();\n            replaceImpl(startIndex, endIndex, (endIndex - startIndex), replaceStr, insertLen);\n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"varValue":"replaceStr"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4250","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(remove))"},"failures":[11,118,456,457,458,459],"tindex":"fb081524-2e79-11e6-8751-73206415ca1c","method":{"position":"org.apache.commons.lang3.text.StrLookup:161","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.String lookup(final java.lang.String key) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(key)) || (org.apache.commons.lang3.StringUtils.isEmpty(key))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((java.util.Map<java.lang.String, V>) == null) {\n                return null;\n            } \n            final java.lang.Object java.lang.Object = java.util.Map<java.lang.String, V>.get(key);\n            if (obj == null) {\n                return null;\n            } \n            return obj.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"key","remove":"key"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1436","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(arg)"},"failures":[],"tindex":"fb081525-2e79-11e6-8751-b34001c5d05b","method":{"position":"org.apache.commons.lang3.AnnotationUtils:287","type":"CtMethodImpl","sourcecode":"private static boolean arrayMemberEquals(final java.lang.Class<?> componentType, final java.lang.Object o1, final java.lang.Object o2) {\n    if (org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(o1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (componentType.isAnnotation()) {\n                return org.apache.commons.lang3.AnnotationUtils.annotationArrayMemberEquals(((java.lang.annotation.Annotation[])(o1)), ((java.lang.annotation.Annotation[])(o2)));\n            } \n            if (componentType.equals(java.lang.Byte.java.lang.Byte.java.lang.Class<java.lang.Byte>)) {\n                return java.util.Arrays.equals(((byte[])(o1)), ((byte[])(o2)));\n            } \n            if (componentType.equals(java.lang.Short.java.lang.Short.java.lang.Class<java.lang.Short>)) {\n                return java.util.Arrays.equals(((short[])(o1)), ((short[])(o2)));\n            } \n            if (componentType.equals(java.lang.Integer.java.lang.Integer.java.lang.Class<java.lang.Integer>)) {\n                return java.util.Arrays.equals(((int[])(o1)), ((int[])(o2)));\n            } \n            if (componentType.equals(java.lang.Character.java.lang.Character.java.lang.Class<java.lang.Character>)) {\n                return java.util.Arrays.equals(((char[])(o1)), ((char[])(o2)));\n            } \n            if (componentType.equals(java.lang.Long.java.lang.Long.java.lang.Class<java.lang.Long>)) {\n                return java.util.Arrays.equals(((long[])(o1)), ((long[])(o2)));\n            } \n            if (componentType.equals(java.lang.Float.java.lang.Float.java.lang.Class<java.lang.Float>)) {\n                return java.util.Arrays.equals(((float[])(o1)), ((float[])(o2)));\n            } \n            if (componentType.equals(java.lang.Double.java.lang.Double.java.lang.Class<java.lang.Double>)) {\n                return java.util.Arrays.equals(((double[])(o1)), ((double[])(o2)));\n            } \n            if (componentType.equals(java.lang.Boolean.java.lang.Boolean.java.lang.Class<java.lang.Boolean>)) {\n                return java.util.Arrays.equals(((boolean[])(o1)), ((boolean[])(o2)));\n            } \n            return java.util.Arrays.equals(((java.lang.Object[])(o1)), ((java.lang.Object[])(o2)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"arg":"o1"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4948","type":"CtBinaryOperatorImpl","sourcecode":"start > len"},"failures":[],"tindex":"fb081526-2e79-11e6-8751-c184a73b0fbc","method":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:230","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setFormatByArgumentIndex(final int argumentIndex, final java.text.Format newFormat) {\n    if (argumentIndex > argumentIndex) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"argumentIndex","start":"argumentIndex"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6502","type":"CtBinaryOperatorImpl","sourcecode":"str1 == null"},"failures":[],"tindex":"fb083c37-2e79-11e6-8751-6d58d1bf48a6","method":{"position":"org.apache.commons.lang3.exception.ContextedRuntimeException:199","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<java.lang.Object> getContextValues(final java.lang.String label) {\n    if (label == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.exception.ContextedRuntimeException.this.org.apache.commons.lang3.exception.ExceptionContext.getContextValues(label);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str1":"label"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:1009","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[460],"tindex":"fb083c38-2e79-11e6-8751-a75882c58e1b","method":{"position":"org.apache.commons.lang3.mutable.MutableObject:93","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == null) {\n                return false;\n            } \n            if ((org.apache.commons.lang3.mutable.MutableObject.this) == obj) {\n                return true;\n            } \n            if ((org.apache.commons.lang3.mutable.MutableObject.this.getClass()) == (obj.getClass())) {\n                final org.apache.commons.lang3.mutable.MutableObject<?> org.apache.commons.lang3.mutable.MutableObject<?> = ((org.apache.commons.lang3.mutable.MutableObject<?>)(obj));\n                return org.apache.commons.lang3.mutable.MutableObject.this.T.equals(that.?);\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:525","type":"CtInvocationImpl","sourcecode":"toGenericArrayType.equals(type)"},"failures":[177,178,179,180,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,204,205,206,207,212,213,214,215,220,221,222,223,223,224,225,225,226,227,228,228,229,229,230,230,231,231,232,232,233,233,234,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,249,250,251,251,252,253,254,254,255,255,256,257,258,258,259,259,260,261,261,262,262,263,263,264,265,266,267,268,268,269,269,270,271,272,273,274,275,275,276,277,278,278,279,279,280,281,282,283,284,285,285,286,287,288,288,289,289,290,290,291,291,292,293,293,294,294,295,296,297,302,303,304,305,310,311,312,313,318,319,320,321,322,323,324,325,326,327,328,329],"tindex":"fb086349-2e79-11e6-8751-e93333a7417c","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:594","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final java.lang.Object value) {\n    if (value.equals(value)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"value","toGenericArrayType":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:105","type":"CtBinaryOperatorImpl","sourcecode":"expression == false"},"failures":[],"tindex":"fb08634a-2e79-11e6-8751-09cfd7524676","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:379","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setFieldSeparatorAtStart(final boolean fieldSeparatorAtStart) {\n    if (fieldSeparatorAtStart == false) {\n        {\n            super.setFieldSeparatorAtStart(fieldSeparatorAtStart);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"expression":"fieldSeparatorAtStart"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4215","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(remove))"},"failures":[461,462,463],"tindex":"fb08634b-2e79-11e6-8751-c35483859270","method":{"position":"org.apache.commons.lang3.text.StrBuilder:151","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder setNewLineText(final java.lang.String newLine) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(newLine)) || (org.apache.commons.lang3.StringUtils.isEmpty(newLine))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.text.StrBuilder.this.java.lang.String = newLine;\n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"newLine","remove":"newLine"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:900","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(cls, toClass))"},"failures":[178,179,464,465,466,467,468,416,417,418,419,420,421,422,423,424,425,427,428,431,432,434,435,436,437,469,470,471,472,402,403,473,474,475,476,477,478,479,480,481],"tindex":"fb088a5c-2e79-11e6-8751-03b59146c774","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:795","type":"CtMethodImpl","sourcecode":"private static java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> getTypeArguments(final java.lang.reflect.Type type, final java.lang.Class<?> toClass, final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> subtypeVarAssigns) {\n    if (!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(toClass, toClass))) {\n        {\n            if (type instanceof java.lang.Class<?>) {\n                return org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(((java.lang.Class<?>)(type)), toClass, subtypeVarAssigns);\n            } \n            if (type instanceof java.lang.reflect.ParameterizedType) {\n                return org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(((java.lang.reflect.ParameterizedType)(type)), toClass, subtypeVarAssigns);\n            } \n            if (type instanceof java.lang.reflect.GenericArrayType) {\n                return org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(((java.lang.reflect.GenericArrayType)(type)).getGenericComponentType(), (toClass.isArray() ? toClass.getComponentType() : toClass), subtypeVarAssigns);\n            } \n            if (type instanceof java.lang.reflect.WildcardType) {\n                for (final java.lang.reflect.Type java.lang.reflect.Type : org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(((java.lang.reflect.WildcardType)(type)))) {\n                    if (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(bound, toClass)) {\n                        return org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(bound, toClass, subtypeVarAssigns);\n                    } \n                }\n                return null;\n            } \n            if (type instanceof java.lang.reflect.TypeVariable<?>) {\n                for (final java.lang.reflect.Type java.lang.reflect.Type : org.apache.commons.lang3.reflect.TypeUtils.getImplicitBounds(((java.lang.reflect.TypeVariable<?>)(type)))) {\n                    if (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(bound, toClass)) {\n                        return org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(bound, toClass, subtypeVarAssigns);\n                    } \n                }\n                return null;\n            } \n            throw new java.lang.IllegalStateException((\"found an unhandled type: \" + type));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toClass":"toClass","cls":"toClass"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:332","type":"CtBinaryOperatorImpl","sourcecode":"ch == null"},"failures":[],"tindex":"fb08b16d-2e79-11e6-8751-3fb1820a417f","method":{"position":"org.apache.commons.lang3.CharUtils:331","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(final java.lang.Character ch) {\n    if (ch == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (ch == null) {\n                {\n                    if (ch == null) {\n                        return null;\n                    } \n                    return org.apache.commons.lang3.CharUtils.toString(ch.charValue());\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:137","type":"CtBinaryOperatorImpl","sourcecode":"(((org.apache.commons.lang3.StringUtils.isAllLowerCase(split[0])) && (((split[0].length()) == 2) || ((split[0].length()) == 3))) && ((split[1].length()) == 2)) && (org.apache.commons.lang3.StringUtils.isAllUpperCase(split[1]))"},"failures":[],"tindex":"fb08b16e-2e79-11e6-8751-8393c7ee6704","method":{"position":"org.apache.commons.lang3.StringUtils:3948","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final java.lang.Object[] array, final java.lang.String separator) {\n    if ((((org.apache.commons.lang3.StringUtils.isAllLowerCase(array[0])) && (((split[0].length()) == 2) || ((split[0].length()) == 3))) && ((split[1].length()) == 2)) && (org.apache.commons.lang3.StringUtils.isAllUpperCase(split[1]))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            return org.apache.commons.lang3.StringUtils.join(array, separator, 0, array.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"split":"array"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:763","type":"CtFieldReadImpl","sourcecode":"objectsTriviallyEqual"},"failures":[482,177,483,484,485,486,487,488,489,490,178,179,491,492,464,465,466,467,468,180,180,181,181,182,182,183,183,184,184,185,185,186,186,187,187,493,494,495,496,497,498,499,500,501,502,503,504,188,189,190,191,192,193,194,195,196,197,198,199,199,200,200,201,201,202,202,203,203,204,204,205,205,206,206,207,207,208,208,209,209,210,210,211,211,212,212,213,213,214,214,215,216,217,218,219,220,221,222,223,223,224,224,225,225,226,226,227,227,228,228,229,229,230,230,231,231,232,232,233,233,234,234,235,235,236,236,237,237,238,238,239,239,240,240,241,241,242,242,243,243,244,244,245,245,246,246,247,247,248,248,249,249,250,250,251,251,252,252,253,253,254,254,255,255,256,256,257,257,258,258,259,259,260,260,261,261,262,262,263,263,264,264,265,265,266,266,267,267,268,268,269,269,270,270,271,271,272,272,273,273,274,274,275,275,276,276,277,277,278,278,279,279,280,280,281,281,282,282,283,283,284,284,285,285,286,286,287,287,288,288,289,289,290,290,291,291,292,292,293,293,294,294,295,295,296,296,297,297,298,298,299,299,300,300,301,301,302,302,303,303,304,304,305,305,306,306,307,307,308,308,309,309,310,310,311,311,312,312,313,313,314,314,315,315,316,316,317,317,318,318,319,319,320,320,416,417,418,419,420,421,422,423,424,425,426,427,428,505,429,430,431,432,433,506,434,435,436,507,508,437,509,510,511,321,322,323,324,325,326,327,328,329],"tindex":"fb08b16f-2e79-11e6-8751-3f3eceb73ec2","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1674","type":"CtMethodImpl","sourcecode":"protected void setUseFieldNames(final boolean useFieldNames) {\n    if (useFieldNames) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.this.boolean = useFieldNames;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsTriviallyEqual":"useFieldNames"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:671","type":"CtBinaryOperatorImpl","sourcecode":"(isEquals) == false"},"failures":[],"tindex":"fb08d780-2e79-11e6-8751-510ef2e8ba11","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1946","type":"CtMethodImpl","sourcecode":"protected void setFieldSeparatorAtEnd(final boolean fieldSeparatorAtEnd) {\n    if (fieldSeparatorAtEnd == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.this.boolean = fieldSeparatorAtEnd;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isEquals":"fieldSeparatorAtEnd"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4284","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(remove))"},"failures":[],"tindex":"fb08d781-2e79-11e6-8751-07a2385952ac","method":{"position":"org.apache.commons.lang3.time.FormatCache:69","type":"CtMethodImpl","sourcecode":"public F getInstance(final java.lang.String pattern, java.util.TimeZone timeZone, java.util.Locale locale) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(pattern)) || (org.apache.commons.lang3.StringUtils.isEmpty(pattern))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (pattern == null) {\n                throw new java.lang.NullPointerException(\"pattern must not be null\");\n            } \n            if (timeZone == null) {\n                timeZone = java.util.TimeZone.getDefault();\n            } \n            if (locale == null) {\n                locale = java.util.Locale.getDefault();\n            } \n            final org.apache.commons.lang3.time.FormatCache.MultipartKey org.apache.commons.lang3.time.FormatCache.MultipartKey = new org.apache.commons.lang3.time.FormatCache.MultipartKey(pattern , timeZone , locale);\n            F F = java.util.concurrent.ConcurrentMap<org.apache.commons.lang3.time.FormatCache.MultipartKey, F>.get(key);\n            if (format == null) {\n                format = createInstance(pattern, timeZone, locale);\n                final F F = java.util.concurrent.ConcurrentMap<org.apache.commons.lang3.time.FormatCache.MultipartKey, F>.putIfAbsent(key, format);\n                if (previousValue != null) {\n                    format = previousValue;\n                } \n            } \n            return format;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"pattern","remove":"pattern"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:542","type":"CtBinaryOperatorImpl","sourcecode":"type == null"},"failures":[],"tindex":"fb08fe92-2e79-11e6-8751-5589ee7026c5","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:897","type":"CtMethodImpl","sourcecode":"private static java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> getTypeArguments(java.lang.Class<?> cls, final java.lang.Class<?> toClass, final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> subtypeVarAssigns) {\n    if (cls == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(cls, toClass))) {\n                return null;\n            } \n            if (cls.isPrimitive()) {\n                if (toClass.isPrimitive()) {\n                    return new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>();\n                } \n                cls = org.apache.commons.lang3.ClassUtils.primitiveToWrapper(cls);\n            } \n            final java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = subtypeVarAssigns == null ? new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>() : new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>(subtypeVarAssigns);\n            if (toClass.equals(cls)) {\n                return typeVarAssigns;\n            } \n            return org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(org.apache.commons.lang3.reflect.TypeUtils.getClosestParentType(cls, toClass), toClass, typeVarAssigns);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"cls"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2980","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[512],"tindex":"fb08fe93-2e79-11e6-8751-ebe8e8ddba46","method":{"position":"org.apache.commons.lang3.ArrayUtils:2957","type":"CtMethodImpl","sourcecode":"public static char[] toPrimitive(final java.lang.Character[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.char[];\n            } \n            final char[] char[] = new char[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = array[i].charValue();\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1411","type":"CtBinaryOperatorImpl","sourcecode":"unrolled == null"},"failures":[],"tindex":"fb0925a4-2e79-11e6-8751-47ec229694f1","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:171","type":"CtMethodImpl","sourcecode":"static boolean isRegistered(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Map<java.lang.Object, java.lang.Object> java.util.Map<java.lang.Object, java.lang.Object> = org.apache.commons.lang3.builder.ToStringStyle.getRegistry();\n            return (m != null) && (m.containsKey(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"unrolled":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1115","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[513],"tindex":"fb0925a5-2e79-11e6-8751-014f331828b8","method":{"position":"org.apache.commons.lang3.ArrayUtils:4124","type":"CtMethodImpl","sourcecode":"public static double[] add(final double[] array, final double element) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final double[] double[] = ((double[])(org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(array, java.lang.Double.java.lang.Double.java.lang.Class<java.lang.Double>)));\n            newArray[((newArray.int) - 1)] = element;\n            return newArray;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}