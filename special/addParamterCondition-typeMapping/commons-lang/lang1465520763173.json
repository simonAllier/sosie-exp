{"failureDictionary":{"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":149,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":223,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":145,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayDouble":19,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":198,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeRuntimeEx":169,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveBooleanArray":277,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":181,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":317,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":320,"org.apache.commons.lang3.time.FastDateParserTest.testLANG_832":340,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":40,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_AD":390,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":407,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":97,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDefaults":363,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":99,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":186,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":220,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllNullDoubleArray":284,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":197,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":404,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":4,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":111,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":199,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":226,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":83,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":153,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_BC":348,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":48,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_BC":391,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testTimeZoneMatches":314,"org.apache.commons.lang3.ClassUtilsTest.test_getShortCanonicalName_Class":92,"org.apache.commons.lang3.reflect.TypeLiteralTest.testEquals":263,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testTimeZoneMatches":395,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":128,"org.apache.commons.lang3.reflect.TypeLiteralTest.testBasic":261,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testBooleanArray":294,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":144,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":316,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_AD":347,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":107,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":323,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":41,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":135,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseUncheckedUncheckedException":157,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeEx":170,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":411,"org.apache.commons.lang3.time.FastDateParserTest.testParseNumerics":336,"org.apache.commons.lang3.time.FastDateParserTest.testPatternMatches":353,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":211,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":318,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":401,"org.apache.commons.lang3.time.FastDateParserTest.testLocaleMatches":329,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":69,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testToStringContainsName":311,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseChecked":155,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":319,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testInvalidFragmentWithDate":57,"org.apache.commons.lang3.ClassUtilsTest.test_getShortCanonicalName_Object":90,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":193,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":35,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":327,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":70,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":416,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":222,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":11,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":409,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringString":20,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseError":165,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_AD":345,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":354,"org.apache.commons.lang3.time.FastDateParserTest.testDayOf":330,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":412,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseNumerics":379,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":123,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang538":381,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":42,"org.apache.commons.lang3.BitFieldTest.testSetShortValue":272,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":234,"org.apache.commons.lang3.time.DateFormatUtilsTest.testConstructor":325,"org.apache.commons.lang3.builder.DiffBuilderTest.testStylePassedToDiffResult":184,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":52,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":102,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementBooleanArray":298,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":215,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseUncheckedError":162,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":31,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetTypeArguments":264,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":398,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":410,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testBooleanMultiArray":295,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang303":380,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":96,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testPatternMatches":315,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":191,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":182,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":221,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetCheckedException":167,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":28,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseUncheckedChecked":164,"org.apache.commons.lang3.math.NumberUtilsTest.testMinInt":22,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfDoubleWithStartIndexTolerance":62,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":118,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":344,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":84,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":203,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_BC":389,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":122,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang303":308,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testArrayList":237,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":133,"org.apache.commons.lang3.builder.DiffBuilderTest.testSimilarObjectIgnoresAppends":10,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testBlank":204,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLocaleMatches":305,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":132,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":322,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":192,"org.apache.commons.lang3.builder.DiffResultTest.testNullStyle":250,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":30,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsInstance":265,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_AD":388,"org.apache.commons.lang3.ClassUtilsTest.test_getShortClassName_Class":87,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseUncheckedError":159,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":309,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":141,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvString":173,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.test_Equality_Hash":384,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":414,"org.apache.commons.lang3.ClassUtilsTest.test_getShortClassName_Object":88,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_Object":292,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":114,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":213,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":233,"org.apache.commons.lang3.ArrayUtilsTest.testCloneBoolean":301,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":231,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":68,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":66,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":185,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testBooleanArrayAsObject":296,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":200,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":143,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateInstance":359,"org.apache.commons.lang3.builder.DiffTest.testGetFieldName":254,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":397,"org.apache.commons.lang3.ArrayUtilsTest.testIsNotEmptyPrimitives":23,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testPatternMatches":396,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":259,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":148,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":106,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetFirstContextValue":60,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":116,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":9,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllNullFloatArray":288,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":232,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_AD":385,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":402,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveObjectArray":274,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvWriter":174,"org.apache.commons.lang3.builder.DiffTest.testToString":255,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testLinkedList":239,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllNullCharArray":290,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllNullShortArray":282,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseError":158,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":14,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveCharArray":276,"org.apache.commons.lang3.time.FastDateParserTest.testAmPm":332,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":109,"org.apache.commons.lang3.time.FastDateFormatTest.testLang954":357,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_BC":386,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testEndsWithAny":26,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testMilleniumBug":304,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_BC":378,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseUncheckedException":166,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":44,"org.apache.commons.lang3.ClassUtilsTest.test_getShortCanonicalName_String":91,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":7,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":194,"org.apache.commons.lang3.BooleanUtilsTest.test_isNotFalse_Boolean":179,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":101,"org.apache.commons.lang3.time.FastDateParserTest.testEquals":349,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":146,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":406,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseUncheckedChecked":163,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang645":310,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":36,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":105,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance":355,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":150,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testSpecialCharacters":369,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":32,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParses":393,"org.apache.commons.lang3.reflect.TypeUtilsTest.testTypesSatisfyVariables":268,"org.apache.commons.lang3.reflect.TypeLiteralTest.testRaw":260,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":235,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone_Locale":358,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testDayOf":373,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testMilleniumBug":371,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testSetContextValue":59,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":113,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testQuotes":394,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":419,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":55,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":71,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringCharArray":21,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":208,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":258,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":51,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":147,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone":365,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementBooleanArray":299,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":205,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":400,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":228,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":103,"org.apache.commons.lang3.builder.DiffResultTest.testListIsNonModifiable":249,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String":361,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testSimpleDate":302,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDifferingStyles":364,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":63,"org.apache.commons.lang3.time.FastDateParserTest.testToStringContainsName":339,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiDoubleArray":2,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":110,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseUncheckedUncheckedException":161,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":202,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":37,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":307,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDefaults":368,"org.apache.commons.lang3.builder.DiffResultTest.testNullRhs":253,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":417,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":53,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseUncheckedException":160,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":206,"org.apache.commons.lang3.time.FastDateParserTest.testSpecialCharacters":326,"org.apache.commons.lang3.time.FastDateParserTest.testLowYearPadding":333,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_AD":377,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":43,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":408,"org.apache.commons.lang3.exception.ExceptionUtilsTest.test_getRootCauseMessage_Throwable":85,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":104,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetRawType":270,"org.apache.commons.lang3.time.FastDateFormatTest.testDateDefaults":362,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":108,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testCreateIfAbsentUncheckedSuccess":176,"org.apache.commons.lang3.time.FastDateParserTest.testMilleniumBug":328,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringStringarray":178,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":210,"org.apache.commons.lang3.ClassUtilsTest.test_getShortClassName_String":89,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDateDefaults":360,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testCreateIfAbsentUncheckedException":175,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":405,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllNullIntArray":287,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":56,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":112,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":224,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":313,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionArrays":0,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":387,"org.apache.commons.lang3.time.FastDateParserTest.testParseZone":331,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":81,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmpty":79,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":230,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":120,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":183,"org.apache.commons.lang3.time.FastDateParserTest.testLang538":338,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":117,"org.apache.commons.lang3.time.FastDateParserTest.testLang303":337,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_AD":334,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":225,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":151,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":50,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":415,"org.apache.commons.lang3.ArrayUtilsTest.testToObject_float":271,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":45,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":121,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":126,"org.apache.commons.lang3.builder.DiffTest.testCannotModify":256,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveLongArray":281,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":100,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testBoolean":293,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":15,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":324,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":201,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_BC":335,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":267,"org.apache.commons.lang3.reflect.TypeUtilsTest.testDetermineTypeVariableAssignments":269,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":8,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":17,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":403,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":418,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":130,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":94,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseZone":374,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":139,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":82,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":73,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairs":172,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":64,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testToStringContainsName":382,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":98,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testBlank":218,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeResultsIsSuccessfulFalse":171,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayToObjectArray":300,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":227,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":33,"org.apache.commons.lang3.builder.DiffResultTest.testIterator":251,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":142,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllNullLongArray":289,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":119,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":95,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":76,"org.apache.commons.lang3.reflect.TypeUtilsTest.testParameterizeWithOwner":266,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":140,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":180,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":134,"org.apache.commons.lang3.ArrayUtilsTest.testIsEquals":18,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":236,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":5,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":78,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":187,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":212,"org.apache.commons.lang3.reflect.TypeLiteralTest.testTyped":262,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":49,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":124,"org.apache.commons.lang3.time.FastDateParserTest.testTimeZoneMatches":352,"org.apache.commons.lang3.builder.EqualsBuilderTest.testDoubleArray":3,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_BC":343,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":13,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetRuntimeException":168,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":195,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllNullObjectArray":285,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":370,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":93,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":152,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoVariables":74,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":12,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_Locale":366,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":77,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testCopyOnWriteArrayList":238,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":39,"org.apache.commons.lang3.ClassUtilsTest.test_getAllSuperclasses_Class":188,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testEquals":392,"org.apache.commons.lang3.builder.DiffResultTest.testNullLhs":252,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectAtIndex":24,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":207,"org.apache.commons.lang3.ArrayUtilsTest.testToString":248,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateTimeInstance":367,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseChecked":156,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstring_StringInt":189,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":80,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":321,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_BC":346,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":219,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testAmPm":375,"org.apache.commons.lang3.exception.ExceptionUtilsTest.test_getMessage_Throwable":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":131,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_AD":342,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":216,"org.apache.commons.lang3.builder.DiffTest.testGetType":257,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":196,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":136,"org.apache.commons.lang3.text.StrTokenizerTest.test8":247,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":413,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveDoubleArray":273,"org.apache.commons.lang3.text.StrTokenizerTest.test5":244,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLowYearPadding":376,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLANG_832":383,"org.apache.commons.lang3.text.StrTokenizerTest.test4":243,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":137,"org.apache.commons.lang3.text.StrTokenizerTest.test7":246,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":138,"org.apache.commons.lang3.text.StrTokenizerTest.test6":245,"org.apache.commons.lang3.text.StrTokenizerTest.test1":240,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testEndsWith":25,"org.apache.commons.lang3.text.StrTokenizerTest.test3":242,"org.apache.commons.lang3.text.StrTokenizerTest.test2":241,"org.apache.commons.lang3.time.FastDateParserTest.test_Equality_Hash":341,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":125,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllNullByteArray":283,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":229,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":209,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":356,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":27,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetContextValues":61,"org.apache.commons.lang3.builder.EqualsBuilderTest.testDoubleArrayHiddenByObject":1,"org.apache.commons.lang3.time.FastDateParserTest.testQuotes":351,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveFloatArray":275,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testAddContextValue":58,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testEquals":312,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveByteArray":278,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":214,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveShortArray":279,"org.apache.commons.lang3.ArrayUtilsTest.testHashCode":297,"org.apache.commons.lang3.time.FastDateParserTest.testParses":350,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":115,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":72,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveIntArray":280,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLowYearPadding":306,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringString":177,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":154,"org.apache.commons.lang3.ArrayUtilsTest.testGetLength":291,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":54,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllNullBooleanArray":286,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":129,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":399,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":190,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocaleMatches":372,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":75,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":303,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":127,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":217},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2591","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.ArrayUtils.isEmpty(array)"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"tindex":"80864cc8-2ea7-11e6-93a6-77a3cc310d3e","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:825","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.EqualsBuilder append(final double[] lhs, final double[] rhs) {\n    if (org.apache.commons.lang3.ArrayUtils.isEmpty(lhs)) {\n        {\n            if ((boolean) == false) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if ((lhs == null) || (rhs == null)) {\n                org.apache.commons.lang3.builder.EqualsBuilder.this.setEquals(false);\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                org.apache.commons.lang3.builder.EqualsBuilder.this.setEquals(false);\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && (boolean) ; ++i) {\n                append(lhs[i], rhs[i]);\n            }\n            return org.apache.commons.lang3.builder.EqualsBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"lhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3088","type":"CtBinaryOperatorImpl","sourcecode":"separatorChars == null"},"failures":[20,21],"tindex":"80875e39-2ea7-11e6-93a6-4b88d5ae6b40","method":{"position":"org.apache.commons.lang3.StringUtils:1618","type":"CtMethodImpl","sourcecode":"public static boolean containsAny(final java.lang.CharSequence cs, final char... searchChars) {\n    if (cs == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(cs)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(searchChars))) {\n                return false;\n            } \n            final int int = cs.length();\n            final int int = searchChars.int;\n            final int int = csLength - 1;\n            final int int = searchLength - 1;\n            for (int int = 0 ; i < csLength ; i++) {\n                final char char = cs.charAt(i);\n                for (int int = 0 ; j < searchLength ; j++) {\n                    if ((searchChars[j]) == ch) {\n                        if (java.lang.Character.isHighSurrogate(ch)) {\n                            if (j == searchLast) {\n                                return true;\n                            } \n                            if ((i < csLast) && ((searchChars[(j + 1)]) == (cs.charAt((i + 1))))) {\n                                return true;\n                            } \n                        } else {\n                            return true;\n                        }\n                    } \n                }\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"separatorChars":"cs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:957","type":"CtBinaryOperatorImpl","sourcecode":"ignored != null"},"failures":[],"tindex":"8087854a-2ea7-11e6-93a6-a19b0bfc22ac","method":{"position":"org.apache.commons.lang3.reflect.MethodUtils:92","type":"CtMethodImpl","sourcecode":"public static java.lang.Object invokeMethod(final java.lang.Object object, final java.lang.String methodName, java.lang.Object... args) throws java.lang.IllegalAccessException, java.lang.NoSuchMethodException, java.lang.reflect.InvocationTargetException {\n    if (object != null) {\n        {\n            args = org.apache.commons.lang3.ArrayUtils.nullToEmpty(args);\n            final java.lang.Class<?>[] java.lang.Class<?>[] = org.apache.commons.lang3.ClassUtils.toClass(args);\n            return org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(object, methodName, args, parameterTypes);\n        }\n    } else {\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ignored":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5534","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))"},"failures":[22],"tindex":"8087854b-2ea7-11e6-93a6-7b5ff608355b","method":{"position":"org.apache.commons.lang3.math.NumberUtils:811","type":"CtMethodImpl","sourcecode":"public static int min(final int[] array) {\n    if ((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(array))) {\n        {\n            org.apache.commons.lang3.math.NumberUtils.validateArray(array);\n            int int = array[0];\n            for (int int = 1 ; j < (array.int) ; j++) {\n                if ((array[j]) < min) {\n                    min = array[j];\n                } \n            }\n            return min;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array","values":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:974","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[23],"tindex":"8087ac5c-2ea7-11e6-93a6-e79a16b739bd","method":{"position":"org.apache.commons.lang3.ArrayUtils:3687","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final boolean[] array) {\n    if (array == null) {\n        {\n            return (array != null) && ((array.int) != 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:745","type":"CtBinaryOperatorImpl","sourcecode":"(numerator) == 0"},"failures":[24],"tindex":"8087d36d-2ea7-11e6-93a6-758ae6fb76e0","method":{"position":"org.apache.commons.lang3.ArrayUtils:4358","type":"CtMethodImpl","sourcecode":"public static char[] add(final char[] array, final int index, final char element) {\n    if (index == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((char[])(org.apache.commons.lang3.ArrayUtils.add(array, index, java.lang.Character.valueOf(element), java.lang.Character.java.lang.Character.java.lang.Class<java.lang.Character>)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"numerator":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:795","type":"CtBinaryOperatorImpl","sourcecode":"(isEquals) == false"},"failures":[],"tindex":"8087d36e-2ea7-11e6-93a6-1f189eb3019f","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:65","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setUseClassName(final boolean useClassName) {\n    if (useClassName == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            super.setUseClassName(useClassName);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isEquals":"useClassName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.JavaVersion:144","type":"CtInvocationImpl","sourcecode":"\"1.6\".equals(nom)"},"failures":[],"tindex":"8087fa7f-2ea7-11e6-93a6-7fe5cbd306bd","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:742","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final float[] array, final boolean fullDetail) {\n    if (\"1.6\".equals(fieldName)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, array, java.lang.Boolean.valueOf(fullDetail));\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nom":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6284","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[25,26],"tindex":"8087fa80-2ea7-11e6-93a6-5bf4218d10e8","method":{"position":"org.apache.commons.lang3.StringUtils:7269","type":"CtMethodImpl","sourcecode":"public static boolean endsWith(final java.lang.CharSequence str, final java.lang.CharSequence suffix) {\n    if (suffix == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                {\n                    return org.apache.commons.lang3.StringUtils.endsWith(str, suffix, false);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:654","type":"CtBinaryOperatorImpl","sourcecode":"lhs == null"},"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"tindex":"80882191-2ea7-11e6-93a6-a76cab2944e6","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:151","type":"CtMethodImpl","sourcecode":"public static java.lang.String reflectionToString(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return org.apache.commons.lang3.builder.ReflectionToStringBuilder.toString(object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:514","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[],"tindex":"808848a2-2ea7-11e6-93a6-f92dfeffd719","method":{"position":"org.apache.commons.lang3.StringUtils:7269","type":"CtMethodImpl","sourcecode":"public static boolean endsWith(final java.lang.CharSequence str, final java.lang.CharSequence suffix) {\n    if (suffix == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                {\n                    return org.apache.commons.lang3.StringUtils.endsWith(str, suffix, false);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"suffix"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6621","type":"CtBinaryOperatorImpl","sourcecode":"shortestStrLen == 0"},"failures":[57],"tindex":"808848a3-2ea7-11e6-93a6-c7d3404fde64","method":{"position":"org.apache.commons.lang3.time.DateUtils:1403","type":"CtMethodImpl","sourcecode":"public static long getFragmentInHours(final java.util.Date date, final int fragment) {\n    if (fragment == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"shortestStrLen":"fragment"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:7364","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[58,59,60,61],"tindex":"80886fb4-2ea7-11e6-93a6-6761e32136ba","method":{"position":"org.apache.commons.lang3.exception.ContextedRuntimeException:207","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Object getFirstContextValue(final java.lang.String label) {\n    if (label == null) {\n        {\n            return org.apache.commons.lang3.exception.ContextedRuntimeException.this.org.apache.commons.lang3.exception.ExceptionContext.getFirstContextValue(label);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"label"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2530","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[62],"tindex":"80886fb5-2ea7-11e6-93a6-cb1731208836","method":{"position":"org.apache.commons.lang3.ArrayUtils:2590","type":"CtMethodImpl","sourcecode":"public static int indexOf(final double[] array, final double valueToFind, int startIndex, final double tolerance) {\n    if (startIndex < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                startIndex = 0;\n            } \n            final double double = valueToFind - tolerance;\n            final double double = valueToFind + tolerance;\n            for (int int = startIndex ; i < (array.int) ; i++) {\n                if (((array[i]) >= min) && ((array[i]) <= max)) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"startIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:942","type":"CtBinaryOperatorImpl","sourcecode":"(lhs.length) != (rhs.length)"},"failures":[],"tindex":"808896c6-2ea7-11e6-93a6-cb295af11a4a","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1432","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendFixedWidthPadRight(final java.lang.Object obj, final int width, final char padChar) {\n    if (width != (obj.int)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (width > 0) {\n                ensureCapacity(((int) + width));\n                java.lang.String java.lang.String = obj == null ? getNullText() : obj.toString();\n                if (str == null) {\n                    str = \"\";\n                } \n                final int int = str.length();\n                if (strLen >= width) {\n                    str.getChars(0, width, char[], int);\n                } else {\n                    final int int = width - strLen;\n                    str.getChars(0, strLen, char[], int);\n                    for (int int = 0 ; i < padLen ; i++) {\n                        char[][(((int) + strLen) + i)] = padChar;\n                    }\n                }\n                int += width;\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"obj","length":"width","rhs":"obj"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:575","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79],"tindex":"8088bdd7-2ea7-11e6-93a6-9f1eb8a99db8","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:693","type":"CtMethodImpl","sourcecode":"public boolean replaceIn(final org.apache.commons.lang3.text.StrBuilder source) {\n    if (source == null) {\n        {\n            if (source == null) {\n                return false;\n            } \n            return substitute(source, 0, source.length());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"source"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:877","type":"CtVariableReadImpl","sourcecode":"top"},"failures":[80,27,28,29,30,31,32,33,34,35,36,37,38,39,81,82,40,41,42,43,44,45,83,46,47,48,49,50,51,52,53,54,55,56,84],"tindex":"8088e4e8-2ea7-11e6-93a6-e32166a9df1b","method":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:284","type":"CtMethodImpl","sourcecode":"public static <T>java.lang.String toString(final T object, final org.apache.commons.lang3.builder.ToStringStyle style, final boolean outputTransients, final boolean outputStatics, final java.lang.Class<? super T> reflectUpToClass) {\n    if (outputTransients) {\n        {\n            return new org.apache.commons.lang3.builder.ReflectionToStringBuilder(object , style , null , reflectUpToClass , outputTransients , outputStatics).toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"top":"outputTransients"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2373","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(separator))"},"failures":[],"tindex":"80890bf9-2ea7-11e6-93a6-1f8e6a1b104a","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:834","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final long[] array, final boolean fullDetail) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(fieldName)) || (org.apache.commons.lang3.StringUtils.isEmpty(fieldName))) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, array, java.lang.Boolean.valueOf(fullDetail));\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName","separator":"fieldName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:91","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,114,80,115,27,116,117,117,118,28,29,119,120,121,122,123,124,30,31,125,126,127,32,128,129,130,33,131,132,133,34,35,36,134,135,37,38,39,81,82,40,41,136,137,138,42,43,44,139,45,140,141,83,46,47,142,48,143,49,144,145,146,50,147,51,148,148,149,52,53,150,54,55,151,56,152,153,154],"tindex":"80890bfa-2ea7-11e6-93a6-4b0160918d0c","method":{"position":"org.apache.commons.lang3.ClassUtils:194","type":"CtMethodImpl","sourcecode":"public static java.lang.String getShortClassName(java.lang.String className) {\n    if (className == null) {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(className)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            if (className.startsWith(\"[\")) {\n                while ((className.charAt(0)) == '[') {\n                    className = className.substring(1);\n                    arrayPrefix.append(\"[]\");\n                }\n                if (((className.charAt(0)) == 'L') && ((className.charAt(((className.length()) - 1))) == ';')) {\n                    className = className.substring(1, ((className.length()) - 1));\n                } \n                if (org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.String, java.lang.String>.containsKey(className)) {\n                    className = org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.String, java.lang.String>.get(className);\n                } \n            } \n            final int int = className.lastIndexOf(org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.char);\n            final int int = className.indexOf(org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.char, (lastDotIdx == (-1) ? 0 : lastDotIdx + 1));\n            java.lang.String java.lang.String = className.substring((lastDotIdx + 1));\n            if (innerIdx != (-1)) {\n                out = out.replace(org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.char, org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.char);\n            } \n            return out + arrayPrefix;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"className"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:61","type":"CtBinaryOperatorImpl","sourcecode":"(ex == null) || ((ex.getCause()) == null)"},"failures":[155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171],"tindex":"80895a1b-2ea7-11e6-93a6-4fd0617631f5","method":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:158","type":"CtMethodImpl","sourcecode":"private static void throwCause(final java.util.concurrent.ExecutionException ex) {\n    if ((ex == null) || ((ex.getCause()) == null)) {\n        {\n            if ((ex.getCause()) instanceof java.lang.RuntimeException) {\n                throw ((java.lang.RuntimeException)(ex.getCause()));\n            } \n            if ((ex.getCause()) instanceof java.lang.Error) {\n                throw ((java.lang.Error)(ex.getCause()));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ex":"ex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:570","type":"CtBinaryOperatorImpl","sourcecode":"delimiters == null"},"failures":[],"tindex":"8089812c-2ea7-11e6-93a6-4bff3bbb502c","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:400","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.StringBuffer format(final java.lang.Object obj, final java.lang.StringBuffer toAppendTo, final java.text.FieldPosition pos) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.FastDatePrinter.format(obj, toAppendTo, pos);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delimiters":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2180","type":"CtBinaryOperatorImpl","sourcecode":"length <= 0"},"failures":[172,173,174],"tindex":"8089812d-2ea7-11e6-93a6-d33141386efc","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:259","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int translate(final java.lang.CharSequence input, final int index, final java.io.Writer out) throws java.io.IOException {\n    if (index <= 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (index != 0) {\n                throw new java.lang.IllegalStateException(\"CsvEscaper should never reach the [1] index\");\n            } \n            if (org.apache.commons.lang3.StringUtils.containsNone(input.toString(), org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.char[])) {\n                out.write(input.toString());\n            } else {\n                out.write(org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.char);\n                out.write(org.apache.commons.lang3.StringUtils.replace(input.toString(), org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.java.lang.String, ((org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.java.lang.String) + (org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.java.lang.String))));\n                out.write(org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.char);\n            }\n            return java.lang.Character.codePointCount(input, 0, input.length());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:244","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[175,176],"tindex":"8089a83e-2ea7-11e6-93a6-1b1b0a219b50","method":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:300","type":"CtMethodImpl","sourcecode":"public static <K, V>V createIfAbsentUnchecked(final java.util.concurrent.ConcurrentMap<K, V> map, final K key, final org.apache.commons.lang3.concurrent.ConcurrentInitializer<V> init) {\n    if (map == null) {\n        {\n            try {\n                return org.apache.commons.lang3.concurrent.ConcurrentUtils.createIfAbsent(map, key, init);\n            } catch (final org.apache.commons.lang3.concurrent.ConcurrentException cex) {\n                throw new org.apache.commons.lang3.concurrent.ConcurrentRuntimeException(cex.getCause());\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:120","type":"CtBinaryOperatorImpl","sourcecode":"(str.charAt(3)) != '_'"},"failures":[177,178],"tindex":"8089cf4f-2ea7-11e6-93a6-c552e61db280","method":{"position":"org.apache.commons.lang3.CharSetUtils:205","type":"CtMethodImpl","sourcecode":"public static java.lang.String delete(final java.lang.String str, final java.lang.String... set) {\n    if ((str.charAt(3)) != '_') {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.CharSetUtils.deepEmpty(set))) {\n                return str;\n            } \n            return org.apache.commons.lang3.CharSetUtils.modify(str, set, false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:64","type":"CtBinaryOperatorImpl","sourcecode":"bool == null"},"failures":[179],"tindex":"8089cf50-2ea7-11e6-93a6-535547e72527","method":{"position":"org.apache.commons.lang3.BooleanUtils:140","type":"CtMethodImpl","sourcecode":"public static boolean isNotFalse(final java.lang.Boolean bool) {\n    if (bool == null) {\n        {\n            return !(org.apache.commons.lang3.BooleanUtils.isFalse(bool));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bool":"bool"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:325","type":"CtBinaryOperatorImpl","sourcecode":"pos >= 0"},"failures":[],"tindex":"8089cf51-2ea7-11e6-93a6-319bce97c21d","method":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:138","type":"CtMethodImpl","sourcecode":"protected java.lang.String toUtf16Escape(final int codepoint) {\n    if (codepoint >= 0) {\n        {\n            return \"\\\\u\" + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(codepoint));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pos":"codepoint"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4320","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(remove))"},"failures":[180,4,5,6,181,7,8,182,183,9,184,185,186,11,12,13,14,15,187,16,17],"tindex":"8089cf52-2ea7-11e6-93a6-19cb5a458d1b","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:715","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final short lhs, final short rhs) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(fieldName)) || (org.apache.commons.lang3.StringUtils.isEmpty(fieldName))) {\n        {\n            if (fieldName == null) {\n                throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n            } \n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if (lhs != rhs) {\n                java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Short>(fieldName) {\n                    private static final long serialVersionUID = 1L;\n\n                    @java.lang.Override\n                    public java.lang.Short getLeft() {\n                        return java.lang.Short.valueOf(lhs);\n                    }\n\n                    @java.lang.Override\n                    public java.lang.Short getRight() {\n                        return java.lang.Short.valueOf(rhs);\n                    }\n                });\n            } \n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName","remove":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5588","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"8089f663-2ea7-11e6-93a6-17c221fe9577","method":{"position":"org.apache.commons.lang3.StringUtils:7112","type":"CtMethodImpl","sourcecode":"private static int transpositions(java.lang.CharSequence first, java.lang.CharSequence second) {\n    if (first == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            for (int int = 0 ; i < (first.length()) ; i++) {\n                if ((first.charAt(i)) != (second.charAt(i))) {\n                    transpositions++;\n                } \n            }\n            return transpositions / 2;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"first"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:672","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[129,129],"tindex":"8089f664-2ea7-11e6-93a6-4b81272c2216","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:617","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final char value) {\n    if (fieldName == null) {\n        {\n            if (fieldName == null) {\n                {\n                    org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, value);\n                    return org.apache.commons.lang3.builder.ToStringBuilder.this;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1138","type":"CtBinaryOperatorImpl","sourcecode":"c < a"},"failures":[],"tindex":"808a1d75-2ea7-11e6-93a6-b91ac86b2a74","method":{"position":"org.apache.commons.lang3.BitField:83","type":"CtMethodImpl","sourcecode":"public short getShortValue(final short holder) {\n    if (holder < holder) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((short)(getValue(holder)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"holder","c":"holder"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.AnnotationUtils:288","type":"CtInvocationImpl","sourcecode":"componentType.isAnnotation()"},"failures":[188],"tindex":"808a1d76-2ea7-11e6-93a6-b38f9b1031f0","method":{"position":"org.apache.commons.lang3.ClassUtils:326","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.lang.Class<?>> getAllSuperclasses(final java.lang.Class<?> cls) {\n    if (cls.isAnnotation()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (cls == null) {\n                return null;\n            } \n            final java.util.List<java.lang.Class<?>> java.util.List<java.lang.Class<?>> = new java.util.ArrayList<java.lang.Class<?>>();\n            java.lang.Class<?> java.lang.Class<?> = cls.getSuperclass();\n            while (superclass != null) {\n                classes.add(superclass);\n                superclass = superclass.getSuperclass();\n            }\n            return classes;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"componentType":"cls"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.StringUtils:4948","type":"CtBinaryOperatorImpl","sourcecode":"start > len"},"failures":[],"tindex":"808a1d77-2ea7-11e6-93a6-75abf7c9a1ef","method":{"position":"org.apache.commons.lang3.text.translate.UnicodeUnescaper:36","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int translate(final java.lang.CharSequence input, final int index, final java.io.Writer out) throws java.io.IOException {\n    if (index > index) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if ((((input.charAt(index)) == '\\\\') && ((index + 1) < (input.length()))) && ((input.charAt((index + 1))) == 'u')) {\n                int int = 2;\n                while (((index + i) < (input.length())) && ((input.charAt((index + i))) == 'u')) {\n                    i++;\n                }\n                if (((index + i) < (input.length())) && ((input.charAt((index + i))) == '+')) {\n                    i++;\n                } \n                if (((index + i) + 4) <= (input.length())) {\n                    final java.lang.CharSequence java.lang.CharSequence = input.subSequence((index + i), ((index + i) + 4));\n                    try {\n                        final int int = java.lang.Integer.parseInt(unicode.toString(), 16);\n                        out.write(((char)(value)));\n                    } catch (final java.lang.NumberFormatException nfe) {\n                        throw new java.lang.IllegalArgumentException((\"Unable to parse unicode value: \" + unicode) , nfe);\n                    }\n                    return i + 4;\n                } else {\n                    throw new java.lang.IllegalArgumentException(((\"Less than 4 hex digits in unicode value: '\" + (input.subSequence(index, input.length()))) + \"' due to end of CharSequence\"));\n                }\n            } \n            return 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"index","start":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:808","type":"CtBinaryOperatorImpl","sourcecode":"(comparison) != 0"},"failures":[189],"tindex":"808a4488-2ea7-11e6-93a6-250935ed064c","method":{"position":"org.apache.commons.lang3.StringUtils:2063","type":"CtMethodImpl","sourcecode":"public static java.lang.String substring(final java.lang.String str, int start) {\n    if (start != 0) {\n        {\n            if (str == null) {\n                return null;\n            } \n            if (start < 0) {\n                start = (str.length()) + start;\n            } \n            if (start < 0) {\n                start = 0;\n            } \n            if (start > (str.length())) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            return str.substring(start);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparison":"start"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:427","type":"CtBinaryOperatorImpl","sourcecode":"value == (org.apache.commons.lang3.time.DurationFormatUtils.y)"},"failures":[190,93,191,94,95,96,97,98,99,100,101,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,102,208,209,210,211,212,213,214,103,215,216,104,105,106,107,108,109,110,111,112,113,80,115,27,116,117,118,28,29,119,120,121,122,123,124,30,31,125,126,127,32,128,129,130,33,131,132,133,34,35,36,134,135,37,38,39,81,82,40,41,136,137,138,42,43,44,139,45,140,141,83,46,47,142,48,49,144,145,146,50,147,51,148,149,52,53,54,55,151,56,217,218,219,220,221,152,84,222,223,224,225,226,227,153,228,229,230,231,232,233,234,154,235,236,237,238,239,240,241,242,243,244,245,246,247,248],"tindex":"808a4489-2ea7-11e6-93a6-b33e0896da21","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:376","type":"CtMethodImpl","sourcecode":"public void appendStart(final java.lang.StringBuffer buffer, final java.lang.Object object) {\n    if (object == object) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object != null) {\n                appendClassName(buffer, object);\n                appendIdentityHashCode(buffer, object);\n                appendContentStart(buffer);\n                if (boolean) {\n                    appendFieldSeparator(buffer);\n                } \n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.lang3.time.DurationFormatUtils.y":"object","value":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:905","type":"CtBinaryOperatorImpl","sourcecode":"item == null"},"failures":[118,118,28,29,29,119,120,121,122,123,124,30,30,32,32,128,129,130,33,131,132,133,34,35,36,134,135,37,38,39,81,82,40,41,136,137,138,42,43,43,44,139,45,45,140,141,83,46,47,47,142,48,48,143,49,144,145,146,50,147,51,51,148,149,52,53,150,54,55,151,56],"tindex":"808a6b9a-2ea7-11e6-93a6-23751843f680","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:581","type":"CtMethodImpl","sourcecode":"protected void appendCyclicObject(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final java.lang.Object value) {\n    if (value == null) {\n        {\n            org.apache.commons.lang3.ObjectUtils.identityToString(buffer, value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"item":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1313","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.GenericArrayType"},"failures":[93,191,249,250,251,252,253,180,4,5,6,181,7,8,182,183,9,185,186,12,13,15,187,16,17,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270],"tindex":"808a6b9b-2ea7-11e6-93a6-3fbf4b3008ec","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:357","type":"CtMethodImpl","sourcecode":"private static boolean isAssignable(final java.lang.reflect.Type type, final java.lang.Class<?> toClass) {\n    if (type instanceof java.lang.reflect.GenericArrayType) {\n        {\n            if (type == null) {\n                return (toClass == null) || (!(toClass.isPrimitive()));\n            } \n            if (toClass == null) {\n                return false;\n            } \n            if (toClass.equals(type)) {\n                return true;\n            } \n            if (type instanceof java.lang.Class<?>) {\n                return org.apache.commons.lang3.ClassUtils.isAssignable(((java.lang.Class<?>)(type)), toClass);\n            } \n            if (type instanceof java.lang.reflect.ParameterizedType) {\n                return org.apache.commons.lang3.reflect.TypeUtils.isAssignable(org.apache.commons.lang3.reflect.TypeUtils.getRawType(((java.lang.reflect.ParameterizedType)(type))), toClass);\n            } \n            if (type instanceof java.lang.reflect.TypeVariable<?>) {\n                for (final java.lang.reflect.Type java.lang.reflect.Type : ((java.lang.reflect.TypeVariable<?>)(type)).getBounds()) {\n                    if (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(bound, toClass)) {\n                        return true;\n                    } \n                }\n                return false;\n            } \n            if (type instanceof java.lang.reflect.GenericArrayType) {\n                return (toClass.equals(java.lang.Object.java.lang.Object.java.lang.Class)) || ((toClass.isArray()) && (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(((java.lang.reflect.GenericArrayType)(type)).getGenericComponentType(), toClass.getComponentType())));\n            } \n            if (type instanceof java.lang.reflect.WildcardType) {\n                return false;\n            } \n            throw new java.lang.IllegalStateException((\"found an unhandled type: \" + type));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1714","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[271],"tindex":"808a92ac-2ea7-11e6-93a6-03d97cac1b3a","method":{"position":"org.apache.commons.lang3.ArrayUtils:3409","type":"CtMethodImpl","sourcecode":"public static java.lang.Float[] toObject(final float[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Float[];\n            } \n            final java.lang.Float[] java.lang.Float[] = new java.lang.Float[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = java.lang.Float.valueOf(array[i]);\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:724","type":"CtBinaryOperatorImpl","sourcecode":"lhs != rhs"},"failures":[272],"tindex":"808a92ad-2ea7-11e6-93a6-47a0cdd71959","method":{"position":"org.apache.commons.lang3.BitField:166","type":"CtMethodImpl","sourcecode":"public short setShortValue(final short holder, final short value) {\n    if (holder != holder) {\n        {\n            return ((short)(setValue(holder, value)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"holder","rhs":"holder"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3910","type":"CtBinaryOperatorImpl","sourcecode":"array2 == null"},"failures":[273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291],"tindex":"808ab9be-2ea7-11e6-93a6-9f9eba9409e0","method":{"position":"org.apache.commons.lang3.ArrayUtils:1401","type":"CtMethodImpl","sourcecode":"public static int getLength(final java.lang.Object array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return 0;\n            } \n            return java.lang.reflect.Array.getLength(array);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array2":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5882","type":"CtBinaryOperatorImpl","sourcecode":"cs == null"},"failures":[292],"tindex":"808ab9bf-2ea7-11e6-93a6-6d41087a5532","method":{"position":"org.apache.commons.lang3.text.StrBuilder:477","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic org.apache.commons.lang3.text.StrBuilder append(final java.lang.CharSequence seq) {\n    if (seq == null) {\n        {\n            if (seq == null) {\n                return appendNull();\n            } \n            return append(seq.toString());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"seq"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1887","type":"CtBinaryOperatorImpl","sourcecode":"j == searchLast"},"failures":[],"tindex":"808ab9c0-2ea7-11e6-93a6-7511c328d4d5","method":{"position":"org.apache.commons.lang3.BooleanUtils:216","type":"CtMethodImpl","sourcecode":"public static java.lang.Boolean toBooleanObject(final int value) {\n    if (value == value) {\n        {\n            return value == 0 ? java.lang.Boolean.java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"j":"value","searchLast":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:118","type":"CtVariableReadImpl","sourcecode":"isHex"},"failures":[293,294,295,296,297],"tindex":"808ab9c1-2ea7-11e6-93a6-43e115da8182","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:570","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final boolean value) {\n    if (value) {\n        {\n            int = ((int) * (int)) + (value ? 0 : 1);\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isHex":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:971","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[298,299,300,301],"tindex":"808ae0d2-2ea7-11e6-93a6-758fd058a05e","method":{"position":"org.apache.commons.lang3.ArrayUtils:450","type":"CtMethodImpl","sourcecode":"public static boolean[] clone(final boolean[] array) {\n    if (array == array) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            return array.clone();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array","rhs":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:647","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419],"tindex":"808ae0d3-2ea7-11e6-93a6-210b8439f369","method":{"position":"org.apache.commons.lang3.time.FastDateParser:660","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nboolean addRegex(final org.apache.commons.lang3.time.FastDateParser parser, final java.lang.StringBuilder regex) {\n    if (regex == null) {\n        {\n            if (parser.isNextNumber()) {\n                regex.append(\"(\\\\p{Nd}{\").append(parser.getFieldWidth()).append(\"}+)\");\n            } else {\n                regex.append(\"(\\\\p{Nd}++)\");\n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"regex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:717","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"808ae0d4-2ea7-11e6-93a6-05ed9ad201b3","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:617","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final char value) {\n    if (fieldName == null) {\n        {\n            if (fieldName == null) {\n                {\n                    org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, value);\n                    return org.apache.commons.lang3.builder.ToStringBuilder.this;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1714","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"808b07e5-2ea7-11e6-93a6-7125693f5cf1","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1378","type":"CtMethodImpl","sourcecode":"protected void appendSummary(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final float[] array) {\n    if (array == null) {\n        {\n            appendSummarySize(buffer, fieldName, array.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":46,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}