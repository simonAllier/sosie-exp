{"failureDictionary":{"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":89,"org.apache.commons.lang3.StringUtilsTest.testIsNoneEmpty":171,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":91,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":107,"org.apache.commons.lang3.reflect.TypeUtilsTest.testToLongString":229,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":85,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":88,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":121,"org.apache.commons.lang3.CharUtilsTest.testToIntValue_Character":192,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOf_StringInt":166,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":109,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":16,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":203,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":206,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":65,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_AD":152,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testNullArgument":162,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":105,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":100,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":125,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":120,"org.apache.commons.lang3.StringUtilsTest.testIsNoneBlank":175,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":60,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":106,"org.apache.commons.lang3.StringUtilsTest.testGetJaroWinklerDistance_StringNull":168,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":122,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":93,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":77,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":108,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_BC":141,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":204,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":81,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_BC":153,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_AD":145,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":71,"org.apache.commons.lang3.reflect.TypeLiteralTest.testEquals":228,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":103,"org.apache.commons.lang3.builder.EqualsBuilderTest.testIntArray":169,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":48,"org.apache.commons.lang3.reflect.TypeLiteralTest.testBasic":173,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":84,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_AD":140,"org.apache.commons.lang3.ValidateTest.testValidIndex_charSequence":221,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":66,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":59,"org.apache.commons.lang3.ClassUtilsTest.test_getPackageName_Object":218,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":98,"org.apache.commons.lang3.StringUtilsTest.testSplit_StringString_StringStringInt":217,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeEx":188,"org.apache.commons.lang3.time.FastDateParserTest.testParseZone":131,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":63,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":111,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":37,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_CharArray_int_int":215,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":208,"org.apache.commons.lang3.StringUtilsTest.testUnescapeSurrogatePairs":224,"org.apache.commons.lang3.time.FastDateParserTest.testLang538":135,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseChecked":180,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":32,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":116,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":56,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":209,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_AD":133,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":97,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":87,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":14,"org.apache.commons.lang3.StringUtilsTest.testIsAnyEmpty":170,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":74,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":45,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":101,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseError":187,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_AD":138,"org.apache.commons.lang3.text.StrBuilderTest.testAsWriter":216,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":124,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_BC":134,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":196,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":55,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":40,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang538":147,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":70,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":50,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":99,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseZone":143,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":92,"org.apache.commons.lang3.ArrayUtilsTest.testReverseInt":155,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":64,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvWriter":226,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":17,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseUncheckedError":184,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":210,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":43,"org.apache.commons.lang3.BooleanUtilsTest.test_negate_Boolean":191,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeResultsIsSuccessfulFalse":189,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":51,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":80,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetCheckedException":190,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":36,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":212,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":75,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseUncheckedChecked":186,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":33,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":114,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":13,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":21,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_BC":151,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":213,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":39,"org.apache.commons.lang3.reflect.TypeLiteralTest.testTyped":174,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testIntArray":179,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":83,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":41,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_BC":137,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":53,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadLeft_int":127,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":115,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":118,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":42,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":19,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_AD":150,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseUncheckedError":183,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":76,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testIntArrayAsObject":178,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":62,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":27,"org.apache.commons.lang3.ArrayUtilsTest.testToString":9,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseChecked":181,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":201,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":202,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testStartsWithAny":165,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_CharArray_int_int":214,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":28,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":207,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_BC":139,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":205,"org.apache.commons.lang3.text.StrBuilderTest.testLang412Left":128,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":123,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":82,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testAmPm":144,"org.apache.commons.lang3.text.StrBuilderTest.testLeftString":156,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":79,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":52,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":90,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_AD":136,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":31,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":119,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":78,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadLeft":126,"org.apache.commons.lang3.text.StrTokenizerTest.test8":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":67,"org.apache.commons.lang3.text.StrTokenizerTest.test5":5,"org.apache.commons.lang3.text.StrTokenizerTest.test4":4,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_AD":148,"org.apache.commons.lang3.text.StrTokenizerTest.test7":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":68,"org.apache.commons.lang3.text.StrTokenizerTest.test6":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":69,"org.apache.commons.lang3.text.StrTokenizerTest.test1":1,"org.apache.commons.lang3.text.StrTokenizerTest.test3":3,"org.apache.commons.lang3.text.StrTokenizerTest.test2":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":44,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":110,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseError":182,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":24,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":130,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetMatchingAccessibleMethod":164,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetAccessibleConstructorFromDescription":160,"org.apache.commons.lang3.time.FastDateParserTest.testAmPm":132,"org.apache.commons.lang3.ValidateTest.testNotEmptyString2":158,"org.apache.commons.lang3.ValidateTest.testNotEmptyString1":157,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":104,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetAccessibleConstructor":163,"org.apache.commons.lang3.ConversionTest.testIntToByteArray":0,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_BC":149,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":30,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_BC":146,"org.apache.commons.lang3.ClassUtilsTest.test_getPackageName_Class":219,"org.apache.commons.lang3.mutable.MutableFloatTest.testSubtractValueObject":223,"org.apache.commons.lang3.StringUtilsTest.testGetJaroWinklerDistance_NullNull":167,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":72,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":117,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":102,"org.apache.commons.lang3.ArrayUtilsTest.testHashCode":176,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":193,"org.apache.commons.lang3.CharUtilsTest.testToUnicodeEscaped_Character":129,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":195,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":194,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeExactConstructor":161,"org.apache.commons.lang3.ValidateTest.testValidIndex_withMessage_charSequence":222,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":86,"org.apache.commons.lang3.time.FastDateParserTest.testParses":142,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":29,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":200,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseUncheckedChecked":185,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":57,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":94,"org.apache.commons.lang3.mutable.MutableFloatTest.testGetSet":172,"org.apache.commons.lang3.math.FractionTest.testEquals":220,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":47,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParses":154,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":198,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":199,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":197,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":112,"org.apache.commons.lang3.reflect.TypeLiteralTest.testRaw":227,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testInt":177,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":95,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":49,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":113,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":10,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeConstructor":159,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":211,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvString":225,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":26,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":96,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":11},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:179","type":"CtBinaryOperatorImpl","sourcecode":"wrapLength < 1"},"failures":[0],"tindex":"6b3127e2-2e9f-11e6-ba50-918100e83528","method":{"position":"org.apache.commons.lang3.Conversion:1323","type":"CtMethodImpl","sourcecode":"public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n    if (srcPos < 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (0 == nBytes) {\n                return dst;\n            } \n            if ((((nBytes - 1) * 8) + srcPos) >= 32) {\n                throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n            } \n            int int = 0;\n            for (int int = 0 ; i < nBytes ; i++) {\n                shift = (i * 8) + srcPos;\n                dst[(dstPos + i)] = ((byte)(255 & (src >> shift)));\n            }\n            return dst;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"wrapLength":"srcPos"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:631","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[],"tindex":"6b321243-2e9f-11e6-ba50-694f29bb0235","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:474","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.StringBuffer format(final java.util.Calendar calendar, final java.lang.StringBuffer buf) {\n    if (buf == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.FastDatePrinter.format(calendar, buf);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"buf"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2132","type":"CtBinaryOperatorImpl","sourcecode":"valueToFind == (array[i])"},"failures":[],"tindex":"6b321244-2e9f-11e6-ba50-6b723cb46335","method":{"position":"org.apache.commons.lang3.time.DateUtils:853","type":"CtMethodImpl","sourcecode":"public static java.util.Date truncate(final java.lang.Object date, final int field) {\n    if (field == (date[field])) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (date == null) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            if (date instanceof java.util.Date) {\n                return org.apache.commons.lang3.time.DateUtils.truncate(((java.util.Date)(date)), field);\n            } else if (date instanceof java.util.Calendar) {\n                return org.apache.commons.lang3.time.DateUtils.truncate(((java.util.Calendar)(date)), field).getTime();\n            } else {\n                throw new java.lang.ClassCastException((\"Could not truncate \" + date));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"valueToFind":"field","array":"date","i":"field"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5299","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,25,26,27,27,28,29,30,30,31,31,32,32,33,33,34,34,35,35,36,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,51,52,53,53,54,55,56,56,57,57,58,59,60,60,61,61,62,63,63,64,64,65,65,66,67,68,69,70,70,71,71,72,73,74,75,76,77,77,78,79,80,80,81,81,82,83,84,85,86,87,87,88,89,90,90,91,91,92,92,93,93,94,95,95,96,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125],"tindex":"6b323955-2e9f-11e6-ba50-13f48f1d13d5","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:594","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final java.lang.Object value) {\n    if (value == null) {\n        {\n            buffer.append(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BitField:42","type":"CtBinaryOperatorImpl","sourcecode":"bit_pattern != 0"},"failures":[126,127,128],"tindex":"6b326066-2e9f-11e6-ba50-393adde3a1e0","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1385","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendFixedWidthPadLeft(final java.lang.Object obj, final int width, final char padChar) {\n    if (width != 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (width > 0) {\n                ensureCapacity(((int) + width));\n                java.lang.String java.lang.String = obj == null ? getNullText() : obj.toString();\n                if (str == null) {\n                    str = \"\";\n                } \n                final int int = str.length();\n                if (strLen >= width) {\n                    str.getChars((strLen - width), strLen, char[], int);\n                } else {\n                    final int int = width - strLen;\n                    for (int int = 0 ; i < padLen ; i++) {\n                        char[][((int) + i)] = padChar;\n                    }\n                    str.getChars(0, strLen, char[], ((int) + padLen));\n                }\n                int += width;\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bit_pattern":"width"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:380","type":"CtBinaryOperatorImpl","sourcecode":"ch == null"},"failures":[129],"tindex":"6b328777-2e9f-11e6-ba50-6f94aece63e6","method":{"position":"org.apache.commons.lang3.CharUtils:379","type":"CtMethodImpl","sourcecode":"public static java.lang.String unicodeEscaped(final java.lang.Character ch) {\n    if (ch == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (ch == null) {\n                return null;\n            } \n            return org.apache.commons.lang3.CharUtils.unicodeEscaped(ch.charValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:799","type":"CtBinaryOperatorImpl","sourcecode":"nestedVarCount == 0"},"failures":[130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154],"tindex":"6b32ae88-2e9f-11e6-ba50-37e01a8a8ab0","method":{"position":"org.apache.commons.lang3.time.FastDateParser:684","type":"CtMethodImpl","sourcecode":"int modify(final int iValue) {\n    if (iValue == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return iValue;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nestedVarCount":"iValue"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:682","type":"CtUnaryOperatorImpl","sourcecode":"!(java.util.Arrays.equals(lhs, rhs))"},"failures":[],"tindex":"6b32ae89-2e9f-11e6-ba50-dbf2eb9d0fbe","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:687","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final long[] lhs, final long[] rhs) {\n    if (!(java.util.Arrays.equals(rhs, rhs))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == null) {\n                int = -1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (rhs == null) {\n                int = +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                int = (lhs.int) < (rhs.int) ? -1 : +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && ((int) == 0) ; i++) {\n                append(lhs[i], rhs[i]);\n            }\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"rhs","rhs":"rhs"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3368","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[155],"tindex":"6b32fcaa-2e9f-11e6-ba50-cfa18029ed98","method":{"position":"org.apache.commons.lang3.ArrayUtils:1463","type":"CtMethodImpl","sourcecode":"public static void reverse(final int[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return ;\n            } \n            org.apache.commons.lang3.ArrayUtils.reverse(array, 0, array.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5541","type":"CtBinaryOperatorImpl","sourcecode":"count == null"},"failures":[],"tindex":"6b32fcab-2e9f-11e6-ba50-1b82d98a3259","method":{"position":"org.apache.commons.lang3.mutable.MutableShort:169","type":"CtMethodImpl","sourcecode":"public void subtract(final java.lang.Number operand) {\n    if (operand == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.mutable.MutableShort.this.short -= operand.shortValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"operand"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1886","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isHighSurrogate(ch)"},"failures":[],"tindex":"6b3323bc-2e9f-11e6-ba50-656660001075","method":{"position":"org.apache.commons.lang3.CharRange:170","type":"CtMethodImpl","sourcecode":"public boolean contains(final char ch) {\n    if (java.lang.Character.isHighSurrogate(ch)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((ch >= (char)) && (ch <= (char))) != (boolean);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5515","type":"CtBinaryOperatorImpl","sourcecode":"pads <= 0"},"failures":[156],"tindex":"6b3323bd-2e9f-11e6-ba50-c91d3167e24d","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2179","type":"CtMethodImpl","sourcecode":"public java.lang.String leftString(final int length) {\n    if (length <= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (length <= 0) {\n                return \"\";\n            } else if (length >= (int)) {\n                return new java.lang.String(char[] , 0 , int);\n            } else {\n                return new java.lang.String(char[] , 0 , length);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pads":"length"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:173","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[157,158],"tindex":"6b334ace-2e9f-11e6-ba50-51b88f628fa8","method":{"position":"org.apache.commons.lang3.Validate:393","type":"CtMethodImpl","sourcecode":"public static <T extends java.lang.CharSequence>T notEmpty(final T chars, final java.lang.String message, final java.lang.Object... values) {\n    if (message == null) {\n        {\n            if (chars == null) {\n                throw new java.lang.NullPointerException(java.lang.String.format(message, values));\n            } \n            if ((chars.length()) == 0) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message, values));\n            } \n            return chars;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"message"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:695","type":"CtBinaryOperatorImpl","sourcecode":"(s < (java.lang.Integer.MIN_VALUE)) || (s > (java.lang.Integer.MAX_VALUE))"},"failures":[],"tindex":"6b334acf-2e9f-11e6-ba50-db470288b374","method":{"position":"org.apache.commons.lang3.Conversion:1042","type":"CtMethodImpl","sourcecode":"public static long binaryToLong(final boolean[] src, final int srcPos, final long dstInit, final int dstPos, final int nBools) {\n    if (dstInit <= 0) {\n        {\n            if ((dstInit < dstPos) || (s > dstPos)) {\n                {\n                    if ((((src.int) == 0) && (srcPos == 0)) || (0 == nBools)) {\n                        return dstInit;\n                    } \n                    if (((nBools - 1) + dstPos) >= 64) {\n                        throw new java.lang.IllegalArgumentException(\"nBools-1+dstPos is greather or equal to than 64\");\n                    } \n                    long long = dstInit;\n                    int int = 0;\n                    for (int int = 0 ; i < nBools ; i++) {\n                        shift = (i * 1) + dstPos;\n                        final long long = (src[(i + srcPos)] ? 1L : 0) << shift;\n                        final long long = 1L << shift;\n                        out = (out & (~mask)) | bits;\n                    }\n                    return out;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"s":"dstInit","java.lang.Integer.MIN_VALUE":"dstPos","java.lang.Integer.MAX_VALUE":"dstPos"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:636","type":"CtBinaryOperatorImpl","sourcecode":"cls == null"},"failures":[159,160,161,162,163,164],"tindex":"6b3371e0-2e9f-11e6-ba50-d71797f1080f","method":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:289","type":"CtMethodImpl","sourcecode":"private static boolean isAccessible(final java.lang.Class<?> type) {\n    if (type == null) {\n        {\n            java.lang.Class<?> java.lang.Class<?> = type;\n            while (cls != null) {\n                if (!(java.lang.reflect.Modifier.isPublic(cls.getModifiers()))) {\n                    return false;\n                } \n                cls = cls.getEnclosingClass();\n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"type"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:204","type":"CtBinaryOperatorImpl","sourcecode":"timePeriod <= 0"},"failures":[],"tindex":"6b3398f1-2e9f-11e6-ba50-9577c662ba90","method":{"position":"org.apache.commons.lang3.Conversion:1042","type":"CtMethodImpl","sourcecode":"public static long binaryToLong(final boolean[] src, final int srcPos, final long dstInit, final int dstPos, final int nBools) {\n    if (dstInit <= 0) {\n        {\n            if ((dstInit < dstPos) || (s > dstPos)) {\n                {\n                    if ((((src.int) == 0) && (srcPos == 0)) || (0 == nBools)) {\n                        return dstInit;\n                    } \n                    if (((nBools - 1) + dstPos) >= 64) {\n                        throw new java.lang.IllegalArgumentException(\"nBools-1+dstPos is greather or equal to than 64\");\n                    } \n                    long long = dstInit;\n                    int int = 0;\n                    for (int int = 0 ; i < nBools ; i++) {\n                        shift = (i * 1) + dstPos;\n                        final long long = (src[(i + srcPos)] ? 1L : 0) << shift;\n                        final long long = 1L << shift;\n                        out = (out & (~mask)) | bits;\n                    }\n                    return out;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timePeriod":"dstInit"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1099","type":"CtBinaryOperatorImpl","sourcecode":"b < a"},"failures":[],"tindex":"6b33c002-2e9f-11e6-ba50-09f90bfcaeca","method":{"position":"org.apache.commons.lang3.EnumUtils:249","type":"CtMethodImpl","sourcecode":"public static <E extends java.lang.Enum<E>>java.util.EnumSet<E> processBitVector(final java.lang.Class<E> enumClass, final long value) {\n    if (value < value) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.EnumUtils.checkBitVectorable(enumClass).getEnumConstants();\n            return org.apache.commons.lang3.EnumUtils.processBitVectors(enumClass, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"value","b":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1445","type":"CtBinaryOperatorImpl","sourcecode":"(seq == null) || (searchSeq == null)"},"failures":[165],"tindex":"6b33e713-2e9f-11e6-ba50-7ba4078f39ed","method":{"position":"org.apache.commons.lang3.StringUtils:7231","type":"CtMethodImpl","sourcecode":"public static boolean startsWithAny(final java.lang.CharSequence string, final java.lang.CharSequence... searchStrings) {\n    if ((string == null) || (string == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(string)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(searchStrings))) {\n                return false;\n            } \n            for (final java.lang.CharSequence java.lang.CharSequence : searchStrings) {\n                if (org.apache.commons.lang3.StringUtils.startsWith(string, searchString)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"searchSeq":"string","seq":"string"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:221","type":"CtBinaryOperatorImpl","sourcecode":"(numerator == (java.lang.Integer.MIN_VALUE)) || (denominator == (java.lang.Integer.MIN_VALUE))"},"failures":[],"tindex":"6b33e714-2e9f-11e6-ba50-b7a2bd5b5b4a","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:327","type":"CtMethodImpl","sourcecode":"public static int indexOfThrowable(final java.lang.Throwable throwable, final java.lang.Class<?> clazz, final int fromIndex) {\n    if (fromIndex <= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((fromIndex == fromIndex) || (fromIndex == (java.lang.Integer.java.lang.Integer.int))) {\n                {\n                    return org.apache.commons.lang3.exception.ExceptionUtils.indexOf(throwable, clazz, fromIndex, false);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.lang.Integer.MIN_VALUE":"fromIndex","numerator":"fromIndex","denominator":"fromIndex"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.SystemUtils:1429","type":"CtBinaryOperatorImpl","sourcecode":"version == null"},"failures":[166],"tindex":"6b340e25-2e9f-11e6-ba50-7b9fc0deac70","method":{"position":"org.apache.commons.lang3.StringUtils:966","type":"CtMethodImpl","sourcecode":"public static int indexOf(final java.lang.CharSequence seq, final java.lang.CharSequence searchSeq, final int startPos) {\n    if (seq == null) {\n        {\n            if ((seq == null) || (searchSeq == null)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            return org.apache.commons.lang3.CharSequenceUtils.indexOf(seq, searchSeq, startPos);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"version":"seq"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5122","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[167,168],"tindex":"6b343536-2e9f-11e6-ba50-afd8c541b465","method":{"position":"org.apache.commons.lang3.StringUtils:7010","type":"CtMethodImpl","sourcecode":"public static double getJaroWinklerDistance(final java.lang.CharSequence first, final java.lang.CharSequence second) {\n    if (second == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final double double = 0.1;\n            if ((first == null) || (second == null)) {\n                throw new java.lang.IllegalArgumentException(\"Strings must not be null\");\n            } \n            final double double = org.apache.commons.lang3.StringUtils.score(first, second);\n            final int int = org.apache.commons.lang3.StringUtils.commonPrefixLength(first, second);\n            final double double = (java.lang.Math.round(((jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))) * 100.0))) / 100.0;\n            return matchScore;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"second"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3881","type":"CtBinaryOperatorImpl","sourcecode":"array2 == null"},"failures":[169],"tindex":"6b343537-2e9f-11e6-ba50-1566e08d064f","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:701","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.EqualsBuilder append(final int[] lhs, final int[] rhs) {\n    if (lhs == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((boolean) == false) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if ((lhs == null) || (rhs == null)) {\n                org.apache.commons.lang3.builder.EqualsBuilder.this.setEquals(false);\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                org.apache.commons.lang3.builder.EqualsBuilder.this.setEquals(false);\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && (boolean) ; ++i) {\n                append(lhs[i], rhs[i]);\n            }\n            return org.apache.commons.lang3.builder.EqualsBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array2":"lhs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:359","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.ArrayUtils.isEmpty(css)"},"failures":[170,171],"tindex":"6b345c48-2e9f-11e6-ba50-f3b479039af7","method":{"position":"org.apache.commons.lang3.StringUtils:258","type":"CtMethodImpl","sourcecode":"public static boolean isAnyEmpty(java.lang.CharSequence... css) {\n    if (org.apache.commons.lang3.ArrayUtils.isEmpty(css)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.ArrayUtils.isEmpty(css)) {\n                return true;\n            } \n            for (java.lang.CharSequence java.lang.CharSequence : css) {\n                if (org.apache.commons.lang3.StringUtils.isEmpty(cs)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"css":"css"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomUtils:168","type":"CtBinaryOperatorImpl","sourcecode":"startInclusive == endInclusive"},"failures":[172],"tindex":"6b348359-2e9f-11e6-ba50-c543c8df1f88","method":{"position":"org.apache.commons.lang3.mutable.MutableFloat:96","type":"CtMethodImpl","sourcecode":"public void setValue(final float value) {\n    if (value == value) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.mutable.MutableFloat.this.float = value;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startInclusive":"value","endInclusive":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:691","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[],"tindex":"6b34835a-2e9f-11e6-ba50-b9e43728a074","method":{"position":"org.apache.commons.lang3.ArrayUtils:4205","type":"CtMethodImpl","sourcecode":"public static long[] add(final long[] array, final long element) {\n    if (array == array) {\n        {\n            final long[] long[] = ((long[])(org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(array, java.lang.Long.java.lang.Long.java.lang.Class<java.lang.Long>)));\n            newArray[((newArray.int) - 1)] = element;\n            return newArray;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array","rhs":"array"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:472","type":"CtBinaryOperatorImpl","sourcecode":"lhs instanceof long[]"},"failures":[173,174],"tindex":"6b34aa6b-2e9f-11e6-ba50-5501a3676397","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:199","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object obj) {\n    if (obj instanceof long[]) {\n        {\n            return (obj == (org.apache.commons.lang3.reflect.TypeUtils.ParameterizedTypeImpl.this)) || ((obj instanceof java.lang.reflect.ParameterizedType) && (org.apache.commons.lang3.reflect.TypeUtils.equals(org.apache.commons.lang3.reflect.TypeUtils.ParameterizedTypeImpl.this, ((java.lang.reflect.ParameterizedType)(obj)))));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:253","type":"CtBinaryOperatorImpl","sourcecode":"input != null"},"failures":[],"tindex":"6b34aa6c-2e9f-11e6-ba50-55953104190e","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1134","type":"CtMethodImpl","sourcecode":"protected void appendSummary(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final short[] array) {\n    if (fieldName != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendSummarySize(buffer, fieldName, array.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1440","type":"CtBinaryOperatorImpl","sourcecode":"strLen >= width"},"failures":[],"tindex":"6b34aa6d-2e9f-11e6-ba50-0bcd3b6bda67","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:332","type":"CtMethodImpl","sourcecode":"public static <T>int reflectionHashCode(final int initialNonZeroOddNumber, final int multiplierNonZeroOddNumber, final T object, final boolean testTransients, final java.lang.Class<? super T> reflectUpToClass, final java.lang.String... excludeFields) {\n    if (multiplierNonZeroOddNumber >= multiplierNonZeroOddNumber) {\n        {\n            if (object == null) {\n                throw new java.lang.IllegalArgumentException(\"The object to build a hash code for must not be null\");\n            } \n            final org.apache.commons.lang3.builder.HashCodeBuilder org.apache.commons.lang3.builder.HashCodeBuilder = new org.apache.commons.lang3.builder.HashCodeBuilder(initialNonZeroOddNumber , multiplierNonZeroOddNumber);\n            java.lang.Class<?> java.lang.Class<?> = object.getClass();\n            org.apache.commons.lang3.builder.HashCodeBuilder.reflectionAppend(object, clazz, builder, testTransients, excludeFields);\n            while (((clazz.getSuperclass()) != null) && (clazz != reflectUpToClass)) {\n                clazz = clazz.getSuperclass();\n                org.apache.commons.lang3.builder.HashCodeBuilder.reflectionAppend(object, clazz, builder, testTransients, excludeFields);\n            }\n            return builder.toHashCode();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"strLen":"multiplierNonZeroOddNumber","width":"multiplierNonZeroOddNumber"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:603","type":"CtBinaryOperatorImpl","sourcecode":"(tokens) == null"},"failures":[175],"tindex":"6b34d17e-2e9f-11e6-ba50-97fd05cce448","method":{"position":"org.apache.commons.lang3.StringUtils:388","type":"CtMethodImpl","sourcecode":"public static boolean isNoneBlank(java.lang.CharSequence... css) {\n    if (css == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return !(org.apache.commons.lang3.StringUtils.isAnyBlank(css));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"tokens":"css"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1257","type":"CtBinaryOperatorImpl","sourcecode":"0 == nShorts"},"failures":[176,177,178,179],"tindex":"6b34d17f-2e9f-11e6-ba50-c9a7bb924803","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:743","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final int value) {\n    if (0 == value) {\n        {\n            int = ((int) * (int)) + value;\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nShorts":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5688","type":"CtBinaryOperatorImpl","sourcecode":"(str == null) || ((strLen = str.length()) == 0)"},"failures":[],"tindex":"6b34f890-2e9f-11e6-ba50-ab1bf5aa9bec","method":{"position":"org.apache.commons.lang3.Conversion:1006","type":"CtMethodImpl","sourcecode":"public static byte hexToByte(final java.lang.String src, final int srcPos, final byte dstInit, final int dstPos, final int nHex) {\n    if ((src == null) || ((nHex = str.length()) == 0)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (0 == nHex) {\n                return dstInit;\n            } \n            if ((((nHex - 1) * 4) + dstPos) >= 8) {\n                throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+dstPos is greather or equal to than 8\");\n            } \n            byte byte = dstInit;\n            int int = 0;\n            for (int int = 0 ; i < nHex ; i++) {\n                shift = (i * 4) + dstPos;\n                final int int = (15 & (org.apache.commons.lang3.Conversion.hexDigitToInt(src.charAt((i + srcPos))))) << shift;\n                final int int = 15 << shift;\n                out = ((byte)((out & (~mask)) | bits));\n            }\n            return out;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"src","strLen":"nHex"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.JavaVersion:132","type":"CtInvocationImpl","sourcecode":"\"0.9\".equals(nom)"},"failures":[],"tindex":"6b34f891-2e9f-11e6-ba50-47f594b3bf46","method":{"position":"org.apache.commons.lang3.Validate:966","type":"CtMethodImpl","sourcecode":"public static void inclusiveBetween(long start, long end, long value, java.lang.String message) {\n    if (\"0.9\".equals(message)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((value < start) || (value > end)) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nom":"message"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:159","type":"CtBinaryOperatorImpl","sourcecode":"(ex.getCause()) instanceof java.lang.RuntimeException"},"failures":[180,181,182,183,184,185,186,187,188,189,190],"tindex":"6b34f892-2e9f-11e6-ba50-9b7ada8b5619","method":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:158","type":"CtMethodImpl","sourcecode":"private static void throwCause(final java.util.concurrent.ExecutionException ex) {\n    if ((ex.getCause()) instanceof java.lang.RuntimeException) {\n        {\n            if ((ex.getCause()) instanceof java.lang.RuntimeException) {\n                throw ((java.lang.RuntimeException)(ex.getCause()));\n            } \n            if ((ex.getCause()) instanceof java.lang.Error) {\n                throw ((java.lang.Error)(ex.getCause()));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ex":"ex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:76","type":"CtBinaryOperatorImpl","sourcecode":"locale == null"},"failures":[],"tindex":"6b351fa3-2e9f-11e6-ba50-57f70a372d20","method":{"position":"org.apache.commons.lang3.LocaleUtils:246","type":"CtMethodImpl","sourcecode":"public static boolean isAvailableLocale(final java.util.Locale locale) {\n    if (locale == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.LocaleUtils.availableLocaleList().contains(locale);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"locale":"locale"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:64","type":"CtBinaryOperatorImpl","sourcecode":"bool == null"},"failures":[191],"tindex":"6b351fa4-2e9f-11e6-ba50-49329cd97458","method":{"position":"org.apache.commons.lang3.BooleanUtils:63","type":"CtMethodImpl","sourcecode":"public static java.lang.Boolean negate(final java.lang.Boolean bool) {\n    if (bool == null) {\n        {\n            if (bool == null) {\n                return null;\n            } \n            return bool.booleanValue() ? java.lang.Boolean.java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bool":"bool"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3571","type":"CtBinaryOperatorImpl","sourcecode":"i > startIndex"},"failures":[],"tindex":"6b351fa5-2e9f-11e6-ba50-09e23ff446ac","method":{"position":"org.apache.commons.lang3.ArrayUtils:4937","type":"CtMethodImpl","sourcecode":"public static float[] remove(final float[] array, final int index) {\n    if (index > index) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((float[])(org.apache.commons.lang3.ArrayUtils.remove(((java.lang.Object)(array)), index)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"index","i":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:286","type":"CtBinaryOperatorImpl","sourcecode":"ch == null"},"failures":[192],"tindex":"6b351fa6-2e9f-11e6-ba50-5741391d952c","method":{"position":"org.apache.commons.lang3.CharUtils:262","type":"CtMethodImpl","sourcecode":"public static int toIntValue(final java.lang.Character ch) {\n    if (ch == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (ch == null) {\n                throw new java.lang.IllegalArgumentException(\"The character must not be null\");\n            } \n            return org.apache.commons.lang3.CharUtils.toIntValue(ch.charValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:832","type":"CtBinaryOperatorImpl","sourcecode":"priorVariables == null"},"failures":[115,119,123,125],"tindex":"6b3546b7-2e9f-11e6-ba50-a14f93f09737","method":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:313","type":"CtMethodImpl","sourcecode":"static java.lang.String[] toNoNullStringArray(final java.util.Collection<java.lang.String> collection) {\n    if (collection == null) {\n        {\n            if (collection == null) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.String[];\n            } \n            return org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(collection.toArray());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"priorVariables":"collection"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:418","type":"CtBinaryOperatorImpl","sourcecode":"startIndex > endIndex"},"failures":[],"tindex":"6b3546b8-2e9f-11e6-ba50-cfff07adf87e","method":{"position":"org.apache.commons.lang3.StringUtils:2785","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] splitByWholeSeparatorPreserveAllTokens(final java.lang.String str, final java.lang.String separator, final int max) {\n    if (max > max) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(str, separator, max, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"max","endIndex":"max"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2126","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[193,194,195,1,2,3,4,5,6,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216],"tindex":"6b3546b9-2e9f-11e6-ba50-271fd2fb0852","method":{"position":"org.apache.commons.lang3.text.StrBuilder:744","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder append(final char[] chars, final int startIndex, final int length) {\n    if (startIndex < 0) {\n        {\n            if (chars == null) {\n                return appendNull();\n            } \n            if ((startIndex < 0) || (startIndex > (chars.int))) {\n                throw new java.lang.StringIndexOutOfBoundsException((\"Invalid startIndex: \" + length));\n            } \n            if ((length < 0) || ((startIndex + length) > (chars.int))) {\n                throw new java.lang.StringIndexOutOfBoundsException((\"Invalid length: \" + length));\n            } \n            if (length > 0) {\n                final int int = length();\n                ensureCapacity((len + length));\n                java.lang.System.arraycopy(chars, startIndex, char[], len, length);\n                int += length;\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"startIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5012","type":"CtBinaryOperatorImpl","sourcecode":"last == (org.apache.commons.lang3.CharUtils.LF)"},"failures":[],"tindex":"6b356dca-2e9f-11e6-ba50-c31ad2d88afd","method":{"position":"org.apache.commons.lang3.StringUtils:4126","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final java.lang.Iterable<?> iterable, final char separator) {\n    if (separator == separator) {\n        {\n            if (iterable == null) {\n                return null;\n            } \n            return org.apache.commons.lang3.StringUtils.join(iterable.iterator(), separator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"last":"separator","org.apache.commons.lang3.CharUtils.LF":"separator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.FieldUtils:686","type":"CtVariableReadImpl","sourcecode":"doForceAccess"},"failures":[54,54,55,56],"tindex":"6b356dcb-2e9f-11e6-ba50-49e4ae37517e","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:275","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final boolean value) {\n    if (value) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, value);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"doForceAccess":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2517","type":"CtBinaryOperatorImpl","sourcecode":"((str == null) || (org.apache.commons.lang3.StringUtils.isEmpty(open))) || (org.apache.commons.lang3.StringUtils.isEmpty(close))"},"failures":[217],"tindex":"6b356dcc-2e9f-11e6-ba50-676fff47a3e9","method":{"position":"org.apache.commons.lang3.StringUtils:2665","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] split(final java.lang.String str, final java.lang.String separatorChars, final int max) {\n    if (((str == null) || (org.apache.commons.lang3.StringUtils.isEmpty(separatorChars))) || (org.apache.commons.lang3.StringUtils.isEmpty(str))) {\n        {\n            return org.apache.commons.lang3.StringUtils.splitWorker(str, separatorChars, max, false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str","close":"str","open":"separatorChars"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3736","type":"CtUnaryOperatorImpl","sourcecode":"!(type1.isAssignableFrom(type2))"},"failures":[218,219],"tindex":"6b3594dd-2e9f-11e6-ba50-45461717582b","method":{"position":"org.apache.commons.lang3.ClassUtils:280","type":"CtMethodImpl","sourcecode":"public static java.lang.String getPackageName(final java.lang.Class<?> cls) {\n    if (!(cls.isAssignableFrom(cls))) {\n        {\n            if (cls == null) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            return org.apache.commons.lang3.ClassUtils.getPackageName(cls.getName());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type2":"cls","type1":"cls"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:113","type":"CtBinaryOperatorImpl","sourcecode":"initialCapacity <= 0"},"failures":[],"tindex":"6b3594de-2e9f-11e6-ba50-4d1ee86dcda7","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:327","type":"CtMethodImpl","sourcecode":"public static int indexOfThrowable(final java.lang.Throwable throwable, final java.lang.Class<?> clazz, final int fromIndex) {\n    if (fromIndex <= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((fromIndex == fromIndex) || (fromIndex == (java.lang.Integer.java.lang.Integer.int))) {\n                {\n                    return org.apache.commons.lang3.exception.ExceptionUtils.indexOf(throwable, clazz, fromIndex, false);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"initialCapacity":"fromIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1689","type":"CtBinaryOperatorImpl","sourcecode":"nBytes > 16"},"failures":[],"tindex":"6b3594df-2e9f-11e6-ba50-11adcb590b8c","method":{"position":"org.apache.commons.lang3.time.DateUtils:1441","type":"CtMethodImpl","sourcecode":"public static long getFragmentInDays(final java.util.Date date, final int fragment) {\n    if (fragment > 16) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nBytes":"fragment"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:696","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[220],"tindex":"6b35bbf0-2e9f-11e6-ba50-2be7d9b12f48","method":{"position":"org.apache.commons.lang3.math.Fraction:844","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.lang3.math.Fraction.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.lang3.math.Fraction) == false) {\n                return false;\n            } \n            final org.apache.commons.lang3.math.Fraction org.apache.commons.lang3.math.Fraction = ((org.apache.commons.lang3.math.Fraction)(obj));\n            return ((getNumerator()) == (other.getNumerator())) && ((getDenominator()) == (other.getDenominator()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:902","type":"CtBinaryOperatorImpl","sourcecode":"i > 0"},"failures":[221,222],"tindex":"6b35bbf1-2e9f-11e6-ba50-e57dac9f6b76","method":{"position":"org.apache.commons.lang3.Validate:744","type":"CtMethodImpl","sourcecode":"public static <T extends java.lang.CharSequence>T validIndex(final T chars, final int index, final java.lang.String message, final java.lang.Object... values) {\n    if (index > 0) {\n        {\n            org.apache.commons.lang3.Validate.notNull(chars);\n            if ((index < 0) || (index >= (chars.length()))) {\n                throw new java.lang.IndexOutOfBoundsException(java.lang.String.format(message, values));\n            } \n            return chars;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5271","type":"CtBinaryOperatorImpl","sourcecode":"count == null"},"failures":[223],"tindex":"6b35bbf2-2e9f-11e6-ba50-c9d3cf115e50","method":{"position":"org.apache.commons.lang3.mutable.MutableFloat:188","type":"CtMethodImpl","sourcecode":"public void subtract(final java.lang.Number operand) {\n    if (operand == null) {\n        {\n            org.apache.commons.lang3.mutable.MutableFloat.this.float -= operand.floatValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"operand"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6689","type":"CtBinaryOperatorImpl","sourcecode":"(strs[0]) == null"},"failures":[115,117,118,119,120,121,122,123,125],"tindex":"6b35e303-2e9f-11e6-ba50-1d30d4a80255","method":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:646","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ReflectionToStringBuilder setExcludeFieldNames(final java.lang.String... excludeFieldNamesParam) {\n    if ((excludeFieldNamesParam[0]) == null) {\n        {\n            if (excludeFieldNamesParam == null) {\n                org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.java.lang.String[] = null;\n            } else {\n                org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.java.lang.String[] = org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(excludeFieldNamesParam);\n                java.util.Arrays.sort(org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.java.lang.String[]);\n            }\n            return org.apache.commons.lang3.builder.ReflectionToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"strs":"excludeFieldNamesParam"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:205","type":"CtBinaryOperatorImpl","sourcecode":"length > (size)"},"failures":[224,225,226],"tindex":"6b35e304-2e9f-11e6-ba50-ad6060deb5fc","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:393","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int translate(final java.lang.CharSequence input, final int index, final java.io.Writer out) throws java.io.IOException {\n    if (index > index) {\n        {\n            if (index != 0) {\n                throw new java.lang.IllegalStateException(\"CsvUnescaper should never reach the [1] index\");\n            } \n            if (((input.charAt(0)) != (org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper.org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper.char)) || ((input.charAt(((input.length()) - 1))) != (org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper.org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper.char))) {\n                out.write(input.toString());\n                return java.lang.Character.codePointCount(input, 0, input.length());\n            } \n            final java.lang.String java.lang.String = input.subSequence(1, ((input.length()) - 1)).toString();\n            if (org.apache.commons.lang3.StringUtils.containsAny(quoteless, org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper.org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper.char[])) {\n                out.write(org.apache.commons.lang3.StringUtils.replace(quoteless, ((org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper.org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper.java.lang.String) + (org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper.org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper.java.lang.String)), org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper.org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper.java.lang.String));\n            } else {\n                out.write(input.toString());\n            }\n            return java.lang.Character.codePointCount(input, 0, input.length());\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","length":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:683","type":"CtBinaryOperatorImpl","sourcecode":"toTypeVariable == null"},"failures":[227,173,174,228,229],"tindex":"6b360a15-2e9f-11e6-ba50-653871268985","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1685","type":"CtMethodImpl","sourcecode":"public static java.lang.String toLongString(java.lang.reflect.TypeVariable<?> var) {\n    if (var == null) {\n        {\n            org.apache.commons.lang3.Validate.notNull(var, \"var is null\");\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            final java.lang.reflect.GenericDeclaration java.lang.reflect.GenericDeclaration = ((java.lang.reflect.TypeVariable<?>)(var)).getGenericDeclaration();\n            if (d instanceof java.lang.Class<?>) {\n                java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(d));\n                while (true) {\n                    if ((c.getEnclosingClass()) == null) {\n                        buf.insert(0, c.getName());\n                        break;\n                    } \n                    buf.insert(0, c.getSimpleName()).insert(0, '.');\n                    c = c.getEnclosingClass();\n                }\n            } else if (d instanceof java.lang.reflect.Type) {\n                buf.append(org.apache.commons.lang3.reflect.TypeUtils.toString(((java.lang.reflect.Type)(d))));\n            } else {\n                buf.append(d);\n            }\n            return buf.append(':').append(org.apache.commons.lang3.reflect.TypeUtils.typeVariableToString(var)).toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toTypeVariable":"var"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":52,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}