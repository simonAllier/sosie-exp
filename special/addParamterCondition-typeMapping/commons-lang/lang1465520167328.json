{"failureDictionary":{"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":149,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":130,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":180,"org.apache.commons.lang3.time.DateUtilsTest.testSetMilliseconds":345,"org.apache.commons.lang3.math.NumberUtilsTest.testLang381":369,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":124,"org.apache.commons.lang3.text.StrBuilderTest.testSubstringInt":455,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":205,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":150,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":292,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":295,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":408,"org.apache.commons.lang3.time.FastDatePrinterTest.testMilleniumBug":302,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteIntInt":450,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceAll_StrMatcher_String":453,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":407,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArrayEqualAsObject":161,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":464,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":104,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":331,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":141,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMonthWithDate":266,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparators_Array":274,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":143,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":22,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":158,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":204,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetMatchingAccessibleMethod":229,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":328,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":147,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":179,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":206,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":183,"org.apache.commons.lang3.math.NumberUtilsTest.testToLongString":291,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":439,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":116,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":185,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":462,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":419,"org.apache.commons.lang3.RandomStringUtilsTest.testExceptions":362,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":120,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":421,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeEcmaScript":252,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":411,"org.apache.commons.lang3.StringUtilsTest.testSplitByWholeSeparatorPreserveAllTokens_StringStringInt":260,"org.apache.commons.lang3.reflect.TypeLiteralTest.testEquals":234,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":87,"org.apache.commons.lang3.reflect.TypeLiteralTest.testBasic":232,"org.apache.commons.lang3.time.DateUtilsTest.testSetMinutes":346,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":123,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringString":371,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":304,"org.apache.commons.lang3.StringUtilsTest.testSplitByWholeString_StringStringBooleanInt":261,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":175,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_int_int_String":452,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":298,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":105,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":98,"org.apache.commons.lang3.StringUtilsTest.testCenter_StringInt":374,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSizeStartText":53,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":334,"org.apache.commons.lang3.AnnotationUtilsTest.testNonEquivalentAnnotationsOfSameType":17,"org.apache.commons.lang3.StringUtilsTest.testJoin_IteratorString":277,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":28,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryReplace":457,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":293,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":325,"org.apache.commons.lang3.AnnotationUtilsTest.testSameInstance":11,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":466,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":294,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":200,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":410,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":95,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":467,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":339,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":26,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":160,"org.apache.commons.lang3.AnnotationUtilsTest.testEquivalence":12,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithNullText":242,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_float":397,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":319,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteAll_StrMatcher":458,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetContentEnd":52,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":335,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":94,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":79,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":109,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStripAccents":211,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":192,"org.apache.commons.lang3.builder.DiffBuilderTest.testStylePassedToDiffResult":156,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":49,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":131,"org.apache.commons.lang3.reflect.FieldUtilsTest.testRemoveFinalModifier":473,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":82,"org.apache.commons.lang3.CharUtilsTest.testIsAsciiControl_char":459,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testBugzilla38401":390,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetTypeArguments":235,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":322,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":333,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testBooleanMultiArray":220,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":443,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":140,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":36,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":153,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationPluralWords":389,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":23,"org.apache.commons.lang3.ArrayUtilsTest.testReverse":213,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":72,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":25,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":44,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":78,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang303":314,"org.apache.commons.lang3.builder.EqualsBuilderTest.testByteArrayHiddenByObject":284,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testArrayList":196,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":93,"org.apache.commons.lang3.builder.DiffBuilderTest.testSimilarObjectIgnoresAppends":159,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testBlank":45,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":92,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StringBuffer":243,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":297,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":199,"org.apache.commons.lang3.builder.DiffResultTest.testNullStyle":40,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":404,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":81,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsInstance":236,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriod":378,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":315,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":115,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvString":253,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":337,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_Object":244,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":66,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":191,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfBooleanWithStartIndex":258,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHtml4":248,"org.apache.commons.lang3.builder.DiffBuilderTest.testNullLhs":169,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":189,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSummaryObjectEndText":63,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":465,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":463,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":157,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":207,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":121,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfSecondWithDate":267,"org.apache.commons.lang3.math.NumberUtilsTest.testMinimumFloat":368,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable":221,"org.apache.commons.lang3.builder.DiffTest.testGetFieldName":224,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":321,"org.apache.commons.lang3.builder.DiffBuilderTest.testSameObjectIgnoresAppends":165,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadPriority":395,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_ClassArray_ClassArray":365,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":230,"org.apache.commons.lang3.mutable.MutableShortTest.testAddValuePrimitive":246,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":118,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":250,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":129,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":174,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetArraySeparator":61,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":405,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":436,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":70,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryCount":451,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLexx":384,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":155,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":190,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":326,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvWriter":254,"org.apache.commons.lang3.builder.DiffTest.testToString":225,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testLinkedList":198,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang645":307,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":164,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsert":290,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetMatchingAccessibleMethod":361,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetAccessibleConstructorFromDescription":357,"org.apache.commons.lang3.text.StrBuilderTest.testTrim":448,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":177,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testEdgeDurations":388,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testObjectArrayAsObject":219,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang538":306,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testEndsWithAny":288,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testMilleniumBug":311,"org.apache.commons.lang3.AnnotationUtilsTest.testGeneratedAnnotationEquivalentToRealAnnotation":15,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":168,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":111,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":440,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":151,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":201,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringStringarray":372,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":145,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":412,"org.apache.commons.lang3.ObjectUtilsTest.testToString_Object":279,"org.apache.commons.lang3.builder.EqualsBuilderTest.testAccessors":355,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":414,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":413,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":416,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationHMS":385,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":415,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":418,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":125,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":417,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":330,"org.apache.commons.lang3.ConversionTest.testLongToBinary":210,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang645":316,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":96,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":173,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":133,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":86,"org.apache.commons.lang3.reflect.TypeUtilsTest.testTypesSatisfyVariables":238,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetFieldNameValueSeparator":57,"org.apache.commons.lang3.CharUtilsTest.testToUnicodeEscaped_char":354,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":423,"org.apache.commons.lang3.reflect.TypeLiteralTest.testRaw":231,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":194,"org.apache.commons.lang3.StringUtilsTest.testRemoveStartIgnoreCase":352,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSimpleGet":375,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils":363,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvString":215,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":74,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":65,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSizeEndText":56,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":320,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":135,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":441,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":50,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMinuteWithDate":271,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":228,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":128,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":263,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSplit":376,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":127,"org.apache.commons.lang3.time.DateUtilsTest.testSetYears":350,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLANG815":379,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":46,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":324,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":186,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":32,"org.apache.commons.lang3.builder.DiffResultTest.testListIsNonModifiable":39,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNull":216,"org.apache.commons.lang3.time.DateUtilsTest.testAddDays":364,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testSimpleDate":309,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":460,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testNullArgument":359,"org.apache.commons.lang3.ValidateTest.testInclusiveBetweenDouble":366,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":178,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testObjectArray":218,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":209,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":99,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":313,"org.apache.commons.lang3.StringUtilsIsTest.testIsAlphaspace":370,"org.apache.commons.lang3.builder.DiffResultTest.testNullRhs":43,"org.apache.commons.lang3.time.DateUtilsTest.testSetMonths":245,"org.apache.commons.lang3.ArrayUtilsTest.testReverseObjectRange":214,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":340,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":442,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":132,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfHourWithDate":270,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationISO":386,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":100,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":110,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":332,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryEndIndex":447,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang303":305,"org.apache.commons.lang3.exception.ExceptionUtilsTest.test_getRootCauseMessage_Throwable":343,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":172,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetRawType":240,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":176,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":27,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":406,"org.apache.commons.lang3.time.FastDatePrinterTest.testSimpleDate":300,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_Widening":222,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISOMethod":387,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":329,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":64,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":137,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":181,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":317,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":102,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":188,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiByteArray":287,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":76,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":431,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testStartsWithIgnoreCase":351,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":154,"org.apache.commons.lang3.StringUtilsTest.testAbbreviateMiddle":353,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":71,"org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayOfDoubles":396,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":432,"org.apache.commons.lang3.AnnotationUtilsTest.testBothArgsNull":16,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":433,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":434,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":435,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtml":249,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":182,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":136,"org.apache.commons.lang3.builder.EqualsBuilderTest.testByte":286,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetNullText":55,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":126,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLANG984":382,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLANG981":380,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLANG982":381,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testBuilderReset":394,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":338,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":113,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":84,"org.apache.commons.lang3.builder.DiffTest.testCannotModify":226,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":144,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContains_Char":241,"org.apache.commons.lang3.time.FastDatePrinterTest.testShortDateStyleWithLocales":301,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":166,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_Boolean":259,"org.apache.commons.lang3.ObjectUtilsTest.testIdentityToStringStringBuilder":257,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":299,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":424,"org.apache.commons.lang3.AnnotationUtilsTest.testOneArgNull":9,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":208,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationWords":392,"org.apache.commons.lang3.StringUtilsTest.testCenter_StringIntChar":373,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":425,"org.apache.commons.lang3.time.FastDatePrinterTest.testFormat":308,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":237,"org.apache.commons.lang3.text.StrBuilderTest.testSubstringIntInt":449,"org.apache.commons.lang3.reflect.TypeUtilsTest.testDetermineTypeVariableAssignments":239,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":152,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":171,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_DefaultUnboxing_Widening":223,"org.apache.commons.lang3.builder.EqualsBuilderTest.testByteArray":285,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":327,"org.apache.commons.lang3.builder.DiffResultTest.testNullList":37,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfDayWithDate":269,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":341,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":89,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":138,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":112,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":103,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvWriter":255,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryMatcher":456,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":468,"org.apache.commons.lang3.time.FastDatePrinterTest.testLowYearPadding":303,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":461,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":142,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testBlank":20,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":184,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":90,"org.apache.commons.lang3.builder.DiffResultTest.testIterator":41,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":119,"org.apache.commons.lang3.builder.DiffResultTest.testNoDifferencesString":38,"org.apache.commons.lang3.time.DateUtilsTest.testSetHours":349,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":75,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":139,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":470,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryStartIndex":454,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":114,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":146,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":97,"org.apache.commons.lang3.StringUtilsTest.testSplitByWholeString_StringStringBoolean":262,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testDurationsByBruteForce":377,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparators_Collection":272,"org.apache.commons.lang3.ArrayUtilsTest.testIsEquals":283,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":195,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":148,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":471,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":29,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":167,"org.apache.commons.lang3.reflect.TypeLiteralTest.testTyped":233,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":122,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":80,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testJiraLang281":393,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":409,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":163,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceFirst_StrMatcher_String":445,"org.apache.commons.lang3.text.StrBuilderTest.testToCharArrayIntInt":212,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":202,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":35,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":24,"org.apache.commons.lang3.AnnotationUtilsTest.testAnnotationsOfDifferingTypes":13,"org.apache.commons.lang3.ArrayUtilsTest.testToObject_byte":280,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":162,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testCopyOnWriteArrayList":197,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":101,"org.apache.commons.lang3.builder.DiffResultTest.testNullLhs":42,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":398,"org.apache.commons.lang3.ArrayUtilsTest.testToString":8,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":48,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetContentStart":54,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":437,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDuration":391,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":438,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":67,"org.apache.commons.lang3.StringUtilsTest.testJoin_IterableString":276,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":296,"org.apache.commons.lang3.text.StrBuilderTest.testEndsWith":281,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":21,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOf_String":367,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":401,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayByte":282,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":402,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondFragmentInLargerUnitWithDate":268,"org.apache.commons.lang3.exception.ExceptionUtilsTest.test_getMessage_Throwable":344,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSummaryObjectStartText":59,"org.apache.commons.lang3.AnnotationUtilsTest.testHashCode":14,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":91,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteFirst_StrMatcher":444,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":34,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":247,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparators_Iterator":273,"org.apache.commons.lang3.text.StrBuilderTest.testSubSequenceIntInt":446,"org.apache.commons.lang3.builder.DiffTest.testGetType":227,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":203,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":117,"org.apache.commons.lang3.reflect.FieldUtilsTest.testRemoveFinalModifierWithAccess":472,"org.apache.commons.lang3.text.StrTokenizerTest.test8":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":106,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":336,"org.apache.commons.lang3.text.StrTokenizerTest.test5":4,"org.apache.commons.lang3.text.StrTokenizerTest.test4":3,"org.apache.commons.lang3.text.StrTokenizerTest.test7":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":107,"org.apache.commons.lang3.StringUtilsTest.testJoin_IteratorChar":278,"org.apache.commons.lang3.text.StrTokenizerTest.test6":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":108,"org.apache.commons.lang3.text.StrTokenizerTest.test1":0,"org.apache.commons.lang3.text.StrTokenizerTest.test3":2,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":420,"org.apache.commons.lang3.text.StrTokenizerTest.test2":1,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfYearWithDate":265,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":83,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetFieldSeparator":60,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":187,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml":256,"org.apache.commons.lang3.AnnotationUtilsTest.testIsValidAnnotationMemberType":18,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":51,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":318,"org.apache.commons.lang3.time.DateUtilsTest.testSetDays":348,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLowDurations":383,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":399,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":400,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJson":251,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetAccessibleConstructor":360,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":69,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testNullDate":264,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":31,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetArrayEnd":58,"org.apache.commons.lang3.ArrayUtilsTest.testHashCode":217,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":403,"org.apache.commons.lang3.builder.DiffBuilderTest.testNullRhs":170,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeExactConstructor":358,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":68,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":430,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLowYearPadding":312,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetArrayStart":62,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":422,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":428,"org.apache.commons.lang3.StringUtilsTest.testDefault_String":342,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":427,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":429,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":426,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":193,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":134,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":88,"org.apache.commons.lang3.StringUtilsTest.testJoin_IterableChar":275,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":323,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":10,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeConstructor":356,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":469,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":310,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsertWithNullText":289,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":85,"org.apache.commons.lang3.time.DateUtilsTest.testSetSeconds":347,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":19},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:385","type":"CtFieldReadImpl","sourcecode":"objectsTriviallyEqual"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,30,30,31,31,32,32,33,33,34,34,35,36,37,38,39,40,41,42,43,44,44,45,45,46,46,47,47,48,48,49,49,50,50,51,51,52,53,54,55,56,57,58,59,60,61,62,63,64,64,65,65,66,66,67,67,68,68,69,69,70,70,71,71,72,72,73,73,74,74,75,75,76,76,77,77,78,78,79,79,80,80,81,81,82,82,83,83,84,84,85,85,86,86,87,87,88,88,89,89,90,90,91,91,92,92,93,93,94,94,95,95,96,96,97,97,98,98,99,99,100,100,101,101,102,102,103,103,104,104,105,105,106,106,107,107,108,108,109,109,110,110,111,111,112,112,113,113,114,114,115,115,116,116,117,117,118,118,119,119,120,120,121,121,122,122,123,123,124,124,125,125,126,126,127,127,128,128,129,129,130,130,131,131,132,132,133,133,134,134,135,135,136,136,137,137,138,138,139,139,140,140,141,141,142,142,143,143,144,144,145,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,180,181,181,182,182,183,183,184,184,185,185,186,186,187,187,188,188,189,189,190,190,191,191,192,192,193,193,194,194,195,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209],"tindex":"1d5f43bd-2ea6-11e6-9ef4-578f507179e0","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1922","type":"CtMethodImpl","sourcecode":"protected void setFieldSeparatorAtStart(final boolean fieldSeparatorAtStart) {\n    if (fieldSeparatorAtStart) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.this.boolean = fieldSeparatorAtStart;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsTriviallyEqual":"fieldSeparatorAtStart"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2914","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.ArrayUtils.isEmpty(array)"},"failures":[210],"tindex":"1d60ca5e-2ea6-11e6-9ef4-c1059351a8c5","method":{"position":"org.apache.commons.lang3.Conversion:1550","type":"CtMethodImpl","sourcecode":"public static boolean[] longToBinary(final long src, final int srcPos, final boolean[] dst, final int dstPos, final int nBools) {\n    if (org.apache.commons.lang3.ArrayUtils.isEmpty(dst)) {\n        {\n            if (0 == nBools) {\n                return dst;\n            } \n            if (((nBools - 1) + srcPos) >= 64) {\n                throw new java.lang.IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 64\");\n            } \n            int int = 0;\n            for (int int = 0 ; i < nBools ; i++) {\n                shift = (i * 1) + srcPos;\n                dst[(dstPos + i)] = (1 & (src >> shift)) != 0;\n            }\n            return dst;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"dst"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1247","type":"CtBinaryOperatorImpl","sourcecode":"str != null"},"failures":[211],"tindex":"1d60f16f-2ea6-11e6-9ef4-e911fcb800f2","method":{"position":"org.apache.commons.lang3.StringUtils:761","type":"CtMethodImpl","sourcecode":"public static java.lang.String stripAccents(final java.lang.String input) {\n    if (input != null) {\n        {\n            if (input == null) {\n                return null;\n            } \n            final java.util.regex.Pattern java.util.regex.Pattern = java.util.regex.Pattern.compile(\"\\\\p{InCombiningDiacriticalMarks}+\");\n            final java.lang.String java.lang.String = java.text.Normalizer.normalize(input, java.text.Normalizer.Form.java.text.Normalizer.Form.java.text.Normalizer.Form);\n            return pattern.matcher(decomposed).replaceAll(\"\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:176","type":"CtBinaryOperatorImpl","sourcecode":"newLineStr == null"},"failures":[],"tindex":"1d613f90-2ea6-11e6-9ef4-77c4c658d678","method":{"position":"org.apache.commons.lang3.text.StrBuilder:863","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendln(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return append(str).appendNewLine();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"newLineStr":"str"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1586","type":"CtBinaryOperatorImpl","sourcecode":"0 == nBools"},"failures":[212],"tindex":"1d613f91-2ea6-11e6-9ef4-3b31d2b43160","method":{"position":"org.apache.commons.lang3.text.StrBuilder:375","type":"CtMethodImpl","sourcecode":"public char[] toCharArray(final int startIndex, int endIndex) {\n    if (0 == endIndex) {\n        {\n            endIndex = validateRange(startIndex, endIndex);\n            final int int = endIndex - startIndex;\n            if (len == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.char[];\n            } \n            final char[] char[] = new char[len];\n            java.lang.System.arraycopy(char[], startIndex, chars, 0, len);\n            return chars;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nBools":"endIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3222","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"1d6166a2-2ea6-11e6-9ef4-efb795eb984d","method":{"position":"org.apache.commons.lang3.Range:475","type":"CtMethodImpl","sourcecode":"public java.lang.String toString(final java.lang.String format) {\n    if (format == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.String.format(format, T, T, java.util.Comparator<T>);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"format"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDatePrinter:260","type":"CtBinaryOperatorImpl","sourcecode":"tokenLen >= 4"},"failures":[213,214],"tindex":"1d6166a3-2ea6-11e6-9ef4-11976c5ba5a9","method":{"position":"org.apache.commons.lang3.ArrayUtils:1818","type":"CtMethodImpl","sourcecode":"public static void reverse(final java.lang.Object[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (endIndexExclusive >= 4) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return ;\n            } \n            int int = startIndexInclusive < 0 ? 0 : startIndexInclusive;\n            int int = (java.lang.Math.min(array.int, endIndexExclusive)) - 1;\n            java.lang.Object java.lang.Object;\n            while (j > i) {\n                tmp = array[j];\n                array[j] = array[i];\n                array[i] = tmp;\n                j--;\n                i++;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"tokenLen":"endIndexExclusive"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5553","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(padStr)"},"failures":[215],"tindex":"1d618db4-2ea6-11e6-9ef4-9519c8657124","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:801","type":"CtMethodImpl","sourcecode":"public static final java.lang.String unescapeCsv(final java.lang.String input) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(input)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"padStr":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDatePrinter:275","type":"CtBinaryOperatorImpl","sourcecode":"(sub.length()) == 1"},"failures":[68,68,69,94,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,124,125,126,127,128,129,130,131,132,133,134,135,136,136,137],"tindex":"1d618db5-2ea6-11e6-9ef4-6351a38ffed1","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:801","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final double value) {\n    if ((fieldName.length()) == 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sub":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDateParser:284","type":"CtInvocationImpl","sourcecode":"locale.equals(org.apache.commons.lang3.time.FastDateParser.JAPANESE_IMPERIAL)"},"failures":[],"tindex":"1d61b4c6-2ea6-11e6-9ef4-c38275dabce8","method":{"position":"org.apache.commons.lang3.LocaleUtils:246","type":"CtMethodImpl","sourcecode":"public static boolean isAvailableLocale(final java.util.Locale locale) {\n    if (locale.equals(locale)) {\n        {\n            return org.apache.commons.lang3.LocaleUtils.availableLocaleList().contains(locale);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"locale":"locale","org.apache.commons.lang3.time.FastDateParser.JAPANESE_IMPERIAL":"locale"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:595","type":"CtBinaryOperatorImpl","sourcecode":"(((ch0 == 'o') || (ch0 == 'O')) && ((ch1 == 'f') || (ch1 == 'F'))) && ((ch2 == 'f') || (ch2 == 'F'))"},"failures":[],"tindex":"1d61b4c7-2ea6-11e6-9ef4-97be3cd5386e","method":{"position":"org.apache.commons.lang3.CharUtils:516","type":"CtMethodImpl","sourcecode":"public static boolean isAsciiNumeric(final char ch) {\n    if ((((ch == 'o') || (ch0 == 'O')) && ((ch == 'f') || (ch1 == 'F'))) && ((ch == 'f') || (ch2 == 'F'))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (ch >= '0') && (ch <= '9');\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch0":"ch","ch2":"ch","ch1":"ch"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2378","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[216],"tindex":"1d61dbd8-2ea6-11e6-9ef4-6bd63119e1bc","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:433","type":"CtMethodImpl","sourcecode":"public java.lang.String replace(final char[] source) {\n    if (source == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (source == null) {\n                return null;\n            } \n            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(source.int).append(source);\n            substitute(buf, 0, source.int);\n            return buf.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"source"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:860","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[217,218,219,220],"tindex":"1d61dbd9-2ea6-11e6-9ef4-9d80cae7f1c6","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:859","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final java.lang.Object[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                int = (int) * (int);\n            } else {\n                for (final java.lang.Object java.lang.Object : array) {\n                    append(element);\n                }\n            }\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:965","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(cls, superClass))"},"failures":[221,222,223,35,36,39,40,41,42,43,224,225,226,227,146,147,148,149,150,151,152,153,154,155,157,158,162,163,166,167,168,171,228,229,230,231,232,233,234,235,236,237,238,239,240],"tindex":"1d6202ea-2ea6-11e6-9ef4-1bdb2088a970","method":{"position":"org.apache.commons.lang3.ClassUtils:593","type":"CtMethodImpl","sourcecode":"public static boolean isAssignable(final java.lang.Class<?> cls, final java.lang.Class<?> toClass) {\n    if (!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(toClass, toClass))) {\n        {\n            return org.apache.commons.lang3.ClassUtils.isAssignable(cls, toClass, org.apache.commons.lang3.SystemUtils.isJavaVersionAtLeast(org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"superClass":"toClass","cls":"toClass"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2442","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[],"tindex":"1d6229fb-2ea6-11e6-9ef4-89d1b25427fa","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:210","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.time.FastDateFormat getDateInstance(final int style, final java.util.TimeZone timeZone) {\n    if (style < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getDateInstance(style, timeZone, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"style"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:425","type":"CtBinaryOperatorImpl","sourcecode":"customPattern != null"},"failures":[60],"tindex":"1d6229fc-2ea6-11e6-9ef4-e9af94a5f9cd","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1895","type":"CtMethodImpl","sourcecode":"protected void setFieldSeparator(java.lang.String fieldSeparator) {\n    if (fieldSeparator != null) {\n        {\n            if (fieldSeparator == null) {\n                fieldSeparator = \"\";\n            } \n            org.apache.commons.lang3.builder.ToStringStyle.this.java.lang.String = fieldSeparator;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"customPattern":"fieldSeparator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:938","type":"CtBinaryOperatorImpl","sourcecode":"((numerator) > 0 ? -(numerator) : numerator) < (-(denominator))"},"failures":[],"tindex":"1d62510d-2ea6-11e6-9ef4-45d10ab8f8c7","method":{"position":"org.apache.commons.lang3.RandomStringUtils:162","type":"CtMethodImpl","sourcecode":"public static java.lang.String random(final int count, final int start, final int end, final boolean letters, final boolean numbers) {\n    if ((end > 0 ? -(int) : int) < (-count)) {\n        {\n            return org.apache.commons.lang3.RandomStringUtils.random(count, start, end, letters, numbers, null, org.apache.commons.lang3.RandomStringUtils.org.apache.commons.lang3.RandomStringUtils.java.util.Random);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"numerator":"end","denominator":"count"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:622","type":"CtBinaryOperatorImpl","sourcecode":"stripChars == null"},"failures":[],"tindex":"1d62510e-2ea6-11e6-9ef4-e7987fcb7a9f","method":{"position":"org.apache.commons.lang3.StringUtils:1498","type":"CtMethodImpl","sourcecode":"public static boolean containsWhitespace(final java.lang.CharSequence seq) {\n    if (seq == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(seq)) {\n                return false;\n            } \n            final int int = seq.length();\n            for (int int = 0 ; i < strLen ; i++) {\n                if (java.lang.Character.isWhitespace(seq.charAt(i))) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"stripChars":"seq"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5423","type":"CtBinaryOperatorImpl","sourcecode":"(padLen == 1) && (pads <= (org.apache.commons.lang3.StringUtils.PAD_LIMIT))"},"failures":[241],"tindex":"1d62781f-2ea6-11e6-9ef4-5d65747ca3e2","method":{"position":"org.apache.commons.lang3.StringUtils:1415","type":"CtMethodImpl","sourcecode":"public static boolean contains(final java.lang.CharSequence seq, final int searchChar) {\n    if ((searchChar == 1) && (searchChar <= searchChar)) {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(seq)) {\n                return false;\n            } \n            return (org.apache.commons.lang3.CharSequenceUtils.indexOf(seq, searchChar, 0)) >= 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pads":"searchChar","padLen":"searchChar","org.apache.commons.lang3.StringUtils.PAD_LIMIT":"searchChar"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:517","type":"CtBinaryOperatorImpl","sourcecode":"classArray == null"},"failures":[],"tindex":"1d627820-2ea6-11e6-9ef4-279ec853de2e","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1639","type":"CtMethodImpl","sourcecode":"private static boolean equals(java.lang.reflect.Type[] t1, java.lang.reflect.Type[] t2) {\n    if (t2 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((t1.int) == (t2.int)) {\n                for (int int = 0 ; i < (t1.int) ; i++) {\n                    if (!(org.apache.commons.lang3.reflect.TypeUtils.equals(t1[i], t2[i]))) {\n                        return false;\n                    } \n                }\n                return true;\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classArray":"t2"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:573","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[242,243,244],"tindex":"1d629f31-2ea6-11e6-9ef4-f5795553714d","method":{"position":"org.apache.commons.lang3.text.StrBuilder:572","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder append(final java.lang.StringBuffer str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return appendNull();\n            } \n            final int int = str.length();\n            if (strLen > 0) {\n                final int int = length();\n                ensureCapacity((len + strLen));\n                str.getChars(0, strLen, char[], len);\n                int += strLen;\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1358","type":"CtBinaryOperatorImpl","sourcecode":"0 == nBytes"},"failures":[245],"tindex":"1d629f32-2ea6-11e6-9ef4-bfc3c1c66f5a","method":{"position":"org.apache.commons.lang3.time.DateUtils:553","type":"CtMethodImpl","sourcecode":"public static java.util.Date setMonths(final java.util.Date date, final int amount) {\n    if (0 == amount) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.set(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nBytes":"amount"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1244","type":"CtBinaryOperatorImpl","sourcecode":"c > a"},"failures":[246],"tindex":"1d62c643-2ea6-11e6-9ef4-8fc30a12215b","method":{"position":"org.apache.commons.lang3.mutable.MutableShort:137","type":"CtMethodImpl","sourcecode":"public void add(final short operand) {\n    if (operand > operand) {\n        {\n            org.apache.commons.lang3.mutable.MutableShort.this.short += operand;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"operand","c":"operand"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.StringUtils:7053","type":"CtBinaryOperatorImpl","sourcecode":"((m1.length()) == 0) || ((m2.length()) == 0)"},"failures":[247,248,249,250,251,252,253,254,215,255,256],"tindex":"1d62c644-2ea6-11e6-9ef4-197188476a9d","method":{"position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:75","type":"CtMethodImpl","sourcecode":"public final void translate(final java.lang.CharSequence input, final java.io.Writer out) throws java.io.IOException {\n    if (((input.length()) == 0) || ((input.length()) == 0)) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (out == null) {\n                throw new java.lang.IllegalArgumentException(\"The Writer must not be null\");\n            } \n            if (input == null) {\n                return ;\n            } \n            int int = 0;\n            final int int = input.length();\n            while (pos < len) {\n                final int int = translate(input, pos, out);\n                if (consumed == 0) {\n                    final char[] char[] = java.lang.Character.toChars(java.lang.Character.codePointAt(input, pos));\n                    out.write(c);\n                    pos += c.int;\n                    continue;\n                } \n                for (int int = 0 ; pt < consumed ; pt++) {\n                    pos += java.lang.Character.charCount(java.lang.Character.codePointAt(input, pos));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"m1":"input","m2":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4284","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(remove))"},"failures":[24,32,49,71,71,72,73,74,75,129,129,143,177,185,193],"tindex":"1d62ed55-2ea6-11e6-9ef4-3db7fb08261b","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:618","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final java.util.Map<?, ?> map) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(fieldName)) || (org.apache.commons.lang3.StringUtils.isEmpty(fieldName))) {\n        {\n            buffer.append(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName","remove":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.IllegalArgumentException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2129","type":"CtBinaryOperatorImpl","sourcecode":"endIndex > (size)"},"failures":[],"tindex":"1d631466-2ea6-11e6-9ef4-bd8870c4ad51","method":{"position":"org.apache.commons.lang3.ObjectUtils:852","type":"CtMethodImpl","sourcecode":"public static short CONST_SHORT(final int v) throws java.lang.IllegalArgumentException {\n    if (v > v) {\n        throw new java.lang.IllegalArgumentException();\n    } else {\n        {\n            if ((v < (java.lang.Short.java.lang.Short.short)) || (v > (java.lang.Short.java.lang.Short.short))) {\n                throw new java.lang.IllegalArgumentException(((\"Supplied value must be a valid byte literal between -32768 and 32767: [\" + v) + \"]\"));\n            } \n            return ((short)(v));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"v","endIndex":"v"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:675","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[257],"tindex":"1d631467-2ea6-11e6-9ef4-c13bb52f07ef","method":{"position":"org.apache.commons.lang3.ObjectUtils:267","type":"CtMethodImpl","sourcecode":"public static java.lang.String identityToString(final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == null) {\n                return null;\n            } \n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            org.apache.commons.lang3.ObjectUtils.identityToString(builder, object);\n            return builder.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDatePrinter:200","type":"CtBinaryOperatorImpl","sourcecode":"tokenLen == 2"},"failures":[258],"tindex":"1d633b78-2ea6-11e6-9ef4-fd5ac356c566","method":{"position":"org.apache.commons.lang3.ArrayUtils:2869","type":"CtMethodImpl","sourcecode":"public static int indexOf(final boolean[] array, final boolean valueToFind, int startIndex) {\n    if (startIndex == 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (startIndex == 2) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n                        return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n                    } \n                    if (startIndex < 0) {\n                        startIndex = 0;\n                    } \n                    for (int int = startIndex ; i < (array.int) ; i++) {\n                        if (valueToFind == (array[i])) {\n                            return i;\n                        } \n                    }\n                    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"tokenLen":"startIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:800","type":"CtFieldReadImpl","sourcecode":"objectsTriviallyEqual"},"failures":[259],"tindex":"1d633b79-2ea6-11e6-9ef4-cd176aff5967","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1005","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendln(final boolean value) {\n    if (value) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return append(value).appendNewLine();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsTriviallyEqual":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:774","type":"CtBinaryOperatorImpl","sourcecode":"lhs == null"},"failures":[14],"tindex":"1d63628a-2ea6-11e6-9ef4-abcab394405d","method":{"position":"org.apache.commons.lang3.AnnotationUtils:242","type":"CtMethodImpl","sourcecode":"private static int hashMember(final java.lang.String name, final java.lang.Object value) {\n    if (value == null) {\n        {\n            final int int = (name.hashCode()) * 127;\n            if (value.getClass().isArray()) {\n                return part1 ^ (org.apache.commons.lang3.AnnotationUtils.arrayMemberHash(value.getClass().getComponentType(), value));\n            } \n            if (value instanceof java.lang.annotation.Annotation) {\n                return part1 ^ (org.apache.commons.lang3.AnnotationUtils.hashCode(((java.lang.annotation.Annotation)(value))));\n            } \n            return part1 ^ (value.hashCode());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:608","type":"CtBinaryOperatorImpl","sourcecode":"(isEquals) == false"},"failures":[33,36,64,65,66,66,67,68,69,70,71,72,73,74,75,76,77,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,93,94,95,96,97,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,144],"tindex":"1d63628b-2ea6-11e6-9ef4-6738b97cf57a","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:857","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final boolean value) {\n    if (value == false) {\n        {\n            buffer.append(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isEquals":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomStringUtils:282","type":"CtBinaryOperatorImpl","sourcecode":"(ch >= 56192) && (ch <= 56319)"},"failures":[],"tindex":"1d63628c-2ea6-11e6-9ef4-bd49abe07c37","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2413","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final char ch) {\n    if ((ch == ch) || (ch == ch)) {\n        {\n            if ((ch >= 56192) && (ch <= 56319)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return lastIndexOf(ch, ((int) - 1));\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1239","type":"CtBinaryOperatorImpl","sourcecode":"i > 0"},"failures":[],"tindex":"1d63899d-2ea6-11e6-9ef4-09d4f3c55779","method":{"position":"org.apache.commons.lang3.ArrayUtils:1748","type":"CtMethodImpl","sourcecode":"public static void reverse(final int[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (endIndexExclusive > 0) {\n        {\n            if (array == null) {\n                return ;\n            } \n            int int = startIndexInclusive < 0 ? 0 : startIndexInclusive;\n            int int = (java.lang.Math.min(array.int, endIndexExclusive)) - 1;\n            int int;\n            while (j > i) {\n                tmp = array[j];\n                array[j] = array[i];\n                array[i] = tmp;\n                j--;\n                i++;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"endIndexExclusive"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:1009","type":"CtBinaryOperatorImpl","sourcecode":"toString != null"},"failures":[260,261,262],"tindex":"1d63899e-2ea6-11e6-9ef4-514dda6a879f","method":{"position":"org.apache.commons.lang3.StringUtils:2803","type":"CtMethodImpl","sourcecode":"private static java.lang.String[] splitByWholeSeparatorWorker(final java.lang.String str, final java.lang.String separator, final int max, final boolean preserveAllTokens) {\n    if (separator != null) {\n        {\n            if (str == null) {\n                return null;\n            } \n            final int int = str.length();\n            if (len == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.String[];\n            } \n            if ((separator == null) || (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String.equals(separator))) {\n                return org.apache.commons.lang3.StringUtils.splitWorker(str, null, max, preserveAllTokens);\n            } \n            final int int = separator.length();\n            final java.util.ArrayList<java.lang.String> java.util.ArrayList<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n            int int = 0;\n            int int = 0;\n            int int = 0;\n            while (end < len) {\n                end = str.indexOf(separator, beg);\n                if (end > (-1)) {\n                    if (end > beg) {\n                        numberOfSubstrings += 1;\n                        if (numberOfSubstrings == max) {\n                            end = len;\n                            substrings.add(str.substring(beg));\n                        } else {\n                            substrings.add(str.substring(beg, end));\n                            beg = end + separatorLength;\n                        }\n                    } else {\n                        if (preserveAllTokens) {\n                            numberOfSubstrings += 1;\n                            if (numberOfSubstrings == max) {\n                                end = len;\n                                substrings.add(str.substring(beg));\n                            } else {\n                                substrings.add(org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String);\n                            }\n                        } \n                        beg = end + separatorLength;\n                    }\n                } else {\n                    substrings.add(str.substring(beg));\n                    end = len;\n                }\n            }\n            return substrings.toArray(new java.lang.String[substrings.size()]);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toString":"separator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomUtils:142","type":"CtBinaryOperatorImpl","sourcecode":"startInclusive == endInclusive"},"failures":[263],"tindex":"1d63b0af-2ea6-11e6-9ef4-659b54ad30fb","method":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:207","type":"CtMethodImpl","sourcecode":"public static double max(final double a, final double b, final double c) {\n    if (b == c) {\n        {\n            return org.apache.commons.lang3.math.IEEE754rUtils.max(org.apache.commons.lang3.math.IEEE754rUtils.max(a, b), c);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startInclusive":"b","endInclusive":"c"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:220","type":"CtBinaryOperatorImpl","sourcecode":"lhs != rhs"},"failures":[],"tindex":"1d63b0b0-2ea6-11e6-9ef4-2f30d805c030","method":{"position":"org.apache.commons.lang3.mutable.MutableByte:158","type":"CtMethodImpl","sourcecode":"public void subtract(final byte operand) {\n    if (operand != operand) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.mutable.MutableByte.this.byte -= operand;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"operand","rhs":"operand"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:205","type":"CtBinaryOperatorImpl","sourcecode":"(tmp.length()) != (duration.length())"},"failures":[9,10,11,12,13,14,15,16,17,18,62,172,173,174,175,176,177,178,179],"tindex":"1d63b0b1-2ea6-11e6-9ef4-8b9716b7bd24","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1739","type":"CtMethodImpl","sourcecode":"protected void setArrayStart(java.lang.String arrayStart) {\n    if ((arrayStart.length()) != (arrayStart.length())) {\n        {\n            if (arrayStart == null) {\n                arrayStart = \"\";\n            } \n            org.apache.commons.lang3.builder.ToStringStyle.this.java.lang.String = arrayStart;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"duration":"arrayStart","tmp":"arrayStart"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1586","type":"CtBinaryOperatorImpl","sourcecode":"0 == nBools"},"failures":[264,265,266,267,268,269,270,271],"tindex":"1d63b0b2-2ea6-11e6-9ef4-bf809a462644","method":{"position":"org.apache.commons.lang3.time.DateUtils:1289","type":"CtMethodImpl","sourcecode":"public static long getFragmentInMilliseconds(final java.util.Date date, final int fragment) {\n    if (0 == fragment) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nBools":"fragment"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:196","type":"CtBinaryOperatorImpl","sourcecode":"locale != null"},"failures":[272,273,274,275,276,277,278,279],"tindex":"1d63d7c3-2ea6-11e6-9ef4-79c44fab188d","method":{"position":"org.apache.commons.lang3.ObjectUtils:396","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static java.lang.String toString(final java.lang.Object obj) {\n    if (obj != null) {\n        {\n            return obj == null ? \"\" : obj.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"locale":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3432","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[280,150],"tindex":"1d63d7c4-2ea6-11e6-9ef4-b94cb0055313","method":{"position":"org.apache.commons.lang3.ArrayUtils:3273","type":"CtMethodImpl","sourcecode":"public static java.lang.Byte[] toObject(final byte[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Byte[];\n            } \n            final java.lang.Byte[] java.lang.Byte[] = new java.lang.Byte[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = java.lang.Byte.valueOf(array[i]);\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:969","type":"CtInvocationImpl","sourcecode":"cls.equals(superClass)"},"failures":[],"tindex":"1d63d7c5-2ea6-11e6-9ef4-83e22cbbbf88","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:795","type":"CtMethodImpl","sourcecode":"private static java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> getTypeArguments(final java.lang.reflect.Type type, final java.lang.Class<?> toClass, final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> subtypeVarAssigns) {\n    if (toClass.equals(toClass)) {\n        {\n            if (type instanceof java.lang.Class<?>) {\n                return org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(((java.lang.Class<?>)(type)), toClass, subtypeVarAssigns);\n            } \n            if (type instanceof java.lang.reflect.ParameterizedType) {\n                return org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(((java.lang.reflect.ParameterizedType)(type)), toClass, subtypeVarAssigns);\n            } \n            if (type instanceof java.lang.reflect.GenericArrayType) {\n                return org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(((java.lang.reflect.GenericArrayType)(type)).getGenericComponentType(), (toClass.isArray() ? toClass.getComponentType() : toClass), subtypeVarAssigns);\n            } \n            if (type instanceof java.lang.reflect.WildcardType) {\n                for (final java.lang.reflect.Type java.lang.reflect.Type : org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(((java.lang.reflect.WildcardType)(type)))) {\n                    if (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(bound, toClass)) {\n                        return org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(bound, toClass, subtypeVarAssigns);\n                    } \n                }\n                return null;\n            } \n            if (type instanceof java.lang.reflect.TypeVariable<?>) {\n                for (final java.lang.reflect.Type java.lang.reflect.Type : org.apache.commons.lang3.reflect.TypeUtils.getImplicitBounds(((java.lang.reflect.TypeVariable<?>)(type)))) {\n                    if (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(bound, toClass)) {\n                        return org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(bound, toClass, subtypeVarAssigns);\n                    } \n                }\n                return null;\n            } \n            throw new java.lang.IllegalStateException((\"found an unhandled type: \" + type));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"superClass":"toClass","cls":"toClass"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5262","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[281],"tindex":"1d63fed6-2ea6-11e6-9ef4-edd9c8d45963","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2099","type":"CtMethodImpl","sourcecode":"public boolean endsWith(final java.lang.String str) {\n    if (str == null) {\n        {\n            if (str == null) {\n                return false;\n            } \n            final int int = str.length();\n            if (len == 0) {\n                return true;\n            } \n            if (len > (int)) {\n                return false;\n            } \n            int int = (int) - len;\n            for (int int = 0 ; i < len ; i++ , pos++) {\n                if ((char[][pos]) != (str.charAt(i))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:651","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[19,22,27,30,44,47,68,68,69,70,70,76,76,77,77,91,91,98,98,99,100,101,102,103,104,105,106,115,115,116,117,118,125,125,126,127,127,128,138,141,172,175,180,183,188,191],"tindex":"1d63fed7-2ea6-11e6-9ef4-058a13c5565b","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:485","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.Object[] array) {\n    if (array == array) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, array, null);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array","rhs":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"c < a"},"failures":[282,283,146,147,148,149,151,152,154,155,159,160,162,163,164,166,167,168,171,284,285,286,287],"tindex":"1d6425e8-2ea6-11e6-9ef4-99c866d1a235","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:566","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.EqualsBuilder append(final byte lhs, final byte rhs) {\n    if (rhs < lhs) {\n        {\n            if ((boolean) == false) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            boolean = lhs == rhs;\n            return org.apache.commons.lang3.builder.EqualsBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"lhs","c":"rhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:658","type":"CtBinaryOperatorImpl","sourcecode":"trueString == null"},"failures":[288],"tindex":"1d6425e9-2ea6-11e6-9ef4-cb9ad7a5a9b0","method":{"position":"org.apache.commons.lang3.StringUtils:7388","type":"CtMethodImpl","sourcecode":"public static boolean endsWithAny(final java.lang.CharSequence string, final java.lang.CharSequence... searchStrings) {\n    if (string == null) {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(string)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(searchStrings))) {\n                return false;\n            } \n            for (final java.lang.CharSequence java.lang.CharSequence : searchStrings) {\n                if (org.apache.commons.lang3.StringUtils.endsWith(string, searchString)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trueString":"string"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.InheritanceUtils:61","type":"CtBinaryOperatorImpl","sourcecode":"d == 1"},"failures":[],"tindex":"1d6425ea-2ea6-11e6-9ef4-232b5cea1606","method":{"position":"org.apache.commons.lang3.ArrayUtils:2869","type":"CtMethodImpl","sourcecode":"public static int indexOf(final boolean[] array, final boolean valueToFind, int startIndex) {\n    if (startIndex == 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (startIndex == 2) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n                        return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n                    } \n                    if (startIndex < 0) {\n                        startIndex = 0;\n                    } \n                    for (int int = startIndex ; i < (array.int) ; i++) {\n                        if (valueToFind == (array[i])) {\n                            return i;\n                        } \n                    }\n                    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"d":"startIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.StopWatch:261","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.time.StopWatch.this.splitState) != (org.apache.commons.lang3.time.StopWatch.SplitState.SPLIT)"},"failures":[289,290],"tindex":"1d644cfb-2ea6-11e6-9ef4-014dc640558b","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1478","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder insert(final int index, final java.lang.Object obj) {\n    if (obj != obj) {\n        {\n            if (obj == null) {\n                return insert(index, java.lang.String);\n            } \n            return insert(index, obj.toString());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.lang3.time.StopWatch.SplitState.SPLIT":"obj","splitState":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2119","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[291],"tindex":"1d644cfc-2ea6-11e6-9ef4-63669caafc24","method":{"position":"org.apache.commons.lang3.math.NumberUtils:148","type":"CtMethodImpl","sourcecode":"public static long toLong(final java.lang.String str) {\n    if (str == null) {\n        {\n            return org.apache.commons.lang3.math.NumberUtils.toLong(str, 0L);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1259","type":"CtBinaryOperatorImpl","sourcecode":"b > a"},"failures":[87,87],"tindex":"1d644cfd-2ea6-11e6-9ef4-035d34cf2643","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:303","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final byte value) {\n    if (value > value) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, value);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"value","b":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:761","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"1d64740e-2ea6-11e6-9ef4-9d27953d03cc","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:171","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final boolean[] lhs, final boolean[] rhs) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (fieldName == null) {\n                throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n            } \n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if (!(java.util.Arrays.equals(lhs, rhs))) {\n                java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Boolean[]>(fieldName) {\n                    private static final long serialVersionUID = 1L;\n\n                    @java.lang.Override\n                    public java.lang.Boolean[] getLeft() {\n                        return org.apache.commons.lang3.ArrayUtils.toObject(lhs);\n                    }\n\n                    @java.lang.Override\n                    public java.lang.Boolean[] getRight() {\n                        return org.apache.commons.lang3.ArrayUtils.toObject(rhs);\n                    }\n                });\n            } \n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:496","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341],"tindex":"1d64740f-2ea6-11e6-9ef4-45f7fedeceee","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:473","type":"CtMethodImpl","sourcecode":"protected java.lang.StringBuffer applyRules(final java.util.Calendar calendar, final java.lang.StringBuffer buf) {\n    if (buf == null) {\n        {\n            for (final org.apache.commons.lang3.time.FastDatePrinter.Rule org.apache.commons.lang3.time.FastDatePrinter.Rule : org.apache.commons.lang3.time.FastDatePrinter.Rule[]) {\n                rule.appendTo(buf, calendar);\n            }\n            return buf;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"buf"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5001","type":"CtBinaryOperatorImpl","sourcecode":"(str.length()) == 1"},"failures":[342,343,344],"tindex":"1d649b20-2ea6-11e6-9ef4-9f22bad911f6","method":{"position":"org.apache.commons.lang3.StringUtils:6198","type":"CtMethodImpl","sourcecode":"public static java.lang.String defaultString(final java.lang.String str) {\n    if ((str.length()) == 1) {\n        {\n            return str == null ? org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String : str;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1113","type":"CtBinaryOperatorImpl","sourcecode":"startPos < 0"},"failures":[345,346,347,245,348,349,350],"tindex":"1d649b21-2ea6-11e6-9ef4-bd9f1c79c0f9","method":{"position":"org.apache.commons.lang3.time.DateUtils:646","type":"CtMethodImpl","sourcecode":"private static java.util.Date set(final java.util.Date date, final int calendarField, final int amount) {\n    if (calendarField < 0) {\n        {\n            if (date == null) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            final java.util.Calendar java.util.Calendar = java.util.Calendar.getInstance();\n            c.setLenient(false);\n            c.setTime(date);\n            c.set(calendarField, amount);\n            return c.getTime();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startPos":"calendarField"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5553","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(padStr)"},"failures":[351,352],"tindex":"1d649b22-2ea6-11e6-9ef4-1189969a888c","method":{"position":"org.apache.commons.lang3.StringUtils:7187","type":"CtMethodImpl","sourcecode":"public static boolean startsWithIgnoreCase(final java.lang.CharSequence str, final java.lang.CharSequence prefix) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(prefix)) {\n        {\n            return org.apache.commons.lang3.StringUtils.startsWith(str, prefix, true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"padStr":"prefix"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:544","type":"CtVariableReadImpl","sourcecode":"detail"},"failures":[],"tindex":"1d64c233-2ea6-11e6-9ef4-27a01fb719a8","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:110","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setUseIdentityHashCode(final boolean useIdentityHashCode) {\n    if (useIdentityHashCode) {\n        {\n            if (useIdentityHashCode) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    super.setUseIdentityHashCode(useIdentityHashCode);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"detail":"useIdentityHashCode"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1145","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(valueDelimiter)"},"failures":[353],"tindex":"1d64c234-2ea6-11e6-9ef4-a30c5ed438a3","method":{"position":"org.apache.commons.lang3.StringUtils:6450","type":"CtMethodImpl","sourcecode":"public static java.lang.String abbreviateMiddle(final java.lang.String str, final java.lang.String middle, final int length) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(middle)) {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(middle))) {\n                return str;\n            } \n            if ((length >= (str.length())) || (length < ((middle.length()) + 2))) {\n                return str;\n            } \n            final int int = length - (middle.length());\n            final int int = (targetSting / 2) + (targetSting % 2);\n            final int int = (str.length()) - (targetSting / 2);\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(length);\n            builder.append(str.substring(0, startOffset));\n            builder.append(middle);\n            builder.append(str.substring(endOffset));\n            return builder.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"valueDelimiter":"middle"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1262","type":"CtBinaryOperatorImpl","sourcecode":"c > a"},"failures":[],"tindex":"1d64c235-2ea6-11e6-9ef4-ff28ad08c32d","method":{"position":"org.apache.commons.lang3.ArrayUtils:4771","type":"CtMethodImpl","sourcecode":"public static byte[] removeElement(final byte[] array, final byte element) {\n    if (element > element) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = org.apache.commons.lang3.ArrayUtils.indexOf(array, element);\n            if (index == (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int)) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            return org.apache.commons.lang3.ArrayUtils.remove(array, index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"element","c":"element"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:357","type":"CtBinaryOperatorImpl","sourcecode":"ch < 4096"},"failures":[],"tindex":"1d64e946-2ea6-11e6-9ef4-43e15cd2fb38","method":{"position":"org.apache.commons.lang3.CharUtils:497","type":"CtMethodImpl","sourcecode":"public static boolean isAsciiAlphaLower(final char ch) {\n    if (ch < 4096) {\n        {\n            return (ch >= 'a') && (ch <= 'z');\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3304","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"1d64e947-2ea6-11e6-9ef4-b567998cf137","method":{"position":"org.apache.commons.lang3.Validate:393","type":"CtMethodImpl","sourcecode":"public static <T extends java.lang.CharSequence>T notEmpty(final T chars, final java.lang.String message, final java.lang.Object... values) {\n    if (values == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (chars == null) {\n                throw new java.lang.NullPointerException(java.lang.String.format(message, values));\n            } \n            if ((chars.length()) == 0) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message, values));\n            } \n            return chars;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"values"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:369","type":"CtInvocationImpl","sourcecode":"value.equals(falseValue)"},"failures":[],"tindex":"1d64e948-2ea6-11e6-9ef4-1936e127db8a","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:237","type":"CtMethodImpl","sourcecode":"public static int reflectionHashCode(final int initialNonZeroOddNumber, final int multiplierNonZeroOddNumber, final java.lang.Object object) {\n    if (object.equals(object)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(initialNonZeroOddNumber, multiplierNonZeroOddNumber, object, false, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"falseValue":"object","value":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1668","type":"CtBinaryOperatorImpl","sourcecode":"calendar == null"},"failures":[],"tindex":"1d651059-2ea6-11e6-9ef4-57f38b33cb5f","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:408","type":"CtMethodImpl","sourcecode":"private java.lang.String applyRulesToString(final java.util.Calendar c) {\n    if (c == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return applyRules(c, new java.lang.StringBuffer(int)).toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"calendar":"c"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5782","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isLowerCase(ch)"},"failures":[354],"tindex":"1d65105a-2ea6-11e6-9ef4-a747eb73db1a","method":{"position":"org.apache.commons.lang3.CharUtils:352","type":"CtMethodImpl","sourcecode":"public static java.lang.String unicodeEscaped(final char ch) {\n    if (java.lang.Character.isLowerCase(ch)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (ch < 16) {\n                return \"\\\\u000\" + (java.lang.Integer.toHexString(ch));\n            } else if (ch < 256) {\n                return \"\\\\u00\" + (java.lang.Integer.toHexString(ch));\n            } else if (ch < 4096) {\n                return \"\\\\u0\" + (java.lang.Integer.toHexString(ch));\n            } \n            return \"\\\\u\" + (java.lang.Integer.toHexString(ch));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:998","type":"CtBinaryOperatorImpl","sourcecode":"startIndexInclusive < 0"},"failures":[290],"tindex":"1d65105b-2ea6-11e6-9ef4-69a605902f1b","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1575","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder insert(int index, final boolean value) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            validateIndex(index);\n            if (value) {\n                ensureCapacity(((int) + 4));\n                java.lang.System.arraycopy(char[], index, char[], (index + 4), ((int) - index));\n                char[][(index++)] = 't';\n                char[][(index++)] = 'r';\n                char[][(index++)] = 'u';\n                char[][index] = 'e';\n                int += 4;\n            } else {\n                ensureCapacity(((int) + 5));\n                java.lang.System.arraycopy(char[], index, char[], (index + 5), ((int) - index));\n                char[][(index++)] = 'f';\n                char[][(index++)] = 'a';\n                char[][(index++)] = 'l';\n                char[][(index++)] = 's';\n                char[][index] = 'e';\n                int += 5;\n            }\n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndexInclusive":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:633","type":"CtVariableReadImpl","sourcecode":"autoboxing"},"failures":[355],"tindex":"1d65376c-2ea6-11e6-9ef4-8f20363e4016","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:938","type":"CtMethodImpl","sourcecode":"protected void setEquals(final boolean isEquals) {\n    if (isEquals) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.EqualsBuilder.this.boolean = isEquals;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"autoboxing":"isEquals"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:373","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"1d65376d-2ea6-11e6-9ef4-e5afd6d8cfd9","method":{"position":"org.apache.commons.lang3.time.DateFormatUtils:153","type":"CtMethodImpl","sourcecode":"public static java.lang.String formatUTC(final long millis, final java.lang.String pattern, final java.util.Locale locale) {\n    if (pattern == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateFormatUtils.format(new java.util.Date(millis), pattern, org.apache.commons.lang3.time.DateFormatUtils.org.apache.commons.lang3.time.DateFormatUtils.java.util.TimeZone, locale);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"pattern"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:180","type":"CtBinaryOperatorImpl","sourcecode":"(tmp.length()) != (duration.length())"},"failures":[],"tindex":"1d65376e-2ea6-11e6-9ef4-eb106cee1299","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:171","type":"CtMethodImpl","sourcecode":"private static void reflectionAppend(final java.lang.Object object, final java.lang.Class<?> clazz, final org.apache.commons.lang3.builder.HashCodeBuilder builder, final boolean useTransients, final java.lang.String[] excludeFields) {\n    if ((object.length()) != (object.length())) {\n        {\n            if (org.apache.commons.lang3.builder.HashCodeBuilder.isRegistered(object)) {\n                return ;\n            } \n            try {\n                org.apache.commons.lang3.builder.HashCodeBuilder.register(object);\n                final java.lang.reflect.Field[] java.lang.reflect.Field[] = clazz.getDeclaredFields();\n                java.lang.reflect.AccessibleObject.setAccessible(fields, true);\n                for (final java.lang.reflect.Field java.lang.reflect.Field : fields) {\n                    if ((((!(org.apache.commons.lang3.ArrayUtils.contains(excludeFields, field.getName()))) && ((field.getName().indexOf('$')) == (-1))) && (useTransients || (!(java.lang.reflect.Modifier.isTransient(field.getModifiers()))))) && (!(java.lang.reflect.Modifier.isStatic(field.getModifiers())))) {\n                        try {\n                            final java.lang.Object java.lang.Object = field.get(object);\n                            builder.append(fieldValue);\n                        } catch (final java.lang.IllegalAccessException e) {\n                            throw new java.lang.InternalError(\"Unexpected IllegalAccessException\");\n                        }\n                    } \n                }\n            } finally {\n                org.apache.commons.lang3.builder.HashCodeBuilder.unregister(object);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"duration":"object","tmp":"object"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:173","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[35,36,39,40,41,42,43,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,164,165,166,167,168,171],"tindex":"1d655e7f-2ea6-11e6-9ef4-4376591e77ea","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:129","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final boolean lhs, final boolean rhs) {\n    if (fieldName == null) {\n        {\n            if (fieldName == null) {\n                throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n            } \n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if (lhs != rhs) {\n                java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Boolean>(fieldName) {\n                    private static final long serialVersionUID = 1L;\n\n                    @java.lang.Override\n                    public java.lang.Boolean getLeft() {\n                        return java.lang.Boolean.valueOf(lhs);\n                    }\n\n                    @java.lang.Override\n                    public java.lang.Boolean getRight() {\n                        return java.lang.Boolean.valueOf(rhs);\n                    }\n                });\n            } \n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1049","type":"CtInvocationImpl","sourcecode":"superClass.isInterface()"},"failures":[356,357,358,359,360,361],"tindex":"1d655e80-2ea6-11e6-9ef4-370aa3abd2db","method":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:289","type":"CtMethodImpl","sourcecode":"private static boolean isAccessible(final java.lang.Class<?> type) {\n    if (type.isInterface()) {\n        {\n            java.lang.Class<?> java.lang.Class<?> = type;\n            while (cls != null) {\n                if (!(java.lang.reflect.Modifier.isPublic(cls.getModifiers()))) {\n                    return false;\n                } \n                cls = cls.getEnclosingClass();\n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"superClass":"type"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.text.ParseException","condition":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1106","type":"CtBinaryOperatorImpl","sourcecode":"prior != null"},"failures":[],"tindex":"1d658591-2ea6-11e6-9ef4-1fd435ee71fd","method":{"position":"org.apache.commons.lang3.time.DateUtils:290","type":"CtMethodImpl","sourcecode":"public static java.util.Date parseDate(final java.lang.String str, final java.util.Locale locale, final java.lang.String... parsePatterns) throws java.text.ParseException {\n    if (str != null) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.parseDateWithLeniency(str, locale, parsePatterns, true);\n        }\n    } else {\n        throw new java.text.ParseException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"prior":"str"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:201","type":"CtVariableReadImpl","sourcecode":"wrapLongWords"},"failures":[],"tindex":"1d658592-2ea6-11e6-9ef4-db3d6347ba76","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:110","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setUseIdentityHashCode(final boolean useIdentityHashCode) {\n    if (useIdentityHashCode) {\n        {\n            if (useIdentityHashCode) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    super.setUseIdentityHashCode(useIdentityHashCode);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"wrapLongWords":"useIdentityHashCode"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1870","type":"CtBinaryOperatorImpl","sourcecode":"search != replace"},"failures":[],"tindex":"1d658593-2ea6-11e6-9ef4-a972f7e94c15","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:944","type":"CtMethodImpl","sourcecode":"public void setEscapeChar(final char escapeCharacter) {\n    if (escapeCharacter != escapeCharacter) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.text.StrSubstitutor.this.char = escapeCharacter;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"search":"escapeCharacter","replace":"escapeCharacter"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1056","type":"CtBinaryOperatorImpl","sourcecode":"i > 0"},"failures":[362,363],"tindex":"1d658594-2ea6-11e6-9ef4-b111bdc4eff8","method":{"position":"org.apache.commons.lang3.RandomStringUtils:142","type":"CtMethodImpl","sourcecode":"public static java.lang.String random(final int count, final boolean letters, final boolean numbers) {\n    if (count > 0) {\n        {\n            return org.apache.commons.lang3.RandomStringUtils.random(count, 0, 0, letters, numbers);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDatePrinter:267","type":"CtBinaryOperatorImpl","sourcecode":"tokenLen == 1"},"failures":[364],"tindex":"1d658595-2ea6-11e6-9ef4-fdde57aa2220","method":{"position":"org.apache.commons.lang3.time.DateUtils:446","type":"CtMethodImpl","sourcecode":"public static java.util.Date addDays(final java.util.Date date, final int amount) {\n    if (amount == 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateUtils.add(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"tokenLen":"amount"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:778","type":"CtBinaryOperatorImpl","sourcecode":"classes == null"},"failures":[365],"tindex":"1d65aca6-2ea6-11e6-9ef4-0b9c2ecc0cfe","method":{"position":"org.apache.commons.lang3.ClassUtils:477","type":"CtMethodImpl","sourcecode":"public static boolean isAssignable(final java.lang.Class<?>[] classArray, final java.lang.Class<?>... toClassArray) {\n    if (toClassArray == null) {\n        {\n            return org.apache.commons.lang3.ClassUtils.isAssignable(classArray, toClassArray, org.apache.commons.lang3.SystemUtils.isJavaVersionAtLeast(org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classes":"toClassArray"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:136","type":"CtBinaryOperatorImpl","sourcecode":"style == null"},"failures":[121],"tindex":"1d65aca7-2ea6-11e6-9ef4-19ab925fc82c","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:135","type":"CtMethodImpl","sourcecode":"public static void setDefaultStyle(final org.apache.commons.lang3.builder.ToStringStyle style) {\n    if (style == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (style == null) {\n                throw new java.lang.IllegalArgumentException(\"The style must not be null\");\n            } \n            org.apache.commons.lang3.builder.ToStringBuilder.org.apache.commons.lang3.builder.ToStringBuilder.org.apache.commons.lang3.builder.ToStringStyle = style;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"style":"style"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:388","type":"CtBinaryOperatorImpl","sourcecode":"(java.lang.Double.doubleToLongBits(lhs)) != (java.lang.Double.doubleToLongBits(rhs))"},"failures":[366],"tindex":"1d65aca8-2ea6-11e6-9ef4-c357d0f25879","method":{"position":"org.apache.commons.lang3.Validate:987","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"boxing\")\npublic static void inclusiveBetween(double start, double end, double value) {\n    if ((java.lang.Double.doubleToLongBits(end)) != (java.lang.Double.doubleToLongBits(end))) {\n        {\n            if ((value < start) || (value > end)) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.java.lang.String, value, start, end));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"end","rhs":"end"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:204","type":"CtBinaryOperatorImpl","sourcecode":"timePeriod <= 0"},"failures":[],"tindex":"1d65d3b9-2ea6-11e6-9ef4-b7cf3079a08e","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:448","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.StringBuffer format(final long millis, final java.lang.StringBuffer buf) {\n    if (millis <= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.FastDatePrinter.format(millis, buf);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timePeriod":"millis"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.UnicodeUnescaper:37","type":"CtBinaryOperatorImpl","sourcecode":"(((input.charAt(index)) == '\\\\') && ((index + 1) < (input.length()))) && ((input.charAt((index + 1))) == 'u')"},"failures":[],"tindex":"1d65d3ba-2ea6-11e6-9ef4-8b78451f42af","method":{"position":"org.apache.commons.lang3.StringUtils:1191","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final java.lang.CharSequence seq, final int searchChar, final int startPos) {\n    if ((((seq.charAt(searchChar)) == '\\\\') && ((index + 1) < (input.length()))) && ((input.charAt((index + 1))) == 'u')) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(seq)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            return org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(seq, searchChar, startPos);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"seq","index":"searchChar"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:373","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[367],"tindex":"1d65d3bb-2ea6-11e6-9ef4-8f428e6132a0","method":{"position":"org.apache.commons.lang3.StringUtils:1221","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final java.lang.CharSequence seq, final java.lang.CharSequence searchSeq) {\n    if (searchSeq == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((seq == null) || (searchSeq == null)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            return org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(seq, searchSeq, seq.length());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"searchSeq"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:137","type":"CtInvocationImpl","sourcecode":"java.lang.Float.isNaN(a)"},"failures":[368,369],"tindex":"1d65d3bc-2ea6-11e6-9ef4-9fae5124eb53","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1190","type":"CtMethodImpl","sourcecode":"public static float min(final float a, final float b, final float c) {\n    if (java.lang.Float.isNaN(a)) {\n        {\n            return java.lang.Math.min(java.lang.Math.min(a, b), c);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5003","type":"CtBinaryOperatorImpl","sourcecode":"(ch == (org.apache.commons.lang3.CharUtils.CR)) || (ch == (org.apache.commons.lang3.CharUtils.LF))"},"failures":[],"tindex":"1d65facd-2ea6-11e6-9ef4-fb9294a03c52","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2413","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final char ch) {\n    if ((ch == ch) || (ch == ch)) {\n        {\n            if ((ch >= 56192) && (ch <= 56319)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return lastIndexOf(ch, ((int) - 1));\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch","org.apache.commons.lang3.CharUtils.LF":"ch","org.apache.commons.lang3.CharUtils.CR":"ch"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1578","type":"CtBinaryOperatorImpl","sourcecode":"t1 instanceof java.lang.reflect.GenericArrayType"},"failures":[],"tindex":"1d65face-2ea6-11e6-9ef4-7748c1ce6f0f","method":{"position":"org.apache.commons.lang3.mutable.MutableLong:235","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.lang.reflect.GenericArrayType) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof org.apache.commons.lang3.mutable.MutableLong) {\n                return (long) == (((org.apache.commons.lang3.mutable.MutableLong)(obj)).longValue());\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"t1":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:208","type":"CtBinaryOperatorImpl","sourcecode":"previous != null"},"failures":[370],"tindex":"1d65facf-2ea6-11e6-9ef4-ebf53149bc95","method":{"position":"org.apache.commons.lang3.StringUtils:5881","type":"CtMethodImpl","sourcecode":"public static boolean isAlphaSpace(final java.lang.CharSequence cs) {\n    if (cs != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (cs == null) {\n                return false;\n            } \n            final int int = cs.length();\n            for (int int = 0 ; i < sz ; i++) {\n                if (((java.lang.Character.isLetter(cs.charAt(i))) == false) && ((cs.charAt(i)) != ' ')) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"previous":"cs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4323","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.endsWithIgnoreCase(str, remove)"},"failures":[371,372],"tindex":"1d6620e0-2ea6-11e6-9ef4-cf92ab01d0a4","method":{"position":"org.apache.commons.lang3.CharSetUtils:64","type":"CtMethodImpl","sourcecode":"public static java.lang.String squeeze(final java.lang.String str, final java.lang.String... set) {\n    if (org.apache.commons.lang3.StringUtils.endsWithIgnoreCase(str, str)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.CharSetUtils.deepEmpty(set))) {\n                return str;\n            } \n            final org.apache.commons.lang3.CharSet org.apache.commons.lang3.CharSet = org.apache.commons.lang3.CharSet.getInstance(set);\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(str.length());\n            final char[] char[] = str.toCharArray();\n            final int int = chrs.int;\n            char char = ' ';\n            char char = ' ';\n            for (int int = 0 ; i < sz ; i++) {\n                ch = chrs[i];\n                if (((ch == lastChar) && (i != 0)) && (chars.contains(ch))) {\n                    continue;\n                } \n                buffer.append(ch);\n                lastChar = ch;\n            }\n            return buffer.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str","remove":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1644","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"1d6620e1-2ea6-11e6-9ef4-49c9a752304b","method":{"position":"org.apache.commons.lang3.Range:491","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int compare(final java.lang.Object obj1, final java.lang.Object obj2) {\n    if (obj2 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((java.lang.Comparable)(obj1)).compareTo(obj2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"obj2"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:373","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[373,374],"tindex":"1d6620e2-2ea6-11e6-9ef4-6bec40e41edc","method":{"position":"org.apache.commons.lang3.StringUtils:5509","type":"CtMethodImpl","sourcecode":"public static java.lang.String center(java.lang.String str, final int size, final char padChar) {\n    if (str == null) {\n        {\n            if ((str == null) || (size <= 0)) {\n                return str;\n            } \n            final int int = str.length();\n            final int int = size - strLen;\n            if (pads <= 0) {\n                return str;\n            } \n            str = org.apache.commons.lang3.StringUtils.leftPad(str, (strLen + (pads / 2)), padChar);\n            str = org.apache.commons.lang3.StringUtils.rightPad(str, size, padChar);\n            return str;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:717","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"1d6620e3-2ea6-11e6-9ef4-d7e4438b6b80","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:676","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final double[] array) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, array, null);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:1106","type":"CtBinaryOperatorImpl","sourcecode":"(value <= start) || (value >= end)"},"failures":[],"tindex":"1d6647f4-2ea6-11e6-9ef4-8f054ef9122c","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:443","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.StringBuffer format(final long millis, final java.lang.StringBuffer buf) {\n    if ((millis <= millis) || (value >= millis)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return format(new java.util.Date(millis), buf);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"millis","end":"millis","value":"millis"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrMatcher:190","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(chars)"},"failures":[375,376,377,378,379,380,381,382,383,384,385,386,320,387,388,389,390,391,392,393],"tindex":"1d6647f5-2ea6-11e6-9ef4-cd883670098a","method":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:480","type":"CtMethodImpl","sourcecode":"static org.apache.commons.lang3.time.DurationFormatUtils.Token[] lexx(final java.lang.String format) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(format)) {\n        {\n            final java.util.ArrayList<org.apache.commons.lang3.time.DurationFormatUtils.Token> java.util.ArrayList<org.apache.commons.lang3.time.DurationFormatUtils.Token> = new java.util.ArrayList<org.apache.commons.lang3.time.DurationFormatUtils.Token>(format.length());\n            boolean boolean = false;\n            java.lang.StringBuilder java.lang.StringBuilder = null;\n            org.apache.commons.lang3.time.DurationFormatUtils.Token org.apache.commons.lang3.time.DurationFormatUtils.Token = null;\n            for (int int = 0 ; i < (format.length()) ; i++) {\n                final char char = format.charAt(i);\n                if (inLiteral && (ch != '\\'')) {\n                    buffer.append(ch);\n                    continue;\n                } \n                java.lang.Object java.lang.Object = null;\n                switch (ch) {\n                    case '\\'' :\n                        if (inLiteral) {\n                            buffer = null;\n                            inLiteral = false;\n                        } else {\n                            buffer = new java.lang.StringBuilder();\n                            list.add(new org.apache.commons.lang3.time.DurationFormatUtils.Token(buffer));\n                            inLiteral = true;\n                        }\n                        break;\n                    case 'y' :\n                        value = org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n                        break;\n                    case 'M' :\n                        value = org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n                        break;\n                    case 'd' :\n                        value = org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n                        break;\n                    case 'H' :\n                        value = org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n                        break;\n                    case 'm' :\n                        value = org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n                        break;\n                    case 's' :\n                        value = org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n                        break;\n                    case 'S' :\n                        value = org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n                        break;\n                    default :\n                        if (buffer == null) {\n                            buffer = new java.lang.StringBuilder();\n                            list.add(new org.apache.commons.lang3.time.DurationFormatUtils.Token(buffer));\n                        } \n                        buffer.append(ch);\n                }\n                if (value != null) {\n                    if ((previous != null) && ((previous.getValue()) == value)) {\n                        previous.increment();\n                    } else {\n                        final org.apache.commons.lang3.time.DurationFormatUtils.Token org.apache.commons.lang3.time.DurationFormatUtils.Token = new org.apache.commons.lang3.time.DurationFormatUtils.Token(value);\n                        list.add(token);\n                        previous = token;\n                    }\n                    buffer = null;\n                } \n            }\n            if (inLiteral) {\n                throw new java.lang.IllegalArgumentException((\"Unmatched quote in format: \" + format));\n            } \n            return list.toArray(new org.apache.commons.lang3.time.DurationFormatUtils.Token[list.size()]);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chars":"format"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1118","type":"CtBinaryOperatorImpl","sourcecode":"startIndexInclusive < 0"},"failures":[394,395],"tindex":"1d666f06-2ea6-11e6-9ef4-8fbe97df0828","method":{"position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:330","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder priority(final int prio) {\n    if (prio < 0) {\n        {\n            java.lang.Integer = java.lang.Integer.valueOf(prio);\n            return org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndexInclusive":"prio"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:898","type":"CtBinaryOperatorImpl","sourcecode":"rhs == null"},"failures":[396],"tindex":"1d666f07-2ea6-11e6-9ef4-0f2c97562eda","method":{"position":"org.apache.commons.lang3.StringUtils:3527","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final double[] array, final char separator) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } \n            return org.apache.commons.lang3.StringUtils.join(array, separator, 0, array.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"rhs":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3366","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[397],"tindex":"1d666f08-2ea6-11e6-9ef4-cb021a21ae31","method":{"position":"org.apache.commons.lang3.ArrayUtils:3365","type":"CtMethodImpl","sourcecode":"public static float[] toPrimitive(final java.lang.Float[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.float[];\n            } \n            final float[] float[] = new float[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = array[i].floatValue();\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:173","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[85,85,86],"tindex":"1d669619-2ea6-11e6-9ef4-6bab7bb20ac1","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:717","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final short value) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(fieldName)) {\n        {\n            buffer.append(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1205","type":"CtBinaryOperatorImpl","sourcecode":"newSize <= 0"},"failures":[398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,0,1,2,3,4,5,6,7,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,212],"tindex":"1d66961a-2ea6-11e6-9ef4-ebfd65ec304b","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2781","type":"CtMethodImpl","sourcecode":"protected int validateRange(final int startIndex, int endIndex) {\n    if (startIndex <= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (startIndex < 0) {\n                throw new java.lang.StringIndexOutOfBoundsException(startIndex);\n            } \n            if (endIndex > (int)) {\n                endIndex = int;\n            } \n            if (startIndex > endIndex) {\n                throw new java.lang.StringIndexOutOfBoundsException(\"end < start\");\n            } \n            return endIndex;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"newSize":"startIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:274","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[377,378,379,383,388,390,393],"tindex":"1d66961b-2ea6-11e6-9ef4-db830b7337e6","method":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:243","type":"CtMethodImpl","sourcecode":"public static java.lang.String formatPeriod(final long startMillis, final long endMillis, final java.lang.String format) {\n    if (format == null) {\n        {\n            return org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(startMillis, endMillis, format, true, java.util.TimeZone.getDefault());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"format"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5003","type":"CtBinaryOperatorImpl","sourcecode":"(ch == (org.apache.commons.lang3.CharUtils.CR)) || (ch == (org.apache.commons.lang3.CharUtils.LF))"},"failures":[459],"tindex":"1d66bd2c-2ea6-11e6-9ef4-09c02a515b2b","method":{"position":"org.apache.commons.lang3.CharUtils:440","type":"CtMethodImpl","sourcecode":"public static boolean isAsciiControl(final char ch) {\n    if ((ch == ch) || (ch == ch)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (ch < 32) || (ch == 127);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch","org.apache.commons.lang3.CharUtils.LF":"ch","org.apache.commons.lang3.CharUtils.CR":"ch"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:634","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[460,461,462,463,464,465,466,467,441,468,469,470,471],"tindex":"1d66bd2d-2ea6-11e6-9ef4-d141668255ee","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:534","type":"CtMethodImpl","sourcecode":"public java.lang.String replace(java.lang.CharSequence source, int offset, int length) {\n    if (source == null) {\n        {\n            if (source == null) {\n                return null;\n            } \n            org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(length).append(source, offset, length);\n            substitute(buf, 0, length);\n            return buf.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"source"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1153","type":"CtBinaryOperatorImpl","sourcecode":"b < a"},"failures":[],"tindex":"1d66bd2e-2ea6-11e6-9ef4-6744648156aa","method":{"position":"org.apache.commons.lang3.ObjectUtils:765","type":"CtMethodImpl","sourcecode":"public static byte CONST(final byte v) {\n    if (v < v) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return v;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"v","b":"v"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4997","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[196,197,198],"tindex":"1d66bd2f-2ea6-11e6-9ef4-cda5539e2fcd","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:606","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final java.util.Collection<?> coll) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(fieldName)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:800","type":"CtFieldReadImpl","sourcecode":"objectsTriviallyEqual"},"failures":[472,473],"tindex":"1d66e440-2ea6-11e6-9ef4-c9c36929bca1","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:678","type":"CtMethodImpl","sourcecode":"public static void removeFinalModifier(java.lang.reflect.Field field, boolean forceAccess) {\n    if (forceAccess) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.isTrue((field != null), \"The field must not be null\");\n            try {\n                if (java.lang.reflect.Modifier.isFinal(field.getModifiers())) {\n                    java.lang.reflect.Field java.lang.reflect.Field = java.lang.reflect.Field.java.lang.reflect.Field.java.lang.Class.getDeclaredField(\"modifiers\");\n                    final boolean boolean = forceAccess && (!(modifiersField.isAccessible()));\n                    if (doForceAccess) {\n                        modifiersField.setAccessible(true);\n                    } \n                    try {\n                        modifiersField.setInt(field, ((field.getModifiers()) & (~(java.lang.reflect.Modifier.java.lang.reflect.Modifier.int))));\n                    } finally {\n                        if (doForceAccess) {\n                            modifiersField.setAccessible(false);\n                        } \n                    }\n                } \n            } catch (java.lang.NoSuchFieldException ignored) {\n            } catch (java.lang.IllegalAccessException ignored) {\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsTriviallyEqual":"forceAccess"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}