{"failureDictionary":{"org.apache.commons.lang3.StringUtilsTest.testReplaceChars_StringCharChar":9,"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":39,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":202,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfBoolean":191,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":229,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":223,"org.apache.commons.lang3.text.StrBuilderTest.testSubstringInt":115,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":254,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":122,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveBooleanArray":171,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testConstantFuture_null":16,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementBooleanArray":198,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":40,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":74,"org.apache.commons.lang3.ArrayUtilsTest.testIsEmptyPrimitives":192,"org.apache.commons.lang3.ArrayUtilsTest.testContainsLong":248,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyLongObject":201,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":220,"org.apache.commons.lang3.builder.DiffResultTest.testListIsNonModifiable":147,"org.apache.commons.lang3.time.DateUtilsTest.testIsSameInstant_Cal":208,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNull":227,"org.apache.commons.lang3.concurrent.CallableBackgroundInitializerTest.testInitExecutor":144,"org.apache.commons.lang3.tuple.MutablePairTest.testEquals":166,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":209,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":73,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":215,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfLong":249,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultIsExceptionUnknown":27,"org.apache.commons.lang3.concurrent.CallableBackgroundInitializerTest.testInitialize":143,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":154,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":126,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":121,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":37,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePartialString_noReplace":247,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":123,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCyclicalObjectReferences":156,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":211,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":242,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOf_String":18,"org.apache.commons.lang3.ConversionTest.testHexToByte":2,"org.apache.commons.lang3.BooleanUtilsTest.test_toStringOnOff_boolean":5,"org.apache.commons.lang3.StringUtilsTest.testLang623":10,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":212,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testConstantFuture_Integer":15,"org.apache.commons.lang3.CharUtilsTest.testToCharacterObject_String":63,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":85,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":95,"org.apache.commons.lang3.ConversionTest.testHexDigitMsb0ToBinary":172,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":216,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":77,"org.apache.commons.lang3.RandomUtilsTest.testNextBytes":62,"org.apache.commons.lang3.reflect.TypeLiteralTest.testEquals":133,"org.apache.commons.lang3.exception.ExceptionUtilsTest.test_getRootCauseMessage_Throwable":127,"org.apache.commons.lang3.EnumUtilsTest.test_getEnum":130,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetRawType":207,"org.apache.commons.lang3.reflect.TypeLiteralTest.testBasic":131,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetPrefix":244,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":72,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOf_char":173,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetSuffix":246,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseUncheckedUncheckedException":6,"org.apache.commons.lang3.StringUtilsTest.testReplace_StringStringArrayStringArray":58,"org.apache.commons.lang3.StringUtilsTest.testCenter_StringInt":29,"org.apache.commons.lang3.mutable.MutableShortTest.testAddValueObject":182,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":129,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmpty":243,"org.apache.commons.lang3.RandomUtilsTest.testNextBytesNegative":61,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiCharArray":187,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiByteArray":56,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":105,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetValueDelimiter":238,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementLongArray":250,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadStaticFieldIllegalArgumentException1":251,"org.apache.commons.lang3.tuple.ImmutablePairTest.testSerialization":167,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":221,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":43,"org.apache.commons.lang3.StringUtilsTest.testReplace_StringStringString":177,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeNested":22,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":117,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":106,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":76,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":107,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":245,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":108,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":109,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":222,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeWithDelimiters_String":30,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":46,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorNoArgs":225,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionHierarchyEquals":158,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetResultObjectUnknown":26,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":50,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCharArrayHiddenByObject":189,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":98,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":125,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":99,"org.apache.commons.lang3.ArrayUtilsTest.testReverseByteRange":12,"org.apache.commons.lang3.time.FastDatePrinterTest.testFormat":128,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":138,"org.apache.commons.lang3.text.StrBuilderTest.testSubstringIntInt":114,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEqualsExcludeFields":157,"org.apache.commons.lang3.reflect.TypeUtilsTest.testDetermineTypeVariableAssignments":206,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":42,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":53,"org.apache.commons.lang3.builder.EqualsBuilderTest.testByteArray":55,"org.apache.commons.lang3.ObjectUtilsTest.testConstMethods":59,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCharArray":186,"org.apache.commons.lang3.ArrayUtilsTest.testReverseByte":13,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testInteger":162,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementBooleanArray":197,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvWriter":181,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":231,"org.apache.commons.lang3.text.StrTokenizerTest.testChaining":174,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetTypeArguments":203,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixture":160,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":210,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":113,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayToObjectArray":142,"org.apache.commons.lang3.StringUtilsTest.testSplitByCharacterTypeCamelCase":1,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_int":184,"org.apache.commons.lang3.builder.DiffResultTest.testIterator":148,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":152,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfBooleanWithStartIndex":196,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":236,"org.apache.commons.lang3.ConversionTest.testShortArrayToLong":11,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseUncheckedChecked":8,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":36,"org.apache.commons.lang3.tuple.ImmutablePairTest.testEquals":168,"org.apache.commons.lang3.StringUtilsTest.testRemoveStart":19,"org.apache.commons.lang3.ArrayUtilsTest.testIsEquals":35,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":38,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":240,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":51,"org.apache.commons.lang3.reflect.TypeLiteralTest.testTyped":132,"org.apache.commons.lang3.builder.EqualsBuilderTest.testByteArrayHiddenByObject":54,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":224,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":75,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":48,"org.apache.commons.lang3.builder.DiffBuilderTest.testSimilarObjectIgnoresAppends":45,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":232,"org.apache.commons.lang3.ValidateTest.testValidIndex_array":14,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":116,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":119,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":70,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeExternalExec":25,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsInstance":204,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseUncheckedError":7,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoVariables":233,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":235,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvString":178,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetEscape":241,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringStringArray":0,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":47,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":237,"org.apache.commons.lang3.ArrayUtilsTest.testCloneByte":139,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementByteArray":141,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":213,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":64,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfBooleanWithStartIndex":195,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":111,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":112,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":218,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":217,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":214,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":153,"org.apache.commons.lang3.reflect.TypeUtilsTest.testParameterize":134,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":124,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOf_String":176,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":67,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayByte":34,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":68,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalize_String":31,"org.apache.commons.lang3.RandomUtilsTest.testZeroLengthNextBytes":60,"org.apache.commons.lang3.StringUtilsTest.testAppendIfMissingIgnoreCase":255,"org.apache.commons.lang3.builder.EqualsBuilderTest.testChar":188,"org.apache.commons.lang3.BooleanUtilsTest.test_toStringTrueFalse_boolean":3,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_PrimitiveNumber":137,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":71,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareExcludeFields":149,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":226,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementShortArray":253,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":110,"org.apache.commons.lang3.text.StrBuilderTest.testSubSequenceIntInt":28,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":120,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":44,"org.apache.commons.lang3.text.StrTokenizerTest.test8":94,"org.apache.commons.lang3.text.StrTokenizerTest.test5":91,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrChar":185,"org.apache.commons.lang3.text.StrTokenizerTest.test4":90,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGenericArrayType":135,"org.apache.commons.lang3.text.StrTokenizerTest.test7":93,"org.apache.commons.lang3.text.StrTokenizerTest.test6":92,"org.apache.commons.lang3.text.StrTokenizerTest.test1":87,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":86,"org.apache.commons.lang3.text.StrTokenizerTest.test3":89,"org.apache.commons.lang3.tuple.MutablePairTest.testSerialization":165,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvWriter":179,"org.apache.commons.lang3.text.StrTokenizerTest.test2":88,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testIntegerWithTransients":159,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":49,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayShort":145,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsert":190,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":65,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":66,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareTransients":151,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultInitializerNamesModify":20,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_String":169,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEquals":155,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeFullyWithDelimiters_String":33,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":52,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementByteArray":140,"org.apache.commons.lang3.BooleanUtilsTest.test_toStringYesNo_boolean":4,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetInitializerUnknown":24,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testInvalidFragmentWithCalendar":170,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":219,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":41,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":118,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetExceptionUnknown":21,"org.apache.commons.lang3.ConversionTest.testBinaryToShort":146,"org.apache.commons.lang3.tuple.PairTest.testCompatibilityBetweenPairs":163,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveShortArray":252,"org.apache.commons.lang3.mutable.MutableIntTest.testEquals":17,"org.apache.commons.lang3.tuple.PairTest.testMapEntry":164,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":78,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixtureWithTransients":161,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":69,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":80,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":79,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":82,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":81,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":84,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":83,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":104,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyLongObjectEmptyArray":200,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":230,"org.apache.commons.lang3.RangeTest.testIsAfterRange":175,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompare":150,"org.apache.commons.lang3.reflect.TypeUtilsTest.testTypesSatisfyVariables":205,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":96,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":102,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfBoolean":193,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":101,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeTempExec":23,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":103,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":239,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":100,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":97,"org.apache.commons.lang3.time.DateUtilsTest.testAddHours":183,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeFully_String":32,"org.apache.commons.lang3.text.WordUtilsTest.testSwapCase_String":199,"org.apache.commons.lang3.StringUtilsTest.testRemoveStartIgnoreCase":57,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_PrimitiveNumber":136,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":234,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvString":180,"org.apache.commons.lang3.ArrayUtilsTest.testContainsBoolean":194,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":228},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.JavaVersion:144","type":"CtInvocationImpl","sourcecode":"\"1.6\".equals(nom)"},"failures":[0],"tindex":"fc869b3e-2ebf-11e6-a385-818310b06f8d","method":{"position":"org.apache.commons.lang3.StringUtils:1963","type":"CtMethodImpl","sourcecode":"public static int indexOfAny(final java.lang.CharSequence str, final java.lang.CharSequence... searchStrs) {\n    if (\"1.6\".equals(str)) {\n        {\n            if ((str == null) || (searchStrs == null)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            final int int = searchStrs.int;\n            int int = java.lang.Integer.java.lang.Integer.int;\n            int int = 0;\n            for (int int = 0 ; i < sz ; i++) {\n                final java.lang.CharSequence java.lang.CharSequence = searchStrs[i];\n                if (search == null) {\n                    continue;\n                } \n                tmp = org.apache.commons.lang3.CharSequenceUtils.indexOf(str, search, 0);\n                if (tmp == (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) {\n                    continue;\n                } \n                if (tmp < ret) {\n                    ret = tmp;\n                } \n            }\n            return ret == (java.lang.Integer.java.lang.Integer.int) ? org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int : ret;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nom":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:451","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[1],"tindex":"fc87859f-2ebf-11e6-a385-51d02bb42a2e","method":{"position":"org.apache.commons.lang3.StringUtils:3203","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] splitByCharacterTypeCamelCase(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.splitByCharacterType(str, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:221","type":"CtBinaryOperatorImpl","sourcecode":"innerIdx != (-1)"},"failures":[2],"tindex":"fc8785a0-2ebf-11e6-a385-c52578328956","method":{"position":"org.apache.commons.lang3.Conversion:1006","type":"CtMethodImpl","sourcecode":"public static byte hexToByte(final java.lang.String src, final int srcPos, final byte dstInit, final int dstPos, final int nHex) {\n    if (srcPos != (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (0 == nHex) {\n                return dstInit;\n            } \n            if ((((nHex - 1) * 4) + dstPos) >= 8) {\n                throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+dstPos is greather or equal to than 8\");\n            } \n            byte byte = dstInit;\n            int int = 0;\n            for (int int = 0 ; i < nHex ; i++) {\n                shift = (i * 4) + dstPos;\n                final int int = (15 & (org.apache.commons.lang3.Conversion.hexDigitToInt(src.charAt((i + srcPos))))) << shift;\n                final int int = 15 << shift;\n                out = ((byte)((out & (~mask)) | bits));\n            }\n            return out;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"innerIdx":"srcPos"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3108","type":"CtBinaryOperatorImpl","sourcecode":"(separatorChars.length()) == 1"},"failures":[3,4,5],"tindex":"fc87acb1-2ebf-11e6-a385-f1cb2cbdb002","method":{"position":"org.apache.commons.lang3.BooleanUtils:881","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(final boolean bool, final java.lang.String trueString, final java.lang.String falseString) {\n    if ((falseString.length()) == 1) {\n        {\n            return bool ? trueString : falseString;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"separatorChars":"falseString"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:61","type":"CtBinaryOperatorImpl","sourcecode":"(ex == null) || ((ex.getCause()) == null)"},"failures":[6,7,8],"tindex":"fc87acb2-2ebf-11e6-a385-474792084f9f","method":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:126","type":"CtMethodImpl","sourcecode":"public static void handleCauseUnchecked(final java.util.concurrent.ExecutionException ex) {\n    if ((ex == null) || ((ex.getCause()) == null)) {\n        {\n            final org.apache.commons.lang3.concurrent.ConcurrentRuntimeException org.apache.commons.lang3.concurrent.ConcurrentRuntimeException = org.apache.commons.lang3.concurrent.ConcurrentUtils.extractCauseUnchecked(ex);\n            if (crex != null) {\n                throw crex;\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ex":"ex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:324","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[9,10],"tindex":"fc87d3c3-2ebf-11e6-a385-af97b2f9f685","method":{"position":"org.apache.commons.lang3.StringUtils:4834","type":"CtMethodImpl","sourcecode":"public static java.lang.String replaceChars(final java.lang.String str, final char searchChar, final char replaceChar) {\n    if (str == null) {\n        {\n            if (str == null) {\n                return null;\n            } \n            return str.replace(searchChar, replaceChar);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:730","type":"CtBinaryOperatorImpl","sourcecode":"str == falseString"},"failures":[],"tindex":"fc87d3c4-2ebf-11e6-a385-b73628eee372","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2975","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(final java.lang.String str) {\n    if (str == str) {\n        {\n            org.apache.commons.lang3.text.StrBuilder.this.append(str);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str","falseString":"str"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:195","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[],"tindex":"fc87fad5-2ebf-11e6-a385-45b91d99b755","method":{"position":"org.apache.commons.lang3.SystemUtils:1428","type":"CtMethodImpl","sourcecode":"static boolean isJavaVersionMatch(final java.lang.String version, final java.lang.String versionPrefix) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(versionPrefix)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (version == null) {\n                return false;\n            } \n            return version.startsWith(versionPrefix);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"versionPrefix"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1499","type":"CtBinaryOperatorImpl","sourcecode":"str != null"},"failures":[],"tindex":"fc87fad6-2ebf-11e6-a385-1f1ead4dc6a8","method":{"position":"org.apache.commons.lang3.exception.ContextedRuntimeException:207","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Object getFirstContextValue(final java.lang.String label) {\n    if (label != null) {\n        {\n            return org.apache.commons.lang3.exception.ContextedRuntimeException.this.org.apache.commons.lang3.exception.ExceptionContext.getFirstContextValue(label);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"label"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.StringUtils:2064","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"fc8821e7-2ebf-11e6-a385-4bef5d2d1ec6","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:619","type":"CtMethodImpl","sourcecode":"public static void writeField(final java.lang.reflect.Field field, final java.lang.Object target, final java.lang.Object value) throws java.lang.IllegalAccessException {\n    if (target == null) {\n        throw new java.lang.IllegalAccessException();\n    } else {\n        {\n            org.apache.commons.lang3.reflect.FieldUtils.writeField(field, target, value, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"target"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:514","type":"CtBinaryOperatorImpl","sourcecode":"strLen > 0"},"failures":[11],"tindex":"fc8821e8-2ebf-11e6-a385-a967dee8fe2a","method":{"position":"org.apache.commons.lang3.Conversion:722","type":"CtMethodImpl","sourcecode":"public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos, final int nShorts) {\n    if (nShorts > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((((src.int) == 0) && (srcPos == 0)) || (0 == nShorts)) {\n                return dstInit;\n            } \n            if ((((nShorts - 1) * 16) + dstPos) >= 64) {\n                throw new java.lang.IllegalArgumentException(\"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n            } \n            long long = dstInit;\n            int int = 0;\n            for (int int = 0 ; i < nShorts ; i++) {\n                shift = (i * 16) + dstPos;\n                final long long = (65535L & (src[(i + srcPos)])) << shift;\n                final long long = 65535L << shift;\n                out = (out & (~mask)) | bits;\n            }\n            return out;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"strLen":"nShorts"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.ClassNotFoundException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:255","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"fc8848f9-2ebf-11e6-a385-95ed21fd7604","method":{"position":"org.apache.commons.lang3.ClassUtils:861","type":"CtMethodImpl","sourcecode":"public static java.lang.Class<?> getClass(final java.lang.ClassLoader classLoader, final java.lang.String className) throws java.lang.ClassNotFoundException {\n    if (className == null) {\n        throw new java.lang.ClassNotFoundException();\n    } else {\n        {\n            return org.apache.commons.lang3.ClassUtils.getClass(classLoader, className, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"className"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1913","type":"CtBinaryOperatorImpl","sourcecode":"index >= 0"},"failures":[12,13],"tindex":"fc8848fa-2ebf-11e6-a385-6bd4ad13181a","method":{"position":"org.apache.commons.lang3.ArrayUtils:1608","type":"CtMethodImpl","sourcecode":"public static void reverse(final byte[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (endIndexExclusive >= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return ;\n            } \n            int int = startIndexInclusive < 0 ? 0 : startIndexInclusive;\n            int int = (java.lang.Math.min(array.int, endIndexExclusive)) - 1;\n            byte byte;\n            while (j > i) {\n                tmp = array[j];\n                array[j] = array[i];\n                array[i] = tmp;\n                j--;\n                i++;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"endIndexExclusive"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3239","type":"CtBinaryOperatorImpl","sourcecode":"newTokenStart != tokenStart"},"failures":[14],"tindex":"fc88700b-2ebf-11e6-a385-a9d66bfaaa7b","method":{"position":"org.apache.commons.lang3.Validate:659","type":"CtMethodImpl","sourcecode":"public static <T>T[] validIndex(final T[] array, final int index) {\n    if (index != index) {\n        {\n            return org.apache.commons.lang3.Validate.validIndex(array, index, org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.java.lang.String, java.lang.Integer.valueOf(index));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"tokenStart":"index","newTokenStart":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1396","type":"CtVariableReadImpl","sourcecode":"hasExp"},"failures":[15,16],"tindex":"fc88971c-2ebf-11e6-a385-618ec4b73759","method":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:388","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean cancel(final boolean mayInterruptIfRunning) {\n    if (mayInterruptIfRunning) {\n        {\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"hasExp":"mayInterruptIfRunning"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:795","type":"CtBinaryOperatorImpl","sourcecode":"cs1 == cs2"},"failures":[17],"tindex":"fc88971d-2ebf-11e6-a385-ad94cdc01d68","method":{"position":"org.apache.commons.lang3.mutable.MutableInt:235","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == obj) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof org.apache.commons.lang3.mutable.MutableInt) {\n                return (int) == (((org.apache.commons.lang3.mutable.MutableInt)(obj)).intValue());\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs1":"obj","cs2":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.JavaVersion:138","type":"CtInvocationImpl","sourcecode":"\"1.3\".equals(nom)"},"failures":[18],"tindex":"fc88be2e-2ebf-11e6-a385-af793e1d2915","method":{"position":"org.apache.commons.lang3.StringUtils:926","type":"CtMethodImpl","sourcecode":"public static int indexOf(final java.lang.CharSequence seq, final java.lang.CharSequence searchSeq) {\n    if (\"1.3\".equals(searchSeq)) {\n        {\n            if ((seq == null) || (searchSeq == null)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            return org.apache.commons.lang3.CharSequenceUtils.indexOf(seq, searchSeq, 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nom":"searchSeq"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:474","type":"CtBinaryOperatorImpl","sourcecode":"input != null"},"failures":[19],"tindex":"fc88be2f-2ebf-11e6-a385-79e8f327d14d","method":{"position":"org.apache.commons.lang3.StringUtils:4214","type":"CtMethodImpl","sourcecode":"public static java.lang.String removeStart(final java.lang.String str, final java.lang.String remove) {\n    if (str != null) {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(remove))) {\n                return str;\n            } \n            if (str.startsWith(remove)) {\n                return str.substring(remove.length());\n            } \n            return str;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5302","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(padStr)"},"failures":[20,21,22,23,24,25,26,27],"tindex":"fc88be30-2ebf-11e6-a385-6d1cac780b68","method":{"position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:263","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.concurrent.BackgroundInitializer<?> getInitializer(final java.lang.String name) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(name)) {\n        {\n            return checkName(name);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"padStr":"name"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:944","type":"CtBinaryOperatorImpl","sourcecode":"properNumerator == 0"},"failures":[28],"tindex":"fc88e541-2ebf-11e6-a385-21729c2498c9","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.CharSequence subSequence(final int startIndex, final int endIndex) {\n    if (startIndex == 0) {\n        {\n            if (startIndex < 0) {\n                throw new java.lang.StringIndexOutOfBoundsException(startIndex);\n            } \n            if (endIndex > (int)) {\n                throw new java.lang.StringIndexOutOfBoundsException(endIndex);\n            } \n            if (startIndex > endIndex) {\n                throw new java.lang.StringIndexOutOfBoundsException((endIndex - startIndex));\n            } \n            return substring(startIndex, endIndex);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"properNumerator":"startIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:195","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(className)"},"failures":[29],"tindex":"fc890c52-2ebf-11e6-a385-7b908b53e571","method":{"position":"org.apache.commons.lang3.StringUtils:5481","type":"CtMethodImpl","sourcecode":"public static java.lang.String center(final java.lang.String str, final int size) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n        {\n            return org.apache.commons.lang3.StringUtils.center(str, size, ' ');\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"className":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:561","type":"CtInvocationImpl","sourcecode":"causeFrame.equals(wrapperFrame)"},"failures":[30,31,32,33],"tindex":"fc890c53-2ebf-11e6-a385-216a70f5846a","method":{"position":"org.apache.commons.lang3.text.WordUtils:284","type":"CtMethodImpl","sourcecode":"public static java.lang.String capitalize(final java.lang.String str, final char... delimiters) {\n    if (str.equals(str)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = delimiters == null ? -1 : delimiters.int;\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (delimLen == 0)) {\n                return str;\n            } \n            final char[] char[] = str.toCharArray();\n            boolean boolean = true;\n            for (int int = 0 ; i < (buffer.int) ; i++) {\n                final char char = buffer[i];\n                if (org.apache.commons.lang3.text.WordUtils.isDelimiter(ch, delimiters)) {\n                    capitalizeNext = true;\n                } else if (capitalizeNext) {\n                    buffer[i] = java.lang.Character.toTitleCase(ch);\n                    capitalizeNext = false;\n                } \n            }\n            return new java.lang.String(buffer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"causeFrame":"str","wrapperFrame":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:623","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"tindex":"fc893364-2ebf-11e6-a385-9b6585d9bf55","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:794","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.EqualsBuilder append(final byte[] lhs, final byte[] rhs) {\n    if (lhs == null) {\n        {\n            if ((boolean) == false) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if ((lhs == null) || (rhs == null)) {\n                org.apache.commons.lang3.builder.EqualsBuilder.this.setEquals(false);\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                org.apache.commons.lang3.builder.EqualsBuilder.this.setEquals(false);\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && (boolean) ; ++i) {\n                append(lhs[i], rhs[i]);\n            }\n            return org.apache.commons.lang3.builder.EqualsBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"lhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:176","type":"CtBinaryOperatorImpl","sourcecode":"newLineStr == null"},"failures":[57],"tindex":"fc895a75-2ebf-11e6-a385-91bda13ac134","method":{"position":"org.apache.commons.lang3.StringUtils:4249","type":"CtMethodImpl","sourcecode":"public static java.lang.String removeStartIgnoreCase(final java.lang.String str, final java.lang.String remove) {\n    if (str == null) {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(remove))) {\n                return str;\n            } \n            if (org.apache.commons.lang3.StringUtils.startsWithIgnoreCase(str, remove)) {\n                return str.substring(remove.length());\n            } \n            return str;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"newLineStr":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1106","type":"CtBinaryOperatorImpl","sourcecode":"prior != null"},"failures":[58],"tindex":"fc895a76-2ebf-11e6-a385-93bc444e1eff","method":{"position":"org.apache.commons.lang3.StringUtils:4581","type":"CtMethodImpl","sourcecode":"public static java.lang.String replaceEach(final java.lang.String text, final java.lang.String[] searchList, final java.lang.String[] replacementList) {\n    if (text != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.replaceEach(text, searchList, replacementList, false, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"prior":"text"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5129","type":"CtBinaryOperatorImpl","sourcecode":"(repeat == 1) || (inputLength == 0)"},"failures":[59],"tindex":"fc898187-2ebf-11e6-a385-9791430a6e45","method":{"position":"org.apache.commons.lang3.ObjectUtils:877","type":"CtMethodImpl","sourcecode":"public static int CONST(final int v) {\n    if ((v == 1) || (v == 0)) {\n        {\n            return v;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"repeat":"v","inputLength":"v"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ObjectUtils:585","type":"CtBinaryOperatorImpl","sourcecode":"cmp == max"},"failures":[60,61,62],"tindex":"fc898188-2ebf-11e6-a385-8972a3a8d8dd","method":{"position":"org.apache.commons.lang3.RandomUtils:62","type":"CtMethodImpl","sourcecode":"public static byte[] nextBytes(int count) {\n    if (count == count) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.isTrue((count >= 0), \"Count cannot be negative.\");\n            byte[] byte[] = new byte[count];\n            org.apache.commons.lang3.RandomUtils.org.apache.commons.lang3.RandomUtils.java.util.Random.nextBytes(result);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"max":"count","cmp":"count"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:373","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[63],"tindex":"fc89a899-2ebf-11e6-a385-c9552b99c469","method":{"position":"org.apache.commons.lang3.CharUtils:108","type":"CtMethodImpl","sourcecode":"public static java.lang.Character toCharacterObject(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n                return null;\n            } \n            return java.lang.Character.valueOf(str.charAt(0));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5820","type":"CtBinaryOperatorImpl","sourcecode":"found < 0"},"failures":[64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,28,114,115],"tindex":"fc89a89a-2ebf-11e6-a385-97c3651763d3","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2162","type":"CtMethodImpl","sourcecode":"public java.lang.String substring(final int startIndex, int endIndex) {\n    if (startIndex < 0) {\n        {\n            endIndex = validateRange(startIndex, endIndex);\n            return new java.lang.String(char[] , startIndex , (endIndex - startIndex));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"found":"startIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:514","type":"CtInvocationImpl","sourcecode":"clazz.isArray()"},"failures":[],"tindex":"fc89cfab-2ebf-11e6-a385-b9b3d9476725","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:211","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.lang.reflect.Field> getAllFieldsList(java.lang.Class<?> cls) {\n    if (cls.isArray()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.isTrue((cls != null), \"The class must not be null\");\n            final java.util.List<java.lang.reflect.Field> java.util.List<java.lang.reflect.Field> = new java.util.ArrayList<java.lang.reflect.Field>();\n            java.lang.Class<?> java.lang.Class<?> = cls;\n            while (currentClass != null) {\n                final java.lang.reflect.Field[] java.lang.reflect.Field[] = currentClass.getDeclaredFields();\n                for (java.lang.reflect.Field java.lang.reflect.Field : declaredFields) {\n                    allFields.add(field);\n                }\n                currentClass = currentClass.getSuperclass();\n            }\n            return allFields;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"clazz":"cls"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:647","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[116,117,118,119,120,121,122,123,124,125,126],"tindex":"fc89cfac-2ebf-11e6-a385-b51f800a6e15","method":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:349","type":"CtMethodImpl","sourcecode":"public static java.lang.String toStringExclude(final java.lang.Object object, final java.lang.String... excludeFieldNames) {\n    if (object == null) {\n        {\n            return new org.apache.commons.lang3.builder.ReflectionToStringBuilder(object).setExcludeFieldNames(excludeFieldNames).toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:518","type":"CtBinaryOperatorImpl","sourcecode":"(!(java.lang.Character.isDigit(lastChar))) && (lastChar != '.')"},"failures":[],"tindex":"fc89f6bd-2ebf-11e6-a385-4de3eae8dc0f","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1869","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder replaceFirst(final char search, final char replace) {\n    if ((!(java.lang.Character.isDigit(replace))) && (lastChar != '.')) {\n        {\n            if (search != replace) {\n                for (int int = 0 ; i < (int) ; i++) {\n                    if ((char[][i]) == search) {\n                        char[][i] = replace;\n                        break;\n                    } \n                }\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lastChar":"replace"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:517","type":"CtBinaryOperatorImpl","sourcecode":"throwable == null"},"failures":[127],"tindex":"fc89f6be-2ebf-11e6-a385-e139589114af","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:691","type":"CtMethodImpl","sourcecode":"public static java.lang.String getRootCauseMessage(final java.lang.Throwable th) {\n    if (th == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Throwable java.lang.Throwable = org.apache.commons.lang3.exception.ExceptionUtils.getRootCause(th);\n            root = root == null ? th : root;\n            return org.apache.commons.lang3.exception.ExceptionUtils.getMessage(root);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"throwable":"th"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:204","type":"CtBinaryOperatorImpl","sourcecode":"timePeriod <= 0"},"failures":[128,129],"tindex":"fc89f6bf-2ebf-11e6-a385-bdb95c436bb2","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:397","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.String format(final long millis) {\n    if (millis <= 0) {\n        {\n            final java.util.Calendar java.util.Calendar = newCalendar();\n            c.setTimeInMillis(millis);\n            return applyRulesToString(c);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timePeriod":"millis"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:381","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[130],"tindex":"fc8a1dd0-2ebf-11e6-a385-71fadab8f48d","method":{"position":"org.apache.commons.lang3.EnumUtils:113","type":"CtMethodImpl","sourcecode":"public static <E extends java.lang.Enum<E>>E getEnum(final java.lang.Class<E> enumClass, final java.lang.String enumName) {\n    if (enumName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (enumName == null) {\n                return null;\n            } \n            try {\n                return java.lang.Enum.valueOf(enumClass, enumName);\n            } catch (final java.lang.IllegalArgumentException ex) {\n                return null;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"enumName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:531","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.Class<?>"},"failures":[131,132,133,134,135],"tindex":"fc8a1dd1-2ebf-11e6-a385-bf9faccbd860","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1658","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(java.lang.reflect.Type type) {\n    if (type instanceof java.lang.Class<?>) {\n        {\n            org.apache.commons.lang3.Validate.notNull(type);\n            if (type instanceof java.lang.Class<?>) {\n                return org.apache.commons.lang3.reflect.TypeUtils.classToString(((java.lang.Class<?>)(type)));\n            } \n            if (type instanceof java.lang.reflect.ParameterizedType) {\n                return org.apache.commons.lang3.reflect.TypeUtils.parameterizedTypeToString(((java.lang.reflect.ParameterizedType)(type)));\n            } \n            if (type instanceof java.lang.reflect.WildcardType) {\n                return org.apache.commons.lang3.reflect.TypeUtils.wildcardTypeToString(((java.lang.reflect.WildcardType)(type)));\n            } \n            if (type instanceof java.lang.reflect.TypeVariable<?>) {\n                return org.apache.commons.lang3.reflect.TypeUtils.typeVariableToString(((java.lang.reflect.TypeVariable<?>)(type)));\n            } \n            if (type instanceof java.lang.reflect.GenericArrayType) {\n                return org.apache.commons.lang3.reflect.TypeUtils.genericArrayTypeToString(((java.lang.reflect.GenericArrayType)(type)));\n            } \n            throw new java.lang.IllegalArgumentException(org.apache.commons.lang3.ObjectUtils.identityToString(type));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:989","type":"CtBinaryOperatorImpl","sourcecode":"(value < start) || (value > end)"},"failures":[136,137],"tindex":"fc8a1dd2-2ebf-11e6-a385-5ba7abd58e9a","method":{"position":"org.apache.commons.lang3.text.StrBuilder:838","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder append(final double value) {\n    if ((value < value) || (value > value)) {\n        {\n            return append(java.lang.String.valueOf(value));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"value","end":"value","value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:448","type":"CtBinaryOperatorImpl","sourcecode":"fromTypeVarAssigns == null"},"failures":[138],"tindex":"fc8a44e3-2ebf-11e6-a385-7b606c31d56f","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:512","type":"CtMethodImpl","sourcecode":"private static boolean isAssignable(final java.lang.reflect.Type type, final java.lang.reflect.GenericArrayType toGenericArrayType, final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> typeVarAssigns) {\n    if (typeVarAssigns == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (type == null) {\n                return true;\n            } \n            if (toGenericArrayType == null) {\n                return false;\n            } \n            if (toGenericArrayType.equals(type)) {\n                return true;\n            } \n            final java.lang.reflect.Type java.lang.reflect.Type = toGenericArrayType.getGenericComponentType();\n            if (type instanceof java.lang.Class<?>) {\n                final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(type));\n                return (cls.isArray()) && (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(cls.getComponentType(), toComponentType, typeVarAssigns));\n            } \n            if (type instanceof java.lang.reflect.GenericArrayType) {\n                return org.apache.commons.lang3.reflect.TypeUtils.isAssignable(((java.lang.reflect.GenericArrayType)(type)).getGenericComponentType(), toComponentType, typeVarAssigns);\n            } \n            if (type instanceof java.lang.reflect.WildcardType) {\n                for (final java.lang.reflect.Type java.lang.reflect.Type : org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(((java.lang.reflect.WildcardType)(type)))) {\n                    if (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(bound, toGenericArrayType)) {\n                        return true;\n                    } \n                }\n                return false;\n            } \n            if (type instanceof java.lang.reflect.TypeVariable<?>) {\n                for (final java.lang.reflect.Type java.lang.reflect.Type : org.apache.commons.lang3.reflect.TypeUtils.getImplicitBounds(((java.lang.reflect.TypeVariable<?>)(type)))) {\n                    if (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(bound, toGenericArrayType)) {\n                        return true;\n                    } \n                }\n                return false;\n            } \n            if (type instanceof java.lang.reflect.ParameterizedType) {\n                return false;\n            } \n            throw new java.lang.IllegalStateException((\"found an unhandled type: \" + type));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fromTypeVarAssigns":"typeVarAssigns"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1153","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[139,140,141,142],"tindex":"fc8a44e4-2ebf-11e6-a385-737944761327","method":{"position":"org.apache.commons.lang3.ArrayUtils:402","type":"CtMethodImpl","sourcecode":"public static byte[] clone(final byte[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } \n            return array.clone();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.CallableBackgroundInitializer:122","type":"CtBinaryOperatorImpl","sourcecode":"call == null"},"failures":[143,144],"tindex":"fc8a44e5-2ebf-11e6-a385-0f9278179a72","method":{"position":"org.apache.commons.lang3.concurrent.CallableBackgroundInitializer:121","type":"CtMethodImpl","sourcecode":"private void checkCallable(final java.util.concurrent.Callable<T> call) {\n    if (call == null) {\n        {\n            if (call == null) {\n                throw new java.lang.IllegalArgumentException(\"Callable must not be null!\");\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"call":"call"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3850","type":"CtBinaryOperatorImpl","sourcecode":"array1 == null"},"failures":[145],"tindex":"fc8a6bf6-2ebf-11e6-a385-cba022b13064","method":{"position":"org.apache.commons.lang3.ArrayUtils:994","type":"CtMethodImpl","sourcecode":"public static short[] subarray(final short[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            if (startIndexInclusive < 0) {\n                startIndexInclusive = 0;\n            } \n            if (endIndexExclusive > (array.int)) {\n                endIndexExclusive = array.int;\n            } \n            final int int = endIndexExclusive - startIndexInclusive;\n            if (newSize <= 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.short[];\n            } \n            final short[] short[] = new short[newSize];\n            java.lang.System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);\n            return subarray;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array1":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:942","type":"CtBinaryOperatorImpl","sourcecode":"(((nHex - 1) * 4) + dstPos) >= 32"},"failures":[146],"tindex":"fc8a6bf7-2ebf-11e6-a385-4b2de6d60fe4","method":{"position":"org.apache.commons.lang3.Conversion:1115","type":"CtMethodImpl","sourcecode":"public static short binaryToShort(final boolean[] src, final int srcPos, final short dstInit, final int dstPos, final int nBools) {\n    if ((((nBools - 1) * 4) + dstPos) >= 32) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((((src.int) == 0) && (srcPos == 0)) || (0 == nBools)) {\n                return dstInit;\n            } \n            if (((nBools - 1) + dstPos) >= 16) {\n                throw new java.lang.IllegalArgumentException(\"nBools-1+dstPos is greather or equal to than 16\");\n            } \n            short short = dstInit;\n            int int = 0;\n            for (int int = 0 ; i < nBools ; i++) {\n                shift = (i * 1) + dstPos;\n                final int int = (src[(i + srcPos)] ? 1 : 0) << shift;\n                final int int = 1 << shift;\n                out = ((short)((out & (~mask)) | bits));\n            }\n            return out;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dstPos":"dstPos","nHex":"nBools"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:520","type":"CtBinaryOperatorImpl","sourcecode":"toClassArray == null"},"failures":[147,148,149,150,151,36,37,38,39,40,41,42,152,43,44,153,154,45,46,47,48,49,50,51,52,53,155,156,157,158,159,160,161,162,163,164,165,166,167,168],"tindex":"fc8a9308-2ebf-11e6-a385-1bd5de71a854","method":{"position":"org.apache.commons.lang3.tuple.Pair:130","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\n@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (obj == (org.apache.commons.lang3.tuple.Pair.this)) {\n                return true;\n            } \n            if (obj instanceof java.util.Map.Entry<?, ?>) {\n                final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n                return (org.apache.commons.lang3.ObjectUtils.equals(getKey(), other.getKey())) && (org.apache.commons.lang3.ObjectUtils.equals(getValue(), other.getValue()));\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toClassArray":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4320","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(remove))"},"failures":[169],"tindex":"fc8a9309-2ebf-11e6-a385-c3128d9ada62","method":{"position":"org.apache.commons.lang3.BooleanUtils:709","type":"CtMethodImpl","sourcecode":"public static boolean toBoolean(final java.lang.String str) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(str))) {\n        {\n            return (org.apache.commons.lang3.BooleanUtils.toBooleanObject(str)) == (java.lang.Boolean.java.lang.Boolean.java.lang.Boolean);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str","remove":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:6046","type":"CtBinaryOperatorImpl","sourcecode":"end > 0"},"failures":[170],"tindex":"fc8a930a-2ebf-11e6-a385-f177f47a355a","method":{"position":"org.apache.commons.lang3.time.DateUtils:1632","type":"CtMethodImpl","sourcecode":"public static long getFragmentInDays(final java.util.Calendar calendar, final int fragment) {\n    if (fragment > 0) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"end":"fragment"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:888","type":"CtBinaryOperatorImpl","sourcecode":"(comparison) != 0"},"failures":[171],"tindex":"fc8aba1b-2ebf-11e6-a385-fb764b6a1be8","method":{"position":"org.apache.commons.lang3.ArrayUtils:4677","type":"CtMethodImpl","sourcecode":"public static boolean[] remove(final boolean[] array, final int index) {\n    if (index != 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((boolean[])(org.apache.commons.lang3.ArrayUtils.remove(((java.lang.Object)(array)), index)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparison":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:900","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(cls, toClass))"},"failures":[],"tindex":"fc8aba1c-2ebf-11e6-a385-d552be3949c4","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:844","type":"CtMethodImpl","sourcecode":"private static java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> getTypeArguments(final java.lang.reflect.ParameterizedType parameterizedType, final java.lang.Class<?> toClass, final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> subtypeVarAssigns) {\n    if (!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(toClass, toClass))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Class<?> java.lang.Class<?> = org.apache.commons.lang3.reflect.TypeUtils.getRawType(parameterizedType);\n            if (!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(cls, toClass))) {\n                return null;\n            } \n            final java.lang.reflect.Type java.lang.reflect.Type = parameterizedType.getOwnerType();\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>;\n            if (ownerType instanceof java.lang.reflect.ParameterizedType) {\n                final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(ownerType));\n                typeVarAssigns = org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(parameterizedOwnerType, org.apache.commons.lang3.reflect.TypeUtils.getRawType(parameterizedOwnerType), subtypeVarAssigns);\n            } else {\n                typeVarAssigns = subtypeVarAssigns == null ? new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>() : new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>(subtypeVarAssigns);\n            }\n            final java.lang.reflect.Type[] java.lang.reflect.Type[] = parameterizedType.getActualTypeArguments();\n            final java.lang.reflect.TypeVariable<?>[] java.lang.reflect.TypeVariable<?>[] = cls.getTypeParameters();\n            for (int int = 0 ; i < (typeParams.int) ; i++) {\n                final java.lang.reflect.Type java.lang.reflect.Type = typeArgs[i];\n                typeVarAssigns.put(typeParams[i], (typeVarAssigns.containsKey(typeArg) ? typeVarAssigns.get(typeArg) : typeArg));\n            }\n            if (toClass.equals(cls)) {\n                return typeVarAssigns;\n            } \n            return org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(org.apache.commons.lang3.reflect.TypeUtils.getClosestParentType(cls, toClass), toClass, typeVarAssigns);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toClass":"toClass","cls":"toClass"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:514","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.ArrayUtils.isSameLength(classArray, toClassArray)) == false"},"failures":[],"tindex":"fc8ae12d-2ebf-11e6-a385-098c0dc5cee5","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1406","type":"CtMethodImpl","sourcecode":"private static java.lang.reflect.Type[] unrollBounds(final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> typeArguments, final java.lang.reflect.Type[] bounds) {\n    if ((org.apache.commons.lang3.ArrayUtils.isSameLength(bounds, bounds)) == false) {\n        {\n            java.lang.reflect.Type[] java.lang.reflect.Type[] = bounds;\n            int int = 0;\n            for ( ; i < (result.int) ; i++) {\n                final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(typeArguments, result[i]);\n                if (unrolled == null) {\n                    result = org.apache.commons.lang3.ArrayUtils.remove(result, (i--));\n                } else {\n                    result[i] = unrolled;\n                }\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toClassArray":"bounds","classArray":"bounds"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5778","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isUpperCase(ch)"},"failures":[172],"tindex":"fc8ae12e-2ebf-11e6-a385-fdbe9614f524","method":{"position":"org.apache.commons.lang3.Conversion:222","type":"CtMethodImpl","sourcecode":"public static boolean[] hexDigitMsb0ToBinary(final char hexDigit) {\n    if (java.lang.Character.isUpperCase(hexDigit)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            switch (hexDigit) {\n                case '0' :\n                    return new boolean[]{ false , false , false , false };\n                case '1' :\n                    return new boolean[]{ false , false , false , true };\n                case '2' :\n                    return new boolean[]{ false , false , true , false };\n                case '3' :\n                    return new boolean[]{ false , false , true , true };\n                case '4' :\n                    return new boolean[]{ false , true , false , false };\n                case '5' :\n                    return new boolean[]{ false , true , false , true };\n                case '6' :\n                    return new boolean[]{ false , true , true , false };\n                case '7' :\n                    return new boolean[]{ false , true , true , true };\n                case '8' :\n                    return new boolean[]{ true , false , false , false };\n                case '9' :\n                    return new boolean[]{ true , false , false , true };\n                case 'a' :\n                case 'A' :\n                    return new boolean[]{ true , false , true , false };\n                case 'b' :\n                case 'B' :\n                    return new boolean[]{ true , false , true , true };\n                case 'c' :\n                case 'C' :\n                    return new boolean[]{ true , true , false , false };\n                case 'd' :\n                case 'D' :\n                    return new boolean[]{ true , true , false , true };\n                case 'e' :\n                case 'E' :\n                    return new boolean[]{ true , true , true , false };\n                case 'f' :\n                case 'F' :\n                    return new boolean[]{ true , true , true , true };\n                default :\n                    throw new java.lang.IllegalArgumentException(((\"Cannot interpret '\" + hexDigit) + \"' as a hexadecimal digit\"));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"hexDigit"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1523","type":"CtBinaryOperatorImpl","sourcecode":"(dstPos + i) == append"},"failures":[173],"tindex":"fc8b083f-2ebf-11e6-a385-5bf142958097","method":{"position":"org.apache.commons.lang3.StringUtils:1153","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final java.lang.CharSequence seq, final int searchChar) {\n    if ((searchChar + searchChar) == searchChar) {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(seq)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            return org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(seq, searchChar, seq.length());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dstPos":"searchChar","i":"searchChar","append":"searchChar"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:957","type":"CtBinaryOperatorImpl","sourcecode":"ignored != null"},"failures":[174],"tindex":"fc8b0840-2ebf-11e6-a385-435f596ebfba","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:859","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrTokenizer setDelimiterMatcher(final org.apache.commons.lang3.text.StrMatcher delim) {\n    if (delim != null) {\n        {\n            if (delim == null) {\n                org.apache.commons.lang3.text.StrTokenizer.this.org.apache.commons.lang3.text.StrMatcher = org.apache.commons.lang3.text.StrMatcher.noneMatcher();\n            } else {\n                org.apache.commons.lang3.text.StrTokenizer.this.org.apache.commons.lang3.text.StrMatcher = delim;\n            }\n            return org.apache.commons.lang3.text.StrTokenizer.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ignored":"delim"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:142","type":"CtBinaryOperatorImpl","sourcecode":"denominator == 0"},"failures":[],"tindex":"fc8b0841-2ebf-11e6-a385-9122a190cffa","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:226","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.time.FastDateFormat getDateInstance(final int style, final java.util.TimeZone timeZone, final java.util.Locale locale) {\n    if (style == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getDateInstance(style, timeZone, locale);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"denominator":"style"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Range:332","type":"CtBinaryOperatorImpl","sourcecode":"otherRange == null"},"failures":[175],"tindex":"fc8b2f52-2ebf-11e6-a385-05046b86dd11","method":{"position":"org.apache.commons.lang3.Range:331","type":"CtMethodImpl","sourcecode":"public boolean isAfterRange(final org.apache.commons.lang3.Range<T> otherRange) {\n    if (otherRange == null) {\n        {\n            if (otherRange == null) {\n                return false;\n            } \n            return isAfter(otherRange.T);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"otherRange":"otherRange"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:1083","type":"CtBinaryOperatorImpl","sourcecode":"(value <= start) || (value >= end)"},"failures":[],"tindex":"fc8b2f53-2ebf-11e6-a385-2f73332e368c","method":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:370","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic T get(final long timeout, final java.util.concurrent.TimeUnit unit) {\n    if (timeout < timeout) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((timeout <= timeout) || (value >= timeout)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return T;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"timeout","end":"timeout","value":"timeout"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1099","type":"CtBinaryOperatorImpl","sourcecode":"b < a"},"failures":[],"tindex":"fc8b2f54-2ebf-11e6-a385-0d5e71b27fd1","method":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:370","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic T get(final long timeout, final java.util.concurrent.TimeUnit unit) {\n    if (timeout < timeout) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((timeout <= timeout) || (value >= timeout)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return T;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"timeout","b":"timeout"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ObjectUtils:613","type":"CtUnaryOperatorImpl","sourcecode":"!(componentType.isPrimitive())"},"failures":[],"tindex":"fc8b5665-2ebf-11e6-a385-a9f52543e35c","method":{"position":"org.apache.commons.lang3.AnnotationUtils:72","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.lang.String getShortClassName(final java.lang.Class<?> cls) {\n    if (!(cls.isPrimitive())) {\n        {\n            java.lang.Class<? extends java.lang.annotation.Annotation> java.lang.Class<? extends java.lang.annotation.Annotation> = null;\n            for (final java.lang.Class<?> java.lang.Class<?> : org.apache.commons.lang3.ClassUtils.getAllInterfaces(cls)) {\n                if (java.lang.annotation.Annotation.java.lang.annotation.Annotation.java.lang.Class.isAssignableFrom(iface)) {\n                    @java.lang.SuppressWarnings(value = \"unchecked\")\n                    final java.lang.Class<? extends java.lang.annotation.Annotation> java.lang.Class<? extends java.lang.annotation.Annotation> = ((java.lang.Class<? extends java.lang.annotation.Annotation>)(iface));\n                    annotationType = found;\n                    break;\n                } \n            }\n            return new java.lang.StringBuilder((annotationType == null ? \"\" : annotationType.getName())).insert(0, '@').toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"componentType":"cls"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2805","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[176],"tindex":"fc8b5666-2ebf-11e6-a385-7b8de8ed156b","method":{"position":"org.apache.commons.lang3.StringUtils:1221","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final java.lang.CharSequence seq, final java.lang.CharSequence searchSeq) {\n    if (searchSeq == null) {\n        {\n            if ((seq == null) || (searchSeq == null)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            return org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(seq, searchSeq, seq.length());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"searchSeq"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1813","type":"CtBinaryOperatorImpl","sourcecode":"insertLen != removeLen"},"failures":[],"tindex":"fc8b5667-2ebf-11e6-a385-bb50d999ea9e","method":{"position":"org.apache.commons.lang3.math.Fraction:172","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.math.Fraction getFraction(final int whole, final int numerator, final int denominator) {\n    if (whole != whole) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (denominator == 0) {\n                throw new java.lang.ArithmeticException(\"The denominator must not be zero\");\n            } \n            if (denominator < 0) {\n                throw new java.lang.ArithmeticException(\"The denominator must not be negative\");\n            } \n            if (numerator < 0) {\n                throw new java.lang.ArithmeticException(\"The numerator must not be negative\");\n            } \n            long long;\n            if (whole < 0) {\n                numeratorValue = (whole * ((long)(denominator))) - numerator;\n            } else {\n                numeratorValue = (whole * ((long)(denominator))) + numerator;\n            }\n            if ((numeratorValue < (java.lang.Integer.java.lang.Integer.int)) || (numeratorValue > (java.lang.Integer.java.lang.Integer.int))) {\n                throw new java.lang.ArithmeticException(\"Numerator too large to represent as an Integer.\");\n            } \n            return new org.apache.commons.lang3.math.Fraction(((int)(numeratorValue)) , denominator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"insertLen":"whole","removeLen":"whole"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2073","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[177,178,179,180,181],"tindex":"fc8b7d78-2ebf-11e6-a385-59476204d0cb","method":{"position":"org.apache.commons.lang3.StringUtils:4484","type":"CtMethodImpl","sourcecode":"public static java.lang.String replace(final java.lang.String text, final java.lang.String searchString, final java.lang.String replacement) {\n    if (searchString == null) {\n        {\n            return org.apache.commons.lang3.StringUtils.replace(text, searchString, replacement, (-1));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"searchString"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:205","type":"CtBinaryOperatorImpl","sourcecode":"length > (size)"},"failures":[],"tindex":"fc8b7d79-2ebf-11e6-a385-ff70cd537cfd","method":{"position":"org.apache.commons.lang3.StringUtils:2173","type":"CtMethodImpl","sourcecode":"public static java.lang.String left(final java.lang.String str, final int len) {\n    if (len > len) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return null;\n            } \n            if (len < 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            if ((str.length()) <= len) {\n                return str;\n            } \n            return str.substring(0, len);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"len","length":"len"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:369","type":"CtInvocationImpl","sourcecode":"value.equals(falseValue)"},"failures":[182],"tindex":"fc8b7d7a-2ebf-11e6-a385-7ff70a73f98d","method":{"position":"org.apache.commons.lang3.mutable.MutableShort:148","type":"CtMethodImpl","sourcecode":"public void add(final java.lang.Number operand) {\n    if (operand.equals(operand)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.mutable.MutableShort.this.short += operand.shortValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"falseValue":"operand","value":"operand"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:799","type":"CtBinaryOperatorImpl","sourcecode":"nestedVarCount == 0"},"failures":[183],"tindex":"fc8ba48b-2ebf-11e6-a385-496241626a29","method":{"position":"org.apache.commons.lang3.time.DateUtils:460","type":"CtMethodImpl","sourcecode":"public static java.util.Date addHours(final java.util.Date date, final int amount) {\n    if (amount == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateUtils.add(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nestedVarCount":"amount"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1208","type":"CtBinaryOperatorImpl","sourcecode":"c > a"},"failures":[],"tindex":"fc8ba48c-2ebf-11e6-a385-3d46bf5125d8","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:443","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final long value) {\n    if (value > value) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, value);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"value","c":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1056","type":"CtBinaryOperatorImpl","sourcecode":"i > 0"},"failures":[184],"tindex":"fc8ba48d-2ebf-11e6-a385-613fbacfafcb","method":{"position":"org.apache.commons.lang3.BooleanUtils:198","type":"CtMethodImpl","sourcecode":"public static boolean toBoolean(final int value) {\n    if (value > 0) {\n        {\n            return value != 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:596","type":"CtBinaryOperatorImpl","sourcecode":"toWildcardType == null"},"failures":[],"tindex":"fc8ba48e-2ebf-11e6-a385-e58ea9d299ae","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1194","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Type[] getImplicitLowerBounds(final java.lang.reflect.WildcardType wildcardType) {\n    if (wildcardType == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.notNull(wildcardType, \"wildcardType is null\");\n            final java.lang.reflect.Type[] java.lang.reflect.Type[] = wildcardType.getLowerBounds();\n            return (bounds.int) == 0 ? new java.lang.reflect.Type[]{ null } : bounds;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toWildcardType":"wildcardType"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDateParser:360","type":"CtBinaryOperatorImpl","sourcecode":"c == 'E'"},"failures":[185,35,149,150,151,37,38,39,41,42,44,45,46,47,48,49,50,51,52,53,186,187,188,189],"tindex":"fc8bcb9f-2ebf-11e6-a385-bdc77f5170e7","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:551","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.EqualsBuilder append(final char lhs, final char rhs) {\n    if (lhs == 'E') {\n        {\n            if ((boolean) == false) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            boolean = lhs == rhs;\n            return org.apache.commons.lang3.builder.EqualsBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"lhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1378","type":"CtBinaryOperatorImpl","sourcecode":"startPos < 0"},"failures":[190],"tindex":"fc8bcba0-2ebf-11e6-a385-e39db5eabd1c","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1606","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder insert(final int index, final char value) {\n    if (index < 0) {\n        {\n            validateIndex(index);\n            ensureCapacity(((int) + 1));\n            java.lang.System.arraycopy(char[], index, char[], (index + 1), ((int) - index));\n            char[][index] = value;\n            (int)++;\n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startPos":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:974","type":"CtBinaryOperatorImpl","sourcecode":"lhs == null"},"failures":[191,192,193,194,195,196,197,198],"tindex":"fc8bcba1-2ebf-11e6-a385-970471936c2f","method":{"position":"org.apache.commons.lang3.ArrayUtils:3586","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final boolean[] array) {\n    if (array == null) {\n        {\n            return (array == null) || ((array.int) == 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4878","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(searchChars))"},"failures":[199],"tindex":"fc8bf2b2-2ebf-11e6-a385-b71531183129","method":{"position":"org.apache.commons.lang3.text.WordUtils:451","type":"CtMethodImpl","sourcecode":"public static java.lang.String swapCase(final java.lang.String str) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(str))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n                return str;\n            } \n            final char[] char[] = str.toCharArray();\n            boolean boolean = true;\n            for (int int = 0 ; i < (buffer.int) ; i++) {\n                final char char = buffer[i];\n                if (java.lang.Character.isUpperCase(ch)) {\n                    buffer[i] = java.lang.Character.toLowerCase(ch);\n                    whitespace = false;\n                } else if (java.lang.Character.isTitleCase(ch)) {\n                    buffer[i] = java.lang.Character.toLowerCase(ch);\n                    whitespace = false;\n                } else if (java.lang.Character.isLowerCase(ch)) {\n                    if (whitespace) {\n                        buffer[i] = java.lang.Character.toTitleCase(ch);\n                        whitespace = false;\n                    } else {\n                        buffer[i] = java.lang.Character.toUpperCase(ch);\n                    }\n                } else {\n                    whitespace = java.lang.Character.isWhitespace(ch);\n                }\n            }\n            return new java.lang.String(buffer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str","searchChars":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1262","type":"CtBinaryOperatorImpl","sourcecode":"c > a"},"failures":[],"tindex":"fc8bf2b3-2ebf-11e6-a385-11242040218e","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:303","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final byte value) {\n    if (value > value) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, value);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"value","c":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3026","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[200,201],"tindex":"fc8bf2b4-2ebf-11e6-a385-c17c6d907b1f","method":{"position":"org.apache.commons.lang3.ArrayUtils:692","type":"CtMethodImpl","sourcecode":"public static java.lang.Long[] nullToEmpty(final java.lang.Long[] array) {\n    if (array == null) {\n        {\n            if ((array == null) || ((array.int) == 0)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Long[];\n            } \n            return array;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:531","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.Class<?>"},"failures":[202,203,204,138,205,206,207],"tindex":"fc8c19c5-2ebf-11e6-a385-2d7f8a7d247e","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:311","type":"CtMethodImpl","sourcecode":"public static boolean isAssignable(final java.lang.reflect.Type type, final java.lang.reflect.Type toType) {\n    if (toType instanceof java.lang.Class<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.reflect.TypeUtils.isAssignable(type, toType, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"toType"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:738","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[208],"tindex":"fc8c19c6-2ebf-11e6-a385-715f62c4d98f","method":{"position":"org.apache.commons.lang3.time.DateUtils:218","type":"CtMethodImpl","sourcecode":"public static boolean isSameInstant(final java.util.Calendar cal1, final java.util.Calendar cal2) {\n    if (cal1 == null) {\n        {\n            if ((cal1 == null) || (cal2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            return (cal1.getTime().getTime()) == (cal2.getTime().getTime());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"cal1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:975","type":"CtBinaryOperatorImpl","sourcecode":"prefixMatcher == null"},"failures":[209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247],"tindex":"fc8c19c7-2ebf-11e6-a385-a9f71dbbf5c6","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1110","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrSubstitutor setValueDelimiterMatcher(final org.apache.commons.lang3.text.StrMatcher valueDelimiterMatcher) {\n    if (valueDelimiterMatcher == null) {\n        {\n            org.apache.commons.lang3.text.StrSubstitutor.this.org.apache.commons.lang3.text.StrMatcher = valueDelimiterMatcher;\n            return org.apache.commons.lang3.text.StrSubstitutor.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"prefixMatcher":"valueDelimiterMatcher"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSet:250","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.lang3.CharSet) == false"},"failures":[],"tindex":"fc8c40d8-2ebf-11e6-a385-49b072f6c9d9","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:466","type":"CtMethodImpl","sourcecode":"static void register(final java.lang.Object value) {\n    if ((value instanceof org.apache.commons.lang3.CharSet) == false) {\n        {\n            synchronized(org.apache.commons.lang3.builder.HashCodeBuilder.org.apache.commons.lang3.builder.HashCodeBuilder.java.lang.Class) {\n                if ((org.apache.commons.lang3.builder.HashCodeBuilder.getRegistry()) == null) {\n                    org.apache.commons.lang3.builder.HashCodeBuilder.org.apache.commons.lang3.builder.HashCodeBuilder.java.lang.ThreadLocal<java.util.Set<org.apache.commons.lang3.builder.IDKey>>.set(new java.util.HashSet<org.apache.commons.lang3.builder.IDKey>());\n                } \n            }\n            org.apache.commons.lang3.builder.HashCodeBuilder.getRegistry().add(new org.apache.commons.lang3.builder.IDKey(value));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2022","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[248,249,250],"tindex":"fc8c40d9-2ebf-11e6-a385-b91d0fbb139d","method":{"position":"org.apache.commons.lang3.ArrayUtils:2003","type":"CtMethodImpl","sourcecode":"public static int indexOf(final long[] array, final long valueToFind) {\n    if (array == null) {\n        {\n            return org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.reflect.FieldUtils:172","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.lang3.reflect.MemberUtils.isAccessible(field))"},"failures":[251],"tindex":"fc8c40da-2ebf-11e6-a385-79fe055e2ff4","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:236","type":"CtMethodImpl","sourcecode":"public static java.lang.Object readStaticField(final java.lang.reflect.Field field) throws java.lang.IllegalAccessException {\n    if (!(org.apache.commons.lang3.reflect.MemberUtils.isAccessible(field))) {\n        throw new java.lang.IllegalAccessException();\n    } else {\n        {\n            return org.apache.commons.lang3.reflect.FieldUtils.readStaticField(field, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"field"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomStringUtils:225","type":"CtBinaryOperatorImpl","sourcecode":"count == 0"},"failures":[252,253],"tindex":"fc8d042b-2ebf-11e6-a385-397b9164e929","method":{"position":"org.apache.commons.lang3.ArrayUtils:5132","type":"CtMethodImpl","sourcecode":"public static short[] remove(final short[] array, final int index) {\n    if (index == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((short[])(org.apache.commons.lang3.ArrayUtils.remove(((java.lang.Object)(array)), index)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:970","type":"CtBinaryOperatorImpl","sourcecode":"abbreviation != null"},"failures":[254,254],"tindex":"fc8d2b3c-2ebf-11e6-a385-ef5167bbd9ff","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:801","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final double value) {\n    if (fieldName != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"abbreviation":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:530","type":"CtVariableReadImpl","sourcecode":"detail"},"failures":[255],"tindex":"fc8d2b3d-2ebf-11e6-a385-7b20d2d8adb1","method":{"position":"org.apache.commons.lang3.StringUtils:7411","type":"CtMethodImpl","sourcecode":"private static java.lang.String appendIfMissing(final java.lang.String str, final java.lang.CharSequence suffix, final boolean ignoreCase, final java.lang.CharSequence... suffixes) {\n    if (ignoreCase) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((str == null) || (org.apache.commons.lang3.StringUtils.isEmpty(suffix))) || (org.apache.commons.lang3.StringUtils.endsWith(str, suffix, ignoreCase))) {\n                return str;\n            } \n            if ((suffixes != null) && ((suffixes.int) > 0)) {\n                for (final java.lang.CharSequence java.lang.CharSequence : suffixes) {\n                    if (org.apache.commons.lang3.StringUtils.endsWith(str, s, ignoreCase)) {\n                        return str;\n                    } \n                }\n            } \n            return str + (suffix.toString());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"detail":"ignoreCase"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":80,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}