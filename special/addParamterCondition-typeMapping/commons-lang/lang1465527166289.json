{"failureDictionary":{"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":5,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":2,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":8,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":20,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":10,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":14,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":6,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":4,"org.apache.commons.lang3.StringUtilsTest.testReplace_StringStringArrayStringArray":0,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":19,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":3,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":9,"org.apache.commons.lang3.builder.DiffBuilderTest.testStylePassedToDiffResult":12,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":17,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":13,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":18,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":16,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":1,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":7,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":11},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1099","type":"CtBinaryOperatorImpl","sourcecode":"b < a"},"failures":[],"tindex":"6915a3b5-2eb6-11e6-a917-5b56d849bb27","method":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:96","type":"CtMethodImpl","sourcecode":"public static java.lang.String formatDurationISO(final long durationMillis) {\n    if (durationMillis < durationMillis) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(durationMillis, org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.String, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"durationMillis","b":"durationMillis"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSetUtils:244","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isNotEmpty(s)"},"failures":[0],"tindex":"69168e16-2eb6-11e6-a917-6df8f5eaffa0","method":{"position":"org.apache.commons.lang3.StringUtils:4581","type":"CtMethodImpl","sourcecode":"public static java.lang.String replaceEach(final java.lang.String text, final java.lang.String[] searchList, final java.lang.String[] replacementList) {\n    if (org.apache.commons.lang3.StringUtils.isNotEmpty(text)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.replaceEach(text, searchList, replacementList, false, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"s":"text"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:220","type":"CtBinaryOperatorImpl","sourcecode":"lhs != rhs"},"failures":[1,1],"tindex":"69168e17-2eb6-11e6-a917-778945bb1049","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:303","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final byte value) {\n    if (value != value) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, value);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"value","rhs":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:623","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"6916b528-2eb6-11e6-a917-736c304ff686","method":{"position":"org.apache.commons.lang3.time.FastDateParser:605","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nboolean addRegex(final org.apache.commons.lang3.time.FastDateParser parser, final java.lang.StringBuilder regex) {\n    if (regex == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            regex.append('(');\n            for (final java.lang.String java.lang.String : java.util.Map<java.lang.String, java.lang.Integer>.keySet()) {\n                org.apache.commons.lang3.time.FastDateParser.escapeRegex(regex, textKeyValue, false).append('|');\n            }\n            regex.setCharAt(((regex.length()) - 1), ')');\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"regex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6544","type":"CtBinaryOperatorImpl","sourcecode":"(cs1 == null) || (cs2 == null)"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"tindex":"6916dc39-2eb6-11e6-a917-2b6360ceb7ac","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:797","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final java.lang.Object lhs, final java.lang.Object rhs) {\n    if ((rhs == null) || (rhs == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            java.lang.Object java.lang.Object;\n            if (lhs != null) {\n                objectToTest = lhs;\n            } else {\n                objectToTest = rhs;\n            }\n            if (objectToTest.getClass().isArray()) {\n                if (objectToTest instanceof boolean[]) {\n                    return append(fieldName, ((boolean[])(lhs)), ((boolean[])(rhs)));\n                } \n                if (objectToTest instanceof byte[]) {\n                    return append(fieldName, ((byte[])(lhs)), ((byte[])(rhs)));\n                } \n                if (objectToTest instanceof char[]) {\n                    return append(fieldName, ((char[])(lhs)), ((char[])(rhs)));\n                } \n                if (objectToTest instanceof double[]) {\n                    return append(fieldName, ((double[])(lhs)), ((double[])(rhs)));\n                } \n                if (objectToTest instanceof float[]) {\n                    return append(fieldName, ((float[])(lhs)), ((float[])(rhs)));\n                } \n                if (objectToTest instanceof int[]) {\n                    return append(fieldName, ((int[])(lhs)), ((int[])(rhs)));\n                } \n                if (objectToTest instanceof long[]) {\n                    return append(fieldName, ((long[])(lhs)), ((long[])(rhs)));\n                } \n                if (objectToTest instanceof short[]) {\n                    return append(fieldName, ((short[])(lhs)), ((short[])(rhs)));\n                } \n                return append(fieldName, ((java.lang.Object[])(lhs)), ((java.lang.Object[])(rhs)));\n            } \n            java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Object>(fieldName) {\n                private static final long serialVersionUID = 1L;\n\n                @java.lang.Override\n                public java.lang.Object getLeft() {\n                    return lhs;\n                }\n\n                @java.lang.Override\n                public java.lang.Object getRight() {\n                    return rhs;\n                }\n            });\n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs1":"rhs","cs2":"rhs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:274","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"69172a5a-2eb6-11e6-a917-3538ba03765c","method":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:304","type":"CtMethodImpl","sourcecode":"private java.text.Format getFormat(final java.lang.String desc) {\n    if (desc == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((java.util.Map<java.lang.String, ? extends org.apache.commons.lang3.text.FormatFactory>) != null) {\n                java.lang.String java.lang.String = desc;\n                java.lang.String java.lang.String = null;\n                final int int = desc.indexOf(org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char);\n                if (i > 0) {\n                    name = desc.substring(0, i).trim();\n                    args = desc.substring((i + 1)).trim();\n                } \n                final org.apache.commons.lang3.text.FormatFactory org.apache.commons.lang3.text.FormatFactory = java.util.Map<java.lang.String, ? extends org.apache.commons.lang3.text.FormatFactory>.get(name);\n                if (factory != null) {\n                    return factory.getFormat(name, args, getLocale());\n                } \n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"desc"},"type":"special","returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":6,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}