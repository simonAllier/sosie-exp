{"failureDictionary":{"org.apache.commons.lang3.ArrayUtilsTest.testCloneByte":16,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementByteArray":14,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringString":0,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":7,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiDoubleArray":20,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringStringWithSupplementaryChars":1,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":5,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":8,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveBooleanArray":11,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayToObjectArray":15,"org.apache.commons.lang3.builder.CompareToBuilderTest.testDoubleArray":21,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":4,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementByteArray":13,"org.apache.commons.lang3.RangeTest.testIsWithCompare":17,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":9,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_int":12,"org.apache.commons.lang3.builder.CompareToBuilderTest.testDoubleArrayHiddenByObject":19,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":2,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":3,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementBooleanArray":10,"org.apache.commons.lang3.mutable.MutableLongTest.testSetNull":18,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":6},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:653","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[0,1],"tindex":"793517d3-2ecb-11e6-a81d-b73300d86c1d","method":{"position":"org.apache.commons.lang3.StringUtils:1585","type":"CtMethodImpl","sourcecode":"public static int indexOfAny(final java.lang.CharSequence cs, final java.lang.String searchChars) {\n    if (cs == null) {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(cs)) || (org.apache.commons.lang3.StringUtils.isEmpty(searchChars))) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            return org.apache.commons.lang3.StringUtils.indexOfAny(cs, searchChars.toCharArray());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"cs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:414","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[],"tindex":"7936ec94-2ecb-11e6-a81d-ef6249251052","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1012","type":"CtMethodImpl","sourcecode":"protected void appendSummary(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final long[] array) {\n    if (fieldName == null) {\n        {\n            appendSummarySize(buffer, fieldName, array.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"fieldName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrMatcher:193","type":"CtBinaryOperatorImpl","sourcecode":"(chars.length()) == 1"},"failures":[],"tindex":"7936ec95-2ecb-11e6-a81d-5b7d0be3f570","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:380","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.StringBuffer format(final java.lang.Object obj, final java.lang.StringBuffer toAppendTo, final java.text.FieldPosition pos) {\n    if ((obj.length()) == 1) {\n        {\n            if (obj instanceof java.util.Date) {\n                return format(((java.util.Date)(obj)), toAppendTo);\n            } else if (obj instanceof java.util.Calendar) {\n                return format(((java.util.Calendar)(obj)), toAppendTo);\n            } else if (obj instanceof java.lang.Long) {\n                return format(((java.lang.Long)(obj)).longValue(), toAppendTo);\n            } else {\n                throw new java.lang.IllegalArgumentException((\"Unknown class: \" + (obj == null ? \"<null>\" : obj.getClass().getName())));\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chars":"obj"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5588","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[2,3,4,5,6,7,8,9],"tindex":"793713a6-2ecb-11e6-a81d-05d42da9eec7","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:461","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setSizeStartText(final java.lang.String sizeStartText) {\n    if (sizeStartText == null) {\n        {\n            super.setSizeStartText(sizeStartText);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"sizeStartText"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:585","type":"CtBinaryOperatorImpl","sourcecode":"((java.lang.Math.abs(u)) == 1) || ((java.lang.Math.abs(v)) == 1)"},"failures":[],"tindex":"79373ab7-2ecb-11e6-a81d-43a9e3add65b","method":{"position":"org.apache.commons.lang3.text.StrBuilder:968","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendln(final org.apache.commons.lang3.text.StrBuilder str, final int startIndex, final int length) {\n    if (((java.lang.Math.abs(length)) == 1) || ((java.lang.Math.abs(length)) == 1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return append(str, startIndex, length).appendNewLine();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"u":"length","v":"length"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2124","type":"CtBinaryOperatorImpl","sourcecode":"end < 0"},"failures":[],"tindex":"79373ab8-2ecb-11e6-a81d-15ebbec48c6b","method":{"position":"org.apache.commons.lang3.Conversion:833","type":"CtMethodImpl","sourcecode":"public static int byteArrayToInt(final byte[] src, final int srcPos, final int dstInit, final int dstPos, final int nBytes) {\n    if (dstPos < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((((src.int) == 0) && (srcPos == 0)) || (0 == nBytes)) {\n                return dstInit;\n            } \n            if ((((nBytes - 1) * 8) + dstPos) >= 32) {\n                throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+dstPos is greather or equal to than 32\");\n            } \n            int int = dstInit;\n            int int = 0;\n            for (int int = 0 ; i < nBytes ; i++) {\n                shift = (i * 8) + dstPos;\n                final int int = (255 & (src[(i + srcPos)])) << shift;\n                final int int = 255 << shift;\n                out = (out & (~mask)) | bits;\n            }\n            return out;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"end":"dstPos"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:905","type":"CtBinaryOperatorImpl","sourcecode":"0 == nHex"},"failures":[10,11],"tindex":"79382519-2ecb-11e6-a81d-4bfa3ea1735f","method":{"position":"org.apache.commons.lang3.ArrayUtils:4677","type":"CtMethodImpl","sourcecode":"public static boolean[] remove(final boolean[] array, final int index) {\n    if (0 == index) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((boolean[])(org.apache.commons.lang3.ArrayUtils.remove(((java.lang.Object)(array)), index)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nHex":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3666","type":"CtBinaryOperatorImpl","sourcecode":"noOfItems <= 0"},"failures":[12],"tindex":"79384c2a-2ecb-11e6-a81d-eb5d09b6fbec","method":{"position":"org.apache.commons.lang3.BooleanUtils:198","type":"CtMethodImpl","sourcecode":"public static boolean toBoolean(final int value) {\n    if (value <= 0) {\n        {\n            return value != 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"noOfItems":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1358","type":"CtBinaryOperatorImpl","sourcecode":"0 == nBytes"},"failures":[],"tindex":"7939abbb-2ecb-11e6-a81d-ef193e92e5d9","method":{"position":"org.apache.commons.lang3.StringUtils:5261","type":"CtMethodImpl","sourcecode":"public static java.lang.String rightPad(final java.lang.String str, final int size, final char padChar) {\n    if (0 == size) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return null;\n            } \n            final int int = size - (str.length());\n            if (pads <= 0) {\n                return str;\n            } \n            if (pads > (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) {\n                return org.apache.commons.lang3.StringUtils.rightPad(str, size, java.lang.String.valueOf(padChar));\n            } \n            return str.concat(org.apache.commons.lang3.StringUtils.repeat(padChar, pads));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nBytes":"size"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5782","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isLowerCase(ch)"},"failures":[],"tindex":"7939d2cc-2ecb-11e6-a81d-bb957b6e29cc","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1432","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendFixedWidthPadRight(final java.lang.Object obj, final int width, final char padChar) {\n    if (java.lang.Character.isLowerCase(padChar)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (width > 0) {\n                ensureCapacity(((int) + width));\n                java.lang.String java.lang.String = obj == null ? getNullText() : obj.toString();\n                if (str == null) {\n                    str = \"\";\n                } \n                final int int = str.length();\n                if (strLen >= width) {\n                    str.getChars(0, width, char[], int);\n                } else {\n                    final int int = width - strLen;\n                    str.getChars(0, strLen, char[], int);\n                    for (int int = 0 ; i < padLen ; i++) {\n                        char[][(((int) + strLen) + i)] = padChar;\n                    }\n                }\n                int += width;\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"padChar"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2482","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[13,14,15,16],"tindex":"7939d2cd-2ecb-11e6-a81d-cb923193d384","method":{"position":"org.apache.commons.lang3.ArrayUtils:402","type":"CtMethodImpl","sourcecode":"public static byte[] clone(final byte[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } \n            return array.clone();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Range:151","type":"CtBinaryOperatorImpl","sourcecode":"comp == null"},"failures":[17],"tindex":"7939f9de-2ecb-11e6-a81d-db72e46d6dcb","method":{"position":"org.apache.commons.lang3.Range:93","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.lang3.Range<T> is(final T element, final java.util.Comparator<T> comparator) {\n    if (comparator == null) {\n        {\n            return org.apache.commons.lang3.Range.between(element, element, comparator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comp":"comparator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDatePrinter:209","type":"CtBinaryOperatorImpl","sourcecode":"tokenLen == 3"},"failures":[],"tindex":"7939f9df-2ecb-11e6-a81d-2377e24075b5","method":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:95","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.translate.UnicodeEscaper between(final int codepointLow, final int codepointHigh) {\n    if (codepointLow == 3) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.lang3.text.translate.UnicodeEscaper(codepointLow , codepointHigh , true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"tokenLen":"codepointLow"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:823","type":"CtBinaryOperatorImpl","sourcecode":"fraction == null"},"failures":[18],"tindex":"7939f9e0-2ecb-11e6-a81d-4d45d3d8d123","method":{"position":"org.apache.commons.lang3.mutable.MutableLong:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setValue(final java.lang.Number value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.mutable.MutableLong.this.long = value.longValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fraction":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1679","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[19,20,21],"tindex":"793a1ff1-2ecb-11e6-a81d-0d45ffc11881","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:887","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final double[] lhs, final double[] rhs) {\n    if (rhs == null) {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == null) {\n                int = -1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (rhs == null) {\n                int = +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                int = (lhs.int) < (rhs.int) ? -1 : +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && ((int) == 0) ; i++) {\n                append(lhs[i], rhs[i]);\n            }\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"rhs"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":15,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}