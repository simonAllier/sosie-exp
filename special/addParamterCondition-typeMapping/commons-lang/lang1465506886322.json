{"failureDictionary":{"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringCharArray":204,"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":55,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":352,"org.apache.commons.lang3.StringUtilsTest.testIsNoneEmpty":177,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":290,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringString":227,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":292,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testAddInitializerAfterStart":38,"org.apache.commons.lang3.math.NumberUtilsTest.testLang381":110,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":286,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":289,"org.apache.commons.lang3.time.DateUtilsTest.testSetYears":251,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeRuntimeEx":25,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstringAfter_StringString":237,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":7,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":255,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testIsStartedTrue":14,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":275,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDifferingStyles":89,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":96,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayBoolean":145,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArrayEqualAsObject":65,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStripAll":114,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOfIgnoreCase_String":333,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayInt":139,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testDoubleArrayAsObject":153,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":100,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":259,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":323,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHiragana":136,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultIsExceptionUnknown":40,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":273,"org.apache.commons.lang3.ClassUtilsTest.testGetClassByNormalNameArrays":75,"org.apache.commons.lang3.concurrent.CallableBackgroundInitializerTest.testInitialize":10,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":63,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang708":128,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_char":151,"org.apache.commons.lang3.time.DateUtilsTest.testAddMonths":246,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlVersions":134,"org.apache.commons.lang3.ClassUtilsTest.testGetClassWithArrayClasses2D":78,"org.apache.commons.lang3.RandomUtilsTest.testNextLong":270,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":320,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":257,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetMatchingAccessibleMethod":355,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":53,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":85,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml10":124,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDefaults":91,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml11":125,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringStringarray":226,"org.apache.commons.lang3.ArrayUtilsTest.testSameLengthFloat":335,"org.apache.commons.lang3.time.DateUtilsTest.testSetMonths":247,"org.apache.commons.lang3.mutable.MutableDoubleTest.testSubtractValueObject":6,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_1Part":343,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":294,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethodWithEvent":351,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":301,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":98,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionCompareEx1":45,"org.apache.commons.lang3.CharUtilsTest.testToCharacterObject_String":192,"org.apache.commons.lang3.math.NumberUtilsTest.testMaximumFloat":111,"org.apache.commons.lang3.StringUtilsTest.testPrependIfMissingIgnoreCase":179,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":282,"org.apache.commons.lang3.StringUtilsTest.testChomp":163,"org.apache.commons.lang3.StringUtilsTest.testRemoveEndIgnoreCase":112,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeEcmaScript":130,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":321,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":326,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":260,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListenerWithPrivateAddMethod":349,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJavaWithSlash":3,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethod":348,"org.apache.commons.lang3.math.NumberUtilsTest.testIsDigits":193,"org.apache.commons.lang3.StringUtilsTest.testLeftPad_StringIntString":171,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testLongArrayAsObject":156,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxShort_emptyArray":150,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetPrefix":48,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringStringarray":223,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOfIgnoreCase_StringInt":332,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":285,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringString":220,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":87,"org.apache.commons.lang3.ClassUtilsTest.test_getShortClassName_String":187,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOf_char":203,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionCompare":44,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayObject":147,"org.apache.commons.lang3.StringUtilsTest.testRemove_String":160,"org.apache.commons.lang3.text.StrMatcherTest.testStringMatcher_String":219,"org.apache.commons.lang3.builder.CompareToBuilderTest.testFloatArray":331,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":324,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairsLang858":0,"org.apache.commons.lang3.StringUtilsTest.testReplace_StringStringArrayStringArray":73,"org.apache.commons.lang3.StringUtilsTest.testReplaceOnce_StringStringString":175,"org.apache.commons.lang3.RandomUtilsTest.testNextDouble":269,"org.apache.commons.lang3.StringEscapeUtilsTest.testStandaloneAmphersand":120,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":299,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":86,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeEx":32,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstringBeforeLast_StringString":236,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionCompareEx2":46,"org.apache.commons.lang3.StringUtilsTest.testSwapCase_String":181,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListener":347,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringString":195,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeMethod":357,"org.apache.commons.lang3.StringUtilsTest.testSplitPreserveAllTokens_StringString_StringStringInt":363,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":256,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeUnknownEntity":135,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetValueDelimiter":218,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":102,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":59,"org.apache.commons.lang3.StringUtilsTest.testUnescapeSurrogatePairs":118,"org.apache.commons.lang3.StringUtilsTest.testReplace_StringStringString":176,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeNested":30,"org.apache.commons.lang3.StringUtilsTest.testAbbreviateMiddle":167,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetActiveExecutorTemp":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":277,"org.apache.commons.lang3.RandomUtilsTest.testExtremeRangeLong":264,"org.apache.commons.lang3.StringUtilsTest.testDefaultIfEmpty_StringString":173,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":318,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":103,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetBeforeStart":20,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtml":122,"org.apache.commons.lang3.LocaleUtilsTest.testThreeCharsLocale":341,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":298,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":288,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_2Part":344,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testIsStartedAfterGet":18,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOf_char":198,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstringsBetween_StringStringString":233,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeWithDelimiters_String":209,"org.apache.commons.lang3.StringUtilsTest.testIsAnyEmpty":161,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":64,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":328,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":261,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringString":200,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayChar":143,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContains_Char":197,"org.apache.commons.lang3.text.StrBuilderTest.testAsWriter":93,"org.apache.commons.lang3.StringUtilsTest.testReplace_StringStringArrayStringArrayBoolean":74,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyShort":307,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetResultObjectUnknown":39,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":69,"org.apache.commons.lang3.ClassUtilsTest.testGetInnerClass":76,"org.apache.commons.lang3.StringUtilsTest.testPrependIfMissing":162,"org.apache.commons.lang3.ClassUtilsTest.test_getSimpleName_Class":365,"org.apache.commons.lang3.ArrayUtilsTest.testSameLengthInt":366,"org.apache.commons.lang3.time.FastDatePrinterTest.testFormat":88,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":138,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOf_charInt":201,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstringAfterLast_StringString":234,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":317,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringString":222,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":57,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":72,"org.apache.commons.lang3.StringUtilsTest.testDefaultIfEmpty_CharBuffers":164,"org.apache.commons.lang3.ObjectUtilsTest.testConstMethods":334,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":325,"org.apache.commons.lang3.ClassUtilsTest.testGetClassWithArrayClasses":77,"org.apache.commons.lang3.RandomUtilsTest.testNextDoubleMinimalRange":265,"org.apache.commons.lang3.math.NumberUtilsTest.testMinDouble":367,"org.apache.commons.lang3.ArrayUtilsTest.testReverseByte":241,"org.apache.commons.lang3.builder.DiffBuilderTest.testStylePassedToDiffResult":61,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":274,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":293,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testLongArray":154,"org.apache.commons.lang3.StringUtilsTest.testRemove_char":166,"org.apache.commons.lang3.StringUtilsSubstringTest.testLeft_String":263,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfShort":304,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_3Part":345,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":105,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairs":117,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeStaticMethod":353,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":314,"org.apache.commons.lang3.ConversionTest.testBinaryToByte":364,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayByte":142,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringString":225,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testSetExternalExecutor":23,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang720":129,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstringBefore_StringString":232,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":97,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":253,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeResultsIsSuccessfulFalse":34,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayShort":141,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringStringarray":224,"org.apache.commons.lang3.StringUtilsIsTest.testIsNumeric":238,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayToObjectArray":51,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxShort_nullArray":149,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHexCharsHtml":132,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeXmlSupplementaryCharacters":133,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":316,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":58,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetCheckedException":11,"org.apache.commons.lang3.time.DateUtilsTest.testSetHours":250,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testTrimToNull":207,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":281,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":107,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":279,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang313":127,"org.apache.commons.lang3.ArrayUtilsTest.testSameLengthLong":271,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":52,"org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayString":358,"org.apache.commons.lang3.StringUtilsTest.testRemoveStart":165,"org.apache.commons.lang3.time.DateUtilsTest.testIsSameInstant_Date":370,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":278,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":54,"org.apache.commons.lang3.StringUtilsTest.testReplace_StringStringStringInt":186,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":108,"org.apache.commons.lang3.StringUtilsTest.testIsAllLowerCase":339,"org.apache.commons.lang3.StringUtilsTest.testIsNotEmpty":174,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":70,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":284,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetActiveExecutorBeforeStart":19,"org.apache.commons.lang3.time.DateUtilsTest.testRoundLang346":242,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":67,"org.apache.commons.lang3.StringUtilsTest.testRepeat_StringInt":337,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceFirst_StrMatcher_String":308,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOfType_ThrowableClassInt":49,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAnyBut_StringString":196,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testIsStartedFalse":13,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadLeft_int":310,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetRuntimeException":12,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testDoubleArray":157,"org.apache.commons.lang3.text.StrBuilderTest.testAsReader":82,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlSupplementaryCharacters":126,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":313,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeExternalExec":37,"org.apache.commons.lang3.StringUtilsTest.testJoin_Objectarray":359,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":194,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":300,"org.apache.commons.lang3.StringUtilsTest.testAppendIfMissing":172,"org.apache.commons.lang3.StringUtilsTest.testRepeat_StringStringInt":336,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHierarchyHashCodeEx1":42,"org.apache.commons.lang3.text.StrBuilderTest.testCapacityAndLength":92,"org.apache.commons.lang3.StringUtilsTest.testCenter_StringIntString":185,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOf_charInt":199,"org.apache.commons.lang3.ArrayUtilsTest.testToObject_byte":8,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringStringArray":47,"org.apache.commons.lang3.StringUtilsTest.testDefaultIfEmpty_StringBuffers":169,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":66,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyShortEmptyArray":306,"org.apache.commons.lang3.RandomUtilsTest.testNextDoubleNegative":267,"org.apache.commons.lang3.LocaleUtilsTest.testLang328":340,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":322,"org.apache.commons.lang3.ClassUtilsTest.test_getAllSuperclasses_Class":362,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeResultsIsSuccessfulTrue":28,"org.apache.commons.lang3.StringUtilsTest.testJoin_Objects":360,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateTimeInstance":90,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStrip_StringString":115,"org.apache.commons.lang3.text.WordUtilsTest.testUncapitalize_String":210,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHtml4":121,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testStartMultipleTimes":21,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testStartsWithAny":230,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testIsEmpty":208,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":101,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfShortWithStartIndex":303,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testSetExternalExecutorAfterStart":16,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String_charArray":213,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testAddInitializerNullInit":26,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":99,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":62,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOf_ThrowableClassInt":5,"org.apache.commons.lang3.text.StrBuilderTest.testLang412Left":311,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":283,"org.apache.commons.lang3.StringUtilsTest.testRemoveEnd":184,"org.apache.commons.lang3.StringUtilsIsTest.testIsAlphanumeric":239,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":252,"org.apache.commons.lang3.text.StrBuilderTest.testChaining":95,"org.apache.commons.lang3.text.WordUtilsTest.testUncapitalizeWithDelimiters_String":214,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testLong":152,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalize_String":211,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":356,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":330,"org.apache.commons.lang3.StringUtilsTest.testAppendIfMissingIgnoreCase":168,"org.apache.commons.lang3.ClassUtilsTest.testGetClassByNormalNameArrays2D":79,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOf":83,"org.apache.commons.lang3.ArrayUtilsTest.testToObject_double":148,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":291,"org.apache.commons.lang3.ClassUtilsTest.testWithInterleavingWhitespace":80,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":1,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testEndsWithIgnoreCase":113,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLexx":338,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":60,"org.apache.commons.lang3.text.StrMatcherTest.testCharSetMatcher_String":50,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":329,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadLeft":309,"org.apache.commons.lang3.StringUtilsTest.testReplaceChars_StringStringString":170,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":4,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testInitialize":17,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":262,"org.apache.commons.lang3.time.DateUtilsTest.testRound":243,"org.apache.commons.lang3.StringUtilsSubstringTest.testCountMatches_String":235,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeChildWithExecutor":36,"org.apache.commons.lang3.LocaleUtilsTest.testParseAllLocales":342,"org.apache.commons.lang3.StringUtilsTest.testDefaultIfEmpty_StringBuilders":178,"org.apache.commons.lang3.ClassUtilsTest.testGetClassInvalidArguments":189,"org.apache.commons.lang3.StringUtilsTest.testIsEmpty":182,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml":137,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayLong":144,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayObject":361,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":68,"org.apache.commons.lang3.RandomUtilsTest.testExtremeRangeDouble":266,"org.apache.commons.lang3.time.DateUtilsTest.testSetDays":248,"org.apache.commons.lang3.RandomUtilsTest.testNextDoubleLowerGreaterUpper":268,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testIsNotEmpty":206,"org.apache.commons.lang3.reflect.MethodUtilsTest.testNullArgument":354,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultInitializerNamesModify":24,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJson":123,"org.apache.commons.lang3.event.EventUtilsTest.testBindFilteredEventsToMethod":350,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":276,"org.apache.commons.lang3.CharUtilsTest.testToChar_String":190,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListenerWithNoAddMethod":346,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":119,"org.apache.commons.lang3.StringUtilsTest.testDeleteWhitespace_String":159,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testEndsWithAny":231,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":312,"org.apache.commons.lang3.ArrayUtilsTest.testReverseFloat":369,"org.apache.commons.lang3.CharUtilsTest.testToChar_String_char":191,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeFullyWithDelimiters_String":216,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringCharArray":205,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCodeEx1":41,"org.apache.commons.lang3.StringUtilsTest.testRightPad_StringIntString":180,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementByteArray":43,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":327,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetInitializerUnknown":33,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlHighUnicode":131,"org.apache.commons.lang3.concurrent.CallableBackgroundInitializerTest.testInitNullCallable":9,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":56,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringStringarray":229,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetExceptionUnknown":29,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testDouble":155,"org.apache.commons.lang3.time.DateUtilsTest.testAddMilliseconds":249,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayFloat":140,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testInitializeTempExecutor":22,"org.apache.commons.lang3.ArrayUtilsTest.testHashCode":158,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":287,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":258,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_object_nullInput":368,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":319,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAnyBut_StringCharArray":202,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":295,"org.apache.commons.lang3.text.StrBuilderTest.testSetLength":94,"org.apache.commons.lang3.ClassUtilsTest.test_getPackageName_String":188,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testAddInitializerNullName":27,"org.apache.commons.lang3.time.DateUtilsTest.testTruncateLang59":244,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":315,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeNoChildren":35,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringString":221,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeTempExec":31,"org.apache.commons.lang3.ClassUtilsTest.testGetClassRawPrimitives":81,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringStringarray":228,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":302,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeFully_String":212,"org.apache.commons.lang3.text.WordUtilsTest.testSwapCase_String":217,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":296,"org.apache.commons.lang3.StringUtilsTest.testRemoveStartIgnoreCase":183,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":254,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStrip_String":116,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":106,"org.apache.commons.lang3.StringUtilsIsTest.testIsAlpha":240,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvString":109,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayDouble":146,"org.apache.commons.lang3.ArrayUtilsTest.testContainsBoolean":84,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String":215,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":280,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSizeEndText":272,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayLong":305,"org.apache.commons.lang3.time.DateUtilsTest.testSetSeconds":245,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":297,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":104},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1844","type":"CtBinaryOperatorImpl","sourcecode":"contentEnd == null"},"failures":[0,1,2,3,4],"tindex":"3146e085-2e87-11e6-8876-ef6e5ed58c30","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:455","type":"CtMethodImpl","sourcecode":"public static final java.lang.String escapeJava(final java.lang.String input) {\n    if (input == null) {\n        {\n            return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"contentEnd":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:765","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isBlank(str)"},"failures":[],"tindex":"31477cc6-2e87-11e6-8876-7d6eff175cc1","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:267","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object obj) {\n    if (org.apache.commons.lang3.StringUtils.isBlank(obj)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (obj == (org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeImpl.this)) || ((obj instanceof java.lang.reflect.WildcardType) && (org.apache.commons.lang3.reflect.TypeUtils.equals(org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeImpl.this, ((java.lang.reflect.WildcardType)(obj)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"obj"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.JavaVersion:142","type":"CtInvocationImpl","sourcecode":"\"1.5\".equals(nom)"},"failures":[],"tindex":"3147a3d7-2e87-11e6-8876-db68119a4282","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1317","type":"CtMethodImpl","sourcecode":"protected void appendSummary(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final double[] array) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (\"1.5\".equals(fieldName)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    appendSummarySize(buffer, fieldName, array.int);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nom":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1620","type":"CtBinaryOperatorImpl","sourcecode":"0 == nBools"},"failures":[],"tindex":"3147a3d8-2e87-11e6-8876-d162a985339d","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:353","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.time.FastDateFormat getDateTimeInstance(final int dateStyle, final int timeStyle, final java.util.TimeZone timeZone, final java.util.Locale locale) {\n    if (0 == timeStyle) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getDateTimeInstance(dateStyle, timeStyle, timeZone, locale);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nBools":"timeStyle"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4705","type":"CtBinaryOperatorImpl","sourcecode":"searchLength != replacementLength"},"failures":[],"tindex":"3147cae9-2e87-11e6-8876-9109bea188b6","method":{"position":"org.apache.commons.lang3.text.translate.JavaUnicodeEscaper:49","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.translate.JavaUnicodeEscaper below(final int codepoint) {\n    if (codepoint != codepoint) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.outsideOf(codepoint, java.lang.Integer.java.lang.Integer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"replacementLength":"codepoint","searchLength":"codepoint"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6767","type":"CtBinaryOperatorImpl","sourcecode":"m == 0"},"failures":[5],"tindex":"3147caea-2e87-11e6-8876-9d963a5e0cfd","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:327","type":"CtMethodImpl","sourcecode":"public static int indexOfThrowable(final java.lang.Throwable throwable, final java.lang.Class<?> clazz, final int fromIndex) {\n    if (fromIndex == 0) {\n        {\n            return org.apache.commons.lang3.exception.ExceptionUtils.indexOf(throwable, clazz, fromIndex, false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"m":"fromIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5630","type":"CtBinaryOperatorImpl","sourcecode":"count == null"},"failures":[6],"tindex":"3147f1fb-2e87-11e6-8876-07083a09238d","method":{"position":"org.apache.commons.lang3.mutable.MutableDouble:188","type":"CtMethodImpl","sourcecode":"public void subtract(final java.lang.Number operand) {\n    if (operand == null) {\n        {\n            org.apache.commons.lang3.mutable.MutableDouble.this.double -= operand.doubleValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"operand"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:651","type":"CtBinaryOperatorImpl","sourcecode":"(toClass.isPrimitive()) == false"},"failures":[],"tindex":"3147f1fc-2e87-11e6-8876-0383be93d556","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1589","type":"CtMethodImpl","sourcecode":"protected java.lang.String getShortClassName(final java.lang.Class<?> cls) {\n    if ((cls.isPrimitive()) == false) {\n        {\n            return org.apache.commons.lang3.ClassUtils.getShortClassName(cls);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toClass":"cls"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:623","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[7,8],"tindex":"3148190d-2e87-11e6-8876-ebf30f61cb85","method":{"position":"org.apache.commons.lang3.ArrayUtils:3273","type":"CtMethodImpl","sourcecode":"public static java.lang.Byte[] toObject(final byte[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Byte[];\n            } \n            final java.lang.Byte[] java.lang.Byte[] = new java.lang.Byte[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = java.lang.Byte.valueOf(array[i]);\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:211","type":"CtBinaryOperatorImpl","sourcecode":"service != null"},"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"tindex":"3148190e-2e87-11e6-8876-3d206123df67","method":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:153","type":"CtMethodImpl","sourcecode":"public final synchronized void setExternalExecutor(final java.util.concurrent.ExecutorService externalExecutor) {\n    if (externalExecutor != null) {\n        {\n            if (isStarted()) {\n                throw new java.lang.IllegalStateException(\"Cannot set ExecutorService after start()!\");\n            } \n            org.apache.commons.lang3.concurrent.BackgroundInitializer.this.java.util.concurrent.ExecutorService = externalExecutor;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"service":"externalExecutor"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:939","type":"CtBinaryOperatorImpl","sourcecode":"0 == nHex"},"failures":[41,42],"tindex":"3148401f-2e87-11e6-8876-430b6c3e6a69","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:332","type":"CtMethodImpl","sourcecode":"public static <T>int reflectionHashCode(final int initialNonZeroOddNumber, final int multiplierNonZeroOddNumber, final T object, final boolean testTransients, final java.lang.Class<? super T> reflectUpToClass, final java.lang.String... excludeFields) {\n    if (0 == multiplierNonZeroOddNumber) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == null) {\n                throw new java.lang.IllegalArgumentException(\"The object to build a hash code for must not be null\");\n            } \n            final org.apache.commons.lang3.builder.HashCodeBuilder org.apache.commons.lang3.builder.HashCodeBuilder = new org.apache.commons.lang3.builder.HashCodeBuilder(initialNonZeroOddNumber , multiplierNonZeroOddNumber);\n            java.lang.Class<?> java.lang.Class<?> = object.getClass();\n            org.apache.commons.lang3.builder.HashCodeBuilder.reflectionAppend(object, clazz, builder, testTransients, excludeFields);\n            while (((clazz.getSuperclass()) != null) && (clazz != reflectUpToClass)) {\n                clazz = clazz.getSuperclass();\n                org.apache.commons.lang3.builder.HashCodeBuilder.reflectionAppend(object, clazz, builder, testTransients, excludeFields);\n            }\n            return builder.toHashCode();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nHex":"multiplierNonZeroOddNumber"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3432","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[43],"tindex":"31486730-2e87-11e6-8876-9ba1b29ffef2","method":{"position":"org.apache.commons.lang3.ArrayUtils:4771","type":"CtMethodImpl","sourcecode":"public static byte[] removeElement(final byte[] array, final byte element) {\n    if (array == null) {\n        {\n            final int int = org.apache.commons.lang3.ArrayUtils.indexOf(array, element);\n            if (index == (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int)) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            return org.apache.commons.lang3.ArrayUtils.remove(array, index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.StopWatch:240","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.time.StopWatch.this.runningState) != (org.apache.commons.lang3.time.StopWatch.State.RUNNING)"},"failures":[44,45,46],"tindex":"31488e41-2e87-11e6-8876-0398648aecd9","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:134","type":"CtMethodImpl","sourcecode":"public static int reflectionCompare(final java.lang.Object lhs, final java.lang.Object rhs) {\n    if (lhs != lhs) {\n        {\n            return org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(lhs, rhs, false, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"runningState":"lhs","org.apache.commons.lang3.time.StopWatch.State.RUNNING":"lhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1906","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[],"tindex":"31488e42-2e87-11e6-8876-abc61c81c4a1","method":{"position":"org.apache.commons.lang3.ArrayUtils:2106","type":"CtMethodImpl","sourcecode":"public static int indexOf(final int[] array, final int valueToFind) {\n    if (valueToFind < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"valueToFind"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:1128","type":"CtBinaryOperatorImpl","sourcecode":"(className.length()) > 0"},"failures":[],"tindex":"3148b553-2e87-11e6-8876-5f552b8d2ff3","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:921","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final short[] array) {\n    if ((fieldName.length()) > 0) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, array, null);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"className":"fieldName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:570","type":"CtBinaryOperatorImpl","sourcecode":"delimiters == null"},"failures":[],"tindex":"3148b554-2e87-11e6-8876-9f528258eaf7","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:150","type":"CtMethodImpl","sourcecode":"static boolean isRegistered(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Set<org.apache.commons.lang3.builder.IDKey> java.util.Set<org.apache.commons.lang3.builder.IDKey> = org.apache.commons.lang3.builder.HashCodeBuilder.getRegistry();\n            return (registry != null) && (registry.contains(new org.apache.commons.lang3.builder.IDKey(value)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delimiters":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:833","type":"CtBinaryOperatorImpl","sourcecode":"(str1.length()) != (str2.length())"},"failures":[47],"tindex":"3148dc65-2e87-11e6-8876-dbf7707f0f86","method":{"position":"org.apache.commons.lang3.StringUtils:1963","type":"CtMethodImpl","sourcecode":"public static int indexOfAny(final java.lang.CharSequence str, final java.lang.CharSequence... searchStrs) {\n    if ((str.length()) != (str.length())) {\n        {\n            if ((str == null) || (searchStrs == null)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            final int int = searchStrs.int;\n            int int = java.lang.Integer.java.lang.Integer.int;\n            int int = 0;\n            for (int int = 0 ; i < sz ; i++) {\n                final java.lang.CharSequence java.lang.CharSequence = searchStrs[i];\n                if (search == null) {\n                    continue;\n                } \n                tmp = org.apache.commons.lang3.CharSequenceUtils.indexOf(str, search, 0);\n                if (tmp == (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) {\n                    continue;\n                } \n                if (tmp < ret) {\n                    ret = tmp;\n                } \n            }\n            return ret == (java.lang.Integer.java.lang.Integer.int) ? org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int : ret;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str1":"str","str2":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2293","type":"CtInvocationImpl","sourcecode":"separator.isEmpty()"},"failures":[48],"tindex":"31490376-2e87-11e6-8876-136742281974","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1006","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrSubstitutor setVariablePrefix(final java.lang.String prefix) {\n    if (prefix.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (prefix == null) {\n                throw new java.lang.IllegalArgumentException(\"Variable prefix must not be null!\");\n            } \n            return setVariablePrefixMatcher(org.apache.commons.lang3.text.StrMatcher.stringMatcher(prefix));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"separator":"prefix"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDatePrinter:211","type":"CtBinaryOperatorImpl","sourcecode":"tokenLen == 2"},"failures":[49],"tindex":"31490377-2e87-11e6-8876-ebfe00525304","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:371","type":"CtMethodImpl","sourcecode":"public static int indexOfType(final java.lang.Throwable throwable, final java.lang.Class<?> type, final int fromIndex) {\n    if (fromIndex == 2) {\n        {\n            return org.apache.commons.lang3.exception.ExceptionUtils.indexOf(throwable, type, fromIndex, true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"tokenLen":"fromIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:701","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[],"tindex":"31490378-2e87-11e6-8876-fd4d2d092d59","method":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:263","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.lang3.text.ExtendedMessageFormat.this)) {\n                return true;\n            } \n            if (obj == null) {\n                return false;\n            } \n            if (!(super.equals(obj))) {\n                return false;\n            } \n            if (org.apache.commons.lang3.ObjectUtils.notEqual(getClass(), obj.getClass())) {\n                return false;\n            } \n            final org.apache.commons.lang3.text.ExtendedMessageFormat org.apache.commons.lang3.text.ExtendedMessageFormat = ((org.apache.commons.lang3.text.ExtendedMessageFormat)(obj));\n            if (org.apache.commons.lang3.ObjectUtils.notEqual(java.lang.String, rhs.java.lang.String)) {\n                return false;\n            } \n            if (org.apache.commons.lang3.ObjectUtils.notEqual(java.util.Map<java.lang.String, ? extends org.apache.commons.lang3.text.FormatFactory>, rhs.java.util.Map<java.lang.String, ? extends org.apache.commons.lang3.text.FormatFactory>)) {\n                return false;\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1374","type":"CtBinaryOperatorImpl","sourcecode":"(p.getOwnerType()) == null"},"failures":[],"tindex":"31492a89-2e87-11e6-8876-f95e188a006f","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1558","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.GenericArrayType genericArrayType(final java.lang.reflect.Type componentType) {\n    if ((componentType.getOwnerType()) == null) {\n        {\n            return new org.apache.commons.lang3.reflect.TypeUtils.GenericArrayTypeImpl(org.apache.commons.lang3.Validate.notNull(componentType, \"componentType is null\"));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"componentType"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.JavaVersion:134","type":"CtInvocationImpl","sourcecode":"\"1.1\".equals(nom)"},"failures":[50],"tindex":"31492a8a-2e87-11e6-8876-cdfe5bc1a928","method":{"position":"org.apache.commons.lang3.text.StrMatcher:189","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.StrMatcher charSetMatcher(final java.lang.String chars) {\n    if (\"1.1\".equals(chars)) {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(chars)) {\n                return org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher;\n            } \n            if ((chars.length()) == 1) {\n                return new org.apache.commons.lang3.text.StrMatcher.CharMatcher(chars.charAt(0));\n            } \n            return new org.apache.commons.lang3.text.StrMatcher.CharSetMatcher(chars.toCharArray());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nom":"chars"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:570","type":"CtBinaryOperatorImpl","sourcecode":"delimiters == null"},"failures":[51],"tindex":"3149519b-2e87-11e6-8876-c3be1bdec01c","method":{"position":"org.apache.commons.lang3.ArrayUtils:3791","type":"CtMethodImpl","sourcecode":"public static char[] addAll(final char[] array1, final char... array2) {\n    if (array2 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array1 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array2);\n            } else if (array2 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array1);\n            } \n            final char[] char[] = new char[(array1.int) + (array2.int)];\n            java.lang.System.arraycopy(array1, 0, joinedArray, 0, array1.int);\n            java.lang.System.arraycopy(array2, 0, joinedArray, array1.int, array2.int);\n            return joinedArray;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delimiters":"array2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2100","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[52,53,54,55,7,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"tindex":"3149519c-2e87-11e6-8876-c524e6075a80","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:589","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final int[] lhs, final int[] rhs) {\n    if (fieldName == null) {\n        {\n            if (fieldName == null) {\n                throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n            } \n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if (!(java.util.Arrays.equals(lhs, rhs))) {\n                java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Integer[]>(fieldName) {\n                    private static final long serialVersionUID = 1L;\n\n                    @java.lang.Override\n                    public java.lang.Integer[] getLeft() {\n                        return org.apache.commons.lang3.ArrayUtils.toObject(lhs);\n                    }\n\n                    @java.lang.Override\n                    public java.lang.Integer[] getRight() {\n                        return org.apache.commons.lang3.ArrayUtils.toObject(rhs);\n                    }\n                });\n            } \n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2076","type":"CtBinaryOperatorImpl","sourcecode":"start > (str.length())"},"failures":[73,74],"tindex":"314978ad-2e87-11e6-8876-0717fbc390bb","method":{"position":"org.apache.commons.lang3.StringUtils:4684","type":"CtMethodImpl","sourcecode":"private static java.lang.String replaceEach(final java.lang.String text, final java.lang.String[] searchList, final java.lang.String[] replacementList, final boolean repeat, final int timeToLive) {\n    if (timeToLive > (text.length())) {\n        {\n            if ((((((text == null) || (text.isEmpty())) || (searchList == null)) || ((searchList.int) == 0)) || (replacementList == null)) || ((replacementList.int) == 0)) {\n                return text;\n            } \n            if (timeToLive < 0) {\n                throw new java.lang.IllegalStateException((\"Aborting to protect against StackOverflowError - \" + \"output of one loop is the input of another\"));\n            } \n            final int int = searchList.int;\n            final int int = replacementList.int;\n            if (searchLength != replacementLength) {\n                throw new java.lang.IllegalArgumentException((((\"Search and Replace array lengths don't match: \" + searchLength) + \" vs \") + replacementLength));\n            } \n            final boolean[] boolean[] = new boolean[searchLength];\n            int int = -1;\n            int int = -1;\n            int int = -1;\n            for (int int = 0 ; i < searchLength ; i++) {\n                if ((((noMoreMatchesForReplIndex[i]) || ((searchList[i]) == null)) || (searchList[i].isEmpty())) || ((replacementList[i]) == null)) {\n                    continue;\n                } \n                tempIndex = text.indexOf(searchList[i]);\n                if (tempIndex == (-1)) {\n                    noMoreMatchesForReplIndex[i] = true;\n                } else {\n                    if ((textIndex == (-1)) || (tempIndex < textIndex)) {\n                        textIndex = tempIndex;\n                        replaceIndex = i;\n                    } \n                }\n            }\n            if (textIndex == (-1)) {\n                return text;\n            } \n            int int = 0;\n            int int = 0;\n            for (int int = 0 ; i < (searchList.int) ; i++) {\n                if (((searchList[i]) == null) || ((replacementList[i]) == null)) {\n                    continue;\n                } \n                final int int = (replacementList[i].length()) - (searchList[i].length());\n                if (greater > 0) {\n                    increase += 3 * greater;\n                } \n            }\n            increase = java.lang.Math.min(increase, ((text.length()) / 5));\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(((text.length()) + increase));\n            while (textIndex != (-1)) {\n                for (int int = start ; i < textIndex ; i++) {\n                    buf.append(text.charAt(i));\n                }\n                buf.append(replacementList[replaceIndex]);\n                start = textIndex + (searchList[replaceIndex].length());\n                textIndex = -1;\n                replaceIndex = -1;\n                tempIndex = -1;\n                for (int int = 0 ; i < searchLength ; i++) {\n                    if ((((noMoreMatchesForReplIndex[i]) || ((searchList[i]) == null)) || (searchList[i].isEmpty())) || ((replacementList[i]) == null)) {\n                        continue;\n                    } \n                    tempIndex = text.indexOf(searchList[i], start);\n                    if (tempIndex == (-1)) {\n                        noMoreMatchesForReplIndex[i] = true;\n                    } else {\n                        if ((textIndex == (-1)) || (tempIndex < textIndex)) {\n                            textIndex = tempIndex;\n                            replaceIndex = i;\n                        } \n                    }\n                }\n            }\n            final int int = text.length();\n            for (int int = start ; i < textLength ; i++) {\n                buf.append(text.charAt(i));\n            }\n            final java.lang.String java.lang.String = buf.toString();\n            if (!repeat) {\n                return result;\n            } \n            return org.apache.commons.lang3.StringUtils.replaceEach(result, searchList, replacementList, repeat, (timeToLive - 1));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"text","start":"timeToLive"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.ClassNotFoundException","condition":{"position":"org.apache.commons.lang3.StringUtils:5553","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(padStr)"},"failures":[75,76,77,78,79,80,81],"tindex":"31499fbe-2e87-11e6-8876-6fd5cadae6f4","method":{"position":"org.apache.commons.lang3.ClassUtils:820","type":"CtMethodImpl","sourcecode":"public static java.lang.Class<?> getClass(final java.lang.ClassLoader classLoader, final java.lang.String className, final boolean initialize) throws java.lang.ClassNotFoundException {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(className)) {\n        {\n            try {\n                java.lang.Class<?> java.lang.Class<?>;\n                if (org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.String, java.lang.String>.containsKey(className)) {\n                    final java.lang.String java.lang.String = \"[\" + (org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.String, java.lang.String>.get(className));\n                    clazz = java.lang.Class.forName(clsName, initialize, classLoader).getComponentType();\n                } else {\n                    clazz = java.lang.Class.forName(org.apache.commons.lang3.ClassUtils.toCanonicalName(className), initialize, classLoader);\n                }\n                return clazz;\n            } catch (final java.lang.ClassNotFoundException ex) {\n                final int int = className.lastIndexOf(org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.char);\n                if (lastDotIndex != (-1)) {\n                    try {\n                        return org.apache.commons.lang3.ClassUtils.getClass(classLoader, (((className.substring(0, lastDotIndex)) + (org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.char)) + (className.substring((lastDotIndex + 1)))), initialize);\n                    } catch (final java.lang.ClassNotFoundException ex2) {\n                    }\n                } \n                throw ex;\n            }\n        }\n    } else {\n        throw new java.lang.ClassNotFoundException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"padStr":"className"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1099","type":"CtBinaryOperatorImpl","sourcecode":"b < a"},"failures":[82],"tindex":"3149c6cf-2e87-11e6-8876-a317007b2b31","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2894","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic long skip(long n) {\n    if (n < n) {\n        {\n            if (((int) + n) > (org.apache.commons.lang3.text.StrBuilder.this.size())) {\n                n = (org.apache.commons.lang3.text.StrBuilder.this.size()) - (int);\n            } \n            if (n < 0) {\n                return 0;\n            } \n            int += n;\n            return n;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"n","b":"n"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:388","type":"CtBinaryOperatorImpl","sourcecode":"(java.lang.Double.doubleToLongBits(lhs)) != (java.lang.Double.doubleToLongBits(rhs))"},"failures":[],"tindex":"3149c6d0-2e87-11e6-8876-cd103cd010c2","method":{"position":"org.apache.commons.lang3.ArrayUtils:2540","type":"CtMethodImpl","sourcecode":"public static int indexOf(final double[] array, final double valueToFind, final double tolerance) {\n    if ((java.lang.Double.doubleToLongBits(tolerance)) != (java.lang.Double.doubleToLongBits(tolerance))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0, tolerance);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"tolerance","rhs":"tolerance"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:214","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[83],"tindex":"3149c6d1-2e87-11e6-8876-d5ea49acbcc2","method":{"position":"org.apache.commons.lang3.ArrayUtils:1935","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final java.lang.Object[] array, final java.lang.Object objectToFind) {\n    if (objectToFind == null) {\n        {\n            return org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, objectToFind, java.lang.Integer.java.lang.Integer.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"objectToFind"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:588","type":"CtBinaryOperatorImpl","sourcecode":"(isEquals) == false"},"failures":[84],"tindex":"3149c6d2-2e87-11e6-8876-57a8c1d6cc90","method":{"position":"org.apache.commons.lang3.ArrayUtils:2939","type":"CtMethodImpl","sourcecode":"public static boolean contains(final boolean[] array, final boolean valueToFind) {\n    if (valueToFind == false) {\n        {\n            return (org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind)) != (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isEquals":"valueToFind"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1886","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isHighSurrogate(ch)"},"failures":[],"tindex":"3149ede3-2e87-11e6-8876-03bab43c5565","method":{"position":"org.apache.commons.lang3.Conversion:80","type":"CtMethodImpl","sourcecode":"public static int hexDigitToInt(final char hexDigit) {\n    if (java.lang.Character.isHighSurrogate(hexDigit)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = java.lang.Character.digit(hexDigit, 16);\n            if (digit < 0) {\n                throw new java.lang.IllegalArgumentException(((\"Cannot interpret '\" + hexDigit) + \"' as a hexadecimal digit\"));\n            } \n            return digit;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"hexDigit"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:800","type":"CtFieldReadImpl","sourcecode":"objectsTriviallyEqual"},"failures":[85,86,87,88,89,90,91],"tindex":"3149ede4-2e87-11e6-8876-7b1091eeaeee","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1099","type":"CtMethodImpl","sourcecode":"static java.lang.String getTimeZoneDisplay(final java.util.TimeZone tz, final boolean daylight, final int style, final java.util.Locale locale) {\n    if (daylight) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey = new org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey(tz , daylight , style , locale);\n            java.lang.String java.lang.String = org.apache.commons.lang3.time.FastDatePrinter.org.apache.commons.lang3.time.FastDatePrinter.java.util.concurrent.ConcurrentMap<org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey, java.lang.String>.get(key);\n            if (value == null) {\n                value = tz.getDisplayName(daylight, style, locale);\n                final java.lang.String java.lang.String = org.apache.commons.lang3.time.FastDatePrinter.org.apache.commons.lang3.time.FastDatePrinter.java.util.concurrent.ConcurrentMap<org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey, java.lang.String>.putIfAbsent(key, value);\n                if (prior != null) {\n                    value = prior;\n                } \n            } \n            return value;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsTriviallyEqual":"daylight"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomUtils:142","type":"CtBinaryOperatorImpl","sourcecode":"startInclusive == endInclusive"},"failures":[],"tindex":"314a14f5-2e87-11e6-8876-b1bf92677100","method":{"position":"org.apache.commons.lang3.ObjectUtils:934","type":"CtMethodImpl","sourcecode":"public static double CONST(final double v) {\n    if (v == v) {\n        {\n            return v;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startInclusive":"v","endInclusive":"v"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2171","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[92,93,94,95],"tindex":"314a14f6-2e87-11e6-8876-793075aa3ea6","method":{"position":"org.apache.commons.lang3.text.StrBuilder:199","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder setLength(final int length) {\n    if (length < 0) {\n        {\n            if (length < 0) {\n                throw new java.lang.StringIndexOutOfBoundsException(length);\n            } \n            if (length < (int)) {\n                int = length;\n            } else if (length > (int)) {\n                ensureCapacity(length);\n                final int int = int;\n                final int int = length;\n                int = length;\n                for (int int = oldEnd ; i < newEnd ; i++) {\n                    char[][i] = '\u0000';\n                }\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"length"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:651","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[],"tindex":"314a14f7-2e87-11e6-8876-57443b227998","method":{"position":"org.apache.commons.lang3.AnnotationUtils:242","type":"CtMethodImpl","sourcecode":"private static int hashMember(final java.lang.String name, final java.lang.Object value) {\n    if (value == value) {\n        {\n            final int int = (name.hashCode()) * 127;\n            if (value.getClass().isArray()) {\n                return part1 ^ (org.apache.commons.lang3.AnnotationUtils.arrayMemberHash(value.getClass().getComponentType(), value));\n            } \n            if (value instanceof java.lang.annotation.Annotation) {\n                return part1 ^ (org.apache.commons.lang3.AnnotationUtils.hashCode(((java.lang.annotation.Annotation)(value))));\n            } \n            return part1 ^ (value.hashCode());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"value","rhs":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:623","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[96,97,98,99,100,101,102,103,104,105,106,107,108],"tindex":"314a3c08-2e87-11e6-8876-0594da2a1ffd","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:652","type":"CtMethodImpl","sourcecode":"public boolean replaceIn(java.lang.StringBuilder source) {\n    if (source == null) {\n        {\n            if (source == null) {\n                return false;\n            } \n            return replaceIn(source, 0, source.length());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"source"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1247","type":"CtBinaryOperatorImpl","sourcecode":"str != null"},"failures":[109],"tindex":"314a3c09-2e87-11e6-8876-65bde4729cb9","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:801","type":"CtMethodImpl","sourcecode":"public static final java.lang.String unescapeCsv(final java.lang.String input) {\n    if (input != null) {\n        {\n            return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.AggregateTranslator:53","type":"CtBinaryOperatorImpl","sourcecode":"consumed != 0"},"failures":[],"tindex":"314a3c0a-2e87-11e6-8876-0154e9f71aa2","method":{"position":"org.apache.commons.lang3.CharUtils:285","type":"CtMethodImpl","sourcecode":"public static int toIntValue(final java.lang.Character ch, final int defaultValue) {\n    if (defaultValue != 0) {\n        {\n            if (ch == null) {\n                return defaultValue;\n            } \n            return org.apache.commons.lang3.CharUtils.toIntValue(ch.charValue(), defaultValue);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"consumed":"defaultValue"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:137","type":"CtInvocationImpl","sourcecode":"java.lang.Float.isNaN(a)"},"failures":[110,111],"tindex":"314a631b-2e87-11e6-8876-2957283ad356","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1296","type":"CtMethodImpl","sourcecode":"public static float max(final float a, final float b, final float c) {\n    if (java.lang.Float.isNaN(b)) {\n        {\n            return java.lang.Math.max(java.lang.Math.max(a, b), c);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:671","type":"CtInvocationImpl","sourcecode":"str.equals(nullString)"},"failures":[112,113],"tindex":"314a631c-2e87-11e6-8876-e7bebb5542ac","method":{"position":"org.apache.commons.lang3.StringUtils:7296","type":"CtMethodImpl","sourcecode":"public static boolean endsWithIgnoreCase(final java.lang.CharSequence str, final java.lang.CharSequence suffix) {\n    if (str.equals(suffix)) {\n        {\n            return org.apache.commons.lang3.StringUtils.endsWith(str, suffix, true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str","nullString":"suffix"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:1121","type":"CtInvocationImpl","sourcecode":"className.startsWith(\"L\")"},"failures":[114,115,116],"tindex":"314a631d-2e87-11e6-8876-2fb9ce43bb8f","method":{"position":"org.apache.commons.lang3.StringUtils:584","type":"CtMethodImpl","sourcecode":"public static java.lang.String strip(java.lang.String str, final java.lang.String stripChars) {\n    if (str.startsWith(\"L\")) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n                return str;\n            } \n            str = org.apache.commons.lang3.StringUtils.stripStart(str, stripChars);\n            return org.apache.commons.lang3.StringUtils.stripEnd(str, stripChars);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"className":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.StringUtils:5299","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[117,118,0,119,1,120,121,122,2,123,3,124,125,126,127,128,129,4,130,131,132,133,134,135,136,137,138],"tindex":"314a631e-2e87-11e6-8876-c7a1d60683fb","method":{"position":"org.apache.commons.lang3.text.translate.AggregateTranslator:50","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int translate(final java.lang.CharSequence input, final int index, final java.io.Writer out) throws java.io.IOException {\n    if (input == null) {\n        {\n            for (final org.apache.commons.lang3.text.translate.CharSequenceTranslator org.apache.commons.lang3.text.translate.CharSequenceTranslator : org.apache.commons.lang3.text.translate.CharSequenceTranslator[]) {\n                final int int = translator.translate(input, index, out);\n                if (consumed != 0) {\n                    return consumed;\n                } \n            }\n            return 0;\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5271","type":"CtBinaryOperatorImpl","sourcecode":"count == null"},"failures":[139,140,141,142,143,144,145,146,147],"tindex":"314a8a2f-2e87-11e6-8876-f7642c25361d","method":{"position":"org.apache.commons.lang3.ArrayUtils:4247","type":"CtMethodImpl","sourcecode":"private static java.lang.Object copyArrayGrow1(final java.lang.Object array, final java.lang.Class<?> newArrayComponentType) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array != null) {\n                final int int = java.lang.reflect.Array.getLength(array);\n                final java.lang.Object java.lang.Object = java.lang.reflect.Array.newInstance(array.getClass().getComponentType(), (arrayLength + 1));\n                java.lang.System.arraycopy(array, 0, newArray, 0, arrayLength);\n                return newArray;\n            } \n            return java.lang.reflect.Array.newInstance(newArrayComponentType, 1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1520","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[148],"tindex":"314a8a30-2e87-11e6-8876-71cd190991a2","method":{"position":"org.apache.commons.lang3.ArrayUtils:3341","type":"CtMethodImpl","sourcecode":"public static java.lang.Double[] toObject(final double[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Double[];\n            } \n            final java.lang.Double[] java.lang.Double[] = new java.lang.Double[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = java.lang.Double.valueOf(array[i]);\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDatePrinter:383","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Calendar"},"failures":[],"tindex":"314a8a31-2e87-11e6-8876-b5e25deea8fd","method":{"position":"org.apache.commons.lang3.time.FastDateParser:221","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.util.Calendar) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(obj instanceof org.apache.commons.lang3.time.FastDateParser)) {\n                return false;\n            } \n            final org.apache.commons.lang3.time.FastDateParser org.apache.commons.lang3.time.FastDateParser = ((org.apache.commons.lang3.time.FastDateParser)(obj));\n            return ((java.lang.String.equals(other.java.lang.String)) && (java.util.TimeZone.equals(other.java.util.TimeZone))) && (java.util.Locale.equals(other.java.util.Locale));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5445","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))"},"failures":[149,150],"tindex":"314ab142-2e87-11e6-8876-03ae7fa27798","method":{"position":"org.apache.commons.lang3.math.NumberUtils:982","type":"CtMethodImpl","sourcecode":"public static short max(final short[] array) {\n    if ((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(array))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.math.NumberUtils.validateArray(array);\n            short short = array[0];\n            for (int int = 1 ; i < (array.int) ; i++) {\n                if ((array[i]) > max) {\n                    max = array[i];\n                } \n            }\n            return max;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array","values":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2958","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[151],"tindex":"314ab143-2e87-11e6-8876-3399b117d3bf","method":{"position":"org.apache.commons.lang3.ArrayUtils:2957","type":"CtMethodImpl","sourcecode":"public static char[] toPrimitive(final java.lang.Character[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.char[];\n            } \n            final char[] char[] = new char[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = array[i].charValue();\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:945","type":"CtBinaryOperatorImpl","sourcecode":"(value < start) || (value > end)"},"failures":[152,153,154,155,156,157,158],"tindex":"314ad854-2e87-11e6-8876-6777ffb54fca","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:781","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final long value) {\n    if ((value < value) || (value > value)) {\n        {\n            int = ((int) * (int)) + ((int)((value ^ (value >> 32))));\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"value","end":"value","value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5588","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"314ad855-2e87-11e6-8876-e99c95933ecb","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1317","type":"CtMethodImpl","sourcecode":"protected void appendSummary(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final double[] array) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (\"1.5\".equals(fieldName)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    appendSummarySize(buffer, fieldName, array.int);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSequenceUtils:189","type":"CtBinaryOperatorImpl","sourcecode":"(cs instanceof java.lang.String) && (substring instanceof java.lang.String)"},"failures":[159,160,161,162,163,164,165,166,167,112,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,114,206,115,207,208,116,209,210,211,212,213,214,215,216,217,218,50,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240],"tindex":"314ad856-2e87-11e6-8876-5f5a503f0507","method":{"position":"org.apache.commons.lang3.StringUtils:218","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final java.lang.CharSequence cs) {\n    if ((cs instanceof java.lang.String) && (cs instanceof java.lang.String)) {\n        {\n            return (cs == null) || ((cs.length()) == 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"cs","substring":"cs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3821","type":"CtBinaryOperatorImpl","sourcecode":"array1 == null"},"failures":[241],"tindex":"314aff67-2e87-11e6-8876-d5705d4612bd","method":{"position":"org.apache.commons.lang3.ArrayUtils:1505","type":"CtMethodImpl","sourcecode":"public static void reverse(final byte[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return ;\n            } \n            org.apache.commons.lang3.ArrayUtils.reverse(array, 0, array.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array1":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6771","type":"CtBinaryOperatorImpl","sourcecode":"n > m"},"failures":[242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262],"tindex":"314aff68-2e87-11e6-8876-2be07a0b6df2","method":{"position":"org.apache.commons.lang3.time.DateUtils:700","type":"CtMethodImpl","sourcecode":"public static java.util.Date round(final java.util.Date date, final int field) {\n    if (field > field) {\n        {\n            if (date == null) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            final java.util.Calendar java.util.Calendar = java.util.Calendar.getInstance();\n            gval.setTime(date);\n            org.apache.commons.lang3.time.DateUtils.modify(gval, field, org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.int);\n            return gval.getTime();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"m":"field","n":"field"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomStringUtils:234","type":"CtBinaryOperatorImpl","sourcecode":"(start == 0) && (end == 0)"},"failures":[263],"tindex":"314aff69-2e87-11e6-8876-41e55b9207de","method":{"position":"org.apache.commons.lang3.StringUtils:2173","type":"CtMethodImpl","sourcecode":"public static java.lang.String left(final java.lang.String str, final int len) {\n    if ((len == 0) && (len == 0)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return null;\n            } \n            if (len < 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            if ((str.length()) <= len) {\n                return str;\n            } \n            return str.substring(0, len);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"len","end":"len"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:106","type":"CtInvocationImpl","sourcecode":"java.lang.Double.isNaN(b)"},"failures":[264,265,266,267,268,269,270],"tindex":"314aff6a-2e87-11e6-8876-a96503c991b6","method":{"position":"org.apache.commons.lang3.RandomUtils:137","type":"CtMethodImpl","sourcecode":"public static double nextDouble(double startInclusive, double endInclusive) {\n    if (java.lang.Double.isNaN(startInclusive)) {\n        {\n            org.apache.commons.lang3.Validate.isTrue((endInclusive >= startInclusive), \"Start value must be smaller or equal to end value.\");\n            org.apache.commons.lang3.Validate.isTrue((startInclusive >= 0), \"Both range values must be non-negative.\");\n            if (startInclusive == endInclusive) {\n                return startInclusive;\n            } \n            return startInclusive + ((endInclusive - startInclusive) * (org.apache.commons.lang3.RandomUtils.org.apache.commons.lang3.RandomUtils.java.util.Random.nextDouble()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"startInclusive"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2065","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[271],"tindex":"314b267b-2e87-11e6-8876-a37f7959dfdc","method":{"position":"org.apache.commons.lang3.ArrayUtils:1245","type":"CtMethodImpl","sourcecode":"public static boolean isSameLength(final long[] array1, final long[] array2) {\n    if (array2 == null) {\n        {\n            if (((((array1 == null) && (array2 != null)) && ((array2.int) > 0)) || (((array2 == null) && (array1 != null)) && ((array1.int) > 0))) || (((array1 != null) && (array2 != null)) && ((array1.int) != (array2.int)))) {\n                return false;\n            } \n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:1121","type":"CtInvocationImpl","sourcecode":"className.startsWith(\"L\")"},"failures":[272],"tindex":"314b267c-2e87-11e6-8876-2560692af520","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2033","type":"CtMethodImpl","sourcecode":"protected void setSizeEndText(java.lang.String sizeEndText) {\n    if (sizeEndText.startsWith(\"L\")) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (sizeEndText == null) {\n                sizeEndText = \"\";\n            } \n            org.apache.commons.lang3.builder.ToStringStyle.this.java.lang.String = sizeEndText;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"className":"sizeEndText"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:622","type":"CtBinaryOperatorImpl","sourcecode":"stripChars == null"},"failures":[273,274,275,276,277,277,278,279,280,281,282,282,283,284,285,286,287,288,289,290,291,291,292,293,294,295,296,297,298,299,300,301,302],"tindex":"314b267d-2e87-11e6-8876-2d6c880156eb","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:898","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final java.lang.Object[] array) {\n    if (fieldName == null) {\n        {\n            buffer.append(java.lang.String);\n            for (int int = 0 ; i < (array.int) ; i++) {\n                final java.lang.Object java.lang.Object = array[i];\n                if (i > 0) {\n                    buffer.append(java.lang.String);\n                } \n                if (item == null) {\n                    appendNullText(buffer, fieldName);\n                } else {\n                    appendInternal(buffer, fieldName, item, boolean);\n                }\n            }\n            buffer.append(java.lang.String);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"stripChars":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1689","type":"CtBinaryOperatorImpl","sourcecode":"len > 0"},"failures":[303,304],"tindex":"314b4d8e-2e87-11e6-8876-79d1a206a2b3","method":{"position":"org.apache.commons.lang3.ArrayUtils:2270","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final short[] array, final short valueToFind, int startIndex) {\n    if (startIndex > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } else if (startIndex >= (array.int)) {\n                startIndex = (array.int) - 1;\n            } \n            for (int int = startIndex ; i >= 0 ; i--) {\n                if (valueToFind == (array[i])) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"startIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:578","type":"CtBinaryOperatorImpl","sourcecode":"(u == 0) || (v == 0)"},"failures":[305],"tindex":"314b4d8f-2e87-11e6-8876-d30a6dbd4687","method":{"position":"org.apache.commons.lang3.ArrayUtils:914","type":"CtMethodImpl","sourcecode":"public static long[] subarray(final long[] array, int startIndexInclusive, int endIndexExclusive) {\n    if ((startIndexInclusive == 0) || (startIndexInclusive == 0)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            if (startIndexInclusive < 0) {\n                startIndexInclusive = 0;\n            } \n            if (endIndexExclusive > (array.int)) {\n                endIndexExclusive = array.int;\n            } \n            final int int = endIndexExclusive - startIndexInclusive;\n            if (newSize <= 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.long[];\n            } \n            final long[] long[] = new long[newSize];\n            java.lang.System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);\n            return subarray;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"u":"startIndexInclusive","v":"startIndexInclusive"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4900","type":"CtVariableReadImpl","sourcecode":"modified"},"failures":[],"tindex":"314b4d90-2e87-11e6-8876-653b587d9f2b","method":{"position":"org.apache.commons.lang3.ArrayUtils:4706","type":"CtMethodImpl","sourcecode":"public static boolean[] removeElement(final boolean[] array, final boolean element) {\n    if (element) {\n        {\n            final int int = org.apache.commons.lang3.ArrayUtils.indexOf(array, element);\n            if (index == (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int)) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            return org.apache.commons.lang3.ArrayUtils.remove(array, index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"modified":"element"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3400","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[306,307],"tindex":"314b74a1-2e87-11e6-8876-3bc2b05d1d6d","method":{"position":"org.apache.commons.lang3.ArrayUtils:572","type":"CtMethodImpl","sourcecode":"public static short[] nullToEmpty(final short[] array) {\n    if (array == null) {\n        {\n            if ((array == null) || ((array.int) == 0)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.short[];\n            } \n            return array;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1102","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[308],"tindex":"314b74a2-2e87-11e6-8876-f5b43b1b373c","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1948","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder replaceFirst(final org.apache.commons.lang3.text.StrMatcher matcher, final java.lang.String replaceStr) {\n    if (replaceStr == null) {\n        {\n            return replace(matcher, replaceStr, 0, int, 1);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"replaceStr"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSetUtils:206","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.CharSetUtils.deepEmpty(set))"},"failures":[],"tindex":"314b74a3-2e87-11e6-8876-0fccf5c4c4d3","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:562","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(obj)) || (org.apache.commons.lang3.CharSetUtils.deepEmpty(obj))) {\n        {\n            if ((obj instanceof org.apache.commons.lang3.time.FastDateFormat) == false) {\n                return false;\n            } \n            final org.apache.commons.lang3.time.FastDateFormat org.apache.commons.lang3.time.FastDateFormat = ((org.apache.commons.lang3.time.FastDateFormat)(obj));\n            return org.apache.commons.lang3.time.FastDatePrinter.equals(other.org.apache.commons.lang3.time.FastDatePrinter);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"obj","set":"obj"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6949","type":"CtBinaryOperatorImpl","sourcecode":"min > 1"},"failures":[309,310,311],"tindex":"314b9bb4-2e87-11e6-8876-c346fecb5d1c","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1385","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendFixedWidthPadLeft(final java.lang.Object obj, final int width, final char padChar) {\n    if (width > 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (width > 0) {\n                ensureCapacity(((int) + width));\n                java.lang.String java.lang.String = obj == null ? getNullText() : obj.toString();\n                if (str == null) {\n                    str = \"\";\n                } \n                final int int = str.length();\n                if (strLen >= width) {\n                    str.getChars((strLen - width), strLen, char[], int);\n                } else {\n                    final int int = width - strLen;\n                    for (int int = 0 ; i < padLen ; i++) {\n                        char[][((int) + i)] = padChar;\n                    }\n                    str.getChars(0, strLen, char[], ((int) + padLen));\n                }\n                int += width;\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"min":"width"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:130","type":"CtBinaryOperatorImpl","sourcecode":"ch == null"},"failures":[312,279,280,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,282,284,288,290,293,294,296,297,299],"tindex":"314b9bb5-2e87-11e6-8876-e772a4257f78","method":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:117","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(final java.lang.Object object) {\n    if (object == null) {\n        {\n            return org.apache.commons.lang3.builder.ReflectionToStringBuilder.toString(object, null, false, false, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1630","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isHighSurrogate(ch)"},"failures":[],"tindex":"314b9bb6-2e87-11e6-8876-719072f63067","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1016","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendln(final char ch) {\n    if (java.lang.Character.isHighSurrogate(ch)) {\n        {\n            return append(ch).appendNewLine();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2766","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.ArrayUtils.isEmpty(array)"},"failures":[331],"tindex":"314bc2c7-2e87-11e6-8876-d37c7326a004","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:927","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final float[] lhs, final float[] rhs) {\n    if (org.apache.commons.lang3.ArrayUtils.isEmpty(lhs)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == null) {\n                int = -1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (rhs == null) {\n                int = +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                int = (lhs.int) < (rhs.int) ? -1 : +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && ((int) == 0) ; i++) {\n                append(lhs[i], rhs[i]);\n            }\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"lhs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:764","type":"CtBinaryOperatorImpl","sourcecode":"(((nShorts - 1) * 16) + dstPos) >= 32"},"failures":[332,333],"tindex":"314bc2c8-2e87-11e6-8876-cdd491fd6576","method":{"position":"org.apache.commons.lang3.StringUtils:1371","type":"CtMethodImpl","sourcecode":"public static int lastIndexOfIgnoreCase(final java.lang.CharSequence str, final java.lang.CharSequence searchStr, int startPos) {\n    if ((((startPos - 1) * 16) + startPos) >= 32) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((str == null) || (searchStr == null)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            if (startPos > ((str.length()) - (searchStr.length()))) {\n                startPos = (str.length()) - (searchStr.length());\n            } \n            if (startPos < 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            if ((searchStr.length()) == 0) {\n                return startPos;\n            } \n            for (int int = startPos ; i >= 0 ; i--) {\n                if (org.apache.commons.lang3.CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, searchStr.length())) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dstPos":"startPos","nShorts":"startPos"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:851","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[],"tindex":"314be9d9-2e87-11e6-8876-710fd9f6e7e6","method":{"position":"org.apache.commons.lang3.math.NumberUtils:857","type":"CtMethodImpl","sourcecode":"public static byte min(final byte[] array) {\n    if (array == array) {\n        {\n            org.apache.commons.lang3.math.NumberUtils.validateArray(array);\n            byte byte = array[0];\n            for (int int = 1 ; i < (array.int) ; i++) {\n                if ((array[i]) < min) {\n                    min = array[i];\n                } \n            }\n            return min;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array","rhs":"array"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1259","type":"CtBinaryOperatorImpl","sourcecode":"b > a"},"failures":[334],"tindex":"314be9da-2e87-11e6-8876-ab89e35b44ef","method":{"position":"org.apache.commons.lang3.ObjectUtils:765","type":"CtMethodImpl","sourcecode":"public static byte CONST(final byte v) {\n    if (v > v) {\n        {\n            return v;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"v","b":"v"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:435","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[335],"tindex":"314be9db-2e87-11e6-8876-fbf80859adcd","method":{"position":"org.apache.commons.lang3.ArrayUtils:1353","type":"CtMethodImpl","sourcecode":"public static boolean isSameLength(final float[] array1, final float[] array2) {\n    if (array1 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((((array1 == null) && (array2 != null)) && ((array2.int) > 0)) || (((array2 == null) && (array1 != null)) && ((array1.int) > 0))) || (((array1 != null) && (array2 != null)) && ((array1.int) != (array2.int)))) {\n                return false;\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharEncoding:95","type":"CtBinaryOperatorImpl","sourcecode":"name == null"},"failures":[336,167,337,338],"tindex":"314be9dc-2e87-11e6-8876-d7f444f51d12","method":{"position":"org.apache.commons.lang3.StringUtils:5119","type":"CtMethodImpl","sourcecode":"public static java.lang.String repeat(final java.lang.String str, final int repeat) {\n    if (str == null) {\n        {\n            if (str == null) {\n                return null;\n            } \n            if (repeat <= 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final int int = str.length();\n            if ((repeat == 1) || (inputLength == 0)) {\n                return str;\n            } \n            if ((inputLength == 1) && (repeat <= (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int))) {\n                return org.apache.commons.lang3.StringUtils.repeat(str.charAt(0), repeat);\n            } \n            final int int = inputLength * repeat;\n            switch (inputLength) {\n                case 1 :\n                    return org.apache.commons.lang3.StringUtils.repeat(str.charAt(0), repeat);\n                case 2 :\n                    final char char = str.charAt(0);\n                    final char char = str.charAt(1);\n                    final char[] char[] = new char[outputLength];\n                    for (int int = (repeat * 2) - 2 ; i >= 0 ; i-- , i--) {\n                        output2[i] = ch0;\n                        output2[(i + 1)] = ch1;\n                    }\n                    return new java.lang.String(output2);\n                default :\n                    final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(outputLength);\n                    for (int int = 0 ; i < repeat ; i++) {\n                        buf.append(str);\n                    }\n                    return buf.toString();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:829","type":"CtBinaryOperatorImpl","sourcecode":"(str1 == null) || (str2 == null)"},"failures":[339,340,341,342,343,344,345],"tindex":"314c10ed-2e87-11e6-8876-d5929ec7ab8b","method":{"position":"org.apache.commons.lang3.StringUtils:6135","type":"CtMethodImpl","sourcecode":"public static boolean isAllLowerCase(final java.lang.CharSequence cs) {\n    if ((cs == null) || (cs == null)) {\n        {\n            if ((cs == null) || (org.apache.commons.lang3.StringUtils.isEmpty(cs))) {\n                return false;\n            } \n            final int int = cs.length();\n            for (int int = 0 ; i < sz ; i++) {\n                if ((java.lang.Character.isLowerCase(cs.charAt(i))) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str1":"cs","str2":"cs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6505","type":"CtBinaryOperatorImpl","sourcecode":"str2 == null"},"failures":[346,347,348,349,350,351,352,353,354,355,356,357],"tindex":"314c10ee-2e87-11e6-8876-07c92fd7bc27","method":{"position":"org.apache.commons.lang3.reflect.MethodUtils:474","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Method getMatchingAccessibleMethod(final java.lang.Class<?> cls, final java.lang.String methodName, final java.lang.Class<?>... parameterTypes) {\n    if (methodName == null) {\n        {\n            try {\n                final java.lang.reflect.Method java.lang.reflect.Method = cls.getMethod(methodName, parameterTypes);\n                org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(method);\n                return method;\n            } catch (final java.lang.NoSuchMethodException e) {\n            }\n            java.lang.reflect.Method java.lang.reflect.Method = null;\n            final java.lang.reflect.Method[] java.lang.reflect.Method[] = cls.getMethods();\n            for (final java.lang.reflect.Method java.lang.reflect.Method : methods) {\n                if ((method.getName().equals(methodName)) && (org.apache.commons.lang3.ClassUtils.isAssignable(parameterTypes, method.getParameterTypes(), true))) {\n                    final java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethod(method);\n                    if ((accessibleMethod != null) && ((bestMatch == null) || ((org.apache.commons.lang3.reflect.MemberUtils.compareParameterTypes(accessibleMethod.getParameterTypes(), bestMatch.getParameterTypes(), parameterTypes)) < 0))) {\n                        bestMatch = accessibleMethod;\n                    } \n                } \n            }\n            if (bestMatch != null) {\n                org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(bestMatch);\n            } \n            return bestMatch;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str2":"methodName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharRange:69","type":"CtBinaryOperatorImpl","sourcecode":"start > end"},"failures":[],"tindex":"314c37ff-2e87-11e6-8876-15be59843f80","method":{"position":"org.apache.commons.lang3.CharUtils:459","type":"CtMethodImpl","sourcecode":"public static boolean isAsciiAlpha(final char ch) {\n    if (ch > ch) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (org.apache.commons.lang3.CharUtils.isAsciiAlphaUpper(ch)) || (org.apache.commons.lang3.CharUtils.isAsciiAlphaLower(ch));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"ch","end":"ch"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:431","type":"CtBinaryOperatorImpl","sourcecode":"lhs instanceof boolean[]"},"failures":[],"tindex":"314c3800-2e87-11e6-8876-03725ad69417","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:581","type":"CtMethodImpl","sourcecode":"protected void appendCyclicObject(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final java.lang.Object value) {\n    if (value instanceof boolean[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.ObjectUtils.identityToString(buffer, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.AnnotationUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"(a1 == null) || (a2 == null)"},"failures":[],"tindex":"314c3801-2e87-11e6-8876-297569348c20","method":{"position":"org.apache.commons.lang3.AnnotationUtils:195","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(final java.lang.annotation.Annotation a) {\n    if ((a == null) || (a == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.lang3.builder.ToStringBuilder org.apache.commons.lang3.builder.ToStringBuilder = new org.apache.commons.lang3.builder.ToStringBuilder(a , org.apache.commons.lang3.AnnotationUtils.org.apache.commons.lang3.AnnotationUtils.org.apache.commons.lang3.builder.ToStringStyle);\n            for (final java.lang.reflect.Method java.lang.reflect.Method : a.annotationType().getDeclaredMethods()) {\n                if ((m.getParameterTypes().int) > 0) {\n                    continue;\n                } \n                try {\n                    builder.append(m.getName(), m.invoke(a));\n                } catch (final java.lang.RuntimeException ex) {\n                    throw ex;\n                } catch (final java.lang.Exception ex) {\n                    throw new java.lang.RuntimeException(ex);\n                }\n            }\n            return builder.build();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a1":"a","a2":"a"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ObjectUtils:587","type":"CtBinaryOperatorImpl","sourcecode":"cmp > max"},"failures":[],"tindex":"314c3802-2e87-11e6-8876-2d328539d7a4","method":{"position":"org.apache.commons.lang3.ArrayUtils:2124","type":"CtMethodImpl","sourcecode":"public static int indexOf(final int[] array, final int valueToFind, int startIndex) {\n    if (valueToFind > valueToFind) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                startIndex = 0;\n            } \n            for (int int = startIndex ; i < (array.int) ; i++) {\n                if (valueToFind == (array[i])) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"max":"valueToFind","cmp":"valueToFind"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1226","type":"CtBinaryOperatorImpl","sourcecode":"(((nShorts - 1) * 16) + srcPos) >= 64"},"failures":[358,359,360,361],"tindex":"314c5f13-2e87-11e6-8876-8fbf0d5d584b","method":{"position":"org.apache.commons.lang3.StringUtils:3990","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final java.lang.Object[] array, java.lang.String separator, final int startIndex, final int endIndex) {\n    if ((((startIndex - 1) * 16) + endIndex) >= 64) {\n        {\n            if (array == null) {\n                return null;\n            } \n            if (separator == null) {\n                separator = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final int int = endIndex - startIndex;\n            if (noOfItems <= 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder((noOfItems * 16));\n            for (int int = startIndex ; i < endIndex ; i++) {\n                if (i > startIndex) {\n                    buf.append(separator);\n                } \n                if ((array[i]) != null) {\n                    buf.append(array[i]);\n                } \n            }\n            return buf.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcPos":"endIndex","nShorts":"startIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:176","type":"CtBinaryOperatorImpl","sourcecode":"cls == null"},"failures":[362],"tindex":"314c5f14-2e87-11e6-8876-e7c88e9dffad","method":{"position":"org.apache.commons.lang3.ClassUtils:326","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.lang.Class<?>> getAllSuperclasses(final java.lang.Class<?> cls) {\n    if (cls == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (cls == null) {\n                return null;\n            } \n            final java.util.List<java.lang.Class<?>> java.util.List<java.lang.Class<?>> = new java.util.ArrayList<java.lang.Class<?>>();\n            java.lang.Class<?> java.lang.Class<?> = cls.getSuperclass();\n            while (superclass != null) {\n                classes.add(superclass);\n                superclass = superclass.getSuperclass();\n            }\n            return classes;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"cls"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1222","type":"CtBinaryOperatorImpl","sourcecode":"(seq == null) || (searchSeq == null)"},"failures":[333],"tindex":"314c5f15-2e87-11e6-8876-f380ea0dfd89","method":{"position":"org.apache.commons.lang3.StringUtils:1332","type":"CtMethodImpl","sourcecode":"public static int lastIndexOfIgnoreCase(final java.lang.CharSequence str, final java.lang.CharSequence searchStr) {\n    if ((searchStr == null) || (searchStr == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((str == null) || (searchStr == null)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            return org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(str, searchStr, str.length());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"searchSeq":"searchStr","seq":"searchStr"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:451","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[363],"tindex":"314c8626-2e87-11e6-8876-17aa773165a1","method":{"position":"org.apache.commons.lang3.StringUtils:3013","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] splitPreserveAllTokens(final java.lang.String str, final java.lang.String separatorChars) {\n    if (str == null) {\n        {\n            return org.apache.commons.lang3.StringUtils.splitWorker(str, separatorChars, (-1), true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDateParser:360","type":"CtBinaryOperatorImpl","sourcecode":"c == 'E'"},"failures":[],"tindex":"314c8627-2e87-11e6-8876-3b7897620f5e","method":{"position":"org.apache.commons.lang3.ArrayUtils:4358","type":"CtMethodImpl","sourcecode":"public static char[] add(final char[] array, final int index, final char element) {\n    if (element == 'E') {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((char[])(org.apache.commons.lang3.ArrayUtils.add(array, index, java.lang.Character.valueOf(element), java.lang.Character.java.lang.Character.java.lang.Class<java.lang.Character>)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"element"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:634","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"314c8628-2e87-11e6-8876-e5039782d354","method":{"position":"org.apache.commons.lang3.reflect.MethodUtils:283","type":"CtMethodImpl","sourcecode":"public static java.lang.Object invokeStaticMethod(final java.lang.Class<?> cls, final java.lang.String methodName, java.lang.Object[] args, java.lang.Class<?>[] parameterTypes) throws java.lang.IllegalAccessException, java.lang.NoSuchMethodException, java.lang.reflect.InvocationTargetException {\n    if (methodName == null) {\n        throw new java.lang.IllegalAccessException();\n    } else {\n        {\n            args = org.apache.commons.lang3.ArrayUtils.nullToEmpty(args);\n            parameterTypes = org.apache.commons.lang3.ArrayUtils.nullToEmpty(parameterTypes);\n            final java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.getMatchingAccessibleMethod(cls, methodName, parameterTypes);\n            if (method == null) {\n                throw new java.lang.NoSuchMethodException((((\"No such accessible method: \" + methodName) + \"() on class: \") + (cls.getName())));\n            } \n            return method.invoke(null, args);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"methodName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1010","type":"CtBinaryOperatorImpl","sourcecode":"(((nHex - 1) * 4) + dstPos) >= 8"},"failures":[364],"tindex":"314c8629-2e87-11e6-8876-ff640740e05e","method":{"position":"org.apache.commons.lang3.Conversion:1152","type":"CtMethodImpl","sourcecode":"public static byte binaryToByte(final boolean[] src, final int srcPos, final byte dstInit, final int dstPos, final int nBools) {\n    if ((((dstPos - 1) * 4) + dstPos) >= 8) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((((src.int) == 0) && (srcPos == 0)) || (0 == nBools)) {\n                return dstInit;\n            } \n            if (((nBools - 1) + dstPos) >= 8) {\n                throw new java.lang.IllegalArgumentException(\"nBools-1+dstPos is greather or equal to than 8\");\n            } \n            byte byte = dstInit;\n            int int = 0;\n            for (int int = 0 ; i < nBools ; i++) {\n                shift = (i * 1) + dstPos;\n                final int int = (src[(i + srcPos)] ? 1 : 0) << shift;\n                final int int = 1 << shift;\n                out = ((byte)((out & (~mask)) | bits));\n            }\n            return out;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dstPos":"dstPos","nHex":"dstPos"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:236","type":"CtBinaryOperatorImpl","sourcecode":"cls == null"},"failures":[365],"tindex":"314cad3a-2e87-11e6-8876-ddbf4cc37e07","method":{"position":"org.apache.commons.lang3.ClassUtils:235","type":"CtMethodImpl","sourcecode":"public static java.lang.String getSimpleName(final java.lang.Class<?> cls) {\n    if (cls == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (cls == null) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            return cls.getSimpleName();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"cls"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5534","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))"},"failures":[366],"tindex":"314cad3b-2e87-11e6-8876-5dbd128e4a31","method":{"position":"org.apache.commons.lang3.ArrayUtils:1263","type":"CtMethodImpl","sourcecode":"public static boolean isSameLength(final int[] array1, final int[] array2) {\n    if ((org.apache.commons.lang3.ArrayUtils.isEmpty(array1)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(array1))) {\n        {\n            if (((((array1 == null) && (array2 != null)) && ((array2.int) > 0)) || (((array2 == null) && (array1 != null)) && ((array1.int) > 0))) || (((array1 != null) && (array2 != null)) && ((array1.int) != (array2.int)))) {\n                return false;\n            } \n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array1","values":"array1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2687","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.ArrayUtils.isEmpty(array)"},"failures":[110,367],"tindex":"314cad3c-2e87-11e6-8876-39c2dd07a9bb","method":{"position":"org.apache.commons.lang3.math.NumberUtils:881","type":"CtMethodImpl","sourcecode":"public static double min(final double[] array) {\n    if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n        {\n            org.apache.commons.lang3.math.NumberUtils.validateArray(array);\n            double double = array[0];\n            for (int int = 1 ; i < (array.int) ; i++) {\n                if (java.lang.Double.isNaN(array[i])) {\n                    return java.lang.Double.java.lang.Double.double;\n                } \n                if ((array[i]) < min) {\n                    min = array[i];\n                } \n            }\n            return min;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1260","type":"CtBinaryOperatorImpl","sourcecode":"(((nShorts - 1) * 16) + srcPos) >= 32"},"failures":[],"tindex":"314cd44d-2e87-11e6-8876-d37526e2ebae","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:734","type":"CtMethodImpl","sourcecode":"protected boolean substitute(final org.apache.commons.lang3.text.StrBuilder buf, final int offset, final int length) {\n    if ((((offset - 1) * 16) + offset) >= 32) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (substitute(buf, offset, length, null)) > 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcPos":"offset","nShorts":"offset"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:567","type":"CtBinaryOperatorImpl","sourcecode":"(((ch0 == 'n') || (ch0 == 'N')) || (ch0 == 'f')) || (ch0 == 'F')"},"failures":[],"tindex":"314cd44e-2e87-11e6-8876-83eda879eab2","method":{"position":"org.apache.commons.lang3.CharUtils:516","type":"CtMethodImpl","sourcecode":"public static boolean isAsciiNumeric(final char ch) {\n    if ((((ch == 'n') || (ch0 == 'N')) || (ch0 == 'f')) || (ch0 == 'F')) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (ch >= '0') && (ch <= '9');\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch0":"ch"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:990","type":"CtBinaryOperatorImpl","sourcecode":"field == (java.util.Calendar.MINUTE)"},"failures":[],"tindex":"314cd44f-2e87-11e6-8876-5f5a87d368c1","method":{"position":"org.apache.commons.lang3.time.FastDateParser:532","type":"CtMethodImpl","sourcecode":"private org.apache.commons.lang3.time.FastDateParser.Strategy getLocaleSpecificStrategy(final int field, final java.util.Calendar definingCalendar) {\n    if (field == field) {\n        {\n            final java.util.concurrent.ConcurrentMap<java.util.Locale, org.apache.commons.lang3.time.FastDateParser.Strategy> java.util.concurrent.ConcurrentMap<java.util.Locale, org.apache.commons.lang3.time.FastDateParser.Strategy> = org.apache.commons.lang3.time.FastDateParser.getCache(field);\n            org.apache.commons.lang3.time.FastDateParser.Strategy org.apache.commons.lang3.time.FastDateParser.Strategy = cache.get(java.util.Locale);\n            if (strategy == null) {\n                strategy = field == (java.util.Calendar.java.util.Calendar.int) ? new org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy(java.util.Locale) : new org.apache.commons.lang3.time.FastDateParser.TextStrategy(field , definingCalendar , java.util.Locale);\n                final org.apache.commons.lang3.time.FastDateParser.Strategy org.apache.commons.lang3.time.FastDateParser.Strategy = cache.putIfAbsent(java.util.Locale, strategy);\n                if (inCache != null) {\n                    return inCache;\n                } \n            } \n            return strategy;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.util.Calendar.MINUTE":"field","field":"field"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:522","type":"CtBinaryOperatorImpl","sourcecode":"value instanceof char[]"},"failures":[],"tindex":"314cfb60-2e87-11e6-8876-b95c796cb6dc","method":{"position":"org.apache.commons.lang3.ArrayUtils:1987","type":"CtMethodImpl","sourcecode":"public static boolean contains(final java.lang.Object[] array, final java.lang.Object objectToFind) {\n    if (objectToFind instanceof char[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (org.apache.commons.lang3.ArrayUtils.indexOf(array, objectToFind)) != (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"objectToFind"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:455","type":"CtInvocationImpl","sourcecode":"fromTypeVarAssigns.isEmpty()"},"failures":[],"tindex":"314cfb61-2e87-11e6-8876-5ddf283af716","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1531","type":"CtMethodImpl","sourcecode":"private static java.lang.reflect.Type[] extractTypeArgumentsFrom(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> mappings, java.lang.reflect.TypeVariable<?>[] variables) {\n    if (mappings.isEmpty()) {\n        {\n            final java.lang.reflect.Type[] java.lang.reflect.Type[] = new java.lang.reflect.Type[variables.int];\n            int int = 0;\n            for (java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> : variables) {\n                org.apache.commons.lang3.Validate.isTrue(mappings.containsKey(var), \"missing argument mapping for %s\", org.apache.commons.lang3.reflect.TypeUtils.toString(var));\n                result[(index++)] = mappings.get(var);\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fromTypeVarAssigns":"mappings"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:7115","type":"CtBinaryOperatorImpl","sourcecode":"(first.charAt(i)) != (second.charAt(i))"},"failures":[],"tindex":"314cfb62-2e87-11e6-8876-8329ff344219","method":{"position":"org.apache.commons.lang3.StringUtils:1191","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final java.lang.CharSequence seq, final int searchChar, final int startPos) {\n    if ((seq.charAt(startPos)) != (seq.charAt(i))) {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(seq)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            return org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(seq, searchChar, startPos);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"startPos","first":"seq","second":"seq"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDatePrinter:305","type":"CtBinaryOperatorImpl","sourcecode":"((c >= 'A') && (c <= 'Z')) || ((c >= 'a') && (c <= 'z'))"},"failures":[],"tindex":"314d2273-2e87-11e6-8876-1904d30a375c","method":{"position":"org.apache.commons.lang3.CharUtils:478","type":"CtMethodImpl","sourcecode":"public static boolean isAsciiAlphaUpper(final char ch) {\n    if (((ch >= 'A') && (c <= 'Z')) || ((c >= 'a') && (c <= 'z'))) {\n        {\n            return (ch >= 'A') && (ch <= 'Z');\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"ch"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDateParser:463","type":"CtBinaryOperatorImpl","sourcecode":"(formatField.length()) > 2"},"failures":[],"tindex":"314d2274-2e87-11e6-8876-7381e2c268d0","method":{"position":"org.apache.commons.lang3.ObjectUtils:205","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static int hashCode(final java.lang.Object obj) {\n    if ((obj.length()) > 2) {\n        {\n            return obj == null ? 0 : obj.hashCode();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"formatField":"obj"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:1074","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[368],"tindex":"314d2275-2e87-11e6-8876-7737022908c5","method":{"position":"org.apache.commons.lang3.BooleanUtils:939","type":"CtMethodImpl","sourcecode":"public static java.lang.Boolean and(final java.lang.Boolean... array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n            } \n            if ((array.int) == 0) {\n                throw new java.lang.IllegalArgumentException(\"Array is empty\");\n            } \n            try {\n                final boolean[] boolean[] = org.apache.commons.lang3.ArrayUtils.toPrimitive(array);\n                return org.apache.commons.lang3.BooleanUtils.and(primitive) ? java.lang.Boolean.java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n            } catch (final java.lang.NullPointerException ex) {\n                throw new java.lang.IllegalArgumentException(\"The array must not contain any null elements\");\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:938","type":"CtBinaryOperatorImpl","sourcecode":"rhs == null"},"failures":[369],"tindex":"314d2276-2e87-11e6-8876-271f9366ab43","method":{"position":"org.apache.commons.lang3.ArrayUtils:1533","type":"CtMethodImpl","sourcecode":"public static void reverse(final float[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return ;\n            } \n            org.apache.commons.lang3.ArrayUtils.reverse(array, 0, array.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"rhs":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:701","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[370],"tindex":"314d4987-2e87-11e6-8876-370397364ae9","method":{"position":"org.apache.commons.lang3.time.DateUtils:200","type":"CtMethodImpl","sourcecode":"public static boolean isSameInstant(final java.util.Date date1, final java.util.Date date2) {\n    if (date1 == null) {\n        {\n            if ((date1 == null) || (date2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            return (date1.getTime()) == (date2.getTime());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2335","type":"CtBinaryOperatorImpl","sourcecode":"separator == null"},"failures":[],"tindex":"314d4988-2e87-11e6-8876-a1dffbef85f3","method":{"position":"org.apache.commons.lang3.time.FastDateParser:460","type":"CtMethodImpl","sourcecode":"private org.apache.commons.lang3.time.FastDateParser.Strategy getStrategy(final java.lang.String formatField, final java.util.Calendar definingCalendar) {\n    if (formatField == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            switch (formatField.charAt(0)) {\n                case '\\'' :\n                    if ((formatField.length()) > 2) {\n                        return new org.apache.commons.lang3.time.FastDateParser.CopyQuotedStrategy(formatField.substring(1, ((formatField.length()) - 1)));\n                    } \n                default :\n                    return new org.apache.commons.lang3.time.FastDateParser.CopyQuotedStrategy(formatField);\n                case 'D' :\n                    return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n                case 'E' :\n                    return getLocaleSpecificStrategy(java.util.Calendar.java.util.Calendar.int, definingCalendar);\n                case 'F' :\n                    return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n                case 'G' :\n                    return getLocaleSpecificStrategy(java.util.Calendar.java.util.Calendar.int, definingCalendar);\n                case 'H' :\n                    return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n                case 'K' :\n                    return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n                case 'M' :\n                    return (formatField.length()) >= 3 ? getLocaleSpecificStrategy(java.util.Calendar.java.util.Calendar.int, definingCalendar) : org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n                case 'S' :\n                    return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n                case 'W' :\n                    return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n                case 'a' :\n                    return getLocaleSpecificStrategy(java.util.Calendar.java.util.Calendar.int, definingCalendar);\n                case 'd' :\n                    return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n                case 'h' :\n                    return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n                case 'k' :\n                    return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n                case 'm' :\n                    return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n                case 's' :\n                    return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n                case 'w' :\n                    return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n                case 'y' :\n                    return (formatField.length()) > 2 ? org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy : org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n                case 'Z' :\n                case 'z' :\n                    return getLocaleSpecificStrategy(java.util.Calendar.java.util.Calendar.int, definingCalendar);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"separator":"formatField"},"type":"special","returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}