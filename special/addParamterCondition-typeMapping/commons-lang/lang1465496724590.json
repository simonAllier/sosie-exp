{"failureDictionary":{"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":97,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":62,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":48,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":64,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":117,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":31,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":61,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":6,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":83,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":129,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":56,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":14,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":112,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":27,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxLong":136,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":26,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":38,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":114,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":72,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":116,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":75,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":126,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":15,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":82,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiShortArray":93,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":33,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":128,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":49,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":79,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":118,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayFloat":143,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":66,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":50,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":120,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":106,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":110,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":122,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":54,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":130,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":131,"org.apache.commons.lang3.ArrayUtilsTest.testToString":134,"org.apache.commons.lang3.math.NumberUtilsTest.testMinimumByte":141,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_StringBuilder_int_int":140,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":44,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":107,"org.apache.commons.lang3.builder.CompareToBuilderTest.testFloat":95,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":101,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":55,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":21,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":103,"org.apache.commons.lang3.builder.CompareToBuilderTest.testShortArray":92,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":109,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":57,"org.apache.commons.lang3.mutable.MutableDoubleTest.testAddValueObject":94,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":98,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":102,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":52,"org.apache.commons.lang3.StringUtilsSubstringTest.testRight_String":90,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":63,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":32,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":4,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":76,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":51,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseNull":1,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":36,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":121,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":40,"org.apache.commons.lang3.text.StrTokenizerTest.test5":133,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":41,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":42,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testEndsWith":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":17,"org.apache.commons.lang3.ClassUtilsTest.testHierarchyIncludingInterfaces":99,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":5,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":29,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxFloat_nullArray":89,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":70,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":60,"org.apache.commons.lang3.text.StrBuilderTest.testGetChars":137,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testBuilderReset":87,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":18,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testEndsWithAny":85,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":45,"org.apache.commons.lang3.builder.CompareToBuilderTest.testShortArrayHiddenByObject":91,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":81,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":111,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":74,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadStaticFieldForceAccessIllegalArgumentException1":144,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":28,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxLong_emptyArray":135,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":13,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":59,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":108,"org.apache.commons.lang3.ClassUtilsTest.testHierarchyExcludingInterfaces":100,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":123,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":23,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":113,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":65,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":132,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":37,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":16,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOf_StrMatcher":96,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":124,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadNamingPattern":86,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":115,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeFully_String":138,"org.apache.commons.lang3.builder.CompareToBuilderTest.testDoubleArray":139,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayToObjectArray":142,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":68,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testBuilderResetAfterBuild":88,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":22,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":119,"org.apache.commons.lang3.StringUtilsTest.testSplitByCharacterTypeCamelCase":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":105,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":127,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":53,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":69,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":125},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1120","type":"CtBinaryOperatorImpl","sourcecode":"((nBools - 1) + dstPos) >= 16"},"failures":[],"tindex":"886dbfa0-2e6f-11e6-a010-6f3e5caca91e","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:226","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.time.FastDateFormat getDateInstance(final int style, final java.util.TimeZone timeZone, final java.util.Locale locale) {\n    if (((style - 1) + style) >= 16) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getDateInstance(style, timeZone, locale);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nBools":"style","dstPos":"style"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1870","type":"CtBinaryOperatorImpl","sourcecode":"fieldNameValueSeparator == null"},"failures":[0],"tindex":"886e82f1-2e6f-11e6-a010-333dfe089529","method":{"position":"org.apache.commons.lang3.StringUtils:3203","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] splitByCharacterTypeCamelCase(final java.lang.String str) {\n    if (str == null) {\n        {\n            return org.apache.commons.lang3.StringUtils.splitByCharacterType(str, true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldNameValueSeparator":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"org.apache.commons.lang3.concurrent.ConcurrentException","condition":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:61","type":"CtBinaryOperatorImpl","sourcecode":"(ex == null) || ((ex.getCause()) == null)"},"failures":[1],"tindex":"886e82f2-2e6f-11e6-a010-c504bf32ae42","method":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:104","type":"CtMethodImpl","sourcecode":"public static void handleCause(final java.util.concurrent.ExecutionException ex) throws org.apache.commons.lang3.concurrent.ConcurrentException {\n    if ((ex == null) || ((ex.getCause()) == null)) {\n        throw new org.apache.commons.lang3.concurrent.ConcurrentException();\n    } else {\n        {\n            final org.apache.commons.lang3.concurrent.ConcurrentException org.apache.commons.lang3.concurrent.ConcurrentException = org.apache.commons.lang3.concurrent.ConcurrentUtils.extractCause(ex);\n            if (cex != null) {\n                throw cex;\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ex":"ex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5378","type":"CtBinaryOperatorImpl","sourcecode":"pads <= 0"},"failures":[],"tindex":"886eaa03-2e6f-11e6-a010-2bf7ebf4a06e","method":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:138","type":"CtMethodImpl","sourcecode":"protected java.lang.String toUtf16Escape(final int codepoint) {\n    if (codepoint <= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return \"\\\\u\" + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(codepoint));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pads":"codepoint"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.FieldUtils:106","type":"CtUnaryOperatorImpl","sourcecode":"!(java.lang.reflect.Modifier.isPublic(field.getModifiers()))"},"failures":[2,2,3,3,4,5,6,7,7,8,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,26,27,28,29,30,30,31,32,33,34,35,36,36,37,37,38,39,40,41,42,43,44,44,45,46,47,47,48,49,50,50,51,52,53,54,54,55,56,57,58,59,60,61,62,62,63,64,65,66,67,68,68,69,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83],"tindex":"886ed114-2e6f-11e6-a010-d97fd956773e","method":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:479","type":"CtMethodImpl","sourcecode":"protected boolean accept(final java.lang.reflect.Field field) {\n    if (!(java.lang.reflect.Modifier.isPublic(field.getModifiers()))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((field.getName().indexOf(org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.char)) != (-1)) {\n                return false;\n            } \n            if ((java.lang.reflect.Modifier.isTransient(field.getModifiers())) && (!(org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.isAppendTransients()))) {\n                return false;\n            } \n            if ((java.lang.reflect.Modifier.isStatic(field.getModifiers())) && (!(org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.isAppendStatics()))) {\n                return false;\n            } \n            if (((org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.java.lang.String[]) != null) && ((java.util.Arrays.binarySearch(org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.java.lang.String[], field.getName())) >= 0)) {\n                return false;\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"field"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1792","type":"CtBinaryOperatorImpl","sourcecode":"arraySeparator == null"},"failures":[84,85],"tindex":"886ef825-2e6f-11e6-a010-8bd9e593915b","method":{"position":"org.apache.commons.lang3.StringUtils:7269","type":"CtMethodImpl","sourcecode":"public static boolean endsWith(final java.lang.CharSequence str, final java.lang.CharSequence suffix) {\n    if (suffix == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.endsWith(str, suffix, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"arraySeparator":"suffix"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1106","type":"CtBinaryOperatorImpl","sourcecode":"prior != null"},"failures":[86,87,88],"tindex":"886ef826-2e6f-11e6-a010-d31942e00a7f","method":{"position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:300","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder namingPattern(final java.lang.String pattern) {\n    if (pattern != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (pattern == null) {\n                throw new java.lang.NullPointerException(\"Naming pattern must not be null!\");\n            } \n            java.lang.String = pattern;\n            return org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"prior":"pattern"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1534","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[89],"tindex":"886f1f37-2e6f-11e6-a010-ade031103ffb","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1056","type":"CtMethodImpl","sourcecode":"public static float max(final float[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.math.NumberUtils.validateArray(array);\n            float float = array[0];\n            for (int int = 1 ; j < (array.int) ; j++) {\n                if (java.lang.Float.isNaN(array[j])) {\n                    return java.lang.Float.java.lang.Float.float;\n                } \n                if ((array[j]) > max) {\n                    max = array[j];\n                } \n            }\n            return max;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:657","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[90],"tindex":"886f1f38-2e6f-11e6-a010-8d0a7f8d6c49","method":{"position":"org.apache.commons.lang3.StringUtils:2206","type":"CtMethodImpl","sourcecode":"public static java.lang.String right(final java.lang.String str, final int len) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return null;\n            } \n            if (len < 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            if ((str.length()) <= len) {\n                return str;\n            } \n            return str.substring(((str.length()) - len));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:730","type":"CtBinaryOperatorImpl","sourcecode":"str == falseString"},"failures":[],"tindex":"886f4649-2e6f-11e6-a010-8b09af959dbe","method":{"position":"org.apache.commons.lang3.math.NumberUtils:198","type":"CtMethodImpl","sourcecode":"public static float toFloat(final java.lang.String str) {\n    if (str == str) {\n        {\n            return org.apache.commons.lang3.math.NumberUtils.toFloat(str, 0.0F);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str","falseString":"str"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:778","type":"CtBinaryOperatorImpl","sourcecode":"rhs == null"},"failures":[91,92,93],"tindex":"886f464a-2e6f-11e6-a010-2327a2310074","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:767","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final short[] lhs, final short[] rhs) {\n    if (lhs == null) {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == null) {\n                int = -1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (rhs == null) {\n                int = +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                int = (lhs.int) < (rhs.int) ? -1 : +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && ((int) == 0) ; i++) {\n                append(lhs[i], rhs[i]);\n            }\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"rhs":"lhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:797","type":"CtBinaryOperatorImpl","sourcecode":"fraction == null"},"failures":[94],"tindex":"886f6d5b-2e6f-11e6-a010-356f32e7fa27","method":{"position":"org.apache.commons.lang3.mutable.MutableDouble:167","type":"CtMethodImpl","sourcecode":"public void add(final java.lang.Number operand) {\n    if (operand == null) {\n        {\n            org.apache.commons.lang3.mutable.MutableDouble.this.double += operand.doubleValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fraction":"operand"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:255","type":"CtInvocationImpl","sourcecode":"java.lang.Float.isNaN(a)"},"failures":[95],"tindex":"886f946c-2e6f-11e6-a010-3f933a79d26e","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:568","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final float lhs, final float rhs) {\n    if (java.lang.Float.isNaN(rhs)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            int = java.lang.Float.compare(lhs, rhs);\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"rhs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:913","type":"CtBinaryOperatorImpl","sourcecode":"quote != null"},"failures":[96],"tindex":"886f946d-2e6f-11e6-a010-dbed4bd02bc3","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2375","type":"CtMethodImpl","sourcecode":"public int indexOf(final org.apache.commons.lang3.text.StrMatcher matcher) {\n    if (matcher != null) {\n        {\n            return indexOf(matcher, 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"quote":"matcher"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"toClass == null"},"failures":[97,98,99,100],"tindex":"886f946e-2e6f-11e6-a010-37d6be361317","method":{"position":"org.apache.commons.lang3.ClassUtils:1161","type":"CtMethodImpl","sourcecode":"public static java.lang.Iterable<java.lang.Class<?>> hierarchy(final java.lang.Class<?> type, org.apache.commons.lang3.ClassUtils.Interfaces interfacesBehavior) {\n    if (type == null) {\n        {\n            final java.lang.Iterable<java.lang.Class<?>> java.lang.Iterable<java.lang.Class<?>> = new java.lang.Iterable<java.lang.Class<?>>() {\n                @java.lang.Override\n                public java.util.Iterator<java.lang.Class<?>> iterator() {\n                    final org.apache.commons.lang3.mutable.MutableObject<java.lang.Class<?>> org.apache.commons.lang3.mutable.MutableObject<java.lang.Class<?>> = new org.apache.commons.lang3.mutable.MutableObject<java.lang.Class<?>>(type);\n                    return new java.util.Iterator<java.lang.Class<?>>() {\n                        @java.lang.Override\n                        public boolean hasNext() {\n                            return (next.getValue()) != null;\n                        }\n\n                        @java.lang.Override\n                        public java.lang.Class<?> next() {\n                            final java.lang.Class<?> java.lang.Class<?> = next.getValue();\n                            next.setValue(result.getSuperclass());\n                            return result;\n                        }\n\n                        @java.lang.Override\n                        public void remove() {\n                            throw new java.lang.UnsupportedOperationException();\n                        }\n                    };\n                }\n            };\n            if (interfacesBehavior != (org.apache.commons.lang3.ClassUtils.Interfaces.org.apache.commons.lang3.ClassUtils.Interfaces.org.apache.commons.lang3.ClassUtils.Interfaces)) {\n                return classes;\n            } \n            return new java.lang.Iterable<java.lang.Class<?>>() {\n                @java.lang.Override\n                public java.util.Iterator<java.lang.Class<?>> iterator() {\n                    final java.util.Set<java.lang.Class<?>> java.util.Set<java.lang.Class<?>> = new java.util.HashSet<java.lang.Class<?>>();\n                    final java.util.Iterator<java.lang.Class<?>> java.util.Iterator<java.lang.Class<?>> = classes.iterator();\n                    return new java.util.Iterator<java.lang.Class<?>>() {\n                        java.util.Iterator<java.lang.Class<?>> interfaces = java.util.Collections.<java.lang.Class<?>>emptySet().iterator();\n\n                        @java.lang.Override\n                        public boolean hasNext() {\n                            return (java.util.Iterator<java.lang.Class<?>>.hasNext()) || (wrapped.hasNext());\n                        }\n\n                        @java.lang.Override\n                        public java.lang.Class<?> next() {\n                            if (java.util.Iterator<java.lang.Class<?>>.hasNext()) {\n                                final java.lang.Class<?> java.lang.Class<?> = java.util.Iterator<java.lang.Class<?>>.next();\n                                seenInterfaces.add(nextInterface);\n                                return nextInterface;\n                            } \n                            final java.lang.Class<?> java.lang.Class<?> = wrapped.next();\n                            final java.util.Set<java.lang.Class<?>> java.util.Set<java.lang.Class<?>> = new java.util.LinkedHashSet<java.lang.Class<?>>();\n                            walkInterfaces(currentInterfaces, nextSuperclass);\n                            java.util.Iterator<java.lang.Class<?>> = currentInterfaces.iterator();\n                            return nextSuperclass;\n                        }\n\n                        private void walkInterfaces(java.util.Set<java.lang.Class<?>> addTo, java.lang.Class<?> c) {\n                            for (java.lang.Class<?> java.lang.Class<?> : c.getInterfaces()) {\n                                if (!(seenInterfaces.contains(iface))) {\n                                    addTo.add(iface);\n                                } \n                                walkInterfaces(addTo, iface);\n                            }\n                        }\n\n                        @java.lang.Override\n                        public void remove() {\n                            throw new java.lang.UnsupportedOperationException();\n                        }\n                    };\n                }\n            };\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toClass":"type"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSequenceUtils:189","type":"CtBinaryOperatorImpl","sourcecode":"(cs instanceof java.lang.String) && (substring instanceof java.lang.String)"},"failures":[],"tindex":"886fe28f-2e6f-11e6-a010-9d99821ff2cb","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:471","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.Object obj) {\n    if ((obj instanceof java.lang.String) && (obj instanceof java.lang.String)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, obj, null);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"obj","substring":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5588","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"886fe290-2e6f-11e6-a010-2fa96a8e30bd","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:303","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setContentEnd(final java.lang.String contentEnd) {\n    if (contentEnd == null) {\n        {\n            super.setContentEnd(contentEnd);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"contentEnd"},"type":"special","returnInThen":true,"status":0},{"exception":"java.text.ParseException","condition":{"position":"org.apache.commons.lang3.CharSet:139","type":"CtBinaryOperatorImpl","sourcecode":"setStrs == null"},"failures":[],"tindex":"887009a1-2e6f-11e6-a010-e730b4a7b7a3","method":{"position":"org.apache.commons.lang3.time.DateUtils:310","type":"CtMethodImpl","sourcecode":"public static java.util.Date parseDateStrictly(final java.lang.String str, final java.lang.String... parsePatterns) throws java.text.ParseException {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(str))) {\n        throw new java.text.ParseException();\n    } else {\n        {\n            if (parsePatterns == null) {\n                throw new java.text.ParseException();\n            } else {\n                {\n                    return org.apache.commons.lang3.time.DateUtils.parseDateStrictly(str, null, parsePatterns);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"setStrs":"parsePatterns"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:7059","type":"CtBinaryOperatorImpl","sourcecode":"(m1.length()) != (m2.length())"},"failures":[101,102,103,104,105,105,106,106,107,108,108,3,4,4,5,5,6,7,8,9,10,10,11,11,12,12,14,14,15,16,16,17,18,19,20,21,22,23,24,25,25,26,27,28,28,29,30,31,31,32,32,33,34,35,35,36,37,38,39,39,40,41,42,43,43,44,45,45,46,46,47,48,48,49,49,50,51,51,52,53,54,55,56,56,57,57,58,59,59,60,61,61,62,63,63,64,65,66,67,68,69,70,70,71,71,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134],"tindex":"887009a2-2e6f-11e6-a010-33629947767f","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1502","type":"CtMethodImpl","sourcecode":"protected void appendNullText(final java.lang.StringBuffer buffer, final java.lang.String fieldName) {\n    if ((fieldName.length()) != (fieldName.length())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(java.lang.String);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"m1":"fieldName","m2":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:698","type":"CtBinaryOperatorImpl","sourcecode":"rhs == null"},"failures":[135,136],"tindex":"887030b3-2e6f-11e6-a010-31cd246ce250","method":{"position":"org.apache.commons.lang3.math.NumberUtils:936","type":"CtMethodImpl","sourcecode":"public static long max(final long[] array) {\n    if (array == null) {\n        {\n            org.apache.commons.lang3.math.NumberUtils.validateArray(array);\n            long long = array[0];\n            for (int int = 1 ; j < (array.int) ; j++) {\n                if ((array[j]) > max) {\n                    max = array[j];\n                } \n            }\n            return max;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"rhs":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1374","type":"CtBinaryOperatorImpl","sourcecode":"(p.getOwnerType()) == null"},"failures":[],"tindex":"887030b4-2e6f-11e6-a010-e97199aa6c63","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1344","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Type getArrayComponentType(final java.lang.reflect.Type type) {\n    if ((type.getOwnerType()) == null) {\n        {\n            if (type instanceof java.lang.Class<?>) {\n                final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(type));\n                return clazz.isArray() ? clazz.getComponentType() : null;\n            } \n            if (type instanceof java.lang.reflect.GenericArrayType) {\n                return ((java.lang.reflect.GenericArrayType)(type)).getGenericComponentType();\n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"type"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:944","type":"CtBinaryOperatorImpl","sourcecode":"properNumerator == 0"},"failures":[],"tindex":"887030b5-2e6f-11e6-a010-dda092ea0efc","method":{"position":"org.apache.commons.lang3.text.StrBuilder:495","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic org.apache.commons.lang3.text.StrBuilder append(final java.lang.CharSequence seq, final int startIndex, final int length) {\n    if (length == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (seq == null) {\n                return appendNull();\n            } \n            return append(seq.toString(), startIndex, length);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"properNumerator":"length"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:604","type":"CtBinaryOperatorImpl","sourcecode":"(chars) == null"},"failures":[137],"tindex":"887057c6-2e6f-11e6-a010-8366e6d66aec","method":{"position":"org.apache.commons.lang3.text.StrBuilder:392","type":"CtMethodImpl","sourcecode":"public char[] getChars(char[] destination) {\n    if (destination == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = length();\n            if ((destination == null) || ((destination.int) < len)) {\n                destination = new char[len];\n            } \n            java.lang.System.arraycopy(char[], 0, destination, 0, len);\n            return destination;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chars":"destination"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:202","type":"CtInvocationImpl","sourcecode":"className.startsWith(\"[\")"},"failures":[138],"tindex":"887057c7-2e6f-11e6-a010-ab7d5f7a3ced","method":{"position":"org.apache.commons.lang3.text.WordUtils:323","type":"CtMethodImpl","sourcecode":"public static java.lang.String capitalizeFully(final java.lang.String str) {\n    if (str.startsWith(\"[\")) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.text.WordUtils.capitalizeFully(str, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"className":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:39","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[139],"tindex":"887057c8-2e6f-11e6-a010-7d2eebeeed4a","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:887","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final double[] lhs, final double[] rhs) {\n    if (rhs == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == null) {\n                int = -1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (rhs == null) {\n                int = +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                int = (lhs.int) < (rhs.int) ? -1 : +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && ((int) == 0) ; i++) {\n                append(lhs[i], rhs[i]);\n            }\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"rhs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:412","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[140],"tindex":"88707ed9-2e6f-11e6-a010-f51225ed3233","method":{"position":"org.apache.commons.lang3.text.StrBuilder:928","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendln(final java.lang.StringBuilder str, final int startIndex, final int length) {\n    if (startIndex < 0) {\n        {\n            return append(str, startIndex, length).appendNewLine();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"startIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:220","type":"CtBinaryOperatorImpl","sourcecode":"lhs != rhs"},"failures":[141],"tindex":"88707eda-2e6f-11e6-a010-55a88ee70355","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1152","type":"CtMethodImpl","sourcecode":"public static byte min(byte a, final byte b, final byte c) {\n    if (b != c) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (b < a) {\n                a = b;\n            } \n            if (c < a) {\n                a = c;\n            } \n            return a;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"b","rhs":"c"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3809","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[142],"tindex":"88707edb-2e6f-11e6-a010-ddcacba3c03e","method":{"position":"org.apache.commons.lang3.ArrayUtils:3791","type":"CtMethodImpl","sourcecode":"public static char[] addAll(final char[] array1, final char... array2) {\n    if (array1 == null) {\n        {\n            if (array1 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array2);\n            } else if (array2 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array1);\n            } \n            final char[] char[] = new char[(array1.int) + (array2.int)];\n            java.lang.System.arraycopy(array1, 0, joinedArray, 0, array1.int);\n            java.lang.System.arraycopy(array2, 0, joinedArray, array1.int, array2.int);\n            return joinedArray;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSequenceUtils:74","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[143],"tindex":"8870a5ec-2e6f-11e6-a010-971c9cb4305c","method":{"position":"org.apache.commons.lang3.ArrayUtils:1154","type":"CtMethodImpl","sourcecode":"public static float[] subarray(final float[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (startIndexInclusive < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            if (startIndexInclusive < 0) {\n                startIndexInclusive = 0;\n            } \n            if (endIndexExclusive > (array.int)) {\n                endIndexExclusive = array.int;\n            } \n            final int int = endIndexExclusive - startIndexInclusive;\n            if (newSize <= 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.float[];\n            } \n            final float[] float[] = new float[newSize];\n            java.lang.System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);\n            return subarray;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"startIndexInclusive"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:343","type":"CtFieldReadImpl","sourcecode":"objectsTriviallyEqual"},"failures":[144],"tindex":"8870a5ed-2e6f-11e6-a010-559acccb0a19","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:254","type":"CtMethodImpl","sourcecode":"public static java.lang.Object readStaticField(final java.lang.reflect.Field field, final boolean forceAccess) throws java.lang.IllegalAccessException {\n    if (forceAccess) {\n        throw new java.lang.IllegalAccessException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.isTrue((field != null), \"The field must not be null\");\n            org.apache.commons.lang3.Validate.isTrue(java.lang.reflect.Modifier.isStatic(field.getModifiers()), \"The field '%s' is not static\", field.getName());\n            return org.apache.commons.lang3.reflect.FieldUtils.readField(field, ((java.lang.Object)(null)), forceAccess);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsTriviallyEqual":"forceAccess"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"((((ch0 == 't') || (ch0 == 'T')) && ((ch1 == 'r') || (ch1 == 'R'))) && ((ch2 == 'u') || (ch2 == 'U'))) && ((ch3 == 'e') || (ch3 == 'E'))"},"failures":[],"tindex":"8870a5ee-2e6f-11e6-a010-17bdcd25323c","method":{"position":"org.apache.commons.lang3.Conversion:222","type":"CtMethodImpl","sourcecode":"public static boolean[] hexDigitMsb0ToBinary(final char hexDigit) {\n    if (((((hexDigit == 't') || (ch0 == 'T')) && ((hexDigit == 'r') || (ch1 == 'R'))) && ((hexDigit == 'u') || (ch2 == 'U'))) && ((hexDigit == 'e') || (ch3 == 'E'))) {\n        {\n            switch (hexDigit) {\n                case '0' :\n                    return new boolean[]{ false , false , false , false };\n                case '1' :\n                    return new boolean[]{ false , false , false , true };\n                case '2' :\n                    return new boolean[]{ false , false , true , false };\n                case '3' :\n                    return new boolean[]{ false , false , true , true };\n                case '4' :\n                    return new boolean[]{ false , true , false , false };\n                case '5' :\n                    return new boolean[]{ false , true , false , true };\n                case '6' :\n                    return new boolean[]{ false , true , true , false };\n                case '7' :\n                    return new boolean[]{ false , true , true , true };\n                case '8' :\n                    return new boolean[]{ true , false , false , false };\n                case '9' :\n                    return new boolean[]{ true , false , false , true };\n                case 'a' :\n                case 'A' :\n                    return new boolean[]{ true , false , true , false };\n                case 'b' :\n                case 'B' :\n                    return new boolean[]{ true , false , true , true };\n                case 'c' :\n                case 'C' :\n                    return new boolean[]{ true , true , false , false };\n                case 'd' :\n                case 'D' :\n                    return new boolean[]{ true , true , false , true };\n                case 'e' :\n                case 'E' :\n                    return new boolean[]{ true , true , true , false };\n                case 'f' :\n                case 'F' :\n                    return new boolean[]{ true , true , true , true };\n                default :\n                    throw new java.lang.IllegalArgumentException(((\"Cannot interpret '\" + hexDigit) + \"' as a hexadecimal digit\"));\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch0":"hexDigit","ch2":"hexDigit","ch1":"hexDigit","ch3":"hexDigit"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.text.ParseException","condition":{"position":"org.apache.commons.lang3.StringUtils:4284","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(remove))"},"failures":[],"tindex":"8870ccff-2e6f-11e6-a010-a3ad1bd7f85b","method":{"position":"org.apache.commons.lang3.time.DateUtils:310","type":"CtMethodImpl","sourcecode":"public static java.util.Date parseDateStrictly(final java.lang.String str, final java.lang.String... parsePatterns) throws java.text.ParseException {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(str))) {\n        throw new java.text.ParseException();\n    } else {\n        {\n            if (parsePatterns == null) {\n                throw new java.text.ParseException();\n            } else {\n                {\n                    return org.apache.commons.lang3.time.DateUtils.parseDateStrictly(str, null, parsePatterns);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str","remove":"str"},"type":"special","returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":32,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}