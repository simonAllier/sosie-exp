{"failureDictionary":{"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":112,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":174,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":176,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":202,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testAddInitializerAfterStart":55,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_Boolean":266,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":170,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":173,"org.apache.commons.lang3.StringUtilsTest.testLengthString":226,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedFieldForceAccess":243,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":197,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeRuntimeEx":45,"org.apache.commons.lang3.ConversionTest.testIntToBinary":240,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":264,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":108,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":320,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testIsStartedTrue":37,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":208,"org.apache.commons.lang3.ArrayUtilsTest.testContainsLong":303,"org.apache.commons.lang3.StringUtilsTest.testReplacePattern":248,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":103,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDifferingStyles":277,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testSimpleDate":304,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCode":234,"org.apache.commons.lang3.StringUtilsTest.testSplitPreserveAllTokens_StringChar":10,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStripAll":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":152,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":327,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":213,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_StrMatcher_int":273,"org.apache.commons.lang3.text.StrBuilderTest.testReverse":265,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":8,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultIsExceptionUnknown":57,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":215,"org.apache.commons.lang3.concurrent.CallableBackgroundInitializerTest.testInitialize":68,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":88,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang708":300,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":201,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":196,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":147,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":324,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":9,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml10":297,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":308,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementCharArray":12,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDefaults":279,"org.apache.commons.lang3.StringUtilsTest.testIsAllUpperCase":31,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":198,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml11":298,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":205,"org.apache.commons.lang3.math.NumberUtilsTest.testToLongString":258,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":336,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":178,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":163,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":207,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_int_int":263,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":167,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":109,"org.apache.commons.lang3.StringUtilsTest.testChomp":285,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":148,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeEcmaScript":302,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":157,"org.apache.commons.lang3.BitFieldTest.testGetValue":218,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":328,"org.apache.commons.lang3.reflect.TypeLiteralTest.testEquals":63,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJavaWithSlash":296,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":2,"org.apache.commons.lang3.time.FastDateFormatTest.testDateDefaults":231,"org.apache.commons.lang3.math.NumberUtilsTest.testMaximumShort":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":135,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":6,"org.apache.commons.lang3.BitFieldTest.testSetValue":223,"org.apache.commons.lang3.reflect.TypeLiteralTest.testBasic":61,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":98,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":169,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":275,"org.apache.commons.lang3.text.FormattableUtilsTest.testDefaultAppend":280,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":5,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":315,"org.apache.commons.lang3.text.StrMatcherTest.testStringMatcher_String":66,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":325,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":153,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":146,"org.apache.commons.lang3.StringUtilsTest.testSplit_StringChar":11,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementDoubleArray":26,"org.apache.commons.lang3.StringUtilsTest.testCenter_StringInt":282,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":114,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":182,"org.apache.commons.lang3.StringUtilsTest.testSplit_StringString_StringStringInt":261,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":203,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":274,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeEx":50,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":330,"org.apache.commons.lang3.ObjectUtilsTest.testIdentityToStringStrBuilder":20,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHierarchyHashCode":233,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendSeparator_String":241,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":99,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":150,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":183,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":311,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":124,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":321,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCodeExcludeFields":235,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeNested":48,"org.apache.commons.lang3.ConversionTest.testByteArrayToUuid":65,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":312,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetActiveExecutorTemp":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":119,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":192,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":143,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetBeforeStart":71,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":204,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":335,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":181,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":172,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testIsStartedAfterGet":41,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":92,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":334,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":125,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":160,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":132,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":216,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBetween":288,"org.apache.commons.lang3.BitFieldTest.testGetRawValue":222,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetResultObjectUnknown":56,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_Boolean":267,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":200,"org.apache.commons.lang3.StringUtilsTest.testCenter_StringIntChar":281,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":331,"org.apache.commons.lang3.time.FastDatePrinterTest.testFormat":276,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":142,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":127,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":156,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":323,"org.apache.commons.lang3.BitFieldTest.testSetShortValue":220,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBetween":291,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":187,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":337,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":137,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testInteger":237,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":210,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":111,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":159,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":177,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":151,"org.apache.commons.lang3.ConversionTest.testShortToByteArray":58,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionObjectCycle":232,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":130,"org.apache.commons.lang3.time.DateUtilsTest.testIteratorEx":230,"org.apache.commons.lang3.CharUtilsTest.testIsAscii_char":76,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testSetExternalExecutor":72,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOfAny_StringStringArray":268,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixture":236,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":318,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":329,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":214,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testBlank":86,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeResultsIsSuccessfulFalse":52,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayToObjectArray":25,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":212,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":250,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":206,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":97,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":138,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":89,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":166,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetCheckedException":35,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testTrimToNull":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":123,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateFloat":252,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":211,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":121,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":161,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":239,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":145,"org.apache.commons.lang3.ArrayUtilsTest.testIsEquals":270,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStripToNull_String":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":120,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedField":242,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":190,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":91,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":106,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":126,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang303":309,"org.apache.commons.lang3.reflect.TypeLiteralTest.testTyped":62,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":100,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":168,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberFailure_1":255,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":128,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetActiveExecutorBeforeStart":70,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testArrayList":93,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberFailure_4":256,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":141,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testTrim":33,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testBlank":107,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":140,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":314,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testIsStartedFalse":69,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetRuntimeException":36,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":191,"org.apache.commons.lang3.BitFieldTest.testGetShortValue":219,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":194,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":271,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlSupplementaryCharacters":299,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":129,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeExternalExec":75,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":96,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":90,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":254,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":310,"org.apache.commons.lang3.StringUtilsTest.testSplit_String":260,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":162,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":333,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testCopyOnWriteArrayList":94,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":149,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBelow":287,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":101,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementByteArray":269,"org.apache.commons.lang3.StringUtilsTest.testDefault_StringString":23,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeResultsIsSuccessfulTrue":46,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":186,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStrip_StringString":17,"org.apache.commons.lang3.ArrayUtilsTest.testToString":78,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":110,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateTimeInstance":278,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":184,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBelow":290,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testStartMultipleTimes":42,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testSetExternalExecutorAfterStart":39,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":313,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testAddInitializerNullInit":73,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":87,"org.apache.commons.lang3.ArrayUtilsTest.testSameLengthDouble":249,"org.apache.commons.lang3.reflect.TypeUtilsTest.testParameterize":59,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":199,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":245,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testAbove":286,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":317,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":165,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":294,"org.apache.commons.lang3.time.DateUtilsTest.testWeekIterator":229,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":139,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":175,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":4,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":105,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":293,"org.apache.commons.lang3.StringUtilsTest.testNormalizeSpace":32,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":118,"org.apache.commons.lang3.math.NumberUtilsTest.testLANG992":251,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementDoubleArray":27,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":195,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":164,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":228,"org.apache.commons.lang3.text.StrTokenizerTest.test8":30,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testInitialize":40,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":185,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":244,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":301,"org.apache.commons.lang3.BitFieldTest.testGetShortRawValue":221,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":332,"org.apache.commons.lang3.text.StrTokenizerTest.test5":82,"org.apache.commons.lang3.text.StrTokenizerTest.test4":29,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGenericArrayType":60,"org.apache.commons.lang3.text.StrTokenizerTest.test7":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":154,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":322,"org.apache.commons.lang3.text.StrTokenizerTest.test6":83,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":155,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_long_long":262,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeChildWithExecutor":54,"org.apache.commons.lang3.text.StrTokenizerTest.test1":79,"org.apache.commons.lang3.text.StrTokenizerTest.test3":81,"org.apache.commons.lang3.text.StrTokenizerTest.test2":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":131,"org.apache.commons.lang3.ArrayUtilsTest.testToObject_char":238,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testLinkedList":95,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":209,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":113,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayShort":1,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsert":14,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStripToEmpty_String":18,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultInitializerNamesModify":44,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJson":295,"org.apache.commons.lang3.ClassPathUtilsTest.testToFullyQualifiedNameNullClassString":283,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":7,"org.apache.commons.lang3.StringUtilsTest.testLengthStringBuilder":227,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":117,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":292,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testMilleniumBug":306,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringCharArray":259,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testAbove":289,"org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss":257,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":158,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetInitializerUnknown":51,"org.apache.commons.lang3.concurrent.CallableBackgroundInitializerTest.testInitNullCallable":67,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":102,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":193,"org.apache.commons.lang3.ClassPathUtilsTest.testToFullyQualifiedNameClassString":284,"org.apache.commons.lang3.BooleanUtilsTest.test_isNotFalse_Boolean":24,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetExceptionUnknown":47,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":217,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testInitializeTempExecutor":43,"org.apache.commons.lang3.StringUtilsTest.testLengthStringBuffer":224,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeExactConstructor":0,"org.apache.commons.lang3.StringUtilsTest.testLength_CharBuffer":225,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":171,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":116,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":326,"org.apache.commons.lang3.ConversionTest.testByteArrayToLong":64,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":144,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":246,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testAddInitializerNullName":74,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":134,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLowYearPadding":307,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeNoChildren":53,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeTempExec":49,"org.apache.commons.lang3.StringUtilsTest.testRemovePattern":247,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_StrMatcher":272,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":188,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":179,"org.apache.commons.lang3.ArrayUtilsTest.testCloneDouble":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":136,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":189,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":319,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":77,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStrip_String":19,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils":21,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":305,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":122,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsertWithNullText":13,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":115,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":133,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":316,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":253,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":180,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":85},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSet:247","type":"CtBinaryOperatorImpl","sourcecode":"obj == (org.apache.commons.lang3.CharSet.this)"},"failures":[],"tindex":"d1f18202-3e50-11e6-85e0-5d1ce8f39447","method":{"position":"org.apache.commons.lang3.mutable.MutableLong:235","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof org.apache.commons.lang3.mutable.MutableLong) {\n        return (long) == (((org.apache.commons.lang3.mutable.MutableLong)(obj)).longValue());\n    } \n    return false;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj","this":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.InstantiationException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2980","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[0],"tindex":"d1f2ba83-3e50-11e6-85e0-6bc98202463d","method":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:168","type":"CtMethodImpl","sourcecode":"public static <T>T invokeExactConstructor(final java.lang.Class<T> cls, java.lang.Object[] args, java.lang.Class<?>[] parameterTypes) throws java.lang.IllegalAccessException, java.lang.InstantiationException, java.lang.NoSuchMethodException, java.lang.reflect.InvocationTargetException {\n    if (args == null) {\n        {\n            args = org.apache.commons.lang3.ArrayUtils.nullToEmpty(args);\n            parameterTypes = org.apache.commons.lang3.ArrayUtils.nullToEmpty(parameterTypes);\n            final java.lang.reflect.Constructor<T> java.lang.reflect.Constructor<T> = org.apache.commons.lang3.reflect.ConstructorUtils.getAccessibleConstructor(cls, parameterTypes);\n            if (ctor == null) {\n                throw new java.lang.NoSuchMethodException((\"No such accessible constructor on object: \" + (cls.getName())));\n            } \n            return ctor.newInstance(args);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.InstantiationException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"args"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4951","type":"CtBinaryOperatorImpl","sourcecode":"end < 0"},"failures":[1],"tindex":"d1f2e194-3e50-11e6-85e0-418ab797ede9","method":{"position":"org.apache.commons.lang3.ArrayUtils:994","type":"CtMethodImpl","sourcecode":"public static short[] subarray(final short[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (endIndexExclusive < 0) {\n        {\n            if (array == null) {\n                return null;\n            } \n            if (startIndexInclusive < 0) {\n                startIndexInclusive = 0;\n            } \n            if (endIndexExclusive > (array.int)) {\n                endIndexExclusive = array.int;\n            } \n            final int int = endIndexExclusive - startIndexInclusive;\n            if (newSize <= 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.short[];\n            } \n            final short[] short[] = new short[newSize];\n            java.lang.System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);\n            return subarray;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"end":"endIndexExclusive"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:803","type":"CtBinaryOperatorImpl","sourcecode":"expression == false"},"failures":[],"tindex":"d1f308a5-3e50-11e6-85e0-854660de9c8a","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1193","type":"CtMethodImpl","sourcecode":"public void setEnableSubstitutionInVariables(final boolean enableSubstitutionInVariables) {\n    if (enableSubstitutionInVariables == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.text.StrSubstitutor.this.boolean = enableSubstitutionInVariables;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"expression":"enableSubstitutionInVariables"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDatePrinter:312","type":"CtBinaryOperatorImpl","sourcecode":"peek == c"},"failures":[],"tindex":"d1f32fb6-3e50-11e6-85e0-6f30bfaf9585","method":{"position":"org.apache.commons.lang3.CharUtils:87","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static java.lang.Character toCharacterObject(final char ch) {\n    if (ch == ch) {\n        {\n            return java.lang.Character.valueOf(ch);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"ch","peek":"ch"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Range:383","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.lang3.Range.this.isOverlappedBy(other))"},"failures":[],"tindex":"d1f32fb7-3e50-11e6-85e0-b388f635b09b","method":{"position":"org.apache.commons.lang3.Range:368","type":"CtMethodImpl","sourcecode":"public boolean isBeforeRange(final org.apache.commons.lang3.Range<T> otherRange) {\n    if (otherRange == null) {\n        return false;\n    } \n    return isBefore(otherRange.T);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"other":"otherRange","this":"otherRange"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:86","type":"CtBinaryOperatorImpl","sourcecode":"(firstChar == 'x') || (firstChar == 'X')"},"failures":[],"tindex":"d1f356c8-3e50-11e6-85e0-431c31e231b7","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1869","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder replaceFirst(final char search, final char replace) {\n    if ((replace == 'x') || (firstChar == 'X')) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((replace == 'x') || (firstChar == 'X')) {\n                {\n                    if (search != replace) {\n                        for (int int = 0 ; i < (int) ; i++) {\n                            if ((char[][i]) == search) {\n                                char[][i] = replace;\n                                break;\n                            } \n                        }\n                    } \n                    return org.apache.commons.lang3.text.StrBuilder.this;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"firstChar":"replace"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:461","type":"CtInvocationImpl","sourcecode":"str.startsWith(pfx)"},"failures":[],"tindex":"d1f37dd9-3e50-11e6-85e0-954184a92c53","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:230","type":"CtMethodImpl","sourcecode":"public static java.lang.String replaceSystemProperties(final java.lang.Object source) {\n    if (source.startsWith(source)) {\n        {\n            return new org.apache.commons.lang3.text.StrSubstitutor(org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup()).replace(source);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"source","pfx":"source"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1389","type":"CtBinaryOperatorImpl","sourcecode":"hasDecPoint || hasExp"},"failures":[],"tindex":"d1f37dda-3e50-11e6-85e0-ab1ad8e55c85","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:379","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setFieldSeparatorAtStart(final boolean fieldSeparatorAtStart) {\n    if (fieldSeparatorAtStart || fieldSeparatorAtStart) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            super.setFieldSeparatorAtStart(fieldSeparatorAtStart);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"hasDecPoint":"fieldSeparatorAtStart","hasExp":"fieldSeparatorAtStart"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2769","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[],"tindex":"d1f3a4eb-3e50-11e6-85e0-2f87a5e3a615","method":{"position":"org.apache.commons.lang3.Conversion:833","type":"CtMethodImpl","sourcecode":"public static int byteArrayToInt(final byte[] src, final int srcPos, final int dstInit, final int dstPos, final int nBytes) {\n    if (srcPos < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((((src.int) == 0) && (srcPos == 0)) || (0 == nBytes)) {\n                return dstInit;\n            } \n            if ((((nBytes - 1) * 8) + dstPos) >= 32) {\n                throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+dstPos is greather or equal to than 32\");\n            } \n            int int = dstInit;\n            int int = 0;\n            for (int int = 0 ; i < nBytes ; i++) {\n                shift = (i * 8) + dstPos;\n                final int int = (255 & (src[(i + srcPos)])) << shift;\n                final int int = 255 << shift;\n                out = (out & (~mask)) | bits;\n            }\n            return out;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"srcPos"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1102","type":"CtBinaryOperatorImpl","sourcecode":"c < a"},"failures":[],"tindex":"d1f3cbfc-3e50-11e6-85e0-7730f9423414","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:397","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.String format(final long millis) {\n    if (millis < millis) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Calendar java.util.Calendar = newCalendar();\n            c.setTimeInMillis(millis);\n            return applyRulesToString(c);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"millis","c":"millis"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3088","type":"CtBinaryOperatorImpl","sourcecode":"separatorChars == null"},"failures":[2,3,4,5,6,7,8,9],"tindex":"d1f3cbfd-3e50-11e6-85e0-c31d7b7be342","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2097","type":"CtMethodImpl","sourcecode":"protected void setSummaryObjectEndText(java.lang.String summaryObjectEndText) {\n    if (summaryObjectEndText == null) {\n        {\n            if (summaryObjectEndText == null) {\n                summaryObjectEndText = \"\";\n            } \n            org.apache.commons.lang3.builder.ToStringStyle.this.java.lang.String = summaryObjectEndText;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"separatorChars":"summaryObjectEndText"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1007","type":"CtBinaryOperatorImpl","sourcecode":"prefix == null"},"failures":[10,11],"tindex":"d1f3f30e-3e50-11e6-85e0-63357414a5d1","method":{"position":"org.apache.commons.lang3.StringUtils:2946","type":"CtMethodImpl","sourcecode":"private static java.lang.String[] splitWorker(final java.lang.String str, final char separatorChar, final boolean preserveAllTokens) {\n    if (preserveAllTokens) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (str == null) {\n                        return null;\n                    } \n                    final int int = str.length();\n                    if (len == 0) {\n                        return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.String[];\n                    } \n                    final java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                    int int = 0;\n                    int int = 0;\n                    boolean boolean = false;\n                    boolean boolean = false;\n                    while (i < len) {\n                        if ((str.charAt(i)) == separatorChar) {\n                            if (match || preserveAllTokens) {\n                                list.add(str.substring(start, i));\n                                match = false;\n                                lastMatch = true;\n                            } \n                            start = ++i;\n                            continue;\n                        } \n                        lastMatch = false;\n                        match = true;\n                        i++;\n                    }\n                    if (match || (preserveAllTokens && lastMatch)) {\n                        list.add(str.substring(start, i));\n                    } \n                    return list.toArray(new java.lang.String[list.size()]);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"prefix":"str"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:520","type":"CtBinaryOperatorImpl","sourcecode":"toGenericArrayType == null"},"failures":[],"tindex":"d1f41a1f-3e50-11e6-85e0-b71a14672b1b","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1825","type":"CtMethodImpl","sourcecode":"private static java.lang.String genericArrayTypeToString(java.lang.reflect.GenericArrayType g) {\n    if (g == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.String.format(\"%s[]\", org.apache.commons.lang3.reflect.TypeUtils.toString(g.getGenericComponentType()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toGenericArrayType":"g"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:604","type":"CtBinaryOperatorImpl","sourcecode":"(chars) == null"},"failures":[12],"tindex":"d1f44130-3e50-11e6-85e0-1defb77ff026","method":{"position":"org.apache.commons.lang3.ArrayUtils:5622","type":"CtMethodImpl","sourcecode":"public static char[] removeElements(final char[] array, final char... values) {\n    if (array == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            final java.util.HashMap<java.lang.Character, org.apache.commons.lang3.mutable.MutableInt> java.util.HashMap<java.lang.Character, org.apache.commons.lang3.mutable.MutableInt> = new java.util.HashMap<java.lang.Character, org.apache.commons.lang3.mutable.MutableInt>(values.int);\n            for (final char char : values) {\n                final java.lang.Character java.lang.Character = java.lang.Character.valueOf(v);\n                final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = occurrences.get(boxed);\n                if (count == null) {\n                    occurrences.put(boxed, new org.apache.commons.lang3.mutable.MutableInt(1));\n                } else {\n                    count.increment();\n                }\n            }\n            final java.util.BitSet java.util.BitSet = new java.util.BitSet();\n            for (final java.util.Map.Entry<java.lang.Character, org.apache.commons.lang3.mutable.MutableInt> java.util.Map.Entry<java.lang.Character, org.apache.commons.lang3.mutable.MutableInt> : occurrences.entrySet()) {\n                final java.lang.Character java.lang.Character = e.getKey();\n                int int = 0;\n                for (int int = 0, int int = e.getValue().intValue() ; i < ct ; i++) {\n                    found = org.apache.commons.lang3.ArrayUtils.indexOf(array, v.charValue(), found);\n                    if (found < 0) {\n                        break;\n                    } \n                    toRemove.set((found++));\n                }\n            }\n            return ((char[])(org.apache.commons.lang3.ArrayUtils.removeAll(array, toRemove)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chars":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:86","type":"CtBinaryOperatorImpl","sourcecode":"(firstChar == 'x') || (firstChar == 'X')"},"failures":[],"tindex":"d1f46841-3e50-11e6-85e0-ff59516a4c13","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1869","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder replaceFirst(final char search, final char replace) {\n    if ((replace == 'x') || (firstChar == 'X')) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((replace == 'x') || (firstChar == 'X')) {\n                {\n                    if (search != replace) {\n                        for (int int = 0 ; i < (int) ; i++) {\n                            if ((char[][i]) == search) {\n                                char[][i] = replace;\n                                break;\n                            } \n                        }\n                    } \n                    return org.apache.commons.lang3.text.StrBuilder.this;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"firstChar":"replace"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSequenceUtils:204","type":"CtUnaryOperatorImpl","sourcecode":"!ignoreCase"},"failures":[],"tindex":"d1f46842-3e50-11e6-85e0-091eacfdb81d","method":{"position":"org.apache.commons.lang3.ArrayUtils:4706","type":"CtMethodImpl","sourcecode":"public static boolean[] removeElement(final boolean[] array, final boolean element) {\n    if (!element) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = org.apache.commons.lang3.ArrayUtils.indexOf(array, element);\n            if (index == (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int)) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            return org.apache.commons.lang3.ArrayUtils.remove(array, index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ignoreCase":"element"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:86","type":"CtBinaryOperatorImpl","sourcecode":"consumed == 0"},"failures":[13,14],"tindex":"d1f48f53-3e50-11e6-85e0-91678a48e949","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1521","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder insert(final int index, final char[] chars) {\n    if (index == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            validateIndex(index);\n            if (chars == null) {\n                return insert(index, java.lang.String);\n            } \n            final int int = chars.int;\n            if (len > 0) {\n                ensureCapacity(((int) + len));\n                java.lang.System.arraycopy(char[], index, char[], (index + len), ((int) - index));\n                java.lang.System.arraycopy(chars, 0, char[], index, len);\n                int += len;\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"consumed":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:663","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(tok)"},"failures":[15,16,17,18,19],"tindex":"d1f48f54-3e50-11e6-85e0-3780a4b55776","method":{"position":"org.apache.commons.lang3.StringUtils:584","type":"CtMethodImpl","sourcecode":"public static java.lang.String strip(java.lang.String str, final java.lang.String stripChars) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n                return str;\n            } \n            str = org.apache.commons.lang3.StringUtils.stripStart(str, stripChars);\n            return org.apache.commons.lang3.StringUtils.stripEnd(str, stripChars);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"tok":"str"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:646","type":"CtBinaryOperatorImpl","sourcecode":"(lhs == null) || (rhs == null)"},"failures":[20],"tindex":"d1f48f55-3e50-11e6-85e0-8922b0dae98d","method":{"position":"org.apache.commons.lang3.ObjectUtils:316","type":"CtMethodImpl","sourcecode":"public static void identityToString(final org.apache.commons.lang3.text.StrBuilder builder, final java.lang.Object object) {\n    if ((object == null) || (object == null)) {\n        {\n            if (object == null) {\n                throw new java.lang.NullPointerException(\"Cannot get the toString of a null identity\");\n            } \n            builder.append(object.getClass().getName()).append('@').append(java.lang.Integer.toHexString(java.lang.System.identityHashCode(object)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"object","rhs":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1523","type":"CtBinaryOperatorImpl","sourcecode":"(dstPos + i) == append"},"failures":[21],"tindex":"d1f4b666-3e50-11e6-85e0-8db8fd534f76","method":{"position":"org.apache.commons.lang3.RandomStringUtils:162","type":"CtMethodImpl","sourcecode":"public static java.lang.String random(final int count, final int start, final int end, final boolean letters, final boolean numbers) {\n    if ((count + start) == start) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.RandomStringUtils.random(count, start, end, letters, numbers, null, org.apache.commons.lang3.RandomStringUtils.org.apache.commons.lang3.RandomStringUtils.java.util.Random);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dstPos":"count","i":"start","append":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1138","type":"CtBinaryOperatorImpl","sourcecode":"c < a"},"failures":[22],"tindex":"d1f4b667-3e50-11e6-85e0-37604d5778c8","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1240","type":"CtMethodImpl","sourcecode":"public static short max(short a, final short b, final short c) {\n    if (b < b) {\n        {\n            if (b > a) {\n                a = b;\n            } \n            if (c > a) {\n                a = c;\n            } \n            return a;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","c":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:391","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[23],"tindex":"d1f4b668-3e50-11e6-85e0-6f7ce1aae2b0","method":{"position":"org.apache.commons.lang3.StringUtils:6219","type":"CtMethodImpl","sourcecode":"public static java.lang.String defaultString(final java.lang.String str, final java.lang.String defaultStr) {\n    if (str == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return str == null ? defaultStr : str;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"str"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:176","type":"CtBinaryOperatorImpl","sourcecode":"bool == null"},"failures":[24],"tindex":"d1f4dd79-3e50-11e6-85e0-1ff1b637bb36","method":{"position":"org.apache.commons.lang3.BooleanUtils:140","type":"CtMethodImpl","sourcecode":"public static boolean isNotFalse(final java.lang.Boolean bool) {\n    if (bool == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return !(org.apache.commons.lang3.BooleanUtils.isFalse(bool));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bool":"bool"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:863","type":"CtBinaryOperatorImpl","sourcecode":"(lhs == null) || (rhs == null)"},"failures":[25],"tindex":"d1f5048a-3e50-11e6-85e0-11bf552b2d19","method":{"position":"org.apache.commons.lang3.ArrayUtils:3936","type":"CtMethodImpl","sourcecode":"public static float[] addAll(final float[] array1, final float... array2) {\n    if ((array1 == null) || (array1 == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array1 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array2);\n            } else if (array2 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array1);\n            } \n            final float[] float[] = new float[(array1.int) + (array2.int)];\n            java.lang.System.arraycopy(array1, 0, joinedArray, 0, array1.int);\n            java.lang.System.arraycopy(array2, 0, joinedArray, array1.int, array2.int);\n            return joinedArray;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array1","rhs":"array1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3225","type":"CtInvocationImpl","sourcecode":"str.isEmpty()"},"failures":[],"tindex":"d1f68b2b-3e50-11e6-85e0-b935f410aa37","method":{"position":"org.apache.commons.lang3.StringUtils:1874","type":"CtMethodImpl","sourcecode":"public static boolean containsNone(final java.lang.CharSequence cs, final char... searchChars) {\n    if (cs.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((cs == null) || (searchChars == null)) {\n                return true;\n            } \n            final int int = cs.length();\n            final int int = csLen - 1;\n            final int int = searchChars.int;\n            final int int = searchLen - 1;\n            for (int int = 0 ; i < csLen ; i++) {\n                final char char = cs.charAt(i);\n                for (int int = 0 ; j < searchLen ; j++) {\n                    if ((searchChars[j]) == ch) {\n                        if (java.lang.Character.isHighSurrogate(ch)) {\n                            if (j == searchLast) {\n                                return false;\n                            } \n                            if ((i < csLast) && ((searchChars[(j + 1)]) == (cs.charAt((i + 1))))) {\n                                return false;\n                            } \n                        } else {\n                            return false;\n                        }\n                    } \n                }\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"cs"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:690","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[26,27,25,28],"tindex":"d1f6b23c-3e50-11e6-85e0-e50cf1dd1dac","method":{"position":"org.apache.commons.lang3.ArrayUtils:418","type":"CtMethodImpl","sourcecode":"public static double[] clone(final double[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } \n            return array.clone();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharRange:186","type":"CtFieldReadImpl","sourcecode":"negated"},"failures":[29,30],"tindex":"d1f6b23d-3e50-11e6-85e0-ad2ade5156e2","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:1048","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrTokenizer setIgnoreEmptyTokens(final boolean ignoreEmptyTokens) {\n    if (ignoreEmptyTokens) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.text.StrTokenizer.this.boolean = ignoreEmptyTokens;\n            return org.apache.commons.lang3.text.StrTokenizer.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"negated":"ignoreEmptyTokens"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:474","type":"CtBinaryOperatorImpl","sourcecode":"input != null"},"failures":[31],"tindex":"d1f6d94e-3e50-11e6-85e0-31cad03c0d18","method":{"position":"org.apache.commons.lang3.StringUtils:6167","type":"CtMethodImpl","sourcecode":"public static boolean isAllUpperCase(final java.lang.CharSequence cs) {\n    if (cs != null) {\n        {\n            if ((cs == null) || (org.apache.commons.lang3.StringUtils.isEmpty(cs))) {\n                return false;\n            } \n            final int int = cs.length();\n            for (int int = 0 ; i < sz ; i++) {\n                if ((java.lang.Character.isUpperCase(cs.charAt(i))) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"cs"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:339","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[32,33,34],"tindex":"d1f6d94f-3e50-11e6-85e0-11bf81666bec","method":{"position":"org.apache.commons.lang3.StringUtils:417","type":"CtMethodImpl","sourcecode":"public static java.lang.String trim(final java.lang.String str) {\n    if (str == null) {\n        {\n            return str == null ? null : str.trim();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"str"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:211","type":"CtBinaryOperatorImpl","sourcecode":"service != null"},"failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"tindex":"d1f6d950-3e50-11e6-85e0-9119cef8ef44","method":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:290","type":"CtMethodImpl","sourcecode":"private java.util.concurrent.Callable<T> createTask(final java.util.concurrent.ExecutorService execDestroy) {\n    if (execDestroy != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new InitializationTask(execDestroy);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"service":"execDestroy"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2132","type":"CtBinaryOperatorImpl","sourcecode":"startIndex > endIndex"},"failures":[58],"tindex":"d1f811d1-3e50-11e6-85e0-0ff38c397521","method":{"position":"org.apache.commons.lang3.Conversion:1356","type":"CtMethodImpl","sourcecode":"public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n    if (dstPos > nBytes) {\n        {\n            if (0 == nBytes) {\n                return dst;\n            } \n            if ((((nBytes - 1) * 8) + srcPos) >= 16) {\n                throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n            } \n            int int = 0;\n            for (int int = 0 ; i < nBytes ; i++) {\n                shift = (i * 8) + srcPos;\n                dst[(dstPos + i)] = ((byte)(255 & (src >> shift)));\n            }\n            return dst;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"dstPos","endIndex":"nBytes"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.AnnotationUtils:224","type":"CtBinaryOperatorImpl","sourcecode":"type == null"},"failures":[59,60,61,62,63],"tindex":"d1f811d2-3e50-11e6-85e0-39aab87e146c","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1742","type":"CtMethodImpl","sourcecode":"private static java.lang.String classToString(java.lang.Class<?> c) {\n    if (c == null) {\n        {\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            if ((c.getEnclosingClass()) != null) {\n                buf.append(org.apache.commons.lang3.reflect.TypeUtils.classToString(c.getEnclosingClass())).append('.').append(c.getSimpleName());\n            } else {\n                buf.append(c.getName());\n            }\n            if ((c.getTypeParameters().int) > 0) {\n                buf.append('<');\n                org.apache.commons.lang3.reflect.TypeUtils.appendAllTo(buf, \", \", c.getTypeParameters());\n                buf.append('>');\n            } \n            return buf.toString();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"c"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2769","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[64,65],"tindex":"d1f838e3-3e50-11e6-85e0-6ff632d01db1","method":{"position":"org.apache.commons.lang3.Conversion:796","type":"CtMethodImpl","sourcecode":"public static long byteArrayToLong(final byte[] src, final int srcPos, final long dstInit, final int dstPos, final int nBytes) {\n    if (dstPos < 0) {\n        {\n            if ((((src.int) == 0) && (srcPos == 0)) || (0 == nBytes)) {\n                return dstInit;\n            } \n            if ((((nBytes - 1) * 8) + dstPos) >= 64) {\n                throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+dstPos is greather or equal to than 64\");\n            } \n            long long = dstInit;\n            int int = 0;\n            for (int int = 0 ; i < nBytes ; i++) {\n                shift = (i * 8) + dstPos;\n                final long long = (255L & (src[(i + srcPos)])) << shift;\n                final long long = 255L << shift;\n                out = (out & (~mask)) | bits;\n            }\n            return out;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"dstPos"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:111","type":"CtBinaryOperatorImpl","sourcecode":"(!(java.lang.Character.isUpperCase(ch1))) || (!(java.lang.Character.isUpperCase(ch2)))"},"failures":[],"tindex":"d1f838e4-3e50-11e6-85e0-8314117b0742","method":{"position":"org.apache.commons.lang3.StringUtils:3759","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final short[] array, final char separator, final int startIndex, final int endIndex) {\n    if ((!(java.lang.Character.isUpperCase(separator))) || (!(java.lang.Character.isUpperCase(separator)))) {\n        {\n            if (array == null) {\n                return null;\n            } \n            final int int = endIndex - startIndex;\n            if (noOfItems <= 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder((noOfItems * 16));\n            for (int int = startIndex ; i < endIndex ; i++) {\n                if (i > startIndex) {\n                    buf.append(separator);\n                } \n                buf.append(array[i]);\n            }\n            return buf.toString();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch2":"separator","ch1":"separator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:884","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.math.Fraction.this) == other"},"failures":[],"tindex":"d1f85ff5-3e50-11e6-85e0-9b73e22cce34","method":{"position":"org.apache.commons.lang3.AnnotationUtils:242","type":"CtMethodImpl","sourcecode":"private static int hashMember(final java.lang.String name, final java.lang.Object value) {\n    final int int = (name.hashCode()) * 127;\n    if (value.getClass().isArray()) {\n        return part1 ^ (org.apache.commons.lang3.AnnotationUtils.arrayMemberHash(value.getClass().getComponentType(), value));\n    } \n    if (value instanceof java.lang.annotation.Annotation) {\n        return part1 ^ (org.apache.commons.lang3.AnnotationUtils.hashCode(((java.lang.annotation.Annotation)(value))));\n    } \n    return part1 ^ (value.hashCode());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"other":"value","this":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5122","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[66],"tindex":"d1f85ff6-3e50-11e6-85e0-1bf34a0b3cb9","method":{"position":"org.apache.commons.lang3.text.StrMatcher:205","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.StrMatcher stringMatcher(final java.lang.String str) {\n    if (str == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n                return org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher;\n            } \n            return new org.apache.commons.lang3.text.StrMatcher.StringMatcher(str);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:211","type":"CtBinaryOperatorImpl","sourcecode":"service != null"},"failures":[67,68,35,36,69,37,38,39,40,41,70,71,42,43,72,44,45,73,74,46,47,48,49,50,51,52,53,54,75,55,56,57],"tindex":"d1f85ff7-3e50-11e6-85e0-a55554408ad2","method":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:153","type":"CtMethodImpl","sourcecode":"public final synchronized void setExternalExecutor(final java.util.concurrent.ExecutorService externalExecutor) {\n    if (externalExecutor != null) {\n        {\n            if (isStarted()) {\n                throw new java.lang.IllegalStateException(\"Cannot set ExecutorService after start()!\");\n            } \n            org.apache.commons.lang3.concurrent.BackgroundInitializer.this.java.util.concurrent.ExecutorService = externalExecutor;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"service":"externalExecutor"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:461","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isUpperCase(ch)"},"failures":[76],"tindex":"d1f88708-3e50-11e6-85e0-93d3a3bc6cdf","method":{"position":"org.apache.commons.lang3.CharUtils:402","type":"CtMethodImpl","sourcecode":"public static boolean isAscii(final char ch) {\n    if (java.lang.Character.isUpperCase(ch)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ch < 128;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:596","type":"CtBinaryOperatorImpl","sourcecode":"toWildcardType == null"},"failures":[77,78,79,80,81,29,82,83,84,30,85,86,87,88,89,90,91,92,93,94,95,2,3,4,5,6,7,8,9,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217],"tindex":"d1f88709-3e50-11e6-85e0-7340a4615ff9","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1451","type":"CtMethodImpl","sourcecode":"protected void appendClassName(final java.lang.StringBuffer buffer, final java.lang.Object object) {\n    if (object == null) {\n        {\n            if ((boolean) && (object != null)) {\n                org.apache.commons.lang3.builder.ToStringStyle.register(object);\n                if (boolean) {\n                    buffer.append(getShortClassName(object.getClass()));\n                } else {\n                    buffer.append(object.getClass().getName());\n                }\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toWildcardType":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1813","type":"CtBinaryOperatorImpl","sourcecode":"insertLen != removeLen"},"failures":[218,219,220,221,222,223],"tindex":"d1f8ae1a-3e50-11e6-85e0-fde2c7ec364f","method":{"position":"org.apache.commons.lang3.BitField:94","type":"CtMethodImpl","sourcecode":"public int getRawValue(final int holder) {\n    if (holder != holder) {\n        {\n            return holder & (int);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"insertLen":"holder","removeLen":"holder"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1792","type":"CtBinaryOperatorImpl","sourcecode":"arraySeparator == null"},"failures":[224,225,226,227],"tindex":"d1f8ae1b-3e50-11e6-85e0-fd315fc63303","method":{"position":"org.apache.commons.lang3.StringUtils:5452","type":"CtMethodImpl","sourcecode":"public static int length(final java.lang.CharSequence cs) {\n    if (cs == null) {\n        {\n            return cs == null ? 0 : cs.length();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"arraySeparator":"cs"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1689","type":"CtBinaryOperatorImpl","sourcecode":"len > 0"},"failures":[228],"tindex":"d1f8d52c-3e50-11e6-85e0-4da2ac6b3024","method":{"position":"org.apache.commons.lang3.time.DateUtils:909","type":"CtMethodImpl","sourcecode":"public static java.util.Calendar ceiling(final java.util.Calendar date, final int field) {\n    if (field > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (date == null) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            final java.util.Calendar java.util.Calendar = ((java.util.Calendar)(date.clone()));\n            org.apache.commons.lang3.time.DateUtils.modify(ceiled, field, org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.int);\n            return ceiled;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"field"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6850","type":"CtBinaryOperatorImpl","sourcecode":"(s == null) || (t == null)"},"failures":[229,230],"tindex":"d1f8d52d-3e50-11e6-85e0-b93d177475cf","method":{"position":"org.apache.commons.lang3.time.DateUtils:1245","type":"CtMethodImpl","sourcecode":"public static java.util.Iterator<?> iterator(final java.lang.Object focus, final int rangeStyle) {\n    if ((focus == null) || (focus == null)) {\n        {\n            if (focus == null) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            if (focus instanceof java.util.Date) {\n                return org.apache.commons.lang3.time.DateUtils.iterator(((java.util.Date)(focus)), rangeStyle);\n            } else if (focus instanceof java.util.Calendar) {\n                return org.apache.commons.lang3.time.DateUtils.iterator(((java.util.Calendar)(focus)), rangeStyle);\n            } else {\n                throw new java.lang.ClassCastException((\"Could not iterate based on \" + focus));\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"s":"focus","t":"focus"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:221","type":"CtBinaryOperatorImpl","sourcecode":"(numerator == (java.lang.Integer.MIN_VALUE)) || (denominator == (java.lang.Integer.MIN_VALUE))"},"failures":[231],"tindex":"d1f8d52e-3e50-11e6-85e0-f550615bd260","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:210","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.time.FastDateFormat getDateInstance(final int style, final java.util.TimeZone timeZone) {\n    if ((style == style) || (style == (java.lang.Integer.java.lang.Integer.int))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getDateInstance(style, timeZone, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.lang.Integer.MIN_VALUE":"style","numerator":"style","denominator":"style"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDateParser:340","type":"CtVariableReadImpl","sourcecode":"unquote"},"failures":[232,233,234,235,236,237],"tindex":"d1f8fc3f-3e50-11e6-85e0-2f8424a11836","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:332","type":"CtMethodImpl","sourcecode":"public static <T>int reflectionHashCode(final int initialNonZeroOddNumber, final int multiplierNonZeroOddNumber, final T object, final boolean testTransients, final java.lang.Class<? super T> reflectUpToClass, final java.lang.String... excludeFields) {\n    if (testTransients) {\n        {\n            if (object == null) {\n                throw new java.lang.IllegalArgumentException(\"The object to build a hash code for must not be null\");\n            } \n            final org.apache.commons.lang3.builder.HashCodeBuilder org.apache.commons.lang3.builder.HashCodeBuilder = new org.apache.commons.lang3.builder.HashCodeBuilder(initialNonZeroOddNumber , multiplierNonZeroOddNumber);\n            java.lang.Class<?> java.lang.Class<?> = object.getClass();\n            org.apache.commons.lang3.builder.HashCodeBuilder.reflectionAppend(object, clazz, builder, testTransients, excludeFields);\n            while (((clazz.getSuperclass()) != null) && (clazz != reflectUpToClass)) {\n                clazz = clazz.getSuperclass();\n                org.apache.commons.lang3.builder.HashCodeBuilder.reflectionAppend(object, clazz, builder, testTransients, excludeFields);\n            }\n            return builder.toHashCode();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"unquote":"testTransients"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1492","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[238,239],"tindex":"d1f8fc40-3e50-11e6-85e0-df69414dd4be","method":{"position":"org.apache.commons.lang3.ArrayUtils:3001","type":"CtMethodImpl","sourcecode":"public static java.lang.Character[] toObject(final char[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Character[];\n            } \n            final java.lang.Character[] java.lang.Character[] = new java.lang.Character[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = java.lang.Character.valueOf(array[i]);\n            }\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1257","type":"CtBinaryOperatorImpl","sourcecode":"0 == nShorts"},"failures":[240],"tindex":"d1f92251-3e50-11e6-85e0-597e3254ec57","method":{"position":"org.apache.commons.lang3.Conversion:1584","type":"CtMethodImpl","sourcecode":"public static boolean[] intToBinary(final int src, final int srcPos, final boolean[] dst, final int dstPos, final int nBools) {\n    if (0 == srcPos) {\n        {\n            if (0 == nBools) {\n                return dst;\n            } \n            if (((nBools - 1) + srcPos) >= 32) {\n                throw new java.lang.IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 32\");\n            } \n            int int = 0;\n            for (int int = 0 ; i < nBools ; i++) {\n                shift = (i * 1) + srcPos;\n                dst[(dstPos + i)] = (1 & (src >> shift)) != 0;\n            }\n            return dst;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nShorts":"srcPos"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.FieldUtils:686","type":"CtVariableReadImpl","sourcecode":"doForceAccess"},"failures":[],"tindex":"d1fb6c42-3e50-11e6-85e0-9d1ed52f2b63","method":{"position":"org.apache.commons.lang3.StringUtils:2946","type":"CtMethodImpl","sourcecode":"private static java.lang.String[] splitWorker(final java.lang.String str, final char separatorChar, final boolean preserveAllTokens) {\n    if (preserveAllTokens) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (str == null) {\n                        return null;\n                    } \n                    final int int = str.length();\n                    if (len == 0) {\n                        return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.String[];\n                    } \n                    final java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                    int int = 0;\n                    int int = 0;\n                    boolean boolean = false;\n                    boolean boolean = false;\n                    while (i < len) {\n                        if ((str.charAt(i)) == separatorChar) {\n                            if (match || preserveAllTokens) {\n                                list.add(str.substring(start, i));\n                                match = false;\n                                lastMatch = true;\n                            } \n                            start = ++i;\n                            continue;\n                        } \n                        lastMatch = false;\n                        match = true;\n                        i++;\n                    }\n                    if (match || (preserveAllTokens && lastMatch)) {\n                        list.add(str.substring(start, i));\n                    } \n                    return list.toArray(new java.lang.String[list.size()]);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"doForceAccess":"preserveAllTokens"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:694","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[],"tindex":"d1fb9353-3e50-11e6-85e0-5345ffd4f9f9","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2677","type":"CtMethodImpl","sourcecode":"public boolean equals(final org.apache.commons.lang3.text.StrBuilder other) {\n    if (other == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.text.StrBuilder.this) == other) {\n                return true;\n            } \n            if ((org.apache.commons.lang3.text.StrBuilder.this.int) != (other.int)) {\n                return false;\n            } \n            final char[] char[] = org.apache.commons.lang3.text.StrBuilder.this.char[];\n            final char[] char[] = other.char[];\n            for (int int = (int) - 1 ; i >= 0 ; i--) {\n                if ((thisBuf[i]) != (otherBuf[i])) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"other"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:173","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[241],"tindex":"d1fc0884-3e50-11e6-85e0-319144531f27","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1214","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendSeparator(final java.lang.String separator) {\n    if (separator == null) {\n        {\n            return appendSeparator(separator, null);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"separator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.ObjectUtils:240","type":"CtBinaryOperatorImpl","sourcecode":"objects != null"},"failures":[242,243],"tindex":"d1fc2f95-3e50-11e6-85e0-572a29ca9b15","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:742","type":"CtMethodImpl","sourcecode":"public static void writeField(final java.lang.Object target, final java.lang.String fieldName, final java.lang.Object value, final boolean forceAccess) throws java.lang.IllegalAccessException {\n    if (value != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IllegalAccessException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.isTrue((target != null), \"target object must not be null\");\n            final java.lang.Class<?> java.lang.Class<?> = target.getClass();\n            final java.lang.reflect.Field java.lang.reflect.Field = org.apache.commons.lang3.reflect.FieldUtils.getField(cls, fieldName, forceAccess);\n            org.apache.commons.lang3.Validate.isTrue((field != null), \"Cannot locate declared field %s.%s\", cls.getName(), fieldName);\n            org.apache.commons.lang3.reflect.FieldUtils.writeField(field, target, value, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objects":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:957","type":"CtBinaryOperatorImpl","sourcecode":"ignored != null"},"failures":[120,120,121,122,122,123,124,125,126,127,128,129,129,130,131,132,133,134,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,244,154,155,156,157,157,158,159,160,160,161,162,163,164,165,165,166,167,167,245,168,169,170,171,172,173,174,174,175,176,177,178,246,179,180,181,182],"tindex":"d1fcf2e6-3e50-11e6-85e0-bf33b5ef53eb","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:581","type":"CtMethodImpl","sourcecode":"protected void appendCyclicObject(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final java.lang.Object value) {\n    if (value != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.ObjectUtils.identityToString(buffer, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ignored":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5411","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[247,248],"tindex":"d1fd19f7-3e50-11e6-85e0-09d1b0012225","method":{"position":"org.apache.commons.lang3.StringUtils:4441","type":"CtMethodImpl","sourcecode":"public static java.lang.String replacePattern(final java.lang.String source, final java.lang.String regex, final java.lang.String replacement) {\n    if (source == null) {\n        {\n            return java.util.regex.Pattern.compile(regex, java.util.regex.Pattern.java.util.regex.Pattern.int).matcher(source).replaceAll(replacement);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"source"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:585","type":"CtBinaryOperatorImpl","sourcecode":"(comparison) != 0"},"failures":[],"tindex":"d1fd19f8-3e50-11e6-85e0-bfa00540f8a2","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:752","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic final void appendTo(final java.lang.StringBuffer buffer, final int value) {\n    if (value != 0) {\n        {\n            if (value < 10) {\n                buffer.append(((char)(value + '0')));\n            } else if (value < 100) {\n                buffer.append(((char)((value / 10) + '0')));\n                buffer.append(((char)((value % 10) + '0')));\n            } else {\n                buffer.append(java.lang.Integer.toString(value));\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparison":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:256","type":"CtBinaryOperatorImpl","sourcecode":"buffer == null"},"failures":[],"tindex":"d1fd19f9-3e50-11e6-85e0-15fd5c4753c7","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1511","type":"CtMethodImpl","sourcecode":"protected void appendFieldSeparator(final java.lang.StringBuffer buffer) {\n    if (buffer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(java.lang.String);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"buffer":"buffer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:884","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.math.Fraction.this) == other"},"failures":[],"tindex":"d1fd410a-3e50-11e6-85e0-3d99430ce966","method":{"position":"org.apache.commons.lang3.math.Fraction:712","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.math.Fraction add(final org.apache.commons.lang3.math.Fraction fraction) {\n    return addSub(fraction, true);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"other":"fraction","this":"fraction"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:832","type":"CtBinaryOperatorImpl","sourcecode":"(lhs == null) || (rhs == null)"},"failures":[249],"tindex":"d1fd410b-3e50-11e6-85e0-57c0e39742c4","method":{"position":"org.apache.commons.lang3.ArrayUtils:1335","type":"CtMethodImpl","sourcecode":"public static boolean isSameLength(final double[] array1, final double[] array2) {\n    if ((array1 == null) || (array2 == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((((array1 == null) && (array2 != null)) && ((array2.int) > 0)) || (((array2 == null) && (array1 != null)) && ((array1.int) > 0))) || (((array1 != null) && (array2 != null)) && ((array1.int) != (array2.int)))) {\n                return false;\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array1","rhs":"array2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:884","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.math.Fraction.this) == other"},"failures":[],"tindex":"d1fd410c-3e50-11e6-85e0-d77db62f7131","method":{"position":"org.apache.commons.lang3.ClassUtils:1057","type":"CtMethodImpl","sourcecode":"public static java.lang.String getPackageCanonicalName(final java.lang.Object object, final java.lang.String valueIfNull) {\n    if (object == null) {\n        return valueIfNull;\n    } \n    return org.apache.commons.lang3.ClassUtils.getPackageCanonicalName(object.getClass().getName());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"other":"object","this":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:120","type":"CtBinaryOperatorImpl","sourcecode":"(str.charAt(3)) != '_'"},"failures":[250,251,252,253,254,255,256,257],"tindex":"d1fd410d-3e50-11e6-85e0-8f7710f14a0b","method":{"position":"org.apache.commons.lang3.math.NumberUtils:655","type":"CtMethodImpl","sourcecode":"public static java.lang.Float createFloat(final java.lang.String str) {\n    if ((str.charAt(3)) != '_') {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return null;\n            } \n            return java.lang.Float.valueOf(str);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:163","type":"CtBinaryOperatorImpl","sourcecode":"(ex.getCause()) instanceof java.lang.Error"},"failures":[],"tindex":"d1fd681e-3e50-11e6-85e0-895b018398a1","method":{"position":"org.apache.commons.lang3.text.StrBuilder:461","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder append(final java.lang.Object obj) {\n    if ((obj.getCause()) instanceof java.lang.Error) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == null) {\n                return appendNull();\n            } \n            return append(obj.toString());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ex":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1007","type":"CtBinaryOperatorImpl","sourcecode":"0 == nHex"},"failures":[],"tindex":"d1fd681f-3e50-11e6-85e0-e5f7500fad92","method":{"position":"org.apache.commons.lang3.time.DateUtils:1761","type":"CtMethodImpl","sourcecode":"public static int truncatedCompareTo(final java.util.Calendar cal1, final java.util.Calendar cal2, final int field) {\n    if (0 == field) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Calendar java.util.Calendar = org.apache.commons.lang3.time.DateUtils.truncate(cal1, field);\n            final java.util.Calendar java.util.Calendar = org.apache.commons.lang3.time.DateUtils.truncate(cal2, field);\n            return truncatedCal1.compareTo(truncatedCal2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nHex":"field"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:808","type":"CtBinaryOperatorImpl","sourcecode":"(comparison) != 0"},"failures":[],"tindex":"d1fe2b70-3e50-11e6-85e0-7189ce43f918","method":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:230","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setFormatByArgumentIndex(final int argumentIndex, final java.text.Format newFormat) {\n    if (argumentIndex != 0) {\n        {\n            throw new java.lang.UnsupportedOperationException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparison":"argumentIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2416","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(separator)"},"failures":[],"tindex":"d1fe2b71-3e50-11e6-85e0-9f40860862c9","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:604","type":"CtMethodImpl","sourcecode":"public static final java.lang.String escapeHtml3(final java.lang.String input) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(input)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"separator":"input"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5283","type":"CtBinaryOperatorImpl","sourcecode":"found < 0"},"failures":[],"tindex":"d1fe5282-3e50-11e6-85e0-91d4e46e7f77","method":{"position":"org.apache.commons.lang3.time.DateUtils:1516","type":"CtMethodImpl","sourcecode":"public static long getFragmentInSeconds(final java.util.Calendar calendar, final int fragment) {\n    if (fragment < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"found":"fragment"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1244","type":"CtBinaryOperatorImpl","sourcecode":"c > a"},"failures":[],"tindex":"d1fe5283-3e50-11e6-85e0-2b5668c415e5","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:494","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final short lhs, final short rhs) {\n    if (rhs > rhs) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            int = lhs < rhs ? -1 : lhs > rhs ? 1 : 0;\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"rhs","c":"rhs"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1818","type":"CtBinaryOperatorImpl","sourcecode":"contentStart == null"},"failures":[258],"tindex":"d1fe5284-3e50-11e6-85e0-659142728ceb","method":{"position":"org.apache.commons.lang3.math.NumberUtils:148","type":"CtMethodImpl","sourcecode":"public static long toLong(final java.lang.String str) {\n    if (str == null) {\n        {\n            return org.apache.commons.lang3.math.NumberUtils.toLong(str, 0L);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"contentStart":"str"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:430","type":"CtUnaryOperatorImpl","sourcecode":"!(java.util.Arrays.equals(lhs, rhs))"},"failures":[25],"tindex":"d1fe7995-3e50-11e6-85e0-9d819eb0f67e","method":{"position":"org.apache.commons.lang3.ArrayUtils:3965","type":"CtMethodImpl","sourcecode":"public static double[] addAll(final double[] array1, final double... array2) {\n    if (!(java.util.Arrays.equals(array2, array2))) {\n        {\n            if (array1 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array2);\n            } else if (array2 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array1);\n            } \n            final double[] double[] = new double[(array1.int) + (array2.int)];\n            java.lang.System.arraycopy(array1, 0, joinedArray, 0, array1.int);\n            java.lang.System.arraycopy(array2, 0, joinedArray, array1.int, array2.int);\n            return joinedArray;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array2","rhs":"array2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:634","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[259],"tindex":"d1feeec6-3e50-11e6-85e0-d58483c82894","method":{"position":"org.apache.commons.lang3.StringUtils:1536","type":"CtMethodImpl","sourcecode":"public static int indexOfAny(final java.lang.CharSequence cs, final char... searchChars) {\n    if (cs == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(cs)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(searchChars))) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            final int int = cs.length();\n            final int int = csLen - 1;\n            final int int = searchChars.int;\n            final int int = searchLen - 1;\n            for (int int = 0 ; i < csLen ; i++) {\n                final char char = cs.charAt(i);\n                for (int int = 0 ; j < searchLen ; j++) {\n                    if ((searchChars[j]) == ch) {\n                        if (((i < csLast) && (j < searchLast)) && (java.lang.Character.isHighSurrogate(ch))) {\n                            if ((searchChars[(j + 1)]) == (cs.charAt((i + 1)))) {\n                                return i;\n                            } \n                        } else {\n                            return i;\n                        }\n                    } \n                }\n            }\n            return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"cs"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSequenceUtils:124","type":"CtBinaryOperatorImpl","sourcecode":"start >= sz"},"failures":[],"tindex":"d1ff3ce7-3e50-11e6-85e0-2350864b4306","method":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:63","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.translate.UnicodeEscaper below(final int codepoint) {\n    if (codepoint >= codepoint) {\n        {\n            return org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(codepoint, java.lang.Integer.java.lang.Integer.int);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sz":"codepoint","start":"codepoint"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4171","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[260,261],"tindex":"d1ff3ce8-3e50-11e6-85e0-57881ffdbec8","method":{"position":"org.apache.commons.lang3.StringUtils:2665","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] split(final java.lang.String str, final java.lang.String separatorChars, final int max) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n        {\n            return org.apache.commons.lang3.StringUtils.splitWorker(str, separatorChars, max, false);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1205","type":"CtBinaryOperatorImpl","sourcecode":"b > a"},"failures":[262,263],"tindex":"d1ff63f9-3e50-11e6-85e0-852d9878465d","method":{"position":"org.apache.commons.lang3.ArrayUtils:3047","type":"CtMethodImpl","sourcecode":"public static long[] toPrimitive(final java.lang.Long[] array, final long valueForNull) {\n    if (valueForNull > valueForNull) {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.long[];\n            } \n            final long[] long[] = new long[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                final java.lang.Long java.lang.Long = array[i];\n                result[i] = b == null ? valueForNull : b.longValue();\n            }\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"valueForNull","b":"valueForNull"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:180","type":"CtBinaryOperatorImpl","sourcecode":"(tmp.length()) != (duration.length())"},"failures":[],"tindex":"d1ff63fa-3e50-11e6-85e0-a7c981e21dcb","method":{"position":"org.apache.commons.lang3.time.DateFormatUtils:262","type":"CtMethodImpl","sourcecode":"public static java.lang.String format(final java.util.Date date, final java.lang.String pattern, final java.util.Locale locale) {\n    if ((pattern.length()) != (pattern.length())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateFormatUtils.format(date, pattern, null, locale);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"duration":"pattern","tmp":"pattern"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:76","type":"CtBinaryOperatorImpl","sourcecode":"locale == null"},"failures":[264],"tindex":"d1ff63fb-3e50-11e6-85e0-513949312320","method":{"position":"org.apache.commons.lang3.time.DateFormatUtils:289","type":"CtMethodImpl","sourcecode":"public static java.lang.String format(final long millis, final java.lang.String pattern, final java.util.TimeZone timeZone, final java.util.Locale locale) {\n    if (locale == null) {\n        {\n            return org.apache.commons.lang3.time.DateFormatUtils.format(new java.util.Date(millis), pattern, timeZone, locale);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"locale":"locale"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:522","type":"CtBinaryOperatorImpl","sourcecode":"(isEquals) == false"},"failures":[265,266,267],"tindex":"d1ff63fc-3e50-11e6-85e0-293f039bd1de","method":{"position":"org.apache.commons.lang3.text.StrBuilder:769","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder append(final boolean value) {\n    if (value == false) {\n        {\n            if (value) {\n                ensureCapacity(((int) + 4));\n                char[][((int)++)] = 't';\n                char[][((int)++)] = 'r';\n                char[][((int)++)] = 'u';\n                char[][((int)++)] = 'e';\n            } else {\n                ensureCapacity(((int) + 5));\n                char[][((int)++)] = 'f';\n                char[][((int)++)] = 'a';\n                char[][((int)++)] = 'l';\n                char[][((int)++)] = 's';\n                char[][((int)++)] = 'e';\n            }\n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isEquals":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5991","type":"CtBinaryOperatorImpl","sourcecode":"cs == null"},"failures":[],"tindex":"d1ff8b0d-3e50-11e6-85e0-7fc18c7bb290","method":{"position":"org.apache.commons.lang3.StringUtils:1498","type":"CtMethodImpl","sourcecode":"public static boolean containsWhitespace(final java.lang.CharSequence seq) {\n    if (seq == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(seq)) {\n                return false;\n            } \n            final int int = seq.length();\n            for (int int = 0 ; i < strLen ; i++) {\n                if (java.lang.Character.isWhitespace(seq.charAt(i))) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"seq"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1247","type":"CtBinaryOperatorImpl","sourcecode":"str != null"},"failures":[268],"tindex":"d1ff8b0e-3e50-11e6-85e0-173d4bff5285","method":{"position":"org.apache.commons.lang3.StringUtils:2017","type":"CtMethodImpl","sourcecode":"public static int lastIndexOfAny(final java.lang.CharSequence str, final java.lang.CharSequence... searchStrs) {\n    if (str != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((str == null) || (searchStrs == null)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            final int int = searchStrs.int;\n            int int = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            int int = 0;\n            for (int int = 0 ; i < sz ; i++) {\n                final java.lang.CharSequence java.lang.CharSequence = searchStrs[i];\n                if (search == null) {\n                    continue;\n                } \n                tmp = org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(str, search, str.length());\n                if (tmp > ret) {\n                    ret = tmp;\n                } \n            }\n            return ret;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:623","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[269],"tindex":"d1ffb21f-3e50-11e6-85e0-cf9d02546d00","method":{"position":"org.apache.commons.lang3.ArrayUtils:5355","type":"CtMethodImpl","sourcecode":"public static byte[] removeElements(final byte[] array, final byte... values) {\n    if (array == null) {\n        {\n            if ((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            final java.util.HashMap<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt> java.util.HashMap<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt> = new java.util.HashMap<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt>(values.int);\n            for (final byte byte : values) {\n                final java.lang.Byte java.lang.Byte = java.lang.Byte.valueOf(v);\n                final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = occurrences.get(boxed);\n                if (count == null) {\n                    occurrences.put(boxed, new org.apache.commons.lang3.mutable.MutableInt(1));\n                } else {\n                    count.increment();\n                }\n            }\n            final java.util.BitSet java.util.BitSet = new java.util.BitSet();\n            for (final java.util.Map.Entry<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt> java.util.Map.Entry<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt> : occurrences.entrySet()) {\n                final java.lang.Byte java.lang.Byte = e.getKey();\n                int int = 0;\n                for (int int = 0, int int = e.getValue().intValue() ; i < ct ; i++) {\n                    found = org.apache.commons.lang3.ArrayUtils.indexOf(array, v.byteValue(), found);\n                    if (found < 0) {\n                        break;\n                    } \n                    toRemove.set((found++));\n                }\n            }\n            return ((byte[])(org.apache.commons.lang3.ArrayUtils.removeAll(array, toRemove)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:906","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[270],"tindex":"d1ffb220-3e50-11e6-85e0-b73d58151850","method":{"position":"org.apache.commons.lang3.ArrayUtils:206","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static boolean isEquals(final java.lang.Object array1, final java.lang.Object array2) {\n    if (array2 == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.lang3.builder.EqualsBuilder().append(array1, array2).isEquals();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4287","type":"CtInvocationImpl","sourcecode":"str.endsWith(remove)"},"failures":[271],"tindex":"d1ffd931-3e50-11e6-85e0-47d6c4c5ee20","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:214","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.StrTokenizer getTSVInstance(final java.lang.String input) {\n    if (input.endsWith(input)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.lang3.text.StrTokenizer org.apache.commons.lang3.text.StrTokenizer = org.apache.commons.lang3.text.StrTokenizer.getTSVClone();\n            tok.reset(input);\n            return tok;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"input","remove":"input"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:801","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.ParameterizedType"},"failures":[],"tindex":"d1ffd932-3e50-11e6-85e0-8d2a8a8bcd88","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1432","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendFixedWidthPadRight(final java.lang.Object obj, final int width, final char padChar) {\n    if (obj instanceof java.lang.reflect.ParameterizedType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (width > 0) {\n                ensureCapacity(((int) + width));\n                java.lang.String java.lang.String = obj == null ? getNullText() : obj.toString();\n                if (str == null) {\n                    str = \"\";\n                } \n                final int int = str.length();\n                if (strLen >= width) {\n                    str.getChars(0, width, char[], int);\n                } else {\n                    final int int = width - strLen;\n                    str.getChars(0, strLen, char[], int);\n                    for (int int = 0 ; i < padLen ; i++) {\n                        char[][(((int) + strLen) + i)] = padChar;\n                    }\n                }\n                int += width;\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:860","type":"CtBinaryOperatorImpl","sourcecode":"delim == null"},"failures":[272,273],"tindex":"d2000043-3e50-11e6-85e0-93b3cf73ad92","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2512","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final org.apache.commons.lang3.text.StrMatcher matcher, int startIndex) {\n    if (matcher == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            startIndex = startIndex >= (int) ? (int) - 1 : startIndex;\n            if ((matcher == null) || (startIndex < 0)) {\n                return -1;\n            } \n            final char[] char[] = char[];\n            final int int = startIndex + 1;\n            for (int int = startIndex ; i >= 0 ; i--) {\n                if ((matcher.isMatch(buf, i, 0, endIndex)) > 0) {\n                    return i;\n                } \n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delim":"matcher"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:198","type":"CtBinaryOperatorImpl","sourcecode":"(locale.getVariant().length()) > 0"},"failures":[],"tindex":"d2000044-3e50-11e6-85e0-8db43cac50c5","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:553","type":"CtMethodImpl","sourcecode":"public static void writeStaticField(final java.lang.Class<?> cls, final java.lang.String fieldName, final java.lang.Object value, final boolean forceAccess) throws java.lang.IllegalAccessException {\n    if ((value.getVariant().length()) > 0) {\n        {\n            final java.lang.reflect.Field java.lang.reflect.Field = org.apache.commons.lang3.reflect.FieldUtils.getField(cls, fieldName, forceAccess);\n            org.apache.commons.lang3.Validate.isTrue((field != null), \"Cannot locate field %s on %s\", fieldName, cls);\n            org.apache.commons.lang3.reflect.FieldUtils.writeStaticField(field, value, false);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"locale":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:4569","type":"CtBinaryOperatorImpl","sourcecode":"(index > length) || (index < 0)"},"failures":[],"tindex":"d2000045-3e50-11e6-85e0-63e3fb56fb06","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:534","type":"CtMethodImpl","sourcecode":"public java.lang.String replace(java.lang.CharSequence source, int offset, int length) {\n    if ((length > length) || (index < 0)) {\n        {\n            if (source == null) {\n                return null;\n            } \n            org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(length).append(source, offset, length);\n            substitute(buf, 0, length);\n            return buf.toString();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"length","index":"length"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:299","type":"CtInvocationImpl","sourcecode":"value.equals(falseValue)"},"failures":[274,275,276,277,278,279],"tindex":"d2002756-3e50-11e6-85e0-6dd58f7ba6e1","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1258","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj.equals(obj)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey.this) == obj) {\n                return true;\n            } \n            if (obj instanceof org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey) {\n                final org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey = ((org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey)(obj));\n                return ((java.util.TimeZone.equals(other.java.util.TimeZone)) && ((int) == (other.int))) && (java.util.Locale.equals(other.java.util.Locale));\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"falseValue":"obj","value":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.text.ParseException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1312","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[],"tindex":"d2004e67-3e50-11e6-85e0-13d2f1a9f877","method":{"position":"org.apache.commons.lang3.time.DateUtils:267","type":"CtMethodImpl","sourcecode":"public static java.util.Date parseDate(final java.lang.String str, final java.lang.String... parsePatterns) throws java.text.ParseException {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.parseDate(str, null, parsePatterns);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.text.ParseException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:860","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"d2004e68-3e50-11e6-85e0-4140a06c0f80","method":{"position":"org.apache.commons.lang3.ArrayUtils:6062","type":"CtMethodImpl","sourcecode":"static java.lang.Object removeAll(final java.lang.Object array, final java.util.BitSet indices) {\n    if (array == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = org.apache.commons.lang3.ArrayUtils.getLength(array);\n            final int int = indices.cardinality();\n            final java.lang.Object java.lang.Object = java.lang.reflect.Array.newInstance(array.getClass().getComponentType(), (srcLength - removals));\n            int int = 0;\n            int int = 0;\n            int int;\n            int int;\n            while ((set = indices.nextSetBit(srcIndex)) != (-1)) {\n                count = set - srcIndex;\n                if (count > 0) {\n                    java.lang.System.arraycopy(array, srcIndex, result, destIndex, count);\n                    destIndex += count;\n                } \n                srcIndex = indices.nextClearBit(set);\n            }\n            count = srcLength - srcIndex;\n            if (count > 0) {\n                java.lang.System.arraycopy(array, srcIndex, result, destIndex, count);\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2815","type":"CtBinaryOperatorImpl","sourcecode":"(separator == null) || (org.apache.commons.lang3.StringUtils.EMPTY.equals(separator))"},"failures":[],"tindex":"d2007579-3e50-11e6-85e0-052bc1b83ada","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2001","type":"CtMethodImpl","sourcecode":"protected void setSizeStartText(java.lang.String sizeStartText) {\n    if ((sizeStartText == null) || (sizeStartText.equals(separator))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (sizeStartText == null) {\n                sizeStartText = \"\";\n            } \n            org.apache.commons.lang3.builder.ToStringStyle.this.java.lang.String = sizeStartText;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.lang3.StringUtils.EMPTY":"sizeStartText","separator":"sizeStartText"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:612","type":"CtBinaryOperatorImpl","sourcecode":"numDecimals <= 16"},"failures":[280],"tindex":"d200757a-3e50-11e6-85e0-6358e33af60c","method":{"position":"org.apache.commons.lang3.text.FormattableUtils:81","type":"CtMethodImpl","sourcecode":"public static java.util.Formatter append(final java.lang.CharSequence seq, final java.util.Formatter formatter, final int flags, final int width, final int precision) {\n    if (flags <= 16) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.text.FormattableUtils.append(seq, formatter, flags, width, precision, ' ', null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"numDecimals":"flags"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4182","type":"CtBinaryOperatorImpl","sourcecode":"count == sz"},"failures":[281,282],"tindex":"d200757b-3e50-11e6-85e0-c1fb362f075c","method":{"position":"org.apache.commons.lang3.StringUtils:5509","type":"CtMethodImpl","sourcecode":"public static java.lang.String center(java.lang.String str, final int size, final char padChar) {\n    if (size == size) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((str == null) || (size <= 0)) {\n                return str;\n            } \n            final int int = str.length();\n            final int int = size - strLen;\n            if (pads <= 0) {\n                return str;\n            } \n            str = org.apache.commons.lang3.StringUtils.leftPad(str, (strLen + (pads / 2)), padChar);\n            str = org.apache.commons.lang3.StringUtils.rightPad(str, size, padChar);\n            return str;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sz":"size","count":"size"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:205","type":"CtBinaryOperatorImpl","sourcecode":"(tmp.length()) != (duration.length())"},"failures":[283,284],"tindex":"d2009c8c-3e50-11e6-85e0-09729f186696","method":{"position":"org.apache.commons.lang3.ClassPathUtils:58","type":"CtMethodImpl","sourcecode":"public static java.lang.String toFullyQualifiedName(final java.lang.Class<?> context, final java.lang.String resourceName) {\n    if ((resourceName.length()) != (resourceName.length())) {\n        {\n            org.apache.commons.lang3.Validate.notNull(context, \"Parameter '%s' must not be null!\", \"context\");\n            org.apache.commons.lang3.Validate.notNull(resourceName, \"Parameter '%s' must not be null!\", \"resourceName\");\n            return org.apache.commons.lang3.ClassPathUtils.toFullyQualifiedName(context.getPackage(), resourceName);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"duration":"resourceName","tmp":"resourceName"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1436","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[285],"tindex":"d2009c8d-3e50-11e6-85e0-33e70dcc7fa5","method":{"position":"org.apache.commons.lang3.StringUtils:4996","type":"CtMethodImpl","sourcecode":"public static java.lang.String chomp(final java.lang.String str) {\n    if (str == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n                return str;\n            } \n            if ((str.length()) == 1) {\n                final char char = str.charAt(0);\n                if ((ch == (org.apache.commons.lang3.CharUtils.org.apache.commons.lang3.CharUtils.char)) || (ch == (org.apache.commons.lang3.CharUtils.org.apache.commons.lang3.CharUtils.char))) {\n                    return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n                } \n                return str;\n            } \n            int int = (str.length()) - 1;\n            final char char = str.charAt(lastIdx);\n            if (last == (org.apache.commons.lang3.CharUtils.org.apache.commons.lang3.CharUtils.char)) {\n                if ((str.charAt((lastIdx - 1))) == (org.apache.commons.lang3.CharUtils.org.apache.commons.lang3.CharUtils.char)) {\n                    lastIdx--;\n                } \n            } else if (last != (org.apache.commons.lang3.CharUtils.org.apache.commons.lang3.CharUtils.char)) {\n                lastIdx++;\n            } \n            return str.substring(0, lastIdx);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:580","type":"CtBinaryOperatorImpl","sourcecode":"((ch0 == 'n') || (ch0 == 'N')) && ((ch1 == 'o') || (ch1 == 'O'))"},"failures":[],"tindex":"d2009c8e-3e50-11e6-85e0-57233db86ad5","method":{"position":"org.apache.commons.lang3.StringUtils:4126","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final java.lang.Iterable<?> iterable, final char separator) {\n    if (((separator == 'n') || (ch0 == 'N')) && ((separator == 'o') || (ch1 == 'O'))) {\n        {\n            if (iterable == null) {\n                return null;\n            } \n            return org.apache.commons.lang3.StringUtils.join(iterable.iterator(), separator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch0":"separator","ch1":"separator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2020","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302],"tindex":"d200c39f-3e50-11e6-85e0-b90d84a476a8","method":{"position":"org.apache.commons.lang3.text.translate.CodePointTranslator:36","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic final int translate(final java.lang.CharSequence input, final int index, final java.io.Writer out) throws java.io.IOException {\n    if (index == 0) {\n        {\n            final int int = java.lang.Character.codePointAt(input, index);\n            final boolean boolean = translate(codepoint, out);\n            return consumed ? 1 : 0;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3910","type":"CtBinaryOperatorImpl","sourcecode":"array2 == null"},"failures":[303],"tindex":"d200c3a0-3e50-11e6-85e0-8bc4c61e726f","method":{"position":"org.apache.commons.lang3.ArrayUtils:2090","type":"CtMethodImpl","sourcecode":"public static boolean contains(final long[] array, final long valueToFind) {\n    if (array == null) {\n        {\n            return (org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind)) != (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array2":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:430","type":"CtUnaryOperatorImpl","sourcecode":"!(java.util.Arrays.equals(lhs, rhs))"},"failures":[],"tindex":"d200c3a1-3e50-11e6-85e0-2796cdcc4870","method":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:263","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (!(java.util.Arrays.equals(obj, obj))) {\n        {\n            if (obj == (org.apache.commons.lang3.text.ExtendedMessageFormat.this)) {\n                return true;\n            } \n            if (obj == null) {\n                return false;\n            } \n            if (!(super.equals(obj))) {\n                return false;\n            } \n            if (org.apache.commons.lang3.ObjectUtils.notEqual(getClass(), obj.getClass())) {\n                return false;\n            } \n            final org.apache.commons.lang3.text.ExtendedMessageFormat org.apache.commons.lang3.text.ExtendedMessageFormat = ((org.apache.commons.lang3.text.ExtendedMessageFormat)(obj));\n            if (org.apache.commons.lang3.ObjectUtils.notEqual(java.lang.String, rhs.java.lang.String)) {\n                return false;\n            } \n            if (org.apache.commons.lang3.ObjectUtils.notEqual(java.util.Map<java.lang.String, ? extends org.apache.commons.lang3.text.FormatFactory>, rhs.java.util.Map<java.lang.String, ? extends org.apache.commons.lang3.text.FormatFactory>)) {\n                return false;\n            } \n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"obj","rhs":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:591","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"d200eab2-3e50-11e6-85e0-4b7040dec5b0","method":{"position":"org.apache.commons.lang3.reflect.MethodUtils:388","type":"CtMethodImpl","sourcecode":"private static java.lang.reflect.Method getAccessibleMethodFromSuperclass(final java.lang.Class<?> cls, final java.lang.String methodName, final java.lang.Class<?>... parameterTypes) {\n    if (methodName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Class<?> java.lang.Class<?> = cls.getSuperclass();\n            while (parentClass != null) {\n                if (java.lang.reflect.Modifier.isPublic(parentClass.getModifiers())) {\n                    try {\n                        return parentClass.getMethod(methodName, parameterTypes);\n                    } catch (final java.lang.NoSuchMethodException e) {\n                        return null;\n                    }\n                } \n                parentClass = parentClass.getSuperclass();\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"methodName"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:910","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[304,305,306,307,308,309,310,274,311,312,264,313,314,315,316,275,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337],"tindex":"d200eab3-3e50-11e6-85e0-87b81050d311","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:434","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.String format(final java.util.Calendar calendar) {\n    if (calendar == null) {\n        {\n            return org.apache.commons.lang3.time.FastDatePrinter.format(calendar);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"calendar"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:496","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[308,275],"tindex":"d200eab4-3e50-11e6-85e0-1b4acf59fb36","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1024","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n    if (buffer == null) {\n        {\n            int int = calendar.get(java.util.Calendar.java.util.Calendar.int);\n            if (value == 0) {\n                value = (calendar.getLeastMaximum(java.util.Calendar.java.util.Calendar.int)) + 1;\n            } \n            org.apache.commons.lang3.time.FastDatePrinter.NumberRule.appendTo(buffer, value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"buffer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:224","type":"CtInvocationImpl","sourcecode":"java.lang.Double.isNaN(b)"},"failures":[170,170],"tindex":"d20111c5-3e50-11e6-85e0-bd898a12fef5","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:359","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final double value) {\n    if (java.lang.Double.isNaN(value)) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, value);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}