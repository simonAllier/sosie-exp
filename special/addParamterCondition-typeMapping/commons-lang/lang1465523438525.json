{"failureDictionary":{"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":212,"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":20,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":190,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":138,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":140,"org.apache.commons.lang3.math.NumberUtilsTest.testToByteStringI":306,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":312,"org.apache.commons.lang3.time.DateUtilsTest.testSetMilliseconds":158,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":134,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":137,"org.apache.commons.lang3.time.DateUtilsTest.testSetYears":164,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":205,"org.apache.commons.lang3.exception.ContextedExceptionTest.testNullExceptionPassing":172,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeRuntimeEx":260,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstringAfter_StringString":290,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementBooleanArray":315,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":21,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":210,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":236,"org.apache.commons.lang3.ArrayUtilsTest.testIsEmptyPrimitives":271,"org.apache.commons.lang3.StringUtilsIsTest.testIsAlphanumericSpace":304,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":215,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":4,"org.apache.commons.lang3.exception.ContextedExceptionTest.testContextedExceptionString":175,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":114,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":220,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":196,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":29,"org.apache.commons.lang3.text.StrBuilderTest.testGetSetNewLineText":170,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":209,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":204,"org.apache.commons.lang3.ClassUtilsTest.testGetClassWithArrayClasses2D":1,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":109,"org.apache.commons.lang3.ArrayUtilsTest.testContainsFloat":272,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":18,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":221,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml10":292,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxShort":317,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":206,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCyclicalObjectReferences":180,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseNullCause":255,"org.apache.commons.lang3.time.DateUtilsTest.testSetMonths":161,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":80,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayFloat":291,"org.apache.commons.lang3.StringUtilsTest.testRightPad_StringInt":293,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":142,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseUncheckedException":254,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":126,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":235,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":130,"org.apache.commons.lang3.time.FastDateParserTest.testSpecialCharacters":321,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":110,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":120,"org.apache.commons.lang3.math.FractionTest.testMultiply":246,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":247,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementFloatArray":270,"org.apache.commons.lang3.RandomUtilsTest.testNextIntLowerGreaterUpper":300,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":97,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":250,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxShort_emptyArray":316,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfFloat":273,"org.apache.commons.lang3.time.DateUtilsTest.testSetMinutes":159,"org.apache.commons.lang3.exception.ContextedExceptionTest.testAddContextValue":177,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":310,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":133,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StringBuilder_int_int":148,"org.apache.commons.lang3.math.NumberUtilsTest.testToByteString":307,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_int_int_String":3,"org.apache.commons.lang3.exception.ContextedExceptionTest.testContextedExceptionThrowable":173,"org.apache.commons.lang3.math.FractionTest.testDivide":245,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":249,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":115,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":108,"org.apache.commons.lang3.LocaleUtilsTest.testCountriesByLanguage":285,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementDoubleArray":319,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":147,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":222,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOf_ThrowableClass":167,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeEx":261,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":75,"org.apache.commons.lang3.time.FastDateParserTest.testParseNumerics":324,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":333,"org.apache.commons.lang3.time.FastDateParserTest.testParseZone":322,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":112,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseNull":256,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":313,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":86,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":9,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":25,"org.apache.commons.lang3.time.FastDateParserTest.testLang538":325,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendNewLine":169,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseChecked":251,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":229,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testInvalidFragmentWithDate":289,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":200,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":105,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":10,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":79,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":234,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":146,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":136,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":233,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":78,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":87,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":123,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":94,"org.apache.commons.lang3.exception.ContextedExceptionTest.testSetContextValue":178,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":197,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionHierarchyEquals":155,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":34,"org.apache.commons.lang3.RandomUtilsTest.testNextIntMinimalRange":302,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":208,"org.apache.commons.lang3.StringUtilsTest.testPrependIfMissing":268,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":62,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":76,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEqualsExcludeFields":181,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseNumerics":331,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":104,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":23,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":37,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":89,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang538":332,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":119,"org.apache.commons.lang3.ClassUtilsTest.testGetClassWithArrayClasses":0,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":81,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":99,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testInteger":187,"org.apache.commons.lang3.builder.DiffBuilderTest.testStylePassedToDiffResult":27,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":308,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseZone":329,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":122,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":141,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":211,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":113,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testEnforceExceptions":189,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":216,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":92,"org.apache.commons.lang3.time.DateUtilsTest.testIteratorEx":153,"org.apache.commons.lang3.CharUtilsTest.testIsAsciiControl_char":15,"org.apache.commons.lang3.exception.ContextedExceptionTest.testContextedExceptionStringThrowableContext":174,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixture":186,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":74,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyShortObjectNull":296,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":47,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomNumeric":165,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeResultsIsSuccessfulFalse":262,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayToObjectArray":40,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":195,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":277,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":194,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":100,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":129,"org.apache.commons.lang3.time.DateUtilsTest.testSetHours":163,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetCheckedException":258,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":85,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":13,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":83,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":124,"org.apache.commons.lang3.BitFieldTest.testSetBoolean":150,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":17,"org.apache.commons.lang3.mutable.MutableDoubleTest.testSubtractValuePrimitive":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":107,"org.apache.commons.lang3.StringUtilsTest.testRemoveStart":242,"org.apache.commons.lang3.RandomUtilsTest.testExtremeRangeInt":299,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayBoolean":303,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":82,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":326,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":241,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedStaticField":16,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":19,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":232,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":14,"org.apache.commons.lang3.math.NumberUtilsTest.testLang300":280,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":309,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":88,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":35,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":214,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":132,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberFailure_1":282,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":90,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberFailure_4":283,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":48,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":32,"org.apache.commons.lang3.StringUtilsTest.testRepeat_StringInt":264,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":103,"org.apache.commons.lang3.builder.DiffBuilderTest.testSimilarObjectIgnoresAppends":185,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":102,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementFloatArray":269,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfFloatWithStartIndex":274,"org.apache.commons.lang3.ValidateTest.testValidIndex_array":43,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":199,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetRuntimeException":259,"org.apache.commons.lang3.StringUtilsTest.testRightPad_StringIntChar":265,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":202,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":91,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":193,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":231,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":281,"org.apache.commons.lang3.ArrayUtilsTest.testContainsChar":45,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsOnly_CharArray":267,"org.apache.commons.lang3.StringUtilsTest.testRepeat_StringStringInt":295,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":125,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":31,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":111,"org.apache.commons.lang3.ArrayUtilsTest.testCloneByte":41,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementByteArray":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":224,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfFloatWithStartIndex":275,"org.apache.commons.lang3.ArrayUtilsTest.testToString":314,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseChecked":252,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":68,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":69,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":225,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":6,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":28,"org.apache.commons.lang3.ValidateTest.testValidIndex_withMessage_array":44,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":230,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOf_ThrowableClassInt":168,"org.apache.commons.lang3.math.NumberUtilsTest.testStringToDoubleString":297,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":207,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":131,"org.apache.commons.lang3.math.FractionTest.testAdd":305,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testAmPm":330,"org.apache.commons.lang3.text.StrBuilderTest.testChaining":171,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsOnly_String":266,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":191,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":128,"org.apache.commons.lang3.time.DateUtilsTest.testWeekIterator":152,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":101,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":139,"org.apache.commons.lang3.time.DateUtilsTest.testMonthIterator":151,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":218,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareExcludeFields":182,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":217,"org.apache.commons.lang3.RandomUtilsTest.testNextIntNegative":298,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":228,"org.apache.commons.lang3.math.NumberUtilsTest.testLANG992":278,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementDoubleArray":318,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":203,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":26,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":127,"org.apache.commons.lang3.text.StrTokenizerTest.test8":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":116,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":238,"org.apache.commons.lang3.text.StrTokenizerTest.test5":58,"org.apache.commons.lang3.text.StrTokenizerTest.test4":57,"org.apache.commons.lang3.BooleanUtilsTest.test_toStringOnOff_Boolean":42,"org.apache.commons.lang3.text.StrTokenizerTest.test7":60,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":117,"org.apache.commons.lang3.text.StrTokenizerTest.test6":59,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":118,"org.apache.commons.lang3.text.StrTokenizerTest.test1":54,"org.apache.commons.lang3.StringUtilsTest.testLeftPad_StringIntChar":263,"org.apache.commons.lang3.text.StrTokenizerTest.test3":56,"org.apache.commons.lang3.ClassUtilsTest.testGetClassInvalidArguments":2,"org.apache.commons.lang3.text.StrTokenizerTest.test2":55,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":93,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testIntegerWithTransients":156,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":237,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfMonthWithDate":287,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":33,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":213,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsert":294,"org.apache.commons.lang3.exception.ContextedExceptionTest.testContextedExceptionStringThrowable":176,"org.apache.commons.lang3.time.DateUtilsTest.testSetDays":162,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareTransients":184,"org.apache.commons.lang3.time.FastDateParserTest.testAmPm":323,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":219,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEquals":179,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":227,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseUncheckedException":257,"org.apache.commons.lang3.time.FastDateParserTest.testQuotes":327,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":36,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementByteArray":38,"org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss":284,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":121,"org.apache.commons.lang3.math.FractionTest.testPow":244,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":22,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":201,"org.apache.commons.lang3.ConversionTest.testShortToBinary":154,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":198,"org.apache.commons.lang3.StringUtilsTest.testReverse_String":149,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":335,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixtureWithTransients":157,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":49,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":336,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":51,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":50,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":53,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":52,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":135,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":226,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseNull":253,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":106,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":248,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":143,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxInt_nullArray":243,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testSpecialCharacters":328,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":96,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompare":183,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":65,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":64,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":66,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":63,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":239,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfYearWithDate":288,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfFloat":276,"org.apache.commons.lang3.time.DateUtilsTest.testTruncate":70,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":144,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllNullBooleanArray":188,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":98,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":240,"org.apache.commons.lang3.ArrayUtilsTest.testCloneDouble":320,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":192,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils":166,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":12,"org.apache.commons.lang3.RandomUtilsTest.testNextInt":301,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":223,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_Integer_Integer_Integer":286,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":95,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testQuotes":334,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":279,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":145,"org.apache.commons.lang3.time.DateUtilsTest.testSetSeconds":160,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":311},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:120","type":"CtBinaryOperatorImpl","sourcecode":"(str.charAt(3)) != '_'"},"failures":[0,1,2],"tindex":"bb280265-2ead-11e6-9792-c745990b3214","method":{"position":"org.apache.commons.lang3.ClassUtils:959","type":"CtMethodImpl","sourcecode":"private static java.lang.String toCanonicalName(java.lang.String className) {\n    if ((className.charAt(3)) != '_') {\n        {\n            className = org.apache.commons.lang3.StringUtils.deleteWhitespace(className);\n            if (className == null) {\n                throw new java.lang.NullPointerException(\"className must not be null.\");\n            } else if (className.endsWith(\"[]\")) {\n                final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n                while (className.endsWith(\"[]\")) {\n                    className = className.substring(0, ((className.length()) - 2));\n                    classNameBuffer.append(\"[\");\n                }\n                final java.lang.String java.lang.String = org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.String, java.lang.String>.get(className);\n                if (abbreviation != null) {\n                    classNameBuffer.append(abbreviation);\n                } else {\n                    classNameBuffer.append(\"L\").append(className).append(\";\");\n                }\n                className = classNameBuffer.toString();\n            } \n            return className;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"className"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1247","type":"CtUnaryOperatorImpl","sourcecode":"!(rawType instanceof java.lang.Class<?>)"},"failures":[],"tindex":"bb28c5b6-2ead-11e6-9792-9df741e208dc","method":{"position":"org.apache.commons.lang3.ArrayUtils:6011","type":"CtMethodImpl","sourcecode":"static java.lang.Object removeAll(final java.lang.Object array, final int... indices) {\n    if (!(array instanceof java.lang.Class<?>)) {\n        {\n            final int int = org.apache.commons.lang3.ArrayUtils.getLength(array);\n            int int = 0;\n            if (org.apache.commons.lang3.ArrayUtils.isNotEmpty(indices)) {\n                java.util.Arrays.sort(indices);\n                int int = indices.int;\n                int int = length;\n                while ((--i) >= 0) {\n                    final int int = indices[i];\n                    if ((index < 0) || (index >= length)) {\n                        throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Length: \") + length));\n                    } \n                    if (index >= prevIndex) {\n                        continue;\n                    } \n                    diff++;\n                    prevIndex = index;\n                }\n            } \n            final java.lang.Object java.lang.Object = java.lang.reflect.Array.newInstance(array.getClass().getComponentType(), (length - diff));\n            if (diff < length) {\n                int int = length;\n                int int = length - diff;\n                for (int int = (indices.int) - 1 ; i >= 0 ; i--) {\n                    final int int = indices[i];\n                    if ((end - index) > 1) {\n                        final int int = (end - index) - 1;\n                        dest -= cp;\n                        java.lang.System.arraycopy(array, (index + 1), result, dest, cp);\n                    } \n                    end = index;\n                }\n                if (end > 0) {\n                    java.lang.System.arraycopy(array, 0, result, 0, end);\n                } \n            } \n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"rawType":"array"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSetUtils:141","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.CharSetUtils.deepEmpty(set))"},"failures":[],"tindex":"bb28ecc7-2ead-11e6-9792-87b44f8003f2","method":{"position":"org.apache.commons.lang3.Validate:344","type":"CtMethodImpl","sourcecode":"public static <T extends java.util.Map<?, ?>>T notEmpty(final T map, final java.lang.String message, final java.lang.Object... values) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(message)) || (org.apache.commons.lang3.CharSetUtils.deepEmpty(values))) {\n        {\n            if (map == null) {\n                throw new java.lang.NullPointerException(java.lang.String.format(message, values));\n            } \n            if (map.isEmpty()) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message, values));\n            } \n            return map;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"message","set":"values"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:474","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[],"tindex":"bb2913d8-2ead-11e6-9792-27c961697027","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:744","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n    if (buffer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendTo(buffer, calendar.get(int));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"buffer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1145","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(valueDelimiter)"},"failures":[],"tindex":"bb2913d9-2ead-11e6-9792-f168b949debd","method":{"position":"org.apache.commons.lang3.time.FastDateParser:460","type":"CtMethodImpl","sourcecode":"private org.apache.commons.lang3.time.FastDateParser.Strategy getStrategy(final java.lang.String formatField, final java.util.Calendar definingCalendar) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(formatField)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            switch (formatField.charAt(0)) {\n                case '\\'' :\n                    if ((formatField.length()) > 2) {\n                        return new org.apache.commons.lang3.time.FastDateParser.CopyQuotedStrategy(formatField.substring(1, ((formatField.length()) - 1)));\n                    } \n                default :\n                    return new org.apache.commons.lang3.time.FastDateParser.CopyQuotedStrategy(formatField);\n                case 'D' :\n                    return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n                case 'E' :\n                    return getLocaleSpecificStrategy(java.util.Calendar.java.util.Calendar.int, definingCalendar);\n                case 'F' :\n                    return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n                case 'G' :\n                    return getLocaleSpecificStrategy(java.util.Calendar.java.util.Calendar.int, definingCalendar);\n                case 'H' :\n                    return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n                case 'K' :\n                    return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n                case 'M' :\n                    return (formatField.length()) >= 3 ? getLocaleSpecificStrategy(java.util.Calendar.java.util.Calendar.int, definingCalendar) : org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n                case 'S' :\n                    return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n                case 'W' :\n                    return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n                case 'a' :\n                    return getLocaleSpecificStrategy(java.util.Calendar.java.util.Calendar.int, definingCalendar);\n                case 'd' :\n                    return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n                case 'h' :\n                    return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n                case 'k' :\n                    return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n                case 'm' :\n                    return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n                case 's' :\n                    return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n                case 'w' :\n                    return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n                case 'y' :\n                    return (formatField.length()) > 2 ? org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy : org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n                case 'Z' :\n                case 'z' :\n                    return getLocaleSpecificStrategy(java.util.Calendar.java.util.Calendar.int, definingCalendar);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"valueDelimiter":"formatField"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:325","type":"CtBinaryOperatorImpl","sourcecode":"value == trueValue"},"failures":[],"tindex":"bb2961fa-2ead-11e6-9792-79cf8b06ca68","method":{"position":"org.apache.commons.lang3.ArrayUtils:2227","type":"CtMethodImpl","sourcecode":"public static int indexOf(final short[] array, final short valueToFind, int startIndex) {\n    if (startIndex == startIndex) {\n        {\n            if (array == null) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                startIndex = 0;\n            } \n            for (int int = startIndex ; i < (array.int) ; i++) {\n                if (valueToFind == (array[i])) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trueValue":"startIndex","value":"startIndex"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSetUtils:176","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[3],"tindex":"bb29890b-2ead-11e6-9792-198a00b28385","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1834","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder replace(final int startIndex, int endIndex, final java.lang.String replaceStr) {\n    if (replaceStr == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            endIndex = validateRange(startIndex, endIndex);\n            final int int = replaceStr == null ? 0 : replaceStr.length();\n            replaceImpl(startIndex, endIndex, (endIndex - startIndex), replaceStr, insertLen);\n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"replaceStr"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:101","type":"CtBinaryOperatorImpl","sourcecode":"len < 2"},"failures":[],"tindex":"bb29b01c-2ead-11e6-9792-b9f6115456c9","method":{"position":"org.apache.commons.lang3.time.DateUtils:502","type":"CtMethodImpl","sourcecode":"public static java.util.Date addMilliseconds(final java.util.Date date, final int amount) {\n    if (amount < 2) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.add(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"amount"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1762","type":"CtBinaryOperatorImpl","sourcecode":"len > 0"},"failures":[4,5,6,7,8,9,10,11,12,13,14],"tindex":"bb29b01d-2ead-11e6-9792-7d48ce76b254","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:455","type":"CtMethodImpl","sourcecode":"public java.lang.String replace(final char[] source, final int offset, final int length) {\n    if (offset > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (source == null) {\n                return null;\n            } \n            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(length).append(source, offset, length);\n            substitute(buf, 0, length);\n            return buf.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"offset"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDatePrinter:328","type":"CtBinaryOperatorImpl","sourcecode":"c == '\\''"},"failures":[15],"tindex":"bb29d72e-2ead-11e6-9792-e56fde9bc103","method":{"position":"org.apache.commons.lang3.CharUtils:440","type":"CtMethodImpl","sourcecode":"public static boolean isAsciiControl(final char ch) {\n    if (ch == '\\'') {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (ch < 32) || (ch == 127);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"ch"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.StringUtils:2293","type":"CtInvocationImpl","sourcecode":"separator.isEmpty()"},"failures":[16],"tindex":"bb29d72f-2ead-11e6-9792-2d9f70b34f1d","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:274","type":"CtMethodImpl","sourcecode":"public static java.lang.Object readStaticField(final java.lang.Class<?> cls, final java.lang.String fieldName) throws java.lang.IllegalAccessException {\n    if (fieldName.isEmpty()) {\n        {\n            return org.apache.commons.lang3.reflect.FieldUtils.readStaticField(cls, fieldName, false);\n        }\n    } else {\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"separator":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:120","type":"CtBinaryOperatorImpl","sourcecode":"(str.charAt(3)) != '_'"},"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"tindex":"bb29fe40-2ead-11e6-9792-8db98715b761","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:463","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final float lhs, final float rhs) {\n    if ((fieldName.charAt(3)) != '_') {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (fieldName == null) {\n                throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n            } \n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if ((java.lang.Float.floatToIntBits(lhs)) != (java.lang.Float.floatToIntBits(rhs))) {\n                java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Float>(fieldName) {\n                    private static final long serialVersionUID = 1L;\n\n                    @java.lang.Override\n                    public java.lang.Float getLeft() {\n                        return java.lang.Float.valueOf(lhs);\n                    }\n\n                    @java.lang.Override\n                    public java.lang.Float getRight() {\n                        return java.lang.Float.valueOf(rhs);\n                    }\n                });\n            } \n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:726","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"bb2a2551-2ead-11e6-9792-31ae7ea11d67","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:278","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setContentStart(final java.lang.String contentStart) {\n    if (contentStart == null) {\n        {\n            super.setContentStart(contentStart);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"contentStart"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1153","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[38,39,40,41],"tindex":"bb2a4c62-2ead-11e6-9792-cf9724f50d70","method":{"position":"org.apache.commons.lang3.ArrayUtils:402","type":"CtMethodImpl","sourcecode":"public static byte[] clone(final byte[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } \n            return array.clone();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:83","type":"CtBinaryOperatorImpl","sourcecode":"(ex == null) || ((ex.getCause()) == null)"},"failures":[],"tindex":"bb2a4c63-2ead-11e6-9792-9fbb9994d827","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:488","type":"CtMethodImpl","sourcecode":"public static void printRootCauseStackTrace(final java.lang.Throwable throwable, final java.io.PrintWriter writer) {\n    if ((throwable == null) || ((ex.getCause()) == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (throwable == null) {\n                return ;\n            } \n            if (writer == null) {\n                throw new java.lang.IllegalArgumentException(\"The PrintWriter must not be null\");\n            } \n            final java.lang.String[] java.lang.String[] = org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(throwable);\n            for (final java.lang.String java.lang.String : trace) {\n                writer.println(element);\n            }\n            writer.flush();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ex":"throwable"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:466","type":"CtBinaryOperatorImpl","sourcecode":"bool == null"},"failures":[42],"tindex":"bb2a7374-2ead-11e6-9792-e3b57aca5ced","method":{"position":"org.apache.commons.lang3.BooleanUtils:775","type":"CtMethodImpl","sourcecode":"public static java.lang.String toStringOnOff(final java.lang.Boolean bool) {\n    if (bool == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.BooleanUtils.toString(bool, \"on\", \"off\", null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bool":"bool"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:661","type":"CtBinaryOperatorImpl","sourcecode":"falseString == null"},"failures":[43,44],"tindex":"bb2a7375-2ead-11e6-9792-5d92fd52e490","method":{"position":"org.apache.commons.lang3.Validate:628","type":"CtMethodImpl","sourcecode":"public static <T>T[] validIndex(final T[] array, final int index, final java.lang.String message, final java.lang.Object... values) {\n    if (message == null) {\n        {\n            org.apache.commons.lang3.Validate.notNull(array);\n            if ((index < 0) || (index >= (array.int))) {\n                throw new java.lang.IndexOutOfBoundsException(java.lang.String.format(message, values));\n            } \n            return array;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"falseString":"message"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1010","type":"CtBinaryOperatorImpl","sourcecode":"element == field"},"failures":[],"tindex":"bb2a9a86-2ead-11e6-9792-8fbf9a131727","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1036","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final int value) {\n    if (value == value) {\n        {\n            org.apache.commons.lang3.time.FastDatePrinter.NumberRule.appendTo(buffer, value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"value","element":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2378","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[45],"tindex":"bb2a9a87-2ead-11e6-9792-370f30f5b659","method":{"position":"org.apache.commons.lang3.ArrayUtils:2404","type":"CtMethodImpl","sourcecode":"public static boolean contains(final char[] array, final char valueToFind) {\n    if (array == null) {\n        {\n            return (org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind)) != (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:1127","type":"CtBinaryOperatorImpl","sourcecode":"(value <= start) || (value >= end)"},"failures":[46],"tindex":"bb2a9a88-2ead-11e6-9792-838a8007270b","method":{"position":"org.apache.commons.lang3.mutable.MutableDouble:177","type":"CtMethodImpl","sourcecode":"public void subtract(final double operand) {\n    if ((operand <= operand) || (value >= operand)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.mutable.MutableDouble.this.double -= operand;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"operand","end":"operand","value":"operand"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:942","type":"CtBinaryOperatorImpl","sourcecode":"(((nHex - 1) * 4) + dstPos) >= 32"},"failures":[47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69],"tindex":"bb2ac199-2ead-11e6-9792-7746ea6c7e1a","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:685","type":"CtMethodImpl","sourcecode":"private int readNextToken(final char[] srcChars, int start, final int len, final org.apache.commons.lang3.text.StrBuilder workArea, final java.util.List<java.lang.String> tokenList) {\n    if ((((len - 1) * 4) + len) >= 32) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            while (start < len) {\n                final int int = java.lang.Math.max(getIgnoredMatcher().isMatch(srcChars, start, start, len), getTrimmerMatcher().isMatch(srcChars, start, start, len));\n                if (((removeLen == 0) || ((getDelimiterMatcher().isMatch(srcChars, start, start, len)) > 0)) || ((getQuoteMatcher().isMatch(srcChars, start, start, len)) > 0)) {\n                    break;\n                } \n                start += removeLen;\n            }\n            if (start >= len) {\n                addToken(tokenList, \"\");\n                return -1;\n            } \n            final int int = getDelimiterMatcher().isMatch(srcChars, start, start, len);\n            if (delimLen > 0) {\n                addToken(tokenList, \"\");\n                return start + delimLen;\n            } \n            final int int = getQuoteMatcher().isMatch(srcChars, start, start, len);\n            if (quoteLen > 0) {\n                return readWithQuotes(srcChars, (start + quoteLen), len, workArea, tokenList, start, quoteLen);\n            } \n            return readWithQuotes(srcChars, start, len, workArea, tokenList, 0, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dstPos":"len","nHex":"len"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:493","type":"CtBinaryOperatorImpl","sourcecode":"(array == null) || ((array.length) == 0)"},"failures":[70,71,72,73,74,75,76,77,78,79,80,81],"tindex":"bb2ae8aa-2ead-11e6-9792-3567c32a9b30","method":{"position":"org.apache.commons.lang3.time.DateUtils:853","type":"CtMethodImpl","sourcecode":"public static java.util.Date truncate(final java.lang.Object date, final int field) {\n    if ((date == null) || (field == 0)) {\n        {\n            if (date == null) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            if (date instanceof java.util.Date) {\n                return org.apache.commons.lang3.time.DateUtils.truncate(((java.util.Date)(date)), field);\n            } else if (date instanceof java.util.Calendar) {\n                return org.apache.commons.lang3.time.DateUtils.truncate(((java.util.Calendar)(date)), field).getTime();\n            } else {\n                throw new java.lang.ClassCastException((\"Could not truncate \" + date));\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"date","length":"field"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:940","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[82,82,83,84,84,85,86,87,88,89,90,91,91,92,93,94,95,96,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,120,121,122,123,123,124,125,126,127,128,128,129,130,130,131,132,133,134,135,136,137,138,138,139,140,141,142,143,144,145,146,147],"tindex":"bb2b0fbb-2ead-11e6-9792-21ffd9a35fad","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:581","type":"CtMethodImpl","sourcecode":"protected void appendCyclicObject(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final java.lang.Object value) {\n    if (value == null) {\n        {\n            org.apache.commons.lang3.ObjectUtils.identityToString(buffer, value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1513","type":"CtBinaryOperatorImpl","sourcecode":"(((nHexs - 1) * 4) + srcPos) >= 8"},"failures":[148],"tindex":"bb2b0fbc-2ead-11e6-9792-614eeeecc7fb","method":{"position":"org.apache.commons.lang3.text.StrBuilder:646","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder append(final java.lang.StringBuilder str, final int startIndex, final int length) {\n    if ((((length - 1) * 4) + startIndex) >= 8) {\n        {\n            if (str == null) {\n                return appendNull();\n            } \n            if ((startIndex < 0) || (startIndex > (str.length()))) {\n                throw new java.lang.StringIndexOutOfBoundsException(\"startIndex must be valid\");\n            } \n            if ((length < 0) || ((startIndex + length) > (str.length()))) {\n                throw new java.lang.StringIndexOutOfBoundsException(\"length must be valid\");\n            } \n            if (length > 0) {\n                final int int = length();\n                ensureCapacity((len + length));\n                str.getChars(startIndex, (startIndex + length), char[], len);\n                int += length;\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcPos":"startIndex","nHexs":"length"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:585","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[],"tindex":"bb2b36cd-2ead-11e6-9792-871ce14977c4","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:270","type":"CtMethodImpl","sourcecode":"public static boolean reflectionEquals(final java.lang.Object lhs, final java.lang.Object rhs, final java.lang.String... excludeFields) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(rhs)) {\n        {\n            return org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(lhs, rhs, false, null, excludeFields);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"rhs"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3088","type":"CtBinaryOperatorImpl","sourcecode":"separatorChars == null"},"failures":[149],"tindex":"bb2b5dde-2ead-11e6-9792-c71eed67f9fe","method":{"position":"org.apache.commons.lang3.StringUtils:6283","type":"CtMethodImpl","sourcecode":"public static java.lang.String reverse(final java.lang.String str) {\n    if (str == null) {\n        {\n            if (str == null) {\n                return null;\n            } \n            return new java.lang.StringBuilder(str).reverse().toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"separatorChars":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:748","type":"CtVariableReadImpl","sourcecode":"quoting"},"failures":[150],"tindex":"bb2b5ddf-2ead-11e6-9792-473888b76551","method":{"position":"org.apache.commons.lang3.BitField:253","type":"CtMethodImpl","sourcecode":"public int setBoolean(final int holder, final boolean flag) {\n    if (flag) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return flag ? set(holder) : clear(holder);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"quoting":"flag"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:142","type":"CtBinaryOperatorImpl","sourcecode":"throwable == null"},"failures":[],"tindex":"bb2b84f0-2ead-11e6-9792-0deaba3ceb94","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:432","type":"CtMethodImpl","sourcecode":"public static void printRootCauseStackTrace(final java.lang.Throwable throwable) {\n    if (throwable == null) {\n        {\n            org.apache.commons.lang3.exception.ExceptionUtils.printRootCauseStackTrace(throwable, java.lang.System.java.lang.System.java.io.PrintStream);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"throwable":"throwable"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:154","type":"CtBinaryOperatorImpl","sourcecode":"expression == false"},"failures":[],"tindex":"bb2b84f1-2ead-11e6-9792-b97e60c0f760","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1674","type":"CtMethodImpl","sourcecode":"protected void setUseFieldNames(final boolean useFieldNames) {\n    if (useFieldNames == false) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.this.boolean = useFieldNames;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"expression":"useFieldNames"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1118","type":"CtBinaryOperatorImpl","sourcecode":"startIndexInclusive < 0"},"failures":[151,152,153],"tindex":"bb2b84f2-2ead-11e6-9792-3709d6e98b7b","method":{"position":"org.apache.commons.lang3.time.DateUtils:1122","type":"CtMethodImpl","sourcecode":"public static java.util.Iterator<java.util.Calendar> iterator(final java.util.Date focus, final int rangeStyle) {\n    if (rangeStyle < 0) {\n        {\n            if (focus == null) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            final java.util.Calendar java.util.Calendar = java.util.Calendar.getInstance();\n            gval.setTime(focus);\n            return org.apache.commons.lang3.time.DateUtils.iterator(gval, rangeStyle);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndexInclusive":"rangeStyle"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2917","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[],"tindex":"bb2bac03-2ead-11e6-9792-a3230be0212c","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:735","type":"CtMethodImpl","sourcecode":"private int readWithQuotes(final char[] srcChars, final int start, final int len, final org.apache.commons.lang3.text.StrBuilder workArea, final java.util.List<java.lang.String> tokenList, final int quoteStart, final int quoteLen) {\n    if (len < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            workArea.clear();\n            int int = start;\n            boolean boolean = quoteLen > 0;\n            int int = 0;\n            while (pos < len) {\n                if (quoting) {\n                    if (isQuote(srcChars, pos, len, quoteStart, quoteLen)) {\n                        if (isQuote(srcChars, (pos + quoteLen), len, quoteStart, quoteLen)) {\n                            workArea.append(srcChars, pos, quoteLen);\n                            pos += quoteLen * 2;\n                            trimStart = workArea.size();\n                            continue;\n                        } \n                        quoting = false;\n                        pos += quoteLen;\n                        continue;\n                    } \n                    workArea.append(srcChars[(pos++)]);\n                    trimStart = workArea.size();\n                } else {\n                    final int int = getDelimiterMatcher().isMatch(srcChars, pos, start, len);\n                    if (delimLen > 0) {\n                        addToken(tokenList, workArea.substring(0, trimStart));\n                        return pos + delimLen;\n                    } \n                    if ((quoteLen > 0) && (isQuote(srcChars, pos, len, quoteStart, quoteLen))) {\n                        quoting = true;\n                        pos += quoteLen;\n                        continue;\n                    } \n                    final int int = getIgnoredMatcher().isMatch(srcChars, pos, start, len);\n                    if (ignoredLen > 0) {\n                        pos += ignoredLen;\n                        continue;\n                    } \n                    final int int = getTrimmerMatcher().isMatch(srcChars, pos, start, len);\n                    if (trimmedLen > 0) {\n                        workArea.append(srcChars, pos, trimmedLen);\n                        pos += trimmedLen;\n                        continue;\n                    } \n                    workArea.append(srcChars[(pos++)]);\n                    trimStart = workArea.size();\n                }\n            }\n            addToken(tokenList, workArea.substring(0, trimStart));\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"len"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:585","type":"CtBinaryOperatorImpl","sourcecode":"(comparison) != 0"},"failures":[154],"tindex":"bb2bac04-2ead-11e6-9792-d7a2bfb8037b","method":{"position":"org.apache.commons.lang3.Conversion:1618","type":"CtMethodImpl","sourcecode":"public static boolean[] shortToBinary(final short src, final int srcPos, final boolean[] dst, final int dstPos, final int nBools) {\n    if (srcPos != 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (0 == nBools) {\n                return dst;\n            } \n            if (((nBools - 1) + srcPos) >= 16) {\n                throw new java.lang.IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 16\");\n            } \n            int int = 0;\n            assert ((nBools - 1) * 1) < (16 - srcPos);\n            for (int int = 0 ; i < nBools ; i++) {\n                shift = (i * 1) + srcPos;\n                dst[(dstPos + i)] = (1 & (src >> shift)) != 0;\n            }\n            return dst;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparison":"srcPos"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1400","type":"CtUnaryOperatorImpl","sourcecode":"!foundDigit"},"failures":[155,156,157],"tindex":"bb2bd315-2ead-11e6-9792-d15f692a1a54","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:294","type":"CtMethodImpl","sourcecode":"public static boolean reflectionEquals(final java.lang.Object lhs, final java.lang.Object rhs, final boolean testTransients) {\n    if (!testTransients) {\n        {\n            return org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(lhs, rhs, testTransients, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"foundDigit":"testTransients"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:517","type":"CtBinaryOperatorImpl","sourcecode":"classArray == null"},"failures":[],"tindex":"bb2bd316-2ead-11e6-9792-eb8c18635348","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1125","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Type[] normalizeUpperBounds(final java.lang.reflect.Type[] bounds) {\n    if (bounds == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.notNull(bounds, \"null value specified for bounds array\");\n            if ((bounds.int) < 2) {\n                return bounds;\n            } \n            final java.util.Set<java.lang.reflect.Type> java.util.Set<java.lang.reflect.Type> = new java.util.HashSet<java.lang.reflect.Type>(bounds.int);\n            for (final java.lang.reflect.Type java.lang.reflect.Type : bounds) {\n                boolean boolean = false;\n                for (final java.lang.reflect.Type java.lang.reflect.Type : bounds) {\n                    if ((type1 != type2) && (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(type2, type1, null))) {\n                        subtypeFound = true;\n                        break;\n                    } \n                }\n                if (!subtypeFound) {\n                    types.add(type1);\n                } \n            }\n            return types.toArray(new java.lang.reflect.Type[types.size()]);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classArray":"bounds"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:573","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"bb2bfa27-2ead-11e6-9792-355e37171d5d","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:943","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n    if (buffer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendTo(buffer, ((calendar.get(java.util.Calendar.java.util.Calendar.int)) % 100));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"buffer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:936","type":"CtBinaryOperatorImpl","sourcecode":"(numerator) == ((-1) * (denominator))"},"failures":[158,159,160,161,162,163,164],"tindex":"bb2bfa28-2ead-11e6-9792-49c6532da73f","method":{"position":"org.apache.commons.lang3.time.DateUtils:646","type":"CtMethodImpl","sourcecode":"private static java.util.Date set(final java.util.Date date, final int calendarField, final int amount) {\n    if (amount == ((-1) * calendarField)) {\n        {\n            if (date == null) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            final java.util.Calendar java.util.Calendar = java.util.Calendar.getInstance();\n            c.setLenient(false);\n            c.setTime(date);\n            c.set(calendarField, amount);\n            return c.getTime();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"numerator":"amount","denominator":"calendarField"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:388","type":"CtBinaryOperatorImpl","sourcecode":"(java.lang.Double.doubleToLongBits(lhs)) != (java.lang.Double.doubleToLongBits(rhs))"},"failures":[],"tindex":"bb2bfa29-2ead-11e6-9792-2f3b802c10dc","method":{"position":"org.apache.commons.lang3.text.StrBuilder:838","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder append(final double value) {\n    if ((java.lang.Double.doubleToLongBits(value)) != (java.lang.Double.doubleToLongBits(value))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return append(java.lang.String.valueOf(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"value","rhs":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1390","type":"CtBinaryOperatorImpl","sourcecode":"0 == nHexs"},"failures":[165,166],"tindex":"bb2c213a-2ead-11e6-9792-0940f5af0f38","method":{"position":"org.apache.commons.lang3.RandomStringUtils:124","type":"CtMethodImpl","sourcecode":"public static java.lang.String randomNumeric(final int count) {\n    if (0 == count) {\n        {\n            return org.apache.commons.lang3.RandomStringUtils.random(count, false, true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nHexs":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:647","type":"CtInvocationImpl","sourcecode":"cls.equals(toClass)"},"failures":[167,168],"tindex":"bb2c213b-2ead-11e6-9792-294489693317","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:304","type":"CtMethodImpl","sourcecode":"public static int indexOfThrowable(final java.lang.Throwable throwable, final java.lang.Class<?> clazz) {\n    if (clazz.equals(clazz)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.exception.ExceptionUtils.indexOf(throwable, clazz, 0, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toClass":"clazz","cls":"clazz"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:253","type":"CtBinaryOperatorImpl","sourcecode":"input != null"},"failures":[94,94],"tindex":"bb2c213c-2ead-11e6-9792-8d31474d7cee","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:829","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final float value) {\n    if (fieldName != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:525","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[169,170,171],"tindex":"bb2c213d-2ead-11e6-9792-3b444d84b118","method":{"position":"org.apache.commons.lang3.text.StrBuilder:151","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder setNewLineText(final java.lang.String newLine) {\n    if (newLine == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.text.StrBuilder.this.java.lang.String = newLine;\n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"newLine"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:633","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[172,173,174,175,176,177,178],"tindex":"bb2c484e-2ead-11e6-9792-db0282390d1a","method":{"position":"org.apache.commons.lang3.exception.ContextedException:253","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.String getFormattedExceptionMessage(final java.lang.String baseMessage) {\n    if (baseMessage == null) {\n        {\n            return org.apache.commons.lang3.exception.ExceptionContext.getFormattedExceptionMessage(baseMessage);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"baseMessage"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:554","type":"CtBinaryOperatorImpl","sourcecode":"str == \"true\""},"failures":[90,90,91,92,97,97,127,127,128,129,130,131,132,133,134,135,135,136,137,138,139,140,141,142,143,144,145,146,147],"tindex":"bb2c484f-2ead-11e6-9792-a7636ee27983","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:745","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final byte value) {\n    if (fieldName == \"true\") {\n        {\n            buffer.append(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1411","type":"CtBinaryOperatorImpl","sourcecode":"unrolled == null"},"failures":[179,180,181,155,182,183,184,17,18,19,20,21,22,23,24,25,26,28,29,185,30,31,32,33,34,35,36,37,156,186,157,187],"tindex":"bb2c4850-2ead-11e6-9792-b3951f020eff","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:388","type":"CtMethodImpl","sourcecode":"private static void reflectionAppend(final java.lang.Object lhs, final java.lang.Object rhs, final java.lang.Class<?> clazz, final org.apache.commons.lang3.builder.EqualsBuilder builder, final boolean useTransients, final java.lang.String[] excludeFields) {\n    if (lhs == null) {\n        {\n            if (org.apache.commons.lang3.builder.EqualsBuilder.isRegistered(lhs, rhs)) {\n                return ;\n            } \n            try {\n                org.apache.commons.lang3.builder.EqualsBuilder.register(lhs, rhs);\n                final java.lang.reflect.Field[] java.lang.reflect.Field[] = clazz.getDeclaredFields();\n                java.lang.reflect.AccessibleObject.setAccessible(fields, true);\n                for (int int = 0 ; (i < (fields.int)) && (builder.boolean) ; i++) {\n                    final java.lang.reflect.Field java.lang.reflect.Field = fields[i];\n                    if ((((!(org.apache.commons.lang3.ArrayUtils.contains(excludeFields, f.getName()))) && ((f.getName().indexOf('$')) == (-1))) && (useTransients || (!(java.lang.reflect.Modifier.isTransient(f.getModifiers()))))) && (!(java.lang.reflect.Modifier.isStatic(f.getModifiers())))) {\n                        try {\n                            builder.append(f.get(lhs), f.get(rhs));\n                        } catch (final java.lang.IllegalAccessException e) {\n                            throw new java.lang.InternalError(\"Unexpected IllegalAccessException\");\n                        }\n                    } \n                }\n            } finally {\n                org.apache.commons.lang3.builder.EqualsBuilder.unregister(lhs, rhs);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"unrolled":"lhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:585","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[188],"tindex":"bb2c6f61-2ead-11e6-9792-7d22d9c07abf","method":{"position":"org.apache.commons.lang3.ArrayUtils:5943","type":"CtMethodImpl","sourcecode":"public static boolean[] removeAll(final boolean[] array, final int... indices) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((boolean[])(org.apache.commons.lang3.ArrayUtils.removeAll(((java.lang.Object)(array)), org.apache.commons.lang3.ArrayUtils.clone(indices))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:567","type":"CtBinaryOperatorImpl","sourcecode":"(((ch0 == 'n') || (ch0 == 'N')) || (ch0 == 'f')) || (ch0 == 'F')"},"failures":[],"tindex":"bb2c6f62-2ead-11e6-9792-596f8ab4d035","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1272","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendSeparator(final char separator) {\n    if ((((separator == 'n') || (ch0 == 'N')) || (ch0 == 'f')) || (ch0 == 'F')) {\n        {\n            if ((size()) > 0) {\n                append(separator);\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch0":"separator"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:962","type":"CtBinaryOperatorImpl","sourcecode":"field == (java.util.Calendar.MILLISECOND)"},"failures":[],"tindex":"bb2c9673-2ead-11e6-9792-b7f83b356492","method":{"position":"org.apache.commons.lang3.text.translate.JavaUnicodeEscaper:36","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.translate.JavaUnicodeEscaper above(final int codepoint) {\n    if (codepoint == codepoint) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.outsideOf(0, codepoint);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"codepoint","java.util.Calendar.MILLISECOND":"codepoint"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3496","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[189],"tindex":"bb2c9674-2ead-11e6-9792-81c2dc96097f","method":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:62","type":"CtMethodImpl","sourcecode":"public static float min(final float[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n            } else if ((array.int) == 0) {\n                throw new java.lang.IllegalArgumentException(\"Array cannot be empty.\");\n            } \n            float float = array[0];\n            for (int int = 1 ; i < (array.int) ; i++) {\n                min = org.apache.commons.lang3.math.IEEE754rUtils.min(array[i], min);\n            }\n            return min;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:995","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[124,124],"tindex":"bb2c9675-2ead-11e6-9792-ed0e72120fc4","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:513","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final short[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, array, null);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:823","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.TypeVariable<?>"},"failures":[190,191],"tindex":"bb2cbd86-2ead-11e6-9792-3546e37d59ad","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1427","type":"CtMethodImpl","sourcecode":"public static boolean containsTypeVariables(java.lang.reflect.Type type) {\n    if (type instanceof java.lang.reflect.TypeVariable<?>) {\n        {\n            if (type instanceof java.lang.reflect.TypeVariable<?>) {\n                return true;\n            } \n            if (type instanceof java.lang.Class<?>) {\n                return (((java.lang.Class<?>)(type)).getTypeParameters().int) > 0;\n            } \n            if (type instanceof java.lang.reflect.ParameterizedType) {\n                for (java.lang.reflect.Type java.lang.reflect.Type : ((java.lang.reflect.ParameterizedType)(type)).getActualTypeArguments()) {\n                    if (org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(arg)) {\n                        return true;\n                    } \n                }\n                return false;\n            } \n            if (type instanceof java.lang.reflect.WildcardType) {\n                java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(type));\n                return (org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(org.apache.commons.lang3.reflect.TypeUtils.getImplicitLowerBounds(wild)[0])) || (org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(wild)[0]));\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:925","type":"CtBinaryOperatorImpl","sourcecode":"newSize <= 0"},"failures":[],"tindex":"bb2cbd87-2ead-11e6-9792-9d4db948a21b","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:951","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic final void appendTo(final java.lang.StringBuffer buffer, final int value) {\n    if (value <= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(((char)((value / 10) + '0')));\n            buffer.append(((char)((value % 10) + '0')));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"newSize":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:732","type":"CtBinaryOperatorImpl","sourcecode":"str != null"},"failures":[192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,222,223,224,224,225,226,227,227,228,229,229,82,83,83,84,84,85,85,86,87,88,89,89,90,91,92,93,94,94,95,95,96,97,97,98,98,99,99,100,101,102,102,103,103,104,105,106,106,107,108,109,110,111,112,112,113,113,114,115,116,117,118,119,120,120,121,122,123,123,124,125,126,126,127,128,129,129,130,130,131,132,133,134,134,135,136,137,138,138,139,139,140,140,141,142,143,144,144,145,145,146,147,230,231,232,233,234,235,236,237,238,239,240,241],"tindex":"bb2da7e8-2ead-11e6-9792-b9fea21c42e5","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1534","type":"CtMethodImpl","sourcecode":"protected void appendFieldEnd(final java.lang.StringBuffer buffer, final java.lang.String fieldName) {\n    if (fieldName != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendFieldSeparator(buffer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:356","type":"CtBinaryOperatorImpl","sourcecode":"toString != null"},"failures":[242],"tindex":"bb2da7e9-2ead-11e6-9792-cb1883b22476","method":{"position":"org.apache.commons.lang3.StringUtils:4214","type":"CtMethodImpl","sourcecode":"public static java.lang.String removeStart(final java.lang.String str, final java.lang.String remove) {\n    if (str != null) {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(remove))) {\n                return str;\n            } \n            if (str.startsWith(remove)) {\n                return str.substring(remove.length());\n            } \n            return str;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toString":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:467","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isLowerCase(ch)"},"failures":[],"tindex":"bb2dcefa-2ead-11e6-9792-77193b640c34","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:972","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrTokenizer setIgnoredChar(final char ignored) {\n    if (java.lang.Character.isLowerCase(ignored)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return setIgnoredMatcher(org.apache.commons.lang3.text.StrMatcher.charMatcher(ignored));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ignored"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3368","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[243],"tindex":"bb2dcefb-2ead-11e6-9792-9f9c8b5bc8fa","method":{"position":"org.apache.commons.lang3.math.NumberUtils:959","type":"CtMethodImpl","sourcecode":"public static int max(final int[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.math.NumberUtils.validateArray(array);\n            int int = array[0];\n            for (int int = 1 ; j < (array.int) ; j++) {\n                if ((array[j]) > max) {\n                    max = array[j];\n                } \n            }\n            return max;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:823","type":"CtBinaryOperatorImpl","sourcecode":"fraction == null"},"failures":[244,245,246],"tindex":"bb2df60c-2ead-11e6-9792-b9149d361e15","method":{"position":"org.apache.commons.lang3.math.Fraction:796","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.math.Fraction multiplyBy(final org.apache.commons.lang3.math.Fraction fraction) {\n    if (fraction == null) {\n        {\n            if (fraction == null) {\n                throw new java.lang.IllegalArgumentException(\"The fraction must not be null\");\n            } \n            if (((int) == 0) || ((fraction.int) == 0)) {\n                return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction;\n            } \n            final int int = org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int, fraction.int);\n            final int int = org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(fraction.int, int);\n            return org.apache.commons.lang3.math.Fraction.getReducedFraction(org.apache.commons.lang3.math.Fraction.mulAndCheck(((int) / d1), ((fraction.int) / d2)), org.apache.commons.lang3.math.Fraction.mulPosAndCheck(((int) / d2), ((fraction.int) / d1)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fraction":"fraction"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:70","type":"CtBinaryOperatorImpl","sourcecode":"pattern == null"},"failures":[247,248,218,249,250,219,220,221],"tindex":"bb2e1d1d-2ead-11e6-9792-d3caf0938eaf","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:492","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setSizeEndText(final java.lang.String sizeEndText) {\n    if (sizeEndText == null) {\n        {\n            super.setSizeEndText(sizeEndText);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pattern":"sizeEndText"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:163","type":"CtBinaryOperatorImpl","sourcecode":"(ex.getCause()) instanceof java.lang.Error"},"failures":[251,252,253,254,255,256,257,258,259,260,261,262],"tindex":"bb2e1d1e-2ead-11e6-9792-a56872b3fa7e","method":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:60","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.concurrent.ConcurrentException extractCause(final java.util.concurrent.ExecutionException ex) {\n    if ((ex.getCause()) instanceof java.lang.Error) {\n        {\n            if ((ex == null) || ((ex.getCause()) == null)) {\n                return null;\n            } \n            org.apache.commons.lang3.concurrent.ConcurrentUtils.throwCause(ex);\n            return new org.apache.commons.lang3.concurrent.ConcurrentException(ex.getMessage() , ex.getCause());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ex":"ex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6741","type":"CtBinaryOperatorImpl","sourcecode":"(s == null) || (t == null)"},"failures":[263,264,265,266,267],"tindex":"bb2e1d1f-2ead-11e6-9792-5b56bb39913c","method":{"position":"org.apache.commons.lang3.StringUtils:1805","type":"CtMethodImpl","sourcecode":"public static boolean containsOnly(final java.lang.CharSequence cs, final char... valid) {\n    if ((cs == null) || (cs == null)) {\n        {\n            if ((valid == null) || (cs == null)) {\n                return false;\n            } \n            if ((cs.length()) == 0) {\n                return true;\n            } \n            if ((valid.int) == 0) {\n                return false;\n            } \n            return (org.apache.commons.lang3.StringUtils.indexOfAnyBut(cs, valid)) == (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"s":"cs","t":"cs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4353","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(remove))"},"failures":[268],"tindex":"bb2e4430-2ead-11e6-9792-d701d82a143b","method":{"position":"org.apache.commons.lang3.StringUtils:7560","type":"CtMethodImpl","sourcecode":"public static java.lang.String prependIfMissing(final java.lang.String str, final java.lang.CharSequence prefix, final java.lang.CharSequence... prefixes) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(str))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.prependIfMissing(str, prefix, false, prefixes);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str","remove":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:208","type":"CtBinaryOperatorImpl","sourcecode":"((className.charAt(0)) == 'L') && ((className.charAt(((className.length()) - 1))) == ';')"},"failures":[],"tindex":"bb2e4431-2ead-11e6-9792-af9220aa13e3","method":{"position":"org.apache.commons.lang3.StringUtils:794","type":"CtMethodImpl","sourcecode":"public static boolean equals(final java.lang.CharSequence cs1, final java.lang.CharSequence cs2) {\n    if (((cs1.charAt(0)) == 'L') && ((className.charAt(((className.length()) - 1))) == ';')) {\n        {\n            if (cs1 == cs2) {\n                return true;\n            } \n            if ((cs1 == null) || (cs2 == null)) {\n                return false;\n            } \n            if ((cs1 instanceof java.lang.String) && (cs2 instanceof java.lang.String)) {\n                return cs1.equals(cs2);\n            } \n            return org.apache.commons.lang3.CharSequenceUtils.regionMatches(cs1, false, 0, cs2, 0, java.lang.Math.max(cs1.length(), cs2.length()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"className":"cs1"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3907","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[269,270,271,272,273,274,275,276],"tindex":"bb2e6b42-2ead-11e6-9792-61325c0fece0","method":{"position":"org.apache.commons.lang3.ArrayUtils:3575","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final float[] array) {\n    if (array == null) {\n        {\n            return (array == null) || ((array.int) == 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:848","type":"CtBinaryOperatorImpl","sourcecode":"varValue != null"},"failures":[277,278,279,280,281,282,283,284],"tindex":"bb2e6b43-2ead-11e6-9792-7b14b4c4e233","method":{"position":"org.apache.commons.lang3.math.NumberUtils:633","type":"CtMethodImpl","sourcecode":"private static boolean isAllZeros(final java.lang.String str) {\n    if (str != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return true;\n            } \n            for (int int = (str.length()) - 1 ; i >= 0 ; i--) {\n                if ((str.charAt(i)) != '0') {\n                    return false;\n                } \n            }\n            return (str.length()) > 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"varValue":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:671","type":"CtInvocationImpl","sourcecode":"str.equals(nullString)"},"failures":[285],"tindex":"bb2e6b44-2ead-11e6-9792-09ba8b570575","method":{"position":"org.apache.commons.lang3.LocaleUtils:292","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.util.Locale> countriesByLanguage(final java.lang.String languageCode) {\n    if (languageCode.equals(languageCode)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (languageCode == null) {\n                return java.util.Collections.emptyList();\n            } \n            java.util.List<java.util.Locale> java.util.List<java.util.Locale> = org.apache.commons.lang3.LocaleUtils.org.apache.commons.lang3.LocaleUtils.java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<java.util.Locale>>.get(languageCode);\n            if (countries == null) {\n                countries = new java.util.ArrayList<java.util.Locale>();\n                final java.util.List<java.util.Locale> java.util.List<java.util.Locale> = org.apache.commons.lang3.LocaleUtils.availableLocaleList();\n                for (int int = 0 ; i < (locales.size()) ; i++) {\n                    final java.util.Locale java.util.Locale = locales.get(i);\n                    if (((languageCode.equals(locale.getLanguage())) && ((locale.getCountry().length()) != 0)) && (locale.getVariant().isEmpty())) {\n                        countries.add(locale);\n                    } \n                }\n                countries = java.util.Collections.unmodifiableList(countries);\n                org.apache.commons.lang3.LocaleUtils.org.apache.commons.lang3.LocaleUtils.java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<java.util.Locale>>.putIfAbsent(languageCode, countries);\n                countries = org.apache.commons.lang3.LocaleUtils.org.apache.commons.lang3.LocaleUtils.java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<java.util.Locale>>.get(languageCode);\n            } \n            return countries;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"languageCode","nullString":"languageCode"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:364","type":"CtBinaryOperatorImpl","sourcecode":"nullValue == null"},"failures":[286],"tindex":"bb2e9255-2ead-11e6-9792-8503fbd926f2","method":{"position":"org.apache.commons.lang3.BooleanUtils:289","type":"CtMethodImpl","sourcecode":"public static boolean toBoolean(final java.lang.Integer value, final java.lang.Integer trueValue, final java.lang.Integer falseValue) {\n    if (falseValue == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                if (trueValue == null) {\n                    return true;\n                } \n                if (falseValue == null) {\n                    return false;\n                } \n            } else if (value.equals(trueValue)) {\n                return true;\n            } else if (value.equals(falseValue)) {\n                return false;\n            } \n            throw new java.lang.IllegalArgumentException(\"The Integer did not match either specified value\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nullValue":"falseValue"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1157","type":"CtBinaryOperatorImpl","sourcecode":"((nBools - 1) + dstPos) >= 8"},"failures":[287,288,289],"tindex":"bb2eb966-2ead-11e6-9792-d19d388948fe","method":{"position":"org.apache.commons.lang3.time.DateUtils:1403","type":"CtMethodImpl","sourcecode":"public static long getFragmentInHours(final java.util.Date date, final int fragment) {\n    if (((fragment - 1) + fragment) >= 8) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nBools":"fragment","dstPos":"fragment"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:768","type":"CtInvocationImpl","sourcecode":"str.trim().startsWith(\"--\")"},"failures":[290],"tindex":"bb2eb967-2ead-11e6-9792-3d3733d3aa07","method":{"position":"org.apache.commons.lang3.StringUtils:2331","type":"CtMethodImpl","sourcecode":"public static java.lang.String substringAfter(final java.lang.String str, final java.lang.String separator) {\n    if (str.trim().startsWith(\"--\")) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n                return str;\n            } \n            if (separator == null) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final int int = str.indexOf(separator);\n            if (pos == (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            return str.substring((pos + (separator.length())));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5266","type":"CtBinaryOperatorImpl","sourcecode":"pads <= 0"},"failures":[291],"tindex":"bb2ee078-2ead-11e6-9792-e15591bf97f3","method":{"position":"org.apache.commons.lang3.ArrayUtils:1154","type":"CtMethodImpl","sourcecode":"public static float[] subarray(final float[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (endIndexExclusive <= 0) {\n        {\n            if (array == null) {\n                return null;\n            } \n            if (startIndexInclusive < 0) {\n                startIndexInclusive = 0;\n            } \n            if (endIndexExclusive > (array.int)) {\n                endIndexExclusive = array.int;\n            } \n            final int int = endIndexExclusive - startIndexInclusive;\n            if (newSize <= 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.float[];\n            } \n            final float[] float[] = new float[newSize];\n            java.lang.System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);\n            return subarray;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pads":"endIndexExclusive"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:173","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[292],"tindex":"bb2ee079-2ead-11e6-9792-a328cb22a4c9","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:698","type":"CtMethodImpl","sourcecode":"public static java.lang.String escapeXml10(final java.lang.String input) {\n    if (input == null) {\n        {\n            return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2129","type":"CtBinaryOperatorImpl","sourcecode":"endIndex > (size)"},"failures":[293],"tindex":"bb2f078a-2ead-11e6-9792-170889c8d746","method":{"position":"org.apache.commons.lang3.StringUtils:5236","type":"CtMethodImpl","sourcecode":"public static java.lang.String rightPad(final java.lang.String str, final int size) {\n    if (size > size) {\n        {\n            return org.apache.commons.lang3.StringUtils.rightPad(str, size, ' ');\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"size","endIndex":"size"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2126","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[294],"tindex":"bb2f078b-2ead-11e6-9792-070b3ee8555c","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1647","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder insert(final int index, final float value) {\n    if (0 == index) {\n        {\n            if (index < 0) {\n                {\n                    return insert(index, java.lang.String.valueOf(value));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:510","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"bb2f078c-2ead-11e6-9792-75c33905d225","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:461","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setSizeStartText(final java.lang.String sizeStartText) {\n    if (sizeStartText == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            super.setSizeStartText(sizeStartText);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"sizeStartText"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1911","type":"CtBinaryOperatorImpl","sourcecode":"searchLen > 0"},"failures":[295],"tindex":"bb2f2e9d-2ead-11e6-9792-2919167e8bd2","method":{"position":"org.apache.commons.lang3.StringUtils:5178","type":"CtMethodImpl","sourcecode":"public static java.lang.String repeat(final java.lang.String str, final java.lang.String separator, final int repeat) {\n    if (repeat > 0) {\n        {\n            if ((str == null) || (separator == null)) {\n                return org.apache.commons.lang3.StringUtils.repeat(str, repeat);\n            } \n            final java.lang.String java.lang.String = org.apache.commons.lang3.StringUtils.repeat((str + separator), repeat);\n            return org.apache.commons.lang3.StringUtils.removeEnd(result, separator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"searchLen":"repeat"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3184","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[296],"tindex":"bb2f2e9e-2ead-11e6-9792-89d08b076f4a","method":{"position":"org.apache.commons.lang3.ArrayUtils:732","type":"CtMethodImpl","sourcecode":"public static java.lang.Short[] nullToEmpty(final java.lang.Short[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((array == null) || ((array.int) == 0)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Short[];\n            } \n            return array;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1870","type":"CtBinaryOperatorImpl","sourcecode":"fieldNameValueSeparator == null"},"failures":[297],"tindex":"bb2f2e9f-2ead-11e6-9792-41768a3764ac","method":{"position":"org.apache.commons.lang3.math.NumberUtils:273","type":"CtMethodImpl","sourcecode":"public static double toDouble(final java.lang.String str, final double defaultValue) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return defaultValue;\n            } \n            try {\n                return java.lang.Double.parseDouble(str);\n            } catch (final java.lang.NumberFormatException nfe) {\n                return defaultValue;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldNameValueSeparator":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.MethodUtils:355","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.lang3.reflect.MemberUtils.isAccessible(method))"},"failures":[],"tindex":"bb2f55b0-2ead-11e6-9792-8b43ca147a7b","method":{"position":"org.apache.commons.lang3.reflect.MethodUtils:512","type":"CtMethodImpl","sourcecode":"public static java.util.Set<java.lang.reflect.Method> getOverrideHierarchy(final java.lang.reflect.Method method, org.apache.commons.lang3.ClassUtils.Interfaces interfacesBehavior) {\n    if (!(org.apache.commons.lang3.reflect.MemberUtils.isAccessible(method))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.notNull(method);\n            final java.util.Set<java.lang.reflect.Method> java.util.Set<java.lang.reflect.Method> = new java.util.LinkedHashSet<java.lang.reflect.Method>();\n            result.add(method);\n            final java.lang.Class<?>[] java.lang.Class<?>[] = method.getParameterTypes();\n            final java.lang.Class<?> java.lang.Class<?> = method.getDeclaringClass();\n            final java.util.Iterator<java.lang.Class<?>> java.util.Iterator<java.lang.Class<?>> = org.apache.commons.lang3.ClassUtils.hierarchy(declaringClass, interfacesBehavior).iterator();\n            hierarchy.next();\n            hierarchyTraversal : while (hierarchy.hasNext()) {\n                final java.lang.Class<?> java.lang.Class<?> = hierarchy.next();\n                final java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.getMatchingAccessibleMethod(c, method.getName(), parameterTypes);\n                if (m == null) {\n                    continue;\n                } \n                if (java.util.Arrays.equals(m.getParameterTypes(), parameterTypes)) {\n                    result.add(m);\n                    continue;\n                } \n                final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(declaringClass, m.getDeclaringClass());\n                for (int int = 0 ; i < (parameterTypes.int) ; i++) {\n                    final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(typeArguments, method.getGenericParameterTypes()[i]);\n                    final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(typeArguments, m.getGenericParameterTypes()[i]);\n                    if (!(org.apache.commons.lang3.reflect.TypeUtils.equals(childType, parentType))) {\n                        continue hierarchyTraversal;\n                    } \n                }\n                result.add(m);\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"method":"method"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2297","type":"CtBinaryOperatorImpl","sourcecode":"pos == (org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND)"},"failures":[298,299,300,301,302],"tindex":"bb2f7cc1-2ead-11e6-9792-890945560a96","method":{"position":"org.apache.commons.lang3.RandomUtils:84","type":"CtMethodImpl","sourcecode":"public static int nextInt(int startInclusive, int endExclusive) {\n    if (startInclusive == startInclusive) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.isTrue((endExclusive >= startInclusive), \"Start value must be smaller or equal to end value.\");\n            org.apache.commons.lang3.Validate.isTrue((startInclusive >= 0), \"Both range values must be non-negative.\");\n            if (startInclusive == endExclusive) {\n                return startInclusive;\n            } \n            return startInclusive + (org.apache.commons.lang3.RandomUtils.org.apache.commons.lang3.RandomUtils.java.util.Random.nextInt((endExclusive - startInclusive)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND":"startInclusive","pos":"startInclusive"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:91","type":"CtBinaryOperatorImpl","sourcecode":"start == seqEnd"},"failures":[303],"tindex":"bb2f7cc2-2ead-11e6-9792-891b97dd2e88","method":{"position":"org.apache.commons.lang3.ArrayUtils:1194","type":"CtMethodImpl","sourcecode":"public static boolean[] subarray(final boolean[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (endIndexExclusive == startIndexInclusive) {\n        {\n            if (array == null) {\n                return null;\n            } \n            if (startIndexInclusive < 0) {\n                startIndexInclusive = 0;\n            } \n            if (endIndexExclusive > (array.int)) {\n                endIndexExclusive = array.int;\n            } \n            final int int = endIndexExclusive - startIndexInclusive;\n            if (newSize <= 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.boolean[];\n            } \n            final boolean[] boolean[] = new boolean[newSize];\n            java.lang.System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);\n            return subarray;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"endIndexExclusive","seqEnd":"startIndexInclusive"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDatePrinter:275","type":"CtBinaryOperatorImpl","sourcecode":"(sub.length()) == 1"},"failures":[],"tindex":"bb2fa3d3-2ead-11e6-9792-5d78cc8b5819","method":{"position":"org.apache.commons.lang3.time.FastDateParser:298","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Object parseObject(final java.lang.String source, final java.text.ParsePosition pos) {\n    if (source.equals(source)) {\n        {\n            if ((source.length()) == 1) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return parse(source, pos);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sub":"source"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2290","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (separator == null)"},"failures":[304],"tindex":"bb2fa3d4-2ead-11e6-9792-1bb1058de78d","method":{"position":"org.apache.commons.lang3.StringUtils:5951","type":"CtMethodImpl","sourcecode":"public static boolean isAlphanumericSpace(final java.lang.CharSequence cs) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(cs)) || (cs == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (cs == null) {\n                return false;\n            } \n            final int int = cs.length();\n            for (int int = 0 ; i < sz ; i++) {\n                if (((java.lang.Character.isLetterOrDigit(cs.charAt(i))) == false) && ((cs.charAt(i)) != ' ')) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"cs","separator":"cs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:738","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[],"tindex":"bb2fcae5-2ead-11e6-9792-1b605451321d","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:408","type":"CtMethodImpl","sourcecode":"private java.lang.String applyRulesToString(final java.util.Calendar c) {\n    if (c == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return applyRules(c, new java.lang.StringBuffer(int)).toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"c"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3092","type":"CtBinaryOperatorImpl","sourcecode":"match || preserveAllTokens"},"failures":[],"tindex":"bb2fcae6-2ead-11e6-9792-f714d12ac2de","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:156","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setDefaultFullDetail(final boolean defaultFullDetail) {\n    if (defaultFullDetail || defaultFullDetail) {\n        {\n            super.setDefaultFullDetail(defaultFullDetail);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"preserveAllTokens":"defaultFullDetail","match":"defaultFullDetail"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4951","type":"CtBinaryOperatorImpl","sourcecode":"end < 0"},"failures":[305],"tindex":"bb2fcae7-2ead-11e6-9792-59b545db6330","method":{"position":"org.apache.commons.lang3.math.Fraction:675","type":"CtMethodImpl","sourcecode":"private static int addAndCheck(final int x, final int y) {\n    if (y < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final long long = ((long)(x)) + ((long)(y));\n            if ((s < (java.lang.Integer.java.lang.Integer.int)) || (s > (java.lang.Integer.java.lang.Integer.int))) {\n                throw new java.lang.ArithmeticException(\"overflow: add\");\n            } \n            return ((int)(s));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"end":"y"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3410","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"bb2ff1f8-2ead-11e6-9792-735a80c8240b","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:742","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final float[] array, final boolean fullDetail) {\n    if (array == null) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, array, java.lang.Boolean.valueOf(fullDetail));\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:579","type":"CtBinaryOperatorImpl","sourcecode":"(u == (java.lang.Integer.MIN_VALUE)) || (v == (java.lang.Integer.MIN_VALUE))"},"failures":[164],"tindex":"bb301909-2ead-11e6-9792-df629e51dfa3","method":{"position":"org.apache.commons.lang3.time.DateUtils:538","type":"CtMethodImpl","sourcecode":"public static java.util.Date setYears(final java.util.Date date, final int amount) {\n    if ((amount == amount) || (amount == (java.lang.Integer.java.lang.Integer.int))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateUtils.set(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"u":"amount","java.lang.Integer.MIN_VALUE":"amount","v":"amount"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:549","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[306,307],"tindex":"bb30401a-2ead-11e6-9792-1167776ee6f3","method":{"position":"org.apache.commons.lang3.math.NumberUtils:323","type":"CtMethodImpl","sourcecode":"public static byte toByte(final java.lang.String str, final byte defaultValue) {\n    if (str == null) {\n        {\n            if (str == null) {\n                return defaultValue;\n            } \n            try {\n                return java.lang.Byte.parseByte(str);\n            } catch (final java.lang.NumberFormatException nfe) {\n                return defaultValue;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1214","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[192,193,194,308,196,197,198,199,200,201,202,203,204,205,206,207,208,209,309,211,212,213,310,215,216,217,247,219,220,221,222,222,223,224,224,225,226,227,227,228,228,229,229,82,82,83,83,84,84,85,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,100,101,102,102,103,104,105,105,106,106,107,108,109,109,110,110,111,112,112,113,113,114,114,115,116,117,118,119,119,120,120,121,122,123,124,125,126,126,127,128,129,129,130,130,131,132,133,134,135,136,136,137,138,139,139,140,140,141,141,142,142,143,144,144,145,145,146,147,311,231,232,233,312,235,236,237,313,239,240,241,54,55,56,57,58,59,60,61,314],"tindex":"bb30672b-2ead-11e6-9792-6d2435f57ec3","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:594","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final java.lang.Object value) {\n    if (value == null) {\n        {\n            buffer.append(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:585","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[315],"tindex":"bb30672c-2ead-11e6-9792-bdce52a2efee","method":{"position":"org.apache.commons.lang3.ArrayUtils:5974","type":"CtMethodImpl","sourcecode":"public static boolean[] removeElements(final boolean[] array, final boolean... values) {\n    if (array == null) {\n        {\n            if ((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            final java.util.HashMap<java.lang.Boolean, org.apache.commons.lang3.mutable.MutableInt> java.util.HashMap<java.lang.Boolean, org.apache.commons.lang3.mutable.MutableInt> = new java.util.HashMap<java.lang.Boolean, org.apache.commons.lang3.mutable.MutableInt>(2);\n            for (final boolean boolean : values) {\n                final java.lang.Boolean java.lang.Boolean = java.lang.Boolean.valueOf(v);\n                final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = occurrences.get(boxed);\n                if (count == null) {\n                    occurrences.put(boxed, new org.apache.commons.lang3.mutable.MutableInt(1));\n                } else {\n                    count.increment();\n                }\n            }\n            final java.util.BitSet java.util.BitSet = new java.util.BitSet();\n            for (final java.util.Map.Entry<java.lang.Boolean, org.apache.commons.lang3.mutable.MutableInt> java.util.Map.Entry<java.lang.Boolean, org.apache.commons.lang3.mutable.MutableInt> : occurrences.entrySet()) {\n                final java.lang.Boolean java.lang.Boolean = e.getKey();\n                int int = 0;\n                for (int int = 0, int int = e.getValue().intValue() ; i < ct ; i++) {\n                    found = org.apache.commons.lang3.ArrayUtils.indexOf(array, v.booleanValue(), found);\n                    if (found < 0) {\n                        break;\n                    } \n                    toRemove.set((found++));\n                }\n            }\n            return ((boolean[])(org.apache.commons.lang3.ArrayUtils.removeAll(array, toRemove)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1854","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[316,317],"tindex":"bb308e3d-2ead-11e6-9792-6f426bda91e7","method":{"position":"org.apache.commons.lang3.math.NumberUtils:982","type":"CtMethodImpl","sourcecode":"public static short max(final short[] array) {\n    if (array == null) {\n        {\n            org.apache.commons.lang3.math.NumberUtils.validateArray(array);\n            short short = array[0];\n            for (int int = 1 ; i < (array.int) ; i++) {\n                if ((array[i]) > max) {\n                    max = array[i];\n                } \n            }\n            return max;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2873","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[],"tindex":"bb308e3e-2ead-11e6-9792-c59546dde735","method":{"position":"org.apache.commons.lang3.text.StrBuilder:808","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder append(final int value) {\n    if (value < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return append(java.lang.String.valueOf(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:265","type":"CtBinaryOperatorImpl","sourcecode":"value == falseValue"},"failures":[],"tindex":"bb30b54f-2ead-11e6-9792-ebbf32a6afc8","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:353","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.time.FastDateFormat getDateTimeInstance(final int dateStyle, final int timeStyle, final java.util.TimeZone timeZone, final java.util.Locale locale) {\n    if (timeStyle == dateStyle) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getDateTimeInstance(dateStyle, timeStyle, timeZone, locale);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"falseValue":"dateStyle","value":"timeStyle"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2687","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.ArrayUtils.isEmpty(array)"},"failures":[318,319,320],"tindex":"bb30b550-2ead-11e6-9792-ddfee19b34d8","method":{"position":"org.apache.commons.lang3.ArrayUtils:418","type":"CtMethodImpl","sourcecode":"public static double[] clone(final double[] array) {\n    if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            return array.clone();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.JavaVersion:138","type":"CtInvocationImpl","sourcecode":"\"1.3\".equals(nom)"},"failures":[],"tindex":"bb30b551-2ead-11e6-9792-85f57fb04f17","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:875","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final java.lang.Object[] lhs, final java.lang.Object[] rhs) {\n    if (\"1.3\".equals(fieldName)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if (!(java.util.Arrays.equals(lhs, rhs))) {\n                java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Object[]>(fieldName) {\n                    private static final long serialVersionUID = 1L;\n\n                    @java.lang.Override\n                    public java.lang.Object[] getLeft() {\n                        return lhs;\n                    }\n\n                    @java.lang.Override\n                    public java.lang.Object[] getRight() {\n                        return rhs;\n                    }\n                });\n            } \n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nom":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:735","type":"CtInvocationImpl","sourcecode":"str.equals(falseString)"},"failures":[],"tindex":"bb30db62-2ead-11e6-9792-cf8eed52b870","method":{"position":"org.apache.commons.lang3.time.FastDateParser:298","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Object parseObject(final java.lang.String source, final java.text.ParsePosition pos) {\n    if (source.equals(source)) {\n        {\n            if ((source.length()) == 1) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return parse(source, pos);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"source","falseString":"source"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1686","type":"CtBinaryOperatorImpl","sourcecode":"0 == nBytes"},"failures":[],"tindex":"bb30db63-2ead-11e6-9792-2df83ca7e8b5","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1647","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder insert(final int index, final float value) {\n    if (0 == index) {\n        {\n            if (index < 0) {\n                {\n                    return insert(index, java.lang.String.valueOf(value));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nBytes":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:580","type":"CtBinaryOperatorImpl","sourcecode":"((ch0 == 'n') || (ch0 == 'N')) && ((ch1 == 'o') || (ch1 == 'O'))"},"failures":[],"tindex":"bb310274-2ead-11e6-9792-350d194e2b80","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:928","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrTokenizer setQuoteChar(final char quote) {\n    if (((quote == 'n') || (ch0 == 'N')) && ((quote == 'o') || (ch1 == 'O'))) {\n        {\n            return setQuoteMatcher(org.apache.commons.lang3.text.StrMatcher.charMatcher(quote));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch0":"quote","ch1":"quote"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2077","type":"CtBinaryOperatorImpl","sourcecode":"len == 0"},"failures":[],"tindex":"bb310275-2ead-11e6-9792-6f6f64cd51f9","method":{"position":"org.apache.commons.lang3.time.FastDateParser:820","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nint modify(final int iValue) {\n    if (iValue == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return iValue % 12;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"iValue"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.StopWatch:181","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.time.StopWatch.this.runningState) != (org.apache.commons.lang3.time.StopWatch.State.UNSTARTED)"},"failures":[],"tindex":"bb310276-2ead-11e6-9792-d36c0a885b27","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:209","type":"CtMethodImpl","sourcecode":"public static java.lang.String replace(final java.lang.Object source, final java.util.Properties valueProperties) {\n    if (source != source) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (valueProperties == null) {\n                return source.toString();\n            } \n            final java.util.Map<java.lang.String, java.lang.String> java.util.Map<java.lang.String, java.lang.String> = new java.util.HashMap<java.lang.String, java.lang.String>();\n            final java.util.Enumeration<?> java.util.Enumeration<?> = valueProperties.propertyNames();\n            while (propNames.hasMoreElements()) {\n                final java.lang.String java.lang.String = ((java.lang.String)(propNames.nextElement()));\n                final java.lang.String java.lang.String = valueProperties.getProperty(propName);\n                valueMap.put(propName, propValue);\n            }\n            return org.apache.commons.lang3.text.StrSubstitutor.replace(source, valueMap);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"runningState":"source","org.apache.commons.lang3.time.StopWatch.State.UNSTARTED":"source"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1070","type":"CtBinaryOperatorImpl","sourcecode":"offset >= 12"},"failures":[321,322,323,324,325,326,327,328,329,330,331,332,333,334],"tindex":"bb312987-2ead-11e6-9792-41134d563159","method":{"position":"org.apache.commons.lang3.time.FastDateParser:814","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nint modify(final int iValue) {\n    if (iValue >= 12) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return iValue % 24;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"offset":"iValue"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:526","type":"CtBinaryOperatorImpl","sourcecode":"i != 0"},"failures":[335,336,49,50,51,52,53,54,55,56,57,58,59,60,61,66,67],"tindex":"bb312988-2ead-11e6-9792-3ffa65547e11","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:831","type":"CtMethodImpl","sourcecode":"private boolean isQuote(final char[] srcChars, final int pos, final int len, final int quoteStart, final int quoteLen) {\n    if (quoteStart != 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = 0 ; i < quoteLen ; i++) {\n                if (((pos + i) >= len) || ((srcChars[(pos + i)]) != (srcChars[(quoteStart + i)]))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"quoteStart"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}