{"failureDictionary":{"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":140,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":219,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":73,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":403,"org.apache.commons.lang3.time.DateUtilsTest.testSetMilliseconds":3,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":216,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_Boolean":245,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":67,"org.apache.commons.lang3.text.StrBuilderTest.testSubstringInt":211,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":347,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":141,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":459,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":461,"org.apache.commons.lang3.time.FastDatePrinterTest.testMilleniumBug":466,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteIntInt":208,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":215,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementLongArray":176,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArrayEqualAsObject":151,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":8,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiBooleanArray":25,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContains_StringWithBadSupplementaryChars":116,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":47,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":192,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":390,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparators_Array":290,"org.apache.commons.lang3.SystemUtilsTest.testGetUserHome":446,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":392,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":149,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":358,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":346,"org.apache.commons.lang3.ArrayUtilsTest.testContainsFloat":132,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":190,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetMatchingAccessibleMethod":452,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllLongArrayRemoveNone":93,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":127,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":138,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":348,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringStringarray":168,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":406,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StrBuilder_int_int":247,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":59,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":408,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":63,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_StrBuilder_int_int":285,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_FormattedString":287,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testExtendedFormats":302,"org.apache.commons.lang3.reflect.TypeLiteralTest.testEquals":457,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementFloatArray":131,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":380,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllLongArrayOutOfBoundsIndex":92,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfFloat":133,"org.apache.commons.lang3.reflect.TypeLiteralTest.testBasic":455,"org.apache.commons.lang3.time.DateUtilsTest.testSetMinutes":230,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendAll_Array":268,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":66,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringString":18,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":180,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StringBuilder_int_int":269,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":123,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_int_int_String":209,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":463,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":48,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":41,"org.apache.commons.lang3.ClassUtilsTest.test_getPackageName_Object":117,"org.apache.commons.lang3.StringUtilsTest.testCenter_StringInt":178,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSizeStartText":416,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":483,"org.apache.commons.lang3.AnnotationUtilsTest.testNonEquivalentAnnotationsOfSameType":434,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableCount_Throwable":23,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StringBuilder":282,"org.apache.commons.lang3.StringUtilsTest.testSwapCase_String":89,"org.apache.commons.lang3.SystemUtilsTest.testOSMatchesName":445,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":313,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":189,"org.apache.commons.lang3.AnnotationUtilsTest.testSameInstance":428,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadStaticFieldIllegalArgumentException1":175,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateLong":128,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":10,"org.apache.commons.lang3.CharEncodingTest.testWorksOnJava1_1_8":307,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":460,"org.apache.commons.lang3.concurrent.ConstantInitializerTest.testEqualsWithOtherObjects":31,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":342,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":225,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":38,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":11,"org.apache.commons.lang3.CharEncodingTest.testMustBeSupportedJava1_3_1":306,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":487,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":362,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":150,"org.apache.commons.lang3.AnnotationUtilsTest.testEquivalence":429,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":194,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithNullText":261,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testBuiltInNumberFormat":304,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":478,"org.apache.commons.lang3.ValidateTest.testIsAssignableExceptionMessage":87,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetContentEnd":415,"org.apache.commons.lang3.CharEncodingTest.testWorksOnJava1_2_2":308,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":484,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparatorsWithNullText":272,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":37,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringString":166,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":375,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":52,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStripAccents":493,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":324,"org.apache.commons.lang3.builder.DiffBuilderTest.testStylePassedToDiffResult":147,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":74,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_StrBuilder":262,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":400,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testBuiltInDateTimeFormat":299,"org.apache.commons.lang3.StringUtilsTest.testRemove_char":109,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":318,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":164,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendSeparator_String_String":267,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetTypeArguments":197,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":186,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":482,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":389,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendSeparator_char":270,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":329,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadRight":284,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":144,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableWriter":310,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":359,"org.apache.commons.lang3.ArrayUtilsTest.testReverse":1,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":370,"org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayString":104,"org.apache.commons.lang3.math.NumberUtilsTest.testMinInt":491,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":369,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":361,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":395,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":374,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang303":475,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowables_Throwable_null":22,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testArrayList":352,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":386,"org.apache.commons.lang3.builder.DiffBuilderTest.testSimilarObjectIgnoresAppends":337,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testBlank":396,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":385,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":220,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StringBuffer":271,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfFloatWithStartIndex":134,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadLeft_int":251,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":341,"org.apache.commons.lang3.StringUtilsTest.testRightPad_StringIntChar":100,"org.apache.commons.lang3.builder.DiffResultTest.testNullStyle":333,"org.apache.commons.lang3.SystemUtilsTest.testOSMatchesNameAndVersion":438,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":163,"org.apache.commons.lang3.StringUtilsTest.testJoin_Objectarray":105,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsInstance":198,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_Object":263,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":476,"org.apache.commons.lang3.ArrayUtilsTest.testContainsChar":159,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":58,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendAll_Collection":252,"org.apache.commons.lang3.math.NumberUtilsTest.testMaximumLong":129,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":485,"org.apache.commons.lang3.builder.CompareToBuilderTest.testDouble":32,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_Object":276,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":315,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":365,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":323,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetAllFields":169,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":321,"org.apache.commons.lang3.builder.DiffBuilderTest.testNullLhs":339,"org.apache.commons.lang3.SystemUtilsTest.testJavaAwtHeadless":441,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":9,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSummaryObjectEndText":425,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":7,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendSeparator_char_int":266,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":148,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":349,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":64,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable":448,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":185,"org.apache.commons.lang3.builder.DiffTest.testGetFieldName":411,"org.apache.commons.lang3.builder.DiffBuilderTest.testSameObjectIgnoresAppends":338,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableList_Throwable_null":21,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_ClassArray_ClassArray":451,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":453,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":72,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":122,"org.apache.commons.lang3.math.NumberUtilsTest.testMinInt_emptyArray":490,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetArraySeparator":423,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":367,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":146,"org.apache.commons.lang3.ConversionTest.testShortArrayToInt":81,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":228,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":322,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":479,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveObjectArray":90,"org.apache.commons.lang3.builder.DiffTest.testToString":412,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testLinkedList":354,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayObject":107,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":154,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsert":283,"org.apache.commons.lang3.text.StrBuilderTest.testTrim":206,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringIntStringBoolean":305,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":125,"org.apache.commons.lang3.exception.ContextedExceptionTest.testGetContextValues":84,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang538":469,"org.apache.commons.lang3.SystemUtilsTest.testIS_OS":439,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testMilleniumBug":473,"org.apache.commons.lang3.AnnotationUtilsTest.testGeneratedAnnotationEquivalentToRealAnnotation":432,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":157,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_String_String_String_String_nullValue":112,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":54,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StringBuffer_int_int":277,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":86,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":142,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":343,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringStringarray":19,"org.apache.commons.lang3.ClassPathUtilsTest.testToFullyQualifiedNameClassString":171,"org.apache.commons.lang3.time.DateUtilsTest.testAddMilliseconds":239,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":394,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":68,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":191,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetRootCause_Throwable":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":39,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":121,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":76,"org.apache.commons.lang3.math.NumberUtilsTest.testMinInt_nullArray":492,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":379,"org.apache.commons.lang3.reflect.TypeUtilsTest.testTypesSatisfyVariables":200,"org.apache.commons.lang3.builder.EqualsBuilderTest.testBoolean":26,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOf_StrMatcher":33,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testExtendedAndBuiltInFormats":303,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetFieldNameValueSeparator":420,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":223,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyCharNull":82,"org.apache.commons.lang3.time.DateUtilsTest.testAddHours":231,"org.apache.commons.lang3.reflect.TypeLiteralTest.testRaw":454,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":326,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_PrimitiveNumber":244,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteDeclaredNamedStaticField":196,"org.apache.commons.lang3.ArrayUtilsTest.testContainsBoolean":97,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":371,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":364,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSizeEndText":419,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":470,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":78,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":12,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":401,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":203,"org.apache.commons.lang3.SystemUtilsTest.testConstructor":447,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":70,"org.apache.commons.lang3.time.DateUtilsTest.testSetYears":241,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_String":265,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":397,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":188,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":409,"org.apache.commons.lang3.SystemUtilsTest.testGetUserDir":442,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":317,"org.apache.commons.lang3.builder.DiffResultTest.testListIsNonModifiable":332,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testSimpleDate":471,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":4,"org.apache.commons.lang3.time.DateUtilsTest.testAddSeconds":229,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_StringBuffer_int_int":274,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":126,"org.apache.commons.lang3.time.DateUtilsTest.testAddMonths":236,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":351,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":42,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StrBuilder":264,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":182,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDefaults":101,"org.apache.commons.lang3.mutable.MutableBooleanTest.testEquals":136,"org.apache.commons.lang3.time.DateUtilsTest.testSetMonths":237,"org.apache.commons.lang3.builder.DiffResultTest.testNullRhs":336,"org.apache.commons.lang3.SystemUtilsTest.testGetJavaHome":444,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":224,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":488,"org.apache.commons.lang3.StringUtilsTest.testRightPad_StringInt":99,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":75,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_String":279,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionCompareEx1":173,"org.apache.commons.lang3.ValidateTest.testIsAssignable":88,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":398,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testOverriddenBuiltinFormat":300,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_StringBuilder_int_int":289,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":85,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":53,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":193,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_String_int_int":250,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryEndIndex":205,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang303":468,"org.apache.commons.lang3.exception.ExceptionUtilsTest.test_getRootCauseMessage_Throwable":20,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableStream":309,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":120,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetRawType":202,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":124,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringStringarray":167,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":312,"org.apache.commons.lang3.ClassUtilsTest.test_getShortClassName_String":102,"org.apache.commons.lang3.time.FastDatePrinterTest.testSimpleDate":464,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_Widening":449,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionCompare":172,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":481,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":363,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":183,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":404,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadRight_int":119,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionCompareEx2":174,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendSeparator_String":135,"org.apache.commons.lang3.StringUtilsTest.testReverseDelimited_StringChar":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":45,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":320,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":98,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_CharArray_int_int":255,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":145,"org.apache.commons.lang3.time.DateUtilsTest.testAddWeeks":232,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendNewLine":254,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":368,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContains_StringWithSupplementaryChars":113,"org.apache.commons.lang3.AnnotationUtilsTest.testBothArgsNull":433,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_String_String_String_String_noMatch":111,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":405,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":79,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":69,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testLang299":259,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetNullText":418,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":486,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":56,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":373,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":377,"org.apache.commons.lang3.builder.DiffTest.testCannotModify":413,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":393,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetRootCauseStackTrace_Throwable":311,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendAll_Iterator":257,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContains_Char":115,"org.apache.commons.lang3.BitFieldTest.testIsAllSet":83,"org.apache.commons.lang3.time.FastDatePrinterTest.testShortDateStyleWithLocales":465,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":155,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_Boolean":246,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":103,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":350,"org.apache.commons.lang3.AnnotationUtilsTest.testOneArgNull":426,"org.apache.commons.lang3.StringUtilsTest.testCenter_StringIntChar":177,"org.apache.commons.lang3.time.FastDatePrinterTest.testFormat":181,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":199,"org.apache.commons.lang3.text.StrBuilderTest.testSubstringIntInt":207,"org.apache.commons.lang3.reflect.TypeUtilsTest.testDetermineTypeVariableAssignments":201,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":143,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":158,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_DefaultUnboxing_Widening":450,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":480,"org.apache.commons.lang3.builder.DiffResultTest.testNullList":330,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_FormattedString":275,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":489,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":382,"org.apache.commons.lang3.SystemUtilsTest.testJavaVersionMatches":437,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":387,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":55,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":46,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementObjectArray":108,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_String_int_int":280,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_3Part":436,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":13,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_String_String_String_String":110,"org.apache.commons.lang3.time.FastDatePrinterTest.testLowYearPadding":467,"org.apache.commons.lang3.StringUtilsTest.testToString":226,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":5,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":391,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testBlank":356,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":407,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":383,"org.apache.commons.lang3.builder.DiffResultTest.testIterator":334,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":62,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_StringBuffer":256,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllNullLongArray":95,"org.apache.commons.lang3.time.DateUtilsTest.testSetHours":240,"org.apache.commons.lang3.builder.DiffResultTest.testNoDifferencesString":331,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":372,"org.apache.commons.lang3.SystemUtilsTest.testGetJavaIoTmpDir":440,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":388,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":15,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryStartIndex":210,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":57,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":137,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":40,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayBoolean":29,"org.apache.commons.lang3.ArrayUtilsTest.testIsEquals":30,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparators_Collection":242,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":327,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":139,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":16,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_CharArray":288,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":156,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":314,"org.apache.commons.lang3.reflect.TypeLiteralTest.testTyped":456,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":162,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":217,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllLongArrayNegativeIndex":94,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":153,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementFloatArray":130,"org.apache.commons.lang3.StringUtilsTest.testToEncodedString":227,"org.apache.commons.lang3.text.StrBuilderTest.testToCharArrayIntInt":212,"org.apache.commons.lang3.builder.EqualsBuilderTest.testBooleanArrayHiddenByObject":28,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":344,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContains_String":114,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":328,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":360,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":221,"org.apache.commons.lang3.time.DateUtilsTest.testAddYears":233,"org.apache.commons.lang3.AnnotationUtilsTest.testAnnotationsOfDifferingTypes":430,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":152,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":222,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendSeparator_char_char":258,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testCopyOnWriteArrayList":353,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":44,"org.apache.commons.lang3.builder.DiffResultTest.testNullLhs":335,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":213,"org.apache.commons.lang3.StringUtilsTest.testJoin_Objects":106,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":399,"org.apache.commons.lang3.ArrayUtilsTest.testToString":458,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetContentStart":417,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_CharArray_int_int":248,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":214,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":366,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":462,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringInt":17,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":357,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendPadding":278,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllLongArray":96,"org.apache.commons.lang3.SystemUtilsTest.testIS_JAVA":443,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSummaryObjectStartText":422,"org.apache.commons.lang3.AnnotationUtilsTest.testHashCode":431,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":384,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_PrimitiveNumber":281,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":319,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":218,"org.apache.commons.lang3.text.StrBuilderTest.testContains_String":160,"org.apache.commons.lang3.text.StrBuilderTest.testSubSequenceIntInt":204,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparators_Iterator":260,"org.apache.commons.lang3.builder.DiffTest.testGetType":414,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":345,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":60,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadLeft":249,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":49,"org.apache.commons.lang3.text.StrTokenizerTest.test8":298,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":195,"org.apache.commons.lang3.time.DateUtilsTest.testRound":184,"org.apache.commons.lang3.text.StrTokenizerTest.test5":295,"org.apache.commons.lang3.text.StrTokenizerTest.test4":294,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":50,"org.apache.commons.lang3.text.StrTokenizerTest.test7":297,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":51,"org.apache.commons.lang3.text.StrTokenizerTest.test6":296,"org.apache.commons.lang3.text.StrTokenizerTest.test1":291,"org.apache.commons.lang3.text.StrTokenizerTest.test3":293,"org.apache.commons.lang3.text.StrTokenizerTest.test2":292,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":376,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetFieldSeparator":2,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":410,"org.apache.commons.lang3.AnnotationUtilsTest.testIsValidAnnotationMemberType":435,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":402,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":477,"org.apache.commons.lang3.time.DateUtilsTest.testSetDays":238,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_StringBuilder":253,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveNumberArray":91,"org.apache.commons.lang3.ClassPathUtilsTest.testToFullyQualifiedNameNullClassString":170,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":36,"org.apache.commons.lang3.ClassUtilsTest.test_getPackageName_Class":118,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveFloatArray":161,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":316,"org.apache.commons.lang3.builder.EqualsBuilderTest.testBooleanArray":27,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetArrayEnd":421,"org.apache.commons.lang3.builder.DiffBuilderTest.testNullRhs":340,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":35,"org.apache.commons.lang3.ConversionTest.testLongToIntArray":34,"org.apache.commons.lang3.time.DateUtilsTest.testTruncateLang59":234,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_CharArray":286,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLowYearPadding":474,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testBuiltInChoiceFormat":301,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetArrayStart":424,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringString":165,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":325,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":381,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_float_float":179,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":187,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":427,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":14,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":472,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsertWithNullText":243,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":378,"org.apache.commons.lang3.time.DateUtilsTest.testSetSeconds":235,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendSeparator_String_int":273,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":355},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3184","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[0,1],"tindex":"b627037d-2ebf-11e6-b0c1-1b251bd82419","method":{"position":"org.apache.commons.lang3.ArrayUtils:1435","type":"CtMethodImpl","sourcecode":"public static void reverse(final java.lang.Object[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return ;\n            } \n            org.apache.commons.lang3.ArrayUtils.reverse(array, 0, array.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:180","type":"CtBinaryOperatorImpl","sourcecode":"(tmp.length()) != (duration.length())"},"failures":[],"tindex":"b62be57e-2ebf-11e6-b0c1-b7ee6864dd5d","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1134","type":"CtMethodImpl","sourcecode":"protected void appendSummary(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final short[] array) {\n    if ((fieldName.length()) != (fieldName.length())) {\n        {\n            appendSummarySize(buffer, fieldName, array.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"duration":"fieldName","tmp":"fieldName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:70","type":"CtBinaryOperatorImpl","sourcecode":"pattern == null"},"failures":[2],"tindex":"b62c0c8f-2ebf-11e6-b0c1-f14eabc6d94b","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1895","type":"CtMethodImpl","sourcecode":"protected void setFieldSeparator(java.lang.String fieldSeparator) {\n    if (fieldSeparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (fieldSeparator == null) {\n                fieldSeparator = \"\";\n            } \n            org.apache.commons.lang3.builder.ToStringStyle.this.java.lang.String = fieldSeparator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pattern":"fieldSeparator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:925","type":"CtBinaryOperatorImpl","sourcecode":"newSize <= 0"},"failures":[3],"tindex":"b62c0c90-2ebf-11e6-b0c1-63afbe4407f6","method":{"position":"org.apache.commons.lang3.time.DateUtils:629","type":"CtMethodImpl","sourcecode":"public static java.util.Date setMilliseconds(final java.util.Date date, final int amount) {\n    if (amount <= 0) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.set(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"newSize":"amount"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2290","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (separator == null)"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16],"tindex":"b62c33a1-2ebf-11e6-b0c1-8f9b4ff6cdb7","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:513","type":"CtMethodImpl","sourcecode":"public java.lang.String replace(java.lang.CharSequence source) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(source)) || (source == null)) {\n        {\n            if (source == null) {\n                return null;\n            } \n            return replace(source, 0, source.length());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"source","separator":"source"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:159","type":"CtBinaryOperatorImpl","sourcecode":"(ex.getCause()) instanceof java.lang.RuntimeException"},"failures":[],"tindex":"b62c33a2-2ebf-11e6-b0c1-5dccd8b51e56","method":{"position":"org.apache.commons.lang3.text.StrBuilder:461","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder append(final java.lang.Object obj) {\n    if ((obj.getCause()) instanceof java.lang.RuntimeException) {\n        {\n            if (obj == null) {\n                return appendNull();\n            } \n            return append(obj.toString());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ex":"obj"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2104","type":"CtBinaryOperatorImpl","sourcecode":"len == 0"},"failures":[],"tindex":"b62c5ab3-2ebf-11e6-b0c1-05a75a0db218","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:831","type":"CtMethodImpl","sourcecode":"private boolean isQuote(final char[] srcChars, final int pos, final int len, final int quoteStart, final int quoteLen) {\n    if (quoteLen == quoteLen) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (pos == 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    for (int int = 0 ; i < quoteLen ; i++) {\n                        if (((pos + i) >= len) || ((srcChars[(pos + i)]) != (srcChars[(quoteStart + i)]))) {\n                            return false;\n                        } \n                    }\n                    return true;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"pos"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomUtils:115","type":"CtBinaryOperatorImpl","sourcecode":"startInclusive == endExclusive"},"failures":[],"tindex":"b62c81c4-2ebf-11e6-b0c1-ffcdede37618","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:443","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.StringBuffer format(final long millis, final java.lang.StringBuffer buf) {\n    if (millis == millis) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return format(new java.util.Date(millis), buf);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startInclusive":"millis","endExclusive":"millis"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5374","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[17],"tindex":"b62c81c5-2ebf-11e6-b0c1-b1ad58831aa7","method":{"position":"org.apache.commons.lang3.text.WordUtils:96","type":"CtMethodImpl","sourcecode":"public static java.lang.String wrap(final java.lang.String str, final int wrapLength) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.text.WordUtils.wrap(str, wrapLength, null, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6284","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[18,19],"tindex":"b62c81c6-2ebf-11e6-b0c1-53f2662e1006","method":{"position":"org.apache.commons.lang3.CharSetUtils:64","type":"CtMethodImpl","sourcecode":"public static java.lang.String squeeze(final java.lang.String str, final java.lang.String... set) {\n    if (str == null) {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.CharSetUtils.deepEmpty(set))) {\n                return str;\n            } \n            final org.apache.commons.lang3.CharSet org.apache.commons.lang3.CharSet = org.apache.commons.lang3.CharSet.getInstance(set);\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(str.length());\n            final char[] char[] = str.toCharArray();\n            final int int = chrs.int;\n            char char = ' ';\n            char char = ' ';\n            for (int int = 0 ; i < sz ; i++) {\n                ch = chrs[i];\n                if (((ch == lastChar) && (i != 0)) && (chars.contains(ch))) {\n                    continue;\n                } \n                buffer.append(ch);\n                lastChar = ch;\n            }\n            return buffer.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:142","type":"CtBinaryOperatorImpl","sourcecode":"throwable == null"},"failures":[20,21,22,23,24],"tindex":"b62ca8d7-2ebf-11e6-b0c1-018de4a936b5","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:280","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.lang.Throwable> getThrowableList(java.lang.Throwable throwable) {\n    if (throwable == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<java.lang.Throwable> java.util.List<java.lang.Throwable> = new java.util.ArrayList<java.lang.Throwable>();\n            while ((throwable != null) && ((list.contains(throwable)) == false)) {\n                list.add(throwable);\n                throwable = org.apache.commons.lang3.exception.ExceptionUtils.getCause(throwable);\n            }\n            return list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"throwable":"throwable"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1431","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.Class<?>"},"failures":[],"tindex":"b62ccfe8-2ebf-11e6-b0c1-ef6267bccfc4","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1468","type":"CtMethodImpl","sourcecode":"protected void appendIdentityHashCode(final java.lang.StringBuffer buffer, final java.lang.Object object) {\n    if (object instanceof java.lang.Class<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.builder.ToStringStyle.this.isUseIdentityHashCode()) && (object != null)) {\n                org.apache.commons.lang3.builder.ToStringStyle.register(object);\n                buffer.append('@');\n                buffer.append(java.lang.Integer.toHexString(java.lang.System.identityHashCode(object)));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:385","type":"CtFieldReadImpl","sourcecode":"objectsTriviallyEqual"},"failures":[25,26,27,28,29,30],"tindex":"b62ccfe9-2ebf-11e6-b0c1-5f400ff4db11","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:621","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.EqualsBuilder append(final boolean lhs, final boolean rhs) {\n    if (rhs) {\n        {\n            if ((boolean) == false) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            boolean = lhs == rhs;\n            return org.apache.commons.lang3.builder.EqualsBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsTriviallyEqual":"rhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1305","type":"CtBinaryOperatorImpl","sourcecode":"typeArgument == null"},"failures":[31],"tindex":"b62cf6fa-2ebf-11e6-b0c1-539e0e4d0257","method":{"position":"org.apache.commons.lang3.concurrent.ConstantInitializer:106","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\n@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.concurrent.ConstantInitializer.this) == obj) {\n                return true;\n            } \n            if (!(obj instanceof org.apache.commons.lang3.concurrent.ConstantInitializer<?>)) {\n                return false;\n            } \n            final org.apache.commons.lang3.concurrent.ConstantInitializer<?> org.apache.commons.lang3.concurrent.ConstantInitializer<?> = ((org.apache.commons.lang3.concurrent.ConstantInitializer<?>)(obj));\n            return org.apache.commons.lang3.ObjectUtils.equals(getObject(), c.getObject());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeArgument":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:103","type":"CtInvocationImpl","sourcecode":"java.lang.Double.isNaN(a)"},"failures":[32],"tindex":"b62e568b-2ebf-11e6-b0c1-437834fde7a2","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:547","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final double lhs, final double rhs) {\n    if (java.lang.Double.isNaN(rhs)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            int = java.lang.Double.compare(lhs, rhs);\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"rhs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:1001","type":"CtBinaryOperatorImpl","sourcecode":"trimmer != null"},"failures":[33],"tindex":"b62e7d9c-2ebf-11e6-b0c1-4f80598526d9","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2375","type":"CtMethodImpl","sourcecode":"public int indexOf(final org.apache.commons.lang3.text.StrMatcher matcher) {\n    if (matcher != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return indexOf(matcher, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trimmer":"matcher"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:768","type":"CtBinaryOperatorImpl","sourcecode":"(comparison) != 0"},"failures":[34],"tindex":"b62e7d9d-2ebf-11e6-b0c1-9baff5fa24fb","method":{"position":"org.apache.commons.lang3.Conversion:1188","type":"CtMethodImpl","sourcecode":"public static int[] longToIntArray(final long src, final int srcPos, final int[] dst, final int dstPos, final int nInts) {\n    if (srcPos != 0) {\n        {\n            if (0 == nInts) {\n                return dst;\n            } \n            if ((((nInts - 1) * 32) + srcPos) >= 64) {\n                throw new java.lang.IllegalArgumentException(\"(nInts-1)*32+srcPos is greather or equal to than 64\");\n            } \n            int int = 0;\n            for (int int = 0 ; i < nInts ; i++) {\n                shift = (i * 32) + srcPos;\n                dst[(dstPos + i)] = ((int)(-1 & (src >> shift)));\n            }\n            return dst;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparison":"srcPos"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:452","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[35,35,36,37,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,79,80],"tindex":"b62ea4ae-2ebf-11e6-b0c1-798cae31d024","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1297","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final double[] array) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(fieldName)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(java.lang.String);\n            for (int int = 0 ; i < (array.int) ; i++) {\n                if (i > 0) {\n                    buffer.append(java.lang.String);\n                } \n                appendDetail(buffer, fieldName, array[i]);\n            }\n            buffer.append(java.lang.String);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2080","type":"CtBinaryOperatorImpl","sourcecode":"len > (size)"},"failures":[81],"tindex":"b62fb61f-2ebf-11e6-b0c1-6d1536e5702c","method":{"position":"org.apache.commons.lang3.Conversion:759","type":"CtMethodImpl","sourcecode":"public static int shortArrayToInt(final short[] src, final int srcPos, final int dstInit, final int dstPos, final int nShorts) {\n    if (dstPos > dstInit) {\n        {\n            if ((((src.int) == 0) && (srcPos == 0)) || (0 == nShorts)) {\n                return dstInit;\n            } \n            if ((((nShorts - 1) * 16) + dstPos) >= 32) {\n                throw new java.lang.IllegalArgumentException(\"(nShorts-1)*16+dstPos is greather or equal to than 32\");\n            } \n            int int = dstInit;\n            int int = 0;\n            for (int int = 0 ; i < nShorts ; i++) {\n                shift = (i * 16) + dstPos;\n                final int int = (65535 & (src[(i + srcPos)])) << shift;\n                final int int = 65535 << shift;\n                out = (out & (~mask)) | bits;\n            }\n            return out;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"dstPos","size":"dstInit"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3794","type":"CtBinaryOperatorImpl","sourcecode":"array2 == null"},"failures":[82],"tindex":"b62fb620-2ebf-11e6-b0c1-119ea69d539c","method":{"position":"org.apache.commons.lang3.ArrayUtils:592","type":"CtMethodImpl","sourcecode":"public static char[] nullToEmpty(final char[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((array == null) || ((array.int) == 0)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.char[];\n            } \n            return array;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array2":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2345","type":"CtBinaryOperatorImpl","sourcecode":"strLen == 0"},"failures":[83],"tindex":"b62fdd31-2ebf-11e6-b0c1-59d42f0f4700","method":{"position":"org.apache.commons.lang3.BitField:138","type":"CtMethodImpl","sourcecode":"public boolean isAllSet(final int holder) {\n    if (holder == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (holder & (int)) == (int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"strLen":"holder"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2805","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[84],"tindex":"b62fdd32-2ebf-11e6-b0c1-8f24baf0f4f7","method":{"position":"org.apache.commons.lang3.exception.ContextedException:199","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<java.lang.Object> getContextValues(final java.lang.String label) {\n    if (label == null) {\n        {\n            return org.apache.commons.lang3.exception.ContextedException.this.org.apache.commons.lang3.exception.ExceptionContext.getContextValues(label);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"label"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:778","type":"CtBinaryOperatorImpl","sourcecode":"classes == null"},"failures":[85,86],"tindex":"b62fdd33-2ebf-11e6-b0c1-8bd6cf976342","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:197","type":"CtMethodImpl","sourcecode":"public static <V>java.lang.String replace(final java.lang.Object source, final java.util.Map<java.lang.String, V> valueMap, final java.lang.String prefix, final java.lang.String suffix) {\n    if (source == null) {\n        {\n            return new org.apache.commons.lang3.text.StrSubstitutor(valueMap , prefix , suffix).replace(source);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classes":"source"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:585","type":"CtBinaryOperatorImpl","sourcecode":"((java.lang.Math.abs(u)) == 1) || ((java.lang.Math.abs(v)) == 1)"},"failures":[],"tindex":"b6300444-2ebf-11e6-b0c1-bb4c085a2c2a","method":{"position":"org.apache.commons.lang3.time.DateUtils:1726","type":"CtMethodImpl","sourcecode":"public static boolean truncatedEquals(final java.util.Calendar cal1, final java.util.Calendar cal2, final int field) {\n    if (((java.lang.Math.abs(field)) == 1) || ((java.lang.Math.abs(field)) == 1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (org.apache.commons.lang3.time.DateUtils.truncatedCompareTo(cal1, cal2, field)) == 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"u":"field","v":"field"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.SerializationUtils:105","type":"CtBinaryOperatorImpl","sourcecode":"in != null"},"failures":[],"tindex":"b6300445-2ebf-11e6-b0c1-ab2cf182ce3a","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:568","type":"CtMethodImpl","sourcecode":"private void readObject(final java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {\n    if (in != null) {\n        {\n            in.defaultReadObject();\n            init();\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"in":"in"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6509","type":"CtBinaryOperatorImpl","sourcecode":"at == (org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND)"},"failures":[],"tindex":"b6300446-2ebf-11e6-b0c1-9bd21b7498f3","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:831","type":"CtMethodImpl","sourcecode":"private boolean isQuote(final char[] srcChars, final int pos, final int len, final int quoteStart, final int quoteLen) {\n    if (quoteLen == quoteLen) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (pos == 0) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    for (int int = 0 ; i < quoteLen ; i++) {\n                        if (((pos + i) >= len) || ((srcChars[(pos + i)]) != (srcChars[(quoteStart + i)]))) {\n                            return false;\n                        } \n                    }\n                    return true;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND":"quoteLen","at":"quoteLen"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1491","type":"CtBinaryOperatorImpl","sourcecode":"(raw.getEnclosingClass()) == null"},"failures":[87,88],"tindex":"b6302b57-2ebf-11e6-b0c1-ade81b9148c3","method":{"position":"org.apache.commons.lang3.Validate:1225","type":"CtMethodImpl","sourcecode":"public static void isAssignableFrom(final java.lang.Class<?> superType, final java.lang.Class<?> type) {\n    if ((type.getEnclosingClass()) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((superType.isAssignableFrom(type)) == false) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.java.lang.String, (type == null ? \"null\" : type.getName()), superType.getName()));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"raw":"type"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:961","type":"CtBinaryOperatorImpl","sourcecode":"className == null"},"failures":[89],"tindex":"b6302b58-2ebf-11e6-b0c1-79379cafb712","method":{"position":"org.apache.commons.lang3.StringUtils:5769","type":"CtMethodImpl","sourcecode":"public static java.lang.String swapCase(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n                return str;\n            } \n            final char[] char[] = str.toCharArray();\n            for (int int = 0 ; i < (buffer.int) ; i++) {\n                final char char = buffer[i];\n                if (java.lang.Character.isUpperCase(ch)) {\n                    buffer[i] = java.lang.Character.toLowerCase(ch);\n                } else if (java.lang.Character.isTitleCase(ch)) {\n                    buffer[i] = java.lang.Character.toLowerCase(ch);\n                } else if (java.lang.Character.isLowerCase(ch)) {\n                    buffer[i] = java.lang.Character.toUpperCase(ch);\n                } \n            }\n            return new java.lang.String(buffer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"className":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:514","type":"CtBinaryOperatorImpl","sourcecode":"strLen > 0"},"failures":[90,91],"tindex":"b6302b59-2ebf-11e6-b0c1-396b5a31a659","method":{"position":"org.apache.commons.lang3.ArrayUtils:4611","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>T[] remove(final T[] array, final int index) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((T[])(org.apache.commons.lang3.ArrayUtils.remove(((java.lang.Object)(array)), index)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"strLen":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.NoSuchMethodException","condition":{"position":"org.apache.commons.lang3.StringUtils:5302","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(padStr)"},"failures":[],"tindex":"b630526a-2ebf-11e6-b0c1-c51405c4bd09","method":{"position":"org.apache.commons.lang3.reflect.MethodUtils:283","type":"CtMethodImpl","sourcecode":"public static java.lang.Object invokeStaticMethod(final java.lang.Class<?> cls, final java.lang.String methodName, java.lang.Object[] args, java.lang.Class<?>[] parameterTypes) throws java.lang.IllegalAccessException, java.lang.NoSuchMethodException, java.lang.reflect.InvocationTargetException {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(methodName)) {\n        throw new java.lang.NoSuchMethodException();\n    } else {\n        {\n            args = org.apache.commons.lang3.ArrayUtils.nullToEmpty(args);\n            parameterTypes = org.apache.commons.lang3.ArrayUtils.nullToEmpty(parameterTypes);\n            final java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.getMatchingAccessibleMethod(cls, methodName, parameterTypes);\n            if (method == null) {\n                throw new java.lang.NoSuchMethodException((((\"No such accessible method: \" + methodName) + \"() on class: \") + (cls.getName())));\n            } \n            return method.invoke(null, args);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"padStr":"methodName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:738","type":"CtBinaryOperatorImpl","sourcecode":"rhs == null"},"failures":[92,93,94,95,96],"tindex":"b630a08b-2ebf-11e6-b0c1-f7769b5fdc8a","method":{"position":"org.apache.commons.lang3.ArrayUtils:5680","type":"CtMethodImpl","sourcecode":"public static long[] removeAll(final long[] array, final int... indices) {\n    if (indices == null) {\n        {\n            return ((long[])(org.apache.commons.lang3.ArrayUtils.removeAll(((java.lang.Object)(array)), org.apache.commons.lang3.ArrayUtils.clone(indices))));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"rhs":"indices"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:118","type":"CtVariableReadImpl","sourcecode":"isHex"},"failures":[97],"tindex":"b630a08c-2ebf-11e6-b0c1-6766c7d26932","method":{"position":"org.apache.commons.lang3.ArrayUtils:2939","type":"CtMethodImpl","sourcecode":"public static boolean contains(final boolean[] array, final boolean valueToFind) {\n    if (valueToFind) {\n        {\n            return (org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind)) != (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isHex":"valueToFind"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:728","type":"CtBinaryOperatorImpl","sourcecode":"str == trueString"},"failures":[98,98,48,48,49,50,51,52,53,54,55,56,57,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80],"tindex":"b630a08d-2ebf-11e6-b0c1-699ad76e0f04","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1114","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final short[] array) {\n    if (fieldName == fieldName) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(java.lang.String);\n            for (int int = 0 ; i < (array.int) ; i++) {\n                if (i > 0) {\n                    buffer.append(java.lang.String);\n                } \n                appendDetail(buffer, fieldName, array[i]);\n            }\n            buffer.append(java.lang.String);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName","trueString":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.reflect.InvocationTargetException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:654","type":"CtBinaryOperatorImpl","sourcecode":"lhs == null"},"failures":[],"tindex":"b630c79e-2ebf-11e6-b0c1-ddff0d7c7cfe","method":{"position":"org.apache.commons.lang3.reflect.MethodUtils:153","type":"CtMethodImpl","sourcecode":"public static java.lang.Object invokeExactMethod(final java.lang.Object object, final java.lang.String methodName, java.lang.Object... args) throws java.lang.IllegalAccessException, java.lang.NoSuchMethodException, java.lang.reflect.InvocationTargetException {\n    if (args == null) {\n        {\n            args = org.apache.commons.lang3.ArrayUtils.nullToEmpty(args);\n            final java.lang.Class<?>[] java.lang.Class<?>[] = org.apache.commons.lang3.ClassUtils.toClass(args);\n            return org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(object, methodName, args, parameterTypes);\n        }\n    } else {\n        throw new java.lang.reflect.InvocationTargetException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"args"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2119","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[99,100],"tindex":"b630c79f-2ebf-11e6-b0c1-dda5773653b0","method":{"position":"org.apache.commons.lang3.StringUtils:5261","type":"CtMethodImpl","sourcecode":"public static java.lang.String rightPad(final java.lang.String str, final int size, final char padChar) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return null;\n            } \n            final int int = size - (str.length());\n            if (pads <= 0) {\n                return str;\n            } \n            if (pads > (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) {\n                return org.apache.commons.lang3.StringUtils.rightPad(str, size, java.lang.String.valueOf(padChar));\n            } \n            return str.concat(org.apache.commons.lang3.StringUtils.repeat(padChar, pads));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:648","type":"CtBinaryOperatorImpl","sourcecode":"(comparison) != 0"},"failures":[101],"tindex":"b630c7a0-2ebf-11e6-b0c1-871174fe4b79","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:288","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.time.FastDateFormat getTimeInstance(final int style, final java.util.TimeZone timeZone, final java.util.Locale locale) {\n    if (style != 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getTimeInstance(style, timeZone, locale);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparison":"style"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2034","type":"CtBinaryOperatorImpl","sourcecode":"sizeEndText == null"},"failures":[102],"tindex":"b630eeb1-2ebf-11e6-b0c1-19fd39fabe69","method":{"position":"org.apache.commons.lang3.ClassUtils:194","type":"CtMethodImpl","sourcecode":"public static java.lang.String getShortClassName(java.lang.String className) {\n    if (className == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(className)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            if (className.startsWith(\"[\")) {\n                while ((className.charAt(0)) == '[') {\n                    className = className.substring(1);\n                    arrayPrefix.append(\"[]\");\n                }\n                if (((className.charAt(0)) == 'L') && ((className.charAt(((className.length()) - 1))) == ';')) {\n                    className = className.substring(1, ((className.length()) - 1));\n                } \n                if (org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.String, java.lang.String>.containsKey(className)) {\n                    className = org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.String, java.lang.String>.get(className);\n                } \n            } \n            final int int = className.lastIndexOf(org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.char);\n            final int int = className.indexOf(org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.char, (lastDotIdx == (-1) ? 0 : lastDotIdx + 1));\n            java.lang.String java.lang.String = className.substring((lastDotIdx + 1));\n            if (innerIdx != (-1)) {\n                out = out.replace(org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.char, org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.char);\n            } \n            return out + arrayPrefix;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sizeEndText":"className"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:120","type":"CtBinaryOperatorImpl","sourcecode":"(str.charAt(3)) != '_'"},"failures":[],"tindex":"b6327552-2ebf-11e6-b0c1-775b0b6531e9","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:147","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.time.FastDateFormat getInstance(final java.lang.String pattern, final java.util.Locale locale) {\n    if ((pattern.charAt(3)) != '_') {\n        {\n            return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getInstance(pattern, null, locale);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"pattern"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:912","type":"CtBinaryOperatorImpl","sourcecode":"(toString) == null"},"failures":[103],"tindex":"b6327553-2ebf-11e6-b0c1-a337448fe04f","method":{"position":"org.apache.commons.lang3.time.DateFormatUtils:250","type":"CtMethodImpl","sourcecode":"public static java.lang.String format(final long millis, final java.lang.String pattern, final java.util.Locale locale) {\n    if (pattern == null) {\n        {\n            return org.apache.commons.lang3.time.DateFormatUtils.format(new java.util.Date(millis), pattern, null, locale);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toString":"pattern"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:221","type":"CtBinaryOperatorImpl","sourcecode":"(numerator == (java.lang.Integer.MIN_VALUE)) || (denominator == (java.lang.Integer.MIN_VALUE))"},"failures":[],"tindex":"b6327554-2ebf-11e6-b0c1-f346f81194d0","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:675","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final int value) {\n    if ((value == value) || (value == (java.lang.Integer.java.lang.Integer.int))) {\n        {\n            appendFieldStart(buffer, fieldName);\n            appendDetail(buffer, fieldName, value);\n            appendFieldEnd(buffer, fieldName);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.lang.Integer.MIN_VALUE":"value","numerator":"value","denominator":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:199","type":"CtBinaryOperatorImpl","sourcecode":"(tmp.length()) != (duration.length())"},"failures":[],"tindex":"b6329c65-2ebf-11e6-b0c1-1d8af534732a","method":{"position":"org.apache.commons.lang3.exception.ContextedRuntimeException:199","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<java.lang.Object> getContextValues(final java.lang.String label) {\n    if ((label.length()) != (label.length())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.exception.ContextedRuntimeException.this.org.apache.commons.lang3.exception.ExceptionContext.getContextValues(label);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"duration":"label","tmp":"label"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4182","type":"CtBinaryOperatorImpl","sourcecode":"count == sz"},"failures":[],"tindex":"b6329c66-2ebf-11e6-b0c1-2f4f8b4ca779","method":{"position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:63","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.translate.NumericEntityEscaper below(final int codepoint) {\n    if (codepoint == codepoint) {\n        {\n            return org.apache.commons.lang3.text.translate.NumericEntityEscaper.outsideOf(codepoint, java.lang.Integer.java.lang.Integer.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sz":"codepoint","count":"codepoint"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:675","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[104,105,106,107],"tindex":"b6329c67-2ebf-11e6-b0c1-61fdac2e6e37","method":{"position":"org.apache.commons.lang3.StringUtils:3948","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final java.lang.Object[] array, final java.lang.String separator) {\n    if (separator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            return org.apache.commons.lang3.StringUtils.join(array, separator, 0, array.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"separator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3088","type":"CtBinaryOperatorImpl","sourcecode":"separatorChars == null"},"failures":[108],"tindex":"b632c378-2ebf-11e6-b0c1-8154f354495b","method":{"position":"org.apache.commons.lang3.ArrayUtils:4641","type":"CtMethodImpl","sourcecode":"public static <T>T[] removeElement(final T[] array, final java.lang.Object element) {\n    if (element == null) {\n        {\n            final int int = org.apache.commons.lang3.ArrayUtils.indexOf(array, element);\n            if (index == (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int)) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            return org.apache.commons.lang3.ArrayUtils.remove(array, index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"separatorChars":"element"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDateParser:340","type":"CtVariableReadImpl","sourcecode":"unquote"},"failures":[],"tindex":"b632c379-2ebf-11e6-b0c1-2baa0470dc21","method":{"position":"org.apache.commons.lang3.Validate:802","type":"CtMethodImpl","sourcecode":"public static void validState(final boolean expression) {\n    if (expression) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (expression == false) {\n                throw new java.lang.IllegalStateException(org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.java.lang.String);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"unquote":"expression"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:1014","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[],"tindex":"b632c37a-2ebf-11e6-b0c1-e5cc01f9bec4","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:199","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (obj == (org.apache.commons.lang3.reflect.TypeUtils.ParameterizedTypeImpl.this)) || ((obj instanceof java.lang.reflect.ParameterizedType) && (org.apache.commons.lang3.reflect.TypeUtils.equals(org.apache.commons.lang3.reflect.TypeUtils.ParameterizedTypeImpl.this, ((java.lang.reflect.ParameterizedType)(obj)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:690","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[109],"tindex":"b632ea8b-2ebf-11e6-b0c1-cf840979e49a","method":{"position":"org.apache.commons.lang3.StringUtils:4378","type":"CtMethodImpl","sourcecode":"public static java.lang.String remove(final java.lang.String str, final char remove) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || ((str.indexOf(remove)) == (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int))) {\n                return str;\n            } \n            final char[] char[] = str.toCharArray();\n            int int = 0;\n            for (int int = 0 ; i < (chars.int) ; i++) {\n                if ((chars[i]) != remove) {\n                    chars[(pos++)] = chars[i];\n                } \n            }\n            return new java.lang.String(chars , 0 , pos);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4323","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.endsWithIgnoreCase(str, remove)"},"failures":[110,111,112],"tindex":"b632ea8c-2ebf-11e6-b0c1-676838689958","method":{"position":"org.apache.commons.lang3.BooleanUtils:656","type":"CtMethodImpl","sourcecode":"public static java.lang.Boolean toBooleanObject(final java.lang.String str, final java.lang.String trueString, final java.lang.String falseString, final java.lang.String nullString) {\n    if (org.apache.commons.lang3.StringUtils.endsWithIgnoreCase(str, trueString)) {\n        {\n            if (str == null) {\n                if (trueString == null) {\n                    return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                } \n                if (falseString == null) {\n                    return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                } \n                if (nullString == null) {\n                    return null;\n                } \n            } else if (str.equals(trueString)) {\n                return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n            } else if (str.equals(falseString)) {\n                return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n            } else if (str.equals(nullString)) {\n                return null;\n            } \n            throw new java.lang.IllegalArgumentException(\"The String did not match any specified value\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str","remove":"trueString"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Range:450","type":"CtBinaryOperatorImpl","sourcecode":"result == null"},"failures":[113,114,115,116],"tindex":"b633119d-2ebf-11e6-b0c1-6799ea54853a","method":{"position":"org.apache.commons.lang3.StringUtils:1444","type":"CtMethodImpl","sourcecode":"public static boolean contains(final java.lang.CharSequence seq, final java.lang.CharSequence searchSeq) {\n    if (seq == null) {\n        {\n            if ((seq == null) || (searchSeq == null)) {\n                return false;\n            } \n            return (org.apache.commons.lang3.CharSequenceUtils.indexOf(seq, searchSeq, 0)) >= 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"result":"seq"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:647","type":"CtInvocationImpl","sourcecode":"cls.equals(toClass)"},"failures":[117,118],"tindex":"b633119e-2ebf-11e6-b0c1-0550093e7ae6","method":{"position":"org.apache.commons.lang3.ClassUtils:280","type":"CtMethodImpl","sourcecode":"public static java.lang.String getPackageName(final java.lang.Class<?> cls) {\n    if (cls.equals(cls)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (cls == null) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            return org.apache.commons.lang3.ClassUtils.getPackageName(cls.getName());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toClass":"cls","cls":"cls"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:631","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[],"tindex":"b633119f-2ebf-11e6-b0c1-3363cb363779","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:461","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.StringBuffer format(final java.util.Date date, final java.lang.StringBuffer buf) {\n    if (buf == null) {\n        {\n            return org.apache.commons.lang3.time.FastDatePrinter.format(date, buf);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"buf"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1558","type":"CtBinaryOperatorImpl","sourcecode":"length > 0"},"failures":[119],"tindex":"b63311a0-2ebf-11e6-b0c1-1fc568a9d47d","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1464","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendFixedWidthPadRight(final int value, final int width, final char padChar) {\n    if (width > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return appendFixedWidthPadRight(java.lang.String.valueOf(value), width, padChar);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"width"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1298","type":"CtBinaryOperatorImpl","sourcecode":"typeVarAssigns == null"},"failures":[],"tindex":"b63338b1-2ebf-11e6-b0c1-6f3ff287b474","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1214","type":"CtMethodImpl","sourcecode":"public static boolean typesSatisfyVariables(final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> typeVarAssigns) {\n    if (typeVarAssigns == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.notNull(typeVarAssigns, \"typeVarAssigns is null\");\n            for (final java.util.Map.Entry<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map.Entry<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> : typeVarAssigns.entrySet()) {\n                final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = entry.getKey();\n                final java.lang.reflect.Type java.lang.reflect.Type = entry.getValue();\n                for (final java.lang.reflect.Type java.lang.reflect.Type : org.apache.commons.lang3.reflect.TypeUtils.getImplicitBounds(typeVar)) {\n                    if (!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(type, org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(bound, typeVarAssigns), typeVarAssigns))) {\n                        return false;\n                    } \n                }\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeVarAssigns":"typeVarAssigns"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4957","type":"CtBinaryOperatorImpl","sourcecode":"start > end"},"failures":[],"tindex":"b6344a22-2ebf-11e6-b0c1-15904d2c94ec","method":{"position":"org.apache.commons.lang3.math.Fraction:546","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.math.Fraction pow(final int power) {\n    if (power > power) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (power == 1) {\n                return org.apache.commons.lang3.math.Fraction.this;\n            } else if (power == 0) {\n                return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction;\n            } else if (power < 0) {\n                if (power == (java.lang.Integer.java.lang.Integer.int)) {\n                    return org.apache.commons.lang3.math.Fraction.this.invert().pow(2).pow((-(power / 2)));\n                } \n                return org.apache.commons.lang3.math.Fraction.this.invert().pow((-power));\n            } else {\n                final org.apache.commons.lang3.math.Fraction org.apache.commons.lang3.math.Fraction = org.apache.commons.lang3.math.Fraction.this.multiplyBy(org.apache.commons.lang3.math.Fraction.this);\n                if ((power % 2) == 0) {\n                    return f.pow((power / 2));\n                } else {\n                    return f.pow((power / 2)).multiplyBy(org.apache.commons.lang3.math.Fraction.this);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"power","end":"power"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:522","type":"CtBinaryOperatorImpl","sourcecode":"(isEquals) == false"},"failures":[120,121,122,123,124,125,126,127],"tindex":"b6344a23-2ebf-11e6-b0c1-5541f941c08a","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:89","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setUseShortClassName(final boolean useShortClassName) {\n    if (useShortClassName == false) {\n        {\n            super.setUseShortClassName(useShortClassName);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isEquals":"useShortClassName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:195","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[],"tindex":"b634e664-2ebf-11e6-b0c1-45c0465b36bd","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:558","type":"CtMethodImpl","sourcecode":"public static final java.lang.String unescapeJson(final java.lang.String input) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(input)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"input"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:454","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isBlank(str)"},"failures":[128],"tindex":"b634e665-2ebf-11e6-b0c1-63086dd7ae1e","method":{"position":"org.apache.commons.lang3.math.NumberUtils:708","type":"CtMethodImpl","sourcecode":"public static java.lang.Long createLong(final java.lang.String str) {\n    if (org.apache.commons.lang3.StringUtils.isBlank(str)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return null;\n            } \n            return java.lang.Long.decode(str);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1102","type":"CtBinaryOperatorImpl","sourcecode":"c < a"},"failures":[129],"tindex":"b634e666-2ebf-11e6-b0c1-d34c7d7f6e5e","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1204","type":"CtMethodImpl","sourcecode":"public static long max(long a, final long b, final long c) {\n    if (c < b) {\n        {\n            if (b > a) {\n                a = b;\n            } \n            if (c > a) {\n                a = c;\n            } \n            return a;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","c":"c"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:427","type":"CtBinaryOperatorImpl","sourcecode":"bool == null"},"failures":[],"tindex":"b634e667-2ebf-11e6-b0c1-6d2ca01a9e9c","method":{"position":"org.apache.commons.lang3.AnnotationUtils:242","type":"CtMethodImpl","sourcecode":"private static int hashMember(final java.lang.String name, final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = (name.hashCode()) * 127;\n            if (value.getClass().isArray()) {\n                return part1 ^ (org.apache.commons.lang3.AnnotationUtils.arrayMemberHash(value.getClass().getComponentType(), value));\n            } \n            if (value instanceof java.lang.annotation.Annotation) {\n                return part1 ^ (org.apache.commons.lang3.AnnotationUtils.hashCode(((java.lang.annotation.Annotation)(value))));\n            } \n            return part1 ^ (value.hashCode());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bool":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:726","type":"CtBinaryOperatorImpl","sourcecode":"strLen > 0"},"failures":[130,131,132,133,134],"tindex":"b6350d78-2ebf-11e6-b0c1-cbb1cb24cf22","method":{"position":"org.apache.commons.lang3.ArrayUtils:2765","type":"CtMethodImpl","sourcecode":"public static int indexOf(final float[] array, final float valueToFind, int startIndex) {\n    if (startIndex > 0) {\n        {\n            if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                startIndex = 0;\n            } \n            for (int int = startIndex ; i < (array.int) ; i++) {\n                if (valueToFind == (array[i])) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"strLen":"startIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:1012","type":"CtBinaryOperatorImpl","sourcecode":"(value < start) || (value > end)"},"failures":[],"tindex":"b6350d79-2ebf-11e6-b0c1-7f0cbb4fe46c","method":{"position":"org.apache.commons.lang3.ArrayUtils:3319","type":"CtMethodImpl","sourcecode":"public static double[] toPrimitive(final java.lang.Double[] array, final double valueForNull) {\n    if ((valueForNull < valueForNull) || (value > valueForNull)) {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.double[];\n            } \n            final double[] double[] = new double[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                final java.lang.Double java.lang.Double = array[i];\n                result[i] = b == null ? valueForNull : b.doubleValue();\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"valueForNull","end":"valueForNull","value":"valueForNull"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5374","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[135],"tindex":"b6350d7a-2ebf-11e6-b0c1-df566971b87f","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1214","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendSeparator(final java.lang.String separator) {\n    if (separator == null) {\n        {\n            return appendSeparator(separator, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"separator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:197","type":"CtBinaryOperatorImpl","sourcecode":"dateStyle == null"},"failures":[136],"tindex":"b635348b-2ebf-11e6-b0c1-2527e1b9f6a6","method":{"position":"org.apache.commons.lang3.mutable.MutableBoolean:172","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (obj instanceof org.apache.commons.lang3.mutable.MutableBoolean) {\n                return (boolean) == (((org.apache.commons.lang3.mutable.MutableBoolean)(obj)).booleanValue());\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dateStyle":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2656","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[],"tindex":"b635d0cc-2ebf-11e6-b0c1-2d8501a57b0a","method":{"position":"org.apache.commons.lang3.Conversion:405","type":"CtMethodImpl","sourcecode":"public static char binaryToHexDigitMsb0_4bits(final boolean[] src, final int srcPos) {\n    if (srcPos < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((src.int) > 8) {\n                throw new java.lang.IllegalArgumentException((\"src.length>8: src.length=\" + (src.int)));\n            } \n            if (((src.int) - srcPos) < 4) {\n                throw new java.lang.IllegalArgumentException((((\"src.length-srcPos<4: src.length=\" + (src.int)) + \", srcPos=\") + srcPos));\n            } \n            if (src[(srcPos + 3)]) {\n                if (src[(srcPos + 2)]) {\n                    if (src[(srcPos + 1)]) {\n                        if (src[srcPos]) {\n                            return 'f';\n                        } else {\n                            return '7';\n                        }\n                    } else {\n                        if (src[srcPos]) {\n                            return 'b';\n                        } else {\n                            return '3';\n                        }\n                    }\n                } else {\n                    if (src[(srcPos + 1)]) {\n                        if (src[srcPos]) {\n                            return 'd';\n                        } else {\n                            return '5';\n                        }\n                    } else {\n                        if (src[srcPos]) {\n                            return '9';\n                        } else {\n                            return '1';\n                        }\n                    }\n                }\n            } else {\n                if (src[(srcPos + 2)]) {\n                    if (src[(srcPos + 1)]) {\n                        if (src[srcPos]) {\n                            return 'e';\n                        } else {\n                            return '6';\n                        }\n                    } else {\n                        if (src[srcPos]) {\n                            return 'a';\n                        } else {\n                            return '2';\n                        }\n                    }\n                } else {\n                    if (src[(srcPos + 1)]) {\n                        if (src[srcPos]) {\n                            return 'c';\n                        } else {\n                            return '4';\n                        }\n                    } else {\n                        if (src[srcPos]) {\n                            return '8';\n                        } else {\n                            return '0';\n                        }\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"srcPos"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5611","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158],"tindex":"b635f7dd-2ebf-11e6-b0c1-e59276b21c0c","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:875","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final java.lang.Object[] lhs, final java.lang.Object[] rhs) {\n    if (fieldName == null) {\n        {\n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if (!(java.util.Arrays.equals(lhs, rhs))) {\n                java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Object[]>(fieldName) {\n                    private static final long serialVersionUID = 1L;\n\n                    @java.lang.Override\n                    public java.lang.Object[] getLeft() {\n                        return lhs;\n                    }\n\n                    @java.lang.Override\n                    public java.lang.Object[] getRight() {\n                        return rhs;\n                    }\n                });\n            } \n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomStringUtils:329","type":"CtBinaryOperatorImpl","sourcecode":"chars == null"},"failures":[159],"tindex":"b637094e-2ebf-11e6-b0c1-25683b314f43","method":{"position":"org.apache.commons.lang3.ArrayUtils:2404","type":"CtMethodImpl","sourcecode":"public static boolean contains(final char[] array, final char valueToFind) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind)) != (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chars":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:131","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[160],"tindex":"b637094f-2ebf-11e6-b0c1-11e33d447e90","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2263","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (indexOf(str, 0)) >= 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6621","type":"CtBinaryOperatorImpl","sourcecode":"shortestStrLen == 0"},"failures":[161,130],"tindex":"b6373060-2ebf-11e6-b0c1-71d010a8d5c6","method":{"position":"org.apache.commons.lang3.ArrayUtils:4937","type":"CtMethodImpl","sourcecode":"public static float[] remove(final float[] array, final int index) {\n    if (index == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((float[])(org.apache.commons.lang3.ArrayUtils.remove(((java.lang.Object)(array)), index)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"shortestStrLen":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:631","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[162,162,163,164,60,60,61,62,63,64,65,66,67,68,68,69,70,71,72,73,74,75,76,77,78,79,80],"tindex":"b6373061-2ebf-11e6-b0c1-6731b8c67865","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1175","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final byte[] array) {\n    if (buffer == null) {\n        {\n            buffer.append(java.lang.String);\n            for (int int = 0 ; i < (array.int) ; i++) {\n                if (i > 0) {\n                    buffer.append(java.lang.String);\n                } \n                appendDetail(buffer, fieldName, array[i]);\n            }\n            buffer.append(java.lang.String);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"buffer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:851","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[],"tindex":"b6373062-2ebf-11e6-b0c1-7b93b5c70dc9","method":{"position":"org.apache.commons.lang3.ArrayUtils:2507","type":"CtMethodImpl","sourcecode":"public static boolean contains(final byte[] array, final byte valueToFind) {\n    if (array == array) {\n        {\n            return (org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind)) != (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array","rhs":"array"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:173","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[165,166,167,168],"tindex":"b6373063-2ebf-11e6-b0c1-77856f558deb","method":{"position":"org.apache.commons.lang3.CharSetUtils:221","type":"CtMethodImpl","sourcecode":"private static java.lang.String modify(final java.lang.String str, final java.lang.String[] set, final boolean expect) {\n    if (str == null) {\n        {\n            final org.apache.commons.lang3.CharSet org.apache.commons.lang3.CharSet = org.apache.commons.lang3.CharSet.getInstance(set);\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(str.length());\n            final char[] char[] = str.toCharArray();\n            final int int = chrs.int;\n            for (int int = 0 ; i < sz ; i++) {\n                if ((chars.contains(chrs[i])) == expect) {\n                    buffer.append(chrs[i]);\n                } \n            }\n            return buffer.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:99","type":"CtUnaryOperatorImpl","sourcecode":"!(primitiveClass.equals(wrapperClass))"},"failures":[169],"tindex":"b6375774-2ebf-11e6-b0c1-45b96acf933d","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:196","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Field[] getAllFields(java.lang.Class<?> cls) {\n    if (!(cls.equals(cls))) {\n        {\n            final java.util.List<java.lang.reflect.Field> java.util.List<java.lang.reflect.Field> = org.apache.commons.lang3.reflect.FieldUtils.getAllFieldsList(cls);\n            return allFieldsList.toArray(new java.lang.reflect.Field[allFieldsList.size()]);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"wrapperClass":"cls","primitiveClass":"cls"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2332","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[170,171],"tindex":"b6377e85-2ebf-11e6-b0c1-b9bab2609a1d","method":{"position":"org.apache.commons.lang3.ClassPathUtils:58","type":"CtMethodImpl","sourcecode":"public static java.lang.String toFullyQualifiedName(final java.lang.Class<?> context, final java.lang.String resourceName) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(resourceName)) {\n        {\n            org.apache.commons.lang3.Validate.notNull(context, \"Parameter '%s' must not be null!\", \"context\");\n            org.apache.commons.lang3.Validate.notNull(resourceName, \"Parameter '%s' must not be null!\", \"resourceName\");\n            return org.apache.commons.lang3.ClassPathUtils.toFullyQualifiedName(context.getPackage(), resourceName);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"resourceName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3252","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[172,173,174],"tindex":"b6377e86-2ebf-11e6-b0c1-4963c8ea8090","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:134","type":"CtMethodImpl","sourcecode":"public static int reflectionCompare(final java.lang.Object lhs, final java.lang.Object rhs) {\n    if (lhs == null) {\n        {\n            return org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(lhs, rhs, false, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"lhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:647","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[],"tindex":"b6377e87-2ebf-11e6-b0c1-7f3a81ce68fc","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:423","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.String format(final java.util.Date date) {\n    if (date == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.FastDatePrinter.format(date);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.reflect.FieldUtils:172","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.lang3.reflect.MemberUtils.isAccessible(field))"},"failures":[175],"tindex":"b6377e88-2ebf-11e6-b0c1-e983190958ce","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:236","type":"CtMethodImpl","sourcecode":"public static java.lang.Object readStaticField(final java.lang.reflect.Field field) throws java.lang.IllegalAccessException {\n    if (!(org.apache.commons.lang3.reflect.MemberUtils.isAccessible(field))) {\n        throw new java.lang.IllegalAccessException();\n    } else {\n        {\n            return org.apache.commons.lang3.reflect.FieldUtils.readStaticField(field, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"field"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:694","type":"CtBinaryOperatorImpl","sourcecode":"lhs == null"},"failures":[176],"tindex":"b637a599-2ebf-11e6-b0c1-894f2d5e684b","method":{"position":"org.apache.commons.lang3.ArrayUtils:5711","type":"CtMethodImpl","sourcecode":"public static long[] removeElements(final long[] array, final long... values) {\n    if (values == null) {\n        {\n            if ((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            final java.util.HashMap<java.lang.Long, org.apache.commons.lang3.mutable.MutableInt> java.util.HashMap<java.lang.Long, org.apache.commons.lang3.mutable.MutableInt> = new java.util.HashMap<java.lang.Long, org.apache.commons.lang3.mutable.MutableInt>(values.int);\n            for (final long long : values) {\n                final java.lang.Long java.lang.Long = java.lang.Long.valueOf(v);\n                final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = occurrences.get(boxed);\n                if (count == null) {\n                    occurrences.put(boxed, new org.apache.commons.lang3.mutable.MutableInt(1));\n                } else {\n                    count.increment();\n                }\n            }\n            final java.util.BitSet java.util.BitSet = new java.util.BitSet();\n            for (final java.util.Map.Entry<java.lang.Long, org.apache.commons.lang3.mutable.MutableInt> java.util.Map.Entry<java.lang.Long, org.apache.commons.lang3.mutable.MutableInt> : occurrences.entrySet()) {\n                final java.lang.Long java.lang.Long = e.getKey();\n                int int = 0;\n                for (int int = 0, int int = e.getValue().intValue() ; i < ct ; i++) {\n                    found = org.apache.commons.lang3.ArrayUtils.indexOf(array, v.longValue(), found);\n                    if (found < 0) {\n                        break;\n                    } \n                    toRemove.set((found++));\n                }\n            }\n            return ((long[])(org.apache.commons.lang3.ArrayUtils.removeAll(array, toRemove)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"values"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:614","type":"CtBinaryOperatorImpl","sourcecode":"t > 0"},"failures":[177,178],"tindex":"b637a59a-2ebf-11e6-b0c1-3ffda156ffda","method":{"position":"org.apache.commons.lang3.StringUtils:5509","type":"CtMethodImpl","sourcecode":"public static java.lang.String center(java.lang.String str, final int size, final char padChar) {\n    if (size > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((str == null) || (size <= 0)) {\n                return str;\n            } \n            final int int = str.length();\n            final int int = size - strLen;\n            if (pads <= 0) {\n                return str;\n            } \n            str = org.apache.commons.lang3.StringUtils.leftPad(str, (strLen + (pads / 2)), padChar);\n            str = org.apache.commons.lang3.StringUtils.rightPad(str, size, padChar);\n            return str;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"t":"size"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"((((ch0 == 't') || (ch0 == 'T')) && ((ch1 == 'r') || (ch1 == 'R'))) && ((ch2 == 'u') || (ch2 == 'U'))) && ((ch3 == 'e') || (ch3 == 'E'))"},"failures":[],"tindex":"b637ccab-2ebf-11e6-b0c1-e3cec6af3281","method":{"position":"org.apache.commons.lang3.CharRange:100","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.CharRange isNot(final char ch) {\n    if (((((ch == 't') || (ch0 == 'T')) && ((ch == 'r') || (ch1 == 'R'))) && ((ch == 'u') || (ch2 == 'U'))) && ((ch == 'e') || (ch3 == 'E'))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.lang3.CharRange(ch , ch , true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch0":"ch","ch2":"ch","ch1":"ch","ch3":"ch"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:640","type":"CtBinaryOperatorImpl","sourcecode":"lhs != rhs"},"failures":[],"tindex":"b637ccac-2ebf-11e6-b0c1-37ed1bbc7733","method":{"position":"org.apache.commons.lang3.Validate:943","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"boxing\")\npublic static void inclusiveBetween(long start, long end, long value) {\n    if (value != value) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((value < start) || (value > end)) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.java.lang.String, value, start, end));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"value","rhs":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:705","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[],"tindex":"b637ccad-2ebf-11e6-b0c1-11a8fc6d2521","method":{"position":"org.apache.commons.lang3.ArrayUtils:552","type":"CtMethodImpl","sourcecode":"public static int[] nullToEmpty(final int[] array) {\n    if (array == array) {\n        {\n            if ((array == null) || ((array.int) == 0)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int[];\n            } \n            return array;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array","rhs":"array"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"c < a"},"failures":[],"tindex":"b637f3be-2ebf-11e6-b0c1-d1f8dc63f4b7","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1258","type":"CtMethodImpl","sourcecode":"public static byte max(byte a, final byte b, final byte c) {\n    if (a < a) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (b > a) {\n                a = b;\n            } \n            if (c > a) {\n                a = c;\n            } \n            return a;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","c":"a"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3388","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[179],"tindex":"b637f3bf-2ebf-11e6-b0c1-296ea9ec2995","method":{"position":"org.apache.commons.lang3.ArrayUtils:3387","type":"CtMethodImpl","sourcecode":"public static float[] toPrimitive(final java.lang.Float[] array, final float valueForNull) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.float[];\n            } \n            final float[] float[] = new float[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                final java.lang.Float java.lang.Float = array[i];\n                result[i] = b == null ? valueForNull : b.floatValue();\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:219","type":"CtBinaryOperatorImpl","sourcecode":"(cal1 == null) || (cal2 == null)"},"failures":[180,181,182,183],"tindex":"b637f3c0-2ebf-11e6-b0c1-ff397ee9f76a","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1152","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n    if ((calendar == null) || (calendar == null)) {\n        {\n            final java.util.TimeZone java.util.TimeZone = calendar.getTimeZone();\n            if ((zone.useDaylightTime()) && ((calendar.get(java.util.Calendar.java.util.Calendar.int)) != 0)) {\n                buffer.append(org.apache.commons.lang3.time.FastDatePrinter.getTimeZoneDisplay(zone, true, int, java.util.Locale));\n            } else {\n                buffer.append(org.apache.commons.lang3.time.FastDatePrinter.getTimeZoneDisplay(zone, false, int, java.util.Locale));\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cal2":"calendar","cal1":"calendar"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5770","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[],"tindex":"b6389001-2ebf-11e6-b0c1-97e98cf0a904","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:267","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object obj) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(obj)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (obj == (org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeImpl.this)) || ((obj instanceof java.lang.reflect.WildcardType) && (org.apache.commons.lang3.reflect.TypeUtils.equals(org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeImpl.this, ((java.lang.reflect.WildcardType)(obj)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"obj"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2562","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[184,185,186,187,188,189,190,191,192,193,194,195],"tindex":"b6389002-2ebf-11e6-b0c1-576231aca55d","method":{"position":"org.apache.commons.lang3.time.DateUtils:774","type":"CtMethodImpl","sourcecode":"public static java.util.Date round(final java.lang.Object date, final int field) {\n    if (field < 0) {\n        {\n            if (date == null) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            if (date instanceof java.util.Date) {\n                return org.apache.commons.lang3.time.DateUtils.round(((java.util.Date)(date)), field);\n            } else if (date instanceof java.util.Calendar) {\n                return org.apache.commons.lang3.time.DateUtils.round(((java.util.Calendar)(date)), field).getTime();\n            } else {\n                throw new java.lang.ClassCastException((\"Could not round \" + date));\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"field"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:1127","type":"CtBinaryOperatorImpl","sourcecode":"(value <= start) || (value >= end)"},"failures":[],"tindex":"b638b713-2ebf-11e6-b0c1-a97b045476ba","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:587","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.EqualsBuilder append(final double lhs, final double rhs) {\n    if ((lhs <= rhs) || (value >= lhs)) {\n        {\n            if ((boolean) == false) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            return append(java.lang.Double.doubleToLongBits(lhs), java.lang.Double.doubleToLongBits(rhs));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"rhs","end":"lhs","value":"lhs"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:591","type":"CtBinaryOperatorImpl","sourcecode":"lhs == false"},"failures":[],"tindex":"b638b714-2ebf-11e6-b0c1-4b6bfdfd18d9","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setUseFieldNames(final boolean useFieldNames) {\n    if (useFieldNames == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            super.setUseFieldNames(useFieldNames);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"useFieldNames"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:474","type":"CtBinaryOperatorImpl","sourcecode":"input != null"},"failures":[196],"tindex":"b638b715-2ebf-11e6-b0c1-8bedfbbce1e6","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:576","type":"CtMethodImpl","sourcecode":"public static void writeDeclaredStaticField(final java.lang.Class<?> cls, final java.lang.String fieldName, final java.lang.Object value) throws java.lang.IllegalAccessException {\n    if (fieldName != null) {\n        throw new java.lang.IllegalAccessException();\n    } else {\n        {\n            org.apache.commons.lang3.reflect.FieldUtils.writeDeclaredStaticField(cls, fieldName, value, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1494","type":"CtBinaryOperatorImpl","sourcecode":"owner == null"},"failures":[197,198,199,200,201,202,203],"tindex":"b639a176-2ebf-11e6-b0c1-f350b676f08d","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:311","type":"CtMethodImpl","sourcecode":"public static boolean isAssignable(final java.lang.reflect.Type type, final java.lang.reflect.Type toType) {\n    if (type == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.reflect.TypeUtils.isAssignable(type, toType, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"owner":"type"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.text.ParseException","condition":{"position":"org.apache.commons.lang3.StringUtils:4253","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.startsWithIgnoreCase(str, remove)"},"failures":[],"tindex":"b639a177-2ebf-11e6-b0c1-f9f7ee5a8b7e","method":{"position":"org.apache.commons.lang3.time.FastDateParser:272","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Object parseObject(final java.lang.String source) throws java.text.ParseException {\n    if (org.apache.commons.lang3.StringUtils.startsWithIgnoreCase(source, source)) {\n        {\n            return parse(source);\n        }\n    } else {\n        throw new java.text.ParseException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"source","remove":"source"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:611","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[],"tindex":"b639a178-2ebf-11e6-b0c1-aff4fc797afe","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:744","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n    if (buffer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendTo(buffer, calendar.get(int));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"buffer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BitField:42","type":"CtBinaryOperatorImpl","sourcecode":"bit_pattern != 0"},"failures":[204,205,206,207,208,209,210,211,212,4,6,213,7,8,85,9,214,86,215,10,11,216,217,218,219,13,220,14,221,15,222,223,16,224,225],"tindex":"b639c889-2ebf-11e6-b0c1-e16b50390195","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2781","type":"CtMethodImpl","sourcecode":"protected int validateRange(final int startIndex, int endIndex) {\n    if (startIndex != 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (startIndex < 0) {\n                throw new java.lang.StringIndexOutOfBoundsException(startIndex);\n            } \n            if (endIndex > (int)) {\n                endIndex = int;\n            } \n            if (startIndex > endIndex) {\n                throw new java.lang.StringIndexOutOfBoundsException(\"end < start\");\n            } \n            return endIndex;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bit_pattern":"startIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:669","type":"CtInvocationImpl","sourcecode":"str.equals(falseString)"},"failures":[226,227,184,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,119,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,135,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,17,306,307,308,309,310,311,312,312,313,313,314,314,315,315,316,316,317,317,318,318,319,319,320,320,321,321,322,322,323,323,324,324,325,325,326,326,327,327,328,329,330,331,332,333,334,335,336,137,138,139,140,141,142,143,144,145,146,147,148,149,337,150,151,152,153,154,338,155,156,157,339,340,158,341,342,343,344,345,346,347,348,349,350,351,120,121,122,123,124,125,126,127,352,353,354,355,355,356,356,357,357,358,358,359,359,360,360,361,361,362,362,363,363,364,364,365,365,366,366,35,35,36,36,367,367,368,368,369,369,370,370,371,371,372,372,98,98,373,373,374,374,375,375,162,162,163,163,164,164,376,376,377,377,378,378,379,379,380,380,381,381,382,382,383,383,384,384,385,385,386,386,37,37,38,38,39,39,40,40,41,41,42,42,43,43,44,44,45,45,46,46,47,47,48,48,49,49,50,50,51,51,52,52,53,53,54,54,55,55,56,56,57,57,58,58,59,59,60,60,61,61,62,62,63,63,64,64,65,65,66,66,67,67,68,68,69,69,70,70,71,71,72,72,73,73,74,74,75,75,76,76,77,77,78,78,79,79,80,80,387,387,388,388,389,389,390,390,391,391,392,392,393,393,394,394,395,395,396,396,397,397,398,398,399,399,400,400,401,401,402,402,403,403,404,404,405,405,406,406,407,407,408,408,409,409,410,410,411,412,413,414,415,416,417,418,419,420,421,422,2,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,197,198,199,200,201,202,203,452,453,454,455,456,457,458],"tindex":"b639c88a-2ebf-11e6-b0c1-bf4672d4d9d6","method":{"position":"org.apache.commons.lang3.SystemUtils:1428","type":"CtMethodImpl","sourcecode":"static boolean isJavaVersionMatch(final java.lang.String version, final java.lang.String versionPrefix) {\n    if (version.equals(versionPrefix)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (version == null) {\n                return false;\n            } \n            return version.startsWith(versionPrefix);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"version","falseString":"versionPrefix"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:945","type":"CtBinaryOperatorImpl","sourcecode":"(value < start) || (value > end)"},"failures":[],"tindex":"b639ef9b-2ebf-11e6-b0c1-e3c7b8de860d","method":{"position":"org.apache.commons.lang3.ArrayUtils:2046","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final long[] array, final long valueToFind) {\n    if ((valueToFind < valueToFind) || (value > valueToFind)) {\n        {\n            return org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.java.lang.Integer.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"valueToFind","end":"valueToFind","value":"valueToFind"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:829","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[459,460,461,462,463,103,464,465,466,467,468,469,181,470,471,472,473,474,475,476,183,477,478,185,186,187,188,189,479,480,190,481,191,192,193,482,483,484,195,485,486,487,488,489],"tindex":"b63a16ac-2ebf-11e6-b0c1-3983d363a2f1","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:842","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n    if (calendar == null) {\n        {\n            appendTo(buffer, calendar.get(int));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"calendar"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:705","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[490,491,492],"tindex":"b63a16ad-2ebf-11e6-b0c1-9debe9f7103c","method":{"position":"org.apache.commons.lang3.math.NumberUtils:811","type":"CtMethodImpl","sourcecode":"public static int min(final int[] array) {\n    if (array == array) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.math.NumberUtils.validateArray(array);\n            int int = array[0];\n            for (int int = 1 ; j < (array.int) ; j++) {\n                if ((array[j]) < min) {\n                    min = array[j];\n                } \n            }\n            return min;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array","rhs":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2293","type":"CtInvocationImpl","sourcecode":"separator.isEmpty()"},"failures":[493],"tindex":"b63a16ae-2ebf-11e6-b0c1-f795743255b5","method":{"position":"org.apache.commons.lang3.StringUtils:761","type":"CtMethodImpl","sourcecode":"public static java.lang.String stripAccents(final java.lang.String input) {\n    if (input.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (input == null) {\n                return null;\n            } \n            final java.util.regex.Pattern java.util.regex.Pattern = java.util.regex.Pattern.compile(\"\\\\p{InCombiningDiacriticalMarks}+\");\n            final java.lang.String java.lang.String = java.text.Normalizer.normalize(input, java.text.Normalizer.Form.java.text.Normalizer.Form.java.text.Normalizer.Form);\n            return pattern.matcher(decomposed).replaceAll(\"\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"separator":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1017","type":"CtBinaryOperatorImpl","sourcecode":"(val.get(java.util.Calendar.DATE)) == 1"},"failures":[],"tindex":"b63a3dbf-2ebf-11e6-b0c1-8d5087feaab1","method":{"position":"org.apache.commons.lang3.time.DateUtils:1761","type":"CtMethodImpl","sourcecode":"public static int truncatedCompareTo(final java.util.Calendar cal1, final java.util.Calendar cal2, final int field) {\n    if ((cal2.get(field)) == 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Calendar java.util.Calendar = org.apache.commons.lang3.time.DateUtils.truncate(cal1, field);\n            final java.util.Calendar java.util.Calendar = org.apache.commons.lang3.time.DateUtils.truncate(cal2, field);\n            return truncatedCal1.compareTo(truncatedCal2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"val":"cal2","java.util.Calendar.DATE":"field"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:596","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"b63a3dc0-2ebf-11e6-b0c1-2344d3a01cbc","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:448","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.StringBuffer format(final long millis, final java.lang.StringBuffer buf) {\n    if (buf == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.FastDatePrinter.format(millis, buf);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"buf"},"type":"special","returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}