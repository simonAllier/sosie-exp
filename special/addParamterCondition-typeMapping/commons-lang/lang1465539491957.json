{"failureDictionary":{"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":137,"org.apache.commons.lang3.StringUtilsTest.testIsNoneEmpty":39,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":134,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testDurationsByBruteForce":100,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLANG815":102,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":30,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":138,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":136,"org.apache.commons.lang3.CharUtilsTest.testToIntValue_Character":32,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteStaticFieldForceAccess":98,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":151,"org.apache.commons.lang3.ArrayUtilsTest.testIsEmptyObject":42,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":85,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testJiraLang281":106,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":59,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCode":156,"org.apache.commons.lang3.StringUtilsTest.testSplitPreserveAllTokens_StringChar":29,"org.apache.commons.lang3.builder.DiffBuilderTest.testSimilarObjectIgnoresAppends":146,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayInt":73,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddDash":120,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":0,"org.apache.commons.lang3.mutable.MutableFloatTest.testSetNull":31,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":27,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":16,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":45,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":145,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":86,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriod":101,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEmbeddedPatternInChoice":70,"org.apache.commons.lang3.StringUtilsTest.testIsNoneBlank":38,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":28,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":135,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePartialString_noReplace":112,"org.apache.commons.lang3.math.FractionTest.testFactory_double":80,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetEscape":109,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCyclicalObjectReferences":127,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":18,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":148,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":4,"org.apache.commons.lang3.RandomStringUtilsTest.testLang100":61,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":20,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEqualsHashcode":67,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":44,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":2,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":3,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOf":163,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testOverriddenBuiltinFormat":68,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":57,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testExtendedFormats":71,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testStartsWithAny":41,"org.apache.commons.lang3.math.FractionTest.testMultiply":84,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOf_String":166,"org.apache.commons.lang3.text.StrBuilderTest.testEndsWith":22,"org.apache.commons.lang3.CharUtilsTest.testIsAsciiPrintable_char":76,"org.apache.commons.lang3.exception.ExceptionUtilsTest.test_getRootCauseMessage_Throwable":115,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":144,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":23,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":7,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetPrefix":110,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayByte":164,"org.apache.commons.lang3.exception.ExceptionUtilsTest.test_getMessage_Throwable":116,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddNegate":124,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":6,"org.apache.commons.lang3.math.FractionTest.testDivide":83,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionCompare":132,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEscapedQuote_LANG_477":69,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetSuffix":111,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":13,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":25,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_PrimitiveNumber":119,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareExcludeFields":130,"org.apache.commons.lang3.CharSetTest.testStatics":125,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHierarchyHashCode":155,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLexx":35,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":143,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddCombinations":122,"org.apache.commons.lang3.text.StrTokenizerTest.test5":50,"org.apache.commons.lang3.text.StrTokenizerTest.test4":49,"org.apache.commons.lang3.text.StrTokenizerTest.test6":51,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCodeExcludeFields":157,"org.apache.commons.lang3.text.StrTokenizerTest.test1":48,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetValueDelimiter":108,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":142,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":9,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testIntegerWithTransients":158,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedStaticFieldForceAccess":95,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":167,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":149,"org.apache.commons.lang3.ArrayUtilsTest.testContainsShort":117,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteStaticField":99,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLowDurations":103,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareTransients":133,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJson":92,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testBuilderReset":88,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":26,"org.apache.commons.lang3.ConversionTest.testByteToBinary":33,"org.apache.commons.lang3.StringUtilsTest.testIsAnyEmpty":37,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testEdgeDurations":104,"org.apache.commons.lang3.StringUtilsTest.testIsAnyBlank":36,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorNoArgs":107,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":147,"org.apache.commons.lang3.math.FractionTest.testSubtract":74,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEquals":126,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":10,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringString":66,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionHierarchyEquals":129,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAlphabetic":63,"org.apache.commons.lang3.math.FractionTest.testToProperString":81,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementByteArray":91,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":152,"org.apache.commons.lang3.BitFieldTest.testIsAllSet":113,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":150,"org.apache.commons.lang3.math.FractionTest.testPow":79,"org.apache.commons.lang3.ArrayUtilsTest.testContains":162,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveByteArray":90,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":139,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":5,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":52,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAlphaNumeric":62,"org.apache.commons.lang3.CharSetTest.testConstructor_String_combo":121,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstringAfterLast_StringString":165,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEqualsExcludeFields":128,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixtureWithTransients":160,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":47,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":140,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":153,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":46,"org.apache.commons.lang3.event.EventListenerSupportTest.testSerialization":114,"org.apache.commons.lang3.text.StrMatcherTest.testTrimMatcher":43,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":56,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":21,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":82,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testInteger":161,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":14,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":12,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionObjectCycle":154,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementObjectArray":34,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedStaticField":97,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompare":131,"org.apache.commons.lang3.math.FractionTest.testReducedFactory_int_int":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":8,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":54,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":55,"org.apache.commons.lang3.CharUtilsTest.testIsAscii_char":75,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringString":93,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testExtendedAndBuiltInFormats":72,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testBugzilla38401":105,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":53,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixture":159,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringStringarray":94,"org.apache.commons.lang3.CharSetTest.testConstructor_String_comboNegated":123,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":1,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadNamingPattern":87,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomNumeric":64,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayToObjectArray":77,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testBuilderResetAfterBuild":89,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":19,"org.apache.commons.lang3.ClassUtilsTest.test_isInnerClass_Class":58,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementsObjectArray":40,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils":65,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_PrimitiveNumber":118,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":141,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteDeclaredNamedStaticField":96,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":11,"org.apache.commons.lang3.ArrayUtilsTest.testToObject_short":60},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:4569","type":"CtBinaryOperatorImpl","sourcecode":"(index > length) || (index < 0)"},"failures":[],"tindex":"1bc5be66-2ed3-11e6-bec9-23f9c7087add","method":{"position":"org.apache.commons.lang3.BitField:122","type":"CtMethodImpl","sourcecode":"public boolean isSet(final int holder) {\n    if ((holder > holder) || (index < 0)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (holder & (int)) != 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"holder","index":"holder"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:1121","type":"CtInvocationImpl","sourcecode":"className.startsWith(\"L\")"},"failures":[0,1,2,3,4,5,6,7,8,8,9,10,11,12,13,13,14,14,15,16,17,18,19,20,21],"tindex":"1bc80857-2ed3-11e6-bec9-3fa7b9da16ab","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:992","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final long[] array) {\n    if (fieldName.startsWith(\"L\")) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(java.lang.String);\n            for (int int = 0 ; i < (array.int) ; i++) {\n                if (i > 0) {\n                    buffer.append(java.lang.String);\n                } \n                appendDetail(buffer, fieldName, array[i]);\n            }\n            buffer.append(java.lang.String);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"className":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:507","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[22],"tindex":"1bc82f68-2ed3-11e6-bec9-e9821950d3ce","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2099","type":"CtMethodImpl","sourcecode":"public boolean endsWith(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return false;\n            } \n            final int int = str.length();\n            if (len == 0) {\n                return true;\n            } \n            if (len > (int)) {\n                return false;\n            } \n            int int = (int) - len;\n            for (int int = 0 ; i < len ; i++ , pos++) {\n                if ((char[][pos]) != (str.charAt(i))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:829","type":"CtBinaryOperatorImpl","sourcecode":"(str1 == null) || (str2 == null)"},"failures":[],"tindex":"1bc85679-2ed3-11e6-bec9-916c284d848d","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:380","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.StringBuffer format(final java.lang.Object obj, final java.lang.StringBuffer toAppendTo, final java.text.FieldPosition pos) {\n    if ((obj == null) || (obj == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof java.util.Date) {\n                return format(((java.util.Date)(obj)), toAppendTo);\n            } else if (obj instanceof java.util.Calendar) {\n                return format(((java.util.Calendar)(obj)), toAppendTo);\n            } else if (obj instanceof java.lang.Long) {\n                return format(((java.lang.Long)(obj)).longValue(), toAppendTo);\n            } else {\n                throw new java.lang.IllegalArgumentException((\"Unknown class: \" + (obj == null ? \"<null>\" : obj.getClass().getName())));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str1":"obj","str2":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDatePrinter:305","type":"CtBinaryOperatorImpl","sourcecode":"((c >= 'A') && (c <= 'Z')) || ((c >= 'a') && (c <= 'z'))"},"failures":[],"tindex":"1bc8567a-2ed3-11e6-bec9-2920ce7bb0d6","method":{"position":"org.apache.commons.lang3.Conversion:80","type":"CtMethodImpl","sourcecode":"public static int hexDigitToInt(final char hexDigit) {\n    if (((hexDigit >= 'A') && (c <= 'Z')) || ((c >= 'a') && (c <= 'z'))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = java.lang.Character.digit(hexDigit, 16);\n            if (digit < 0) {\n                throw new java.lang.IllegalArgumentException(((\"Cannot interpret '\" + hexDigit) + \"' as a hexadecimal digit\"));\n            } \n            return digit;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"hexDigit"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:91","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"1bc87d8b-2ed3-11e6-bec9-69ef1378b6fe","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:171","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final boolean[] lhs, final boolean[] rhs) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (fieldName == null) {\n                throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n            } \n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if (!(java.util.Arrays.equals(lhs, rhs))) {\n                java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Boolean[]>(fieldName) {\n                    private static final long serialVersionUID = 1L;\n\n                    @java.lang.Override\n                    public java.lang.Boolean[] getLeft() {\n                        return org.apache.commons.lang3.ArrayUtils.toObject(lhs);\n                    }\n\n                    @java.lang.Override\n                    public java.lang.Boolean[] getRight() {\n                        return org.apache.commons.lang3.ArrayUtils.toObject(rhs);\n                    }\n                });\n            } \n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4805","type":"CtUnaryOperatorImpl","sourcecode":"!repeat"},"failures":[23,24,25,6,7,26,27,28],"tindex":"1bc8a49c-2ed3-11e6-bec9-8bd0131d929e","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:89","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setUseShortClassName(final boolean useShortClassName) {\n    if (!useShortClassName) {\n        {\n            super.setUseShortClassName(useShortClassName);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"repeat":"useShortClassName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:709","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"1bc8cbad-2ed3-11e6-bec9-63c4671075e7","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:558","type":"CtMethodImpl","sourcecode":"public static final java.lang.String unescapeJson(final java.lang.String input) {\n    if (input == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"input"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:137","type":"CtInvocationImpl","sourcecode":"java.lang.Float.isNaN(a)"},"failures":[],"tindex":"1bc8cbae-2ed3-11e6-bec9-8905634770f2","method":{"position":"org.apache.commons.lang3.mutable.MutableFloat:156","type":"CtMethodImpl","sourcecode":"public void add(final float operand) {\n    if (java.lang.Float.isNaN(operand)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.mutable.MutableFloat.this.float += operand;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"operand"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6451","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(middle))"},"failures":[29],"tindex":"1bc8f2bf-2ed3-11e6-bec9-9b2cd151ca7b","method":{"position":"org.apache.commons.lang3.StringUtils:2930","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] splitPreserveAllTokens(final java.lang.String str, final char separatorChar) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(str))) {\n        {\n            return org.apache.commons.lang3.StringUtils.splitWorker(str, separatorChar, true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str","middle":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2690","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[],"tindex":"1bc8f2c0-2ed3-11e6-bec9-2ff9e5dbb1e3","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:455","type":"CtMethodImpl","sourcecode":"public java.lang.String replace(final char[] source, final int offset, final int length) {\n    if (offset < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (source == null) {\n                return null;\n            } \n            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(length).append(source, offset, length);\n            substitute(buf, 0, length);\n            return buf.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"offset"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6505","type":"CtBinaryOperatorImpl","sourcecode":"str2 == null"},"failures":[30],"tindex":"1bc919d1-2ed3-11e6-bec9-4f036509966a","method":{"position":"org.apache.commons.lang3.time.DateFormatUtils:289","type":"CtMethodImpl","sourcecode":"public static java.lang.String format(final long millis, final java.lang.String pattern, final java.util.TimeZone timeZone, final java.util.Locale locale) {\n    if (pattern == null) {\n        {\n            return org.apache.commons.lang3.time.DateFormatUtils.format(new java.util.Date(millis), pattern, timeZone, locale);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str2":"pattern"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:200","type":"CtBinaryOperatorImpl","sourcecode":"timeStyle == null"},"failures":[31],"tindex":"1bc919d2-2ed3-11e6-bec9-334de137e24c","method":{"position":"org.apache.commons.lang3.mutable.MutableFloat:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setValue(final java.lang.Number value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.mutable.MutableFloat.this.float = value.floatValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeStyle":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2231","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[],"tindex":"1bc940e3-2ed3-11e6-bec9-2f1ec4c959a1","method":{"position":"org.apache.commons.lang3.text.translate.UnicodeUnescaper:36","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int translate(final java.lang.CharSequence input, final int index, final java.io.Writer out) throws java.io.IOException {\n    if (index < 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if ((((input.charAt(index)) == '\\\\') && ((index + 1) < (input.length()))) && ((input.charAt((index + 1))) == 'u')) {\n                int int = 2;\n                while (((index + i) < (input.length())) && ((input.charAt((index + i))) == 'u')) {\n                    i++;\n                }\n                if (((index + i) < (input.length())) && ((input.charAt((index + i))) == '+')) {\n                    i++;\n                } \n                if (((index + i) + 4) <= (input.length())) {\n                    final java.lang.CharSequence java.lang.CharSequence = input.subSequence((index + i), ((index + i) + 4));\n                    try {\n                        final int int = java.lang.Integer.parseInt(unicode.toString(), 16);\n                        out.write(((char)(value)));\n                    } catch (final java.lang.NumberFormatException nfe) {\n                        throw new java.lang.IllegalArgumentException((\"Unable to parse unicode value: \" + unicode) , nfe);\n                    }\n                    return i + 4;\n                } else {\n                    throw new java.lang.IllegalArgumentException(((\"Less than 4 hex digits in unicode value: '\" + (input.subSequence(index, input.length()))) + \"' due to end of CharSequence\"));\n                }\n            } \n            return 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:130","type":"CtBinaryOperatorImpl","sourcecode":"ch == null"},"failures":[32],"tindex":"1bc967f4-2ed3-11e6-bec9-c73967083aec","method":{"position":"org.apache.commons.lang3.CharUtils:262","type":"CtMethodImpl","sourcecode":"public static int toIntValue(final java.lang.Character ch) {\n    if (ch == null) {\n        {\n            if (ch == null) {\n                throw new java.lang.IllegalArgumentException(\"The character must not be null\");\n            } \n            return org.apache.commons.lang3.CharUtils.toIntValue(ch.charValue());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:551","type":"CtBinaryOperatorImpl","sourcecode":"power < 0"},"failures":[33],"tindex":"1bc967f5-2ed3-11e6-bec9-57d421f6255e","method":{"position":"org.apache.commons.lang3.Conversion:1653","type":"CtMethodImpl","sourcecode":"public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos, final int nBools) {\n    if (srcPos < 0) {\n        {\n            if (0 == nBools) {\n                return dst;\n            } \n            if (((nBools - 1) + srcPos) >= 8) {\n                throw new java.lang.IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n            } \n            int int = 0;\n            for (int int = 0 ; i < nBools ; i++) {\n                shift = (i * 1) + srcPos;\n                dst[(dstPos + i)] = (1 & (src >> shift)) != 0;\n            }\n            return dst;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"power":"srcPos"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:796","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[1,3,5,7,14,14,15,17,19,21],"tindex":"1bc98f06-2ed3-11e6-bec9-3d1577c8f313","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:457","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final long[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, array, null);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:968","type":"CtBinaryOperatorImpl","sourcecode":"(value < start) || (value > end)"},"failures":[],"tindex":"1bc98f07-2ed3-11e6-bec9-5141b4795949","method":{"position":"org.apache.commons.lang3.ArrayUtils:2003","type":"CtMethodImpl","sourcecode":"public static int indexOf(final long[] array, final long valueToFind) {\n    if ((valueToFind < valueToFind) || (value > valueToFind)) {\n        {\n            return org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"valueToFind","end":"valueToFind","value":"valueToFind"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2958","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[34],"tindex":"1bc98f08-2ed3-11e6-bec9-89415e1ac434","method":{"position":"org.apache.commons.lang3.ArrayUtils:4641","type":"CtMethodImpl","sourcecode":"public static <T>T[] removeElement(final T[] array, final java.lang.Object element) {\n    if (element == null) {\n        {\n            final int int = org.apache.commons.lang3.ArrayUtils.indexOf(array, element);\n            if (index == (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int)) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            return org.apache.commons.lang3.ArrayUtils.remove(array, index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"element"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2980","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"1bc98f09-2ed3-11e6-bec9-279878ef0e2a","method":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:329","type":"CtMethodImpl","sourcecode":"static java.lang.String[] toNoNullStringArray(final java.lang.Object[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>(array.int);\n            for (final java.lang.Object java.lang.Object : array) {\n                if (e != null) {\n                    list.add(e.toString());\n                } \n            }\n            return list.toArray(org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.String[]);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:408","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.WildcardType"},"failures":[35],"tindex":"1bc9b61a-2ed3-11e6-bec9-8151c6a82f20","method":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:633","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj2) {\n    if (obj2 instanceof java.lang.reflect.WildcardType) {\n        {\n            if (obj2 instanceof org.apache.commons.lang3.time.DurationFormatUtils.Token) {\n                final org.apache.commons.lang3.time.DurationFormatUtils.Token org.apache.commons.lang3.time.DurationFormatUtils.Token = ((org.apache.commons.lang3.time.DurationFormatUtils.Token)(obj2));\n                if ((org.apache.commons.lang3.time.DurationFormatUtils.Token.this.java.lang.Object.getClass()) != (tok2.java.lang.Object.getClass())) {\n                    return false;\n                } \n                if ((org.apache.commons.lang3.time.DurationFormatUtils.Token.this.int) != (tok2.int)) {\n                    return false;\n                } \n                if ((org.apache.commons.lang3.time.DurationFormatUtils.Token.this.java.lang.Object) instanceof java.lang.StringBuilder) {\n                    return org.apache.commons.lang3.time.DurationFormatUtils.Token.this.java.lang.Object.toString().equals(tok2.java.lang.Object.toString());\n                } else if ((org.apache.commons.lang3.time.DurationFormatUtils.Token.this.java.lang.Object) instanceof java.lang.Number) {\n                    return org.apache.commons.lang3.time.DurationFormatUtils.Token.this.java.lang.Object.equals(tok2.java.lang.Object);\n                } else {\n                    return (org.apache.commons.lang3.time.DurationFormatUtils.Token.this.java.lang.Object) == (tok2.java.lang.Object);\n                }\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"obj2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3867","type":"CtBinaryOperatorImpl","sourcecode":"i > startIndex"},"failures":[],"tindex":"1bc9dd2b-2ed3-11e6-bec9-f174b81264b3","method":{"position":"org.apache.commons.lang3.StringUtils:5178","type":"CtMethodImpl","sourcecode":"public static java.lang.String repeat(final java.lang.String str, final java.lang.String separator, final int repeat) {\n    if (repeat > repeat) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((str == null) || (separator == null)) {\n                return org.apache.commons.lang3.StringUtils.repeat(str, repeat);\n            } \n            final java.lang.String java.lang.String = org.apache.commons.lang3.StringUtils.repeat((str + separator), repeat);\n            return org.apache.commons.lang3.StringUtils.removeEnd(result, separator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"repeat","i":"repeat"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSetUtils:242","type":"CtBinaryOperatorImpl","sourcecode":"strings != null"},"failures":[36,37,38,39,40,41,42],"tindex":"1bc9dd2c-2ed3-11e6-bec9-a3e0f95791c3","method":{"position":"org.apache.commons.lang3.ArrayUtils:3498","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final java.lang.Object[] array) {\n    if (array != null) {\n        {\n            return (array == null) || ((array.int) == 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"strings":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6853","type":"CtBinaryOperatorImpl","sourcecode":"threshold < 0"},"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"tindex":"1bca043d-2ed3-11e6-bec9-cfc8d6013519","method":{"position":"org.apache.commons.lang3.text.StrMatcher:431","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int isMatch(final char[] buffer, final int pos, final int bufferStart, final int bufferEnd) {\n    if (pos < 0) {\n        {\n            return (buffer[pos]) <= 32 ? 1 : 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"threshold":"pos"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:642","type":"CtBinaryOperatorImpl","sourcecode":"cls == null"},"failures":[58],"tindex":"1bca043e-2ed3-11e6-bec9-59d37b8a57a3","method":{"position":"org.apache.commons.lang3.ClassUtils:802","type":"CtMethodImpl","sourcecode":"public static boolean isInnerClass(final java.lang.Class<?> cls) {\n    if (cls == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (cls != null) && ((cls.getEnclosingClass()) != null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"cls"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3456","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"1bca043f-2ed3-11e6-bec9-43b30f0cd8eb","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:153","type":"CtMethodImpl","sourcecode":"static boolean isRegistered(final java.lang.Object lhs, final java.lang.Object rhs) {\n    if (rhs == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Set<org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey>> java.util.Set<org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey>> = org.apache.commons.lang3.builder.EqualsBuilder.getRegistry();\n            final org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey> org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey> = org.apache.commons.lang3.builder.EqualsBuilder.getRegisterPair(lhs, rhs);\n            final org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey> org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey> = org.apache.commons.lang3.tuple.Pair.of(pair.getLeft(), pair.getRight());\n            return (registry != null) && ((registry.contains(pair)) || (registry.contains(swappedPair)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"rhs"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5780","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isTitleCase(ch)"},"failures":[],"tindex":"1bca2b50-2ed3-11e6-bec9-a7f4c9e81303","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:928","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrTokenizer setQuoteChar(final char quote) {\n    if (java.lang.Character.isTitleCase(quote)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return setQuoteMatcher(org.apache.commons.lang3.text.StrMatcher.charMatcher(quote));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"quote"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5445","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))"},"failures":[59,60],"tindex":"1bca2b51-2ed3-11e6-bec9-195a593231f3","method":{"position":"org.apache.commons.lang3.ArrayUtils:3205","type":"CtMethodImpl","sourcecode":"public static java.lang.Short[] toObject(final short[] array) {\n    if ((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(array))) {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Short[];\n            } \n            final java.lang.Short[] java.lang.Short[] = new java.lang.Short[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = java.lang.Short.valueOf(array[i]);\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array","values":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:803","type":"CtBinaryOperatorImpl","sourcecode":"trimmedLen > 0"},"failures":[61,62,63,64,65],"tindex":"1bca2b52-2ed3-11e6-bec9-5bf99180e49a","method":{"position":"org.apache.commons.lang3.RandomStringUtils:142","type":"CtMethodImpl","sourcecode":"public static java.lang.String random(final int count, final boolean letters, final boolean numbers) {\n    if (count > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.RandomStringUtils.random(count, 0, 0, letters, numbers);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trimmedLen":"count"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:673","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[66],"tindex":"1bca2b53-2ed3-11e6-bec9-9b69bfad1b3d","method":{"position":"org.apache.commons.lang3.StringUtils:1676","type":"CtMethodImpl","sourcecode":"public static boolean containsAny(final java.lang.CharSequence cs, final java.lang.CharSequence searchChars) {\n    if (searchChars == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (searchChars == null) {\n                return false;\n            } \n            return org.apache.commons.lang3.StringUtils.containsAny(cs, org.apache.commons.lang3.CharSequenceUtils.toCharArray(searchChars));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"searchChars"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:425","type":"CtBinaryOperatorImpl","sourcecode":"customPattern != null"},"failures":[67,68,69,70,71,72],"tindex":"1bcd5fa4-2ed3-11e6-bec9-8d8d1275f730","method":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:328","type":"CtMethodImpl","sourcecode":"private int readArgumentIndex(final java.lang.String pattern, final java.text.ParsePosition pos) {\n    if (pattern != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = pos.getIndex();\n            seekNonWs(pattern, pos);\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            boolean boolean = false;\n            for ( ; (!error) && ((pos.getIndex()) < (pattern.length())) ; next(pos)) {\n                char char = pattern.charAt(pos.getIndex());\n                if (java.lang.Character.isWhitespace(c)) {\n                    seekNonWs(pattern, pos);\n                    c = pattern.charAt(pos.getIndex());\n                    if ((c != (org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char)) && (c != (org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char))) {\n                        error = true;\n                        continue;\n                    } \n                } \n                if (((c == (org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char)) || (c == (org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char))) && ((result.length()) > 0)) {\n                    try {\n                        return java.lang.Integer.parseInt(result.toString());\n                    } catch (final java.lang.NumberFormatException e) {\n                    }\n                } \n                error = !(java.lang.Character.isDigit(c));\n                result.append(c);\n            }\n            if (error) {\n                throw new java.lang.IllegalArgumentException((((\"Invalid format argument index at position \" + start) + \": \") + (pattern.substring(start, pos.getIndex()))));\n            } \n            throw new java.lang.IllegalArgumentException((\"Unterminated format element at position \" + start));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"customPattern":"pattern"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:563","type":"CtBinaryOperatorImpl","sourcecode":"(((ch0 == 'y') || (ch0 == 'Y')) || (ch0 == 't')) || (ch0 == 'T')"},"failures":[],"tindex":"1bcd86b5-2ed3-11e6-bec9-2119c4dc087b","method":{"position":"org.apache.commons.lang3.CharUtils:497","type":"CtMethodImpl","sourcecode":"public static boolean isAsciiAlphaLower(final char ch) {\n    if ((((ch == 'y') || (ch0 == 'Y')) || (ch0 == 't')) || (ch0 == 'T')) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (ch >= 'a') && (ch <= 'z');\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch0":"ch"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:835","type":"CtBinaryOperatorImpl","sourcecode":"lastDotIndex != (-1)"},"failures":[73],"tindex":"1bcd86b6-2ed3-11e6-bec9-f703f1c8d5af","method":{"position":"org.apache.commons.lang3.ArrayUtils:4178","type":"CtMethodImpl","sourcecode":"public static int[] add(final int[] array, final int element) {\n    if (element != (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int[] int[] = ((int[])(org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(array, java.lang.Integer.java.lang.Integer.java.lang.Class<java.lang.Integer>)));\n            newArray[((newArray.int) - 1)] = element;\n            return newArray;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lastDotIndex":"element"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:468","type":"CtVariableReadImpl","sourcecode":"whitespace"},"failures":[74],"tindex":"1bcd86b7-2ed3-11e6-bec9-7712401283cd","method":{"position":"org.apache.commons.lang3.math.Fraction:740","type":"CtMethodImpl","sourcecode":"private org.apache.commons.lang3.math.Fraction addSub(final org.apache.commons.lang3.math.Fraction fraction, final boolean isAdd) {\n    if (isAdd) {\n        {\n            if (fraction == null) {\n                throw new java.lang.IllegalArgumentException(\"The fraction must not be null\");\n            } \n            if ((int) == 0) {\n                return isAdd ? fraction : fraction.negate();\n            } \n            if ((fraction.int) == 0) {\n                return org.apache.commons.lang3.math.Fraction.this;\n            } \n            final int int = org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int, fraction.int);\n            if (d1 == 1) {\n                final int int = org.apache.commons.lang3.math.Fraction.mulAndCheck(int, fraction.int);\n                final int int = org.apache.commons.lang3.math.Fraction.mulAndCheck(fraction.int, int);\n                return new org.apache.commons.lang3.math.Fraction((isAdd ? org.apache.commons.lang3.math.Fraction.addAndCheck(uvp, upv) : org.apache.commons.lang3.math.Fraction.subAndCheck(uvp, upv)) , org.apache.commons.lang3.math.Fraction.mulPosAndCheck(int, fraction.int));\n            } \n            final java.math.BigInteger java.math.BigInteger = java.math.BigInteger.valueOf(int).multiply(java.math.BigInteger.valueOf(((fraction.int) / d1)));\n            final java.math.BigInteger java.math.BigInteger = java.math.BigInteger.valueOf(fraction.int).multiply(java.math.BigInteger.valueOf(((int) / d1)));\n            final java.math.BigInteger java.math.BigInteger = isAdd ? uvp.add(upv) : uvp.subtract(upv);\n            final int int = t.mod(java.math.BigInteger.valueOf(d1)).intValue();\n            final int int = tmodd1 == 0 ? d1 : org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(tmodd1, d1);\n            final java.math.BigInteger java.math.BigInteger = t.divide(java.math.BigInteger.valueOf(d2));\n            if ((w.bitLength()) > 31) {\n                throw new java.lang.ArithmeticException(\"overflow: numerator too large after multiply\");\n            } \n            return new org.apache.commons.lang3.math.Fraction(w.intValue() , org.apache.commons.lang3.math.Fraction.mulPosAndCheck(((int) / d1), ((fraction.int) / d2)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"whitespace":"isAdd"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1886","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isHighSurrogate(ch)"},"failures":[75,76],"tindex":"1bcdadc8-2ed3-11e6-bec9-db34c80253f6","method":{"position":"org.apache.commons.lang3.CharUtils:402","type":"CtMethodImpl","sourcecode":"public static boolean isAscii(final char ch) {\n    if (java.lang.Character.isHighSurrogate(ch)) {\n        {\n            return ch < 128;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3852","type":"CtBinaryOperatorImpl","sourcecode":"array2 == null"},"failures":[77],"tindex":"1bcdadc9-2ed3-11e6-bec9-95b47ce4ccda","method":{"position":"org.apache.commons.lang3.ArrayUtils:3849","type":"CtMethodImpl","sourcecode":"public static short[] addAll(final short[] array1, final short... array2) {\n    if (array2 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array1 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array2);\n            } else if (array2 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array1);\n            } \n            final short[] short[] = new short[(array1.int) + (array2.int)];\n            java.lang.System.arraycopy(array1, 0, joinedArray, 0, array1.int);\n            java.lang.System.arraycopy(array2, 0, joinedArray, array1.int, array2.int);\n            return joinedArray;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array2":"array2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:599","type":"CtBinaryOperatorImpl","sourcecode":"k == 31"},"failures":[78,79,80,81,82,83,84],"tindex":"1bcdd4da-2ed3-11e6-bec9-cf7332e2c7c5","method":{"position":"org.apache.commons.lang3.math.Fraction:209","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.math.Fraction getReducedFraction(int numerator, int denominator) {\n    if (numerator == 31) {\n        {\n            if (denominator == 0) {\n                throw new java.lang.ArithmeticException(\"The denominator must not be zero\");\n            } \n            if (numerator == 0) {\n                return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction;\n            } \n            if ((denominator == (java.lang.Integer.java.lang.Integer.int)) && ((numerator & 1) == 0)) {\n                numerator /= 2;\n                denominator /= 2;\n            } \n            if (denominator < 0) {\n                if ((numerator == (java.lang.Integer.java.lang.Integer.int)) || (denominator == (java.lang.Integer.java.lang.Integer.int))) {\n                    throw new java.lang.ArithmeticException(\"overflow: can't negate\");\n                } \n                numerator = -numerator;\n                denominator = -denominator;\n            } \n            final int int = org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(numerator, denominator);\n            numerator /= gcd;\n            denominator /= gcd;\n            return new org.apache.commons.lang3.math.Fraction(numerator , denominator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"numerator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1153","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[85,85,86,8],"tindex":"1bcdd4db-2ed3-11e6-bec9-d9704aa300ca","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:317","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final byte[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, array, null);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:170","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[87,88,89],"tindex":"1bcdfbec-2ed3-11e6-bec9-cf6271754a28","method":{"position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:300","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder namingPattern(final java.lang.String pattern) {\n    if (pattern == null) {\n        {\n            if (pattern == null) {\n                throw new java.lang.NullPointerException(\"Naming pattern must not be null!\");\n            } \n            java.lang.String = pattern;\n            return org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"pattern"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:176","type":"CtBinaryOperatorImpl","sourcecode":"denominator < 0"},"failures":[90,91],"tindex":"1bcdfbed-2ed3-11e6-bec9-4f8764a75522","method":{"position":"org.apache.commons.lang3.ArrayUtils:4742","type":"CtMethodImpl","sourcecode":"public static byte[] remove(final byte[] array, final int index) {\n    if (index < 0) {\n        {\n            return ((byte[])(org.apache.commons.lang3.ArrayUtils.remove(((java.lang.Object)(array)), index)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"denominator":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:1108","type":"CtBinaryOperatorImpl","sourcecode":"(tokens) == null"},"failures":[38],"tindex":"1bcdfbee-2ed3-11e6-bec9-f3be7e899335","method":{"position":"org.apache.commons.lang3.StringUtils:388","type":"CtMethodImpl","sourcecode":"public static boolean isNoneBlank(java.lang.CharSequence... css) {\n    if (css == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return !(org.apache.commons.lang3.StringUtils.isAnyBlank(css));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"tokens":"css"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrMatcher:206","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[92],"tindex":"1bcdfbef-2ed3-11e6-bec9-35cd0e402d76","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:511","type":"CtMethodImpl","sourcecode":"public static final java.lang.String escapeJson(final java.lang.String input) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(input)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:202","type":"CtBinaryOperatorImpl","sourcecode":"(tmp.length()) != (duration.length())"},"failures":[],"tindex":"1bce2300-2ed3-11e6-bec9-8b6473d85e3a","method":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:514","type":"CtMethodImpl","sourcecode":"private void getQuotedString(final java.lang.String pattern, final java.text.ParsePosition pos, final boolean escapingOn) {\n    if ((pattern.length()) != (pattern.length())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendQuotedString(pattern, pos, null, escapingOn);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"duration":"pattern","tmp":"pattern"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:176","type":"CtBinaryOperatorImpl","sourcecode":"newLineStr == null"},"failures":[93,94],"tindex":"1bcff7c1-2ed3-11e6-bec9-315b56c98645","method":{"position":"org.apache.commons.lang3.CharSetUtils:107","type":"CtMethodImpl","sourcecode":"public static boolean containsAny(final java.lang.String str, final java.lang.String... set) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.CharSetUtils.deepEmpty(set))) {\n                return false;\n            } \n            final org.apache.commons.lang3.CharSet org.apache.commons.lang3.CharSet = org.apache.commons.lang3.CharSet.getInstance(set);\n            for (final char char : str.toCharArray()) {\n                if (chars.contains(c)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"newLineStr":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.reflect.InvocationTargetException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:812","type":"CtBinaryOperatorImpl","sourcecode":"bool == null"},"failures":[],"tindex":"1bd01ed2-2ed3-11e6-bec9-8b4be2b1a5a2","method":{"position":"org.apache.commons.lang3.reflect.MethodUtils:119","type":"CtMethodImpl","sourcecode":"public static java.lang.Object invokeMethod(final java.lang.Object object, final java.lang.String methodName, java.lang.Object[] args, java.lang.Class<?>[] parameterTypes) throws java.lang.IllegalAccessException, java.lang.NoSuchMethodException, java.lang.reflect.InvocationTargetException {\n    if (object == null) {\n        throw new java.lang.reflect.InvocationTargetException();\n    } else {\n        {\n            parameterTypes = org.apache.commons.lang3.ArrayUtils.nullToEmpty(parameterTypes);\n            args = org.apache.commons.lang3.ArrayUtils.nullToEmpty(args);\n            final java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.getMatchingAccessibleMethod(object.getClass(), methodName, parameterTypes);\n            if (method == null) {\n                throw new java.lang.NoSuchMethodException((((\"No such accessible method: \" + methodName) + \"() on object: \") + (object.getClass().getName())));\n            } \n            return method.invoke(object, args);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bool":"object"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:399","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.GenericArrayType"},"failures":[95,96,97,98,99],"tindex":"1bd045e3-2ed3-11e6-bec9-774b117e3cb2","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:508","type":"CtMethodImpl","sourcecode":"public static void writeStaticField(final java.lang.reflect.Field field, final java.lang.Object value, final boolean forceAccess) throws java.lang.IllegalAccessException {\n    if (value instanceof java.lang.reflect.GenericArrayType) {\n        {\n            org.apache.commons.lang3.Validate.isTrue((field != null), \"The field must not be null\");\n            org.apache.commons.lang3.Validate.isTrue(java.lang.reflect.Modifier.isStatic(field.getModifiers()), \"The field %s.%s is not static\", field.getDeclaringClass().getName(), field.getName());\n            org.apache.commons.lang3.reflect.FieldUtils.writeField(field, ((java.lang.Object)(null)), value, forceAccess);\n        }\n    } else {\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1262","type":"CtBinaryOperatorImpl","sourcecode":"c > a"},"failures":[],"tindex":"1bd045e4-2ed3-11e6-bec9-75aeab25d024","method":{"position":"org.apache.commons.lang3.ObjectUtils:765","type":"CtMethodImpl","sourcecode":"public static byte CONST(final byte v) {\n    if (v > v) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return v;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"v","c":"v"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2073","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"1bd045e5-2ed3-11e6-bec9-b5e642225f93","method":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:404","type":"CtMethodImpl","sourcecode":"private java.lang.String insertFormats(final java.lang.String pattern, final java.util.ArrayList<java.lang.String> customPatterns) {\n    if (pattern == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(containsElements(customPatterns))) {\n                return pattern;\n            } \n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(((pattern.length()) * 2));\n            final java.text.ParsePosition java.text.ParsePosition = new java.text.ParsePosition(0);\n            int int = -1;\n            int int = 0;\n            while ((pos.getIndex()) < (pattern.length())) {\n                final char char = pattern.charAt(pos.getIndex());\n                switch (c) {\n                    case org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char :\n                        appendQuotedString(pattern, pos, sb, false);\n                        break;\n                    case org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char :\n                        depth++;\n                        sb.append(org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char).append(readArgumentIndex(pattern, next(pos)));\n                        if (depth == 1) {\n                            fe++;\n                            final java.lang.String java.lang.String = customPatterns.get(fe);\n                            if (customPattern != null) {\n                                sb.append(org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char).append(customPattern);\n                            } \n                        } \n                        break;\n                    case org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char :\n                        depth--;\n                    default :\n                        sb.append(c);\n                        next(pos);\n                }\n            }\n            return sb.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"pattern"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:1083","type":"CtBinaryOperatorImpl","sourcecode":"(value <= start) || (value >= end)"},"failures":[],"tindex":"1bd06cf6-2ed3-11e6-bec9-df152b74e4b9","method":{"position":"org.apache.commons.lang3.ArrayUtils:4205","type":"CtMethodImpl","sourcecode":"public static long[] add(final long[] array, final long element) {\n    if ((element <= element) || (value >= element)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final long[] long[] = ((long[])(org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(array, java.lang.Long.java.lang.Long.java.lang.Class<java.lang.Long>)));\n            newArray[((newArray.int) - 1)] = element;\n            return newArray;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"element","end":"element","value":"element"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:7053","type":"CtBinaryOperatorImpl","sourcecode":"((m1.length()) == 0) || ((m2.length()) == 0)"},"failures":[100,101,102,103,104,105,106],"tindex":"1bd06cf7-2ed3-11e6-bec9-73913e861695","method":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:243","type":"CtMethodImpl","sourcecode":"public static java.lang.String formatPeriod(final long startMillis, final long endMillis, final java.lang.String format) {\n    if (((format.length()) == 0) || ((format.length()) == 0)) {\n        {\n            return org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(startMillis, endMillis, format, true, java.util.TimeZone.getDefault());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"m1":"format","m2":"format"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:658","type":"CtBinaryOperatorImpl","sourcecode":"trueString == null"},"failures":[],"tindex":"1bd09408-2ed3-11e6-bec9-45156b324751","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:895","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final java.lang.Object[] array, final boolean fullDetail) {\n    if (fieldName == null) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, array, java.lang.Boolean.valueOf(fullDetail));\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trueString":"fieldName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:920","type":"CtBinaryOperatorImpl","sourcecode":"resolver == null"},"failures":[107,108,109,110,111,112],"tindex":"1bd09409-2ed3-11e6-bec9-cd2387754fdd","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1168","type":"CtMethodImpl","sourcecode":"public void setVariableResolver(final org.apache.commons.lang3.text.StrLookup<?> variableResolver) {\n    if (variableResolver == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.text.StrSubstitutor.this.org.apache.commons.lang3.text.StrLookup<?> = variableResolver;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"resolver":"variableResolver"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2766","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.ArrayUtils.isEmpty(array)"},"failures":[],"tindex":"1bd0940a-2ed3-11e6-bec9-fd1adffd775e","method":{"position":"org.apache.commons.lang3.Validate:1199","type":"CtMethodImpl","sourcecode":"public static void isInstanceOf(final java.lang.Class<?> type, final java.lang.Object obj, final java.lang.String message, final java.lang.Object... values) {\n    if (org.apache.commons.lang3.ArrayUtils.isEmpty(obj)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((type.isInstance(obj)) == false) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message, values));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"obj"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:728","type":"CtBinaryOperatorImpl","sourcecode":"(comparison) != 0"},"failures":[113],"tindex":"1bd0bb1b-2ed3-11e6-bec9-b73abc06026c","method":{"position":"org.apache.commons.lang3.BitField:138","type":"CtMethodImpl","sourcecode":"public boolean isAllSet(final int holder) {\n    if (holder != 0) {\n        {\n            return (holder & (int)) == (int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparison":"holder"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.SerializationUtils:160","type":"CtBinaryOperatorImpl","sourcecode":"out != null"},"failures":[114],"tindex":"1bd0bb1c-2ed3-11e6-bec9-4fb3e5a7ec18","method":{"position":"org.apache.commons.lang3.event.EventListenerSupport:224","type":"CtMethodImpl","sourcecode":"private void writeObject(final java.io.ObjectOutputStream objectOutputStream) throws java.io.IOException {\n    if (objectOutputStream != null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            final java.util.ArrayList<L> java.util.ArrayList<L> = new java.util.ArrayList<L>();\n            java.io.ObjectOutputStream java.io.ObjectOutputStream = new java.io.ObjectOutputStream(new java.io.ByteArrayOutputStream());\n            for (final L L : java.util.List<L>) {\n                try {\n                    testObjectOutputStream.writeObject(listener);\n                    serializableListeners.add(listener);\n                } catch (final java.io.IOException exception) {\n                    testObjectOutputStream = new java.io.ObjectOutputStream(new java.io.ByteArrayOutputStream());\n                }\n            }\n            objectOutputStream.writeObject(serializableListeners.toArray(L[]));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"out":"objectOutputStream"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.JavaVersion:134","type":"CtInvocationImpl","sourcecode":"\"1.1\".equals(nom)"},"failures":[],"tindex":"1bd0bb1d-2ed3-11e6-bec9-bb7ab3c46ab3","method":{"position":"org.apache.commons.lang3.StringUtils:584","type":"CtMethodImpl","sourcecode":"public static java.lang.String strip(java.lang.String str, final java.lang.String stripChars) {\n    if (\"1.1\".equals(stripChars)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n                return str;\n            } \n            str = org.apache.commons.lang3.StringUtils.stripStart(str, stripChars);\n            return org.apache.commons.lang3.StringUtils.stripEnd(str, stripChars);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nom":"stripChars"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:456","type":"CtBinaryOperatorImpl","sourcecode":"throwable == null"},"failures":[115,116],"tindex":"1bd0e22e-2ed3-11e6-bec9-77ae458b02b2","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:671","type":"CtMethodImpl","sourcecode":"public static java.lang.String getMessage(final java.lang.Throwable th) {\n    if (th == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (th == null) {\n                return \"\";\n            } \n            final java.lang.String java.lang.String = org.apache.commons.lang3.ClassUtils.getShortClassName(th, null);\n            final java.lang.String java.lang.String = th.getMessage();\n            return (clsName + \": \") + (org.apache.commons.lang3.StringUtils.defaultString(msg));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"throwable":"th"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2171","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[],"tindex":"1bd0e22f-2ed3-11e6-bec9-a5a0be9c594c","method":{"position":"org.apache.commons.lang3.text.translate.JavaUnicodeEscaper:79","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.translate.JavaUnicodeEscaper outsideOf(final int codepointLow, final int codepointHigh) {\n    if (codepointLow < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.lang3.text.translate.JavaUnicodeEscaper(codepointLow , codepointHigh , false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"codepointLow"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1223","type":"CtBinaryOperatorImpl","sourcecode":"b > a"},"failures":[],"tindex":"1bd0e230-2ed3-11e6-bec9-c1e16b585331","method":{"position":"org.apache.commons.lang3.time.FastDateParser:517","type":"CtMethodImpl","sourcecode":"private static java.util.concurrent.ConcurrentMap<java.util.Locale, org.apache.commons.lang3.time.FastDateParser.Strategy> getCache(final int field) {\n    if (field > field) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.java.util.concurrent.ConcurrentMap<java.util.Locale, org.apache.commons.lang3.time.FastDateParser.Strategy>[]) {\n                if ((org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.java.util.concurrent.ConcurrentMap<java.util.Locale, org.apache.commons.lang3.time.FastDateParser.Strategy>[][field]) == null) {\n                    org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.java.util.concurrent.ConcurrentMap<java.util.Locale, org.apache.commons.lang3.time.FastDateParser.Strategy>[][field] = new java.util.concurrent.ConcurrentHashMap<java.util.Locale, org.apache.commons.lang3.time.FastDateParser.Strategy>(3);\n                } \n                return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.java.util.concurrent.ConcurrentMap<java.util.Locale, org.apache.commons.lang3.time.FastDateParser.Strategy>[][field];\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"field","b":"field"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1092","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[117],"tindex":"1bd10941-2ed3-11e6-bec9-8fa2ee5c320f","method":{"position":"org.apache.commons.lang3.ArrayUtils:2296","type":"CtMethodImpl","sourcecode":"public static boolean contains(final short[] array, final short valueToFind) {\n    if (array == null) {\n        {\n            return (org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind)) != (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"c < a"},"failures":[],"tindex":"1bd10942-2ed3-11e6-bec9-17c99376aa68","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1258","type":"CtMethodImpl","sourcecode":"public static byte max(byte a, final byte b, final byte c) {\n    if (b < b) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (b > a) {\n                a = b;\n            } \n            if (c > a) {\n                a = c;\n            } \n            return a;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","c":"b"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSet:139","type":"CtBinaryOperatorImpl","sourcecode":"setStrs == null"},"failures":[],"tindex":"1bd10943-2ed3-11e6-bec9-990d8cc27716","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:875","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final java.lang.Object[] lhs, final java.lang.Object[] rhs) {\n    if (lhs == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if (!(java.util.Arrays.equals(lhs, rhs))) {\n                java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Object[]>(fieldName) {\n                    private static final long serialVersionUID = 1L;\n\n                    @java.lang.Override\n                    public java.lang.Object[] getLeft() {\n                        return lhs;\n                    }\n\n                    @java.lang.Override\n                    public java.lang.Object[] getRight() {\n                        return rhs;\n                    }\n                });\n            } \n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"setStrs":"lhs"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:766","type":"CtUnaryOperatorImpl","sourcecode":"!(java.util.Arrays.equals(lhs, rhs))"},"failures":[],"tindex":"1bd13054-2ed3-11e6-bec9-139ad7d0abb1","method":{"position":"org.apache.commons.lang3.time.FormatCache:241","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (!(java.util.Arrays.equals(obj, obj))) {\n        {\n            return java.util.Arrays.equals(java.lang.Object[], ((org.apache.commons.lang3.time.FormatCache.MultipartKey)(obj)).java.lang.Object[]);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"obj","rhs":"obj"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:472","type":"CtBinaryOperatorImpl","sourcecode":"(java.lang.Float.floatToIntBits(lhs)) != (java.lang.Float.floatToIntBits(rhs))"},"failures":[118,119],"tindex":"1bd13055-2ed3-11e6-bec9-7b4c5bf6262a","method":{"position":"org.apache.commons.lang3.text.StrBuilder:828","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder append(final float value) {\n    if ((java.lang.Float.floatToIntBits(value)) != (java.lang.Float.floatToIntBits(value))) {\n        {\n            return append(java.lang.String.valueOf(value));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"value","rhs":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ObjectUtils:317","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[120,121,122,123,124,125,34,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,59,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163],"tindex":"1bd15766-2ed3-11e6-bec9-4735de3e5ac1","method":{"position":"org.apache.commons.lang3.ArrayUtils:1884","type":"CtMethodImpl","sourcecode":"public static int indexOf(final java.lang.Object[] array, final java.lang.Object objectToFind) {\n    if (objectToFind == null) {\n        {\n            return org.apache.commons.lang3.ArrayUtils.indexOf(array, objectToFind, 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"objectToFind"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:146","type":"CtBinaryOperatorImpl","sourcecode":"(numerator == (java.lang.Integer.MIN_VALUE)) || (denominator == (java.lang.Integer.MIN_VALUE))"},"failures":[164],"tindex":"1bd15767-2ed3-11e6-bec9-633615747e59","method":{"position":"org.apache.commons.lang3.ArrayUtils:1074","type":"CtMethodImpl","sourcecode":"public static byte[] subarray(final byte[] array, int startIndexInclusive, int endIndexExclusive) {\n    if ((endIndexExclusive == startIndexInclusive) || (startIndexInclusive == (java.lang.Integer.java.lang.Integer.int))) {\n        {\n            if (array == null) {\n                return null;\n            } \n            if (startIndexInclusive < 0) {\n                startIndexInclusive = 0;\n            } \n            if (endIndexExclusive > (array.int)) {\n                endIndexExclusive = array.int;\n            } \n            final int int = endIndexExclusive - startIndexInclusive;\n            if (newSize <= 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.byte[];\n            } \n            final byte[] byte[] = new byte[newSize];\n            java.lang.System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);\n            return subarray;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.lang.Integer.MIN_VALUE":"startIndexInclusive","numerator":"endIndexExclusive","denominator":"startIndexInclusive"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:672","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[165],"tindex":"1bd17e78-2ed3-11e6-bec9-cd44c48f074c","method":{"position":"org.apache.commons.lang3.StringUtils:2412","type":"CtMethodImpl","sourcecode":"public static java.lang.String substringAfterLast(final java.lang.String str, final java.lang.String separator) {\n    if (separator == null) {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n                return str;\n            } \n            if (org.apache.commons.lang3.StringUtils.isEmpty(separator)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final int int = str.lastIndexOf(separator);\n            if ((pos == (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) || (pos == ((str.length()) - (separator.length())))) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            return str.substring((pos + (separator.length())));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"separator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1496","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[166],"tindex":"1bd17e79-2ed3-11e6-bec9-37990f437e51","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2322","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return indexOf(str, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.JavaVersion:148","type":"CtInvocationImpl","sourcecode":"\"1.8\".equals(nom)"},"failures":[167],"tindex":"1bd17e7a-2ed3-11e6-bec9-836dcf62874e","method":{"position":"org.apache.commons.lang3.time.DateFormatUtils:276","type":"CtMethodImpl","sourcecode":"public static java.lang.String format(final java.util.Calendar calendar, final java.lang.String pattern, final java.util.Locale locale) {\n    if (\"1.8\".equals(pattern)) {\n        {\n            return org.apache.commons.lang3.time.DateFormatUtils.format(calendar, pattern, null, locale);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nom":"pattern"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":69,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}