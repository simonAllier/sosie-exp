{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":115,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllByteArrayRemoveNone":169,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":117,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":111,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":114,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllCharArrayOutOfBoundsIndex":189,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetAccessibleMethodPrivateInterface":204,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveBooleanArray":7,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testCreateIfAbsentKeyNotPresent":227,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllDoubleArray":197,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceAll_StrMatcher_String":12,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":151,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayBoolean":216,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayInt":210,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":155,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":91,"org.apache.commons.lang3.text.StrBuilderTest.testContains_StrMatcher":18,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_StrMatcher_int":20,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllCharArrayRemoveNone":176,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang708":138,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":86,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml10":135,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllLongArrayRemoveNone":177,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml11":136,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllFloatArrayRemoveNone":185,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayFloat":222,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllObjectArrayOutOfBoundsIndex":173,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":119,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":103,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":153,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllObjectArrayRemoveNone":196,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":107,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":48,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testCreateIfAbsentNullInit":228,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":87,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeEcmaScript":140,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":97,"org.apache.commons.lang3.StringUtilsTest.testSplitByWholeSeparatorPreserveAllTokens_StringStringInt":223,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryEndIndex":10,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJavaWithSlash":134,"org.apache.commons.lang3.EnumUtilsTest.test_getEnum":205,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementFloatArray":206,"org.apache.commons.lang3.math.NumberUtilsTest.testMaximumShort":148,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllFloatArrayOutOfBoundsIndex":183,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOf_StrMatcher_int":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":74,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testCreateIfAbsentUncheckedSuccess":231,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllLongArrayOutOfBoundsIndex":171,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":110,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":32,"org.apache.commons.lang3.text.StrMatcherTest.testSingleQuoteMatcher":21,"org.apache.commons.lang3.StringUtilsTest.testSplitByWholeString_StringStringBooleanInt":224,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayObject":218,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testCreateIfAbsentUncheckedException":230,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":92,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":85,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairsLang858":129,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":124,"org.apache.commons.lang3.AnnotationUtilsTest.testNonEquivalentAnnotationsOfSameType":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":89,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllByteArray":188,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":63,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":157,"org.apache.commons.lang3.text.StrMatcherTest.testCommaMatcher":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":82,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":56,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":158,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":123,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":113,"org.apache.commons.lang3.AnnotationUtilsTest.testEquivalence":1,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":64,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":100,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":71,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayChar":214,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBetween":146,"org.apache.commons.lang3.CharUtilsTest.testIsAsciiAlphanumeric_char":235,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteAll_StrMatcher":15,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":49,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfWithStartIndex":60,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":50,"org.apache.commons.lang3.text.StrMatcherTest.testSpaceMatcher":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":81,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":66,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementShortArray":219,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":96,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllBooleanArray":167,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBetween":143,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":76,"org.apache.commons.lang3.text.StrMatcherTest.testCharMatcher_char":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":99,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":118,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":90,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_String_int_int":164,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllByteArrayNegativeIndex":193,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryMatcher":14,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":160,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":69,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayByte":213,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":152,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayShort":212,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayToObjectArray":5,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllDoubleArrayOutOfBoundsIndex":175,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":77,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceAll_String_String":208,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfShortWithStartIndex":220,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":106,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":62,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":162,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryStartIndex":13,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":101,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":84,"org.apache.commons.lang3.StringUtilsTest.testSplitByWholeString_StringStringBoolean":225,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllCharArrayNegativeIndex":191,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":163,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":65,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllDoubleArrayNegativeIndex":202,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":109,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllShortArrayOutOfBoundsIndex":179,"org.apache.commons.lang3.text.StrMatcherTest.testDoubleQuoteMatcher":26,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":67,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllNumberArray":181,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllLongArrayNegativeIndex":190,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllBooleanArrayRemoveNone":198,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":80,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceFirst_StrMatcher_String":9,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllBooleanArrayNegativeIndex":195,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":79,"org.apache.commons.lang3.ConversionTest.testHexToInt":165,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfFloatWithStartIndex":207,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":31,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlSupplementaryCharacters":137,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":68,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":233,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":102,"org.apache.commons.lang3.StringUtilsTest.testCenter_StringIntString":126,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testSupplementary":147,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testFloatArray":234,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":88,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBelow":145,"org.apache.commons.lang3.StringUtilsTest.testDefault_StringString":221,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyByteObjectNull":0,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllDoubleArrayRemoveNone":174,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":27,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectAtIndex":125,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":57,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBelow":142,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":58,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":156,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":154,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":108,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testAbove":144,"org.apache.commons.lang3.StringUtilsIsTest.testIsAlphanumeric":61,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfInt":226,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllLongArray":203,"org.apache.commons.lang3.ArrayUtilsTest.testIsNotEmptyPrimitives":209,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":105,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":132,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOf":59,"org.apache.commons.lang3.ObjectUtilsTest.testHashCodeMulti_multiple_emptyArray":127,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllIntArrayRemoveNone":170,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":116,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxLong_nullArray":6,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteFirst_StrMatcher":8,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_PrimitiveNumber":150,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":131,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllIntArray":192,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllObjectArray":200,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryCount":11,"org.apache.commons.lang3.math.NumberUtilsTest.testLANG992":232,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":104,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllCharArray":182,"org.apache.commons.lang3.text.StrTokenizerTest.test8":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":93,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":139,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllFloatArray":199,"org.apache.commons.lang3.text.StrTokenizerTest.test5":44,"org.apache.commons.lang3.text.StrTokenizerTest.test4":43,"org.apache.commons.lang3.text.StrTokenizerTest.test7":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":94,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllShortArrayNegativeIndex":172,"org.apache.commons.lang3.text.StrTokenizerTest.test6":45,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":95,"org.apache.commons.lang3.text.StrTokenizerTest.test1":40,"org.apache.commons.lang3.text.StrTokenizerTest.test3":42,"org.apache.commons.lang3.text.StrTokenizerTest.test2":41,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":70,"org.apache.commons.lang3.AnnotationUtilsTest.testIsValidAnnotationMemberType":4,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayLong":215,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":28,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":29,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJson":133,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":130,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllShortArray":184,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllBooleanArrayOutOfBoundsIndex":186,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testAbove":141,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllIntArrayNegativeIndex":201,"org.apache.commons.lang3.AnnotationUtilsTest.testGeneratedAnnotationEquivalentToRealAnnotation":2,"org.apache.commons.lang3.text.StrMatcherTest.testTabMatcher":24,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testCreateIfAbsentKeyPresent":229,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":98,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllFloatArrayNegativeIndex":168,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllShortArrayRemoveNone":180,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayFloat":211,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":33,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":30,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":35,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":34,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllByteArrayOutOfBoundsIndex":187,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":37,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":36,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":39,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":112,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":55,"org.apache.commons.lang3.HashSetvBitSetTest.testTimesExtractOrBitset":166,"org.apache.commons.lang3.ObjectUtilsTest.testHashCodeMulti_multiple_likeList":128,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":83,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":120,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllIntArrayOutOfBoundsIndex":194,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":73,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":53,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":52,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":54,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOf_StrMatcher":19,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_StrMatcher":16,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":51,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllObjectArrayNegativeIndex":178,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":121,"org.apache.commons.lang3.CharUtilsTest.testIsAsciiAlpha_char":236,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":75,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_PrimitiveNumber":149,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":161,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayDouble":217,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":122,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":159},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3252","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[0],"tindex":"8bd481f2-2e9a-11e6-b3f4-49294a572d98","method":{"position":"org.apache.commons.lang3.ArrayUtils:772","type":"CtMethodImpl","sourcecode":"public static java.lang.Byte[] nullToEmpty(final java.lang.Byte[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((array == null) || ((array.int) == 0)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Byte[];\n            } \n            return array;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:905","type":"CtInvocationImpl","sourcecode":"cls.isPrimitive()"},"failures":[1,2,3,4],"tindex":"8bd59363-2e9a-11e6-b3f4-597c50132ebd","method":{"position":"org.apache.commons.lang3.AnnotationUtils:223","type":"CtMethodImpl","sourcecode":"public static boolean isValidAnnotationMemberType(java.lang.Class<?> type) {\n    if (type.isPrimitive()) {\n        {\n            if (type == null) {\n                return false;\n            } \n            if (type.isArray()) {\n                type = type.getComponentType();\n            } \n            return ((((type.isPrimitive()) || (type.isEnum())) || (type.isAnnotation())) || (java.lang.String.java.lang.String.java.lang.Class.equals(type))) || (java.lang.Class.java.lang.Class.java.lang.Class.equals(type));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"type"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1092","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[5],"tindex":"8bd5ba74-2e9a-11e6-b3f4-13f517f42e87","method":{"position":"org.apache.commons.lang3.ArrayUtils:3849","type":"CtMethodImpl","sourcecode":"public static short[] addAll(final short[] array1, final short... array2) {\n    if (array2 == null) {\n        {\n            if (array1 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array2);\n            } else if (array2 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array1);\n            } \n            final short[] short[] = new short[(array1.int) + (array2.int)];\n            java.lang.System.arraycopy(array1, 0, joinedArray, 0, array1.int);\n            java.lang.System.arraycopy(array2, 0, joinedArray, array1.int, array2.int);\n            return joinedArray;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4171","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[],"tindex":"8bd5e185-2e9a-11e6-b3f4-5fcd96e77eb3","method":{"position":"org.apache.commons.lang3.ObjectUtils:396","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static java.lang.String toString(final java.lang.Object obj) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(obj)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return obj == null ? \"\" : obj.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"obj"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2065","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[6],"tindex":"8bd5e186-2e9a-11e6-b3f4-f35a9995b08c","method":{"position":"org.apache.commons.lang3.math.NumberUtils:936","type":"CtMethodImpl","sourcecode":"public static long max(final long[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.math.NumberUtils.validateArray(array);\n            long long = array[0];\n            for (int int = 1 ; j < (array.int) ; j++) {\n                if ((array[j]) > max) {\n                    max = array[j];\n                } \n            }\n            return max;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:183","type":"CtBinaryOperatorImpl","sourcecode":"whole < 0"},"failures":[7],"tindex":"8bd60897-2e9a-11e6-b3f4-f5737ff3c2d0","method":{"position":"org.apache.commons.lang3.ArrayUtils:4677","type":"CtMethodImpl","sourcecode":"public static boolean[] remove(final boolean[] array, final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((boolean[])(org.apache.commons.lang3.ArrayUtils.remove(((java.lang.Object)(array)), index)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"whole":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:649","type":"CtBinaryOperatorImpl","sourcecode":"pos >= count"},"failures":[],"tindex":"8bd62fa8-2e9a-11e6-b3f4-89a92668bf91","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:413","type":"CtMethodImpl","sourcecode":"public java.lang.String replace(final java.lang.String source, final int offset, final int length) {\n    if (length >= length) {\n        {\n            if (source == null) {\n                return null;\n            } \n            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(length).append(source, offset, length);\n            if ((substitute(buf, 0, length)) == false) {\n                return source.substring(offset, (offset + length));\n            } \n            return buf.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pos":"length","count":"length"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1157","type":"CtBinaryOperatorImpl","sourcecode":"((nBools - 1) + dstPos) >= 8"},"failures":[8,9,10,11,12,13,14,15],"tindex":"8bd62fa9-2e9a-11e6-b3f4-f1bac3392077","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1991","type":"CtMethodImpl","sourcecode":"private org.apache.commons.lang3.text.StrBuilder replaceImpl(final org.apache.commons.lang3.text.StrMatcher matcher, final java.lang.String replaceStr, final int from, int to, int replaceCount) {\n    if (((to - 1) + replaceCount) >= 8) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((matcher == null) || ((int) == 0)) {\n                return org.apache.commons.lang3.text.StrBuilder.this;\n            } \n            final int int = replaceStr == null ? 0 : replaceStr.length();\n            final char[] char[] = char[];\n            for (int int = from ; (i < to) && (replaceCount != 0) ; i++) {\n                final int int = matcher.isMatch(buf, i, from, to);\n                if (removeLen > 0) {\n                    replaceImpl(i, (i + removeLen), removeLen, replaceStr, replaceLen);\n                    to = (to - removeLen) + replaceLen;\n                    i = (i + replaceLen) - 1;\n                    if (replaceCount > 0) {\n                        replaceCount--;\n                    } \n                } \n            }\n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nBools":"to","dstPos":"replaceCount"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3234","type":"CtBinaryOperatorImpl","sourcecode":"type == currentType"},"failures":[9,16,17,12,14,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58],"tindex":"8bd67dca-2e9a-11e6-b3f4-3d833c3a186b","method":{"position":"org.apache.commons.lang3.text.StrMatcher:333","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int isMatch(final char[] buffer, final int pos, final int bufferStart, final int bufferEnd) {\n    if (bufferEnd == pos) {\n        {\n            return (char) == (buffer[pos]) ? 1 : 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"currentType":"pos","type":"bufferEnd"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:221","type":"CtBinaryOperatorImpl","sourcecode":"innerIdx != (-1)"},"failures":[59,60],"tindex":"8bd67dcb-2e9a-11e6-b3f4-958884023955","method":{"position":"org.apache.commons.lang3.ArrayUtils:1953","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final java.lang.Object[] array, final java.lang.Object objectToFind, int startIndex) {\n    if (startIndex != (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } else if (startIndex >= (array.int)) {\n                startIndex = (array.int) - 1;\n            } \n            if (objectToFind == null) {\n                for (int int = startIndex ; i >= 0 ; i--) {\n                    if ((array[i]) == null) {\n                        return i;\n                    } \n                }\n            } else if (array.getClass().getComponentType().isInstance(objectToFind)) {\n                for (int int = startIndex ; i >= 0 ; i--) {\n                    if (objectToFind.equals(array[i])) {\n                        return i;\n                    } \n                }\n            } \n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"innerIdx":"startIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:673","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[61],"tindex":"8bd6cbec-2e9a-11e6-b3f4-f3b07edcb462","method":{"position":"org.apache.commons.lang3.StringUtils:5916","type":"CtMethodImpl","sourcecode":"public static boolean isAlphanumeric(final java.lang.CharSequence cs) {\n    if (cs == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(cs)) {\n                return false;\n            } \n            final int int = cs.length();\n            for (int int = 0 ; i < sz ; i++) {\n                if ((java.lang.Character.isLetterOrDigit(cs.charAt(i))) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"cs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5016","type":"CtBinaryOperatorImpl","sourcecode":"last != (org.apache.commons.lang3.CharUtils.CR)"},"failures":[],"tindex":"8bd6f2fd-2e9a-11e6-b3f4-1fda87566000","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1702","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder deleteAll(final char ch) {\n    if (ch != ch) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = 0 ; i < (int) ; i++) {\n                if ((char[][i]) == ch) {\n                    final int int = i;\n                    while ((++i) < (int)) {\n                        if ((char[][i]) != ch) {\n                            break;\n                        } \n                    }\n                    final int int = i - start;\n                    deleteImpl(start, i, len);\n                    i -= len;\n                } \n            }\n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"last":"ch","org.apache.commons.lang3.CharUtils.CR":"ch"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:732","type":"CtBinaryOperatorImpl","sourcecode":"str != null"},"failures":[62,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124],"tindex":"8bd71a0e-2e9a-11e6-b3f4-f7f18eb78512","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:1008","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder appendToString(final java.lang.String toString) {\n    if (toString != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (toString != null) {\n                org.apache.commons.lang3.builder.ToStringStyle.appendToString(java.lang.StringBuffer, toString);\n            } \n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"toString"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:346","type":"CtBinaryOperatorImpl","sourcecode":"pos < 0"},"failures":[125],"tindex":"8bd7411f-2e9a-11e6-b3f4-2d1f3ac5cc20","method":{"position":"org.apache.commons.lang3.ArrayUtils:4420","type":"CtMethodImpl","sourcecode":"public static short[] add(final short[] array, final int index, final short element) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((short[])(org.apache.commons.lang3.ArrayUtils.add(array, index, java.lang.Short.valueOf(element), java.lang.Short.java.lang.Short.java.lang.Class<java.lang.Short>)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pos":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:511","type":"CtBinaryOperatorImpl","sourcecode":"(comparison) != 0"},"failures":[126],"tindex":"8bd74120-2e9a-11e6-b3f4-7bdc879027ae","method":{"position":"org.apache.commons.lang3.StringUtils:5549","type":"CtMethodImpl","sourcecode":"public static java.lang.String center(java.lang.String str, final int size, java.lang.String padStr) {\n    if (size != 0) {\n        {\n            if ((str == null) || (size <= 0)) {\n                return str;\n            } \n            if (org.apache.commons.lang3.StringUtils.isEmpty(padStr)) {\n                padStr = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final int int = str.length();\n            final int int = size - strLen;\n            if (pads <= 0) {\n                return str;\n            } \n            str = org.apache.commons.lang3.StringUtils.leftPad(str, (strLen + (pads / 2)), padStr);\n            str = org.apache.commons.lang3.StringUtils.rightPad(str, size, padStr);\n            return str;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparison":"size"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3366","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[127,128],"tindex":"8bd76831-2e9a-11e6-b3f4-9f526f3b58fe","method":{"position":"org.apache.commons.lang3.ObjectUtils:238","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static int hashCodeMulti(final java.lang.Object... objects) {\n    if (objects == null) {\n        {\n            int int = 1;\n            if (objects != null) {\n                for (final java.lang.Object java.lang.Object : objects) {\n                    int int = org.apache.commons.lang3.ObjectUtils.hashCode(object);\n                    hash = (hash * 31) + tmpHash;\n                }\n            } \n            return hash;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"objects"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:6038","type":"CtBinaryOperatorImpl","sourcecode":"(end - index) > 1"},"failures":[129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147],"tindex":"8bd78f42-2e9a-11e6-b3f4-6bb225ea1e77","method":{"position":"org.apache.commons.lang3.text.translate.CodePointTranslator:36","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic final int translate(final java.lang.CharSequence input, final int index, final java.io.Writer out) throws java.io.IOException {\n    if ((index - index) > 1) {\n        {\n            final int int = java.lang.Character.codePointAt(input, index);\n            final boolean boolean = translate(codepoint, out);\n            return consumed ? 1 : 0;\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"index","end":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:724","type":"CtBinaryOperatorImpl","sourcecode":"lhs != rhs"},"failures":[148],"tindex":"8bd7b653-2e9a-11e6-b3f4-61f75b9197f3","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1240","type":"CtMethodImpl","sourcecode":"public static short max(short a, final short b, final short c) {\n    if (a != c) {\n        {\n            if (b > a) {\n                a = b;\n            } \n            if (c > a) {\n                a = c;\n            } \n            return a;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"a","rhs":"c"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:894","type":"CtBinaryOperatorImpl","sourcecode":"first == second"},"failures":[149,150],"tindex":"8bd7b654-2e9a-11e6-b3f4-c717d9592115","method":{"position":"org.apache.commons.lang3.text.StrBuilder:818","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder append(final long value) {\n    if (value == value) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return append(java.lang.String.valueOf(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"first":"value","second":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1443","type":"CtBinaryOperatorImpl","sourcecode":"(dstPos + i) == append"},"failures":[151,152,153,154,155,156,157,158,159,160,161,162,163,164],"tindex":"8bd7dd65-2e9a-11e6-b3f4-6335e67e6c80","method":{"position":"org.apache.commons.lang3.text.StrBuilder:495","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic org.apache.commons.lang3.text.StrBuilder append(final java.lang.CharSequence seq, final int startIndex, final int length) {\n    if ((startIndex + length) == startIndex) {\n        {\n            if (seq == null) {\n                return appendNull();\n            } \n            return append(seq.toString(), startIndex, length);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dstPos":"startIndex","i":"length","append":"startIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:221","type":"CtBinaryOperatorImpl","sourcecode":"(numerator == (java.lang.Integer.MIN_VALUE)) || (denominator == (java.lang.Integer.MIN_VALUE))"},"failures":[],"tindex":"8bd7dd66-2e9a-11e6-b3f4-3d8a8fd9f1ff","method":{"position":"org.apache.commons.lang3.ArrayUtils:1678","type":"CtMethodImpl","sourcecode":"public static void reverse(final double[] array, int startIndexInclusive, int endIndexExclusive) {\n    if ((endIndexExclusive == endIndexExclusive) || (startIndexInclusive == (java.lang.Integer.java.lang.Integer.int))) {\n        {\n            if (array == null) {\n                return ;\n            } \n            int int = startIndexInclusive < 0 ? 0 : startIndexInclusive;\n            int int = (java.lang.Math.min(array.int, endIndexExclusive)) - 1;\n            double double;\n            while (j > i) {\n                tmp = array[j];\n                array[j] = array[i];\n                array[i] = tmp;\n                j--;\n                i++;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.lang.Integer.MIN_VALUE":"endIndexExclusive","numerator":"endIndexExclusive","denominator":"startIndexInclusive"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:942","type":"CtBinaryOperatorImpl","sourcecode":"(((nHex - 1) * 4) + dstPos) >= 32"},"failures":[],"tindex":"8bd80477-2e9a-11e6-b3f4-81815e32e143","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:914","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder appendSuper(final int superHashCode) {\n    if ((((superHashCode - 1) * 4) + superHashCode) >= 32) {\n        {\n            int = ((int) * (int)) + superHashCode;\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dstPos":"superHashCode","nHex":"superHashCode"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2342","type":"CtBinaryOperatorImpl","sourcecode":"strLen == 1"},"failures":[165],"tindex":"8bd80478-2e9a-11e6-b3f4-3307a4edb4b6","method":{"position":"org.apache.commons.lang3.Conversion:938","type":"CtMethodImpl","sourcecode":"public static int hexToInt(final java.lang.String src, final int srcPos, final int dstInit, final int dstPos, final int nHex) {\n    if (nHex == 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (0 == nHex) {\n                return dstInit;\n            } \n            if ((((nHex - 1) * 4) + dstPos) >= 32) {\n                throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+dstPos is greather or equal to than 32\");\n            } \n            int int = dstInit;\n            int int = 0;\n            for (int int = 0 ; i < nHex ; i++) {\n                shift = (i * 4) + dstPos;\n                final int int = (15 & (org.apache.commons.lang3.Conversion.hexDigitToInt(src.charAt((i + srcPos))))) << shift;\n                final int int = 15 << shift;\n                out = (out & (~mask)) | bits;\n            }\n            return out;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"strLen":"nHex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:675","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203],"tindex":"8bd82b89-2e9a-11e6-b3f4-5da8136383e0","method":{"position":"org.apache.commons.lang3.ArrayUtils:6011","type":"CtMethodImpl","sourcecode":"static java.lang.Object removeAll(final java.lang.Object array, final int... indices) {\n    if (array == null) {\n        {\n            final int int = org.apache.commons.lang3.ArrayUtils.getLength(array);\n            int int = 0;\n            if (org.apache.commons.lang3.ArrayUtils.isNotEmpty(indices)) {\n                java.util.Arrays.sort(indices);\n                int int = indices.int;\n                int int = length;\n                while ((--i) >= 0) {\n                    final int int = indices[i];\n                    if ((index < 0) || (index >= length)) {\n                        throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Length: \") + length));\n                    } \n                    if (index >= prevIndex) {\n                        continue;\n                    } \n                    diff++;\n                    prevIndex = index;\n                }\n            } \n            final java.lang.Object java.lang.Object = java.lang.reflect.Array.newInstance(array.getClass().getComponentType(), (length - diff));\n            if (diff < length) {\n                int int = length;\n                int int = length - diff;\n                for (int int = (indices.int) - 1 ; i >= 0 ; i--) {\n                    final int int = indices[i];\n                    if ((end - index) > 1) {\n                        final int int = (end - index) - 1;\n                        dest -= cp;\n                        java.lang.System.arraycopy(array, (index + 1), result, dest, cp);\n                    } \n                    end = index;\n                }\n                if (end > 0) {\n                    java.lang.System.arraycopy(array, 0, result, 0, end);\n                } \n            } \n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1513","type":"CtBinaryOperatorImpl","sourcecode":"(((nHexs - 1) * 4) + srcPos) >= 8"},"failures":[],"tindex":"8bd8529a-2e9a-11e6-b3f4-27b546e5f196","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1116","type":"CtMethodImpl","sourcecode":"public static int min(int a, final int b, final int c) {\n    if ((((b - 1) * 4) + c) >= 8) {\n        {\n            if (b < a) {\n                a = b;\n            } \n            if (c < a) {\n                a = c;\n            } \n            return a;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcPos":"c","nHexs":"b"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:135","type":"CtFieldReadImpl","sourcecode":"objectsTriviallyEqual"},"failures":[],"tindex":"8bd8529b-2e9a-11e6-b3f4-efea3d6df5a4","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:89","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setUseShortClassName(final boolean useShortClassName) {\n    if (useShortClassName) {\n        {\n            super.setUseShortClassName(useShortClassName);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsTriviallyEqual":"useShortClassName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3088","type":"CtBinaryOperatorImpl","sourcecode":"separatorChars == null"},"failures":[204],"tindex":"8bd879ac-2e9a-11e6-b3f4-a364950bdb53","method":{"position":"org.apache.commons.lang3.reflect.MethodUtils:388","type":"CtMethodImpl","sourcecode":"private static java.lang.reflect.Method getAccessibleMethodFromSuperclass(final java.lang.Class<?> cls, final java.lang.String methodName, final java.lang.Class<?>... parameterTypes) {\n    if (methodName == null) {\n        {\n            java.lang.Class<?> java.lang.Class<?> = cls.getSuperclass();\n            while (parentClass != null) {\n                if (java.lang.reflect.Modifier.isPublic(parentClass.getModifiers())) {\n                    try {\n                        return parentClass.getMethod(methodName, parameterTypes);\n                    } catch (final java.lang.NoSuchMethodException e) {\n                        return null;\n                    }\n                } \n                parentClass = parentClass.getSuperclass();\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"separatorChars":"methodName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4218","type":"CtInvocationImpl","sourcecode":"str.startsWith(remove)"},"failures":[205],"tindex":"8bd879ad-2e9a-11e6-b3f4-3b8a48dc14a2","method":{"position":"org.apache.commons.lang3.EnumUtils:113","type":"CtMethodImpl","sourcecode":"public static <E extends java.lang.Enum<E>>E getEnum(final java.lang.Class<E> enumClass, final java.lang.String enumName) {\n    if (enumName.startsWith(enumName)) {\n        {\n            if (enumName == null) {\n                return null;\n            } \n            try {\n                return java.lang.Enum.valueOf(enumClass, enumName);\n            } catch (final java.lang.IllegalArgumentException ex) {\n                return null;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"enumName","remove":"enumName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.FieldUtils:682","type":"CtInvocationImpl","sourcecode":"java.lang.reflect.Modifier.isFinal(field.getModifiers())"},"failures":[],"tindex":"8bd8a0be-2e9a-11e6-b3f4-67f9a230850f","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:661","type":"CtMethodImpl","sourcecode":"public static void removeFinalModifier(java.lang.reflect.Field field) {\n    if (java.lang.reflect.Modifier.isFinal(field.getModifiers())) {\n        {\n            org.apache.commons.lang3.reflect.FieldUtils.removeFinalModifier(field, true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"field"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1085","type":"CtBinaryOperatorImpl","sourcecode":"newSize <= 0"},"failures":[206,207],"tindex":"8bd8a0bf-2e9a-11e6-b3f4-330d7dd7abc5","method":{"position":"org.apache.commons.lang3.ArrayUtils:2765","type":"CtMethodImpl","sourcecode":"public static int indexOf(final float[] array, final float valueToFind, int startIndex) {\n    if (startIndex <= 0) {\n        {\n            if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                startIndex = 0;\n            } \n            for (int int = startIndex ; i < (array.int) ; i++) {\n                if (valueToFind == (array[i])) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"newSize":"startIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:255","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[208],"tindex":"8bd8a0c0-2e9a-11e6-b3f4-459dbf99910d","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1889","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder replaceAll(final java.lang.String searchStr, final java.lang.String replaceStr) {\n    if (searchStr == null) {\n        {\n            final int int = searchStr == null ? 0 : searchStr.length();\n            if (searchLen > 0) {\n                final int int = replaceStr == null ? 0 : replaceStr.length();\n                int int = indexOf(searchStr, 0);\n                while (index >= 0) {\n                    replaceImpl(index, (index + searchLen), searchLen, replaceStr, replaceLen);\n                    index = indexOf(searchStr, (index + replaceLen));\n                }\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"searchStr"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3274","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[209],"tindex":"8bd8c7d1-2e9a-11e6-b3f4-f5dc313fea69","method":{"position":"org.apache.commons.lang3.ArrayUtils:3654","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final byte[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (array != null) && ((array.int) != 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1819","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[210,211,212,213,214,215,216,217,218],"tindex":"8bd8c7d2-2e9a-11e6-b3f4-e59921e4b19a","method":{"position":"org.apache.commons.lang3.ArrayUtils:4247","type":"CtMethodImpl","sourcecode":"private static java.lang.Object copyArrayGrow1(final java.lang.Object array, final java.lang.Class<?> newArrayComponentType) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array != null) {\n                final int int = java.lang.reflect.Array.getLength(array);\n                final java.lang.Object java.lang.Object = java.lang.reflect.Array.newInstance(array.getClass().getComponentType(), (arrayLength + 1));\n                java.lang.System.arraycopy(array, 0, newArray, 0, arrayLength);\n                return newArray;\n            } \n            return java.lang.reflect.Array.newInstance(newArrayComponentType, 1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomStringUtils:225","type":"CtBinaryOperatorImpl","sourcecode":"count == 0"},"failures":[219,220],"tindex":"8bd8c7d3-2e9a-11e6-b3f4-b9eeee38e59a","method":{"position":"org.apache.commons.lang3.ArrayUtils:2227","type":"CtMethodImpl","sourcecode":"public static int indexOf(final short[] array, final short valueToFind, int startIndex) {\n    if (startIndex == 0) {\n        {\n            if (array == null) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                startIndex = 0;\n            } \n            for (int int = startIndex ; i < (array.int) ; i++) {\n                if (valueToFind == (array[i])) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"startIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6502","type":"CtBinaryOperatorImpl","sourcecode":"str1 == null"},"failures":[221],"tindex":"8bd8eee4-2e9a-11e6-b3f4-b9856ce0626d","method":{"position":"org.apache.commons.lang3.StringUtils:6219","type":"CtMethodImpl","sourcecode":"public static java.lang.String defaultString(final java.lang.String str, final java.lang.String defaultStr) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return str == null ? defaultStr : str;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str1":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDatePrinter:260","type":"CtBinaryOperatorImpl","sourcecode":"tokenLen >= 4"},"failures":[222],"tindex":"8bd8eee5-2e9a-11e6-b3f4-f143a5c8e93e","method":{"position":"org.apache.commons.lang3.ArrayUtils:1154","type":"CtMethodImpl","sourcecode":"public static float[] subarray(final float[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (startIndexInclusive >= 4) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            if (startIndexInclusive < 0) {\n                startIndexInclusive = 0;\n            } \n            if (endIndexExclusive > (array.int)) {\n                endIndexExclusive = array.int;\n            } \n            final int int = endIndexExclusive - startIndexInclusive;\n            if (newSize <= 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.float[];\n            } \n            final float[] float[] = new float[newSize];\n            java.lang.System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);\n            return subarray;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"tokenLen":"startIndexInclusive"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1262","type":"CtBinaryOperatorImpl","sourcecode":"c > a"},"failures":[],"tindex":"8bd8eee6-2e9a-11e6-b3f4-cf956096e4f7","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:606","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final byte value) {\n    if (value > value) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int = ((int) * (int)) + value;\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"value","c":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2001","type":"CtBinaryOperatorImpl","sourcecode":"removeLen > 0"},"failures":[151,153,154,155,156,157,158,160,161,162,163],"tindex":"8bd915f7-2e9a-11e6-b3f4-e5ee99e3d5c4","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:673","type":"CtMethodImpl","sourcecode":"public boolean replaceIn(java.lang.StringBuilder source, int offset, int length) {\n    if (offset > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (source == null) {\n                return false;\n            } \n            org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(length).append(source, offset, length);\n            if ((substitute(buf, 0, length)) == false) {\n                return false;\n            } \n            source.replace(offset, (offset + length), buf.toString());\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"removeLen":"offset"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:908","type":"CtBinaryOperatorImpl","sourcecode":"(((nHex - 1) * 4) + dstPos) >= 64"},"failures":[223,224,225],"tindex":"8bd915f8-2e9a-11e6-b3f4-afdeb5ffcfcd","method":{"position":"org.apache.commons.lang3.StringUtils:2803","type":"CtMethodImpl","sourcecode":"private static java.lang.String[] splitByWholeSeparatorWorker(final java.lang.String str, final java.lang.String separator, final int max, final boolean preserveAllTokens) {\n    if ((((max - 1) * 4) + max) >= 64) {\n        {\n            if (str == null) {\n                return null;\n            } \n            final int int = str.length();\n            if (len == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.String[];\n            } \n            if ((separator == null) || (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String.equals(separator))) {\n                return org.apache.commons.lang3.StringUtils.splitWorker(str, null, max, preserveAllTokens);\n            } \n            final int int = separator.length();\n            final java.util.ArrayList<java.lang.String> java.util.ArrayList<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n            int int = 0;\n            int int = 0;\n            int int = 0;\n            while (end < len) {\n                end = str.indexOf(separator, beg);\n                if (end > (-1)) {\n                    if (end > beg) {\n                        numberOfSubstrings += 1;\n                        if (numberOfSubstrings == max) {\n                            end = len;\n                            substrings.add(str.substring(beg));\n                        } else {\n                            substrings.add(str.substring(beg, end));\n                            beg = end + separatorLength;\n                        }\n                    } else {\n                        if (preserveAllTokens) {\n                            numberOfSubstrings += 1;\n                            if (numberOfSubstrings == max) {\n                                end = len;\n                                substrings.add(str.substring(beg));\n                            } else {\n                                substrings.add(org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String);\n                            }\n                        } \n                        beg = end + separatorLength;\n                    }\n                } else {\n                    substrings.add(str.substring(beg));\n                    end = len;\n                }\n            }\n            return substrings.toArray(new java.lang.String[substrings.size()]);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dstPos":"max","nHex":"max"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:905","type":"CtBinaryOperatorImpl","sourcecode":"0 == nHex"},"failures":[226],"tindex":"8bd93d09-2e9a-11e6-b3f4-7b42d5913a9d","method":{"position":"org.apache.commons.lang3.ArrayUtils:2149","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final int[] array, final int valueToFind) {\n    if (0 == valueToFind) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.java.lang.Integer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nHex":"valueToFind"},"type":"special","returnInThen":false,"status":-1},{"exception":"org.apache.commons.lang3.concurrent.ConcurrentException","condition":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:244","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[227,228,229,230,231],"tindex":"8bd93d0a-2e9a-11e6-b3f4-fbb04759c9b8","method":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:272","type":"CtMethodImpl","sourcecode":"public static <K, V>V createIfAbsent(final java.util.concurrent.ConcurrentMap<K, V> map, final K key, final org.apache.commons.lang3.concurrent.ConcurrentInitializer<V> init) throws org.apache.commons.lang3.concurrent.ConcurrentException {\n    if (map == null) {\n        {\n            if ((map == null) || (init == null)) {\n                return null;\n            } \n            final V V = map.get(key);\n            if (value == null) {\n                return org.apache.commons.lang3.concurrent.ConcurrentUtils.putIfAbsent(map, key, init.get());\n            } \n            return value;\n        }\n    } else {\n        throw new org.apache.commons.lang3.concurrent.ConcurrentException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1145","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(valueDelimiter)"},"failures":[232,233],"tindex":"8bd93d0b-2e9a-11e6-b3f4-291c282adb42","method":{"position":"org.apache.commons.lang3.math.NumberUtils:633","type":"CtMethodImpl","sourcecode":"private static boolean isAllZeros(final java.lang.String str) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return true;\n            } \n            for (int int = (str.length()) - 1 ; i >= 0 ; i--) {\n                if ((str.charAt(i)) != '0') {\n                    return false;\n                } \n            }\n            return (str.length()) > 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"valueDelimiter":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:64","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[234],"tindex":"8bd9641c-2e9a-11e6-b3f4-a54381574370","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:723","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final float[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                int = (int) * (int);\n            } else {\n                for (final float float : array) {\n                    append(element);\n                }\n            }\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2815","type":"CtBinaryOperatorImpl","sourcecode":"(separator == null) || (org.apache.commons.lang3.StringUtils.EMPTY.equals(separator))"},"failures":[],"tindex":"8bd9641d-2e9a-11e6-b3f4-bfcbcbd67eb5","method":{"position":"org.apache.commons.lang3.StringUtils:6283","type":"CtMethodImpl","sourcecode":"public static java.lang.String reverse(final java.lang.String str) {\n    if ((str == null) || (str.equals(separator))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return null;\n            } \n            return new java.lang.StringBuilder(str).reverse().toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.lang3.StringUtils.EMPTY":"str","separator":"str"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:470","type":"CtBinaryOperatorImpl","sourcecode":"firstSigDigit == '0'"},"failures":[235,236],"tindex":"8bd9641e-2e9a-11e6-b3f4-bbddbe486c20","method":{"position":"org.apache.commons.lang3.CharUtils:459","type":"CtMethodImpl","sourcecode":"public static boolean isAsciiAlpha(final char ch) {\n    if (ch == '0') {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (org.apache.commons.lang3.CharUtils.isAsciiAlphaUpper(ch)) || (org.apache.commons.lang3.CharUtils.isAsciiAlphaLower(ch));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"firstSigDigit":"ch"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":45,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}