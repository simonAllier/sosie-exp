{"failureDictionary":{"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddCombinations":57,"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":22,"org.apache.commons.lang3.StringUtilsTest.testIsNoneEmpty":66,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadDeclaredNamedField":7,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":19,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCodeExcludeFields":50,"org.apache.commons.lang3.BooleanUtilsTest.test_toStringTrueFalse_Boolean":70,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedFieldForceAccess":13,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedField":9,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":27,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":23,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testIntegerWithTransients":51,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":21,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteDeclaredNamedField":14,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":37,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteDeclaredNamedFieldForceAccess":10,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":35,"org.apache.commons.lang3.ArrayUtilsTest.testIsEmptyObject":69,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedFieldForceAccess":16,"org.apache.commons.lang3.RandomStringUtilsTest.testLANG807":1,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":34,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCode":49,"org.apache.commons.lang3.builder.DiffBuilderTest.testSimilarObjectIgnoresAppends":31,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareTransients":46,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddDash":55,"org.apache.commons.lang3.StringUtilsTest.testIsAnyEmpty":64,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":32,"org.apache.commons.lang3.StringUtilsTest.testIsAnyBlank":63,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEquals":18,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":30,"org.apache.commons.lang3.time.DateUtilsTest.testIsSameLocalTime_Cal":71,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionHierarchyEquals":42,"org.apache.commons.lang3.StringUtilsTest.testIsNoneBlank":65,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadField":12,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAlphabetic":4,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":38,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":20,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":36,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCyclicalObjectReferences":40,"org.apache.commons.lang3.ArrayUtilsTest.testContains":61,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":33,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":24,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAlphaNumeric":3,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationISO":73,"org.apache.commons.lang3.RandomStringUtilsTest.testExceptions":0,"org.apache.commons.lang3.CharSetTest.testConstructor_String_combo":56,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEqualsExcludeFields":41,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixtureWithTransients":53,"org.apache.commons.lang3.text.WordUtilsTest.testUncapitalize_String":74,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":25,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":39,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAscii":2,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testStartsWithAny":68,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadFieldForceAccess":15,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testInteger":54,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedField":11,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":29,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionObjectCycle":47,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompare":44,"org.apache.commons.lang3.ArrayUtilsTest.testIsNotEmptyPrimitives":62,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixture":52,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddNegate":59,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionCompare":45,"org.apache.commons.lang3.CharSetTest.testConstructor_String_comboNegated":58,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomNumeric":5,"org.apache.commons.lang3.StringUtilsTest.testSplit_StringChar":72,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareExcludeFields":43,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementsObjectArray":67,"org.apache.commons.lang3.CharSetTest.testStatics":60,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils":6,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadDeclaredNamedFieldForceAccess":8,"org.apache.commons.lang3.CharUtilsTest.testToIntValue_Character_int":17,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":26,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHierarchyHashCode":48,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":28},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:119","type":"CtBinaryOperatorImpl","sourcecode":"codepoint > 255"},"failures":[0,1,2,3,4,5,6],"tindex":"554b347f-2e72-11e6-a30e-e7ab09a762ea","method":{"position":"org.apache.commons.lang3.RandomStringUtils:162","type":"CtMethodImpl","sourcecode":"public static java.lang.String random(final int count, final int start, final int end, final boolean letters, final boolean numbers) {\n    if (count > 255) {\n        {\n            return org.apache.commons.lang3.RandomStringUtils.random(count, start, end, letters, numbers, null, org.apache.commons.lang3.RandomStringUtils.org.apache.commons.lang3.RandomStringUtils.java.util.Random);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"codepoint":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:309","type":"CtBinaryOperatorImpl","sourcecode":"i > 0"},"failures":[],"tindex":"554c1de0-2e72-11e6-a30e-f12b5bfaa9f3","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:752","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic final void appendTo(final java.lang.StringBuffer buffer, final int value) {\n    if (value > 0) {\n        {\n            if (value < 10) {\n                buffer.append(((char)(value + '0')));\n            } else if (value < 100) {\n                buffer.append(((char)((value / 10) + '0')));\n                buffer.append(((char)((value % 10) + '0')));\n            } else {\n                buffer.append(java.lang.Integer.toString(value));\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5452","type":"CtBinaryOperatorImpl","sourcecode":"count == null"},"failures":[7,8,9,10,11,12,13,14,15,16],"tindex":"554c44f1-2e72-11e6-a30e-af68aeea3217","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:380","type":"CtMethodImpl","sourcecode":"public static java.lang.Object readField(final java.lang.reflect.Field field, final java.lang.Object target, final boolean forceAccess) throws java.lang.IllegalAccessException {\n    if (target == null) {\n        {\n            org.apache.commons.lang3.Validate.isTrue((field != null), \"The field must not be null\");\n            if (forceAccess && (!(field.isAccessible()))) {\n                field.setAccessible(true);\n            } else {\n                org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(field);\n            }\n            return field.get(target);\n        }\n    } else {\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"target"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1440","type":"CtBinaryOperatorImpl","sourcecode":"strLen >= width"},"failures":[17],"tindex":"554c6c02-2e72-11e6-a30e-2d716f0d31f1","method":{"position":"org.apache.commons.lang3.CharUtils:285","type":"CtMethodImpl","sourcecode":"public static int toIntValue(final java.lang.Character ch, final int defaultValue) {\n    if (defaultValue >= defaultValue) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (ch == null) {\n                return defaultValue;\n            } \n            return org.apache.commons.lang3.CharUtils.toIntValue(ch.charValue(), defaultValue);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"strLen":"defaultValue","width":"defaultValue"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:854","type":"CtBinaryOperatorImpl","sourcecode":"lhs == null"},"failures":[18],"tindex":"554d7d73-2e72-11e6-a30e-ede8aefe19b1","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:270","type":"CtMethodImpl","sourcecode":"public static boolean reflectionEquals(final java.lang.Object lhs, final java.lang.Object rhs, final java.lang.String... excludeFields) {\n    if (rhs == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(lhs, rhs, false, null, excludeFields);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"rhs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:688","type":"CtBinaryOperatorImpl","sourcecode":"(comparison) != 0"},"failures":[],"tindex":"554da484-2e72-11e6-a30e-dd17687c8830","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:990","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic final void appendTo(final java.lang.StringBuffer buffer, final int value) {\n    if (value != 0) {\n        {\n            buffer.append(((char)((value / 10) + '0')));\n            buffer.append(((char)((value % 10) + '0')));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparison":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:573","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"554da485-2e72-11e6-a30e-a362992ac06f","method":{"position":"org.apache.commons.lang3.Validate:848","type":"CtMethodImpl","sourcecode":"public static void matchesPattern(final java.lang.CharSequence input, final java.lang.String pattern) {\n    if (input == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((java.util.regex.Pattern.matches(pattern, input)) == false) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.java.lang.String, input, pattern));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"input"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1267","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.Class<?>"},"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,18,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61],"tindex":"554da486-2e72-11e6-a30e-39ecd0cd0a1b","method":{"position":"org.apache.commons.lang3.ArrayUtils:1987","type":"CtMethodImpl","sourcecode":"public static boolean contains(final java.lang.Object[] array, final java.lang.Object objectToFind) {\n    if (objectToFind instanceof java.lang.Class<?>) {\n        {\n            return (org.apache.commons.lang3.ArrayUtils.indexOf(array, objectToFind)) != (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"objectToFind"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:355","type":"CtBinaryOperatorImpl","sourcecode":"ch < 256"},"failures":[],"tindex":"554dcb97-2e72-11e6-a30e-d1d02676d1c6","method":{"position":"org.apache.commons.lang3.CharUtils:402","type":"CtMethodImpl","sourcecode":"public static boolean isAscii(final char ch) {\n    if (ch < 256) {\n        {\n            return ch < 128;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:677","type":"CtBinaryOperatorImpl","sourcecode":"(lhs == null) || (rhs == null)"},"failures":[62],"tindex":"554dcb98-2e72-11e6-a30e-d72b1a9197b5","method":{"position":"org.apache.commons.lang3.ArrayUtils:3610","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final long[] array) {\n    if ((array == null) || (array == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (array != null) && ((array.int) != 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array","rhs":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:728","type":"CtBinaryOperatorImpl","sourcecode":"classes == null"},"failures":[63,64,65,66,67,68,69],"tindex":"554df2a9-2e72-11e6-a30e-713740e354cb","method":{"position":"org.apache.commons.lang3.ArrayUtils:3498","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final java.lang.Object[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (array == null) || ((array.int) == 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classes":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1272","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.ParameterizedType"},"failures":[],"tindex":"554df2aa-2e72-11e6-a30e-4f0517f43c91","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:237","type":"CtMethodImpl","sourcecode":"public static int reflectionHashCode(final int initialNonZeroOddNumber, final int multiplierNonZeroOddNumber, final java.lang.Object object) {\n    if (object instanceof java.lang.reflect.ParameterizedType) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(initialNonZeroOddNumber, multiplierNonZeroOddNumber, object, false, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:209","type":"CtBinaryOperatorImpl","sourcecode":"spaceToWrapAt >= 0"},"failures":[],"tindex":"554df2ab-2e72-11e6-a30e-7521e477d631","method":{"position":"org.apache.commons.lang3.text.StrBuilder:942","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendln(final java.lang.StringBuffer str, final int startIndex, final int length) {\n    if (length >= 0) {\n        {\n            return append(str, startIndex, length).appendNewLine();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"spaceToWrapAt":"length"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:427","type":"CtBinaryOperatorImpl","sourcecode":"bool == null"},"failures":[70],"tindex":"554df2ac-2e72-11e6-a30e-b7e7fe344f7a","method":{"position":"org.apache.commons.lang3.BooleanUtils:758","type":"CtMethodImpl","sourcecode":"public static java.lang.String toStringTrueFalse(final java.lang.Boolean bool) {\n    if (bool == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.BooleanUtils.toString(bool, \"true\", \"false\", null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bool":"bool"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:910","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[71],"tindex":"554e8eed-2e72-11e6-a30e-afe95cce9c28","method":{"position":"org.apache.commons.lang3.time.DateUtils:238","type":"CtMethodImpl","sourcecode":"public static boolean isSameLocalTime(final java.util.Calendar cal1, final java.util.Calendar cal2) {\n    if (cal2 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((cal1 == null) || (cal2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            return ((((((((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.getClass()) == (cal2.getClass()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"cal2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharRange:242","type":"CtBinaryOperatorImpl","sourcecode":"(start) != (end)"},"failures":[],"tindex":"554eb5fe-2e72-11e6-a30e-b73e9609be25","method":{"position":"org.apache.commons.lang3.CharUtils:516","type":"CtMethodImpl","sourcecode":"public static boolean isAsciiNumeric(final char ch) {\n    if (ch != ch) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (ch >= '0') && (ch <= '9');\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"ch","end":"ch"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:675","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[72],"tindex":"554edd0f-2e72-11e6-a30e-2f772373bb67","method":{"position":"org.apache.commons.lang3.StringUtils:2602","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] split(final java.lang.String str, final char separatorChar) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.splitWorker(str, separatorChar, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:274","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"554edd10-2e72-11e6-a30e-e1e21eff5869","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1317","type":"CtMethodImpl","sourcecode":"protected void appendSummary(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final double[] array) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendSummarySize(buffer, fieldName, array.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1099","type":"CtBinaryOperatorImpl","sourcecode":"b < a"},"failures":[73],"tindex":"554edd11-2e72-11e6-a30e-454b668d40ab","method":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:96","type":"CtMethodImpl","sourcecode":"public static java.lang.String formatDurationISO(final long durationMillis) {\n    if (durationMillis < durationMillis) {\n        {\n            return org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(durationMillis, org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.String, false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"durationMillis","b":"durationMillis"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:451","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"554edd12-2e72-11e6-a30e-29547dd82c3c","method":{"position":"org.apache.commons.lang3.text.StrBuilder:890","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendln(final java.lang.String format, final java.lang.Object... objs) {\n    if (format == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return append(format, objs).appendNewLine();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"format"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:549","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[74],"tindex":"554f0423-2e72-11e6-a30e-abf0a744ce9f","method":{"position":"org.apache.commons.lang3.text.WordUtils:380","type":"CtMethodImpl","sourcecode":"public static java.lang.String uncapitalize(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.text.WordUtils.uncapitalize(str, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"str"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":21,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}