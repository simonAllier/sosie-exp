{"failureDictionary":{"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":175,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":235,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":169,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":206,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":29,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":297,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":300,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArrayEqualAsObject":264,"org.apache.commons.lang3.time.FastDateParserTest.testLANG_832":320,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":67,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_AD":369,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":383,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":196,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDefaults":343,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":198,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":37,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang708":104,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":230,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":124,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":381,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":26,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":83,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml10":100,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml11":101,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":207,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":238,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiLongArray":397,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfIntWithStartIndex":50,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":161,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":240,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_BC":328,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetFieldIllegalArgumentException3":418,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":3,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetFieldIllegalArgumentException2":417,"org.apache.commons.lang3.ValidateTest.testNotBlankMsgEmptyStringShouldThrow":412,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMixedArray":395,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":165,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_BC":370,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testTimeZoneMatches":294,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeEcmaScript":107,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJavaWithSlash":99,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testTimeZoneMatches":374,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":146,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testBooleanArray":453,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":168,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":296,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_AD":327,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":79,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":303,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":68,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":61,"org.apache.commons.lang3.StringEscapeUtilsTest.testStandaloneAmphersand":94,"org.apache.commons.lang3.reflect.InheritanceUtilsTest.testDistanceNullParentNullChild":122,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":274,"org.apache.commons.lang3.time.FastDateParserTest.testParseNumerics":316,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedStaticFieldForceAccess":424,"org.apache.commons.lang3.time.FastDateParserTest.testPatternMatches":333,"org.apache.commons.lang3.BooleanUtilsTest.testOr_object_validInput_3items":438,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":220,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_object_nullElementInput":433,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":298,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringString":451,"org.apache.commons.lang3.math.NumberUtilsTest.testMaximumByte":450,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":380,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeUnknownEntity":116,"org.apache.commons.lang3.time.FastDateParserTest.testLocaleMatches":309,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":7,"org.apache.commons.lang3.StringUtilsTest.testUnescapeSurrogatePairs":90,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testToStringContainsName":291,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":299,"org.apache.commons.lang3.concurrent.ConstantInitializerTest.testEqualsWithOtherObjects":281,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testInvalidFragmentWithDate":464,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementIntArray":0,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":202,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":431,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":58,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":307,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":8,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":277,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":234,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":38,"org.apache.commons.lang3.StringUtilsTest.testIsAnyBlank":400,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":385,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_AD":325,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":334,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiIntArray":396,"org.apache.commons.lang3.RandomUtilsTest.testNextIntMinimalRange":21,"org.apache.commons.lang3.ArrayUtilsTest.testContains":442,"org.apache.commons.lang3.time.FastDateParserTest.testDayOf":310,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":386,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseNumerics":358,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":57,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":138,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang538":360,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":154,"org.apache.commons.lang3.concurrent.ConstantInitializerTest.testEqualsTrue":280,"org.apache.commons.lang3.RandomUtilsTest.testNextFloatNegative":445,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":247,"org.apache.commons.lang3.time.DateFormatUtilsTest.testConstructor":305,"org.apache.commons.lang3.builder.DiffBuilderTest.testStylePassedToDiffResult":35,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinuteFragmentInLargerUnitWithDate":460,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":176,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":216,"org.apache.commons.lang3.concurrent.ConstantInitializerTest.testEqualsFalse":279,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":225,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":141,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang720":105,"org.apache.commons.lang3.BooleanUtilsTest.testXor_primitive_validInput_2items":187,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":273,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":377,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang303":359,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testBooleanMultiArray":454,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":195,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testPatternMatches":295,"org.apache.commons.lang3.StringUtilsTest.testDefaultIfBlank_StringString":401,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfMonthWithDate":461,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":192,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHexCharsHtml":111,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeXmlSupplementaryCharacters":112,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":32,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":231,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":132,"org.apache.commons.lang3.ArrayUtilsTest.testSameLengthLong":24,"org.apache.commons.lang3.time.DateUtilsTest.testIsSameInstant_Date":75,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfYearWithDate":466,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":131,"org.apache.commons.lang3.StringUtilsTest.testChop":429,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":324,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":233,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":211,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_BC":368,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":137,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang303":288,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testArrayList":251,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":152,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testBlank":212,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLocaleMatches":285,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":151,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":302,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":201,"org.apache.commons.lang3.text.StrBuilderTest.testAsReader":181,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":140,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_AD":367,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":289,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsOnly_CharArray":469,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":160,"org.apache.commons.lang3.reflect.FieldUtilsTest.testRemoveFinalModifierWithoutAccess":46,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvString":108,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.test_Equality_Hash":363,"org.apache.commons.lang3.math.NumberUtilsTest.testMaximumLong":18,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":275,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_Object":189,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":127,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":222,"org.apache.commons.lang3.BooleanUtilsTest.testXor_object_nullElementInput":436,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":246,"org.apache.commons.lang3.StringUtilsTest.testIsNotBlank":403,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHtml4":95,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":244,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":6,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteCharAt":432,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiByteArray":392,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":4,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":36,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_object_validInput_2items":434,"org.apache.commons.lang3.BooleanUtilsTest.testXor_object_validInput_2items":185,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testBooleanArrayAsObject":455,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":208,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":166,"org.apache.commons.lang3.math.NumberUtilsTest.testMinimumFloat":52,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateInstance":339,"org.apache.commons.lang3.StringUtilsIsTest.testIsAlphanumeric":48,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":376,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testPatternMatches":375,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testIsBlank":411,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsOnly_String":468,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":97,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":163,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":174,"org.apache.commons.lang3.BooleanUtilsTest.testOr_object_nullElementInput":439,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":129,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":34,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testIsNotBlank":410,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":106,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":245,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_AD":364,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":270,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvWriter":109,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testLinkedList":253,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":41,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedFieldForceAccess":427,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_bits":84,"org.apache.commons.lang3.time.FastDateParserTest.testAmPm":312,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":81,"org.apache.commons.lang3.time.FastDateFormatTest.testLang954":337,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiDoubleArray":398,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_BC":365,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":92,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testMilleniumBug":284,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_BC":357,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testAbove":87,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":44,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":156,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlHighUnicode":110,"org.apache.commons.lang3.ValidateTest.testNotBlankEmptyStringShouldThrow":413,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":30,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":203,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":200,"org.apache.commons.lang3.reflect.InheritanceUtilsTest.testDistanceNullParent":123,"org.apache.commons.lang3.time.FastDateParserTest.testEquals":329,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":170,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":382,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang645":290,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedField":421,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":59,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":77,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance":335,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":178,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testSpecialCharacters":348,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":145,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParses":372,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateBigDecimal":408,"org.apache.commons.lang3.StringUtilsTest.testIsBlank":407,"org.apache.commons.lang3.time.DateUtilsTest.testTruncate":268,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":249,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone_Locale":338,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils":16,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testDayOf":352,"org.apache.commons.lang3.RandomUtilsTest.testNextInt":20,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvString":113,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testMilleniumBug":350,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":133,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":126,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":85,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testQuotes":373,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":180,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":9,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":217,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":173,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":172,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone":345,"org.apache.commons.lang3.time.DateUtilsTest.testIsSameDay_Cal":183,"org.apache.commons.lang3.reflect.FieldUtilsTest.testRemoveFinalModifierAccessNotNeeded":47,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":213,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":379,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":241,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":224,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String":341,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfDayWithDate":463,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testSimpleDate":282,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDifferingStyles":344,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":1,"org.apache.commons.lang3.time.FastDateParserTest.testToStringContainsName":319,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHiragana":117,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":82,"org.apache.commons.lang3.RandomUtilsTest.testNextFloatMinimalRange":447,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiCharArray":390,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":210,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiShortArray":399,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlVersions":115,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiBooleanArray":393,"org.apache.commons.lang3.StringUtilsTest.testIsNoneBlank":405,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":62,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":287,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDefaults":23,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":388,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":177,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":214,"org.apache.commons.lang3.time.FastDateParserTest.testSpecialCharacters":306,"org.apache.commons.lang3.time.FastDateParserTest.testLowYearPadding":313,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_AD":356,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":63,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":155,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":384,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOf_String":19,"org.apache.commons.lang3.exception.ExceptionUtilsTest.test_getRootCauseMessage_Throwable":457,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":76,"org.apache.commons.lang3.time.FastDateFormatTest.testDateDefaults":342,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":80,"org.apache.commons.lang3.time.FastDateParserTest.testMilleniumBug":308,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":219,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDateDefaults":340,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISOMethod":86,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":272,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairsLang858":91,"org.apache.commons.lang3.builder.CompareToBuilderTest.testObjectArray":389,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":125,"org.apache.commons.lang3.StringUtilsTest.testSplit_StringString_StringStringInt":473,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":236,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":293,"org.apache.commons.lang3.math.NumberUtilsTest.testMinimumShort":474,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiFloatArray":394,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":366,"org.apache.commons.lang3.RandomUtilsTest.testNextFloat":448,"org.apache.commons.lang3.time.FastDateParserTest.testParseZone":311,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":65,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":243,"org.apache.commons.lang3.StringUtilsTest.testDefaultIfBlank_StringBuffers":402,"org.apache.commons.lang3.StringUtilsTest.testSplitPreserveAllTokens_StringString_StringStringInt":470,"org.apache.commons.lang3.StringUtilsTest.testDefaultIfBlank_CharBuffers":406,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":135,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_primitive_nullInput":17,"org.apache.commons.lang3.BooleanUtilsTest.testOr_object_validInput_2items":437,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":33,"org.apache.commons.lang3.BooleanUtilsTest.testXor_primitive_emptyInput":184,"org.apache.commons.lang3.time.FastDateParserTest.testLang538":318,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":130,"org.apache.commons.lang3.time.FastDateParserTest.testLang303":317,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtml":96,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_AD":314,"org.apache.commons.lang3.LocaleUtilsTest.testThreeCharsLocale":428,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":237,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":71,"org.apache.commons.lang3.mutable.MutableShortTest.testSubtractValuePrimitive":53,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":171,"org.apache.commons.lang3.text.StrBuilderTest.testGetChars":443,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":276,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":136,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":158,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":143,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":199,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testBoolean":452,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBetween":121,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":42,"org.apache.commons.lang3.BooleanUtilsTest.testXor_primitive_validInput_3items":188,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":304,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":209,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_BC":315,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":120,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetFieldForceAccessIllegalArgumentException3":423,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetFieldForceAccessIllegalArgumentException2":422,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":31,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":45,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCharArray":444,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":271,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":278,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":148,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":193,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseZone":353,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":157,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":66,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvWriter":114,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":10,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairs":89,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayByte":49,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":2,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testToStringContainsName":361,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":197,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testBlank":228,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomNumeric":74,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayToObjectArray":54,"org.apache.commons.lang3.BooleanUtilsTest.testXor_object_validInput_3items":186,"org.apache.commons.lang3.StringEscapeUtilsTest.testConstructor":119,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":239,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":149,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_object_validInput_3items":435,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":164,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":134,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":194,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":159,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang313":103,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":60,"org.apache.commons.lang3.StringUtilsTest.testRemoveStart":475,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":250,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedStaticField":415,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":27,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":13,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":43,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":221,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":167,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":139,"org.apache.commons.lang3.time.FastDateParserTest.testTimeZoneMatches":332,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_BC":323,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":40,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":204,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":349,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlSupplementaryCharacters":102,"org.apache.commons.lang3.time.DateUtilsTest.testIsSameDay_Date":182,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":191,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":232,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":409,"org.apache.commons.lang3.StringUtilsTest.testSplit_String":471,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":39,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_Locale":346,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testCopyOnWriteArrayList":252,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":64,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testEquals":371,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectAtIndex":73,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":215,"org.apache.commons.lang3.ArrayUtilsTest.testToString":262,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateTimeInstance":347,"org.apache.commons.lang3.RandomUtilsTest.testExtremeRangeFloat":449,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":430,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":128,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":301,"org.apache.commons.lang3.text.StrBuilderTest.testEndsWith":22,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_BC":326,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":229,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testAbove":266,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testAmPm":354,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfInt":51,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetDeclaredFieldAccessIllegalArgumentException2":425,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_boolean":440,"org.apache.commons.lang3.exception.ExceptionUtilsTest.test_getMessage_Throwable":458,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondFragmentInLargerUnitWithDate":465,"org.apache.commons.lang3.AnnotationUtilsTest.testHashCode":88,"org.apache.commons.lang3.time.DateUtilsTest.testWeekIterator":269,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetDeclaredFieldAccessIllegalArgumentException3":426,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":150,"org.apache.commons.lang3.time.DateUtilsTest.testMonthIterator":267,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_AD":322,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":226,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":93,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":205,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":162,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":69,"org.apache.commons.lang3.text.StrTokenizerTest.test8":261,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":387,"org.apache.commons.lang3.text.StrTokenizerTest.test5":258,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLowYearPadding":355,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLANG_832":362,"org.apache.commons.lang3.text.StrTokenizerTest.test4":257,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadDeclaredNamedField":414,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":70,"org.apache.commons.lang3.text.StrTokenizerTest.test7":260,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":153,"org.apache.commons.lang3.text.StrTokenizerTest.test6":259,"org.apache.commons.lang3.text.StrTokenizerTest.test1":254,"org.apache.commons.lang3.text.StrTokenizerTest.test3":256,"org.apache.commons.lang3.text.StrTokenizerTest.test2":255,"org.apache.commons.lang3.time.FastDateParserTest.test_Equality_Hash":321,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":142,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml":118,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":242,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":218,"org.apache.commons.lang3.StringUtilsTest.testCaseFunctions":441,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":336,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJson":98,"org.apache.commons.lang3.StringUtilsTest.testDefaultIfBlank_StringBuilders":404,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetDeclaredFieldForceAccessIllegalArgumentException3":420,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetDeclaredFieldForceAccessIllegalArgumentException2":419,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":56,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testNullDate":462,"org.apache.commons.lang3.ConversionTest.testIntToHex":265,"org.apache.commons.lang3.time.FastDateParserTest.testQuotes":331,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAlphabetic":15,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testEquals":292,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":223,"org.apache.commons.lang3.ArrayUtilsTest.testHashCode":456,"org.apache.commons.lang3.time.FastDateParserTest.testParses":330,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":55,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfHourWithDate":467,"org.apache.commons.lang3.StringUtilsSubstringTest.testMid_String":14,"org.apache.commons.lang3.RandomUtilsTest.testNextFloatLowerGreaterUpper":446,"org.apache.commons.lang3.builder.CompareToBuilderTest.testRaggedArray":391,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLowYearPadding":286,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfBoolean":263,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":248,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":179,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":147,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":378,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":190,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocaleMatches":351,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":11,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadDeclaredNamedFieldForceAccess":416,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":283,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":144,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondFragmentInLargerUnitWithDate":459,"org.apache.commons.lang3.StringUtilsTest.testSplitPreserveAllTokens_String":472,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":227},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:934","type":"CtBinaryOperatorImpl","sourcecode":"(numerator) == (denominator)"},"failures":[0],"tindex":"39e644a3-2ed6-11e6-960e-776f712fad0d","method":{"position":"org.apache.commons.lang3.ArrayUtils:5031","type":"CtMethodImpl","sourcecode":"public static int[] removeElement(final int[] array, final int element) {\n    if (element == element) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = org.apache.commons.lang3.ArrayUtils.indexOf(array, element);\n            if (index == (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int)) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            return org.apache.commons.lang3.ArrayUtils.remove(array, index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"numerator":"element","denominator":"element"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2128","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13],"tindex":"39e707f4-2ed6-11e6-960e-9d2bc8811685","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:673","type":"CtMethodImpl","sourcecode":"public boolean replaceIn(java.lang.StringBuilder source, int offset, int length) {\n    if (offset < 0) {\n        {\n            if (source == null) {\n                return false;\n            } \n            org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(length).append(source, offset, length);\n            if ((substitute(buf, 0, length)) == false) {\n                return false;\n            } \n            source.replace(offset, (offset + length), buf.toString());\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"offset"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6502","type":"CtBinaryOperatorImpl","sourcecode":"str1 == null"},"failures":[],"tindex":"39e72f05-2ed6-11e6-960e-496f45eda478","method":{"position":"org.apache.commons.lang3.time.DateFormatUtils:302","type":"CtMethodImpl","sourcecode":"public static java.lang.String format(final java.util.Date date, final java.lang.String pattern, final java.util.TimeZone timeZone, final java.util.Locale locale) {\n    if (pattern == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.lang3.time.FastDateFormat org.apache.commons.lang3.time.FastDateFormat = org.apache.commons.lang3.time.FastDateFormat.getInstance(pattern, timeZone, locale);\n            return df.format(date);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str1":"pattern"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:146","type":"CtBinaryOperatorImpl","sourcecode":"(numerator == (java.lang.Integer.MIN_VALUE)) || (denominator == (java.lang.Integer.MIN_VALUE))"},"failures":[14],"tindex":"39e72f06-2ed6-11e6-960e-b1aafb371140","method":{"position":"org.apache.commons.lang3.StringUtils:2244","type":"CtMethodImpl","sourcecode":"public static java.lang.String mid(final java.lang.String str, int pos, final int len) {\n    if ((pos == pos) || (len == (java.lang.Integer.java.lang.Integer.int))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return null;\n            } \n            if ((len < 0) || (pos > (str.length()))) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            if (pos < 0) {\n                pos = 0;\n            } \n            if ((str.length()) <= (pos + len)) {\n                return str.substring(pos);\n            } \n            return str.substring(pos, (pos + len));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.lang.Integer.MIN_VALUE":"pos","numerator":"pos","denominator":"len"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:4561","type":"CtBinaryOperatorImpl","sourcecode":"index != 0"},"failures":[15,16],"tindex":"39e75617-2ed6-11e6-960e-4b00e8d492e4","method":{"position":"org.apache.commons.lang3.RandomStringUtils:96","type":"CtMethodImpl","sourcecode":"public static java.lang.String randomAlphabetic(final int count) {\n    if (count != 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.RandomStringUtils.random(count, true, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"count"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[17],"tindex":"39e77d28-2ed6-11e6-960e-5752de2576e2","method":{"position":"org.apache.commons.lang3.BooleanUtils:904","type":"CtMethodImpl","sourcecode":"public static boolean and(final boolean... array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n            } \n            if ((array.int) == 0) {\n                throw new java.lang.IllegalArgumentException(\"Array is empty\");\n            } \n            for (final boolean boolean : array) {\n                if (!element) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomStringUtils:273","type":"CtBinaryOperatorImpl","sourcecode":"(ch >= 55296) && (ch <= 56191)"},"failures":[],"tindex":"39e77d29-2ed6-11e6-960e-e7a7739e47cf","method":{"position":"org.apache.commons.lang3.Conversion:102","type":"CtMethodImpl","sourcecode":"public static int hexDigitMsb0ToInt(final char hexDigit) {\n    if ((hexDigit >= 55296) && (ch <= 56191)) {\n        {\n            switch (hexDigit) {\n                case '0' :\n                    return 0;\n                case '1' :\n                    return 8;\n                case '2' :\n                    return 4;\n                case '3' :\n                    return 12;\n                case '4' :\n                    return 2;\n                case '5' :\n                    return 10;\n                case '6' :\n                    return 6;\n                case '7' :\n                    return 14;\n                case '8' :\n                    return 1;\n                case '9' :\n                    return 9;\n                case 'a' :\n                case 'A' :\n                    return 5;\n                case 'b' :\n                case 'B' :\n                    return 13;\n                case 'c' :\n                case 'C' :\n                    return 3;\n                case 'd' :\n                case 'D' :\n                    return 11;\n                case 'e' :\n                case 'E' :\n                    return 7;\n                case 'f' :\n                case 'F' :\n                    return 15;\n                default :\n                    throw new java.lang.IllegalArgumentException(((\"Cannot interpret '\" + hexDigit) + \"' as a hexadecimal digit\"));\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"hexDigit"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1099","type":"CtBinaryOperatorImpl","sourcecode":"b < a"},"failures":[18],"tindex":"39e7a43a-2ed6-11e6-960e-6fe4c4736fd7","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1204","type":"CtMethodImpl","sourcecode":"public static long max(long a, final long b, final long c) {\n    if (a < b) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (b > a) {\n                a = b;\n            } \n            if (c > a) {\n                a = c;\n            } \n            return a;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","b":"a"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:302","type":"CtBinaryOperatorImpl","sourcecode":"((languageCode.equals(locale.getLanguage())) && ((locale.getCountry().length()) != 0)) && (locale.getVariant().isEmpty())"},"failures":[],"tindex":"39e7cb4b-2ed6-11e6-960e-6b6383c5ba55","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:454","type":"CtMethodImpl","sourcecode":"public static int reflectionHashCode(final java.lang.Object object, final java.lang.String... excludeFields) {\n    if (((object.equals(object.getLanguage())) && ((locale.getCountry().length()) != 0)) && (locale.getVariant().isEmpty())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(17, 37, object, false, null, excludeFields);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"languageCode":"object","locale":"object"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5122","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[19],"tindex":"39e7cb4c-2ed6-11e6-960e-f168dece785f","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2322","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return indexOf(str, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:965","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(cls, superClass))"},"failures":[],"tindex":"39e7f25d-2ed6-11e6-960e-6dd4f8cd81b0","method":{"position":"org.apache.commons.lang3.reflect.MemberUtils:132","type":"CtMethodImpl","sourcecode":"private static float getObjectTransformationCost(java.lang.Class<?> srcClass, final java.lang.Class<?> destClass) {\n    if (!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(srcClass, destClass))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (destClass.isPrimitive()) {\n                return org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(srcClass, destClass);\n            } \n            float float = 0.0F;\n            while ((srcClass != null) && (!(destClass.equals(srcClass)))) {\n                if ((destClass.isInterface()) && (org.apache.commons.lang3.ClassUtils.isAssignable(srcClass, destClass))) {\n                    cost += 0.25F;\n                    break;\n                } \n                cost++;\n                srcClass = srcClass.getSuperclass();\n            }\n            if (srcClass == null) {\n                cost += 1.5F;\n            } \n            return cost;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"superClass":"destClass","cls":"srcClass"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1120","type":"CtBinaryOperatorImpl","sourcecode":"((nBools - 1) + dstPos) >= 16"},"failures":[20,21],"tindex":"39e8196e-2ed6-11e6-960e-37b91d22d787","method":{"position":"org.apache.commons.lang3.RandomUtils:84","type":"CtMethodImpl","sourcecode":"public static int nextInt(int startInclusive, int endExclusive) {\n    if (((startInclusive - 1) + startInclusive) >= 16) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.isTrue((endExclusive >= startInclusive), \"Start value must be smaller or equal to end value.\");\n            org.apache.commons.lang3.Validate.isTrue((startInclusive >= 0), \"Both range values must be non-negative.\");\n            if (startInclusive == endExclusive) {\n                return startInclusive;\n            } \n            return startInclusive + (org.apache.commons.lang3.RandomUtils.org.apache.commons.lang3.RandomUtils.java.util.Random.nextInt((endExclusive - startInclusive)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nBools":"startInclusive","dstPos":"startInclusive"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:1009","type":"CtBinaryOperatorImpl","sourcecode":"toString != null"},"failures":[22],"tindex":"39e8407f-2ed6-11e6-960e-a395d90f398a","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2099","type":"CtMethodImpl","sourcecode":"public boolean endsWith(final java.lang.String str) {\n    if (str != null) {\n        {\n            if (str == null) {\n                return false;\n            } \n            final int int = str.length();\n            if (len == 0) {\n                return true;\n            } \n            if (len > (int)) {\n                return false;\n            } \n            int int = (int) - len;\n            for (int int = 0 ; i < len ; i++ , pos++) {\n                if ((char[][pos]) != (str.charAt(i))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toString":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2202","type":"CtBinaryOperatorImpl","sourcecode":"length <= 0"},"failures":[23],"tindex":"39e84080-2ed6-11e6-960e-63d93c5dd9d9","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:241","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.time.FastDateFormat getTimeInstance(final int style) {\n    if (style <= 0) {\n        {\n            return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getTimeInstance(style, null, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"style"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:674","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[24],"tindex":"39e86791-2ed6-11e6-960e-7f940016fb26","method":{"position":"org.apache.commons.lang3.ArrayUtils:1245","type":"CtMethodImpl","sourcecode":"public static boolean isSameLength(final long[] array1, final long[] array2) {\n    if (array2 == array1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((((array1 == null) && (array2 != null)) && ((array2.int) > 0)) || (((array2 == null) && (array1 != null)) && ((array1.int) > 0))) || (((array1 != null) && (array2 != null)) && ((array1.int) != (array2.int)))) {\n                return false;\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array2","rhs":"array1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:736","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[],"tindex":"39e86792-2ed6-11e6-960e-c711833dd76e","method":{"position":"org.apache.commons.lang3.math.NumberUtils:834","type":"CtMethodImpl","sourcecode":"public static short min(final short[] array) {\n    if (array == array) {\n        {\n            org.apache.commons.lang3.math.NumberUtils.validateArray(array);\n            short short = array[0];\n            for (int int = 1 ; i < (array.int) ; i++) {\n                if ((array[i]) < min) {\n                    min = array[i];\n                } \n            }\n            return min;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array","rhs":"array"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4171","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"39e88ea3-2ed6-11e6-960e-dbcbced41de3","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:379","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final double lhs, final double rhs) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(fieldName)) {\n        {\n            if (fieldName == null) {\n                throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n            } \n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if ((java.lang.Double.doubleToLongBits(lhs)) != (java.lang.Double.doubleToLongBits(rhs))) {\n                java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Double>(fieldName) {\n                    private static final long serialVersionUID = 1L;\n\n                    @java.lang.Override\n                    public java.lang.Double getLeft() {\n                        return java.lang.Double.valueOf(lhs);\n                    }\n\n                    @java.lang.Override\n                    public java.lang.Double getRight() {\n                        return java.lang.Double.valueOf(rhs);\n                    }\n                });\n            } \n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.CharSetUtils:244","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isNotEmpty(s)"},"failures":[],"tindex":"39e8b5b4-2ed6-11e6-960e-ef193f74340a","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:790","type":"CtMethodImpl","sourcecode":"public static void writeDeclaredField(final java.lang.Object target, final java.lang.String fieldName, final java.lang.Object value, final boolean forceAccess) throws java.lang.IllegalAccessException {\n    if (org.apache.commons.lang3.StringUtils.isNotEmpty(value)) {\n        {\n            org.apache.commons.lang3.Validate.isTrue((target != null), \"target object must not be null\");\n            final java.lang.Class<?> java.lang.Class<?> = target.getClass();\n            final java.lang.reflect.Field java.lang.reflect.Field = org.apache.commons.lang3.reflect.FieldUtils.getDeclaredField(cls, fieldName, forceAccess);\n            org.apache.commons.lang3.Validate.isTrue((field != null), \"Cannot locate declared field %s.%s\", cls.getName(), fieldName);\n            org.apache.commons.lang3.reflect.FieldUtils.writeField(field, target, value, false);\n        }\n    } else {\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"s":"value"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:197","type":"CtVariableReadImpl","sourcecode":"suppressTrailingZeroElements"},"failures":[46,47],"tindex":"39e8dcc5-2ed6-11e6-960e-67a526e505e2","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:678","type":"CtMethodImpl","sourcecode":"public static void removeFinalModifier(java.lang.reflect.Field field, boolean forceAccess) {\n    if (forceAccess) {\n        {\n            org.apache.commons.lang3.Validate.isTrue((field != null), \"The field must not be null\");\n            try {\n                if (java.lang.reflect.Modifier.isFinal(field.getModifiers())) {\n                    java.lang.reflect.Field java.lang.reflect.Field = java.lang.reflect.Field.java.lang.reflect.Field.java.lang.Class.getDeclaredField(\"modifiers\");\n                    final boolean boolean = forceAccess && (!(modifiersField.isAccessible()));\n                    if (doForceAccess) {\n                        modifiersField.setAccessible(true);\n                    } \n                    try {\n                        modifiersField.setInt(field, ((field.getModifiers()) & (~(java.lang.reflect.Modifier.java.lang.reflect.Modifier.int))));\n                    } finally {\n                        if (doForceAccess) {\n                            modifiersField.setAccessible(false);\n                        } \n                    }\n                } \n            } catch (java.lang.NoSuchFieldException ignored) {\n            } catch (java.lang.IllegalAccessException ignored) {\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"suppressTrailingZeroElements":"forceAccess"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2290","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (separator == null)"},"failures":[48],"tindex":"39e903d6-2ed6-11e6-960e-fd2ac59c3972","method":{"position":"org.apache.commons.lang3.StringUtils:5916","type":"CtMethodImpl","sourcecode":"public static boolean isAlphanumeric(final java.lang.CharSequence cs) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(cs)) || (cs == null)) {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(cs)) {\n                return false;\n            } \n            final int int = cs.length();\n            for (int int = 0 ; i < sz ; i++) {\n                if ((java.lang.Character.isLetterOrDigit(cs.charAt(i))) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"cs","separator":"cs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:722","type":"CtBinaryOperatorImpl","sourcecode":"(type instanceof java.lang.reflect.TypeVariable<?>) && (typeVarAssigns != null)"},"failures":[],"tindex":"39e903d7-2ed6-11e6-960e-6d333afb87a0","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:424","type":"CtMethodImpl","sourcecode":"private static boolean isAssignable(final java.lang.reflect.Type type, final java.lang.reflect.ParameterizedType toParameterizedType, final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> typeVarAssigns) {\n    if ((type instanceof java.lang.reflect.TypeVariable<?>) && (typeVarAssigns != null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (type == null) {\n                return true;\n            } \n            if (toParameterizedType == null) {\n                return false;\n            } \n            if (toParameterizedType.equals(type)) {\n                return true;\n            } \n            final java.lang.Class<?> java.lang.Class<?> = org.apache.commons.lang3.reflect.TypeUtils.getRawType(toParameterizedType);\n            final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(type, toClass, null);\n            if (fromTypeVarAssigns == null) {\n                return false;\n            } \n            if (fromTypeVarAssigns.isEmpty()) {\n                return true;\n            } \n            final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(toParameterizedType, toClass, typeVarAssigns);\n            for (final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> : toTypeVarAssigns.keySet()) {\n                final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.unrollVariableAssignments(var, toTypeVarAssigns);\n                final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.unrollVariableAssignments(var, fromTypeVarAssigns);\n                if (((fromTypeArg != null) && (!(toTypeArg.equals(fromTypeArg)))) && (!((toTypeArg instanceof java.lang.reflect.WildcardType) && (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(fromTypeArg, toTypeArg, typeVarAssigns))))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type","typeVarAssigns":"typeVarAssigns"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"c < a"},"failures":[49],"tindex":"39e92ae8-2ed6-11e6-960e-e939dc2bf9ca","method":{"position":"org.apache.commons.lang3.ArrayUtils:4070","type":"CtMethodImpl","sourcecode":"public static byte[] add(final byte[] array, final byte element) {\n    if (element > element) {\n        {\n            if (element < element) {\n                {\n                    final byte[] byte[] = ((byte[])(org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(array, java.lang.Byte.java.lang.Byte.java.lang.Class<java.lang.Byte>)));\n                    newArray[((newArray.int) - 1)] = element;\n                    return newArray;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"element","c":"element"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.AggregateTranslator:53","type":"CtBinaryOperatorImpl","sourcecode":"consumed != 0"},"failures":[50,51],"tindex":"39e92ae9-2ed6-11e6-960e-659274394b01","method":{"position":"org.apache.commons.lang3.ArrayUtils:2167","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final int[] array, final int valueToFind, int startIndex) {\n    if (startIndex != 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } else if (startIndex >= (array.int)) {\n                startIndex = (array.int) - 1;\n            } \n            for (int int = startIndex ; i >= 0 ; i--) {\n                if (valueToFind == (array[i])) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"consumed":"startIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:931","type":"CtBinaryOperatorImpl","sourcecode":"(toProperString) == null"},"failures":[],"tindex":"39e951fa-2ed6-11e6-960e-3bc44d651b70","method":{"position":"org.apache.commons.lang3.time.FastDateParser:675","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nvoid setCalendar(final org.apache.commons.lang3.time.FastDateParser parser, final java.util.Calendar cal, final java.lang.String value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            cal.set(int, modify(java.lang.Integer.parseInt(value)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toProperString":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:877","type":"CtVariableReadImpl","sourcecode":"top"},"failures":[],"tindex":"39e951fb-2ed6-11e6-960e-2378866a7f9b","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1716","type":"CtMethodImpl","sourcecode":"protected void setArrayContentDetail(final boolean arrayContentDetail) {\n    if (arrayContentDetail) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.this.boolean = arrayContentDetail;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"top":"arrayContentDetail"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:472","type":"CtBinaryOperatorImpl","sourcecode":"(java.lang.Float.floatToIntBits(lhs)) != (java.lang.Float.floatToIntBits(rhs))"},"failures":[52],"tindex":"39e951fc-2ed6-11e6-960e-bfb007c189bf","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1190","type":"CtMethodImpl","sourcecode":"public static float min(final float a, final float b, final float c) {\n    if ((java.lang.Float.floatToIntBits(c)) != (java.lang.Float.floatToIntBits(a))) {\n        {\n            return java.lang.Math.min(java.lang.Math.min(a, b), c);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"c","rhs":"a"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:724","type":"CtBinaryOperatorImpl","sourcecode":"lhs != rhs"},"failures":[53],"tindex":"39e9790d-2ed6-11e6-960e-195938d3c495","method":{"position":"org.apache.commons.lang3.mutable.MutableShort:158","type":"CtMethodImpl","sourcecode":"public void subtract(final short operand) {\n    if (operand != operand) {\n        {\n            org.apache.commons.lang3.mutable.MutableShort.this.short -= operand;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"operand","rhs":"operand"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1138","type":"CtBinaryOperatorImpl","sourcecode":"c < a"},"failures":[],"tindex":"39e9790e-2ed6-11e6-960e-b162ce91c3fc","method":{"position":"org.apache.commons.lang3.mutable.MutableShort:96","type":"CtMethodImpl","sourcecode":"public void setValue(final short value) {\n    if (value < value) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.mutable.MutableShort.this.short = value;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"value","c":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1155","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[54],"tindex":"39e9790f-2ed6-11e6-960e-37d4d815844e","method":{"position":"org.apache.commons.lang3.ArrayUtils:3936","type":"CtMethodImpl","sourcecode":"public static float[] addAll(final float[] array1, final float... array2) {\n    if (array1 == null) {\n        {\n            if (array1 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array2);\n            } else if (array2 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array1);\n            } \n            final float[] float[] = new float[(array1.int) + (array2.int)];\n            java.lang.System.arraycopy(array1, 0, joinedArray, 0, array1.int);\n            java.lang.System.arraycopy(array2, 0, joinedArray, array1.int, array2.int);\n            return joinedArray;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4733","type":"CtBinaryOperatorImpl","sourcecode":"(textIndex == (-1)) || (tempIndex < textIndex)"},"failures":[],"tindex":"39e9a020-2ed6-11e6-960e-21edc89a1f60","method":{"position":"org.apache.commons.lang3.time.DateUtils:883","type":"CtMethodImpl","sourcecode":"public static java.util.Date ceiling(final java.util.Date date, final int field) {\n    if ((field == (-1)) || (field < textIndex)) {\n        {\n            if (date == null) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            final java.util.Calendar java.util.Calendar = java.util.Calendar.getInstance();\n            gval.setTime(date);\n            org.apache.commons.lang3.time.DateUtils.modify(gval, field, org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.int);\n            return gval.getTime();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"tempIndex":"field","textIndex":"field"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1766","type":"CtBinaryOperatorImpl","sourcecode":"arrayEnd == null"},"failures":[55,55,56,57,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,71,72],"tindex":"39e9a021-2ed6-11e6-960e-2b73264600e1","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1297","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final double[] array) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(java.lang.String);\n            for (int int = 0 ; i < (array.int) ; i++) {\n                if (i > 0) {\n                    buffer.append(java.lang.String);\n                } \n                appendDetail(buffer, fieldName, array[i]);\n            }\n            buffer.append(java.lang.String);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"arrayEnd":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:511","type":"CtFieldReadImpl","sourcecode":"objectsTriviallyEqual"},"failures":[73],"tindex":"39e9a022-2ed6-11e6-960e-656c8d6f7d95","method":{"position":"org.apache.commons.lang3.ArrayUtils:4326","type":"CtMethodImpl","sourcecode":"public static boolean[] add(final boolean[] array, final int index, final boolean element) {\n    if (element) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((boolean[])(org.apache.commons.lang3.ArrayUtils.add(array, index, java.lang.Boolean.valueOf(element), java.lang.Boolean.java.lang.Boolean.java.lang.Class<java.lang.Boolean>)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsTriviallyEqual":"element"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:91","type":"CtBinaryOperatorImpl","sourcecode":"start == seqEnd"},"failures":[74,16],"tindex":"39e9c733-2ed6-11e6-960e-e189b490c83f","method":{"position":"org.apache.commons.lang3.RandomStringUtils:124","type":"CtMethodImpl","sourcecode":"public static java.lang.String randomNumeric(final int count) {\n    if (count == count) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.RandomStringUtils.random(count, false, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"count","seqEnd":"count"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:647","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[75],"tindex":"39e9c734-2ed6-11e6-960e-91cba75a67f1","method":{"position":"org.apache.commons.lang3.time.DateUtils:200","type":"CtMethodImpl","sourcecode":"public static boolean isSameInstant(final java.util.Date date1, final java.util.Date date2) {\n    if (date2 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((date1 == null) || (date2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            return (date1.getTime()) == (date2.getTime());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:585","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[76,77,78,79,80,81,82,83],"tindex":"39e9c735-2ed6-11e6-960e-4f21a18d9b4f","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:203","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setArrayStart(final java.lang.String arrayStart) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(arrayStart)) {\n        {\n            super.setArrayStart(arrayStart);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"arrayStart"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:894","type":"CtBinaryOperatorImpl","sourcecode":"(lhs == null) || (rhs == null)"},"failures":[84],"tindex":"39e9ee46-2ed6-11e6-960e-9deb8c465e31","method":{"position":"org.apache.commons.lang3.Conversion:384","type":"CtMethodImpl","sourcecode":"public static char binaryToHexDigitMsb0_4bits(final boolean[] src) {\n    if ((src == null) || (src == null)) {\n        {\n            return org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(src, 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"src","rhs":"src"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1406","type":"CtUnaryOperatorImpl","sourcecode":"!allowSigns"},"failures":[85,86],"tindex":"39e9ee47-2ed6-11e6-960e-738648d0ea52","method":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:270","type":"CtMethodImpl","sourcecode":"public static java.lang.String formatPeriod(final long startMillis, final long endMillis, final java.lang.String format, final boolean padWithZeros, final java.util.TimeZone timezone) {\n    if (!padWithZeros) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.lang3.time.DurationFormatUtils.Token[] org.apache.commons.lang3.time.DurationFormatUtils.Token[] = org.apache.commons.lang3.time.DurationFormatUtils.lexx(format);\n            final java.util.Calendar java.util.Calendar = java.util.Calendar.getInstance(timezone);\n            start.setTime(new java.util.Date(startMillis));\n            final java.util.Calendar java.util.Calendar = java.util.Calendar.getInstance(timezone);\n            end.setTime(new java.util.Date(endMillis));\n            int int = (end.get(java.util.Calendar.java.util.Calendar.int)) - (start.get(java.util.Calendar.java.util.Calendar.int));\n            int int = (end.get(java.util.Calendar.java.util.Calendar.int)) - (start.get(java.util.Calendar.java.util.Calendar.int));\n            int int = (end.get(java.util.Calendar.java.util.Calendar.int)) - (start.get(java.util.Calendar.java.util.Calendar.int));\n            int int = (end.get(java.util.Calendar.java.util.Calendar.int)) - (start.get(java.util.Calendar.java.util.Calendar.int));\n            int int = (end.get(java.util.Calendar.java.util.Calendar.int)) - (start.get(java.util.Calendar.java.util.Calendar.int));\n            int int = (end.get(java.util.Calendar.java.util.Calendar.int)) - (start.get(java.util.Calendar.java.util.Calendar.int));\n            int int = (end.get(java.util.Calendar.java.util.Calendar.int)) - (start.get(java.util.Calendar.java.util.Calendar.int));\n            while (milliseconds < 0) {\n                milliseconds += 1000;\n                seconds -= 1;\n            }\n            while (seconds < 0) {\n                seconds += 60;\n                minutes -= 1;\n            }\n            while (minutes < 0) {\n                minutes += 60;\n                hours -= 1;\n            }\n            while (hours < 0) {\n                hours += 24;\n                days -= 1;\n            }\n            if (org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(tokens, org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n                while (days < 0) {\n                    days += start.getActualMaximum(java.util.Calendar.java.util.Calendar.int);\n                    months -= 1;\n                    start.add(java.util.Calendar.java.util.Calendar.int, 1);\n                }\n                while (months < 0) {\n                    months += 12;\n                    years -= 1;\n                }\n                if ((!(org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(tokens, org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object))) && (years != 0)) {\n                    while (years != 0) {\n                        months += 12 * years;\n                        years = 0;\n                    }\n                } \n            } else {\n                if (!(org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(tokens, org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object))) {\n                    int int = end.get(java.util.Calendar.java.util.Calendar.int);\n                    if (months < 0) {\n                        target -= 1;\n                    } \n                    while ((start.get(java.util.Calendar.java.util.Calendar.int)) != target) {\n                        days += (start.getActualMaximum(java.util.Calendar.java.util.Calendar.int)) - (start.get(java.util.Calendar.java.util.Calendar.int));\n                        if (((start instanceof java.util.GregorianCalendar) && ((start.get(java.util.Calendar.java.util.Calendar.int)) == (java.util.Calendar.java.util.Calendar.int))) && ((start.get(java.util.Calendar.java.util.Calendar.int)) == 29)) {\n                            days += 1;\n                        } \n                        start.add(java.util.Calendar.java.util.Calendar.int, 1);\n                        days += start.get(java.util.Calendar.java.util.Calendar.int);\n                    }\n                    years = 0;\n                } \n                while ((start.get(java.util.Calendar.java.util.Calendar.int)) != (end.get(java.util.Calendar.java.util.Calendar.int))) {\n                    days += start.getActualMaximum(java.util.Calendar.java.util.Calendar.int);\n                    start.add(java.util.Calendar.java.util.Calendar.int, 1);\n                }\n                months = 0;\n                while (days < 0) {\n                    days += start.getActualMaximum(java.util.Calendar.java.util.Calendar.int);\n                    months -= 1;\n                    start.add(java.util.Calendar.java.util.Calendar.int, 1);\n                }\n            }\n            if (!(org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(tokens, org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object))) {\n                hours += 24 * days;\n                days = 0;\n            } \n            if (!(org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(tokens, org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object))) {\n                minutes += 60 * hours;\n                hours = 0;\n            } \n            if (!(org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(tokens, org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object))) {\n                seconds += 60 * minutes;\n                minutes = 0;\n            } \n            if (!(org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(tokens, org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object))) {\n                milliseconds += 1000 * seconds;\n                seconds = 0;\n            } \n            return org.apache.commons.lang3.time.DurationFormatUtils.format(tokens, years, months, days, hours, minutes, seconds, milliseconds, padWithZeros);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"allowSigns":"padWithZeros"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2126","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[87],"tindex":"39ea3c68-2ed6-11e6-960e-519f21f37655","method":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:73","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.translate.UnicodeEscaper above(final int codepoint) {\n    if (codepoint < 0) {\n        {\n            return org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, codepoint);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"codepoint"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.AnnotationUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"(a1 == null) || (a2 == null)"},"failures":[88],"tindex":"39ea3c69-2ed6-11e6-960e-51d9776608fb","method":{"position":"org.apache.commons.lang3.AnnotationUtils:167","type":"CtMethodImpl","sourcecode":"public static int hashCode(final java.lang.annotation.Annotation a) {\n    if ((a == null) || (a == null)) {\n        {\n            int int = 0;\n            final java.lang.Class<? extends java.lang.annotation.Annotation> java.lang.Class<? extends java.lang.annotation.Annotation> = a.annotationType();\n            for (final java.lang.reflect.Method java.lang.reflect.Method : type.getDeclaredMethods()) {\n                try {\n                    final java.lang.Object java.lang.Object = m.invoke(a);\n                    if (value == null) {\n                        throw new java.lang.IllegalStateException(java.lang.String.format(\"Annotation method %s returned null\", m));\n                    } \n                    result += org.apache.commons.lang3.AnnotationUtils.hashMember(m.getName(), value);\n                } catch (final java.lang.RuntimeException ex) {\n                    throw ex;\n                } catch (final java.lang.Exception ex) {\n                    throw new java.lang.RuntimeException(ex);\n                }\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a1":"a","a2":"a"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:4575","type":"CtBinaryOperatorImpl","sourcecode":"index < length"},"failures":[89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121],"tindex":"39ea3c6a-2ed6-11e6-960e-4944190ceaa0","method":{"position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:84","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.translate.NumericEntityEscaper between(final int codepointLow, final int codepointHigh) {\n    if (codepointLow < codepointHigh) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.lang3.text.translate.NumericEntityEscaper(codepointLow , codepointHigh , true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"codepointHigh","index":"codepointLow"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1630","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isHighSurrogate(ch)"},"failures":[],"tindex":"39ea637b-2ed6-11e6-960e-75b3f548aa57","method":{"position":"org.apache.commons.lang3.CharRange:170","type":"CtMethodImpl","sourcecode":"public boolean contains(final char ch) {\n    if (java.lang.Character.isHighSurrogate(ch)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((ch >= (char)) && (ch <= (char))) != (boolean);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.AnnotationUtils:227","type":"CtInvocationImpl","sourcecode":"type.isArray()"},"failures":[122,123],"tindex":"39ea637c-2ed6-11e6-960e-f9dae6b31a11","method":{"position":"org.apache.commons.lang3.reflect.InheritanceUtils:49","type":"CtMethodImpl","sourcecode":"public static int distance(final java.lang.Class<?> child, final java.lang.Class<?> parent) {\n    if (parent.isArray()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((child == null) || (parent == null)) {\n                return -1;\n            } \n            if (child.equals(parent)) {\n                return 0;\n            } \n            final java.lang.Class<?> java.lang.Class<?> = child.getSuperclass();\n            int int = org.apache.commons.lang3.BooleanUtils.toInteger(parent.equals(cParent));\n            if (d == 1) {\n                return d;\n            } else {\n                d += org.apache.commons.lang3.reflect.InheritanceUtils.distance(cParent, parent);\n                return d > 0 ? d + 1 : -1;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"parent"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSetUtils:242","type":"CtBinaryOperatorImpl","sourcecode":"strings != null"},"failures":[124,125,126,127,127,128,55,56,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,57,58,59,60,61,62,63,64,65,66,67,68,69,70,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,71,72],"tindex":"39ea637d-2ed6-11e6-960e-f38c2b2a45af","method":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:646","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ReflectionToStringBuilder setExcludeFieldNames(final java.lang.String... excludeFieldNamesParam) {\n    if (excludeFieldNamesParam != null) {\n        {\n            if (excludeFieldNamesParam == null) {\n                org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.java.lang.String[] = null;\n            } else {\n                org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.java.lang.String[] = org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(excludeFieldNamesParam);\n                java.util.Arrays.sort(org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.java.lang.String[]);\n            }\n            return org.apache.commons.lang3.builder.ReflectionToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"strings":"excludeFieldNamesParam"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4705","type":"CtBinaryOperatorImpl","sourcecode":"searchLength != replacementLength"},"failures":[181],"tindex":"39ea8a8e-2ed6-11e6-960e-011204b43a68","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2873","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int read(final char[] b, final int off, int len) {\n    if (len != len) {\n        {\n            if (((((off < 0) || (len < 0)) || (off > (b.int))) || ((off + len) > (b.int))) || ((off + len) < 0)) {\n                throw new java.lang.IndexOutOfBoundsException();\n            } \n            if (len == 0) {\n                return 0;\n            } \n            if ((int) >= (org.apache.commons.lang3.text.StrBuilder.this.size())) {\n                return -1;\n            } \n            if (((int) + len) > (size())) {\n                len = (org.apache.commons.lang3.text.StrBuilder.this.size()) - (int);\n            } \n            org.apache.commons.lang3.text.StrBuilder.this.getChars(int, ((int) + len), b, off);\n            int += len;\n            return len;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"replacementLength":"len","searchLength":"len"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:738","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[182,183],"tindex":"39eab19f-2ed6-11e6-960e-99d9faf88306","method":{"position":"org.apache.commons.lang3.time.DateUtils:179","type":"CtMethodImpl","sourcecode":"public static boolean isSameDay(final java.util.Calendar cal1, final java.util.Calendar cal2) {\n    if (cal2 == null) {\n        {\n            if ((cal1 == null) || (cal2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            return (((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"cal2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.text.ParseException","condition":{"position":"org.apache.commons.lang3.StringUtils:6310","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"39eab1a0-2ed6-11e6-960e-ed12ba8078a4","method":{"position":"org.apache.commons.lang3.time.FastDateParser:280","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.Date parse(final java.lang.String source) throws java.text.ParseException {\n    if (source == null) {\n        {\n            final java.util.Date java.util.Date = parse(source, new java.text.ParsePosition(0));\n            if (date == null) {\n                if (java.util.Locale.equals(org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.java.util.Locale)) {\n                    throw new java.text.ParseException(((((((\"(The \" + (java.util.Locale)) + \" locale does not support dates before 1868 AD)\\n\") + \"Unparseable date: \\\"\") + source) + \"\\\" does not match \") + (java.util.regex.Pattern.pattern())) , 0);\n                } \n                throw new java.text.ParseException((((\"Unparseable date: \\\"\" + source) + \"\\\" does not match \") + (java.util.regex.Pattern.pattern())) , 0);\n            } \n            return date;\n        }\n    } else {\n        throw new java.text.ParseException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"source"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.StringUtils:5420","type":"CtBinaryOperatorImpl","sourcecode":"pads <= 0"},"failures":[],"tindex":"39ead8b1-2ed6-11e6-960e-c54bfd6a4b6c","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:393","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int translate(final java.lang.CharSequence input, final int index, final java.io.Writer out) throws java.io.IOException {\n    if (index <= 0) {\n        {\n            if (index != 0) {\n                throw new java.lang.IllegalStateException(\"CsvUnescaper should never reach the [1] index\");\n            } \n            if (((input.charAt(0)) != (org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper.org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper.char)) || ((input.charAt(((input.length()) - 1))) != (org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper.org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper.char))) {\n                out.write(input.toString());\n                return java.lang.Character.codePointCount(input, 0, input.length());\n            } \n            final java.lang.String java.lang.String = input.subSequence(1, ((input.length()) - 1)).toString();\n            if (org.apache.commons.lang3.StringUtils.containsAny(quoteless, org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper.org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper.char[])) {\n                out.write(org.apache.commons.lang3.StringUtils.replace(quoteless, ((org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper.org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper.java.lang.String) + (org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper.org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper.java.lang.String)), org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper.org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper.java.lang.String));\n            } else {\n                out.write(input.toString());\n            }\n            return java.lang.Character.codePointCount(input, 0, input.length());\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pads":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3478","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[184,185,186,187,188],"tindex":"39ead8b2-2ed6-11e6-960e-5119d5906c48","method":{"position":"org.apache.commons.lang3.BooleanUtils:1040","type":"CtMethodImpl","sourcecode":"public static boolean xor(final boolean... array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n            } \n            if ((array.int) == 0) {\n                throw new java.lang.IllegalArgumentException(\"Array is empty\");\n            } \n            boolean boolean = false;\n            for (final boolean boolean : array) {\n                result ^= element;\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:525","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[189],"tindex":"39eaffc3-2ed6-11e6-960e-f92c8677949a","method":{"position":"org.apache.commons.lang3.text.StrBuilder:477","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic org.apache.commons.lang3.text.StrBuilder append(final java.lang.CharSequence seq) {\n    if (seq == null) {\n        {\n            if (seq == null) {\n                return appendNull();\n            } \n            return append(seq.toString());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"seq"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:412","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[],"tindex":"39eaffc4-2ed6-11e6-960e-6df22a13a72a","method":{"position":"org.apache.commons.lang3.time.DateUtils:1441","type":"CtMethodImpl","sourcecode":"public static long getFragmentInDays(final java.util.Date date, final int fragment) {\n    if (fragment < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"fragment"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:1001","type":"CtBinaryOperatorImpl","sourcecode":"trimmer != null"},"failures":[],"tindex":"39eb26d5-2ed6-11e6-960e-0fcb1816bc99","method":{"position":"org.apache.commons.lang3.ArrayUtils:189","type":"CtMethodImpl","sourcecode":"public static int hashCode(final java.lang.Object array) {\n    if (array != null) {\n        {\n            return new org.apache.commons.lang3.builder.HashCodeBuilder().append(array).toHashCode();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trimmer":"array"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1259","type":"CtBinaryOperatorImpl","sourcecode":"b > a"},"failures":[],"tindex":"39eb26d6-2ed6-11e6-960e-5bd8461cbe30","method":{"position":"org.apache.commons.lang3.ArrayUtils:4070","type":"CtMethodImpl","sourcecode":"public static byte[] add(final byte[] array, final byte element) {\n    if (element > element) {\n        {\n            if (element < element) {\n                {\n                    final byte[] byte[] = ((byte[])(org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(array, java.lang.Byte.java.lang.Byte.java.lang.Class<java.lang.Byte>)));\n                    newArray[((newArray.int) - 1)] = element;\n                    return newArray;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"element","b":"element"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomStringUtils:256","type":"CtBinaryOperatorImpl","sourcecode":"chars == null"},"failures":[190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,124,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,76,77,78,79,80,81,82,83,125,126,55,56,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,57,58,59,60,61,62,63,64,65,66,67,68,70,153,154,155,156,157,158,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,176,177,179,180,71,72,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262],"tindex":"39eb26d7-2ed6-11e6-960e-15b1c30ab9f5","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1451","type":"CtMethodImpl","sourcecode":"protected void appendClassName(final java.lang.StringBuffer buffer, final java.lang.Object object) {\n    if (object == null) {\n        {\n            if ((boolean) && (object != null)) {\n                org.apache.commons.lang3.builder.ToStringStyle.register(object);\n                if (boolean) {\n                    buffer.append(getShortClassName(object.getClass()));\n                } else {\n                    buffer.append(object.getClass().getName());\n                }\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chars":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.FieldUtils:692","type":"CtVariableReadImpl","sourcecode":"doForceAccess"},"failures":[263],"tindex":"39eb4de8-2ed6-11e6-960e-818f6fb730d4","method":{"position":"org.apache.commons.lang3.ArrayUtils:2895","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final boolean[] array, final boolean valueToFind) {\n    if (valueToFind) {\n        {\n            return org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.java.lang.Integer.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"doForceAccess":"valueToFind"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.LookupTranslator:49","type":"CtBinaryOperatorImpl","sourcecode":"lookup != null"},"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,264,39,40,41,42,43,44,45],"tindex":"39eb4de9-2ed6-11e6-960e-11842c3faf33","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:875","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final java.lang.Object[] lhs, final java.lang.Object[] rhs) {\n    if (lhs != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if (!(java.util.Arrays.equals(lhs, rhs))) {\n                java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Object[]>(fieldName) {\n                    private static final long serialVersionUID = 1L;\n\n                    @java.lang.Override\n                    public java.lang.Object[] getLeft() {\n                        return lhs;\n                    }\n\n                    @java.lang.Override\n                    public java.lang.Object[] getRight() {\n                        return rhs;\n                    }\n                });\n            } \n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lookup":"lhs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:221","type":"CtBinaryOperatorImpl","sourcecode":"(numerator == (java.lang.Integer.MIN_VALUE)) || (denominator == (java.lang.Integer.MIN_VALUE))"},"failures":[265],"tindex":"39eb74fa-2ed6-11e6-960e-6bd06ec5fbb4","method":{"position":"org.apache.commons.lang3.Conversion:1429","type":"CtMethodImpl","sourcecode":"public static java.lang.String intToHex(final int src, final int srcPos, final java.lang.String dstInit, final int dstPos, final int nHexs) {\n    if ((nHexs == srcPos) || (srcPos == (java.lang.Integer.java.lang.Integer.int))) {\n        {\n            if (0 == nHexs) {\n                return dstInit;\n            } \n            if ((((nHexs - 1) * 4) + srcPos) >= 32) {\n                throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+srcPos is greather or equal to than 32\");\n            } \n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(dstInit);\n            int int = 0;\n            int int = sb.length();\n            for (int int = 0 ; i < nHexs ; i++) {\n                shift = (i * 4) + srcPos;\n                final int int = 15 & (src >> shift);\n                if ((dstPos + i) == append) {\n                    ++append;\n                    sb.append(org.apache.commons.lang3.Conversion.intToHexDigit(bits));\n                } else {\n                    sb.setCharAt((dstPos + i), org.apache.commons.lang3.Conversion.intToHexDigit(bits));\n                }\n            }\n            return sb.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.lang.Integer.MIN_VALUE":"srcPos","numerator":"nHexs","denominator":"srcPos"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.text.ParseException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:274","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"39eb74fb-2ed6-11e6-960e-3dd25f25231b","method":{"position":"org.apache.commons.lang3.time.DateUtils:353","type":"CtMethodImpl","sourcecode":"private static java.util.Date parseDateWithLeniency(final java.lang.String str, final java.util.Locale locale, final java.lang.String[] parsePatterns, final boolean lenient) throws java.text.ParseException {\n    if (str == null) {\n        throw new java.text.ParseException();\n    } else {\n        {\n            if ((str == null) || (parsePatterns == null)) {\n                throw new java.lang.IllegalArgumentException(\"Date and Patterns must not be null\");\n            } \n            java.text.SimpleDateFormat java.text.SimpleDateFormat;\n            if (locale == null) {\n                parser = new java.text.SimpleDateFormat();\n            } else {\n                parser = new java.text.SimpleDateFormat(\"\" , locale);\n            }\n            parser.setLenient(lenient);\n            final java.text.ParsePosition java.text.ParsePosition = new java.text.ParsePosition(0);\n            for (final java.lang.String java.lang.String : parsePatterns) {\n                java.lang.String java.lang.String = parsePattern;\n                if (parsePattern.endsWith(\"ZZ\")) {\n                    pattern = pattern.substring(0, ((pattern.length()) - 1));\n                } \n                parser.applyPattern(pattern);\n                pos.setIndex(0);\n                java.lang.String java.lang.String = str;\n                if (parsePattern.endsWith(\"ZZ\")) {\n                    str2 = str.replaceAll(\"([-+][0-9][0-9]):([0-9][0-9])$\", \"$1$2\");\n                } \n                final java.util.Date java.util.Date = parser.parse(str2, pos);\n                if ((date != null) && ((pos.getIndex()) == (str2.length()))) {\n                    return date;\n                } \n            }\n            throw new java.text.ParseException((\"Unable to parse the date: \" + str) , (-1));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1189","type":"CtBinaryOperatorImpl","sourcecode":"0 == nInts"},"failures":[92,266],"tindex":"39eb9c0c-2ed6-11e6-960e-57c174510bdf","method":{"position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:95","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.translate.NumericEntityEscaper outsideOf(final int codepointLow, final int codepointHigh) {\n    if (0 == codepointLow) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.lang3.text.translate.NumericEntityEscaper(codepointLow , codepointHigh , false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nInts":"codepointLow"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4878","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(searchChars))"},"failures":[],"tindex":"39eb9c0d-2ed6-11e6-960e-0fa08eea7c42","method":{"position":"org.apache.commons.lang3.Validate:1199","type":"CtMethodImpl","sourcecode":"public static void isInstanceOf(final java.lang.Class<?> type, final java.lang.Object obj, final java.lang.String message, final java.lang.Object... values) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(message)) || (org.apache.commons.lang3.StringUtils.isEmpty(obj))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((type.isInstance(obj)) == false) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message, values));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"message","searchChars":"obj"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1226","type":"CtBinaryOperatorImpl","sourcecode":"(((nShorts - 1) * 16) + srcPos) >= 64"},"failures":[267,268,269,270,271,272,273,274,275,276,277,278],"tindex":"39eb9c0e-2ed6-11e6-960e-f18f80d97ab0","method":{"position":"org.apache.commons.lang3.time.DateUtils:828","type":"CtMethodImpl","sourcecode":"public static java.util.Calendar truncate(final java.util.Calendar date, final int field) {\n    if ((((field - 1) * 16) + field) >= 64) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (date == null) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            final java.util.Calendar java.util.Calendar = ((java.util.Calendar)(date.clone()));\n            org.apache.commons.lang3.time.DateUtils.modify(truncated, field, org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.int);\n            return truncated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcPos":"field","nShorts":"field"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:622","type":"CtBinaryOperatorImpl","sourcecode":"stripChars == null"},"failures":[279,280,281],"tindex":"39ebc31f-2ed6-11e6-960e-39c6814c2508","method":{"position":"org.apache.commons.lang3.concurrent.ConstantInitializer:106","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\n@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if ((org.apache.commons.lang3.concurrent.ConstantInitializer.this) == obj) {\n                return true;\n            } \n            if (!(obj instanceof org.apache.commons.lang3.concurrent.ConstantInitializer<?>)) {\n                return false;\n            } \n            final org.apache.commons.lang3.concurrent.ConstantInitializer<?> org.apache.commons.lang3.concurrent.ConstantInitializer<?> = ((org.apache.commons.lang3.concurrent.ConstantInitializer<?>)(obj));\n            return org.apache.commons.lang3.ObjectUtils.equals(getObject(), c.getObject());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"stripChars":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"focus == null"},"failures":[282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,23,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,270,271,381,272,382,383,384,385,273,274,386,387,275,276,277,388,278,85],"tindex":"39ebc320-2ed6-11e6-960e-2f5b6d9f4f23","method":{"position":"org.apache.commons.lang3.time.FastDateParser:139","type":"CtMethodImpl","sourcecode":"private void init(java.util.Calendar definingCalendar) {\n    if (definingCalendar == null) {\n        {\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            final java.util.List<org.apache.commons.lang3.time.FastDateParser.Strategy> java.util.List<org.apache.commons.lang3.time.FastDateParser.Strategy> = new java.util.ArrayList<org.apache.commons.lang3.time.FastDateParser.Strategy>();\n            final java.util.regex.Matcher java.util.regex.Matcher = org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.java.util.regex.Pattern.matcher(java.lang.String);\n            if (!(patternMatcher.lookingAt())) {\n                throw new java.lang.IllegalArgumentException(((\"Illegal pattern character '\" + (java.lang.String.charAt(patternMatcher.regionStart()))) + \"'\"));\n            } \n            java.lang.String = patternMatcher.group();\n            org.apache.commons.lang3.time.FastDateParser.Strategy org.apache.commons.lang3.time.FastDateParser.Strategy = getStrategy(java.lang.String, definingCalendar);\n            for ( ;  ; ) {\n                patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd());\n                if (!(patternMatcher.lookingAt())) {\n                    org.apache.commons.lang3.time.FastDateParser.Strategy = null;\n                    break;\n                } \n                final java.lang.String java.lang.String = patternMatcher.group();\n                org.apache.commons.lang3.time.FastDateParser.Strategy = getStrategy(nextFormatField, definingCalendar);\n                if (currentStrategy.addRegex(org.apache.commons.lang3.time.FastDateParser.this, regex)) {\n                    collector.add(currentStrategy);\n                } \n                java.lang.String = nextFormatField;\n                currentStrategy = org.apache.commons.lang3.time.FastDateParser.Strategy;\n            }\n            if ((patternMatcher.regionStart()) != (patternMatcher.regionEnd())) {\n                throw new java.lang.IllegalArgumentException((((\"Failed to parse \\\"\" + (java.lang.String)) + \"\\\" ; gave up at index \") + (patternMatcher.regionStart())));\n            } \n            if (currentStrategy.addRegex(org.apache.commons.lang3.time.FastDateParser.this, regex)) {\n                collector.add(currentStrategy);\n            } \n            java.lang.String = null;\n            org.apache.commons.lang3.time.FastDateParser.Strategy[] = collector.toArray(new org.apache.commons.lang3.time.FastDateParser.Strategy[collector.size()]);\n            java.util.regex.Pattern = java.util.regex.Pattern.compile(regex.toString());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"focus":"definingCalendar"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2980","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[389,390,391,392,393,394,395,396,397,398,399],"tindex":"39ebea31-2ed6-11e6-960e-978f56e8581b","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:620","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final java.lang.Object[] lhs, final java.lang.Object[] rhs) {\n    if (rhs == null) {\n        {\n            return append(lhs, rhs, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"rhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1386","type":"CtBinaryOperatorImpl","sourcecode":"width > 0"},"failures":[],"tindex":"39ec1142-2ed6-11e6-960e-d97d2081e702","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:256","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.time.FastDateFormat getTimeInstance(final int style, final java.util.Locale locale) {\n    if (style > 0) {\n        {\n            return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getTimeInstance(style, null, locale);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"width":"style"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5847","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(cs)"},"failures":[400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428],"tindex":"39ec1143-2ed6-11e6-960e-5de608bd1d9f","method":{"position":"org.apache.commons.lang3.StringUtils:306","type":"CtMethodImpl","sourcecode":"public static boolean isBlank(final java.lang.CharSequence cs) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(cs)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int;\n            if ((cs == null) || ((strLen = cs.length()) == 0)) {\n                return true;\n            } \n            for (int int = 0 ; i < strLen ; i++) {\n                if ((java.lang.Character.isWhitespace(cs.charAt(i))) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"cs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2485","type":"CtBinaryOperatorImpl","sourcecode":"start != (org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND)"},"failures":[],"tindex":"39ec1144-2ed6-11e6-960e-3f500e20e1be","method":{"position":"org.apache.commons.lang3.time.DateUtils:1592","type":"CtMethodImpl","sourcecode":"public static long getFragmentInHours(final java.util.Calendar calendar, final int fragment) {\n    if (fragment < fragment) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (fragment != fragment) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND":"fragment","start":"fragment"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2002","type":"CtBinaryOperatorImpl","sourcecode":"sizeStartText == null"},"failures":[429],"tindex":"39ec3855-2ed6-11e6-960e-ad5e15da1c9d","method":{"position":"org.apache.commons.lang3.StringUtils:5079","type":"CtMethodImpl","sourcecode":"public static java.lang.String chop(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return null;\n            } \n            final int int = str.length();\n            if (strLen < 2) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final int int = strLen - 1;\n            final java.lang.String java.lang.String = str.substring(0, lastIdx);\n            final char char = str.charAt(lastIdx);\n            if ((last == (org.apache.commons.lang3.CharUtils.org.apache.commons.lang3.CharUtils.char)) && ((ret.charAt((lastIdx - 1))) == (org.apache.commons.lang3.CharUtils.org.apache.commons.lang3.CharUtils.char))) {\n                return ret.substring(0, (lastIdx - 1));\n            } \n            return ret;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sizeStartText":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6396","type":"CtBinaryOperatorImpl","sourcecode":"maxWidth < 4"},"failures":[1,2,4,430,11,431,432],"tindex":"39ec3856-2ed6-11e6-960e-7d758742d999","method":{"position":"org.apache.commons.lang3.text.StrBuilder:342","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder deleteCharAt(final int index) {\n    if (index < 4) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((index < 0) || (index >= (int))) {\n                throw new java.lang.StringIndexOutOfBoundsException(index);\n            } \n            deleteImpl(index, (index + 1), 1);\n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"maxWidth":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:940","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[433,185,186,434,435,436,437,438,439,440],"tindex":"39ec3857-2ed6-11e6-960e-81a9c8c1331a","method":{"position":"org.apache.commons.lang3.ArrayUtils:3433","type":"CtMethodImpl","sourcecode":"public static boolean[] toPrimitive(final java.lang.Boolean[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.boolean[];\n            } \n            final boolean[] boolean[] = new boolean[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = array[i].booleanValue();\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2416","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(separator)"},"failures":[],"tindex":"39ec5f68-2ed6-11e6-960e-0910b22856cf","method":{"position":"org.apache.commons.lang3.ObjectUtils:267","type":"CtMethodImpl","sourcecode":"public static java.lang.String identityToString(final java.lang.Object object) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(object)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == null) {\n                return null;\n            } \n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            org.apache.commons.lang3.ObjectUtils.identityToString(builder, object);\n            return builder.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"separator":"object"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:474","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[287,296],"tindex":"39ec5f69-2ed6-11e6-960e-533b35e9f903","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1024","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n    if (buffer == null) {\n        {\n            int int = calendar.get(java.util.Calendar.java.util.Calendar.int);\n            if (value == 0) {\n                value = (calendar.getLeastMaximum(java.util.Calendar.java.util.Calendar.int)) + 1;\n            } \n            org.apache.commons.lang3.time.FastDatePrinter.NumberRule.appendTo(buffer, value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"buffer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4287","type":"CtInvocationImpl","sourcecode":"str.endsWith(remove)"},"failures":[441],"tindex":"39ec5f6a-2ed6-11e6-960e-21a8e0fefca6","method":{"position":"org.apache.commons.lang3.StringUtils:5724","type":"CtMethodImpl","sourcecode":"public static java.lang.String uncapitalize(final java.lang.String str) {\n    if (str.endsWith(str)) {\n        {\n            int int;\n            if ((str == null) || ((strLen = str.length()) == 0)) {\n                return str;\n            } \n            char char = str.charAt(0);\n            if (java.lang.Character.isLowerCase(firstChar)) {\n                return str;\n            } \n            return new java.lang.StringBuilder(strLen).append(java.lang.Character.toLowerCase(firstChar)).append(str.substring(1)).toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str","remove":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:625","type":"CtBinaryOperatorImpl","sourcecode":"toClass == null"},"failures":[],"tindex":"39ec867b-2ed6-11e6-960e-93e327dd432b","method":{"position":"org.apache.commons.lang3.reflect.MemberUtils:167","type":"CtMethodImpl","sourcecode":"private static float getPrimitivePromotionCost(final java.lang.Class<?> srcClass, final java.lang.Class<?> destClass) {\n    if (srcClass == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            float float = 0.0F;\n            java.lang.Class<?> java.lang.Class<?> = srcClass;\n            if (!(cls.isPrimitive())) {\n                cost += 0.1F;\n                cls = org.apache.commons.lang3.ClassUtils.wrapperToPrimitive(cls);\n            } \n            for (int int = 0 ; (cls != destClass) && (i < (org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.java.lang.Class<?>[].int)) ; i++) {\n                if (cls == (org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.java.lang.Class<?>[][i])) {\n                    cost += 0.1F;\n                    if (i < ((org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.java.lang.Class<?>[].int) - 1)) {\n                        cls = org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.java.lang.Class<?>[][(i + 1)];\n                    } \n                } \n            }\n            return cost;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toClass":"srcClass"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.AnnotationUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"(a1 == null) || (a2 == null)"},"failures":[442],"tindex":"39ec867c-2ed6-11e6-960e-750561eb38ff","method":{"position":"org.apache.commons.lang3.ArrayUtils:1987","type":"CtMethodImpl","sourcecode":"public static boolean contains(final java.lang.Object[] array, final java.lang.Object objectToFind) {\n    if ((objectToFind == null) || (objectToFind == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (org.apache.commons.lang3.ArrayUtils.indexOf(array, objectToFind)) != (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a1":"objectToFind","a2":"objectToFind"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1549","type":"CtBinaryOperatorImpl","sourcecode":"chars == null"},"failures":[443],"tindex":"39ec867d-2ed6-11e6-960e-db22d41556c6","method":{"position":"org.apache.commons.lang3.text.StrBuilder:392","type":"CtMethodImpl","sourcecode":"public char[] getChars(char[] destination) {\n    if (destination == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = length();\n            if ((destination == null) || ((destination.int) < len)) {\n                destination = new char[len];\n            } \n            java.lang.System.arraycopy(char[], 0, destination, 0, len);\n            return destination;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chars":"destination"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:387","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[444],"tindex":"39ecad8e-2ed6-11e6-960e-45064d1449ac","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:763","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.EqualsBuilder append(final char[] lhs, final char[] rhs) {\n    if (rhs == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((boolean) == false) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if ((lhs == null) || (rhs == null)) {\n                org.apache.commons.lang3.builder.EqualsBuilder.this.setEquals(false);\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                org.apache.commons.lang3.builder.EqualsBuilder.this.setEquals(false);\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && (boolean) ; ++i) {\n                append(lhs[i], rhs[i]);\n            }\n            return org.apache.commons.lang3.builder.EqualsBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"rhs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1208","type":"CtBinaryOperatorImpl","sourcecode":"startCutoff < (java.util.Calendar.SUNDAY)"},"failures":[],"tindex":"39ecad8f-2ed6-11e6-960e-5b248928a620","method":{"position":"org.apache.commons.lang3.time.DateUtils:1592","type":"CtMethodImpl","sourcecode":"public static long getFragmentInHours(final java.util.Calendar calendar, final int fragment) {\n    if (fragment < fragment) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (fragment != fragment) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startCutoff":"fragment","java.util.Calendar.SUNDAY":"fragment"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:472","type":"CtBinaryOperatorImpl","sourcecode":"(java.lang.Float.floatToIntBits(lhs)) != (java.lang.Float.floatToIntBits(rhs))"},"failures":[445,446,447,448,449],"tindex":"39ecd4a0-2ed6-11e6-960e-7f8b4e429dab","method":{"position":"org.apache.commons.lang3.RandomUtils:163","type":"CtMethodImpl","sourcecode":"public static float nextFloat(float startInclusive, float endInclusive) {\n    if ((java.lang.Float.floatToIntBits(endInclusive)) != (java.lang.Float.floatToIntBits(endInclusive))) {\n        {\n            org.apache.commons.lang3.Validate.isTrue((endInclusive >= startInclusive), \"Start value must be smaller or equal to end value.\");\n            org.apache.commons.lang3.Validate.isTrue((startInclusive >= 0), \"Both range values must be non-negative.\");\n            if (startInclusive == endInclusive) {\n                return startInclusive;\n            } \n            return startInclusive + ((endInclusive - startInclusive) * (org.apache.commons.lang3.RandomUtils.org.apache.commons.lang3.RandomUtils.java.util.Random.nextFloat()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"endInclusive","rhs":"endInclusive"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1153","type":"CtBinaryOperatorImpl","sourcecode":"b < a"},"failures":[450],"tindex":"39ecd4a1-2ed6-11e6-960e-b997e9a1f1ad","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1258","type":"CtMethodImpl","sourcecode":"public static byte max(byte a, final byte b, final byte c) {\n    if (c < a) {\n        {\n            if (b > a) {\n                a = b;\n            } \n            if (c > a) {\n                a = c;\n            } \n            return a;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"c"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDateParser:309","type":"CtUnaryOperatorImpl","sourcecode":"!(matcher.lookingAt())"},"failures":[],"tindex":"39ecd4a2-2ed6-11e6-960e-016f81c2db54","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:153","type":"CtMethodImpl","sourcecode":"static boolean isRegistered(final java.lang.Object lhs, final java.lang.Object rhs) {\n    if (!(rhs.lookingAt())) {\n        {\n            final java.util.Set<org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey>> java.util.Set<org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey>> = org.apache.commons.lang3.builder.EqualsBuilder.getRegistry();\n            final org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey> org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey> = org.apache.commons.lang3.builder.EqualsBuilder.getRegisterPair(lhs, rhs);\n            final org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey> org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey> = org.apache.commons.lang3.tuple.Pair.of(pair.getLeft(), pair.getRight());\n            return (registry != null) && ((registry.contains(pair)) || (registry.contains(swappedPair)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"matcher":"rhs"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6034","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(cs)"},"failures":[],"tindex":"39ecd4a3-2ed6-11e6-960e-5f82088a13be","method":{"position":"org.apache.commons.lang3.AnnotationUtils:263","type":"CtMethodImpl","sourcecode":"private static boolean memberEquals(final java.lang.Class<?> type, final java.lang.Object o1, final java.lang.Object o2) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(o1)) {\n        {\n            if (o1 == o2) {\n                return true;\n            } \n            if ((o1 == null) || (o2 == null)) {\n                return false;\n            } \n            if (type.isArray()) {\n                return org.apache.commons.lang3.AnnotationUtils.arrayMemberEquals(type.getComponentType(), o1, o2);\n            } \n            if (type.isAnnotation()) {\n                return org.apache.commons.lang3.AnnotationUtils.equals(((java.lang.annotation.Annotation)(o1)), ((java.lang.annotation.Annotation)(o2)));\n            } \n            return o1.equals(o2);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"o1"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:448","type":"CtBinaryOperatorImpl","sourcecode":"(nullText) == null"},"failures":[451],"tindex":"39ecfbb4-2ed6-11e6-960e-2b7750cebf2f","method":{"position":"org.apache.commons.lang3.StringUtils:1585","type":"CtMethodImpl","sourcecode":"public static int indexOfAny(final java.lang.CharSequence cs, final java.lang.String searchChars) {\n    if (cs == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(cs)) || (org.apache.commons.lang3.StringUtils.isEmpty(searchChars))) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            return org.apache.commons.lang3.StringUtils.indexOfAny(cs, searchChars.toCharArray());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nullText":"cs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:877","type":"CtFieldReadImpl","sourcecode":"objectsTriviallyEqual"},"failures":[452,453,454,455,456],"tindex":"39ecfbb5-2ed6-11e6-960e-7989de518de9","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:570","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final boolean value) {\n    if (value) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int = ((int) * (int)) + (value ? 0 : 1);\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsTriviallyEqual":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:163","type":"CtBinaryOperatorImpl","sourcecode":"(ex.getCause()) instanceof java.lang.Error"},"failures":[457,458],"tindex":"39ecfbb6-2ed6-11e6-960e-d76e16931a5e","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:671","type":"CtMethodImpl","sourcecode":"public static java.lang.String getMessage(final java.lang.Throwable th) {\n    if ((th.getCause()) instanceof java.lang.Error) {\n        {\n            if (th == null) {\n                return \"\";\n            } \n            final java.lang.String java.lang.String = org.apache.commons.lang3.ClassUtils.getShortClassName(th, null);\n            final java.lang.String java.lang.String = th.getMessage();\n            return (clsName + \": \") + (org.apache.commons.lang3.StringUtils.defaultString(msg));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ex":"th"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:778","type":"CtBinaryOperatorImpl","sourcecode":"classes == null"},"failures":[201,202,203,204,205,206,207,208,209,210,125,126,127,127,128,55,56,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,57,58,59,60,61,62,63,64,65,66,67,68,69,70,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,71,72],"tindex":"39ed22c7-2ed6-11e6-960e-35a695ce9525","method":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:329","type":"CtMethodImpl","sourcecode":"static java.lang.String[] toNoNullStringArray(final java.lang.Object[] array) {\n    if (array == null) {\n        {\n            final java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>(array.int);\n            for (final java.lang.Object java.lang.Object : array) {\n                if (e != null) {\n                    list.add(e.toString());\n                } \n            }\n            return list.toArray(org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.String[]);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classes":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2128","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[459,460,461,462,463,464,465,466,467],"tindex":"39ed22c8-2ed6-11e6-960e-6f5afc93a6a1","method":{"position":"org.apache.commons.lang3.time.DateUtils:1365","type":"CtMethodImpl","sourcecode":"public static long getFragmentInMinutes(final java.util.Date date, final int fragment) {\n    if (fragment < 0) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"fragment"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1810","type":"CtBinaryOperatorImpl","sourcecode":"(cs.length()) == 0"},"failures":[468,469],"tindex":"39ed22c9-2ed6-11e6-960e-b1c81c4ff162","method":{"position":"org.apache.commons.lang3.StringUtils:1805","type":"CtMethodImpl","sourcecode":"public static boolean containsOnly(final java.lang.CharSequence cs, final char... valid) {\n    if ((cs.length()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((valid == null) || (cs == null)) {\n                return false;\n            } \n            if ((cs.length()) == 0) {\n                return true;\n            } \n            if ((valid.int) == 0) {\n                return false;\n            } \n            return (org.apache.commons.lang3.StringUtils.indexOfAnyBut(cs, valid)) == (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"cs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDateParser:284","type":"CtInvocationImpl","sourcecode":"locale.equals(org.apache.commons.lang3.time.FastDateParser.JAPANESE_IMPERIAL)"},"failures":[],"tindex":"39ed49da-2ed6-11e6-960e-017fc2a47b6c","method":{"position":"org.apache.commons.lang3.builder.RecursiveToStringStyle:71","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendDetail(java.lang.StringBuffer buffer, java.lang.String fieldName, java.lang.Object value) {\n    if (value.equals(value)) {\n        {\n            if (((!(org.apache.commons.lang3.ClassUtils.isPrimitiveWrapper(value.getClass()))) && (!(java.lang.String.java.lang.String.java.lang.Class.equals(value.getClass())))) && (accept(value.getClass()))) {\n                buffer.append(org.apache.commons.lang3.builder.ReflectionToStringBuilder.toString(value, org.apache.commons.lang3.builder.RecursiveToStringStyle.this));\n            } else {\n                super.appendDetail(buffer, fieldName, value);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"locale":"value","org.apache.commons.lang3.time.FastDateParser.JAPANESE_IMPERIAL":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:136","type":"CtBinaryOperatorImpl","sourcecode":"style == null"},"failures":[],"tindex":"39ed49db-2ed6-11e6-960e-23833ee472bf","method":{"position":"org.apache.commons.lang3.builder.DiffResult:180","type":"CtMethodImpl","sourcecode":"public java.lang.String toString(org.apache.commons.lang3.builder.ToStringStyle style) {\n    if (style == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((java.util.List<org.apache.commons.lang3.builder.Diff<?>>.size()) == 0) {\n                return org.apache.commons.lang3.builder.DiffResult.org.apache.commons.lang3.builder.DiffResult.java.lang.String;\n            } \n            org.apache.commons.lang3.builder.ToStringBuilder org.apache.commons.lang3.builder.ToStringBuilder = new org.apache.commons.lang3.builder.ToStringBuilder(java.lang.Object , style);\n            org.apache.commons.lang3.builder.ToStringBuilder org.apache.commons.lang3.builder.ToStringBuilder = new org.apache.commons.lang3.builder.ToStringBuilder(java.lang.Object , style);\n            for (org.apache.commons.lang3.builder.Diff<?> org.apache.commons.lang3.builder.Diff<?> : java.util.List<org.apache.commons.lang3.builder.Diff<?>>) {\n                lhsBuilder.append(diff.getFieldName(), diff.getLeft());\n                rhsBuilder.append(diff.getFieldName(), diff.getRight());\n            }\n            return java.lang.String.format(\"%s %s %s\", lhsBuilder.build(), org.apache.commons.lang3.builder.DiffResult.org.apache.commons.lang3.builder.DiffResult.java.lang.String, rhsBuilder.build());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"style":"style"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:94","type":"CtInvocationImpl","sourcecode":"str.isEmpty()"},"failures":[470,471,472,473],"tindex":"39ed49dc-2ed6-11e6-960e-b377df2b194e","method":{"position":"org.apache.commons.lang3.StringUtils:3071","type":"CtMethodImpl","sourcecode":"private static java.lang.String[] splitWorker(final java.lang.String str, final java.lang.String separatorChars, final int max, final boolean preserveAllTokens) {\n    if (str.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return null;\n            } \n            final int int = str.length();\n            if (len == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.String[];\n            } \n            final java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n            int int = 1;\n            int int = 0;\n            int int = 0;\n            boolean boolean = false;\n            boolean boolean = false;\n            if (separatorChars == null) {\n                while (i < len) {\n                    if (java.lang.Character.isWhitespace(str.charAt(i))) {\n                        if (match || preserveAllTokens) {\n                            lastMatch = true;\n                            if ((sizePlus1++) == max) {\n                                i = len;\n                                lastMatch = false;\n                            } \n                            list.add(str.substring(start, i));\n                            match = false;\n                        } \n                        start = ++i;\n                        continue;\n                    } \n                    lastMatch = false;\n                    match = true;\n                    i++;\n                }\n            } else if ((separatorChars.length()) == 1) {\n                final char char = separatorChars.charAt(0);\n                while (i < len) {\n                    if ((str.charAt(i)) == sep) {\n                        if (match || preserveAllTokens) {\n                            lastMatch = true;\n                            if ((sizePlus1++) == max) {\n                                i = len;\n                                lastMatch = false;\n                            } \n                            list.add(str.substring(start, i));\n                            match = false;\n                        } \n                        start = ++i;\n                        continue;\n                    } \n                    lastMatch = false;\n                    match = true;\n                    i++;\n                }\n            } else {\n                while (i < len) {\n                    if ((separatorChars.indexOf(str.charAt(i))) >= 0) {\n                        if (match || preserveAllTokens) {\n                            lastMatch = true;\n                            if ((sizePlus1++) == max) {\n                                i = len;\n                                lastMatch = false;\n                            } \n                            list.add(str.substring(start, i));\n                            match = false;\n                        } \n                        start = ++i;\n                        continue;\n                    } \n                    lastMatch = false;\n                    match = true;\n                    i++;\n                }\n            }\n            if (match || (preserveAllTokens && lastMatch)) {\n                list.add(str.substring(start, i));\n            } \n            return list.toArray(new java.lang.String[list.size()]);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:573","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,124,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,76,77,78,79,80,81,82,83,125,125,126,126,127,127,128,55,55,56,56,129,129,130,130,131,131,132,132,133,133,134,134,135,135,136,136,137,137,138,138,139,139,140,140,141,141,142,142,143,143,144,144,145,145,146,146,147,147,148,148,149,149,150,150,151,151,152,152,57,57,58,58,59,59,60,60,61,61,62,62,63,63,64,64,65,65,66,66,67,67,68,68,69,70,70,153,153,154,154,155,155,156,156,157,157,158,158,159,159,160,160,161,161,162,162,163,163,164,164,165,165,166,167,167,168,168,169,169,170,170,171,171,172,172,173,173,174,174,175,175,176,176,177,177,178,179,179,180,180,71,71,72,72,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,254,255,256,257,258,259,260,261,262],"tindex":"39ed97fd-2ed6-11e6-960e-cf383d0b5d84","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:408","type":"CtMethodImpl","sourcecode":"protected void removeLastFieldSeparator(final java.lang.StringBuffer buffer) {\n    if (buffer == null) {\n        {\n            final int int = buffer.length();\n            final int int = java.lang.String.length();\n            if (((len > 0) && (sepLen > 0)) && (len >= sepLen)) {\n                boolean boolean = true;\n                for (int int = 0 ; i < sepLen ; i++) {\n                    if ((buffer.charAt(((len - 1) - i))) != (java.lang.String.charAt(((sepLen - 1) - i)))) {\n                        match = false;\n                        break;\n                    } \n                }\n                if (match) {\n                    buffer.setLength((len - sepLen));\n                } \n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"buffer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1241","type":"CtBinaryOperatorImpl","sourcecode":"b > a"},"failures":[474],"tindex":"39ed97fe-2ed6-11e6-960e-f1a45f4e3109","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1134","type":"CtMethodImpl","sourcecode":"public static short min(short a, final short b, final short c) {\n    if (a > a) {\n        {\n            if (b < a) {\n                a = b;\n            } \n            if (c < a) {\n                a = c;\n            } \n            return a;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","b":"a"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6767","type":"CtBinaryOperatorImpl","sourcecode":"m == 0"},"failures":[],"tindex":"39edbf0f-2ed6-11e6-960e-799724e6cff0","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:210","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.time.FastDateFormat getDateInstance(final int style, final java.util.TimeZone timeZone) {\n    if (style == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getDateInstance(style, timeZone, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"m":"style"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:667","type":"CtInvocationImpl","sourcecode":"str.equals(trueString)"},"failures":[475],"tindex":"39edbf10-2ed6-11e6-960e-b9d781bde122","method":{"position":"org.apache.commons.lang3.StringUtils:4214","type":"CtMethodImpl","sourcecode":"public static java.lang.String removeStart(final java.lang.String str, final java.lang.String remove) {\n    if (str.equals(str)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(remove))) {\n                return str;\n            } \n            if (str.startsWith(remove)) {\n                return str.substring(remove.length());\n            } \n            return str;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str","trueString":"str"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":94,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}