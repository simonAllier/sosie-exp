{"failureDictionary":{"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":336,"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":75,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":281,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":120,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":122,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":231,"org.apache.commons.lang3.text.StrBuilderTest.testSubstringInt":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":116,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":119,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone":315,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":330,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":76,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":101,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":16,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":172,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":346,"org.apache.commons.lang3.ArrayUtilsTest.testIsEmptyPrimitives":256,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceFirst_String_String":298,"org.apache.commons.lang3.StringUtilsTest.testReplacePattern":248,"org.apache.commons.lang3.time.DateUtilsTest.testIsSameInstant_Cal":146,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":180,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":130,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":15,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":133,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_object_emptyInput":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":213,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":168,"org.apache.commons.lang3.ValidateTest.testIsAssignable_withMessage":297,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHiragana":304,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":157,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":170,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":83,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":228,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang708":269,"org.apache.commons.lang3.time.DateUtilsTest.testAddMonths":1,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfDoubleWithStartIndex":262,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":334,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlVersions":303,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":329,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":208,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":73,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":158,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVEmpty":62,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":331,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCyclicalObjectReferences":66,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringStringarray":278,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":233,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StrBuilder_int_int":141,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":124,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":225,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":235,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":131,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":27,"org.apache.commons.lang3.RandomStringUtilsTest.testExceptions":316,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":112,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_StrBuilder_int_int":142,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":173,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":37,"org.apache.commons.lang3.StringUtilsTest.testChomp":97,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":279,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":209,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeEcmaScript":271,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":219,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfDoubleWithStartIndexTolerance":259,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJavaWithSlash":268,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":151,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetRawType":288,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":108,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":155,"org.apache.commons.lang3.BitFieldTest.testSetValue":161,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringStringarray":277,"org.apache.commons.lang3.exception.ContextedExceptionTest.testAddContextValue":293,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":176,"org.apache.commons.lang3.exception.ContextedExceptionTest.testJavaSerialization":294,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":115,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":14,"org.apache.commons.lang3.builder.EqualsBuilderTest.testObjectArray":249,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":154,"org.apache.commons.lang3.ValidateTest.testValidIndex_charSequence":250,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":214,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":207,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairsLang858":264,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementDoubleArray":252,"org.apache.commons.lang3.ClassUtilsTest.test_getPackageName_Object":164,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":129,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":341,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":345,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfDoubleTolerance":257,"org.apache.commons.lang3.RangeTest.testIntersectionWithNonOverlapping":104,"org.apache.commons.lang3.SystemUtilsTest.testOSMatchesName":162,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":211,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":338,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_object_nullElementInput":55,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":236,"org.apache.commons.lang3.ArrayUtilsTest.testContainsDoubleTolerance":253,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":189,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":47,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testStartsWithIgnoreCase":306,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":135,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":80,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":313,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":184,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":325,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":48,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":18,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":49,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":50,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":204,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":51,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":136,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtml":301,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":232,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":128,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":118,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":344,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":85,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":190,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":222,"org.apache.commons.lang3.StringUtilsTest.testGetCommonPrefix_StringArray":314,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":194,"org.apache.commons.lang3.exception.ContextedExceptionTest.testSetContextValue":295,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":322,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionHierarchyEquals":68,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":89,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":40,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":333,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":41,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfDouble":261,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":285,"org.apache.commons.lang3.text.StrBuilderTest.testSubstringIntInt":4,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEqualsExcludeFields":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":203,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringString":276,"org.apache.commons.lang3.reflect.TypeUtilsTest.testDetermineTypeVariableAssignments":287,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":78,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":92,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":192,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementShortArray":308,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneNotSupportedException":59,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":218,"org.apache.commons.lang3.BitFieldTest.testSetShortValue":160,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBetween":274,"org.apache.commons.lang3.RangeTest.testIsOverlappedBy":102,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":239,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testInteger":96,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":198,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":166,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":123,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":175,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":221,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":212,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":339,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":137,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairs":300,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":107,"org.apache.commons.lang3.text.StrTokenizerTest.testChaining":64,"org.apache.commons.lang3.BooleanUtilsTest.testXor_primitive_nullInput":245,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetTypeArguments":283,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixture":94,"org.apache.commons.lang3.ConversionTest.testLongToHex":351,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":169,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testBlank":342,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":2,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":167,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":234,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxShort_nullArray":149,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":320,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":199,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_object_validInput_3items":57,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":79,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfShortWithStartIndex":311,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":229,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":111,"org.apache.commons.lang3.ArrayUtilsTest.testReverseBooleanRange":289,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":188,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":321,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":139,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":186,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":223,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":206,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfDoubleWithStartIndexTolerance":258,"org.apache.commons.lang3.StringUtilsTest.testRemoveStart":352,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":185,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":350,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":74,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":343,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":140,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":171,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":191,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":90,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":177,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":114,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":105,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testArrayList":241,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":17,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":87,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":202,"org.apache.commons.lang3.builder.DiffBuilderTest.testSimilarObjectIgnoresAppends":84,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testBlank":335,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":201,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfDouble":255,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":324,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneNull":61,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":327,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":12,"org.apache.commons.lang3.text.StrBuilderTest.testAsReader":143,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":106,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsInstance":284,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":319,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":230,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadField":246,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsOnly_CharArray":150,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteAll_char":312,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":224,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringStringArray":159,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":86,"org.apache.commons.lang3.RangeTest.testIntersectionWith":103,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testCopyOnWriteArrayList":242,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":210,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":99,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":178,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":238,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":6,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":174,"org.apache.commons.lang3.ArrayUtilsTest.testToString":244,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":53,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBelow":273,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":348,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":100,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":134,"org.apache.commons.lang3.StringUtilsTest.testJoin_IterableString":299,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":132,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":82,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":227,"org.apache.commons.lang3.exception.ContextedExceptionTest.testContextedException":292,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_object_validInput_2items":56,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":332,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":113,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":9,"org.apache.commons.lang3.text.StrTokenizerTest.testGetContent":63,"org.apache.commons.lang3.ArrayUtilsTest.testIsNotEmptyPrimitives":0,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":10,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":282,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":110,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":266,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":121,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":200,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":153,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":13,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareExcludeFields":69,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":340,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":265,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementShortArray":307,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":52,"org.apache.commons.lang3.text.StrBuilderTest.testSubSequenceIntInt":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":183,"org.apache.commons.lang3.text.StrTokenizerTest.testTSVEmpty":60,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementDoubleArray":251,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":328,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":81,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":109,"org.apache.commons.lang3.text.StrMatcherTest.testCharSetMatcher_String":163,"org.apache.commons.lang3.builder.EqualsBuilderTest.testFloatArray":305,"org.apache.commons.lang3.text.StrTokenizerTest.test8":36,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":215,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":237,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":270,"org.apache.commons.lang3.text.StrTokenizerTest.test5":33,"org.apache.commons.lang3.text.StrTokenizerTest.test4":32,"org.apache.commons.lang3.text.StrTokenizerTest.test7":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":216,"org.apache.commons.lang3.text.StrTokenizerTest.test6":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":217,"org.apache.commons.lang3.text.StrTokenizerTest.test1":29,"org.apache.commons.lang3.ArrayUtilsTest.testToMap":148,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":28,"org.apache.commons.lang3.text.StrTokenizerTest.test3":31,"org.apache.commons.lang3.text.StrTokenizerTest.test2":30,"org.apache.commons.lang3.ClassUtilsTest.testGetClassInvalidArguments":290,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":193,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testIntegerWithTransients":93,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testLinkedList":243,"org.apache.commons.lang3.ArrayUtilsTest.testContainsDouble":263,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":347,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfDoubleWithStartIndex":254,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":88,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":337,"org.apache.commons.lang3.ArrayUtilsTest.testContainsShort":309,"org.apache.commons.lang3.StringUtilsTest.testCaseFunctions":147,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":7,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":8,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareTransients":71,"org.apache.commons.lang3.text.StrBuilderTest.testGetCharsIntIntCharArrayInt":144,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJson":267,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":156,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEquals":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":182,"org.apache.commons.lang3.ArrayUtilsTest.testReverseFloat":296,"org.apache.commons.lang3.ClassUtilsTest.test_getPackageName_Class":165,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testAbove":272,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfDoubleTolerance":260,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":220,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":280,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlHighUnicode":302,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":77,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfShort":310,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":179,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":326,"org.apache.commons.lang3.ConversionTest.testShortToBinary":291,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":323,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":20,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixtureWithTransients":95,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":11,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":22,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":21,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":24,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":23,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":26,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":117,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":181,"org.apache.commons.lang3.ConversionTest.testLongToBinary":145,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":152,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":205,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":125,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":196,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompare":70,"org.apache.commons.lang3.reflect.TypeUtilsTest.testTypesSatisfyVariables":286,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":38,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":44,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":43,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringString":275,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":45,"org.apache.commons.lang3.StringUtilsTest.testRemovePattern":247,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":42,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":240,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":126,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":197,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":349,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":318,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils":317,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":138,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":187,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":98,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":195,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":127,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":226},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1214","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[0],"tindex":"5c83e8b8-2e87-11e6-b376-fb5cb2cfe4bc","method":{"position":"org.apache.commons.lang3.ArrayUtils:3643","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final char[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (array != null) && ((array.int) != 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:220","type":"CtBinaryOperatorImpl","sourcecode":"denominator < 0"},"failures":[1],"tindex":"5c84ac09-2e87-11e6-b376-532f5080d1e6","method":{"position":"org.apache.commons.lang3.time.DateUtils:418","type":"CtMethodImpl","sourcecode":"public static java.util.Date addMonths(final java.util.Date date, final int amount) {\n    if (amount < 0) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.add(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"denominator":"amount"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1226","type":"CtBinaryOperatorImpl","sourcecode":"(((nShorts - 1) * 16) + srcPos) >= 64"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"tindex":"5c84ac0a-2e87-11e6-b376-6f0ef6f4bf64","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2162","type":"CtMethodImpl","sourcecode":"public java.lang.String substring(final int startIndex, int endIndex) {\n    if ((((startIndex - 1) * 16) + startIndex) >= 64) {\n        {\n            endIndex = validateRange(startIndex, endIndex);\n            return new java.lang.String(char[] , startIndex , (endIndex - startIndex));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcPos":"startIndex","nShorts":"startIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:546","type":"CtUnaryOperatorImpl","sourcecode":"!((f.isInfinite()) || (((f.floatValue()) == 0.0F) && (!allZeros)))"},"failures":[],"tindex":"5c84d31b-2e87-11e6-b376-2d57cfcc4779","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:380","type":"CtMethodImpl","sourcecode":"public static java.lang.Object readField(final java.lang.reflect.Field field, final java.lang.Object target, final boolean forceAccess) throws java.lang.IllegalAccessException {\n    if (!((target.isInfinite()) || (((f.floatValue()) == 0.0F) && (!forceAccess)))) {\n        throw new java.lang.IllegalAccessException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.isTrue((field != null), \"The field must not be null\");\n            if (forceAccess && (!(field.isAccessible()))) {\n                field.setAccessible(true);\n            } else {\n                org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(field);\n            }\n            return field.get(target);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"f":"target","allZeros":"forceAccess"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:1009","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[55,56,57,58],"tindex":"5c84fa2c-2e87-11e6-b376-5f96790dde91","method":{"position":"org.apache.commons.lang3.BooleanUtils:939","type":"CtMethodImpl","sourcecode":"public static java.lang.Boolean and(final java.lang.Boolean... array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n            } \n            if ((array.int) == 0) {\n                throw new java.lang.IllegalArgumentException(\"Array is empty\");\n            } \n            try {\n                final boolean[] boolean[] = org.apache.commons.lang3.ArrayUtils.toPrimitive(array);\n                return org.apache.commons.lang3.BooleanUtils.and(primitive) ? java.lang.Boolean.java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n            } catch (final java.lang.NullPointerException ex) {\n                throw new java.lang.IllegalArgumentException(\"The array must not contain any null elements\");\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:4773","type":"CtBinaryOperatorImpl","sourcecode":"index == (org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND)"},"failures":[],"tindex":"5c85213d-2e87-11e6-b376-5faad557be4d","method":{"position":"org.apache.commons.lang3.math.Fraction:576","type":"CtMethodImpl","sourcecode":"private static int greatestCommonDivisor(int u, int v) {\n    if (v == v) {\n        {\n            if ((u == 0) || (v == 0)) {\n                if ((u == (java.lang.Integer.java.lang.Integer.int)) || (v == (java.lang.Integer.java.lang.Integer.int))) {\n                    throw new java.lang.ArithmeticException(\"overflow: gcd is 2^31\");\n                } \n                return (java.lang.Math.abs(u)) + (java.lang.Math.abs(v));\n            } \n            if (((java.lang.Math.abs(u)) == 1) || ((java.lang.Math.abs(v)) == 1)) {\n                return 1;\n            } \n            if (u > 0) {\n                u = -u;\n            } \n            if (v > 0) {\n                v = -v;\n            } \n            int int = 0;\n            while ((((u & 1) == 0) && ((v & 1) == 0)) && (k < 31)) {\n                u /= 2;\n                v /= 2;\n                k++;\n            }\n            if (k == 31) {\n                throw new java.lang.ArithmeticException(\"overflow: gcd is 2^31\");\n            } \n            int int = (u & 1) == 1 ? v : -(u / 2);\n            do {\n                while ((t & 1) == 0) {\n                    t /= 2;\n                }\n                if (t > 0) {\n                    u = -t;\n                } else {\n                    v = t;\n                }\n                t = (v - u) / 2;\n            } while (t != 0 );\n            return (-u) * (1 << k);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND":"v","index":"v"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2302","type":"CtBinaryOperatorImpl","sourcecode":"startIndex >= (size)"},"failures":[],"tindex":"5c85484e-2e87-11e6-b376-7bf616e7339b","method":{"position":"org.apache.commons.lang3.mutable.MutableInt:158","type":"CtMethodImpl","sourcecode":"public void subtract(final int operand) {\n    if (operand >= operand) {\n        {\n            org.apache.commons.lang3.mutable.MutableInt.this.int -= operand;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"operand","size":"operand"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.EnumUtils:91","type":"CtBinaryOperatorImpl","sourcecode":"enumName == null"},"failures":[],"tindex":"5c85484f-2e87-11e6-b376-539f2b7e336c","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1317","type":"CtMethodImpl","sourcecode":"protected void appendSummary(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final double[] array) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendSummarySize(buffer, fieldName, array.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumName":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1575","type":"CtBinaryOperatorImpl","sourcecode":"t1 instanceof java.lang.reflect.ParameterizedType"},"failures":[],"tindex":"5c856f60-2e87-11e6-b376-37390784ba73","method":{"position":"org.apache.commons.lang3.reflect.TypeLiteral:99","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic final boolean equals(java.lang.Object obj) {\n    if (obj instanceof java.lang.reflect.ParameterizedType) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.lang3.reflect.TypeLiteral.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.lang3.reflect.TypeLiteral) == false) {\n                return false;\n            } \n            final org.apache.commons.lang3.reflect.TypeLiteral<?> org.apache.commons.lang3.reflect.TypeLiteral<?> = ((org.apache.commons.lang3.reflect.TypeLiteral<?>)(obj));\n            return org.apache.commons.lang3.reflect.TypeUtils.equals(java.lang.reflect.Type, other.java.lang.reflect.Type);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"t1":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:359","type":"CtBinaryOperatorImpl","sourcecode":"((pos1 != pos2) && (pos1 >= 0)) && (pos2 >= 0)"},"failures":[],"tindex":"5c859671-2e87-11e6-b376-93917bd0660d","method":{"position":"org.apache.commons.lang3.text.StrBuilder:308","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic char charAt(final int index) {\n    if (index < 0) {\n        {\n            if (((index != index) && (pos1 >= 0)) && (pos2 >= 0)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((index < 0) || (index >= (length()))) {\n                        throw new java.lang.StringIndexOutOfBoundsException(index);\n                    } \n                    return char[][index];\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pos1":"index","pos2":"index"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:452","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[],"tindex":"5c85bd82-2e87-11e6-b376-37f74de6d672","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:539","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final boolean[] array) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(fieldName)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, array, null);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1153","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[0],"tindex":"5c85bd83-2e87-11e6-b376-e116107cee3a","method":{"position":"org.apache.commons.lang3.ArrayUtils:3654","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final byte[] array) {\n    if (array == null) {\n        {\n            return (array != null) && ((array.int) != 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:452","type":"CtBinaryOperatorImpl","sourcecode":"(isEquals) == false"},"failures":[2,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,59,27,60,28,61,29,30,31,32,33,34,35,36,37,38,62,39,40,41,42,43,44,45,46,47,48,49,50,51,63,52,53,54,64],"tindex":"5c85e494-2e87-11e6-b376-2b772f3526b9","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:1025","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrTokenizer setEmptyTokenAsNull(final boolean emptyAsNull) {\n    if (emptyAsNull == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.text.StrTokenizer.this.boolean = emptyAsNull;\n            return org.apache.commons.lang3.text.StrTokenizer.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isEquals":"emptyAsNull"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.SerializationUtils:160","type":"CtBinaryOperatorImpl","sourcecode":"out != null"},"failures":[],"tindex":"5c860ba5-2e87-11e6-b376-d5572422a544","method":{"position":"org.apache.commons.lang3.event.EventListenerSupport:224","type":"CtMethodImpl","sourcecode":"private void writeObject(final java.io.ObjectOutputStream objectOutputStream) throws java.io.IOException {\n    if (objectOutputStream != null) {\n        {\n            final java.util.ArrayList<L> java.util.ArrayList<L> = new java.util.ArrayList<L>();\n            java.io.ObjectOutputStream java.io.ObjectOutputStream = new java.io.ObjectOutputStream(new java.io.ByteArrayOutputStream());\n            for (final L L : java.util.List<L>) {\n                try {\n                    testObjectOutputStream.writeObject(listener);\n                    serializableListeners.add(listener);\n                } catch (final java.io.IOException exception) {\n                    testObjectOutputStream = new java.io.ObjectOutputStream(new java.io.ByteArrayOutputStream());\n                }\n            }\n            objectOutputStream.writeObject(serializableListeners.toArray(L[]));\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"out":"objectOutputStream"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:585","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[],"tindex":"5c860ba6-2e87-11e6-b376-bf4ac0c15b10","method":{"position":"org.apache.commons.lang3.StringUtils:2752","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] splitByWholeSeparatorPreserveAllTokens(final java.lang.String str, final java.lang.String separator) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n        {\n            return org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(str, separator, (-1), true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1436","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96],"tindex":"5c8632b7-2e87-11e6-b376-851434c5407e","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:195","type":"CtMethodImpl","sourcecode":"static void unregister(final java.lang.Object lhs, final java.lang.Object rhs) {\n    if (lhs == null) {\n        {\n            java.util.Set<org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey>> java.util.Set<org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey>> = org.apache.commons.lang3.builder.EqualsBuilder.getRegistry();\n            if (registry != null) {\n                final org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey> org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey> = org.apache.commons.lang3.builder.EqualsBuilder.getRegisterPair(lhs, rhs);\n                registry.remove(pair);\n                synchronized(org.apache.commons.lang3.builder.EqualsBuilder.org.apache.commons.lang3.builder.EqualsBuilder.java.lang.Class) {\n                    registry = org.apache.commons.lang3.builder.EqualsBuilder.getRegistry();\n                    if ((registry != null) && (registry.isEmpty())) {\n                        org.apache.commons.lang3.builder.EqualsBuilder.org.apache.commons.lang3.builder.EqualsBuilder.java.lang.ThreadLocal<java.util.Set<org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey>>>.remove();\n                    } \n                }\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"lhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:297","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[97],"tindex":"5c8659c8-2e87-11e6-b376-19e237ff0ee8","method":{"position":"org.apache.commons.lang3.StringUtils:5050","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static java.lang.String chomp(final java.lang.String str, final java.lang.String separator) {\n    if (str == null) {\n        {\n            return org.apache.commons.lang3.StringUtils.removeEnd(str, separator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5782","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isLowerCase(ch)"},"failures":[],"tindex":"5c8680d9-2e87-11e6-b376-49c3ffe954d1","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2289","type":"CtMethodImpl","sourcecode":"public int indexOf(final char ch) {\n    if (java.lang.Character.isLowerCase(ch)) {\n        {\n            return indexOf(ch, 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomStringUtils:256","type":"CtBinaryOperatorImpl","sourcecode":"chars == null"},"failures":[98,98,99,99,100],"tindex":"5c8680da-2e87-11e6-b376-65ee424fed31","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:345","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final char[] array) {\n    if (array == null) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, array, null);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chars":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4533","type":"CtBinaryOperatorImpl","sourcecode":"(--max) == 0"},"failures":[],"tindex":"5c86a7eb-2e87-11e6-b376-8352a1d9ef72","method":{"position":"org.apache.commons.lang3.StringUtils:3661","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final int[] array, final char separator, final int startIndex, final int endIndex) {\n    if ((--endIndex) == 0) {\n        {\n            if (array == null) {\n                return null;\n            } \n            final int int = endIndex - startIndex;\n            if (noOfItems <= 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder((noOfItems * 16));\n            for (int int = startIndex ; i < endIndex ; i++) {\n                if (i > startIndex) {\n                    buf.append(separator);\n                } \n                buf.append(array[i]);\n            }\n            return buf.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"max":"endIndex"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:199","type":"CtBinaryOperatorImpl","sourcecode":"(tmp.length()) != (duration.length())"},"failures":[],"tindex":"5c86cefc-2e87-11e6-b376-95555b88ecb9","method":{"position":"org.apache.commons.lang3.Validate:505","type":"CtMethodImpl","sourcecode":"public static <T>T[] noNullElements(final T[] array, final java.lang.String message, final java.lang.Object... values) {\n    if ((message.length()) != (message.length())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.notNull(array);\n            for (int int = 0 ; i < (array.int) ; i++) {\n                if ((array[i]) == null) {\n                    final java.lang.Object[] java.lang.Object[] = org.apache.commons.lang3.ArrayUtils.add(values, java.lang.Integer.valueOf(i));\n                    throw new java.lang.IllegalArgumentException(java.lang.String.format(message, values2));\n                } \n            }\n            return array;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"duration":"message","tmp":"message"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:7364","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"5c86cefd-2e87-11e6-b376-03244a84ad12","method":{"position":"org.apache.commons.lang3.time.FormatCache:69","type":"CtMethodImpl","sourcecode":"public F getInstance(final java.lang.String pattern, java.util.TimeZone timeZone, java.util.Locale locale) {\n    if (pattern == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (pattern == null) {\n                throw new java.lang.NullPointerException(\"pattern must not be null\");\n            } \n            if (timeZone == null) {\n                timeZone = java.util.TimeZone.getDefault();\n            } \n            if (locale == null) {\n                locale = java.util.Locale.getDefault();\n            } \n            final org.apache.commons.lang3.time.FormatCache.MultipartKey org.apache.commons.lang3.time.FormatCache.MultipartKey = new org.apache.commons.lang3.time.FormatCache.MultipartKey(pattern , timeZone , locale);\n            F F = java.util.concurrent.ConcurrentMap<org.apache.commons.lang3.time.FormatCache.MultipartKey, F>.get(key);\n            if (format == null) {\n                format = createInstance(pattern, timeZone, locale);\n                final F F = java.util.concurrent.ConcurrentMap<org.apache.commons.lang3.time.FormatCache.MultipartKey, F>.putIfAbsent(key, format);\n                if (previousValue != null) {\n                    format = previousValue;\n                } \n            } \n            return format;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"pattern"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.JavaVersion:140","type":"CtInvocationImpl","sourcecode":"\"1.4\".equals(nom)"},"failures":[101],"tindex":"5c86f60e-2e87-11e6-b376-5d1b9a72a54e","method":{"position":"org.apache.commons.lang3.time.DateFormatUtils:141","type":"CtMethodImpl","sourcecode":"public static java.lang.String formatUTC(final java.util.Date date, final java.lang.String pattern) {\n    if (\"1.4\".equals(pattern)) {\n        {\n            return org.apache.commons.lang3.time.DateFormatUtils.format(date, pattern, org.apache.commons.lang3.time.DateFormatUtils.org.apache.commons.lang3.time.DateFormatUtils.java.util.TimeZone, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nom":"pattern"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Range:332","type":"CtBinaryOperatorImpl","sourcecode":"otherRange == null"},"failures":[102,103,104],"tindex":"5c86f60f-2e87-11e6-b376-ed56b02d9c11","method":{"position":"org.apache.commons.lang3.Range:350","type":"CtMethodImpl","sourcecode":"public boolean isOverlappedBy(final org.apache.commons.lang3.Range<T> otherRange) {\n    if (otherRange == null) {\n        {\n            if (otherRange == null) {\n                return false;\n            } \n            return ((otherRange.contains(T)) || (otherRange.contains(T))) || (contains(otherRange.T));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"otherRange":"otherRange"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6505","type":"CtBinaryOperatorImpl","sourcecode":"str2 == null"},"failures":[105,105,106,107,108,108,109,109,110,111,112,113,114,115,116,117,117,118,119,120,121,122,123,124,125,126,127,128,129],"tindex":"5c871d20-2e87-11e6-b376-97797c9c9740","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:745","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final byte value) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str2":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.mutable.MutableInt:236","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof org.apache.commons.lang3.mutable.MutableInt"},"failures":[],"tindex":"5c871d21-2e87-11e6-b376-712f9a86d610","method":{"position":"org.apache.commons.lang3.AnnotationUtils:287","type":"CtMethodImpl","sourcecode":"private static boolean arrayMemberEquals(final java.lang.Class<?> componentType, final java.lang.Object o1, final java.lang.Object o2) {\n    if (o1 instanceof org.apache.commons.lang3.mutable.MutableInt) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (componentType.isAnnotation()) {\n                return org.apache.commons.lang3.AnnotationUtils.annotationArrayMemberEquals(((java.lang.annotation.Annotation[])(o1)), ((java.lang.annotation.Annotation[])(o2)));\n            } \n            if (componentType.equals(java.lang.Byte.java.lang.Byte.java.lang.Class<java.lang.Byte>)) {\n                return java.util.Arrays.equals(((byte[])(o1)), ((byte[])(o2)));\n            } \n            if (componentType.equals(java.lang.Short.java.lang.Short.java.lang.Class<java.lang.Short>)) {\n                return java.util.Arrays.equals(((short[])(o1)), ((short[])(o2)));\n            } \n            if (componentType.equals(java.lang.Integer.java.lang.Integer.java.lang.Class<java.lang.Integer>)) {\n                return java.util.Arrays.equals(((int[])(o1)), ((int[])(o2)));\n            } \n            if (componentType.equals(java.lang.Character.java.lang.Character.java.lang.Class<java.lang.Character>)) {\n                return java.util.Arrays.equals(((char[])(o1)), ((char[])(o2)));\n            } \n            if (componentType.equals(java.lang.Long.java.lang.Long.java.lang.Class<java.lang.Long>)) {\n                return java.util.Arrays.equals(((long[])(o1)), ((long[])(o2)));\n            } \n            if (componentType.equals(java.lang.Float.java.lang.Float.java.lang.Class<java.lang.Float>)) {\n                return java.util.Arrays.equals(((float[])(o1)), ((float[])(o2)));\n            } \n            if (componentType.equals(java.lang.Double.java.lang.Double.java.lang.Class<java.lang.Double>)) {\n                return java.util.Arrays.equals(((double[])(o1)), ((double[])(o2)));\n            } \n            if (componentType.equals(java.lang.Boolean.java.lang.Boolean.java.lang.Class<java.lang.Boolean>)) {\n                return java.util.Arrays.equals(((boolean[])(o1)), ((boolean[])(o2)));\n            } \n            return java.util.Arrays.equals(((java.lang.Object[])(o1)), ((java.lang.Object[])(o2)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"o1"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:262","type":"CtBinaryOperatorImpl","sourcecode":"value == trueValue"},"failures":[130,131,132,133,134,135,136,137,138,139,140,141,142,143,144],"tindex":"5c874432-2e87-11e6-b376-1f69442732ef","method":{"position":"org.apache.commons.lang3.text.StrBuilder:411","type":"CtMethodImpl","sourcecode":"public void getChars(final int startIndex, final int endIndex, final char[] destination, final int destinationIndex) {\n    if (endIndex == destinationIndex) {\n        {\n            if (startIndex < 0) {\n                throw new java.lang.StringIndexOutOfBoundsException(startIndex);\n            } \n            if ((endIndex < 0) || (endIndex > (length()))) {\n                throw new java.lang.StringIndexOutOfBoundsException(endIndex);\n            } \n            if (startIndex > endIndex) {\n                throw new java.lang.StringIndexOutOfBoundsException(\"end < start\");\n            } \n            java.lang.System.arraycopy(char[], startIndex, destination, destinationIndex, (endIndex - startIndex));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trueValue":"destinationIndex","value":"endIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2202","type":"CtBinaryOperatorImpl","sourcecode":"length <= 0"},"failures":[145],"tindex":"5c874433-2e87-11e6-b376-d984df4c9971","method":{"position":"org.apache.commons.lang3.Conversion:1550","type":"CtMethodImpl","sourcecode":"public static boolean[] longToBinary(final long src, final int srcPos, final boolean[] dst, final int dstPos, final int nBools) {\n    if (srcPos <= 0) {\n        {\n            if (0 == nBools) {\n                return dst;\n            } \n            if (((nBools - 1) + srcPos) >= 64) {\n                throw new java.lang.IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 64\");\n            } \n            int int = 0;\n            for (int int = 0 ; i < nBools ; i++) {\n                shift = (i * 1) + srcPos;\n                dst[(dstPos + i)] = (1 & (src >> shift)) != 0;\n            }\n            return dst;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"srcPos"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:219","type":"CtBinaryOperatorImpl","sourcecode":"(cal1 == null) || (cal2 == null)"},"failures":[146],"tindex":"5c876b44-2e87-11e6-b376-13d6dabea280","method":{"position":"org.apache.commons.lang3.time.DateUtils:218","type":"CtMethodImpl","sourcecode":"public static boolean isSameInstant(final java.util.Calendar cal1, final java.util.Calendar cal2) {\n    if ((cal1 == null) || (cal2 == null)) {\n        {\n            if ((cal1 == null) || (cal2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            return (cal1.getTime().getTime()) == (cal2.getTime().getTime());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cal2":"cal2","cal1":"cal1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:728","type":"CtBinaryOperatorImpl","sourcecode":"classes == null"},"failures":[],"tindex":"5c876b45-2e87-11e6-b376-c56b2e767f24","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:78","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeBuilder withLowerBounds(java.lang.reflect.Type... bounds) {\n    if (bounds == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (bounds == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeBuilder.this.java.lang.reflect.Type[] = bounds;\n                    return org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeBuilder.this;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classes":"bounds"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:423","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[147],"tindex":"5c876b46-2e87-11e6-b376-ed22029ccb0c","method":{"position":"org.apache.commons.lang3.StringUtils:5636","type":"CtMethodImpl","sourcecode":"public static java.lang.String lowerCase(final java.lang.String str) {\n    if (str == null) {\n        {\n            if (str == null) {\n                return null;\n            } \n            return str.toLowerCase();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:940","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[148],"tindex":"5c879257-2e87-11e6-b376-df7eb60f9d9e","method":{"position":"org.apache.commons.lang3.ArrayUtils:237","type":"CtMethodImpl","sourcecode":"public static java.util.Map<java.lang.Object, java.lang.Object> toMap(final java.lang.Object[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                {\n                    if (array == null) {\n                        return null;\n                    } \n                    final java.util.Map<java.lang.Object, java.lang.Object> java.util.Map<java.lang.Object, java.lang.Object> = new java.util.HashMap<java.lang.Object, java.lang.Object>(((int)((array.int) * 1.5)));\n                    for (int int = 0 ; i < (array.int) ; i++) {\n                        final java.lang.Object java.lang.Object = array[i];\n                        if (object instanceof java.util.Map.Entry<?, ?>) {\n                            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(object));\n                            map.put(entry.getKey(), entry.getValue());\n                        } else if (object instanceof java.lang.Object[]) {\n                            final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(object));\n                            if ((entry.int) < 2) {\n                                throw new java.lang.IllegalArgumentException(((((\"Array element \" + i) + \", '\") + object) + \"', has a length less than 2\"));\n                            } \n                            map.put(entry[0], entry[1]);\n                        } else {\n                            throw new java.lang.IllegalArgumentException(((((\"Array element \" + i) + \", '\") + object) + \"', is neither of type Map.Entry nor an Array\"));\n                        }\n                    }\n                    return map;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2231","type":"CtBinaryOperatorImpl","sourcecode":"(length <= 0) || (index >= (size))"},"failures":[],"tindex":"5c879258-2e87-11e6-b376-cfa56983cb07","method":{"position":"org.apache.commons.lang3.ArrayUtils:2193","type":"CtMethodImpl","sourcecode":"public static boolean contains(final int[] array, final int valueToFind) {\n    if ((valueToFind <= 0) || (valueToFind >= valueToFind)) {\n        {\n            return (org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind)) != (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"valueToFind","length":"valueToFind","index":"valueToFind"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:732","type":"CtBinaryOperatorImpl","sourcecode":"str != null"},"failures":[],"tindex":"5c87b969-2e87-11e6-b376-2dfc4d69870b","method":{"position":"org.apache.commons.lang3.text.StrBuilder:890","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendln(final java.lang.String format, final java.lang.Object... objs) {\n    if (format != null) {\n        {\n            return append(format, objs).appendNewLine();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"format"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:739","type":"CtBinaryOperatorImpl","sourcecode":"(lhs == null) || (rhs == null)"},"failures":[149],"tindex":"5c87b96a-2e87-11e6-b376-830c21d68dfb","method":{"position":"org.apache.commons.lang3.math.NumberUtils:982","type":"CtMethodImpl","sourcecode":"public static short max(final short[] array) {\n    if ((array == null) || (array == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.math.NumberUtils.validateArray(array);\n            short short = array[0];\n            for (int int = 1 ; i < (array.int) ; i++) {\n                if ((array[i]) > max) {\n                    max = array[i];\n                } \n            }\n            return max;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array","rhs":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:584","type":"CtBinaryOperatorImpl","sourcecode":"(dec == null) && (exp == null)"},"failures":[150],"tindex":"5c87b96b-2e87-11e6-b376-23fc518671bb","method":{"position":"org.apache.commons.lang3.StringUtils:1805","type":"CtMethodImpl","sourcecode":"public static boolean containsOnly(final java.lang.CharSequence cs, final char... valid) {\n    if ((cs == null) && (cs == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((valid == null) || (cs == null)) {\n                return false;\n            } \n            if ((cs.length()) == 0) {\n                return true;\n            } \n            if ((valid.int) == 0) {\n                return false;\n            } \n            return (org.apache.commons.lang3.StringUtils.indexOfAnyBut(cs, valid)) == (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dec":"cs","exp":"cs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5179","type":"CtBinaryOperatorImpl","sourcecode":"(str == null) || (separator == null)"},"failures":[151,152,153,154,155,156,157,158],"tindex":"5c87e07c-2e87-11e6-b376-214d7f19c423","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2001","type":"CtMethodImpl","sourcecode":"protected void setSizeStartText(java.lang.String sizeStartText) {\n    if ((sizeStartText == null) || (sizeStartText == null)) {\n        {\n            if (sizeStartText == null) {\n                sizeStartText = \"\";\n            } \n            org.apache.commons.lang3.builder.ToStringStyle.this.java.lang.String = sizeStartText;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"sizeStartText","separator":"sizeStartText"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Range:332","type":"CtBinaryOperatorImpl","sourcecode":"otherRange == null"},"failures":[103,104],"tindex":"5c87e07d-2e87-11e6-b376-3bba87a3499c","method":{"position":"org.apache.commons.lang3.Range:382","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.Range<T> intersectionWith(final org.apache.commons.lang3.Range<T> other) {\n    if (other == null) {\n        {\n            if (!(org.apache.commons.lang3.Range.this.isOverlappedBy(other))) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(\"Cannot calculate intersection with non-overlapping range %s\", other));\n            } \n            if (org.apache.commons.lang3.Range.this.equals(other)) {\n                return org.apache.commons.lang3.Range.this;\n            } \n            final T T = (getComparator().compare(T, other.T)) < 0 ? other.T : T;\n            final T T = (getComparator().compare(T, other.T)) < 0 ? T : other.T;\n            return org.apache.commons.lang3.Range.between(min, max, getComparator());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"otherRange":"other"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:975","type":"CtBinaryOperatorImpl","sourcecode":"superToString != null"},"failures":[159],"tindex":"5c88078e-2e87-11e6-b376-21c7ec7ff28b","method":{"position":"org.apache.commons.lang3.StringUtils:1963","type":"CtMethodImpl","sourcecode":"public static int indexOfAny(final java.lang.CharSequence str, final java.lang.CharSequence... searchStrs) {\n    if (str != null) {\n        {\n            if ((str == null) || (searchStrs == null)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            final int int = searchStrs.int;\n            int int = java.lang.Integer.java.lang.Integer.int;\n            int int = 0;\n            for (int int = 0 ; i < sz ; i++) {\n                final java.lang.CharSequence java.lang.CharSequence = searchStrs[i];\n                if (search == null) {\n                    continue;\n                } \n                tmp = org.apache.commons.lang3.CharSequenceUtils.indexOf(str, search, 0);\n                if (tmp == (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) {\n                    continue;\n                } \n                if (tmp < ret) {\n                    ret = tmp;\n                } \n            }\n            return ret == (java.lang.Integer.java.lang.Integer.int) ? org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int : ret;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"superToString":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:726","type":"CtBinaryOperatorImpl","sourcecode":"strLen > 0"},"failures":[160,161],"tindex":"5c88078f-2e87-11e6-b376-d5f8cf9432f6","method":{"position":"org.apache.commons.lang3.BitField:65","type":"CtMethodImpl","sourcecode":"public int getValue(final int holder) {\n    if (holder > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (getRawValue(holder)) >> (int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"strLen":"holder"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3076","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[162],"tindex":"5c882ea0-2e87-11e6-b376-3190e5cf6ea7","method":{"position":"org.apache.commons.lang3.SystemUtils:1464","type":"CtMethodImpl","sourcecode":"static boolean isOSNameMatch(final java.lang.String osName, final java.lang.String osNamePrefix) {\n    if (osName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (osName == null) {\n                return false;\n            } \n            return osName.startsWith(osNamePrefix);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"osName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:584","type":"CtBinaryOperatorImpl","sourcecode":"(dec == null) && (exp == null)"},"failures":[163],"tindex":"5c882ea1-2e87-11e6-b376-75cab738ba77","method":{"position":"org.apache.commons.lang3.text.StrMatcher:189","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.StrMatcher charSetMatcher(final java.lang.String chars) {\n    if ((chars == null) && (chars == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(chars)) {\n                return org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher;\n            } \n            if ((chars.length()) == 1) {\n                return new org.apache.commons.lang3.text.StrMatcher.CharMatcher(chars.charAt(0));\n            } \n            return new org.apache.commons.lang3.text.StrMatcher.CharSetMatcher(chars.toCharArray());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dec":"chars","exp":"chars"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1773","type":"CtUnaryOperatorImpl","sourcecode":"!chFound"},"failures":[],"tindex":"5c882ea2-2e87-11e6-b376-3b2392dd49df","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:405","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setFieldSeparatorAtEnd(final boolean fieldSeparatorAtEnd) {\n    if (!fieldSeparatorAtEnd) {\n        {\n            super.setFieldSeparatorAtEnd(fieldSeparatorAtEnd);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chFound":"fieldSeparatorAtEnd"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.MethodUtils:392","type":"CtInvocationImpl","sourcecode":"java.lang.reflect.Modifier.isPublic(parentClass.getModifiers())"},"failures":[164,165],"tindex":"5c8855b3-2e87-11e6-b376-1dd8174946a8","method":{"position":"org.apache.commons.lang3.ClassUtils:280","type":"CtMethodImpl","sourcecode":"public static java.lang.String getPackageName(final java.lang.Class<?> cls) {\n    if (java.lang.reflect.Modifier.isPublic(cls.getModifiers())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (cls == null) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            return org.apache.commons.lang3.ClassUtils.getPackageName(cls.getName());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"parentClass":"cls"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:380","type":"CtBinaryOperatorImpl","sourcecode":"ch == null"},"failures":[],"tindex":"5c8855b4-2e87-11e6-b376-23c24185ba90","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:955","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder appendAsObjectToString(final java.lang.Object srcObject) {\n    if (srcObject == null) {\n        {\n            org.apache.commons.lang3.ObjectUtils.identityToString(org.apache.commons.lang3.builder.ToStringBuilder.this.getStringBuffer(), srcObject);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"srcObject"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:1009","type":"CtBinaryOperatorImpl","sourcecode":"toString != null"},"failures":[166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,151,153,154,155,156,98,98,99,99,100,181,181,182,183,183,184,184,185,185,186,187,188,189,189,190,190,191,191,192,192,105,105,106,107,193,194,194,195,195,196,108,108,197,197,198,198,199,200,200,201,202,202,203,204,205,206,206,207,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,221,222,223,223,224,224,225,109,110,111,112,113,114,115,115,116,116,117,117,118,119,119,120,121,121,122,123,124,125,126,127,128,128,129,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,29,30,31,32,33,34,35,36,244],"tindex":"5c8855b5-2e87-11e6-b376-6d3757e8e31c","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1521","type":"CtMethodImpl","sourcecode":"protected void appendFieldStart(final java.lang.StringBuffer buffer, final java.lang.String fieldName) {\n    if (fieldName != null) {\n        {\n            if ((boolean) && (fieldName != null)) {\n                buffer.append(fieldName);\n                buffer.append(java.lang.String);\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toString":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1548","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[245],"tindex":"5c887cc6-2e87-11e6-b376-6b6db58b56fc","method":{"position":"org.apache.commons.lang3.BooleanUtils:1040","type":"CtMethodImpl","sourcecode":"public static boolean xor(final boolean... array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n            } \n            if ((array.int) == 0) {\n                throw new java.lang.IllegalArgumentException(\"Array is empty\");\n            } \n            boolean boolean = false;\n            for (final boolean boolean : array) {\n                result ^= element;\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:54","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[246],"tindex":"5c88a3d7-2e87-11e6-b376-938177f29e62","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:360","type":"CtMethodImpl","sourcecode":"public static java.lang.Object readField(final java.lang.reflect.Field field, final java.lang.Object target) throws java.lang.IllegalAccessException {\n    if (target == null) {\n        throw new java.lang.IllegalAccessException();\n    } else {\n        {\n            if (target == null) {\n                {\n                    return org.apache.commons.lang3.reflect.FieldUtils.readField(field, target, false);\n                }\n            } else {\n                throw new java.lang.IllegalAccessException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"target"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:779","type":"CtBinaryOperatorImpl","sourcecode":"delimLen > 0"},"failures":[],"tindex":"5c88a3d8-2e87-11e6-b376-2f42b1f85ed9","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1081","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final int value) {\n    if (value > 0) {\n        {\n            org.apache.commons.lang3.time.FastDatePrinter.NumberRule.appendTo(buffer, value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delimLen":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1135","type":"CtBinaryOperatorImpl","sourcecode":"b < a"},"failures":[],"tindex":"5c88a3d9-2e87-11e6-b376-e18976d99b05","method":{"position":"org.apache.commons.lang3.BitField:83","type":"CtMethodImpl","sourcecode":"public short getShortValue(final short holder) {\n    if (holder < holder) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((short)(getValue(holder)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"holder","b":"holder"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:7206","type":"CtBinaryOperatorImpl","sourcecode":"(prefix.length()) > (str.length())"},"failures":[],"tindex":"5c88a3da-2e87-11e6-b376-cb93a6b1c938","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:150","type":"CtMethodImpl","sourcecode":"static boolean isRegistered(final java.lang.Object value) {\n    if ((value.length()) > (value.length())) {\n        {\n            final java.util.Set<org.apache.commons.lang3.builder.IDKey> java.util.Set<org.apache.commons.lang3.builder.IDKey> = org.apache.commons.lang3.builder.HashCodeBuilder.getRegistry();\n            return (registry != null) && (registry.contains(new org.apache.commons.lang3.builder.IDKey(value)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"value","prefix":"value"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2373","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(separator))"},"failures":[247,248],"tindex":"5c88caeb-2e87-11e6-b376-755929776930","method":{"position":"org.apache.commons.lang3.StringUtils:4441","type":"CtMethodImpl","sourcecode":"public static java.lang.String replacePattern(final java.lang.String source, final java.lang.String regex, final java.lang.String replacement) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(source)) || (org.apache.commons.lang3.StringUtils.isEmpty(source))) {\n        {\n            return java.util.regex.Pattern.compile(regex, java.util.regex.Pattern.java.util.regex.Pattern.int).matcher(source).replaceAll(replacement);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"source","separator":"source"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:778","type":"CtBinaryOperatorImpl","sourcecode":"classes == null"},"failures":[249],"tindex":"5c88caec-2e87-11e6-b376-f38cc63b3346","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:639","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.EqualsBuilder append(final java.lang.Object[] lhs, final java.lang.Object[] rhs) {\n    if (rhs == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((boolean) == false) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if ((lhs == null) || (rhs == null)) {\n                org.apache.commons.lang3.builder.EqualsBuilder.this.setEquals(false);\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                org.apache.commons.lang3.builder.EqualsBuilder.this.setEquals(false);\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && (boolean) ; ++i) {\n                append(lhs[i], rhs[i]);\n            }\n            return org.apache.commons.lang3.builder.EqualsBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classes":"rhs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:496","type":"CtBinaryOperatorImpl","sourcecode":"(numerator) < 0"},"failures":[250],"tindex":"5c88f1fd-2e87-11e6-b376-ad8c68871143","method":{"position":"org.apache.commons.lang3.Validate:776","type":"CtMethodImpl","sourcecode":"public static <T extends java.lang.CharSequence>T validIndex(final T chars, final int index) {\n    if (index < 0) {\n        {\n            return org.apache.commons.lang3.Validate.validIndex(chars, index, org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.java.lang.String, java.lang.Integer.valueOf(index));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"numerator":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3916","type":"CtBinaryOperatorImpl","sourcecode":"i > startIndex"},"failures":[],"tindex":"5c88f1fe-2e87-11e6-b376-1972f46b7ab5","method":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:63","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.translate.UnicodeEscaper below(final int codepoint) {\n    if (codepoint > codepoint) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(codepoint, java.lang.Integer.java.lang.Integer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"codepoint","i":"codepoint"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:829","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[251,252,253,254,255,256,257,258,259,260,261,262,263],"tindex":"5c88f1ff-2e87-11e6-b376-d5c16ce14fd7","method":{"position":"org.apache.commons.lang3.ArrayUtils:3564","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final double[] array) {\n    if (array == array) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (array == null) || ((array.int) == 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array","rhs":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1089","type":"CtBinaryOperatorImpl","sourcecode":"offset != 0"},"failures":[264,265,266,267,268,269,270,271,272,273,274],"tindex":"5c891910-2e87-11e6-b376-f9a9a6d5c8a1","method":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:103","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean translate(final int codepoint, final java.io.Writer out) throws java.io.IOException {\n    if (codepoint != 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (boolean) {\n                if ((codepoint < (int)) || (codepoint > (int))) {\n                    return false;\n                } \n            } else {\n                if ((codepoint >= (int)) && (codepoint <= (int))) {\n                    return false;\n                } \n            }\n            if (codepoint > 65535) {\n                out.write(toUtf16Escape(codepoint));\n            } else if (codepoint > 4095) {\n                out.write((\"\\\\u\" + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(codepoint))));\n            } else if (codepoint > 255) {\n                out.write((\"\\\\u0\" + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(codepoint))));\n            } else if (codepoint > 15) {\n                out.write((\"\\\\u00\" + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(codepoint))));\n            } else {\n                out.write((\"\\\\u000\" + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(codepoint))));\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"offset":"codepoint"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.SerializationUtils:147","type":"CtBinaryOperatorImpl","sourcecode":"outputStream == null"},"failures":[],"tindex":"5c891911-2e87-11e6-b376-1b8fff8ac219","method":{"position":"org.apache.commons.lang3.time.FormatCache:241","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.Arrays.equals(java.lang.Object[], ((org.apache.commons.lang3.time.FormatCache.MultipartKey)(obj)).java.lang.Object[]);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"outputStream":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:507","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[197,197],"tindex":"5c891912-2e87-11e6-b376-273b1d85aaa4","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:617","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final char value) {\n    if (fieldName == null) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, value);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:661","type":"CtBinaryOperatorImpl","sourcecode":"falseString == null"},"failures":[275,276,277,278],"tindex":"5c894023-2e87-11e6-b376-694822c9a145","method":{"position":"org.apache.commons.lang3.CharSetUtils:221","type":"CtMethodImpl","sourcecode":"private static java.lang.String modify(final java.lang.String str, final java.lang.String[] set, final boolean expect) {\n    if (str == null) {\n        {\n            final org.apache.commons.lang3.CharSet org.apache.commons.lang3.CharSet = org.apache.commons.lang3.CharSet.getInstance(set);\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(str.length());\n            final char[] char[] = str.toCharArray();\n            final int int = chrs.int;\n            for (int int = 0 ; i < sz ; i++) {\n                if ((chars.contains(chrs[i])) == expect) {\n                    buffer.append(chrs[i]);\n                } \n            }\n            return buffer.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"falseString":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.MethodUtils:527","type":"CtBinaryOperatorImpl","sourcecode":"m == null"},"failures":[],"tindex":"5c894024-2e87-11e6-b376-67f6b5c40c5f","method":{"position":"org.apache.commons.lang3.exception.DefaultExceptionContext:62","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic org.apache.commons.lang3.exception.DefaultExceptionContext setContextValue(final java.lang.String label, final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Iterator<org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>> java.util.Iterator<org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>> = java.util.List<org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>>.iterator() ; iter.hasNext() ; ) {\n                final org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object> org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object> = iter.next();\n                if (org.apache.commons.lang3.StringUtils.equals(label, p.getKey())) {\n                    iter.remove();\n                } \n            }\n            addContextValue(label, value);\n            return org.apache.commons.lang3.exception.DefaultExceptionContext.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"m":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1909","type":"CtBinaryOperatorImpl","sourcecode":"objectToFind == null"},"failures":[279,280],"tindex":"5c894025-2e87-11e6-b376-edefa000a26e","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:197","type":"CtMethodImpl","sourcecode":"public static <V>java.lang.String replace(final java.lang.Object source, final java.util.Map<java.lang.String, V> valueMap, final java.lang.String prefix, final java.lang.String suffix) {\n    if (source == null) {\n        {\n            return new org.apache.commons.lang3.text.StrSubstitutor(valueMap , prefix , suffix).replace(source);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectToFind":"source"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:292","type":"CtUnaryOperatorImpl","sourcecode":"!(java.lang.reflect.Modifier.isPublic(cls.getModifiers()))"},"failures":[281,282,283,284,285,286,287,288],"tindex":"5c896736-2e87-11e6-b376-c72fe42f1545","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1047","type":"CtMethodImpl","sourcecode":"private static java.lang.reflect.Type getClosestParentType(final java.lang.Class<?> cls, final java.lang.Class<?> superClass) {\n    if (!(java.lang.reflect.Modifier.isPublic(cls.getModifiers()))) {\n        {\n            if (superClass.isInterface()) {\n                final java.lang.reflect.Type[] java.lang.reflect.Type[] = cls.getGenericInterfaces();\n                java.lang.reflect.Type java.lang.reflect.Type = null;\n                for (final java.lang.reflect.Type java.lang.reflect.Type : interfaceTypes) {\n                    java.lang.Class<?> java.lang.Class<?> = null;\n                    if (midType instanceof java.lang.reflect.ParameterizedType) {\n                        midClass = org.apache.commons.lang3.reflect.TypeUtils.getRawType(((java.lang.reflect.ParameterizedType)(midType)));\n                    } else if (midType instanceof java.lang.Class<?>) {\n                        midClass = ((java.lang.Class<?>)(midType));\n                    } else {\n                        throw new java.lang.IllegalStateException(((\"Unexpected generic\" + \" interface type found: \") + midType));\n                    }\n                    if ((org.apache.commons.lang3.reflect.TypeUtils.isAssignable(midClass, superClass)) && (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(genericInterface, ((java.lang.reflect.Type)(midClass))))) {\n                        genericInterface = midType;\n                    } \n                }\n                if (genericInterface != null) {\n                    return genericInterface;\n                } \n            } \n            return cls.getGenericSuperclass();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"cls"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:106","type":"CtBinaryOperatorImpl","sourcecode":"len < 3"},"failures":[289],"tindex":"5c896737-2e87-11e6-b376-15279a256614","method":{"position":"org.apache.commons.lang3.ArrayUtils:1573","type":"CtMethodImpl","sourcecode":"public static void reverse(final boolean[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (endIndexExclusive < 3) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return ;\n            } \n            int int = startIndexInclusive < 0 ? 0 : startIndexInclusive;\n            int int = (java.lang.Math.min(array.int, endIndexExclusive)) - 1;\n            boolean boolean;\n            while (j > i) {\n                tmp = array[j];\n                array[j] = array[i];\n                array[i] = tmp;\n                j--;\n                i++;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"endIndexExclusive"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4250","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(remove))"},"failures":[290],"tindex":"5c896738-2e87-11e6-b376-f7c0e203fcec","method":{"position":"org.apache.commons.lang3.ClassUtils:959","type":"CtMethodImpl","sourcecode":"private static java.lang.String toCanonicalName(java.lang.String className) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(className)) || (org.apache.commons.lang3.StringUtils.isEmpty(className))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            className = org.apache.commons.lang3.StringUtils.deleteWhitespace(className);\n            if (className == null) {\n                throw new java.lang.NullPointerException(\"className must not be null.\");\n            } else if (className.endsWith(\"[]\")) {\n                final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n                while (className.endsWith(\"[]\")) {\n                    className = className.substring(0, ((className.length()) - 2));\n                    classNameBuffer.append(\"[\");\n                }\n                final java.lang.String java.lang.String = org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.String, java.lang.String>.get(className);\n                if (abbreviation != null) {\n                    classNameBuffer.append(abbreviation);\n                } else {\n                    classNameBuffer.append(\"L\").append(className).append(\";\");\n                }\n                className = classNameBuffer.toString();\n            } \n            return className;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"className","remove":"className"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3818","type":"CtBinaryOperatorImpl","sourcecode":"i > startIndex"},"failures":[291],"tindex":"5c898e49-2e87-11e6-b376-f5599caffb1e","method":{"position":"org.apache.commons.lang3.Conversion:1618","type":"CtMethodImpl","sourcecode":"public static boolean[] shortToBinary(final short src, final int srcPos, final boolean[] dst, final int dstPos, final int nBools) {\n    if (nBools > nBools) {\n        {\n            if (0 == nBools) {\n                return dst;\n            } \n            if (((nBools - 1) + srcPos) >= 16) {\n                throw new java.lang.IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 16\");\n            } \n            int int = 0;\n            assert ((nBools - 1) * 1) < (16 - srcPos);\n            for (int int = 0 ; i < nBools ; i++) {\n                shift = (i * 1) + srcPos;\n                dst[(dstPos + i)] = (1 & (src >> shift)) != 0;\n            }\n            return dst;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"nBools","i":"nBools"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5299","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[292,293,294,295],"tindex":"5c898e4a-2e87-11e6-b376-b76833ed20c6","method":{"position":"org.apache.commons.lang3.exception.ContextedException:253","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.String getFormattedExceptionMessage(final java.lang.String baseMessage) {\n    if (baseMessage == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.exception.ExceptionContext.getFormattedExceptionMessage(baseMessage);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"baseMessage"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3937","type":"CtBinaryOperatorImpl","sourcecode":"array1 == null"},"failures":[296],"tindex":"5c898e4b-2e87-11e6-b376-f18241da2c8f","method":{"position":"org.apache.commons.lang3.ArrayUtils:1533","type":"CtMethodImpl","sourcecode":"public static void reverse(final float[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return ;\n            } \n            org.apache.commons.lang3.ArrayUtils.reverse(array, 0, array.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array1":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.InheritanceUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"(child == null) || (parent == null)"},"failures":[297],"tindex":"5c89b55c-2e87-11e6-b376-6b28fd7557d0","method":{"position":"org.apache.commons.lang3.Validate:1250","type":"CtMethodImpl","sourcecode":"public static void isAssignableFrom(final java.lang.Class<?> superType, final java.lang.Class<?> type, final java.lang.String message, final java.lang.Object... values) {\n    if ((superType == null) || (superType == null)) {\n        {\n            if ((superType.isAssignableFrom(type)) == false) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message, values));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"parent":"superType","child":"superType"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:1110","type":"CtBinaryOperatorImpl","sourcecode":"className == null"},"failures":[298],"tindex":"5c89b55d-2e87-11e6-b376-4b4299ab40b1","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1909","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder replaceFirst(final java.lang.String searchStr, final java.lang.String replaceStr) {\n    if (replaceStr == null) {\n        {\n            final int int = searchStr == null ? 0 : searchStr.length();\n            if (searchLen > 0) {\n                final int int = indexOf(searchStr, 0);\n                if (index >= 0) {\n                    final int int = replaceStr == null ? 0 : replaceStr.length();\n                    replaceImpl(index, (index + searchLen), searchLen, replaceStr, replaceLen);\n                } \n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"className":"replaceStr"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.text.ParseException","condition":{"position":"org.apache.commons.lang3.JavaVersion:132","type":"CtInvocationImpl","sourcecode":"\"0.9\".equals(nom)"},"failures":[],"tindex":"5c89b55e-2e87-11e6-b376-eb08e463c101","method":{"position":"org.apache.commons.lang3.time.DateUtils:310","type":"CtMethodImpl","sourcecode":"public static java.util.Date parseDateStrictly(final java.lang.String str, final java.lang.String... parsePatterns) throws java.text.ParseException {\n    if (\"0.9\".equals(str)) {\n        throw new java.text.ParseException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateUtils.parseDateStrictly(str, null, parsePatterns);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nom":"str"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:730","type":"CtBinaryOperatorImpl","sourcecode":"str == falseString"},"failures":[],"tindex":"5c89dc6f-2e87-11e6-b376-4fa0153336c4","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1991","type":"CtMethodImpl","sourcecode":"private org.apache.commons.lang3.text.StrBuilder replaceImpl(final org.apache.commons.lang3.text.StrMatcher matcher, final java.lang.String replaceStr, final int from, int to, int replaceCount) {\n    if (replaceStr == null) {\n        {\n            if (replaceStr == replaceStr) {\n                {\n                    if ((matcher == null) || ((int) == 0)) {\n                        return org.apache.commons.lang3.text.StrBuilder.this;\n                    } \n                    final int int = replaceStr == null ? 0 : replaceStr.length();\n                    final char[] char[] = char[];\n                    for (int int = from ; (i < to) && (replaceCount != 0) ; i++) {\n                        final int int = matcher.isMatch(buf, i, from, to);\n                        if (removeLen > 0) {\n                            replaceImpl(i, (i + removeLen), removeLen, replaceStr, replaceLen);\n                            to = (to - removeLen) + replaceLen;\n                            i = (i + replaceLen) - 1;\n                            if (replaceCount > 0) {\n                                replaceCount--;\n                            } \n                        } \n                    }\n                    return org.apache.commons.lang3.text.StrBuilder.this;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"replaceStr","falseString":"replaceStr"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:730","type":"CtBinaryOperatorImpl","sourcecode":"str == falseString"},"failures":[299],"tindex":"5c89dc70-2e87-11e6-b376-c59752aa711c","method":{"position":"org.apache.commons.lang3.StringUtils:4147","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final java.lang.Iterable<?> iterable, final java.lang.String separator) {\n    if (separator == separator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterable == null) {\n                return null;\n            } \n            return org.apache.commons.lang3.StringUtils.join(iterable.iterator(), separator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"separator","falseString":"separator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3718","type":"CtBinaryOperatorImpl","sourcecode":"array2 == null"},"failures":[],"tindex":"5c89dc71-2e87-11e6-b376-65390092c5d7","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:360","type":"CtMethodImpl","sourcecode":"public static java.lang.Object readField(final java.lang.reflect.Field field, final java.lang.Object target) throws java.lang.IllegalAccessException {\n    if (target == null) {\n        throw new java.lang.IllegalAccessException();\n    } else {\n        {\n            if (target == null) {\n                {\n                    return org.apache.commons.lang3.reflect.FieldUtils.readField(field, target, false);\n                }\n            } else {\n                throw new java.lang.IllegalAccessException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array2":"target"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:461","type":"CtInvocationImpl","sourcecode":"str.startsWith(pfx)"},"failures":[300,301,302,303,304,285],"tindex":"5c8a0382-2e87-11e6-b376-4faf80a10929","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:591","type":"CtMethodImpl","sourcecode":"public static final java.lang.String escapeHtml4(final java.lang.String input) {\n    if (input.startsWith(input)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"input","pfx":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:860","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[305],"tindex":"5c8a0383-2e87-11e6-b376-b765f855e6df","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:856","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.EqualsBuilder append(final float[] lhs, final float[] rhs) {\n    if (lhs == rhs) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((boolean) == false) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if ((lhs == null) || (rhs == null)) {\n                org.apache.commons.lang3.builder.EqualsBuilder.this.setEquals(false);\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                org.apache.commons.lang3.builder.EqualsBuilder.this.setEquals(false);\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && (boolean) ; ++i) {\n                append(lhs[i], rhs[i]);\n            }\n            return org.apache.commons.lang3.builder.EqualsBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"lhs","rhs":"rhs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSequenceUtils:74","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[],"tindex":"5c8a0384-2e87-11e6-b376-17c052e67c46","method":{"position":"org.apache.commons.lang3.text.StrBuilder:308","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic char charAt(final int index) {\n    if (index < 0) {\n        {\n            if (((index != index) && (pos1 >= 0)) && (pos2 >= 0)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((index < 0) || (index >= (length()))) {\n                        throw new java.lang.StringIndexOutOfBoundsException(index);\n                    } \n                    return char[][index];\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:778","type":"CtBinaryOperatorImpl","sourcecode":"classes == null"},"failures":[],"tindex":"5c8a2a95-2e87-11e6-b376-45c9bb1d75a9","method":{"position":"org.apache.commons.lang3.reflect.MemberUtils:113","type":"CtMethodImpl","sourcecode":"private static float getTotalTransformationCost(final java.lang.Class<?>[] srcArgs, final java.lang.Class<?>[] destArgs) {\n    if (destArgs == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            float float = 0.0F;\n            for (int int = 0 ; i < (srcArgs.int) ; i++) {\n                java.lang.Class<?> java.lang.Class<?>;\n                java.lang.Class<?> java.lang.Class<?>;\n                srcClass = srcArgs[i];\n                destClass = destArgs[i];\n                totalCost += org.apache.commons.lang3.reflect.MemberUtils.getObjectTransformationCost(srcClass, destClass);\n            }\n            return totalCost;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classes":"destArgs"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1760","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(seq)) || (org.apache.commons.lang3.StringUtils.isEmpty(searchChars))"},"failures":[306],"tindex":"5c8a2a96-2e87-11e6-b376-695ee548e6c2","method":{"position":"org.apache.commons.lang3.StringUtils:7187","type":"CtMethodImpl","sourcecode":"public static boolean startsWithIgnoreCase(final java.lang.CharSequence str, final java.lang.CharSequence prefix) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(prefix))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.startsWith(str, prefix, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"seq":"str","searchChars":"prefix"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:517","type":"CtBinaryOperatorImpl","sourcecode":"classArray == null"},"failures":[],"tindex":"5c8a2a97-2e87-11e6-b376-313e281cfabe","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:78","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeBuilder withLowerBounds(java.lang.reflect.Type... bounds) {\n    if (bounds == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (bounds == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeBuilder.this.java.lang.reflect.Type[] = bounds;\n                    return org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeBuilder.this;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classArray":"bounds"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4182","type":"CtBinaryOperatorImpl","sourcecode":"count == sz"},"failures":[307,308,309,310,311],"tindex":"5c8a51a8-2e87-11e6-b376-d99519dd15ea","method":{"position":"org.apache.commons.lang3.ArrayUtils:2227","type":"CtMethodImpl","sourcecode":"public static int indexOf(final short[] array, final short valueToFind, int startIndex) {\n    if (startIndex == startIndex) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                startIndex = 0;\n            } \n            for (int int = startIndex ; i < (array.int) ; i++) {\n                if (valueToFind == (array[i])) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sz":"startIndex","count":"startIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:109","type":"CtBinaryOperatorImpl","sourcecode":"(codepoint >= (below)) && (codepoint <= (above))"},"failures":[],"tindex":"5c8a51a9-2e87-11e6-b376-39a5d61473a7","method":{"position":"org.apache.commons.lang3.text.StrBuilder:942","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendln(final java.lang.StringBuffer str, final int startIndex, final int length) {\n    if ((startIndex >= length) && (codepoint <= length)) {\n        {\n            return append(str, startIndex, length).appendNewLine();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"codepoint":"startIndex","below":"length","above":"length"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5782","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isLowerCase(ch)"},"failures":[312],"tindex":"5c8a51aa-2e87-11e6-b376-e97b2a289d98","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1702","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder deleteAll(final char ch) {\n    if (java.lang.Character.isLowerCase(ch)) {\n        {\n            for (int int = 0 ; i < (int) ; i++) {\n                if ((char[][i]) == ch) {\n                    final int int = i;\n                    while ((++i) < (int)) {\n                        if ((char[][i]) != ch) {\n                            break;\n                        } \n                    }\n                    final int int = i - start;\n                    deleteImpl(start, i, len);\n                    i -= len;\n                } \n            }\n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:214","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"5c8a51ab-2e87-11e6-b376-515c76139c2d","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1991","type":"CtMethodImpl","sourcecode":"private org.apache.commons.lang3.text.StrBuilder replaceImpl(final org.apache.commons.lang3.text.StrMatcher matcher, final java.lang.String replaceStr, final int from, int to, int replaceCount) {\n    if (replaceStr == null) {\n        {\n            if (replaceStr == replaceStr) {\n                {\n                    if ((matcher == null) || ((int) == 0)) {\n                        return org.apache.commons.lang3.text.StrBuilder.this;\n                    } \n                    final int int = replaceStr == null ? 0 : replaceStr.length();\n                    final char[] char[] = char[];\n                    for (int int = from ; (i < to) && (replaceCount != 0) ; i++) {\n                        final int int = matcher.isMatch(buf, i, from, to);\n                        if (removeLen > 0) {\n                            replaceImpl(i, (i + removeLen), removeLen, replaceStr, replaceLen);\n                            to = (to - removeLen) + replaceLen;\n                            i = (i + replaceLen) - 1;\n                            if (replaceCount > 0) {\n                                replaceCount--;\n                            } \n                        } \n                    }\n                    return org.apache.commons.lang3.text.StrBuilder.this;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"replaceStr"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:196","type":"CtBinaryOperatorImpl","sourcecode":"locale != null"},"failures":[313],"tindex":"5c8a78bc-2e87-11e6-b376-89f21c2aac87","method":{"position":"org.apache.commons.lang3.time.DateFormatUtils:276","type":"CtMethodImpl","sourcecode":"public static java.lang.String format(final java.util.Calendar calendar, final java.lang.String pattern, final java.util.Locale locale) {\n    if (locale != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateFormatUtils.format(calendar, pattern, null, locale);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"locale":"locale"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:585","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[],"tindex":"5c8a78bd-2e87-11e6-b376-414716082e28","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1195","type":"CtMethodImpl","sourcecode":"protected void appendSummary(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final byte[] array) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(fieldName)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendSummarySize(buffer, fieldName, array.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:173","type":"CtBinaryOperatorImpl","sourcecode":"(nullText != null) && (nullText.isEmpty())"},"failures":[],"tindex":"5c8a78be-2e87-11e6-b376-cd13da2eb77e","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:472","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrTokenizer reset(final java.lang.String input) {\n    if ((input != null) && (nullText.isEmpty())) {\n        {\n            reset();\n            if (input != null) {\n                org.apache.commons.lang3.text.StrTokenizer.this.char[] = input.toCharArray();\n            } else {\n                org.apache.commons.lang3.text.StrTokenizer.this.char[] = null;\n            }\n            return org.apache.commons.lang3.text.StrTokenizer.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nullText":"input"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2034","type":"CtBinaryOperatorImpl","sourcecode":"sizeEndText == null"},"failures":[],"tindex":"5c8a9fcf-2e87-11e6-b376-494a08a1de3f","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:554","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setSummaryObjectEndText(final java.lang.String summaryObjectEndText) {\n    if (summaryObjectEndText == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            super.setSummaryObjectEndText(summaryObjectEndText);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sizeEndText":"summaryObjectEndText"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2002","type":"CtBinaryOperatorImpl","sourcecode":"sizeStartText == null"},"failures":[313],"tindex":"5c8a9fd0-2e87-11e6-b376-6bfc0398348f","method":{"position":"org.apache.commons.lang3.time.DateFormatUtils:200","type":"CtMethodImpl","sourcecode":"public static java.lang.String format(final java.util.Calendar calendar, final java.lang.String pattern) {\n    if (pattern == null) {\n        {\n            return org.apache.commons.lang3.time.DateFormatUtils.format(calendar, pattern, null, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sizeStartText":"pattern"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDateParser:535","type":"CtBinaryOperatorImpl","sourcecode":"strategy == null"},"failures":[65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96],"tindex":"5c8a9fd1-2e87-11e6-b376-891da6f4268c","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:388","type":"CtMethodImpl","sourcecode":"private static void reflectionAppend(final java.lang.Object lhs, final java.lang.Object rhs, final java.lang.Class<?> clazz, final org.apache.commons.lang3.builder.EqualsBuilder builder, final boolean useTransients, final java.lang.String[] excludeFields) {\n    if (lhs == null) {\n        {\n            if (org.apache.commons.lang3.builder.EqualsBuilder.isRegistered(lhs, rhs)) {\n                return ;\n            } \n            try {\n                org.apache.commons.lang3.builder.EqualsBuilder.register(lhs, rhs);\n                final java.lang.reflect.Field[] java.lang.reflect.Field[] = clazz.getDeclaredFields();\n                java.lang.reflect.AccessibleObject.setAccessible(fields, true);\n                for (int int = 0 ; (i < (fields.int)) && (builder.boolean) ; i++) {\n                    final java.lang.reflect.Field java.lang.reflect.Field = fields[i];\n                    if ((((!(org.apache.commons.lang3.ArrayUtils.contains(excludeFields, f.getName()))) && ((f.getName().indexOf('$')) == (-1))) && (useTransients || (!(java.lang.reflect.Modifier.isTransient(f.getModifiers()))))) && (!(java.lang.reflect.Modifier.isStatic(f.getModifiers())))) {\n                        try {\n                            builder.append(f.get(lhs), f.get(rhs));\n                        } catch (final java.lang.IllegalAccessException e) {\n                            throw new java.lang.InternalError(\"Unexpected IllegalAccessException\");\n                        }\n                    } \n                }\n            } finally {\n                org.apache.commons.lang3.builder.EqualsBuilder.unregister(lhs, rhs);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"strategy":"lhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSetUtils:242","type":"CtBinaryOperatorImpl","sourcecode":"strings != null"},"failures":[314],"tindex":"5c8ac6e2-2e87-11e6-b376-03a808fc1637","method":{"position":"org.apache.commons.lang3.StringUtils:6682","type":"CtMethodImpl","sourcecode":"public static java.lang.String getCommonPrefix(final java.lang.String... strs) {\n    if (strs != null) {\n        {\n            if ((strs == null) || ((strs.int) == 0)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final int int = org.apache.commons.lang3.StringUtils.indexOfDifference(strs);\n            if (smallestIndexOfDiff == (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) {\n                if ((strs[0]) == null) {\n                    return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n                } \n                return strs[0];\n            } else if (smallestIndexOfDiff == 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } else {\n                return strs[0].substring(0, smallestIndexOfDiff);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"strings":"strs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4101","type":"CtBinaryOperatorImpl","sourcecode":"separator != null"},"failures":[315],"tindex":"5c8ac6e3-2e87-11e6-b376-958865b550f3","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:133","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.time.FastDateFormat getInstance(final java.lang.String pattern, final java.util.TimeZone timeZone) {\n    if (pattern != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getInstance(pattern, timeZone, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"separator":"pattern"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.EnumUtils:114","type":"CtBinaryOperatorImpl","sourcecode":"enumName == null"},"failures":[316,317],"tindex":"5c8ac6e4-2e87-11e6-b376-252d3dd2bff6","method":{"position":"org.apache.commons.lang3.RandomStringUtils:309","type":"CtMethodImpl","sourcecode":"public static java.lang.String random(final int count, final java.lang.String chars) {\n    if (chars == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (chars == null) {\n                return org.apache.commons.lang3.RandomStringUtils.random(count, 0, 0, false, false, null, org.apache.commons.lang3.RandomStringUtils.org.apache.commons.lang3.RandomStringUtils.java.util.Random);\n            } \n            return org.apache.commons.lang3.RandomStringUtils.random(count, chars.toCharArray());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumName":"chars"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:573","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[318,319,320,166,321,167,168,169,170,322,323,324,325,326,327,328,329,330,331,332,333,334,171,335,172,173,174,175,336,337,176,338,177,178,179,180,339,340,151,152,153,154,155,156,157,158,341,341,98,98,99,99,100,181,181,182,182,183,183,184,184,185,185,186,186,187,187,188,188,189,189,190,190,191,191,192,192,105,105,106,106,107,107,193,193,194,194,195,195,196,196,108,108,197,197,198,198,199,199,200,200,201,201,202,202,203,203,204,204,205,205,206,206,207,207,208,208,209,209,210,210,211,211,212,212,213,213,214,214,215,216,216,217,217,218,218,219,219,220,220,221,221,222,222,223,223,224,224,225,225,109,109,110,110,111,111,112,112,113,114,114,115,115,116,116,117,117,118,118,119,119,120,120,121,121,122,122,123,123,124,124,125,126,126,127,127,128,128,129,129,226,342,227,228,229,230,343,344,231,345,232,233,234,235,346,347,236,348,237,238,239,240,349,350,241,242,243,29,30,31,32,33,34,35,36,244],"tindex":"5c8aedf5-2e87-11e6-b376-1b7e5c405a8c","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1481","type":"CtMethodImpl","sourcecode":"protected void appendContentStart(final java.lang.StringBuffer buffer) {\n    if (buffer == null) {\n        {\n            buffer.append(java.lang.String);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"buffer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4730","type":"CtBinaryOperatorImpl","sourcecode":"tempIndex == (-1)"},"failures":[170,175,180,156,184,184,185,186,187,188,121,121,230,235,240],"tindex":"5c8aedf6-2e87-11e6-b376-3f9ad5187884","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1553","type":"CtMethodImpl","sourcecode":"protected void appendSummarySize(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final int size) {\n    if (size == (-1)) {\n        {\n            buffer.append(java.lang.String);\n            buffer.append(size);\n            buffer.append(java.lang.String);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"tempIndex":"size"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:91","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[194,194],"tindex":"5c8b1507-2e87-11e6-b376-d98f8c75d2b7","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:815","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final float value) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendFieldStart(buffer, fieldName);\n            appendDetail(buffer, fieldName, value);\n            appendFieldEnd(buffer, fieldName);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:7059","type":"CtBinaryOperatorImpl","sourcecode":"(m1.length()) != (m2.length())"},"failures":[351],"tindex":"5c8b1508-2e87-11e6-b376-978bfd6a5722","method":{"position":"org.apache.commons.lang3.Conversion:1389","type":"CtMethodImpl","sourcecode":"public static java.lang.String longToHex(final long src, final int srcPos, final java.lang.String dstInit, final int dstPos, final int nHexs) {\n    if ((dstInit.length()) != (dstInit.length())) {\n        {\n            if (0 == nHexs) {\n                return dstInit;\n            } \n            if ((((nHexs - 1) * 4) + srcPos) >= 64) {\n                throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+srcPos is greather or equal to than 64\");\n            } \n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(dstInit);\n            int int = 0;\n            int int = sb.length();\n            for (int int = 0 ; i < nHexs ; i++) {\n                shift = (i * 4) + srcPos;\n                final int int = ((int)(15 & (src >> shift)));\n                if ((dstPos + i) == append) {\n                    ++append;\n                    sb.append(org.apache.commons.lang3.Conversion.intToHexDigit(bits));\n                } else {\n                    sb.setCharAt((dstPos + i), org.apache.commons.lang3.Conversion.intToHexDigit(bits));\n                }\n            }\n            return sb.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"m1":"dstInit","m2":"dstInit"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:119","type":"CtBinaryOperatorImpl","sourcecode":"codepoint > 255"},"failures":[],"tindex":"5c8b1509-2e87-11e6-b376-959b4036b0ce","method":{"position":"org.apache.commons.lang3.time.DateUtils:553","type":"CtMethodImpl","sourcecode":"public static java.util.Date setMonths(final java.util.Date date, final int amount) {\n    if (amount > 255) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateUtils.set(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"codepoint":"amount"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2980","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"5c8b150a-2e87-11e6-b376-85b532c54acb","method":{"position":"org.apache.commons.lang3.ArrayUtils:237","type":"CtMethodImpl","sourcecode":"public static java.util.Map<java.lang.Object, java.lang.Object> toMap(final java.lang.Object[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                {\n                    if (array == null) {\n                        return null;\n                    } \n                    final java.util.Map<java.lang.Object, java.lang.Object> java.util.Map<java.lang.Object, java.lang.Object> = new java.util.HashMap<java.lang.Object, java.lang.Object>(((int)((array.int) * 1.5)));\n                    for (int int = 0 ; i < (array.int) ; i++) {\n                        final java.lang.Object java.lang.Object = array[i];\n                        if (object instanceof java.util.Map.Entry<?, ?>) {\n                            final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(object));\n                            map.put(entry.getKey(), entry.getValue());\n                        } else if (object instanceof java.lang.Object[]) {\n                            final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(object));\n                            if ((entry.int) < 2) {\n                                throw new java.lang.IllegalArgumentException(((((\"Array element \" + i) + \", '\") + object) + \"', has a length less than 2\"));\n                            } \n                            map.put(entry[0], entry[1]);\n                        } else {\n                            throw new java.lang.IllegalArgumentException(((((\"Array element \" + i) + \", '\") + object) + \"', is neither of type Map.Entry nor an Array\"));\n                        }\n                    }\n                    return map;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:202","type":"CtBinaryOperatorImpl","sourcecode":"(tmp.length()) != (duration.length())"},"failures":[352],"tindex":"5c8b3c1b-2e87-11e6-b376-df666342cd03","method":{"position":"org.apache.commons.lang3.StringUtils:4214","type":"CtMethodImpl","sourcecode":"public static java.lang.String removeStart(final java.lang.String str, final java.lang.String remove) {\n    if ((str.length()) != (str.length())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(remove))) {\n                return str;\n            } \n            if (str.startsWith(remove)) {\n                return str.substring(remove.length());\n            } \n            return str;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"duration":"str","tmp":"str"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}