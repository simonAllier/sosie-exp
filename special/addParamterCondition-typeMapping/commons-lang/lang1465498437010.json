{"failureDictionary":{"org.apache.commons.lang3.text.StrBuilderTest.testDeleteFirst_String":182,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone":94,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":116,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstringAfter_StringString":181,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":60,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":63,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_BC":170,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang303":76,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":131,"org.apache.commons.lang3.time.FastDateParserTest.testTimeZoneMatches":124,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_BC":115,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String":90,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_short":19,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceAll_StrMatcher_String":55,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testSimpleDate":70,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDifferingStyles":93,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceFirst_StrMatcher_String":52,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLocaleMatches":73,"org.apache.commons.lang3.time.FastDateParserTest.testLANG_832":112,"org.apache.commons.lang3.time.FastDateParserTest.testToStringContainsName":111,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":138,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_AD":171,"org.apache.commons.lang3.text.StrBuilderTest.testContains_StrMatcher":57,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":65,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_StrMatcher_int":59,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDefaults":92,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfDouble":178,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":151,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfDoubleWithStartIndex":179,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_AD":169,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":77,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":135,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":75,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDefaults":97,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.test_Equality_Hash":165,"org.apache.commons.lang3.mutable.MutableByteTest.testEquals":13,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":148,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_Locale":95,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":145,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_BC":120,"org.apache.commons.lang3.mutable.MutableIntTest.testSubtractValuePrimitive":180,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testEquals":173,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateTimeInstance":96,"org.apache.commons.lang3.time.FastDateParserTest.testSpecialCharacters":98,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":37,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":45,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_BC":172,"org.apache.commons.lang3.time.FastDateParserTest.testLowYearPadding":105,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testTimeZoneMatches":82,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_AD":158,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":46,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":139,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":64,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_BC":118,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testTimeZoneMatches":176,"org.apache.commons.lang3.time.FastDateFormatTest.testDateDefaults":91,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOf_StrMatcher_int":54,"org.apache.commons.lang3.time.FastDateParserTest.testMilleniumBug":100,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateInstance":88,"org.apache.commons.lang3.exception.ContextedExceptionTest.testAddContextValue":6,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetPrefix":50,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":128,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testAmPm":156,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":23,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":69,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testPatternMatches":177,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_AD":119,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDateDefaults":89,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetSuffix":51,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":66,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":136,"org.apache.commons.lang3.StringUtilsTest.testReplace_StringStringArrayStringArray":4,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_AD":114,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":3,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":81,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":142,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHierarchyHashCode":14,"org.apache.commons.lang3.time.FastDateParserTest.testParseNumerics":108,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":168,"org.apache.commons.lang3.time.FastDateParserTest.testPatternMatches":125,"org.apache.commons.lang3.time.FastDateParserTest.testParseZone":103,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":61,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":144,"org.apache.commons.lang3.text.StrTokenizerTest.test5":35,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLowYearPadding":157,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLANG_832":164,"org.apache.commons.lang3.text.StrTokenizerTest.test4":34,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_AD":166,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":132,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":133,"org.apache.commons.lang3.text.StrTokenizerTest.test6":36,"org.apache.commons.lang3.text.StrTokenizerTest.test1":31,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetValueDelimiter":49,"org.apache.commons.lang3.time.FastDateParserTest.testLocaleMatches":101,"org.apache.commons.lang3.text.StrTokenizerTest.test3":33,"org.apache.commons.lang3.text.StrTokenizerTest.test2":32,"org.apache.commons.lang3.time.FastDateParserTest.test_Equality_Hash":113,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testIntegerWithTransients":15,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testToStringContainsName":79,"org.apache.commons.lang3.time.FastDateParserTest.testLang538":110,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":62,"org.apache.commons.lang3.time.FastDateParserTest.testLang303":109,"org.apache.commons.lang3.exception.ContextedExceptionTest.testGetFirstContextValue":8,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsert":12,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":99,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":44,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":85,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_AD":106,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":20,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":147,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":2,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":21,"org.apache.commons.lang3.time.FastDateParserTest.testAmPm":104,"org.apache.commons.lang3.time.FastDateFormatTest.testLang954":86,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":146,"org.apache.commons.lang3.exception.ContextedExceptionTest.testGetContextValues":9,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_BC":167,"org.apache.commons.lang3.exception.ContextedExceptionTest.testSetContextValue":7,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testMilleniumBug":72,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":140,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_BC":159,"org.apache.commons.lang3.time.FastDateParserTest.testQuotes":123,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testEquals":80,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_AD":117,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":126,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":38,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":67,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_BC":107,"org.apache.commons.lang3.time.FastDateParserTest.testDayOf":102,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":143,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":183,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":24,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixtureWithTransients":17,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseNumerics":160,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":22,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":26,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":25,"org.apache.commons.lang3.time.FastDateParserTest.testEquals":121,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":28,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":27,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":30,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang538":162,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":29,"org.apache.commons.lang3.time.FastDateParserTest.testParses":122,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":134,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":43,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":137,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":149,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testInteger":18,"org.apache.commons.lang3.time.DateFormatUtilsTest.testConstructor":68,"org.apache.commons.lang3.text.StrMatcherTest.testCharMatcher_char":48,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseZone":155,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang645":78,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance":84,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testSpecialCharacters":150,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParses":174,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLowYearPadding":74,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyByteEmptyArray":1,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryMatcher":56,"org.apache.commons.lang3.reflect.TypeUtilsTest.testTypesSatisfyVariables":184,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetArrayStart":10,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":41,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":40,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":42,"org.apache.commons.lang3.text.StrTokenizerTest.testChaining":47,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOf_StrMatcher":58,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_StrMatcher":53,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixture":16,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":39,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":129,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":141,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testToStringContainsName":163,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang303":161,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testPatternMatches":83,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":130,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone_Locale":87,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStrip_String":5,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocaleMatches":153,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testDayOf":154,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":71,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testMilleniumBug":152,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsertWithNullText":11,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":127,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testQuotes":175,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyByte":0},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDateParser:282","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[],"tindex":"851a51b3-2e73-11e6-9213-b58bb9142e61","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:425","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.String format(final java.util.Date date) {\n    if (date == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Calendar java.util.Calendar = newCalendar();\n            c.setTime(date);\n            return applyRulesToString(c);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3274","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[0,1],"tindex":"851c2674-2e73-11e6-9213-7d180c6ed9b4","method":{"position":"org.apache.commons.lang3.ArrayUtils:612","type":"CtMethodImpl","sourcecode":"public static byte[] nullToEmpty(final byte[] array) {\n    if (array == null) {\n        {\n            if ((array == null) || ((array.int) == 0)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.byte[];\n            } \n            return array;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5890","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))"},"failures":[2,2,3],"tindex":"851c4d85-2e73-11e6-9213-3950177514e2","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1272","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final double[] array, final java.lang.Boolean fullDetail) {\n    if ((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(array))) {\n        {\n            appendFieldStart(buffer, fieldName);\n            if (array == null) {\n                appendNullText(buffer, fieldName);\n            } else if (isFullDetail(fullDetail)) {\n                appendDetail(buffer, fieldName, array);\n            } else {\n                appendSummary(buffer, fieldName, array);\n            }\n            appendFieldEnd(buffer, fieldName);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array","values":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:726","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[4],"tindex":"851c7496-2e73-11e6-9213-734e4249afc3","method":{"position":"org.apache.commons.lang3.StringUtils:4581","type":"CtMethodImpl","sourcecode":"public static java.lang.String replaceEach(final java.lang.String text, final java.lang.String[] searchList, final java.lang.String[] replacementList) {\n    if (text == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.replaceEach(text, searchList, replacementList, false, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"text"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1338","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[5],"tindex":"851c7497-2e73-11e6-9213-c1a96b9c5e1d","method":{"position":"org.apache.commons.lang3.StringUtils:497","type":"CtMethodImpl","sourcecode":"public static java.lang.String strip(final java.lang.String str) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.strip(str, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:764","type":"CtBinaryOperatorImpl","sourcecode":"(isEquals) == false"},"failures":[],"tindex":"851c9ba8-2e73-11e6-9213-45c77bcb6d4b","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setUseFieldNames(final boolean useFieldNames) {\n    if (useFieldNames == false) {\n        {\n            super.setUseFieldNames(useFieldNames);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isEquals":"useFieldNames"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1262","type":"CtBinaryOperatorImpl","sourcecode":"c > a"},"failures":[],"tindex":"851c9ba9-2e73-11e6-9213-5b5897275d6c","method":{"position":"org.apache.commons.lang3.BitField:240","type":"CtMethodImpl","sourcecode":"public byte setByte(final byte holder) {\n    if (holder > holder) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((byte)(set(holder)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"holder","c":"holder"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1010","type":"CtBinaryOperatorImpl","sourcecode":"(((nHex - 1) * 4) + dstPos) >= 8"},"failures":[],"tindex":"851cc2ba-2e73-11e6-9213-5b1f8add74e2","method":{"position":"org.apache.commons.lang3.time.FormatCache:176","type":"CtMethodImpl","sourcecode":"F getTimeInstance(final int timeStyle, final java.util.TimeZone timeZone, java.util.Locale locale) {\n    if ((((timeStyle - 1) * 4) + timeStyle) >= 8) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getDateTimeInstance(null, java.lang.Integer.valueOf(timeStyle), timeZone, locale);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dstPos":"timeStyle","nHex":"timeStyle"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:735","type":"CtInvocationImpl","sourcecode":"str.equals(falseString)"},"failures":[6,7,8,9],"tindex":"851cc2bb-2e73-11e6-9213-3bddf9a36082","method":{"position":"org.apache.commons.lang3.exception.ContextedException:207","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Object getFirstContextValue(final java.lang.String label) {\n    if (label.equals(label)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.exception.ContextedException.this.org.apache.commons.lang3.exception.ExceptionContext.getFirstContextValue(label);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"label","falseString":"label"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharRange:236","type":"CtBinaryOperatorImpl","sourcecode":"(iToString) == null"},"failures":[],"tindex":"851ce9cc-2e73-11e6-9213-4b19a1986ac5","method":{"position":"org.apache.commons.lang3.Validate:1199","type":"CtMethodImpl","sourcecode":"public static void isInstanceOf(final java.lang.Class<?> type, final java.lang.Object obj, final java.lang.String message, final java.lang.Object... values) {\n    if (message == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((type.isInstance(obj)) == false) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message, values));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iToString":"message"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3274","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"851ce9cd-2e73-11e6-9213-d36edc93a21a","method":{"position":"org.apache.commons.lang3.StringUtils:7635","type":"CtMethodImpl","sourcecode":"public static java.lang.String toEncodedString(byte[] bytes, java.nio.charset.Charset charset) {\n    if (bytes == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new java.lang.String(bytes , (charset != null ? charset : java.nio.charset.Charset.defaultCharset()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"bytes"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3222","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[10],"tindex":"851d10de-2e73-11e6-9213-edbd270d31c7","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1739","type":"CtMethodImpl","sourcecode":"protected void setArrayStart(java.lang.String arrayStart) {\n    if (arrayStart == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (arrayStart == null) {\n                arrayStart = \"\";\n            } \n            org.apache.commons.lang3.builder.ToStringStyle.this.java.lang.String = arrayStart;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"arrayStart"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1321","type":"CtBinaryOperatorImpl","sourcecode":"(separator != null) && (loopIndex > 0)"},"failures":[11,12],"tindex":"851d10df-2e73-11e6-9213-493bbded5829","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1494","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder insert(final int index, java.lang.String str) {\n    if ((str != null) && (index > 0)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            validateIndex(index);\n            if (str == null) {\n                str = java.lang.String;\n            } \n            if (str != null) {\n                final int int = str.length();\n                if (strLen > 0) {\n                    final int int = (int) + strLen;\n                    ensureCapacity(newSize);\n                    java.lang.System.arraycopy(char[], index, char[], (index + strLen), ((int) - index));\n                    int = newSize;\n                    str.getChars(0, strLen, char[], index);\n                } \n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"loopIndex":"index","separator":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:382","type":"CtInvocationImpl","sourcecode":"parsePattern.endsWith(\"ZZ\")"},"failures":[],"tindex":"851f5ad0-2e73-11e6-9213-59f8ffc9930b","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1134","type":"CtMethodImpl","sourcecode":"protected void appendSummary(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final short[] array) {\n    if (fieldName.endsWith(\"ZZ\")) {\n        {\n            appendSummarySize(buffer, fieldName, array.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"parsePattern":"fieldName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:593","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[13],"tindex":"851f5ad1-2e73-11e6-9213-977c81ae60ed","method":{"position":"org.apache.commons.lang3.mutable.MutableByte:245","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof org.apache.commons.lang3.mutable.MutableByte) {\n                return (byte) == (((org.apache.commons.lang3.mutable.MutableByte)(obj)).byteValue());\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:797","type":"CtBinaryOperatorImpl","sourcecode":"fraction == null"},"failures":[],"tindex":"851f5ad2-2e73-11e6-9213-7fe7a8b11084","method":{"position":"org.apache.commons.lang3.mutable.MutableDouble:188","type":"CtMethodImpl","sourcecode":"public void subtract(final java.lang.Number operand) {\n    if (operand == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.mutable.MutableDouble.this.double -= operand.doubleValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fraction":"operand"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.LookupTranslator:53","type":"CtBinaryOperatorImpl","sourcecode":"sz < _shortest"},"failures":[],"tindex":"851f81e3-2e73-11e6-9213-ffe0fa994f7a","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1606","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder insert(final int index, final char value) {\n    if (index < index) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            validateIndex(index);\n            ensureCapacity(((int) + 1));\n            java.lang.System.arraycopy(char[], index, char[], (index + 1), ((int) - index));\n            char[][index] = value;\n            (int)++;\n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"_shortest":"index","sz":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1323","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.WildcardType"},"failures":[14,15,16,17,18],"tindex":"851f81e4-2e73-11e6-9213-3724ebcd05c8","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:380","type":"CtMethodImpl","sourcecode":"public static int reflectionHashCode(final java.lang.Object object, final boolean testTransients) {\n    if (object instanceof java.lang.reflect.WildcardType) {\n        {\n            return org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(17, 37, object, testTransients, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3184","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[19],"tindex":"851f81e5-2e73-11e6-9213-9595be2c7264","method":{"position":"org.apache.commons.lang3.ArrayUtils:3161","type":"CtMethodImpl","sourcecode":"public static short[] toPrimitive(final java.lang.Short[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.short[];\n            } \n            final short[] short[] = new short[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = array[i].shortValue();\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDatePrinter:328","type":"CtBinaryOperatorImpl","sourcecode":"c == '\\''"},"failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59],"tindex":"851fa8f6-2e73-11e6-9213-ef4d894fd017","method":{"position":"org.apache.commons.lang3.text.StrMatcher:163","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.StrMatcher charMatcher(final char ch) {\n    if (ch == '\\'') {\n        {\n            return new org.apache.commons.lang3.text.StrMatcher.CharMatcher(ch);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"ch"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1138","type":"CtBinaryOperatorImpl","sourcecode":"c < a"},"failures":[],"tindex":"851fa8f7-2e73-11e6-9213-fd5b56a066a6","method":{"position":"org.apache.commons.lang3.mutable.MutableShort:158","type":"CtMethodImpl","sourcecode":"public void subtract(final short operand) {\n    if (operand < operand) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.mutable.MutableShort.this.short -= operand;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"operand","c":"operand"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:623","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177],"tindex":"851fd008-2e73-11e6-9213-b994f65aadd1","method":{"position":"org.apache.commons.lang3.time.FastDateParser:660","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nboolean addRegex(final org.apache.commons.lang3.time.FastDateParser parser, final java.lang.StringBuilder regex) {\n    if (regex == null) {\n        {\n            if (parser.isNextNumber()) {\n                regex.append(\"(\\\\p{Nd}{\").append(parser.getFieldWidth()).append(\"}+)\");\n            } else {\n                regex.append(\"(\\\\p{Nd}++)\");\n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"regex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:179","type":"CtBinaryOperatorImpl","sourcecode":"wrapLength < 1"},"failures":[],"tindex":"851fd009-2e73-11e6-9213-e7b72cced5af","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:798","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic final void appendTo(final java.lang.StringBuffer buffer, final int value) {\n    if (value < 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value < 10) {\n                buffer.append(((char)(value + '0')));\n            } else {\n                buffer.append(((char)((value / 10) + '0')));\n                buffer.append(((char)((value % 10) + '0')));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"wrapLength":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1257","type":"CtBinaryOperatorImpl","sourcecode":"0 == nShorts"},"failures":[178,179],"tindex":"851fd00a-2e73-11e6-9213-93125d2fae94","method":{"position":"org.apache.commons.lang3.ArrayUtils:2652","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final double[] array, final double valueToFind, int startIndex) {\n    if (0 == startIndex) {\n        {\n            if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } else if (startIndex >= (array.int)) {\n                startIndex = (array.int) - 1;\n            } \n            for (int int = startIndex ; i >= 0 ; i--) {\n                if (valueToFind == (array[i])) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nShorts":"startIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2127","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[180],"tindex":"8520e17b-2e73-11e6-9213-b3297b6e1e92","method":{"position":"org.apache.commons.lang3.mutable.MutableInt:158","type":"CtMethodImpl","sourcecode":"public void subtract(final int operand) {\n    if (operand < 0) {\n        {\n            org.apache.commons.lang3.mutable.MutableInt.this.int -= operand;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"operand"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:931","type":"CtBinaryOperatorImpl","sourcecode":"(toProperString) == null"},"failures":[181],"tindex":"8520e17c-2e73-11e6-9213-09959e6b378d","method":{"position":"org.apache.commons.lang3.StringUtils:2331","type":"CtMethodImpl","sourcecode":"public static java.lang.String substringAfter(final java.lang.String str, final java.lang.String separator) {\n    if (separator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n                return str;\n            } \n            if (separator == null) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final int int = str.indexOf(separator);\n            if (pos == (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            return str.substring((pos + (separator.length())));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toProperString":"separator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:210","type":"CtBinaryOperatorImpl","sourcecode":"valueProperties == null"},"failures":[],"tindex":"8521088d-2e73-11e6-9213-2f06848c7c46","method":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:609","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ReflectionToStringBuilder reflectionAppendArray(final java.lang.Object array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.getStyle().reflectionAppendArrayDetail(org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.getStringBuffer(), null, array);\n            return org.apache.commons.lang3.builder.ReflectionToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"valueProperties":"array"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomUtils:168","type":"CtBinaryOperatorImpl","sourcecode":"startInclusive == endInclusive"},"failures":[],"tindex":"8521088e-2e73-11e6-9213-db228e3f58c8","method":{"position":"org.apache.commons.lang3.mutable.MutableFloat:96","type":"CtMethodImpl","sourcecode":"public void setValue(final float value) {\n    if (value == value) {\n        {\n            org.apache.commons.lang3.mutable.MutableFloat.this.float = value;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startInclusive":"value","endInclusive":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:732","type":"CtInvocationImpl","sourcecode":"str.startsWith(\"-\")"},"failures":[182],"tindex":"85212f9f-2e73-11e6-9213-3da22dec87e2","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1760","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder deleteFirst(final java.lang.String str) {\n    if (str.startsWith(\"-\")) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = str == null ? 0 : str.length();\n            if (len > 0) {\n                final int int = indexOf(str, 0);\n                if (index >= 0) {\n                    deleteImpl(index, (index + len), len);\n                } \n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:762","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[60,61,62,63,64,65,66,67,68,87,95,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149],"tindex":"85212fa0-2e73-11e6-9213-6b9cf0e22618","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:147","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.time.FastDateFormat getInstance(final java.lang.String pattern, final java.util.Locale locale) {\n    if (pattern == null) {\n        {\n            return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getInstance(pattern, null, locale);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"pattern"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:596","type":"CtBinaryOperatorImpl","sourcecode":"toWildcardType == null"},"failures":[183,184],"tindex":"85212fa1-2e73-11e6-9213-2556e6dccc05","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1194","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Type[] getImplicitLowerBounds(final java.lang.reflect.WildcardType wildcardType) {\n    if (wildcardType == null) {\n        {\n            org.apache.commons.lang3.Validate.notNull(wildcardType, \"wildcardType is null\");\n            final java.lang.reflect.Type[] java.lang.reflect.Type[] = wildcardType.getLowerBounds();\n            return (bounds.int) == 0 ? new java.lang.reflect.Type[]{ null } : bounds;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toWildcardType":"wildcardType"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":31,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}