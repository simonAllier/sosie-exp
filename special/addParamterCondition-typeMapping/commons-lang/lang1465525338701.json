{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":87,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":129,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringString":37,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":89,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":125,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":83,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":86,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone":230,"org.apache.commons.lang3.exception.ContextedExceptionTest.testRawMessage":234,"org.apache.commons.lang3.exception.ContextedExceptionTest.testNullExceptionPassing":109,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveBooleanArray":53,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":140,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":192,"org.apache.commons.lang3.time.FastDatePrinterTest.testMilleniumBug":146,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":164,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":123,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testSimpleDate":152,"org.apache.commons.lang3.exception.ContextedExceptionTest.testContextedExceptionString":112,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":119,"org.apache.commons.lang3.builder.EqualsBuilderTest.testObjectBuild":201,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiBooleanArray":206,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":171,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHiragana":105,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":61,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":193,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlVersions":104,"org.apache.commons.lang3.math.FractionTest.testNegate":224,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":168,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":62,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":156,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":190,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePartialString_noReplace":137,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVEmpty":23,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringStringarray":36,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":116,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":136,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":180,"org.apache.commons.lang3.BooleanUtilsTest.test_toStringOnOff_boolean":49,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_1Part":186,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":75,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":21,"org.apache.commons.lang3.CharUtilsTest.testToCharacterObject_String":63,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionCompareEx1":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":79,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":120,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":172,"org.apache.commons.lang3.math.FractionTest.testMultiply":222,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang303":149,"org.apache.commons.lang3.RandomUtilsTest.testNextBytes":241,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":55,"org.apache.commons.lang3.builder.EqualsBuilderTest.testIntArray":211,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":59,"org.apache.commons.lang3.exception.ContextedExceptionTest.testAddContextValue":5,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringStringarray":33,"org.apache.commons.lang3.exception.ContextedExceptionTest.testJavaSerialization":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":82,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringString":30,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":148,"org.apache.commons.lang3.builder.EqualsBuilderTest.testObjectArray":200,"org.apache.commons.lang3.time.FastDatePrinterTest.testSimpleDate":144,"org.apache.commons.lang3.math.FractionTest.testFactory_int_int":226,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":58,"org.apache.commons.lang3.exception.ContextedExceptionTest.testContextedExceptionThrowable":110,"org.apache.commons.lang3.math.FractionTest.testDivide":221,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":143,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testJavaSerialization":14,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":169,"org.apache.commons.lang3.StringUtilsTest.testSplit_StringChar":42,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":96,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":159,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":174,"org.apache.commons.lang3.StringUtilsTest.testSwapCase_String":45,"org.apache.commons.lang3.exception.ContextedExceptionTest.testGetContextEntries":235,"org.apache.commons.lang3.StringUtilsTest.testReverseDelimited_StringChar":41,"org.apache.commons.lang3.RandomUtilsTest.testNextBytesNegative":240,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":138,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiByteArray":28,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":165,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testStartsWithIgnoreCase":107,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":124,"org.apache.commons.lang3.BooleanUtilsTest.testXor_primitive_emptyInput":2,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":139,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtml":102,"org.apache.commons.lang3.LocaleUtilsTest.testThreeCharsLocale":184,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":179,"org.apache.commons.lang3.builder.EqualsBuilderTest.testByte":27,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":95,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetNullText":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":85,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_2Part":187,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstringsBetween_StringStringString":100,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":178,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorNoArgs":127,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":68,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":72,"org.apache.commons.lang3.exception.ContextedExceptionTest.testSetContextValue":7,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_Boolean":231,"org.apache.commons.lang3.time.FastDatePrinterTest.testShortDateStyleWithLocales":145,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyShort":115,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":196,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyFloatObjectEmptyArray":65,"org.apache.commons.lang3.StringUtilsTest.testPrependIfMissing":29,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":24,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":175,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAlphaNumeric":227,"org.apache.commons.lang3.time.FastDatePrinterTest.testFormat":151,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":106,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringString":32,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":198,"org.apache.commons.lang3.builder.EqualsBuilderTest.testByteArray":204,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCharArray":199,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":167,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":181,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":90,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_3Part":188,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testSetContextValue":11,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairs":101,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":131,"org.apache.commons.lang3.math.FractionTest.testReduce":225,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringString":35,"org.apache.commons.lang3.time.FastDatePrinterTest.testLowYearPadding":147,"org.apache.commons.lang3.BooleanUtilsTest.testXor_primitive_nullInput":1,"org.apache.commons.lang3.text.StrTokenizerTest.testChaining":25,"org.apache.commons.lang3.exception.ContextedExceptionTest.testContextedExceptionStringThrowableContext":111,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":162,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":173,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReset":205,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringStringarray":34,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayToObjectArray":52,"org.apache.commons.lang3.math.FractionTest.testFactory_String_improper":219,"org.apache.commons.lang3.builder.EqualsBuilderTest.testObject":212,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":78,"org.apache.commons.lang3.LocaleUtilsTest.testLang865":183,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":134,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testAddContextValue":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":73,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":189,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":69,"org.apache.commons.lang3.ArrayUtilsTest.testIsEquals":26,"org.apache.commons.lang3.BooleanUtilsTest.testOr_object_nullInput":44,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":191,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang303":157,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":81,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":126,"org.apache.commons.lang3.builder.EqualsBuilderTest.testDoubleArray":213,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":195,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyFloatObject":64,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":132,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":142,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":20,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":158,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":74,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":133,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOf_charInt":17,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringStringArray":242,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyShortEmptyArray":114,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":194,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":177,"org.apache.commons.lang3.LocaleUtilsTest.testLang328":182,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":117,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":19,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_short_short":108,"org.apache.commons.lang3.math.FractionTest.testAbs":214,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":121,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":141,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":118,"org.apache.commons.lang3.exception.ContextedExceptionTest.testContextedException":4,"org.apache.commons.lang3.math.FractionTest.testInvert":223,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":80,"org.apache.commons.lang3.math.FractionTest.testAdd":215,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":161,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testContextedException":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":77,"org.apache.commons.lang3.RandomUtilsTest.testZeroLengthNextBytes":239,"org.apache.commons.lang3.ObjectUtilsTest.testHashCodeMulti_multiple_emptyArray":97,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testJavaSerialization":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":88,"org.apache.commons.lang3.BooleanUtilsTest.test_toStringTrueFalse_boolean":47,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeExactStaticMethod":99,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":57,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_long":43,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementShortArray":233,"org.apache.commons.lang3.builder.EqualsBuilderTest.testNpeForNullElement":210,"org.apache.commons.lang3.text.StrTokenizerTest.testTSVEmpty":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":76,"org.apache.commons.lang3.builder.EqualsBuilderTest.testFloatArray":202,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":176,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":166,"org.apache.commons.lang3.StringUtilsSubstringTest.testCountMatches_String":229,"org.apache.commons.lang3.LocaleUtilsTest.testParseAllLocales":185,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testFormattedExceptionMessageNull":8,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_int":66,"org.apache.commons.lang3.exception.ContextedExceptionTest.testGetFirstContextValue":237,"org.apache.commons.lang3.ArrayUtilsTest.testContainsShort":3,"org.apache.commons.lang3.exception.ContextedExceptionTest.testContextedExceptionStringThrowable":113,"org.apache.commons.lang3.builder.EqualsBuilderTest.testShortArray":209,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_StringBuilder":46,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":60,"org.apache.commons.lang3.exception.ContextedExceptionTest.testGetContextValues":238,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEquals":16,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang538":150,"org.apache.commons.lang3.math.FractionTest.testSubtract":217,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testMilleniumBug":154,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementByteArray":0,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testAddContextValue":13,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":197,"org.apache.commons.lang3.math.FractionTest.testToProperString":220,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":70,"org.apache.commons.lang3.BooleanUtilsTest.test_toStringYesNo_boolean":48,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":122,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlHighUnicode":103,"org.apache.commons.lang3.math.FractionTest.testPow":216,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfShort":232,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringStringarray":39,"org.apache.commons.lang3.builder.EqualsBuilderTest.testBooleanArray":207,"org.apache.commons.lang3.builder.EqualsBuilderTest.testAccessors":203,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":84,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":170,"org.apache.commons.lang3.ObjectUtilsTest.testHashCodeMulti_multiple_likeList":98,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":56,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":92,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":130,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLowYearPadding":155,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringString":31,"org.apache.commons.lang3.builder.EqualsBuilderTest.testLongArray":208,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":135,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringStringarray":38,"org.apache.commons.lang3.StringUtilsTest.testLeftPad_StringInt":18,"org.apache.commons.lang3.exception.ContextedExceptionTest.testGetContextLabels":236,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":93,"org.apache.commons.lang3.ArrayUtilsTest.testCloneDouble":51,"org.apache.commons.lang3.math.FractionTest.testToString":218,"org.apache.commons.lang3.BooleanUtilsTest.test_toString_boolean_String_String_String":50,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":163,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils":228,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":153,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testSetContextValue":15,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":160,"org.apache.commons.lang3.time.DateUtilsTest.testSetSeconds":40,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":94,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":128},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:854","type":"CtBinaryOperatorImpl","sourcecode":"lhs == null"},"failures":[0],"tindex":"27c30fe5-2eb2-11e6-a328-4db9be949406","method":{"position":"org.apache.commons.lang3.ArrayUtils:4771","type":"CtMethodImpl","sourcecode":"public static byte[] removeElement(final byte[] array, final byte element) {\n    if (array == null) {\n        {\n            final int int = org.apache.commons.lang3.ArrayUtils.indexOf(array, element);\n            if (index == (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int)) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            return org.apache.commons.lang3.ArrayUtils.remove(array, index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:667","type":"CtBinaryOperatorImpl","sourcecode":"stripChars == null"},"failures":[],"tindex":"27c3ac26-2eb2-11e6-a328-130f6012fe16","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:908","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final short value) {\n    if (\"1.7\".equals(fieldName)) {\n        {\n            if (fieldName == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, value);\n                    return org.apache.commons.lang3.builder.ToStringBuilder.this;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"stripChars":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:258","type":"CtInvocationImpl","sourcecode":"java.lang.Float.isNaN(b)"},"failures":[],"tindex":"27c3d337-2eb2-11e6-a328-ab40c098e73d","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:709","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final float value) {\n    if (java.lang.Float.isNaN(value)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int = ((int) * (int)) + (java.lang.Float.floatToIntBits(value));\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2914","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.ArrayUtils.isEmpty(array)"},"failures":[1,2],"tindex":"27c3d338-2eb2-11e6-a328-39c01fb863fb","method":{"position":"org.apache.commons.lang3.BooleanUtils:1040","type":"CtMethodImpl","sourcecode":"public static boolean xor(final boolean... array) {\n    if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n            } \n            if ((array.int) == 0) {\n                throw new java.lang.IllegalArgumentException(\"Array is empty\");\n            } \n            boolean boolean = false;\n            for (final boolean boolean : array) {\n                result ^= element;\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:7236","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.startsWith(string, searchString)"},"failures":[],"tindex":"27c5a7f9-2eb2-11e6-a328-51f5ea4d96e7","method":{"position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:53","type":"CtMethodImpl","sourcecode":"public final java.lang.String translate(final java.lang.CharSequence input) {\n    if (org.apache.commons.lang3.StringUtils.startsWith(input, input)) {\n        {\n            if (input == null) {\n                return null;\n            } \n            try {\n                final java.io.StringWriter java.io.StringWriter = new java.io.StringWriter(((input.length()) * 2));\n                translate(input, writer);\n                return writer.toString();\n            } catch (final java.io.IOException ioe) {\n                throw new java.lang.RuntimeException(ioe);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"searchString":"input","string":"input"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:894","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[3],"tindex":"27c5a7fa-2eb2-11e6-a328-9f23dd52dd7f","method":{"position":"org.apache.commons.lang3.ArrayUtils:2296","type":"CtMethodImpl","sourcecode":"public static boolean contains(final short[] array, final short valueToFind) {\n    if (array == null) {\n        {\n            return (org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind)) != (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2100","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15],"tindex":"27c5cf0b-2eb2-11e6-a328-2b2d3ab337ec","method":{"position":"org.apache.commons.lang3.exception.DefaultExceptionContext:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.String getFormattedExceptionMessage(final java.lang.String baseMessage) {\n    if (baseMessage == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(256);\n            if (baseMessage != null) {\n                buffer.append(baseMessage);\n            } \n            if ((java.util.List<org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>>.size()) > 0) {\n                if ((buffer.length()) > 0) {\n                    buffer.append('\\n');\n                } \n                buffer.append(\"Exception Context:\\n\");\n                int int = 0;\n                for (final org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object> org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object> : java.util.List<org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>>) {\n                    buffer.append(\"\\t[\");\n                    buffer.append((++i));\n                    buffer.append(':');\n                    buffer.append(pair.getKey());\n                    buffer.append(\"=\");\n                    final java.lang.Object java.lang.Object = pair.getValue();\n                    if (value == null) {\n                        buffer.append(\"null\");\n                    } else {\n                        java.lang.String java.lang.String;\n                        try {\n                            valueStr = value.toString();\n                        } catch (final java.lang.Exception e) {\n                            valueStr = \"Exception thrown on toString(): \" + (org.apache.commons.lang3.exception.ExceptionUtils.getStackTrace(e));\n                        }\n                        buffer.append(valueStr);\n                    }\n                    buffer.append(\"]\\n\");\n                }\n                buffer.append(\"---------------------------------\");\n            } \n            return buffer.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"baseMessage"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3994","type":"CtBinaryOperatorImpl","sourcecode":"separator == null"},"failures":[16],"tindex":"27c5cf0c-2eb2-11e6-a328-a13b33e87d8e","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:270","type":"CtMethodImpl","sourcecode":"public static boolean reflectionEquals(final java.lang.Object lhs, final java.lang.Object rhs, final java.lang.String... excludeFields) {\n    if (rhs == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(lhs, rhs, false, null, excludeFields);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"separator":"rhs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:176","type":"CtBinaryOperatorImpl","sourcecode":"denominator < 0"},"failures":[17],"tindex":"27c5f61d-2eb2-11e6-a328-452199566a4d","method":{"position":"org.apache.commons.lang3.StringUtils:895","type":"CtMethodImpl","sourcecode":"public static int indexOf(final java.lang.CharSequence seq, final int searchChar, final int startPos) {\n    if (startPos < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(seq)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            return org.apache.commons.lang3.CharSequenceUtils.indexOf(seq, searchChar, startPos);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"denominator":"startPos"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:863","type":"CtBinaryOperatorImpl","sourcecode":"(hashCode) == 0"},"failures":[18],"tindex":"27c5f61e-2eb2-11e6-a328-6b17eb34218c","method":{"position":"org.apache.commons.lang3.StringUtils:5348","type":"CtMethodImpl","sourcecode":"public static java.lang.String leftPad(final java.lang.String str, final int size) {\n    if (size == 0) {\n        {\n            return org.apache.commons.lang3.StringUtils.leftPad(str, size, ' ');\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"hashCode":"size"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:1121","type":"CtInvocationImpl","sourcecode":"className.startsWith(\"L\")"},"failures":[19,20,21,22,23,24,25],"tindex":"27c5f61f-2eb2-11e6-a328-cfe2e78028bd","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:472","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrTokenizer reset(final java.lang.String input) {\n    if (input.startsWith(\"L\")) {\n        {\n            reset();\n            if (input != null) {\n                org.apache.commons.lang3.text.StrTokenizer.this.char[] = input.toCharArray();\n            } else {\n                org.apache.commons.lang3.text.StrTokenizer.this.char[] = null;\n            }\n            return org.apache.commons.lang3.text.StrTokenizer.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"className":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1262","type":"CtBinaryOperatorImpl","sourcecode":"c > a"},"failures":[26,27,28],"tindex":"27c61d30-2eb2-11e6-a328-6dfae1fd3151","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:566","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.EqualsBuilder append(final byte lhs, final byte rhs) {\n    if (rhs > lhs) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((boolean) == false) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            boolean = lhs == rhs;\n            return org.apache.commons.lang3.builder.EqualsBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"lhs","c":"rhs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:7013","type":"CtBinaryOperatorImpl","sourcecode":"(first == null) || (second == null)"},"failures":[29],"tindex":"27c61d31-2eb2-11e6-a328-67891a1651bb","method":{"position":"org.apache.commons.lang3.StringUtils:7560","type":"CtMethodImpl","sourcecode":"public static java.lang.String prependIfMissing(final java.lang.String str, final java.lang.CharSequence prefix, final java.lang.CharSequence... prefixes) {\n    if ((prefix == null) || (prefix == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.prependIfMissing(str, prefix, false, prefixes);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"first":"prefix","second":"prefix"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:159","type":"CtBinaryOperatorImpl","sourcecode":"(ex.getCause()) instanceof java.lang.RuntimeException"},"failures":[],"tindex":"27c77cc2-2eb2-11e6-a328-efe499e385a2","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:602","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] getStackFrames(final java.lang.Throwable throwable) {\n    if ((throwable.getCause()) instanceof java.lang.RuntimeException) {\n        {\n            if (throwable == null) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.String[];\n            } \n            return org.apache.commons.lang3.exception.ExceptionUtils.getStackFrames(org.apache.commons.lang3.exception.ExceptionUtils.getStackTrace(throwable));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ex":"throwable"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSet:139","type":"CtBinaryOperatorImpl","sourcecode":"setStrs == null"},"failures":[30,31,32,33,34,35,36,37,38,39],"tindex":"27c7a3d3-2eb2-11e6-a328-1f1e17b5f174","method":{"position":"org.apache.commons.lang3.CharSetUtils:241","type":"CtMethodImpl","sourcecode":"private static boolean deepEmpty(final java.lang.String[] strings) {\n    if (strings == null) {\n        {\n            if (strings != null) {\n                for (final java.lang.String java.lang.String : strings) {\n                    if (org.apache.commons.lang3.StringUtils.isNotEmpty(s)) {\n                        return false;\n                    } \n                }\n            } \n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"setStrs":"strings"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2068","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[40],"tindex":"27c7a3d4-2eb2-11e6-a328-63d4400c016c","method":{"position":"org.apache.commons.lang3.time.DateUtils:614","type":"CtMethodImpl","sourcecode":"public static java.util.Date setSeconds(final java.util.Date date, final int amount) {\n    if (amount < 0) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.set(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"amount"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:335","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isWhitespace(c)"},"failures":[41,42],"tindex":"27c7a3d5-2eb2-11e6-a328-ffd635312232","method":{"position":"org.apache.commons.lang3.StringUtils:2602","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] split(final java.lang.String str, final char separatorChar) {\n    if (java.lang.Character.isWhitespace(separatorChar)) {\n        {\n            return org.apache.commons.lang3.StringUtils.splitWorker(str, separatorChar, false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"separatorChar"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:530","type":"CtBinaryOperatorImpl","sourcecode":"i == (count - 1)"},"failures":[],"tindex":"27c7cae6-2eb2-11e6-a328-bbeebb29027b","method":{"position":"org.apache.commons.lang3.ArrayUtils:2227","type":"CtMethodImpl","sourcecode":"public static int indexOf(final short[] array, final short valueToFind, int startIndex) {\n    if (startIndex == (startIndex - 1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                startIndex = 0;\n            } \n            for (int int = startIndex ; i < (array.int) ; i++) {\n                if (valueToFind == (array[i])) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"startIndex","i":"startIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:1012","type":"CtBinaryOperatorImpl","sourcecode":"(value < start) || (value > end)"},"failures":[],"tindex":"27c7cae7-2eb2-11e6-a328-25ecee80e922","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1060","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendln(final double value) {\n    if ((value < value) || (value > value)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return append(value).appendNewLine();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"value","end":"value","value":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3026","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[43],"tindex":"27c7cae8-2eb2-11e6-a328-299f505a28d0","method":{"position":"org.apache.commons.lang3.ArrayUtils:3025","type":"CtMethodImpl","sourcecode":"public static long[] toPrimitive(final java.lang.Long[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.long[];\n            } \n            final long[] long[] = new long[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = array[i].longValue();\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:1009","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[44],"tindex":"27c7f1f9-2eb2-11e6-a328-65246ef86089","method":{"position":"org.apache.commons.lang3.BooleanUtils:1008","type":"CtMethodImpl","sourcecode":"public static java.lang.Boolean or(final java.lang.Boolean... array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n            } \n            if ((array.int) == 0) {\n                throw new java.lang.IllegalArgumentException(\"Array is empty\");\n            } \n            try {\n                final boolean[] boolean[] = org.apache.commons.lang3.ArrayUtils.toPrimitive(array);\n                return org.apache.commons.lang3.BooleanUtils.or(primitive) ? java.lang.Boolean.java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n            } catch (final java.lang.NullPointerException ex) {\n                throw new java.lang.IllegalArgumentException(\"The array must not contain any null elements\");\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4171","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[45],"tindex":"27c7f1fa-2eb2-11e6-a328-4f5edbf9734a","method":{"position":"org.apache.commons.lang3.StringUtils:5769","type":"CtMethodImpl","sourcecode":"public static java.lang.String swapCase(final java.lang.String str) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n                return str;\n            } \n            final char[] char[] = str.toCharArray();\n            for (int int = 0 ; i < (buffer.int) ; i++) {\n                final char char = buffer[i];\n                if (java.lang.Character.isUpperCase(ch)) {\n                    buffer[i] = java.lang.Character.toLowerCase(ch);\n                } else if (java.lang.Character.isTitleCase(ch)) {\n                    buffer[i] = java.lang.Character.toLowerCase(ch);\n                } else if (java.lang.Character.isLowerCase(ch)) {\n                    buffer[i] = java.lang.Character.toUpperCase(ch);\n                } \n            }\n            return new java.lang.String(buffer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:474","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[],"tindex":"27c8190b-2eb2-11e6-a328-ad7202cf4cce","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1069","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n    if (buffer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = calendar.get(java.util.Calendar.java.util.Calendar.int);\n            if (value == 0) {\n                value = (calendar.getMaximum(java.util.Calendar.java.util.Calendar.int)) + 1;\n            } \n            org.apache.commons.lang3.time.FastDatePrinter.NumberRule.appendTo(buffer, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"buffer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:674","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[46],"tindex":"27c8190c-2eb2-11e6-a328-ab429000fac0","method":{"position":"org.apache.commons.lang3.text.StrBuilder:914","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendln(final java.lang.StringBuilder str) {\n    if (str == null) {\n        {\n            return append(str).appendNewLine();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:657","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[47,48,49,50],"tindex":"27c8190d-2eb2-11e6-a328-25fc6708a0ad","method":{"position":"org.apache.commons.lang3.BooleanUtils:881","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(final boolean bool, final java.lang.String trueString, final java.lang.String falseString) {\n    if (trueString == null) {\n        {\n            return bool ? trueString : falseString;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"trueString"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:304","type":"CtBinaryOperatorImpl","sourcecode":"lhs != rhs"},"failures":[],"tindex":"27c8190e-2eb2-11e6-a328-332760cbf8e1","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1869","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder replaceFirst(final char search, final char replace) {\n    if (replace != replace) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (search != replace) {\n                for (int int = 0 ; i < (int) ; i++) {\n                    if ((char[][i]) == search) {\n                        char[][i] = replace;\n                        break;\n                    } \n                }\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"replace","rhs":"replace"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2785","type":"CtBinaryOperatorImpl","sourcecode":"endIndex > (size)"},"failures":[],"tindex":"27c8401f-2eb2-11e6-a328-d93857c61119","method":{"position":"org.apache.commons.lang3.text.StrMatcher:333","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int isMatch(final char[] buffer, final int pos, final int bufferStart, final int bufferEnd) {\n    if (bufferEnd > bufferEnd) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (char) == (buffer[pos]) ? 1 : 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"bufferEnd","endIndex":"bufferEnd"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2559","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.ArrayUtils.isEmpty(array)"},"failures":[51,52],"tindex":"27c92a80-2eb2-11e6-a328-6591200e5c91","method":{"position":"org.apache.commons.lang3.ArrayUtils:418","type":"CtMethodImpl","sourcecode":"public static double[] clone(final double[] array) {\n    if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n        {\n            if (array == null) {\n                return null;\n            } \n            return array.clone();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1443","type":"CtBinaryOperatorImpl","sourcecode":"(dstPos + i) == append"},"failures":[53],"tindex":"27c99fb1-2eb2-11e6-a328-755922ce4715","method":{"position":"org.apache.commons.lang3.ArrayUtils:4677","type":"CtMethodImpl","sourcecode":"public static boolean[] remove(final boolean[] array, final int index) {\n    if ((index + index) == index) {\n        {\n            return ((boolean[])(org.apache.commons.lang3.ArrayUtils.remove(((java.lang.Object)(array)), index)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dstPos":"index","i":"index","append":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.JavaVersion:148","type":"CtInvocationImpl","sourcecode":"\"1.8\".equals(nom)"},"failures":[54,55,56,57,58,59,60,61,62],"tindex":"27c99fb2-2eb2-11e6-a328-e57188d24dd9","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1969","type":"CtMethodImpl","sourcecode":"protected void setNullText(java.lang.String nullText) {\n    if (\"1.8\".equals(nullText)) {\n        {\n            if (nullText == null) {\n                nullText = \"\";\n            } \n            org.apache.commons.lang3.builder.ToStringStyle.this.java.lang.String = nullText;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nom":"nullText"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2207","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[63],"tindex":"27c9c6c3-2eb2-11e6-a328-0d97502eded3","method":{"position":"org.apache.commons.lang3.CharUtils:108","type":"CtMethodImpl","sourcecode":"public static java.lang.Character toCharacterObject(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n                return null;\n            } \n            return java.lang.Character.valueOf(str.charAt(0));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3366","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[64,65],"tindex":"27cbc294-2eb2-11e6-a328-ad866add19e8","method":{"position":"org.apache.commons.lang3.ArrayUtils:812","type":"CtMethodImpl","sourcecode":"public static java.lang.Float[] nullToEmpty(final java.lang.Float[] array) {\n    if (array == null) {\n        {\n            if ((array == null) || ((array.int) == 0)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Float[];\n            } \n            return array;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:599","type":"CtBinaryOperatorImpl","sourcecode":"k == 31"},"failures":[],"tindex":"27cbc295-2eb2-11e6-a328-1717579c2ed3","method":{"position":"org.apache.commons.lang3.ArrayUtils:4742","type":"CtMethodImpl","sourcecode":"public static byte[] remove(final byte[] array, final int index) {\n    if (index == 31) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((byte[])(org.apache.commons.lang3.ArrayUtils.remove(((java.lang.Object)(array)), index)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:497","type":"CtBinaryOperatorImpl","sourcecode":"expPos > (-1)"},"failures":[66],"tindex":"27cc37c6-2eb2-11e6-a328-bff8594ae520","method":{"position":"org.apache.commons.lang3.BooleanUtils:216","type":"CtMethodImpl","sourcecode":"public static java.lang.Boolean toBooleanObject(final int value) {\n    if (value > (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return value == 0 ? java.lang.Boolean.java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"expPos":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:247","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[67],"tindex":"27cc37c7-2eb2-11e6-a328-2d3c74131e59","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:268","type":"CtMethodImpl","sourcecode":"public static int reflectionCompare(final java.lang.Object lhs, final java.lang.Object rhs, final boolean compareTransients, final java.lang.Class<?> reflectUpToClass, final java.lang.String... excludeFields) {\n    if (rhs == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (lhs == rhs) {\n                return 0;\n            } \n            if ((lhs == null) || (rhs == null)) {\n                throw new java.lang.NullPointerException();\n            } \n            java.lang.Class<?> java.lang.Class<?> = lhs.getClass();\n            if (!(lhsClazz.isInstance(rhs))) {\n                throw new java.lang.ClassCastException();\n            } \n            final org.apache.commons.lang3.builder.CompareToBuilder org.apache.commons.lang3.builder.CompareToBuilder = new org.apache.commons.lang3.builder.CompareToBuilder();\n            org.apache.commons.lang3.builder.CompareToBuilder.reflectionAppend(lhs, rhs, lhsClazz, compareToBuilder, compareTransients, excludeFields);\n            while (((lhsClazz.getSuperclass()) != null) && (lhsClazz != reflectUpToClass)) {\n                lhsClazz = lhsClazz.getSuperclass();\n                org.apache.commons.lang3.builder.CompareToBuilder.reflectionAppend(lhs, rhs, lhsClazz, compareToBuilder, compareTransients, excludeFields);\n            }\n            return compareToBuilder.toComparison();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"rhs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrMatcher:206","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[68,68,69,69,70,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96],"tindex":"27cc5ed8-2eb2-11e6-a328-b55ec10abd69","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1419","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final boolean[] array) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(fieldName)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(java.lang.String);\n            for (int int = 0 ; i < (array.int) ; i++) {\n                if (i > 0) {\n                    buffer.append(java.lang.String);\n                } \n                appendDetail(buffer, fieldName, array[i]);\n            }\n            buffer.append(java.lang.String);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4101","type":"CtBinaryOperatorImpl","sourcecode":"separator != null"},"failures":[],"tindex":"27cc5ed9-2eb2-11e6-a328-53ef133a727a","method":{"position":"org.apache.commons.lang3.exception.DefaultExceptionContext:91","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Object getFirstContextValue(final java.lang.String label) {\n    if (label != null) {\n        {\n            for (final org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object> org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object> : java.util.List<org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>>) {\n                if (org.apache.commons.lang3.StringUtils.equals(label, pair.getKey())) {\n                    return pair.getValue();\n                } \n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"separator":"label"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:991","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[97,98],"tindex":"27cc5eda-2eb2-11e6-a328-8f4c4b34d6e5","method":{"position":"org.apache.commons.lang3.ObjectUtils:238","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static int hashCodeMulti(final java.lang.Object... objects) {\n    if (objects == null) {\n        {\n            int int = 1;\n            if (objects != null) {\n                for (final java.lang.Object java.lang.Object : objects) {\n                    int int = org.apache.commons.lang3.ObjectUtils.hashCode(object);\n                    hash = (hash * 31) + tmpHash;\n                }\n            } \n            return hash;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"objects"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:765","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isBlank(str)"},"failures":[99],"tindex":"27cc85eb-2eb2-11e6-a328-391179bd927d","method":{"position":"org.apache.commons.lang3.reflect.MethodUtils:316","type":"CtMethodImpl","sourcecode":"public static java.lang.Object invokeExactStaticMethod(final java.lang.Class<?> cls, final java.lang.String methodName, java.lang.Object... args) throws java.lang.IllegalAccessException, java.lang.NoSuchMethodException, java.lang.reflect.InvocationTargetException {\n    if (org.apache.commons.lang3.StringUtils.isBlank(methodName)) {\n        {\n            args = org.apache.commons.lang3.ArrayUtils.nullToEmpty(args);\n            final java.lang.Class<?>[] java.lang.Class<?>[] = org.apache.commons.lang3.ClassUtils.toClass(args);\n            return org.apache.commons.lang3.reflect.MethodUtils.invokeExactStaticMethod(cls, methodName, args, parameterTypes);\n        }\n    } else {\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"methodName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.JavaVersion:146","type":"CtInvocationImpl","sourcecode":"\"1.7\".equals(nom)"},"failures":[],"tindex":"27cc85ec-2eb2-11e6-a328-d5d2e14f4f2d","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:908","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final short value) {\n    if (\"1.7\".equals(fieldName)) {\n        {\n            if (fieldName == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, value);\n                    return org.apache.commons.lang3.builder.ToStringBuilder.this;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nom":"fieldName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:239","type":"CtBinaryOperatorImpl","sourcecode":"(cal1 == null) || (cal2 == null)"},"failures":[],"tindex":"27cc85ed-2eb2-11e6-a328-cb320c8b4a76","method":{"position":"org.apache.commons.lang3.AnnotationUtils:91","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, java.lang.Object value) {\n    if ((value == null) || (value == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value instanceof java.lang.annotation.Annotation) {\n                value = org.apache.commons.lang3.AnnotationUtils.toString(((java.lang.annotation.Annotation)(value)));\n            } \n            super.appendDetail(buffer, fieldName, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cal2":"value","cal1":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:968","type":"CtBinaryOperatorImpl","sourcecode":"(value < start) || (value > end)"},"failures":[],"tindex":"27ccacfe-2eb2-11e6-a328-559a2e86e246","method":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:230","type":"CtMethodImpl","sourcecode":"public static java.lang.String formatPeriodISO(final long startMillis, final long endMillis) {\n    if ((endMillis < startMillis) || (value > startMillis)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(startMillis, endMillis, org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.String, false, java.util.TimeZone.getDefault());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"startMillis","end":"startMillis","value":"endMillis"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2174","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[100],"tindex":"27ccacff-2eb2-11e6-a328-e7982dcad79e","method":{"position":"org.apache.commons.lang3.StringUtils:2516","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] substringsBetween(final java.lang.String str, final java.lang.String open, final java.lang.String close) {\n    if (open == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((str == null) || (org.apache.commons.lang3.StringUtils.isEmpty(open))) || (org.apache.commons.lang3.StringUtils.isEmpty(close))) {\n                return null;\n            } \n            final int int = str.length();\n            if (strLen == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.String[];\n            } \n            final int int = close.length();\n            final int int = open.length();\n            final java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n            int int = 0;\n            while (pos < (strLen - closeLen)) {\n                int int = str.indexOf(open, pos);\n                if (start < 0) {\n                    break;\n                } \n                start += openLen;\n                final int int = str.indexOf(close, start);\n                if (end < 0) {\n                    break;\n                } \n                list.add(str.substring(start, end));\n                pos = end + closeLen;\n            }\n            if (list.isEmpty()) {\n                return null;\n            } \n            return list.toArray(new java.lang.String[list.size()]);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"open"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:891","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[],"tindex":"27cd2130-2eb2-11e6-a328-8bcac13e48ac","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:487","type":"CtMethodImpl","sourcecode":"static void unregister(final java.lang.Object value) {\n    if (value == value) {\n        {\n            java.util.Set<org.apache.commons.lang3.builder.IDKey> java.util.Set<org.apache.commons.lang3.builder.IDKey> = org.apache.commons.lang3.builder.HashCodeBuilder.getRegistry();\n            if (registry != null) {\n                registry.remove(new org.apache.commons.lang3.builder.IDKey(value));\n                synchronized(org.apache.commons.lang3.builder.HashCodeBuilder.org.apache.commons.lang3.builder.HashCodeBuilder.java.lang.Class) {\n                    registry = org.apache.commons.lang3.builder.HashCodeBuilder.getRegistry();\n                    if ((registry != null) && (registry.isEmpty())) {\n                        org.apache.commons.lang3.builder.HashCodeBuilder.org.apache.commons.lang3.builder.HashCodeBuilder.java.lang.ThreadLocal<java.util.Set<org.apache.commons.lang3.builder.IDKey>>.remove();\n                    } \n                }\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"value","rhs":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:735","type":"CtInvocationImpl","sourcecode":"str.equals(falseString)"},"failures":[101,102,103,104,105,106],"tindex":"27cd2131-2eb2-11e6-a328-ab7455d38301","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:591","type":"CtMethodImpl","sourcecode":"public static final java.lang.String escapeHtml4(final java.lang.String input) {\n    if (input.equals(input)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"input","falseString":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.reflect.InvocationTargetException","condition":{"position":"org.apache.commons.lang3.ClassUtils:517","type":"CtBinaryOperatorImpl","sourcecode":"classArray == null"},"failures":[],"tindex":"27cd2132-2eb2-11e6-a328-cb08c48e48ff","method":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:108","type":"CtMethodImpl","sourcecode":"public static <T>T invokeConstructor(final java.lang.Class<T> cls, java.lang.Object[] args, java.lang.Class<?>[] parameterTypes) throws java.lang.IllegalAccessException, java.lang.InstantiationException, java.lang.NoSuchMethodException, java.lang.reflect.InvocationTargetException {\n    if (parameterTypes == null) {\n        throw new java.lang.reflect.InvocationTargetException();\n    } else {\n        {\n            args = org.apache.commons.lang3.ArrayUtils.nullToEmpty(args);\n            parameterTypes = org.apache.commons.lang3.ArrayUtils.nullToEmpty(parameterTypes);\n            final java.lang.reflect.Constructor<T> java.lang.reflect.Constructor<T> = org.apache.commons.lang3.reflect.ConstructorUtils.getMatchingAccessibleConstructor(cls, parameterTypes);\n            if (ctor == null) {\n                throw new java.lang.NoSuchMethodException((\"No such accessible constructor on object: \" + (cls.getName())));\n            } \n            return ctor.newInstance(args);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classArray":"parameterTypes"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:530","type":"CtBinaryOperatorImpl","sourcecode":"((dec == null) && (exp == null)) && ((((numeric.charAt(0)) == '-') && (org.apache.commons.lang3.math.NumberUtils.isDigits(numeric.substring(1)))) || (org.apache.commons.lang3.math.NumberUtils.isDigits(numeric)))"},"failures":[],"tindex":"27cd9663-2eb2-11e6-a328-5517dde271b3","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1195","type":"CtMethodImpl","sourcecode":"protected void appendSummary(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final byte[] array) {\n    if (((fieldName == null) && (fieldName == null)) && ((((fieldName.charAt(0)) == '-') && (org.apache.commons.lang3.math.NumberUtils.isDigits(numeric.substring(1)))) || (org.apache.commons.lang3.math.NumberUtils.isDigits(numeric)))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendSummarySize(buffer, fieldName, array.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dec":"fieldName","numeric":"fieldName","exp":"fieldName"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1099","type":"CtBinaryOperatorImpl","sourcecode":"b < a"},"failures":[],"tindex":"27cd9664-2eb2-11e6-a328-23e7b436144b","method":{"position":"org.apache.commons.lang3.Validate:1081","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"boxing\")\npublic static void exclusiveBetween(long start, long end, long value) {\n    if (end < start) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((value <= start) || (value >= end)) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.java.lang.String, value, start, end));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"start","b":"end"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3088","type":"CtBinaryOperatorImpl","sourcecode":"separatorChars == null"},"failures":[107],"tindex":"27cd9665-2eb2-11e6-a328-152f99534437","method":{"position":"org.apache.commons.lang3.StringUtils:7187","type":"CtMethodImpl","sourcecode":"public static boolean startsWithIgnoreCase(final java.lang.CharSequence str, final java.lang.CharSequence prefix) {\n    if (prefix == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.startsWith(str, prefix, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"separatorChars":"prefix"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:724","type":"CtBinaryOperatorImpl","sourcecode":"lhs != rhs"},"failures":[108],"tindex":"27cdbd76-2eb2-11e6-a328-6fc05b74e5ef","method":{"position":"org.apache.commons.lang3.ArrayUtils:3183","type":"CtMethodImpl","sourcecode":"public static short[] toPrimitive(final java.lang.Short[] array, final short valueForNull) {\n    if (valueForNull != valueForNull) {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.short[];\n            } \n            final short[] short[] = new short[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                final java.lang.Short java.lang.Short = array[i];\n                result[i] = b == null ? valueForNull : b.shortValue();\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"valueForNull","rhs":"valueForNull"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:452","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[109,110,111,112,113,5,7],"tindex":"27cdbd77-2eb2-11e6-a328-6f97cc367c47","method":{"position":"org.apache.commons.lang3.exception.ContextedException:253","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.String getFormattedExceptionMessage(final java.lang.String baseMessage) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(baseMessage)) {\n        {\n            return org.apache.commons.lang3.exception.ExceptionContext.getFormattedExceptionMessage(baseMessage);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"baseMessage"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1092","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[114,115],"tindex":"27cdbd78-2eb2-11e6-a328-8320d4f9480f","method":{"position":"org.apache.commons.lang3.ArrayUtils:572","type":"CtMethodImpl","sourcecode":"public static short[] nullToEmpty(final short[] array) {\n    if (array == null) {\n        {\n            if ((array == null) || ((array.int) == 0)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.short[];\n            } \n            return array;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:727","type":"CtBinaryOperatorImpl","sourcecode":"(((nShorts - 1) * 16) + dstPos) >= 64"},"failures":[116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137],"tindex":"27cde489-2eb2-11e6-a328-b739a6ed9904","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:918","type":"CtMethodImpl","sourcecode":"protected java.lang.String resolveVariable(final java.lang.String variableName, final org.apache.commons.lang3.text.StrBuilder buf, final int startPos, final int endPos) {\n    if ((((startPos - 1) * 16) + startPos) >= 64) {\n        {\n            final org.apache.commons.lang3.text.StrLookup<?> org.apache.commons.lang3.text.StrLookup<?> = getVariableResolver();\n            if (resolver == null) {\n                return null;\n            } \n            return resolver.lookup(variableName);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dstPos":"startPos","nShorts":"startPos"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:219","type":"CtBinaryOperatorImpl","sourcecode":"(cal1 == null) || (cal2 == null)"},"failures":[138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181],"tindex":"27cde48a-2eb2-11e6-a328-c9dfaa871c24","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:435","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.String format(final java.util.Calendar calendar) {\n    if ((calendar == null) || (calendar == null)) {\n        {\n            return format(calendar, new java.lang.StringBuffer(int)).toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cal2":"calendar","cal1":"calendar"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:94","type":"CtInvocationImpl","sourcecode":"str.isEmpty()"},"failures":[],"tindex":"27cf441b-2eb2-11e6-a328-fb7bfb189abd","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:572","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final byte value) {\n    if (fieldName.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, value);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1499","type":"CtBinaryOperatorImpl","sourcecode":"str != null"},"failures":[182,183,184,185,186,187,188],"tindex":"27cf441c-2eb2-11e6-a328-0de468125616","method":{"position":"org.apache.commons.lang3.LocaleUtils:90","type":"CtMethodImpl","sourcecode":"public static java.util.Locale toLocale(final java.lang.String str) {\n    if (str != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return null;\n            } \n            if (str.isEmpty()) {\n                return new java.util.Locale(\"\" , \"\");\n            } \n            if (str.contains(\"#\")) {\n                throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + str));\n            } \n            final int int = str.length();\n            if (len < 2) {\n                throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + str));\n            } \n            final char char = str.charAt(0);\n            if (ch0 == '_') {\n                if (len < 3) {\n                    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + str));\n                } \n                final char char = str.charAt(1);\n                final char char = str.charAt(2);\n                if ((!(java.lang.Character.isUpperCase(ch1))) || (!(java.lang.Character.isUpperCase(ch2)))) {\n                    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + str));\n                } \n                if (len == 3) {\n                    return new java.util.Locale(\"\" , str.substring(1, 3));\n                } \n                if (len < 5) {\n                    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + str));\n                } \n                if ((str.charAt(3)) != '_') {\n                    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + str));\n                } \n                return new java.util.Locale(\"\" , str.substring(1, 3) , str.substring(4));\n            } \n            java.lang.String[] java.lang.String[] = str.split(\"_\", (-1));\n            int int = (split.int) - 1;\n            switch (occurrences) {\n                case 0 :\n                    if ((org.apache.commons.lang3.StringUtils.isAllLowerCase(str)) && ((len == 2) || (len == 3))) {\n                        return new java.util.Locale(str);\n                    } else {\n                        throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + str));\n                    }\n                case 1 :\n                    if ((((org.apache.commons.lang3.StringUtils.isAllLowerCase(split[0])) && (((split[0].length()) == 2) || ((split[0].length()) == 3))) && ((split[1].length()) == 2)) && (org.apache.commons.lang3.StringUtils.isAllUpperCase(split[1]))) {\n                        return new java.util.Locale(split[0] , split[1]);\n                    } else {\n                        throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + str));\n                    }\n                case 2 :\n                    if ((((org.apache.commons.lang3.StringUtils.isAllLowerCase(split[0])) && (((split[0].length()) == 2) || ((split[0].length()) == 3))) && (((split[1].length()) == 0) || (((split[1].length()) == 2) && (org.apache.commons.lang3.StringUtils.isAllUpperCase(split[1]))))) && ((split[2].length()) > 0)) {\n                        return new java.util.Locale(split[0] , split[1] , split[2]);\n                    } \n                default :\n                    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + str));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5033","type":"CtBinaryOperatorImpl","sourcecode":"index == (org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND)"},"failures":[],"tindex":"27cf923d-2eb2-11e6-a328-f5fddd4c6684","method":{"position":"org.apache.commons.lang3.ArrayUtils:2332","type":"CtMethodImpl","sourcecode":"public static int indexOf(final char[] array, final char valueToFind, int startIndex) {\n    if (startIndex == startIndex) {\n        {\n            if (array == null) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                startIndex = 0;\n            } \n            for (int int = startIndex ; i < (array.int) ; i++) {\n                if (valueToFind == (array[i])) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND":"startIndex","index":"startIndex"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2974","type":"CtBinaryOperatorImpl","sourcecode":"match || (preserveAllTokens && lastMatch)"},"failures":[26,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213],"tindex":"27cf923e-2eb2-11e6-a328-e3a37d575b87","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:938","type":"CtMethodImpl","sourcecode":"protected void setEquals(final boolean isEquals) {\n    if (isEquals || (isEquals && isEquals)) {\n        {\n            org.apache.commons.lang3.builder.EqualsBuilder.this.boolean = isEquals;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"preserveAllTokens":"isEquals","lastMatch":"isEquals","match":"isEquals"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:346","type":"CtUnaryOperatorImpl","sourcecode":"!(java.util.Arrays.equals(lhs, rhs))"},"failures":[],"tindex":"27cf923f-2eb2-11e6-a328-5b03de8f6982","method":{"position":"org.apache.commons.lang3.text.StrBuilder:980","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendln(final char[] chars) {\n    if (!(java.util.Arrays.equals(chars, chars))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return append(chars).appendNewLine();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"chars","rhs":"chars"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.reflect.InvocationTargetException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:940","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"27cf9240-2eb2-11e6-a328-c53ec3613c8f","method":{"position":"org.apache.commons.lang3.reflect.MethodUtils:215","type":"CtMethodImpl","sourcecode":"public static java.lang.Object invokeExactStaticMethod(final java.lang.Class<?> cls, final java.lang.String methodName, java.lang.Object[] args, java.lang.Class<?>[] parameterTypes) throws java.lang.IllegalAccessException, java.lang.NoSuchMethodException, java.lang.reflect.InvocationTargetException {\n    if (args == null) {\n        throw new java.lang.reflect.InvocationTargetException();\n    } else {\n        {\n            args = org.apache.commons.lang3.ArrayUtils.nullToEmpty(args);\n            parameterTypes = org.apache.commons.lang3.ArrayUtils.nullToEmpty(parameterTypes);\n            final java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethod(cls, methodName, parameterTypes);\n            if (method == null) {\n                throw new java.lang.NoSuchMethodException((((\"No such accessible method: \" + methodName) + \"() on class: \") + (cls.getName())));\n            } \n            return method.invoke(null, args);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"args"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1386","type":"CtBinaryOperatorImpl","sourcecode":"width > 0"},"failures":[214,215,216,217,218,219,220,221,222,223,224,225,226],"tindex":"27cfb951-2eb2-11e6-a328-a5ad1babdbc2","method":{"position":"org.apache.commons.lang3.math.Fraction:141","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.math.Fraction getFraction(int numerator, int denominator) {\n    if (numerator > 0) {\n        {\n            if (denominator == 0) {\n                throw new java.lang.ArithmeticException(\"The denominator must not be zero\");\n            } \n            if (denominator < 0) {\n                if ((numerator == (java.lang.Integer.java.lang.Integer.int)) || (denominator == (java.lang.Integer.java.lang.Integer.int))) {\n                    throw new java.lang.ArithmeticException(\"overflow: can't negate\");\n                } \n                numerator = -numerator;\n                denominator = -denominator;\n            } \n            return new org.apache.commons.lang3.math.Fraction(numerator , denominator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"width":"numerator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.StringUtils:829","type":"CtBinaryOperatorImpl","sourcecode":"(str1 == null) || (str2 == null)"},"failures":[],"tindex":"27cfb952-2eb2-11e6-a328-a1a8e862774a","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:742","type":"CtMethodImpl","sourcecode":"public static void writeField(final java.lang.Object target, final java.lang.String fieldName, final java.lang.Object value, final boolean forceAccess) throws java.lang.IllegalAccessException {\n    if ((target == null) || (value == null)) {\n        throw new java.lang.IllegalAccessException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.isTrue((target != null), \"target object must not be null\");\n            final java.lang.Class<?> java.lang.Class<?> = target.getClass();\n            final java.lang.reflect.Field java.lang.reflect.Field = org.apache.commons.lang3.reflect.FieldUtils.getField(cls, fieldName, forceAccess);\n            org.apache.commons.lang3.Validate.isTrue((field != null), \"Cannot locate declared field %s.%s\", cls.getName(), fieldName);\n            org.apache.commons.lang3.reflect.FieldUtils.writeField(field, target, value, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str1":"target","str2":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomUtils:89","type":"CtBinaryOperatorImpl","sourcecode":"startInclusive == endExclusive"},"failures":[227,228],"tindex":"27cfb953-2eb2-11e6-a328-418118f7a5bf","method":{"position":"org.apache.commons.lang3.RandomStringUtils:110","type":"CtMethodImpl","sourcecode":"public static java.lang.String randomAlphanumeric(final int count) {\n    if (count == count) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.RandomStringUtils.random(count, true, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startInclusive":"count","endExclusive":"count"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1173","type":"CtBinaryOperatorImpl","sourcecode":"rangeStyle == (org.apache.commons.lang3.time.DateUtils.RANGE_MONTH_MONDAY)"},"failures":[],"tindex":"27cfe064-2eb2-11e6-a328-b5084d4cef7c","method":{"position":"org.apache.commons.lang3.BooleanUtils:198","type":"CtMethodImpl","sourcecode":"public static boolean toBoolean(final int value) {\n    if (value == value) {\n        {\n            return value != 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"rangeStyle":"value","org.apache.commons.lang3.time.DateUtils.RANGE_MONTH_MONDAY":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5770","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[229],"tindex":"27cfe065-2eb2-11e6-a328-b5599d5d4a0a","method":{"position":"org.apache.commons.lang3.StringUtils:5811","type":"CtMethodImpl","sourcecode":"public static int countMatches(final java.lang.CharSequence str, final java.lang.CharSequence sub) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(sub))) {\n                return 0;\n            } \n            int int = 0;\n            int int = 0;\n            while ((idx = org.apache.commons.lang3.CharSequenceUtils.indexOf(str, sub, idx)) != (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) {\n                count++;\n                idx += sub.length();\n            }\n            return count;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1970","type":"CtBinaryOperatorImpl","sourcecode":"nullText == null"},"failures":[230],"tindex":"27d13ff6-2eb2-11e6-a328-cbbe934cad8b","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:133","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.time.FastDateFormat getInstance(final java.lang.String pattern, final java.util.TimeZone timeZone) {\n    if (pattern == null) {\n        {\n            return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getInstance(pattern, timeZone, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nullText":"pattern"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:338","type":"CtBinaryOperatorImpl","sourcecode":"(c != (org.apache.commons.lang3.text.ExtendedMessageFormat.START_FMT)) && (c != (org.apache.commons.lang3.text.ExtendedMessageFormat.END_FE))"},"failures":[],"tindex":"27d13ff7-2eb2-11e6-a328-2d5db7460daa","method":{"position":"org.apache.commons.lang3.CharUtils:352","type":"CtMethodImpl","sourcecode":"public static java.lang.String unicodeEscaped(final char ch) {\n    if ((ch != ch) && (c != ch)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (ch < 16) {\n                return \"\\\\u000\" + (java.lang.Integer.toHexString(ch));\n            } else if (ch < 256) {\n                return \"\\\\u00\" + (java.lang.Integer.toHexString(ch));\n            } else if (ch < 4096) {\n                return \"\\\\u0\" + (java.lang.Integer.toHexString(ch));\n            } \n            return \"\\\\u\" + (java.lang.Integer.toHexString(ch));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.lang3.text.ExtendedMessageFormat.START_FMT":"ch","c":"ch","org.apache.commons.lang3.text.ExtendedMessageFormat.END_FE":"ch"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1574","type":"CtBinaryOperatorImpl","sourcecode":"fullDetailRequest == null"},"failures":[231],"tindex":"27d13ff8-2eb2-11e6-a328-570d509f12bc","method":{"position":"org.apache.commons.lang3.BooleanUtils:158","type":"CtMethodImpl","sourcecode":"public static boolean toBoolean(final java.lang.Boolean bool) {\n    if (bool == null) {\n        {\n            return (bool != null) && (bool.booleanValue());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fullDetailRequest":"bool"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3206","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[3,232,233],"tindex":"27d16709-2eb2-11e6-a328-6306d81c616a","method":{"position":"org.apache.commons.lang3.ArrayUtils:2209","type":"CtMethodImpl","sourcecode":"public static int indexOf(final short[] array, final short valueToFind) {\n    if (array == null) {\n        {\n            return org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:1106","type":"CtBinaryOperatorImpl","sourcecode":"(value <= start) || (value >= end)"},"failures":[],"tindex":"27d1670a-2eb2-11e6-a328-53e1f38aca89","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1098","type":"CtMethodImpl","sourcecode":"public static long min(long a, final long b, final long c) {\n    if ((c <= c) || (value >= b)) {\n        {\n            if (b < a) {\n                a = b;\n            } \n            if (c < a) {\n                a = c;\n            } \n            return a;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"c","end":"b","value":"c"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.StringUtils:896","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(seq)"},"failures":[],"tindex":"27d1670b-2eb2-11e6-a328-25297c517931","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:719","type":"CtMethodImpl","sourcecode":"public static void writeField(final java.lang.Object target, final java.lang.String fieldName, final java.lang.Object value) throws java.lang.IllegalAccessException {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(value)) {\n        {\n            org.apache.commons.lang3.reflect.FieldUtils.writeField(target, fieldName, value, false);\n        }\n    } else {\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"seq":"value"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6502","type":"CtBinaryOperatorImpl","sourcecode":"str1 == null"},"failures":[],"tindex":"27d1670c-2eb2-11e6-a328-97c3f20b5042","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:921","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final short[] array) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, array, null);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str1":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:1083","type":"CtBinaryOperatorImpl","sourcecode":"(value <= start) || (value >= end)"},"failures":[],"tindex":"27d18e1d-2eb2-11e6-a328-01e63623866c","method":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:81","type":"CtMethodImpl","sourcecode":"public static java.lang.String formatDurationHMS(final long durationMillis) {\n    if ((durationMillis <= durationMillis) || (value >= durationMillis)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(durationMillis, \"H:mm:ss.SSS\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"durationMillis","end":"durationMillis","value":"durationMillis"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1222","type":"CtBinaryOperatorImpl","sourcecode":"(seq == null) || (searchSeq == null)"},"failures":[4,109,234,110,111,112,113,5,6,7,235,236,237,238],"tindex":"27d18e1e-2eb2-11e6-a328-4fe5d4ae0a2d","method":{"position":"org.apache.commons.lang3.exception.ContextedException:171","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic org.apache.commons.lang3.exception.ContextedException addContextValue(final java.lang.String label, final java.lang.Object value) {\n    if ((value == null) || (value == null)) {\n        {\n            org.apache.commons.lang3.exception.ExceptionContext.addContextValue(label, value);\n            return org.apache.commons.lang3.exception.ContextedException.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"searchSeq":"value","seq":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2442","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[],"tindex":"27d18e1f-2eb2-11e6-a328-a7e60149e220","method":{"position":"org.apache.commons.lang3.RandomStringUtils:124","type":"CtMethodImpl","sourcecode":"public static java.lang.String randomNumeric(final int count) {\n    if (count < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.RandomStringUtils.random(count, false, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:146","type":"CtBinaryOperatorImpl","sourcecode":"(numerator == (java.lang.Integer.MIN_VALUE)) || (denominator == (java.lang.Integer.MIN_VALUE))"},"failures":[239,240,241],"tindex":"27d1b530-2eb2-11e6-a328-4b55179081cd","method":{"position":"org.apache.commons.lang3.RandomUtils:62","type":"CtMethodImpl","sourcecode":"public static byte[] nextBytes(int count) {\n    if ((count == count) || (count == (java.lang.Integer.java.lang.Integer.int))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.isTrue((count >= 0), \"Count cannot be negative.\");\n            byte[] byte[] = new byte[count];\n            org.apache.commons.lang3.RandomUtils.org.apache.commons.lang3.RandomUtils.java.util.Random.nextBytes(result);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.lang.Integer.MIN_VALUE":"count","numerator":"count","denominator":"count"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:342","type":"CtBinaryOperatorImpl","sourcecode":"toType instanceof java.lang.reflect.TypeVariable<?>"},"failures":[],"tindex":"27d1b531-2eb2-11e6-a328-715d7798971c","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:588","type":"CtMethodImpl","sourcecode":"private static boolean isAssignable(final java.lang.reflect.Type type, final java.lang.reflect.WildcardType toWildcardType, final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> typeVarAssigns) {\n    if (type instanceof java.lang.reflect.TypeVariable<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (type == null) {\n                return true;\n            } \n            if (toWildcardType == null) {\n                return false;\n            } \n            if (toWildcardType.equals(type)) {\n                return true;\n            } \n            final java.lang.reflect.Type[] java.lang.reflect.Type[] = org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(toWildcardType);\n            final java.lang.reflect.Type[] java.lang.reflect.Type[] = org.apache.commons.lang3.reflect.TypeUtils.getImplicitLowerBounds(toWildcardType);\n            if (type instanceof java.lang.reflect.WildcardType) {\n                final java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(type));\n                final java.lang.reflect.Type[] java.lang.reflect.Type[] = org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(wildcardType);\n                final java.lang.reflect.Type[] java.lang.reflect.Type[] = org.apache.commons.lang3.reflect.TypeUtils.getImplicitLowerBounds(wildcardType);\n                for (java.lang.reflect.Type java.lang.reflect.Type : toUpperBounds) {\n                    toBound = org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(toBound, typeVarAssigns);\n                    for (final java.lang.reflect.Type java.lang.reflect.Type : upperBounds) {\n                        if (!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(bound, toBound, typeVarAssigns))) {\n                            return false;\n                        } \n                    }\n                }\n                for (java.lang.reflect.Type java.lang.reflect.Type : toLowerBounds) {\n                    toBound = org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(toBound, typeVarAssigns);\n                    for (final java.lang.reflect.Type java.lang.reflect.Type : lowerBounds) {\n                        if (!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(toBound, bound, typeVarAssigns))) {\n                            return false;\n                        } \n                    }\n                }\n                return true;\n            } \n            for (final java.lang.reflect.Type java.lang.reflect.Type : toUpperBounds) {\n                if (!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(type, org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(toBound, typeVarAssigns), typeVarAssigns))) {\n                    return false;\n                } \n            }\n            for (final java.lang.reflect.Type java.lang.reflect.Type : toLowerBounds) {\n                if (!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(toBound, typeVarAssigns), type, typeVarAssigns))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toType":"type"},"type":"special","returnInThen":false,"status":0},{"exception":"java.text.ParseException","condition":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:202","type":"CtBinaryOperatorImpl","sourcecode":"(tmp.length()) != (duration.length())"},"failures":[],"tindex":"27d1dc42-2eb2-11e6-a328-2b2c4e7f128f","method":{"position":"org.apache.commons.lang3.time.DateUtils:310","type":"CtMethodImpl","sourcecode":"public static java.util.Date parseDateStrictly(final java.lang.String str, final java.lang.String... parsePatterns) throws java.text.ParseException {\n    if ((str.length()) != (str.length())) {\n        throw new java.text.ParseException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateUtils.parseDateStrictly(str, null, parsePatterns);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"duration":"str","tmp":"str"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.EnumUtils:91","type":"CtBinaryOperatorImpl","sourcecode":"enumName == null"},"failures":[242],"tindex":"27d22a63-2eb2-11e6-a328-e9ea043f685b","method":{"position":"org.apache.commons.lang3.StringUtils:1963","type":"CtMethodImpl","sourcecode":"public static int indexOfAny(final java.lang.CharSequence str, final java.lang.CharSequence... searchStrs) {\n    if (str == null) {\n        {\n            if ((str == null) || (searchStrs == null)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            final int int = searchStrs.int;\n            int int = java.lang.Integer.java.lang.Integer.int;\n            int int = 0;\n            for (int int = 0 ; i < sz ; i++) {\n                final java.lang.CharSequence java.lang.CharSequence = searchStrs[i];\n                if (search == null) {\n                    continue;\n                } \n                tmp = org.apache.commons.lang3.CharSequenceUtils.indexOf(str, search, 0);\n                if (tmp == (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) {\n                    continue;\n                } \n                if (tmp < ret) {\n                    ret = tmp;\n                } \n            }\n            return ret == (java.lang.Integer.java.lang.Integer.int) ? org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int : ret;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumName":"str"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":79,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}