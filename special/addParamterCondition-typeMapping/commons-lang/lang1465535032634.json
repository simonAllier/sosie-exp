{"failureDictionary":{"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":25,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testAddContextValue":104,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseUncheckedChecked":136,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":20,"org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayString":119,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":48,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":51,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":35,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_BC":90,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":118,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang303":61,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceFirst_String_String":130,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":17,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":21,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNull":162,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testConcurrentExceptionCauseNull":134,"org.apache.commons.lang3.ValidateTest.testValidIndex_collection":5,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testSimpleDate":56,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":6,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLocaleMatches":59,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":12,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":28,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_AD":91,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":53,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":71,"org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayOfFloats":47,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_AD":89,"org.apache.commons.lang3.StringUtilsTest.testJoin_Objectarray":120,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":150,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":62,"org.apache.commons.lang3.StringUtilsTest.testAppendIfMissing":126,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePartialString_noReplace":39,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoVariables":29,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":31,"org.apache.commons.lang3.StringUtilsTest.testCenter_StringIntString":117,"org.apache.commons.lang3.AnnotationUtilsTest.testAnnotationsOfDifferingTypes":157,"org.apache.commons.lang3.math.FractionTest.testFactory_double":42,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetEscape":164,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testGetContextValues":108,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.test_Equality_Hash":85,"org.apache.commons.lang3.math.NumberUtilsTest.testLANG971":148,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":8,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":36,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":33,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":9,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testEquals":93,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":10,"org.apache.commons.lang3.StringUtilsTest.testJoin_Objects":121,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testGetFirstContextValue":107,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseChecked":132,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testInitializeUncheckedEx":142,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_BC":92,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":13,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testTimeZoneMatches":67,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_AD":78,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":15,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":14,"org.apache.commons.lang3.math.FractionTest.testMultiply":45,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":52,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":11,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testTimeZoneMatches":95,"org.apache.commons.lang3.StringUtilsTest.testLeftPad_StringIntString":115,"org.apache.commons.lang3.math.FractionTest.testAdd":124,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testAmPm":76,"org.apache.commons.lang3.exception.ContextedExceptionTest.testAddContextValue":99,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetPrefix":165,"org.apache.commons.lang3.exception.ContextedExceptionTest.testJavaSerialization":100,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testPatternMatches":96,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testConcurrentExceptionCauseUnchecked":141,"org.apache.commons.lang3.math.FractionTest.testDivide":44,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":54,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetSuffix":166,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testJavaSerialization":110,"org.apache.commons.lang3.StringUtilsTest.testAppendIfMissingIgnoreCase":125,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testCreateIfAbsentUncheckedException":138,"org.apache.commons.lang3.AnnotationUtilsTest.testHashCode":158,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testJavaSerialization":105,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":23,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetFirstContextValue":112,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":66,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testConcurrentExceptionCauseError":133,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeEx":143,"org.apache.commons.lang3.AnnotationUtilsTest.testNonEquivalentAnnotationsOfSameType":3,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":88,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmpty":37,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testConcurrentRuntimeExceptionCauseNull":139,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":49,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testConcurrentRuntimeExceptionCauseUnchecked":137,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLowYearPadding":77,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLANG_832":84,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_AD":86,"org.apache.commons.lang3.AnnotationUtilsTest.testSameInstance":156,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetValueDelimiter":163,"org.apache.commons.lang3.StringUtilsTest.testLeftPad_StringIntChar":116,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":18,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testToStringContainsName":64,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":50,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseChecked":131,"org.apache.commons.lang3.AnnotationUtilsTest.testIsValidAnnotationMemberType":4,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayLong":167,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayObject":122,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateBigInteger":151,"org.apache.commons.lang3.exception.ContextedExceptionTest.testGetFirstContextValue":102,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testConcurrentRuntimeExceptionCauseError":140,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":38,"org.apache.commons.lang3.AnnotationUtilsTest.testBothArgsNull":159,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":19,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_String":0,"org.apache.commons.lang3.exception.ContextedExceptionTest.testGetContextValues":103,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorNoArgs":22,"org.apache.commons.lang3.AnnotationUtilsTest.testEquivalence":1,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_BC":87,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testMilleniumBug":58,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_BC":79,"org.apache.commons.lang3.exception.ContextedExceptionTest.testSetContextValue":101,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testEquals":98,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetContextValues":113,"org.apache.commons.lang3.AnnotationUtilsTest.testGeneratedAnnotationEquivalentToRealAnnotation":2,"org.apache.commons.lang3.math.FractionTest.testToProperString":43,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testAddContextValue":109,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testEquals":65,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyCharEmptyArray":128,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":16,"org.apache.commons.lang3.math.FractionTest.testPow":41,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":55,"org.apache.commons.lang3.AnnotationUtilsTest.testOneArgNull":154,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseNumerics":80,"org.apache.commons.lang3.mutable.MutableLongTest.testGetSet":114,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang538":82,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetInterruptedException":146,"org.apache.commons.lang3.BooleanUtilsTest.test_toIntegerObject_boolean_Integer_Integer":153,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":123,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseZone":75,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseUncheckedChecked":135,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang645":63,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testSpecialCharacters":70,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":26,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testEqualsOnStrings":97,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLowYearPadding":60,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":27,"org.apache.commons.lang3.math.FractionTest.testReducedFactory_int_int":40,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testSetContextValue":106,"org.apache.commons.lang3.math.FractionTest.testReduce":46,"org.apache.commons.lang3.CharUtilsTest.testToUnicodeEscaped_char":160,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":34,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":7,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testToStringContainsName":83,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyCharNull":129,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang303":81,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeResultsIsSuccessfulFalse":144,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayToObjectArray":161,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":147,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testPatternMatches":68,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone_Locale":69,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":155,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocaleMatches":73,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testDayOf":74,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":30,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":57,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testMilleniumBug":72,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testSetContextValue":111,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testQuotes":94,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetCheckedException":145,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":149,"org.apache.commons.lang3.time.DateUtilsTest.testSetSeconds":127,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":24,"org.apache.commons.lang3.math.NumberUtilsTest.TestLang747":152,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":32},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6502","type":"CtBinaryOperatorImpl","sourcecode":"str1 == null"},"failures":[0],"tindex":"b9cac808-2ec8-11e6-a8a9-010666eeaaae","method":{"position":"org.apache.commons.lang3.BooleanUtils:709","type":"CtMethodImpl","sourcecode":"public static boolean toBoolean(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (org.apache.commons.lang3.BooleanUtils.toBooleanObject(str)) == (java.lang.Boolean.java.lang.Boolean.java.lang.Boolean);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str1":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ObjectUtils:613","type":"CtUnaryOperatorImpl","sourcecode":"!(componentType.isPrimitive())"},"failures":[1,2,3,4],"tindex":"b9cbd979-2ec8-11e6-a8a9-870a336545e3","method":{"position":"org.apache.commons.lang3.AnnotationUtils:223","type":"CtMethodImpl","sourcecode":"public static boolean isValidAnnotationMemberType(java.lang.Class<?> type) {\n    if (!(type.isPrimitive())) {\n        {\n            if (type == null) {\n                return false;\n            } \n            if (type.isArray()) {\n                type = type.getComponentType();\n            } \n            return ((((type.isPrimitive()) || (type.isEnum())) || (type.isAnnotation())) || (java.lang.String.java.lang.String.java.lang.Class.equals(type))) || (java.lang.Class.java.lang.Class.java.lang.Class.equals(type));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"componentType":"type"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:6022","type":"CtBinaryOperatorImpl","sourcecode":"(index < 0) || (index >= length)"},"failures":[],"tindex":"b9cc008a-2ec8-11e6-a8a9-dd57a4eca4d3","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:226","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.time.FastDateFormat getDateInstance(final int style, final java.util.TimeZone timeZone, final java.util.Locale locale) {\n    if ((style < 0) || (index >= style)) {\n        {\n            return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getDateInstance(style, timeZone, locale);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"style","index":"style"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDatePrinter:200","type":"CtBinaryOperatorImpl","sourcecode":"tokenLen == 2"},"failures":[5],"tindex":"b9cc279b-2ec8-11e6-a8a9-8b291758ecbc","method":{"position":"org.apache.commons.lang3.Validate:715","type":"CtMethodImpl","sourcecode":"public static <T extends java.util.Collection<?>>T validIndex(final T collection, final int index) {\n    if (index == 2) {\n        {\n            return org.apache.commons.lang3.Validate.validIndex(collection, index, org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.java.lang.String, java.lang.Integer.valueOf(index));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"tokenLen":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:354","type":"CtVariableReadImpl","sourcecode":"error"},"failures":[],"tindex":"b9cc4eac-2ec8-11e6-a8a9-b92e55d9bb5f","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:405","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setFieldSeparatorAtEnd(final boolean fieldSeparatorAtEnd) {\n    if (fieldSeparatorAtEnd) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            super.setFieldSeparatorAtEnd(fieldSeparatorAtEnd);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"error":"fieldSeparatorAtEnd"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:682","type":"CtUnaryOperatorImpl","sourcecode":"!(java.util.Arrays.equals(lhs, rhs))"},"failures":[],"tindex":"b9cc75bd-2ec8-11e6-a8a9-c505b25b1480","method":{"position":"org.apache.commons.lang3.EnumUtils:267","type":"CtMethodImpl","sourcecode":"public static <E extends java.lang.Enum<E>>java.util.EnumSet<E> processBitVectors(final java.lang.Class<E> enumClass, final long... values) {\n    if (!(java.util.Arrays.equals(values, values))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.EnumSet<E> java.util.EnumSet<E> = java.util.EnumSet.noneOf(org.apache.commons.lang3.EnumUtils.asEnum(enumClass));\n            long[] long[] = org.apache.commons.lang3.ArrayUtils.clone(org.apache.commons.lang3.Validate.notNull(values));\n            org.apache.commons.lang3.ArrayUtils.reverse(lvalues);\n            for (final E E : enumClass.getEnumConstants()) {\n                final int int = (constant.ordinal()) / (java.lang.Long.java.lang.Long.int);\n                if ((block < (lvalues.int)) && (((lvalues[block]) & (1 << ((constant.ordinal()) % (java.lang.Long.java.lang.Long.int)))) != 0)) {\n                    results.add(constant);\n                } \n            }\n            return results;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"values","rhs":"values"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSequenceUtils:121","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[],"tindex":"b9cc9cce-2ec8-11e6-a8a9-45dcfc587ab5","method":{"position":"org.apache.commons.lang3.ArrayUtils:1678","type":"CtMethodImpl","sourcecode":"public static void reverse(final double[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (endIndexExclusive < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return ;\n            } \n            int int = startIndexInclusive < 0 ? 0 : startIndexInclusive;\n            int int = (java.lang.Math.min(array.int, endIndexExclusive)) - 1;\n            double double;\n            while (j > i) {\n                tmp = array[j];\n                array[j] = array[i];\n                array[i] = tmp;\n                j--;\n                i++;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"endIndexExclusive"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:576","type":"CtBinaryOperatorImpl","sourcecode":"((ch0 == 'o') || (ch0 == 'O')) && ((ch1 == 'n') || (ch1 == 'N'))"},"failures":[],"tindex":"b9ccc3df-2ec8-11e6-a8a9-c3065974e219","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1272","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendSeparator(final char separator) {\n    if (((separator == 'o') || (ch0 == 'O')) && ((separator == 'n') || (ch1 == 'N'))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((size()) > 0) {\n                append(separator);\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch0":"separator","ch1":"separator"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2128","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"tindex":"b9cceaf0-2ec8-11e6-a8a9-c73cc8320f07","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:750","type":"CtMethodImpl","sourcecode":"private int substitute(final org.apache.commons.lang3.text.StrBuilder buf, final int offset, final int length, java.util.List<java.lang.String> priorVariables) {\n    if (offset < 0) {\n        {\n            final org.apache.commons.lang3.text.StrMatcher org.apache.commons.lang3.text.StrMatcher = getVariablePrefixMatcher();\n            final org.apache.commons.lang3.text.StrMatcher org.apache.commons.lang3.text.StrMatcher = getVariableSuffixMatcher();\n            final char char = getEscapeChar();\n            final org.apache.commons.lang3.text.StrMatcher org.apache.commons.lang3.text.StrMatcher = getValueDelimiterMatcher();\n            final boolean boolean = isEnableSubstitutionInVariables();\n            final boolean boolean = priorVariables == null;\n            boolean boolean = false;\n            int int = 0;\n            char[] char[] = buf.char[];\n            int int = offset + length;\n            int int = offset;\n            while (pos < bufEnd) {\n                final int int = pfxMatcher.isMatch(chars, pos, offset, bufEnd);\n                if (startMatchLen == 0) {\n                    pos++;\n                } else {\n                    if ((pos > offset) && ((chars[(pos - 1)]) == escape)) {\n                        buf.deleteCharAt((pos - 1));\n                        chars = buf.char[];\n                        lengthChange--;\n                        altered = true;\n                        bufEnd--;\n                    } else {\n                        final int int = pos;\n                        pos += startMatchLen;\n                        int int = 0;\n                        int int = 0;\n                        while (pos < bufEnd) {\n                            if (substitutionInVariablesEnabled && ((endMatchLen = pfxMatcher.isMatch(chars, pos, offset, bufEnd)) != 0)) {\n                                nestedVarCount++;\n                                pos += endMatchLen;\n                                continue;\n                            } \n                            endMatchLen = suffMatcher.isMatch(chars, pos, offset, bufEnd);\n                            if (endMatchLen == 0) {\n                                pos++;\n                            } else {\n                                if (nestedVarCount == 0) {\n                                    java.lang.String java.lang.String = new java.lang.String(chars , (startPos + startMatchLen) , ((pos - startPos) - startMatchLen));\n                                    if (substitutionInVariablesEnabled) {\n                                        final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(varNameExpr);\n                                        substitute(bufName, 0, bufName.length());\n                                        varNameExpr = bufName.toString();\n                                    } \n                                    pos += endMatchLen;\n                                    final int int = pos;\n                                    java.lang.String java.lang.String = varNameExpr;\n                                    java.lang.String java.lang.String = null;\n                                    if (valueDelimMatcher != null) {\n                                        final char[] char[] = varNameExpr.toCharArray();\n                                        int int = 0;\n                                        for (int int = 0 ; i < (varNameExprChars.int) ; i++) {\n                                            if ((!substitutionInVariablesEnabled) && ((pfxMatcher.isMatch(varNameExprChars, i, i, varNameExprChars.int)) != 0)) {\n                                                break;\n                                            } \n                                            if ((valueDelimiterMatchLen = valueDelimMatcher.isMatch(varNameExprChars, i)) != 0) {\n                                                varName = varNameExpr.substring(0, i);\n                                                varDefaultValue = varNameExpr.substring((i + valueDelimiterMatchLen));\n                                                break;\n                                            } \n                                        }\n                                    } \n                                    if (priorVariables == null) {\n                                        priorVariables = new java.util.ArrayList<java.lang.String>();\n                                        priorVariables.add(new java.lang.String(chars , offset , length));\n                                    } \n                                    checkCyclicSubstitution(varName, priorVariables);\n                                    priorVariables.add(varName);\n                                    java.lang.String java.lang.String = resolveVariable(varName, buf, startPos, endPos);\n                                    if (varValue == null) {\n                                        varValue = varDefaultValue;\n                                    } \n                                    if (varValue != null) {\n                                        final int int = varValue.length();\n                                        buf.replace(startPos, endPos, varValue);\n                                        altered = true;\n                                        int int = substitute(buf, startPos, varLen, priorVariables);\n                                        change = (change + varLen) - (endPos - startPos);\n                                        pos += change;\n                                        bufEnd += change;\n                                        lengthChange += change;\n                                        chars = buf.char[];\n                                    } \n                                    priorVariables.remove(((priorVariables.size()) - 1));\n                                    break;\n                                } else {\n                                    nestedVarCount--;\n                                    pos += endMatchLen;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (top) {\n                return altered ? 1 : 0;\n            } \n            return lengthChange;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"offset"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharEncoding:95","type":"CtBinaryOperatorImpl","sourcecode":"name == null"},"failures":[],"tindex":"b9cd8731-2ec8-11e6-a8a9-d76e4d5bf791","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:494","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.Date parse(final java.lang.String source, final java.text.ParsePosition pos) {\n    if (source == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.FastDateParser.parse(source, pos);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"source"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:929","type":"CtBinaryOperatorImpl","sourcecode":"i > 0"},"failures":[40,41,42,43,44,45,46],"tindex":"b9cdae42-2ec8-11e6-a8a9-03e9509c586e","method":{"position":"org.apache.commons.lang3.math.Fraction:576","type":"CtMethodImpl","sourcecode":"private static int greatestCommonDivisor(int u, int v) {\n    if (u > 0) {\n        {\n            if ((u == 0) || (v == 0)) {\n                if ((u == (java.lang.Integer.java.lang.Integer.int)) || (v == (java.lang.Integer.java.lang.Integer.int))) {\n                    throw new java.lang.ArithmeticException(\"overflow: gcd is 2^31\");\n                } \n                return (java.lang.Math.abs(u)) + (java.lang.Math.abs(v));\n            } \n            if (((java.lang.Math.abs(u)) == 1) || ((java.lang.Math.abs(v)) == 1)) {\n                return 1;\n            } \n            if (u > 0) {\n                u = -u;\n            } \n            if (v > 0) {\n                v = -v;\n            } \n            int int = 0;\n            while ((((u & 1) == 0) && ((v & 1) == 0)) && (k < 31)) {\n                u /= 2;\n                v /= 2;\n                k++;\n            }\n            if (k == 31) {\n                throw new java.lang.ArithmeticException(\"overflow: gcd is 2^31\");\n            } \n            int int = (u & 1) == 1 ? v : -(u / 2);\n            do {\n                while ((t & 1) == 0) {\n                    t /= 2;\n                }\n                if (t > 0) {\n                    u = -t;\n                } else {\n                    v = t;\n                }\n                t = (v - u) / 2;\n            } while (t != 0 );\n            return (-u) * (1 << k);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"u"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2202","type":"CtBinaryOperatorImpl","sourcecode":"length <= 0"},"failures":[47],"tindex":"b9cdd553-2ec8-11e6-a8a9-85f45b579536","method":{"position":"org.apache.commons.lang3.StringUtils:3906","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final float[] array, final char separator, final int startIndex, final int endIndex) {\n    if (endIndex <= 0) {\n        {\n            if (array == null) {\n                return null;\n            } \n            final int int = endIndex - startIndex;\n            if (noOfItems <= 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder((noOfItems * 16));\n            for (int int = startIndex ; i < endIndex ; i++) {\n                if (i > startIndex) {\n                    buf.append(separator);\n                } \n                buf.append(array[i]);\n            }\n            return buf.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"endIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.JavaVersion:144","type":"CtInvocationImpl","sourcecode":"\"1.6\".equals(nom)"},"failures":[48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96],"tindex":"b9cdfc64-2ec8-11e6-a8a9-531fb707f785","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:164","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.time.FastDateFormat getInstance(final java.lang.String pattern, final java.util.TimeZone timeZone, final java.util.Locale locale) {\n    if (\"1.6\".equals(pattern)) {\n        {\n            return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getInstance(pattern, timeZone, locale);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nom":"pattern"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1445","type":"CtBinaryOperatorImpl","sourcecode":"(seq == null) || (searchSeq == null)"},"failures":[97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113],"tindex":"b9ce2375-2ec8-11e6-a8a9-43ebb503d0cd","method":{"position":"org.apache.commons.lang3.StringUtils:794","type":"CtMethodImpl","sourcecode":"public static boolean equals(final java.lang.CharSequence cs1, final java.lang.CharSequence cs2) {\n    if ((cs2 == null) || (cs1 == null)) {\n        {\n            if (cs1 == cs2) {\n                return true;\n            } \n            if ((cs1 == null) || (cs2 == null)) {\n                return false;\n            } \n            if ((cs1 instanceof java.lang.String) && (cs2 instanceof java.lang.String)) {\n                return cs1.equals(cs2);\n            } \n            return org.apache.commons.lang3.CharSequenceUtils.regionMatches(cs1, false, 0, cs2, 0, java.lang.Math.max(cs1.length(), cs2.length()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"searchSeq":"cs1","seq":"cs2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5630","type":"CtBinaryOperatorImpl","sourcecode":"count == null"},"failures":[114],"tindex":"b9ce2376-2ec8-11e6-a8a9-59368b67312c","method":{"position":"org.apache.commons.lang3.mutable.MutableLong:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setValue(final java.lang.Number value) {\n    if (value == null) {\n        {\n            org.apache.commons.lang3.mutable.MutableLong.this.long = value.longValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2335","type":"CtBinaryOperatorImpl","sourcecode":"separator == null"},"failures":[115,116,117],"tindex":"b9ce98a7-2ec8-11e6-a8a9-991cddf512c0","method":{"position":"org.apache.commons.lang3.StringUtils:5410","type":"CtMethodImpl","sourcecode":"public static java.lang.String leftPad(final java.lang.String str, final int size, java.lang.String padStr) {\n    if (str == null) {\n        {\n            if (str == null) {\n                return null;\n            } \n            if (org.apache.commons.lang3.StringUtils.isEmpty(padStr)) {\n                padStr = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final int int = padStr.length();\n            final int int = str.length();\n            final int int = size - strLen;\n            if (pads <= 0) {\n                return str;\n            } \n            if ((padLen == 1) && (pads <= (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int))) {\n                return org.apache.commons.lang3.StringUtils.leftPad(str, size, padStr.charAt(0));\n            } \n            if (pads == padLen) {\n                return padStr.concat(str);\n            } else if (pads < padLen) {\n                return padStr.substring(0, pads).concat(str);\n            } else {\n                final char[] char[] = new char[pads];\n                final char[] char[] = padStr.toCharArray();\n                for (int int = 0 ; i < pads ; i++) {\n                    padding[i] = padChars[(i % padLen)];\n                }\n                return new java.lang.String(padding).concat(str);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"separator":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDateParser:463","type":"CtBinaryOperatorImpl","sourcecode":"(formatField.length()) > 2"},"failures":[118,118],"tindex":"b9ce98a8-2ec8-11e6-a8a9-85de8a9eb489","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1333","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final float[] array, final java.lang.Boolean fullDetail) {\n    if ((fieldName.length()) > 2) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendFieldStart(buffer, fieldName);\n            if (array == null) {\n                appendNullText(buffer, fieldName);\n            } else if (isFullDetail(fullDetail)) {\n                appendDetail(buffer, fieldName, array);\n            } else {\n                appendSummary(buffer, fieldName, array);\n            }\n            appendFieldEnd(buffer, fieldName);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"formatField":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2461","type":"CtBinaryOperatorImpl","sourcecode":"(str == null) || (startIndex < 0)"},"failures":[119,120,121,122],"tindex":"b9cebfb9-2ec8-11e6-a8a9-f5457cc73b16","method":{"position":"org.apache.commons.lang3.StringUtils:3990","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final java.lang.Object[] array, java.lang.String separator, final int startIndex, final int endIndex) {\n    if ((separator == null) || (endIndex < 0)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            if (separator == null) {\n                separator = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final int int = endIndex - startIndex;\n            if (noOfItems <= 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder((noOfItems * 16));\n            for (int int = startIndex ; i < endIndex ; i++) {\n                if (i > startIndex) {\n                    buf.append(separator);\n                } \n                if ((array[i]) != null) {\n                    buf.append(array[i]);\n                } \n            }\n            return buf.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"separator","startIndex":"endIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:388","type":"CtBinaryOperatorImpl","sourcecode":"(java.lang.Double.doubleToLongBits(lhs)) != (java.lang.Double.doubleToLongBits(rhs))"},"failures":[42,43,123],"tindex":"b9cebfba-2ec8-11e6-a8a9-d379bc38c1c2","method":{"position":"org.apache.commons.lang3.math.Fraction:249","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.math.Fraction getFraction(double value) {\n    if ((java.lang.Double.doubleToLongBits(value)) != (java.lang.Double.doubleToLongBits(value))) {\n        {\n            final int int = value < 0 ? -1 : 1;\n            value = java.lang.Math.abs(value);\n            if ((value > (java.lang.Integer.java.lang.Integer.int)) || (java.lang.Double.isNaN(value))) {\n                throw new java.lang.ArithmeticException(\"The value must not be greater than Integer.MAX_VALUE or NaN\");\n            } \n            final int int = ((int)(value));\n            value -= wholeNumber;\n            int int = 0;\n            int int = 1;\n            int int = 1;\n            int int = 0;\n            int int = 0;\n            int int = 0;\n            int int = ((int)(value));\n            int int = 0;\n            double double = 1;\n            double double = 0;\n            double double = value - a1;\n            double double = 0;\n            double double;\n            double double = java.lang.Double.java.lang.Double.double;\n            double double;\n            int int = 1;\n            do {\n                delta1 = delta2;\n                a2 = ((int)(x1 / y1));\n                x2 = y1;\n                y2 = x1 - (a2 * y1);\n                numer2 = (a1 * numer1) + numer0;\n                denom2 = (a1 * denom1) + denom0;\n                fraction = ((double)(numer2)) / ((double)(denom2));\n                delta2 = java.lang.Math.abs((value - fraction));\n                a1 = a2;\n                x1 = x2;\n                y1 = y2;\n                numer0 = numer1;\n                denom0 = denom1;\n                numer1 = numer2;\n                denom1 = denom2;\n                i++;\n            } while ((((delta1 > delta2) && (denom2 <= 10000)) && (denom2 > 0)) && (i < 25) );\n            if (i == 25) {\n                throw new java.lang.ArithmeticException(\"Unable to convert double to fraction\");\n            } \n            return org.apache.commons.lang3.math.Fraction.getReducedFraction(((numer0 + (wholeNumber * denom0)) * sign), denom0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"value","rhs":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomStringUtils:227","type":"CtBinaryOperatorImpl","sourcecode":"count < 0"},"failures":[124],"tindex":"b9cee6cb-2ec8-11e6-a8a9-fbb4afb8f629","method":{"position":"org.apache.commons.lang3.math.Fraction:675","type":"CtMethodImpl","sourcecode":"private static int addAndCheck(final int x, final int y) {\n    if (y < 0) {\n        {\n            final long long = ((long)(x)) + ((long)(y));\n            if ((s < (java.lang.Integer.java.lang.Integer.int)) || (s > (java.lang.Integer.java.lang.Integer.int))) {\n                throw new java.lang.ArithmeticException(\"overflow: add\");\n            } \n            return ((int)(s));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"y"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4284","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(remove))"},"failures":[125,126],"tindex":"b9cee6cc-2ec8-11e6-a8a9-bf741c4c4290","method":{"position":"org.apache.commons.lang3.StringUtils:7411","type":"CtMethodImpl","sourcecode":"private static java.lang.String appendIfMissing(final java.lang.String str, final java.lang.CharSequence suffix, final boolean ignoreCase, final java.lang.CharSequence... suffixes) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(suffix)) || (org.apache.commons.lang3.StringUtils.isEmpty(str))) {\n        {\n            if (((str == null) || (org.apache.commons.lang3.StringUtils.isEmpty(suffix))) || (org.apache.commons.lang3.StringUtils.endsWith(str, suffix, ignoreCase))) {\n                return str;\n            } \n            if ((suffixes != null) && ((suffixes.int) > 0)) {\n                for (final java.lang.CharSequence java.lang.CharSequence : suffixes) {\n                    if (org.apache.commons.lang3.StringUtils.endsWith(str, s, ignoreCase)) {\n                        return str;\n                    } \n                }\n            } \n            return str + (suffix.toString());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"suffix","remove":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1740","type":"CtBinaryOperatorImpl","sourcecode":"arrayStart == null"},"failures":[],"tindex":"b9cf0ddd-2ec8-11e6-a8a9-b7e6bf8c9e71","method":{"position":"org.apache.commons.lang3.SystemUtils:1344","type":"CtMethodImpl","sourcecode":"private static java.lang.String getSystemProperty(final java.lang.String property) {\n    if (property == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            try {\n                return java.lang.System.getProperty(property);\n            } catch (final java.lang.SecurityException ex) {\n                java.lang.System.java.lang.System.java.io.PrintStream.println(((\"Caught a SecurityException reading the system property '\" + property) + \"'; the SystemUtils property value will default to null.\"));\n                return null;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"arrayStart":"property"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1589","type":"CtBinaryOperatorImpl","sourcecode":"((nBools - 1) + srcPos) >= 32"},"failures":[],"tindex":"b9cf0dde-2ec8-11e6-a8a9-b1e1d039f83c","method":{"position":"org.apache.commons.lang3.time.DateUtils:1365","type":"CtMethodImpl","sourcecode":"public static long getFragmentInMinutes(final java.util.Date date, final int fragment) {\n    if (fragment >= 8) {\n        {\n            if (((fragment - 1) + fragment) >= 32) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nBools":"fragment","srcPos":"fragment"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1911","type":"CtBinaryOperatorImpl","sourcecode":"searchLen > 0"},"failures":[127],"tindex":"b9cf0ddf-2ec8-11e6-a8a9-871a4062a2a5","method":{"position":"org.apache.commons.lang3.time.DateUtils:614","type":"CtMethodImpl","sourcecode":"public static java.util.Date setSeconds(final java.util.Date date, final int amount) {\n    if (amount > 0) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.set(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"searchLen":"amount"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5623","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))"},"failures":[128,129],"tindex":"b9cf34f0-2ec8-11e6-a8a9-c70ebd28f4ee","method":{"position":"org.apache.commons.lang3.ArrayUtils:592","type":"CtMethodImpl","sourcecode":"public static char[] nullToEmpty(final char[] array) {\n    if ((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(array))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((array == null) || ((array.int) == 0)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.char[];\n            } \n            return array;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array","values":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.text.ParseException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:255","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"b9cf34f1-2ec8-11e6-a8a9-432bb3c9f51d","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:486","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.Date parse(final java.lang.String source) throws java.text.ParseException {\n    if (source == null) {\n        {\n            return org.apache.commons.lang3.time.FastDateParser.parse(source);\n        }\n    } else {\n        throw new java.text.ParseException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"source"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:222","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[130],"tindex":"b9cf34f2-2ec8-11e6-a8a9-7f958c03575e","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1909","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder replaceFirst(final java.lang.String searchStr, final java.lang.String replaceStr) {\n    if (replaceStr == null) {\n        {\n            final int int = searchStr == null ? 0 : searchStr.length();\n            if (searchLen > 0) {\n                final int int = indexOf(searchStr, 0);\n                if (index >= 0) {\n                    final int int = replaceStr == null ? 0 : replaceStr.length();\n                    replaceImpl(index, (index + searchLen), searchLen, replaceStr, replaceLen);\n                } \n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"replaceStr"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1153","type":"CtBinaryOperatorImpl","sourcecode":"b < a"},"failures":[],"tindex":"b9cf8313-2ec8-11e6-a8a9-a79c775ff79d","method":{"position":"org.apache.commons.lang3.ArrayUtils:3251","type":"CtMethodImpl","sourcecode":"public static byte[] toPrimitive(final java.lang.Byte[] array, final byte valueForNull) {\n    if (valueForNull < valueForNull) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.byte[];\n            } \n            final byte[] byte[] = new byte[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                final java.lang.Byte java.lang.Byte = array[i];\n                result[i] = b == null ? valueForNull : b.byteValue();\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"valueForNull","b":"valueForNull"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2336","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[],"tindex":"b9cfaa24-2ec8-11e6-a8a9-8f8f767707e2","method":{"position":"org.apache.commons.lang3.text.translate.JavaUnicodeEscaper:36","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.translate.JavaUnicodeEscaper above(final int codepoint) {\n    if (codepoint < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.outsideOf(0, codepoint);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"codepoint"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:159","type":"CtBinaryOperatorImpl","sourcecode":"(ex.getCause()) instanceof java.lang.RuntimeException"},"failures":[131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146],"tindex":"b9cfaa25-2ec8-11e6-a8a9-ffa497da2e09","method":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:143","type":"CtMethodImpl","sourcecode":"static java.lang.Throwable checkedException(final java.lang.Throwable ex) {\n    if ((ex.getCause()) instanceof java.lang.RuntimeException) {\n        {\n            if (((ex != null) && (!(ex instanceof java.lang.RuntimeException))) && (!(ex instanceof java.lang.Error))) {\n                return ex;\n            } else {\n                throw new java.lang.IllegalArgumentException((\"Not a checked exception: \" + ex));\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ex":"ex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.SystemUtils:1429","type":"CtBinaryOperatorImpl","sourcecode":"version == null"},"failures":[147,148,149,150,151,152],"tindex":"b9cfd136-2ec8-11e6-a8a9-e7c7440da754","method":{"position":"org.apache.commons.lang3.math.NumberUtils:725","type":"CtMethodImpl","sourcecode":"public static java.math.BigInteger createBigInteger(final java.lang.String str) {\n    if (str == null) {\n        {\n            if (str == null) {\n                return null;\n            } \n            int int = 0;\n            int int = 10;\n            boolean boolean = false;\n            if (str.startsWith(\"-\")) {\n                negate = true;\n                pos = 1;\n            } \n            if ((str.startsWith(\"0x\", pos)) || (str.startsWith(\"0x\", pos))) {\n                radix = 16;\n                pos += 2;\n            } else if (str.startsWith(\"#\", pos)) {\n                radix = 16;\n                pos++;\n            } else if ((str.startsWith(\"0\", pos)) && ((str.length()) > (pos + 1))) {\n                radix = 8;\n                pos++;\n            } \n            final java.math.BigInteger java.math.BigInteger = new java.math.BigInteger(str.substring(pos) , radix);\n            return negate ? value.negate() : value;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"version":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2805","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"b9cfd137-2ec8-11e6-a8a9-7bc7348f1178","method":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:370","type":"CtMethodImpl","sourcecode":"private java.lang.String parseFormatDescription(final java.lang.String pattern, final java.text.ParsePosition pos) {\n    if (pattern == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = pos.getIndex();\n            seekNonWs(pattern, pos);\n            final int int = pos.getIndex();\n            int int = 1;\n            for ( ; (pos.getIndex()) < (pattern.length()) ; next(pos)) {\n                switch (pattern.charAt(pos.getIndex())) {\n                    case org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char :\n                        depth++;\n                        break;\n                    case org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char :\n                        depth--;\n                        if (depth == 0) {\n                            return pattern.substring(text, pos.getIndex());\n                        } \n                        break;\n                    case org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char :\n                        getQuotedString(pattern, pos, false);\n                        break;\n                    default :\n                        break;\n                }\n            }\n            throw new java.lang.IllegalArgumentException((\"Unterminated format element at position \" + start));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"pattern"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:427","type":"CtFieldReadImpl","sourcecode":"objectsTriviallyEqual"},"failures":[153],"tindex":"b9cff848-2ec8-11e6-a8a9-3fcb38666436","method":{"position":"org.apache.commons.lang3.BooleanUtils:485","type":"CtMethodImpl","sourcecode":"public static java.lang.Integer toIntegerObject(final boolean bool, final java.lang.Integer trueValue, final java.lang.Integer falseValue) {\n    if (bool) {\n        {\n            return bool ? trueValue : falseValue;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsTriviallyEqual":"bool"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:130","type":"CtBinaryOperatorImpl","sourcecode":"expression == false"},"failures":[154,155,156,1,157,158,2,159,3,4],"tindex":"b9cff849-2ec8-11e6-a8a9-0535d7968d0c","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1612","type":"CtMethodImpl","sourcecode":"protected void setUseClassName(final boolean useClassName) {\n    if (useClassName == false) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.this.boolean = useClassName;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"expression":"useClassName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:762","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[],"tindex":"b9d01f5a-2ec8-11e6-a8a9-31d8fdbd5346","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1195","type":"CtMethodImpl","sourcecode":"protected void appendSummary(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final byte[] array) {\n    if (fieldName == null) {\n        {\n            appendSummarySize(buffer, fieldName, array.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"fieldName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:602","type":"CtBinaryOperatorImpl","sourcecode":"numDecimals <= 7"},"failures":[],"tindex":"b9d01f5b-2ec8-11e6-a8a9-49689ff03b33","method":{"position":"org.apache.commons.lang3.StringUtils:3661","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final int[] array, final char separator, final int startIndex, final int endIndex) {\n    if (startIndex <= 7) {\n        {\n            if (array == null) {\n                return null;\n            } \n            final int int = endIndex - startIndex;\n            if (noOfItems <= 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder((noOfItems * 16));\n            for (int int = startIndex ; i < endIndex ; i++) {\n                if (i > startIndex) {\n                    buf.append(separator);\n                } \n                buf.append(array[i]);\n            }\n            return buf.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"numDecimals":"startIndex"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:894","type":"CtBinaryOperatorImpl","sourcecode":"first == second"},"failures":[],"tindex":"b9d01f5c-2ec8-11e6-a8a9-3b0d16c81425","method":{"position":"org.apache.commons.lang3.mutable.MutableLong:137","type":"CtMethodImpl","sourcecode":"public void add(final long operand) {\n    if (operand == operand) {\n        {\n            org.apache.commons.lang3.mutable.MutableLong.this.long += operand;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"first":"operand","second":"operand"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5731","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isLowerCase(firstChar)"},"failures":[160],"tindex":"b9d0466d-2ec8-11e6-a8a9-19f7ffda978f","method":{"position":"org.apache.commons.lang3.CharUtils:352","type":"CtMethodImpl","sourcecode":"public static java.lang.String unicodeEscaped(final char ch) {\n    if (java.lang.Character.isLowerCase(ch)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (ch < 16) {\n                return \"\\\\u000\" + (java.lang.Integer.toHexString(ch));\n            } else if (ch < 256) {\n                return \"\\\\u00\" + (java.lang.Integer.toHexString(ch));\n            } else if (ch < 4096) {\n                return \"\\\\u0\" + (java.lang.Integer.toHexString(ch));\n            } \n            return \"\\\\u\" + (java.lang.Integer.toHexString(ch));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"firstChar":"ch"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2687","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.ArrayUtils.isEmpty(array)"},"failures":[161],"tindex":"b9d0466e-2ec8-11e6-a8a9-fba2e762327a","method":{"position":"org.apache.commons.lang3.ArrayUtils:3965","type":"CtMethodImpl","sourcecode":"public static double[] addAll(final double[] array1, final double... array2) {\n    if (org.apache.commons.lang3.ArrayUtils.isEmpty(array1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array1 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array2);\n            } else if (array2 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array1);\n            } \n            final double[] double[] = new double[(array1.int) + (array2.int)];\n            java.lang.System.arraycopy(array1, 0, joinedArray, 0, array1.int);\n            java.lang.System.arraycopy(array2, 0, joinedArray, array1.int, array2.int);\n            return joinedArray;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1693","type":"CtBinaryOperatorImpl","sourcecode":"nBytes >= 8"},"failures":[],"tindex":"b9d0466f-2ec8-11e6-a8a9-6b08bbbfe181","method":{"position":"org.apache.commons.lang3.time.DateUtils:1365","type":"CtMethodImpl","sourcecode":"public static long getFragmentInMinutes(final java.util.Date date, final int fragment) {\n    if (fragment >= 8) {\n        {\n            if (((fragment - 1) + fragment) >= 32) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nBytes":"fragment"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:860","type":"CtBinaryOperatorImpl","sourcecode":"delim == null"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,162,24,25,26,27,28,29,30,31,32,33,163,34,35,164,36,37,165,38,166,39],"tindex":"b9d06d80-2ec8-11e6-a8a9-3f25c3a89b08","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1110","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrSubstitutor setValueDelimiterMatcher(final org.apache.commons.lang3.text.StrMatcher valueDelimiterMatcher) {\n    if (valueDelimiterMatcher == null) {\n        {\n            org.apache.commons.lang3.text.StrSubstitutor.this.org.apache.commons.lang3.text.StrMatcher = valueDelimiterMatcher;\n            return org.apache.commons.lang3.text.StrSubstitutor.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delim":"valueDelimiterMatcher"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1208","type":"CtBinaryOperatorImpl","sourcecode":"c > a"},"failures":[],"tindex":"b9d06d81-2ec8-11e6-a8a9-4556cb6cbcc6","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:448","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.StringBuffer format(final long millis, final java.lang.StringBuffer buf) {\n    if (millis > millis) {\n        {\n            return org.apache.commons.lang3.time.FastDatePrinter.format(millis, buf);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"millis","c":"millis"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:694","type":"CtBinaryOperatorImpl","sourcecode":"lhs == null"},"failures":[167],"tindex":"b9d09492-2ec8-11e6-a8a9-4777dfa953ca","method":{"position":"org.apache.commons.lang3.ArrayUtils:4205","type":"CtMethodImpl","sourcecode":"public static long[] add(final long[] array, final long element) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final long[] long[] = ((long[])(org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(array, java.lang.Long.java.lang.Long.java.lang.Class<java.lang.Long>)));\n            newArray[((newArray.int) - 1)] = element;\n            return newArray;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharEncoding:95","type":"CtBinaryOperatorImpl","sourcecode":"name == null"},"failures":[],"tindex":"b9d09493-2ec8-11e6-a8a9-f57eb98b767a","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:593","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void add(final java.lang.String obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"add() is unsupported\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSetUtils:176","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"b9d09494-2ec8-11e6-a8a9-c3e444389714","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1439","type":"CtMethodImpl","sourcecode":"protected void appendSummary(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final boolean[] array) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendSummarySize(buffer, fieldName, array.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":45,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}