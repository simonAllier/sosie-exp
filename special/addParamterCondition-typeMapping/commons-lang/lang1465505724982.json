{"failureDictionary":{"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringCharArray":55,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":36,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":137,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":32,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":35,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testDurationsByBruteForce":62,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":120,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":24,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":101,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":30,"org.apache.commons.lang3.ArrayUtilsTest.testIsEmptyPrimitives":57,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":103,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":21,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testJiraLang281":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":116,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceFirst_StrMatcher_String":50,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyFloatObject":52,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":115,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":127,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":46,"org.apache.commons.lang3.math.FractionTest.testCompareTo":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":104,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriod":63,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllNullDoubleArray":85,"org.apache.commons.lang3.math.FractionTest.testNegate":16,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":122,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementCharArray":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":138,"org.apache.commons.lang3.StringUtilsTest.testCenter_StringIntString":68,"org.apache.commons.lang3.AnnotationUtilsTest.testAnnotationsOfDifferingTypes":147,"org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayCharSeparator":163,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":40,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":48,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":124,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":139,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":94,"org.apache.commons.lang3.SerializationUtilsTest.testSerializeStreamNullObj":165,"org.apache.commons.lang3.RandomStringUtilsTest.testExceptions":154,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":28,"org.apache.commons.lang3.math.NumberUtilsTest.testMinimumByte":81,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":123,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_CharArray_int_int":2,"org.apache.commons.lang3.ClassUtilsTest.test_getShortCanonicalName_Class":160,"org.apache.commons.lang3.math.FractionTest.testAbs":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":133,"org.apache.commons.lang3.StringUtilsTest.testSplitByWholeSeparatorPreserveAllTokens_StringStringInt":70,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":95,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_String_int_int":167,"org.apache.commons.lang3.math.FractionTest.testMultiply":14,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringInt":59,"org.apache.commons.lang3.math.FractionTest.testInvert":15,"org.apache.commons.lang3.StringUtilsTest.testLeftPad_StringIntString":66,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":110,"org.apache.commons.lang3.math.FractionTest.testAdd":4,"org.apache.commons.lang3.SerializationUtilsTest.testSerializeStreamNullNull":164,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":31,"org.apache.commons.lang3.ArrayUtilsTest.testIsNotEmptyPrimitives":80,"org.apache.commons.lang3.math.FractionTest.testFactory_int_int":18,"org.apache.commons.lang3.math.FractionTest.testDivide":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":141,"org.apache.commons.lang3.AnnotationUtilsTest.testHashCode":148,"org.apache.commons.lang3.builder.CompareToBuilderTest.testIntArrayHiddenByObject":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":37,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":114,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":128,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":121,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllNullIntArray":87,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":45,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":92,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadDaemonTrue":157,"org.apache.commons.lang3.math.FractionTest.testHashCode":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":98,"org.apache.commons.lang3.AnnotationUtilsTest.testNonEquivalentAnnotationsOfSameType":151,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":140,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":125,"org.apache.commons.lang3.StringUtilsTest.testReverseDelimited_StringChar":162,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllNullFloatArray":88,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":129,"org.apache.commons.lang3.math.NumberUtilsTest.testMaximumByte":75,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":99,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":130,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":131,"org.apache.commons.lang3.AnnotationUtilsTest.testSameInstance":145,"org.apache.commons.lang3.StringUtilsTest.testLeftPad_StringIntChar":67,"org.apache.commons.lang3.BooleanUtilsTest.test_toIntegerObject_Boolean":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":106,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllNullByteArray":84,"org.apache.commons.lang3.AnnotationUtilsTest.testIsValidAnnotationMemberType":152,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":23,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllNullCharArray":90,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllNullShortArray":83,"org.apache.commons.lang3.AnnotationUtilsTest.testBothArgsNull":150,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":118,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":44,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":34,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testBuilderReset":158,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":47,"org.apache.commons.lang3.ConversionTest.testByteToBinary":79,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testEdgeDurations":64,"org.apache.commons.lang3.math.FractionTest.testSubtract":6,"org.apache.commons.lang3.AnnotationUtilsTest.testEquivalence":146,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":100,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":136,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":97,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":107,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringCharArray":56,"org.apache.commons.lang3.AnnotationUtilsTest.testGeneratedAnnotationEquivalentToRealAnnotation":149,"org.apache.commons.lang3.math.FractionTest.testToProperString":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":134,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiIntArray":72,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyFloatObjectEmptyArray":53,"org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayOfLongs":61,"org.apache.commons.lang3.text.translate.OctalUnescaperTest.testBetween":76,"org.apache.commons.lang3.math.FractionTest.testPow":5,"org.apache.commons.lang3.AnnotationUtilsTest.testOneArgNull":143,"org.apache.commons.lang3.BooleanUtilsTest.test_isNotFalse_Boolean":69,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":0,"org.apache.commons.lang3.builder.CompareToBuilderTest.testInt":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":117,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":102,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":132,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStripAccents":156,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":96,"org.apache.commons.lang3.SerializationUtilsTest.testSerializeBytesNull":166,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":112,"org.apache.commons.lang3.mutable.MutableByteTest.testGetSet":82,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":135,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":119,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":126,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":41,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAnyBut_StringCharArray":54,"org.apache.commons.lang3.math.FractionTest.testEquals":13,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":109,"org.apache.commons.lang3.reflect.TypeUtilsTest.testTypesSatisfyVariables":1,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeStaticMethod":51,"org.apache.commons.lang3.math.FractionTest.testReduce":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":105,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testCreateIfAbsentNullMap":153,"org.apache.commons.lang3.EnumUtilsTest.test_isEnum":168,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":49,"org.apache.commons.lang3.builder.CompareToBuilderTest.testIntArray":74,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":42,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllNullBooleanArray":86,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testBuilderResetAfterBuild":159,"org.apache.commons.lang3.math.FractionTest.testToString":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":111,"org.apache.commons.lang3.math.FractionTest.testFactory_String_improper":9,"org.apache.commons.lang3.StringUtilsIsTest.testIsAsciiPrintable_String":60,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":144,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":113,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayInt":161,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils":155,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":26,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":93,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":108,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":142,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllNullLongArray":89,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":27,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":43},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:554","type":"CtBinaryOperatorImpl","sourcecode":"str == \"true\""},"failures":[],"tindex":"7d102723-2e84-11e6-9f86-4d6dff8b5b45","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:604","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final byte[] array, final boolean fullDetail) {\n    if (fieldName == \"true\") {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, array, java.lang.Boolean.valueOf(fullDetail));\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:596","type":"CtBinaryOperatorImpl","sourcecode":"toWildcardType == null"},"failures":[0,1],"tindex":"7d10ea74-2e84-11e6-9f86-7b073c303408","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:588","type":"CtMethodImpl","sourcecode":"private static boolean isAssignable(final java.lang.reflect.Type type, final java.lang.reflect.WildcardType toWildcardType, final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> typeVarAssigns) {\n    if (type == null) {\n        {\n            if (type == null) {\n                return true;\n            } \n            if (toWildcardType == null) {\n                return false;\n            } \n            if (toWildcardType.equals(type)) {\n                return true;\n            } \n            final java.lang.reflect.Type[] java.lang.reflect.Type[] = org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(toWildcardType);\n            final java.lang.reflect.Type[] java.lang.reflect.Type[] = org.apache.commons.lang3.reflect.TypeUtils.getImplicitLowerBounds(toWildcardType);\n            if (type instanceof java.lang.reflect.WildcardType) {\n                final java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(type));\n                final java.lang.reflect.Type[] java.lang.reflect.Type[] = org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(wildcardType);\n                final java.lang.reflect.Type[] java.lang.reflect.Type[] = org.apache.commons.lang3.reflect.TypeUtils.getImplicitLowerBounds(wildcardType);\n                for (java.lang.reflect.Type java.lang.reflect.Type : toUpperBounds) {\n                    toBound = org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(toBound, typeVarAssigns);\n                    for (final java.lang.reflect.Type java.lang.reflect.Type : upperBounds) {\n                        if (!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(bound, toBound, typeVarAssigns))) {\n                            return false;\n                        } \n                    }\n                }\n                for (java.lang.reflect.Type java.lang.reflect.Type : toLowerBounds) {\n                    toBound = org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(toBound, typeVarAssigns);\n                    for (final java.lang.reflect.Type java.lang.reflect.Type : lowerBounds) {\n                        if (!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(toBound, bound, typeVarAssigns))) {\n                            return false;\n                        } \n                    }\n                }\n                return true;\n            } \n            for (final java.lang.reflect.Type java.lang.reflect.Type : toUpperBounds) {\n                if (!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(type, org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(toBound, typeVarAssigns), typeVarAssigns))) {\n                    return false;\n                } \n            }\n            for (final java.lang.reflect.Type java.lang.reflect.Type : toLowerBounds) {\n                if (!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(toBound, typeVarAssigns), type, typeVarAssigns))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toWildcardType":"type"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2042","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[2],"tindex":"7d111185-2e84-11e6-9f86-ab088982af81","method":{"position":"org.apache.commons.lang3.text.StrBuilder:994","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendln(final char[] chars, final int startIndex, final int length) {\n    if (length == 0) {\n        {\n            return append(chars, startIndex, length).appendNewLine();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"length"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2124","type":"CtBinaryOperatorImpl","sourcecode":"end < 0"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"tindex":"7d113896-2e84-11e6-9f86-25f0026ee369","method":{"position":"org.apache.commons.lang3.math.Fraction:141","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.math.Fraction getFraction(int numerator, int denominator) {\n    if (numerator < 0) {\n        {\n            if (denominator == 0) {\n                throw new java.lang.ArithmeticException(\"The denominator must not be zero\");\n            } \n            if (denominator < 0) {\n                if ((numerator == (java.lang.Integer.java.lang.Integer.int)) || (denominator == (java.lang.Integer.java.lang.Integer.int))) {\n                    throw new java.lang.ArithmeticException(\"overflow: can't negate\");\n                } \n                numerator = -numerator;\n                denominator = -denominator;\n            } \n            return new org.apache.commons.lang3.math.Fraction(numerator , denominator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"end":"numerator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1364","type":"CtBinaryOperatorImpl","sourcecode":"typeArguments == null"},"failures":[],"tindex":"7d115fa7-2e84-11e6-9f86-d1df3563d958","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:489","type":"CtMethodImpl","sourcecode":"private static java.lang.reflect.Type unrollVariableAssignments(java.lang.reflect.TypeVariable<?> var, final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> typeVarAssigns) {\n    if (typeVarAssigns == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.reflect.Type java.lang.reflect.Type;\n            do {\n                result = typeVarAssigns.get(var);\n                if ((result instanceof java.lang.reflect.TypeVariable<?>) && (!(result.equals(var)))) {\n                    var = ((java.lang.reflect.TypeVariable<?>)(result));\n                    continue;\n                } \n                break;\n            } while (true );\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeArguments":"typeVarAssigns"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1574","type":"CtBinaryOperatorImpl","sourcecode":"fullDetailRequest == null"},"failures":[19],"tindex":"7d115fa8-2e84-11e6-9f86-e178de243f84","method":{"position":"org.apache.commons.lang3.BooleanUtils:426","type":"CtMethodImpl","sourcecode":"public static java.lang.Integer toIntegerObject(final java.lang.Boolean bool) {\n    if (bool == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (bool == null) {\n                return null;\n            } \n            return bool.booleanValue() ? org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.java.lang.Integer : org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.java.lang.Integer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fullDetailRequest":"bool"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:418","type":"CtBinaryOperatorImpl","sourcecode":"startIndex > endIndex"},"failures":[],"tindex":"7d1186b9-2e84-11e6-9f86-15d5a1d11c42","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2179","type":"CtMethodImpl","sourcecode":"public java.lang.String leftString(final int length) {\n    if (length > length) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (length <= 0) {\n                return \"\";\n            } else if (length >= (int)) {\n                return new java.lang.String(char[] , 0 , int);\n            } else {\n                return new java.lang.String(char[] , 0 , length);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"length","endIndex":"length"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:170","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[20,21,22,23,23,24,25,26,27,28,28,29,30,31,32,33,34,35,36,37,37,38,39,40,41,42,43,44,45,46,47,48,49],"tindex":"7d11adca-2e84-11e6-9f86-13162514e327","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:898","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final java.lang.Object[] array) {\n    if (fieldName == null) {\n        {\n            buffer.append(java.lang.String);\n            for (int int = 0 ; i < (array.int) ; i++) {\n                final java.lang.Object java.lang.Object = array[i];\n                if (i > 0) {\n                    buffer.append(java.lang.String);\n                } \n                if (item == null) {\n                    appendNullText(buffer, fieldName);\n                } else {\n                    appendInternal(buffer, fieldName, item, boolean);\n                }\n            }\n            buffer.append(java.lang.String);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2290","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (separator == null)"},"failures":[50],"tindex":"7d11d4db-2e84-11e6-9f86-f7c19e4f8938","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1948","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder replaceFirst(final org.apache.commons.lang3.text.StrMatcher matcher, final java.lang.String replaceStr) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(replaceStr)) || (replaceStr == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return replace(matcher, replaceStr, 0, int, 1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"replaceStr","separator":"replaceStr"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.ClassUtils:991","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[51],"tindex":"7d11fbec-2e84-11e6-9f86-372544913efc","method":{"position":"org.apache.commons.lang3.reflect.MethodUtils:283","type":"CtMethodImpl","sourcecode":"public static java.lang.Object invokeStaticMethod(final java.lang.Class<?> cls, final java.lang.String methodName, java.lang.Object[] args, java.lang.Class<?>[] parameterTypes) throws java.lang.IllegalAccessException, java.lang.NoSuchMethodException, java.lang.reflect.InvocationTargetException {\n    if (args == null) {\n        {\n            args = org.apache.commons.lang3.ArrayUtils.nullToEmpty(args);\n            parameterTypes = org.apache.commons.lang3.ArrayUtils.nullToEmpty(parameterTypes);\n            final java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.getMatchingAccessibleMethod(cls, methodName, parameterTypes);\n            if (method == null) {\n                throw new java.lang.NoSuchMethodException((((\"No such accessible method: \" + methodName) + \"() on class: \") + (cls.getName())));\n            } \n            return method.invoke(null, args);\n        }\n    } else {\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"args"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3366","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[52,53],"tindex":"7d1222fd-2e84-11e6-9f86-51d163860f5e","method":{"position":"org.apache.commons.lang3.ArrayUtils:812","type":"CtMethodImpl","sourcecode":"public static java.lang.Float[] nullToEmpty(final java.lang.Float[] array) {\n    if (array == null) {\n        {\n            if ((array == null) || ((array.int) == 0)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Float[];\n            } \n            return array;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3792","type":"CtBinaryOperatorImpl","sourcecode":"array1 == null"},"failures":[54,55,56,57,58],"tindex":"7d1222fe-2e84-11e6-9f86-fd695f80a93d","method":{"position":"org.apache.commons.lang3.ArrayUtils:3542","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final char[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (array == null) || ((array.int) == 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array1":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1496","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"7d1222ff-2e84-11e6-9f86-e9241eb11cc0","method":{"position":"org.apache.commons.lang3.ClassUtils:1088","type":"CtMethodImpl","sourcecode":"public static java.lang.String getPackageCanonicalName(final java.lang.String canonicalName) {\n    if (canonicalName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.ClassUtils.getPackageName(org.apache.commons.lang3.ClassUtils.getCanonicalName(canonicalName));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"canonicalName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6767","type":"CtBinaryOperatorImpl","sourcecode":"m == 0"},"failures":[],"tindex":"7d124a10-2e84-11e6-9f86-51b57f2116fe","method":{"position":"org.apache.commons.lang3.time.DateUtils:909","type":"CtMethodImpl","sourcecode":"public static java.util.Calendar ceiling(final java.util.Calendar date, final int field) {\n    if (field == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (date == null) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            final java.util.Calendar java.util.Calendar = ((java.util.Calendar)(date.clone()));\n            org.apache.commons.lang3.time.DateUtils.modify(ceiled, field, org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.int);\n            return ceiled;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"m":"field"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4757","type":"CtBinaryOperatorImpl","sourcecode":"greater > 0"},"failures":[59],"tindex":"7d127121-2e84-11e6-9f86-a1f2f5521d6f","method":{"position":"org.apache.commons.lang3.text.WordUtils:96","type":"CtMethodImpl","sourcecode":"public static java.lang.String wrap(final java.lang.String str, final int wrapLength) {\n    if (wrapLength > 0) {\n        {\n            return org.apache.commons.lang3.text.WordUtils.wrap(str, wrapLength, null, false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"greater":"wrapLength"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:183","type":"CtBinaryOperatorImpl","sourcecode":"(tmp.length()) != (duration.length())"},"failures":[60],"tindex":"7d127122-2e84-11e6-9f86-ab32f202db77","method":{"position":"org.apache.commons.lang3.StringUtils:5990","type":"CtMethodImpl","sourcecode":"public static boolean isAsciiPrintable(final java.lang.CharSequence cs) {\n    if ((cs.length()) != (cs.length())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (cs == null) {\n                return false;\n            } \n            final int int = cs.length();\n            for (int int = 0 ; i < sz ; i++) {\n                if ((org.apache.commons.lang3.CharUtils.isAsciiPrintable(cs.charAt(i))) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"duration":"cs","tmp":"cs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:467","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isLowerCase(ch)"},"failures":[61],"tindex":"7d129833-2e84-11e6-9f86-5fcb0b92cbf8","method":{"position":"org.apache.commons.lang3.StringUtils:3335","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final long[] array, final char separator) {\n    if (java.lang.Character.isLowerCase(separator)) {\n        {\n            if (array == null) {\n                return null;\n            } \n            return org.apache.commons.lang3.StringUtils.join(array, separator, 0, array.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"separator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1870","type":"CtBinaryOperatorImpl","sourcecode":"fieldNameValueSeparator == null"},"failures":[32,32],"tindex":"7d129834-2e84-11e6-9f86-51f4283e6cee","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:787","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final double value) {\n    if (fieldName == null) {\n        {\n            appendFieldStart(buffer, fieldName);\n            appendDetail(buffer, fieldName, value);\n            appendFieldEnd(buffer, fieldName);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldNameValueSeparator":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1120","type":"CtBinaryOperatorImpl","sourcecode":"((nBools - 1) + dstPos) >= 16"},"failures":[4],"tindex":"7d12bf45-2e84-11e6-9f86-0dbfb62abd2c","method":{"position":"org.apache.commons.lang3.math.Fraction:675","type":"CtMethodImpl","sourcecode":"private static int addAndCheck(final int x, final int y) {\n    if (((x - 1) + x) >= 16) {\n        {\n            final long long = ((long)(x)) + ((long)(y));\n            if ((s < (java.lang.Integer.java.lang.Integer.int)) || (s > (java.lang.Integer.java.lang.Integer.int))) {\n                throw new java.lang.ArithmeticException(\"overflow: add\");\n            } \n            return ((int)(s));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nBools":"x","dstPos":"x"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDateParser:463","type":"CtBinaryOperatorImpl","sourcecode":"(formatField.length()) > 2"},"failures":[62,63,64,65],"tindex":"7d12bf46-2e84-11e6-9f86-776be7d4ea21","method":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:243","type":"CtMethodImpl","sourcecode":"public static java.lang.String formatPeriod(final long startMillis, final long endMillis, final java.lang.String format) {\n    if ((format.length()) > 2) {\n        {\n            return org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(startMillis, endMillis, format, true, java.util.TimeZone.getDefault());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"formatField":"format"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:142","type":"CtBinaryOperatorImpl","sourcecode":"denominator == 0"},"failures":[66,67,68],"tindex":"7d12e657-2e84-11e6-9f86-e998a3d02b79","method":{"position":"org.apache.commons.lang3.StringUtils:5410","type":"CtMethodImpl","sourcecode":"public static java.lang.String leftPad(final java.lang.String str, final int size, java.lang.String padStr) {\n    if (size == 0) {\n        {\n            if (str == null) {\n                return null;\n            } \n            if (org.apache.commons.lang3.StringUtils.isEmpty(padStr)) {\n                padStr = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final int int = padStr.length();\n            final int int = str.length();\n            final int int = size - strLen;\n            if (pads <= 0) {\n                return str;\n            } \n            if ((padLen == 1) && (pads <= (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int))) {\n                return org.apache.commons.lang3.StringUtils.leftPad(str, size, padStr.charAt(0));\n            } \n            if (pads == padLen) {\n                return padStr.concat(str);\n            } else if (pads < padLen) {\n                return padStr.substring(0, pads).concat(str);\n            } else {\n                final char[] char[] = new char[pads];\n                final char[] char[] = padStr.toCharArray();\n                for (int int = 0 ; i < pads ; i++) {\n                    padding[i] = padChars[(i % padLen)];\n                }\n                return new java.lang.String(padding).concat(str);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"denominator":"size"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:173","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"7d12e658-2e84-11e6-9f86-f779f2f81620","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:801","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final long value) {\n    if ((fieldName.length()) == 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (fieldName == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, value);\n                    return org.apache.commons.lang3.builder.ToStringBuilder.this;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:505","type":"CtBinaryOperatorImpl","sourcecode":"bool == null"},"failures":[69],"tindex":"7d130d69-2e84-11e6-9f86-23c0c0630024","method":{"position":"org.apache.commons.lang3.BooleanUtils:140","type":"CtMethodImpl","sourcecode":"public static boolean isNotFalse(final java.lang.Boolean bool) {\n    if (bool == null) {\n        {\n            return !(org.apache.commons.lang3.BooleanUtils.isFalse(bool));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bool":"bool"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6771","type":"CtBinaryOperatorImpl","sourcecode":"n > m"},"failures":[70],"tindex":"7d130d6a-2e84-11e6-9f86-9d7bcdab0627","method":{"position":"org.apache.commons.lang3.StringUtils:2785","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] splitByWholeSeparatorPreserveAllTokens(final java.lang.String str, final java.lang.String separator, final int max) {\n    if (max > max) {\n        {\n            return org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(str, separator, max, true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"m":"max","n":"max"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1361","type":"CtBinaryOperatorImpl","sourcecode":"i > 0"},"failures":[],"tindex":"7d130d6b-2e84-11e6-9f86-6542f2bf8632","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:210","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.time.FastDateFormat getDateInstance(final int style, final java.util.TimeZone timeZone) {\n    if (style > 0) {\n        {\n            return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getDateInstance(style, timeZone, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"style"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:4968","type":"CtBinaryOperatorImpl","sourcecode":"index == (org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND)"},"failures":[],"tindex":"7d130d6c-2e84-11e6-9f86-8b42fec15077","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1027","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendln(final int value) {\n    if (value == value) {\n        {\n            return append(value).appendNewLine();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND":"value","index":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:627","type":"CtBinaryOperatorImpl","sourcecode":"strLen > 0"},"failures":[71,72,73,74],"tindex":"7d13347d-2e84-11e6-9f86-69d88bf40a32","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:478","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final int lhs, final int rhs) {\n    if (lhs > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            int = lhs < rhs ? -1 : lhs > rhs ? 1 : 0;\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"strLen":"lhs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1153","type":"CtBinaryOperatorImpl","sourcecode":"b < a"},"failures":[],"tindex":"7d13347e-2e84-11e6-9f86-9ff318861b1c","method":{"position":"org.apache.commons.lang3.BitField:240","type":"CtMethodImpl","sourcecode":"public byte setByte(final byte holder) {\n    if (holder < holder) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((byte)(set(holder)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"holder","b":"holder"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"c < a"},"failures":[75],"tindex":"7d135b8f-2e84-11e6-9f86-f7ff939a12be","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1258","type":"CtMethodImpl","sourcecode":"public static byte max(byte a, final byte b, final byte c) {\n    if (c < b) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (b > a) {\n                a = b;\n            } \n            if (c > a) {\n                a = c;\n            } \n            return a;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","c":"c"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.StringUtils:6693","type":"CtBinaryOperatorImpl","sourcecode":"smallestIndexOfDiff == 0"},"failures":[76,77,78],"tindex":"7d135b90-2e84-11e6-9f86-3d51b81bace0","method":{"position":"org.apache.commons.lang3.text.translate.OctalUnescaper:39","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int translate(final java.lang.CharSequence input, final int index, final java.io.Writer out) throws java.io.IOException {\n    if (index == 0) {\n        {\n            int int = ((input.length()) - index) - 1;\n            java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            if ((((input.charAt(index)) == '\\\\') && (remaining > 0)) && (isOctalDigit(input.charAt((index + 1))))) {\n                int int = index + 1;\n                int int = index + 2;\n                int int = index + 3;\n                builder.append(input.charAt(next));\n                if ((remaining > 1) && (isOctalDigit(input.charAt(next2)))) {\n                    builder.append(input.charAt(next2));\n                    if (((remaining > 2) && (isZeroToThree(input.charAt(next)))) && (isOctalDigit(input.charAt(next3)))) {\n                        builder.append(input.charAt(next3));\n                    } \n                } \n                out.write(java.lang.Integer.parseInt(builder.toString(), 8));\n                return 1 + (builder.length());\n            } \n            return 0;\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"smallestIndexOfDiff":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrMatcher:193","type":"CtBinaryOperatorImpl","sourcecode":"(chars.length()) == 1"},"failures":[],"tindex":"7d1382a1-2e84-11e6-9f86-e7db9af351b0","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:801","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final long value) {\n    if ((fieldName.length()) == 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (fieldName == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, value);\n                    return org.apache.commons.lang3.builder.ToStringBuilder.this;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chars":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5820","type":"CtBinaryOperatorImpl","sourcecode":"found < 0"},"failures":[79],"tindex":"7d1382a2-2e84-11e6-9f86-35abbe551f1e","method":{"position":"org.apache.commons.lang3.Conversion:1653","type":"CtMethodImpl","sourcecode":"public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos, final int nBools) {\n    if (srcPos < 0) {\n        {\n            if (0 == nBools) {\n                return dst;\n            } \n            if (((nBools - 1) + srcPos) >= 8) {\n                throw new java.lang.IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n            } \n            int int = 0;\n            for (int int = 0 ; i < nBools ; i++) {\n                shift = (i * 1) + srcPos;\n                dst[(dstPos + i)] = (1 & (src >> shift)) != 0;\n            }\n            return dst;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"found":"srcPos"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1075","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[80],"tindex":"7d1382a3-2e84-11e6-9f86-0fd10f05fd01","method":{"position":"org.apache.commons.lang3.ArrayUtils:3654","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final byte[] array) {\n    if (array == null) {\n        {\n            return (array != null) && ((array.int) != 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:998","type":"CtBinaryOperatorImpl","sourcecode":"startIndexInclusive < 0"},"failures":[],"tindex":"7d13a9b4-2e84-11e6-9f86-a346b1f7c413","method":{"position":"org.apache.commons.lang3.time.FormatCache:159","type":"CtMethodImpl","sourcecode":"F getDateInstance(final int dateStyle, final java.util.TimeZone timeZone, java.util.Locale locale) {\n    if (dateStyle < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return getDateTimeInstance(java.lang.Integer.valueOf(dateStyle), null, timeZone, locale);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndexInclusive":"dateStyle"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2107","type":"CtBinaryOperatorImpl","sourcecode":"len > (size)"},"failures":[],"tindex":"7d13a9b5-2e84-11e6-9f86-99f285d90395","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1348","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendSeparator(final char separator, final int loopIndex) {\n    if (loopIndex > loopIndex) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (loopIndex > 0) {\n                append(separator);\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"loopIndex","size":"loopIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1262","type":"CtBinaryOperatorImpl","sourcecode":"c > a"},"failures":[81],"tindex":"7d13a9b6-2e84-11e6-9f86-49d581adeb94","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1152","type":"CtMethodImpl","sourcecode":"public static byte min(byte a, final byte b, final byte c) {\n    if (b > c) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (b < a) {\n                a = b;\n            } \n            if (c < a) {\n                a = c;\n            } \n            return a;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"c","c":"b"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:358","type":"CtBinaryOperatorImpl","sourcecode":"trueValue == null"},"failures":[82],"tindex":"7d13d0c7-2e84-11e6-9f86-d9e96e13f396","method":{"position":"org.apache.commons.lang3.mutable.MutableByte:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setValue(final java.lang.Number value) {\n    if (value == null) {\n        {\n            org.apache.commons.lang3.mutable.MutableByte.this.byte = value.byteValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trueValue":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:529","type":"CtBinaryOperatorImpl","sourcecode":"name != null"},"failures":[],"tindex":"7d13d0c8-2e84-11e6-9f86-85c084c3045d","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:487","type":"CtMethodImpl","sourcecode":"static void unregister(final java.lang.Object value) {\n    if (value != null) {\n        {\n            java.util.Set<org.apache.commons.lang3.builder.IDKey> java.util.Set<org.apache.commons.lang3.builder.IDKey> = org.apache.commons.lang3.builder.HashCodeBuilder.getRegistry();\n            if (registry != null) {\n                registry.remove(new org.apache.commons.lang3.builder.IDKey(value));\n                synchronized(org.apache.commons.lang3.builder.HashCodeBuilder.org.apache.commons.lang3.builder.HashCodeBuilder.java.lang.Class) {\n                    registry = org.apache.commons.lang3.builder.HashCodeBuilder.getRegistry();\n                    if ((registry != null) && (registry.isEmpty())) {\n                        org.apache.commons.lang3.builder.HashCodeBuilder.org.apache.commons.lang3.builder.HashCodeBuilder.java.lang.ThreadLocal<java.util.Set<org.apache.commons.lang3.builder.IDKey>>.remove();\n                    } \n                }\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDateParser:119","type":"CtInvocationImpl","sourcecode":"locale.equals(org.apache.commons.lang3.time.FastDateParser.JAPANESE_IMPERIAL)"},"failures":[83,84,85,86,87,88,89,90],"tindex":"7d13d0c9-2e84-11e6-9f86-6d2ab2b7cc83","method":{"position":"org.apache.commons.lang3.ArrayUtils:6011","type":"CtMethodImpl","sourcecode":"static java.lang.Object removeAll(final java.lang.Object array, final int... indices) {\n    if (array.equals(array)) {\n        {\n            final int int = org.apache.commons.lang3.ArrayUtils.getLength(array);\n            int int = 0;\n            if (org.apache.commons.lang3.ArrayUtils.isNotEmpty(indices)) {\n                java.util.Arrays.sort(indices);\n                int int = indices.int;\n                int int = length;\n                while ((--i) >= 0) {\n                    final int int = indices[i];\n                    if ((index < 0) || (index >= length)) {\n                        throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Length: \") + length));\n                    } \n                    if (index >= prevIndex) {\n                        continue;\n                    } \n                    diff++;\n                    prevIndex = index;\n                }\n            } \n            final java.lang.Object java.lang.Object = java.lang.reflect.Array.newInstance(array.getClass().getComponentType(), (length - diff));\n            if (diff < length) {\n                int int = length;\n                int int = length - diff;\n                for (int int = (indices.int) - 1 ; i >= 0 ; i--) {\n                    final int int = indices[i];\n                    if ((end - index) > 1) {\n                        final int int = (end - index) - 1;\n                        dest -= cp;\n                        java.lang.System.arraycopy(array, (index + 1), result, dest, cp);\n                    } \n                    end = index;\n                }\n                if (end > 0) {\n                    java.lang.System.arraycopy(array, 0, result, 0, end);\n                } \n            } \n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"locale":"array","org.apache.commons.lang3.time.FastDateParser.JAPANESE_IMPERIAL":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:650","type":"CtInvocationImpl","sourcecode":"cls.isPrimitive()"},"failures":[91,92,92,93,94,94,95,95,96,97,97,98,23,24,25,25,26,26,27,99,100,101,102,103,104,104,105,105,106,107,108,109,109,110,111,112,113,113,114,115,115,116,117,117,118,118,119,119,120,121,122,122,123,123,124,124,125,125,126,126,127,127,128,128,129,130,131,132,132,133,133,134,134,135,136,136,137,138,139,139,140,140,141,141,142,28,28,29,30,30,31,32,33,34,34,35,36,36,37,38,39,39,40,40,41,42,42,43,43,44,45,45],"tindex":"7d141eea-2e84-11e6-9f86-4bf6bc292815","method":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:665","type":"CtMethodImpl","sourcecode":"public void setUpToClass(final java.lang.Class<?> clazz) {\n    if (clazz.isPrimitive()) {\n        {\n            if (clazz != null) {\n                final java.lang.Object java.lang.Object = getObject();\n                if ((object != null) && ((clazz.isInstance(object)) == false)) {\n                    throw new java.lang.IllegalArgumentException(\"Specified class is not a superclass of the object\");\n                } \n            } \n            org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.java.lang.Class<?> = clazz;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"clazz"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:770","type":"CtVariableReadImpl","sourcecode":"value"},"failures":[143,144,145,146,147,148,149,150,151,152],"tindex":"7d141eeb-2e84-11e6-9f86-dd6ac6d11634","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1696","type":"CtMethodImpl","sourcecode":"protected void setDefaultFullDetail(final boolean defaultFullDetail) {\n    if (defaultFullDetail) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.this.boolean = defaultFullDetail;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"defaultFullDetail"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.AnnotationUtils:264","type":"CtBinaryOperatorImpl","sourcecode":"o1 == o2"},"failures":[20,21,22,23,23,24,25,26,27,37,37,46,47,48,49],"tindex":"7d1445fc-2e84-11e6-9f86-679ec4749669","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:862","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final java.lang.Object obj, final boolean fullDetail) {\n    if (obj == obj) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, obj, java.lang.Boolean.valueOf(fullDetail));\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o1":"obj","o2":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"org.apache.commons.lang3.concurrent.ConcurrentException","condition":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:244","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[153],"tindex":"7d1445fd-2e84-11e6-9f86-5b163030e908","method":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:272","type":"CtMethodImpl","sourcecode":"public static <K, V>V createIfAbsent(final java.util.concurrent.ConcurrentMap<K, V> map, final K key, final org.apache.commons.lang3.concurrent.ConcurrentInitializer<V> init) throws org.apache.commons.lang3.concurrent.ConcurrentException {\n    if (map == null) {\n        throw new org.apache.commons.lang3.concurrent.ConcurrentException();\n    } else {\n        {\n            if ((map == null) || (init == null)) {\n                return null;\n            } \n            final V V = map.get(key);\n            if (value == null) {\n                return org.apache.commons.lang3.concurrent.ConcurrentUtils.putIfAbsent(map, key, init.get());\n            } \n            return value;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:4569","type":"CtBinaryOperatorImpl","sourcecode":"(index > length) || (index < 0)"},"failures":[],"tindex":"7d1445fe-2e84-11e6-9f86-8d4b80e83660","method":{"position":"org.apache.commons.lang3.time.DateUtils:700","type":"CtMethodImpl","sourcecode":"public static java.util.Date round(final java.util.Date date, final int field) {\n    if ((field > field) || (index < 0)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (date == null) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            final java.util.Calendar java.util.Calendar = java.util.Calendar.getInstance();\n            gval.setTime(date);\n            org.apache.commons.lang3.time.DateUtils.modify(gval, field, org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.int);\n            return gval.getTime();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"field","index":"field"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5611","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"7d146d0f-2e84-11e6-9f86-eb10440aa403","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:584","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final byte[] array) {\n    if (fieldName == null) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, array, null);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4757","type":"CtBinaryOperatorImpl","sourcecode":"greater > 0"},"failures":[154,155],"tindex":"7d146d10-2e84-11e6-9f86-6b52d33e3505","method":{"position":"org.apache.commons.lang3.RandomStringUtils:142","type":"CtMethodImpl","sourcecode":"public static java.lang.String random(final int count, final boolean letters, final boolean numbers) {\n    if (count > 0) {\n        {\n            return org.apache.commons.lang3.RandomStringUtils.random(count, 0, 0, letters, numbers);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"greater":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5637","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"7d149421-2e84-11e6-9f86-059e47187d74","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1236","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final char[] array) {\n    if (fieldName == null) {\n        {\n            buffer.append(java.lang.String);\n            for (int int = 0 ; i < (array.int) ; i++) {\n                if (i > 0) {\n                    buffer.append(java.lang.String);\n                } \n                appendDetail(buffer, fieldName, array[i]);\n            }\n            buffer.append(java.lang.String);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5588","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[156],"tindex":"7d149422-2e84-11e6-9f86-33b3f19df8e3","method":{"position":"org.apache.commons.lang3.StringUtils:761","type":"CtMethodImpl","sourcecode":"public static java.lang.String stripAccents(final java.lang.String input) {\n    if (input == null) {\n        {\n            if (input == null) {\n                return null;\n            } \n            final java.util.regex.Pattern java.util.regex.Pattern = java.util.regex.Pattern.compile(\"\\\\p{InCombiningDiacriticalMarks}+\");\n            final java.lang.String java.lang.String = java.text.Normalizer.normalize(input, java.text.Normalizer.Form.java.text.Normalizer.Form.java.text.Normalizer.Form);\n            return pattern.matcher(decomposed).replaceAll(\"\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:588","type":"CtBinaryOperatorImpl","sourcecode":"(isEquals) == false"},"failures":[157,158,159],"tindex":"7d149423-2e84-11e6-9f86-95fea2b6577e","method":{"position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:318","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder daemon(final boolean f) {\n    if (f == false) {\n        {\n            java.lang.Boolean = java.lang.Boolean.valueOf(f);\n            return org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isEquals":"f"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.AnnotationUtils:270","type":"CtInvocationImpl","sourcecode":"type.isArray()"},"failures":[160],"tindex":"7d14bb34-2e84-11e6-9f86-0b87d9afecf5","method":{"position":"org.apache.commons.lang3.ClassUtils:1027","type":"CtMethodImpl","sourcecode":"public static java.lang.String getShortCanonicalName(final java.lang.Class<?> cls) {\n    if (cls.isArray()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (cls == null) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            return org.apache.commons.lang3.ClassUtils.getShortCanonicalName(cls.getName());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"cls"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:818","type":"CtBinaryOperatorImpl","sourcecode":"(array[j]) < min"},"failures":[161],"tindex":"7d14bb35-2e84-11e6-9f86-b709a0a0929e","method":{"position":"org.apache.commons.lang3.ArrayUtils:954","type":"CtMethodImpl","sourcecode":"public static int[] subarray(final int[] array, int startIndexInclusive, int endIndexExclusive) {\n    if ((array[endIndexExclusive]) < endIndexExclusive) {\n        {\n            if (array == null) {\n                return null;\n            } \n            if (startIndexInclusive < 0) {\n                startIndexInclusive = 0;\n            } \n            if (endIndexExclusive > (array.int)) {\n                endIndexExclusive = array.int;\n            } \n            final int int = endIndexExclusive - startIndexInclusive;\n            if (newSize <= 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int[];\n            } \n            final int[] int[] = new int[newSize];\n            java.lang.System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);\n            return subarray;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"min":"endIndexExclusive","array":"array","j":"endIndexExclusive"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:651","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[162,163],"tindex":"7d14bb36-2e84-11e6-9f86-4dcc202d1dc1","method":{"position":"org.apache.commons.lang3.StringUtils:3303","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final java.lang.Object[] array, final char separator) {\n    if (array == array) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            return org.apache.commons.lang3.StringUtils.join(array, separator, 0, array.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array","rhs":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:239","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[164,165,166],"tindex":"7d14e247-2e84-11e6-9f86-41fdc6fc29ec","method":{"position":"org.apache.commons.lang3.SerializationUtils:146","type":"CtMethodImpl","sourcecode":"public static void serialize(final java.io.Serializable obj, final java.io.OutputStream outputStream) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (outputStream == null) {\n                throw new java.lang.IllegalArgumentException(\"The OutputStream must not be null\");\n            } \n            java.io.ObjectOutputStream java.io.ObjectOutputStream = null;\n            try {\n                out = new java.io.ObjectOutputStream(outputStream);\n                out.writeObject(obj);\n            } catch (final java.io.IOException ex) {\n                throw new org.apache.commons.lang3.SerializationException(ex);\n            } finally {\n                try {\n                    if (out != null) {\n                        out.close();\n                    } \n                } catch (final java.io.IOException ex) {\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:127","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[167],"tindex":"7d14e248-2e84-11e6-9f86-55e9a0cd3961","method":{"position":"org.apache.commons.lang3.text.StrBuilder:877","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendln(final java.lang.String str, final int startIndex, final int length) {\n    if (str == null) {\n        {\n            return append(str, startIndex, length).appendNewLine();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2293","type":"CtInvocationImpl","sourcecode":"separator.isEmpty()"},"failures":[168],"tindex":"7d14e249-2e84-11e6-9f86-a1a0d5fef56e","method":{"position":"org.apache.commons.lang3.EnumUtils:90","type":"CtMethodImpl","sourcecode":"public static <E extends java.lang.Enum<E>>boolean isValidEnum(final java.lang.Class<E> enumClass, final java.lang.String enumName) {\n    if (enumName.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (enumName == null) {\n                return false;\n            } \n            try {\n                java.lang.Enum.valueOf(enumClass, enumName);\n                return true;\n            } catch (final java.lang.IllegalArgumentException ex) {\n                return false;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"separator":"enumName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.AggregateTranslator:53","type":"CtBinaryOperatorImpl","sourcecode":"consumed != 0"},"failures":[],"tindex":"7d15095a-2e84-11e6-9f86-f12b9d2e24cb","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2919","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void mark(final int readAheadLimit) {\n    if (readAheadLimit != 0) {\n        {\n            int = int;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"consumed":"readAheadLimit"},"type":"special","returnInThen":true,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":56,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}