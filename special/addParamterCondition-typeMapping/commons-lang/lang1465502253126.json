{"failureDictionary":{"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":47,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":236,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":434,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":231,"org.apache.commons.lang3.text.StrBuilderTest.testSubstringInt":312,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":429,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":448,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeRuntimeEx":36,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveBooleanArray":367,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":48,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":101,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":103,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":261,"org.apache.commons.lang3.time.FastDatePrinterTest.testMilleniumBug":109,"org.apache.commons.lang3.ValidateTest.testIsTrue5":492,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteIntInt":307,"org.apache.commons.lang3.ArrayUtilsTest.testIsEmptyPrimitives":472,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":230,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceAll_StrMatcher_String":310,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementLongArray":249,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":260,"org.apache.commons.lang3.time.FastDateParserTest.testLANG_832":193,"org.apache.commons.lang3.builder.EqualsBuilderTest.testObjectBuild":26,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":150,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":134,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_AD":221,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":409,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDefaults":343,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":177,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":55,"org.apache.commons.lang3.ArrayUtilsTest.testSameLengthChar":332,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":447,"org.apache.commons.lang3.ArrayUtilsTest.testContainsFloat":15,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetMatchingAccessibleMethod":81,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":131,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":20,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml11":9,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":449,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringCharArrayWithSupplementaryChars":458,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCyclicalObjectReferences":62,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":225,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":179,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_BC":200,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":421,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":148,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":272,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":425,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_BC":222,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":282,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":264,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAscii":11,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListenerWithPrivateAddMethod":167,"org.apache.commons.lang3.builder.CompareToBuilderTest.testFloat":0,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementFloatArray":97,"org.apache.commons.lang3.RandomUtilsTest.testNextIntLowerGreaterUpper":162,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":392,"org.apache.commons.lang3.reflect.TypeLiteralTest.testBasic":89,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfFloat":94,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":428,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringString":99,"org.apache.commons.lang3.builder.EqualsBuilderTest.testObjectArray":25,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":336,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_AD":199,"org.apache.commons.lang3.math.FractionTest.testFactory_int_int":331,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StringBuilder_int_int":158,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_int_int_String":309,"org.apache.commons.lang3.math.FractionTest.testDivide":326,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":105,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringCharArrayWithSupplementaryChars":453,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringCharArrayWithBadSupplementaryChars":455,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":410,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":403,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeEx":37,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":137,"org.apache.commons.lang3.AnnotationUtilsTest.testNonEquivalentAnnotationsOfSameType":357,"org.apache.commons.lang3.time.FastDateParserTest.testParseNumerics":190,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryReplace":314,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":333,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeMethod":83,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringString":457,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetAllFieldsList":475,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":128,"org.apache.commons.lang3.AnnotationUtilsTest.testSameInstance":351,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementLongArray":248,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":152,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseChecked":29,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":102,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testInvalidFragmentWithDate":88,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":443,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":243,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":263,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":182,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":400,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":153,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":142,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":22,"org.apache.commons.lang3.AnnotationUtilsTest.testEquivalence":352,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":347,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringString":459,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_AD":197,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":122,"org.apache.commons.lang3.RandomUtilsTest.testNextIntMinimalRange":164,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteAll_StrMatcher":315,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":138,"org.apache.commons.lang3.time.FastDateParserTest.testDayOf":184,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseNumerics":212,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":399,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":384,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang538":214,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":414,"org.apache.commons.lang3.ArrayUtilsTest.testCloneLong":247,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_ClassArray_ClassArray_NoAutoboxing":71,"org.apache.commons.lang3.time.DateFormatUtilsTest.testConstructor":335,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":170,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":435,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":486,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":387,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsArrayGenericTypes":246,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetTypeArguments":474,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":125,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":136,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang303":213,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":300,"org.apache.commons.lang3.math.FractionTest.testFactory_String_improper":324,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfByte":13,"org.apache.commons.lang3.builder.EqualsBuilderTest.testObject":28,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":51,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetCheckedException":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":173,"org.apache.commons.lang3.RandomUtilsTest.testExtremeRangeInt":161,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":172,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":196,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":373,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_BC":220,"org.apache.commons.lang3.BooleanUtilsTest.test_toInteger_boolean":361,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":383,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang303":118,"org.apache.commons.lang3.StringUtilsTest.testRepeat_StringInt":468,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":398,"org.apache.commons.lang3.builder.DiffBuilderTest.testSimilarObjectIgnoresAppends":21,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":397,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":238,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfFloatWithStartIndex":95,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":334,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":442,"org.apache.commons.lang3.StringUtilsTest.testRightPad_StringIntChar":469,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":257,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":386,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_AD":219,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":119,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsOnly_CharArray":463,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":420,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":140,"org.apache.commons.lang3.builder.CompareToBuilderTest.testDouble":1,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":376,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfCharWithStartIndex":159,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetAllFields":476,"org.apache.commons.lang3.reflect.InheritanceUtilsTest.testDistanceGreaterThanZero":360,"org.apache.commons.lang3.math.FractionTest.testAbs":319,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":151,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendSeparator_char_int":10,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":149,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":54,"org.apache.commons.lang3.reflect.TypeUtilsTest.testParameterize":91,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":450,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":426,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateInstance":340,"org.apache.commons.lang3.math.FractionTest.testAdd":320,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":124,"org.apache.commons.lang3.StringUtilsIsTest.testIsAlphanumeric":485,"org.apache.commons.lang3.text.StrBuilderTest.testLeftString":98,"org.apache.commons.lang3.ArrayUtilsTest.testIsNotEmptyPrimitives":250,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_ClassArray_ClassArray":72,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsOnly_String":454,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":82,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":423,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":176,"org.apache.commons.lang3.RandomUtilsTest.testNextIntNegative":160,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":258,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":297,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testEndsWithIgnoreCase":5,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryCount":308,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":380,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":53,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_AD":216,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":129,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveObjectArray":364,"org.apache.commons.lang3.StringUtilsTest.testLeftPad_StringIntChar":467,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":23,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveCharArray":366,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetMatchingAccessibleMethod":86,"org.apache.commons.lang3.time.FastDateParserTest.testAmPm":186,"org.apache.commons.lang3.text.StrBuilderTest.testTrim":305,"org.apache.commons.lang3.event.EventUtilsTest.testBindFilteredEventsToMethod":76,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAnyBut_StringCharArrayWithSupplementaryChars":460,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":178,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiDoubleArray":3,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang538":112,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListenerWithNoAddMethod":166,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_BC":217,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testMilleniumBug":116,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_BC":211,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseUncheckedException":35,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringCharArray":466,"org.apache.commons.lang3.AnnotationUtilsTest.testGeneratedAnnotationEquivalentToRealAnnotation":355,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":416,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":229,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":49,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":444,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringStringarray":100,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testDouble":17,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":265,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixtureWithTransients":67,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":267,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":266,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":269,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":268,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":271,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":270,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":430,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":133,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringWithSupplementaryChars":462,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseNull":31,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfByteWithStartIndex":14,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang645":338,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance":339,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":401,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testSpecialCharacters":203,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":437,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAnyBut_StringCharArray":461,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParses":223,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":391,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_ClassArray_ClassArray_Autoboxing":70,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":241,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":284,"org.apache.commons.lang3.builder.CompareToBuilderTest.testDoubleArray":4,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":491,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils":12,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testDayOf":206,"org.apache.commons.lang3.RandomUtilsTest.testNextInt":163,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testMilleniumBug":205,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvString":470,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":174,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":375,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":123,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testQuotes":224,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringWithBadSupplementaryChars":456,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":439,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":235,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringCharArray":465,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":487,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":433,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":432,"org.apache.commons.lang3.StringUtilsTest.testDifference_StringString":146,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":127,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":490,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":169,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testSimpleDate":114,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDifferingStyles":344,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":147,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testDoubleArrayAsObject":16,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testNullArgument":85,"org.apache.commons.lang3.ArrayUtilsTest.testSameLength":73,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":489,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":452,"org.apache.commons.lang3.math.FractionTest.testNegate":329,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":404,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":337,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePartialString_noReplace":244,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDefaults":346,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementCharArray":473,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfIgnoreCase_String":477,"org.apache.commons.lang3.StringUtilsTest.testIsAllUpperCase":483,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseNullCause":33,"org.apache.commons.lang3.math.NumberUtilsTest.testMinShort":479,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":143,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":242,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseUncheckedException":32,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethodWithEvent":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":436,"org.apache.commons.lang3.time.FastDateParserTest.testSpecialCharacters":181,"org.apache.commons.lang3.time.FastDateParserTest.testLowYearPadding":187,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_AD":210,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":227,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":405,"org.apache.commons.lang3.builder.CompareToBuilderTest.testLongArray":41,"org.apache.commons.lang3.StringUtilsTest.testDifferenceAt_StringString":145,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":415,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":135,"org.apache.commons.lang3.math.FractionTest.testMultiply":327,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryEndIndex":304,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang303":111,"org.apache.commons.lang3.BitFieldTest.testByte":245,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethod":75,"org.apache.commons.lang3.time.FastDateFormatTest.testDateDefaults":342,"org.apache.commons.lang3.time.FastDateParserTest.testMilleniumBug":183,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":259,"org.apache.commons.lang3.time.FastDatePrinterTest.testSimpleDate":107,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDateDefaults":341,"org.apache.commons.lang3.builder.CompareToBuilderTest.testFloatArray":359,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":132,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":374,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":441,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":120,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":218,"org.apache.commons.lang3.time.FastDateParserTest.testParseZone":185,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListener":74,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseNull":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":407,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":381,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":292,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringStringWithSupplementaryChars":464,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":52,"org.apache.commons.lang3.time.FastDateParserTest.testLang538":192,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":171,"org.apache.commons.lang3.time.FastDateParserTest.testLang303":191,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":293,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":294,"org.apache.commons.lang3.AnnotationUtilsTest.testBothArgsNull":356,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":295,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":296,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_AD":188,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":440,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":431,"org.apache.commons.lang3.math.NumberUtilsTest.testMinLong_nullArray":69,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":141,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorNoArgs":233,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":382,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":418,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":389,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveLongArray":371,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":488,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionHierarchyEquals":64,"org.apache.commons.lang3.time.FastDatePrinterTest.testShortDateStyleWithLocales":108,"org.apache.commons.lang3.text.StrBuilderTest.testAsWriter":317,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":58,"org.apache.commons.lang3.math.NumberUtilsTest.testMinShort_emptyArray":478,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":106,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":285,"org.apache.commons.lang3.AnnotationUtilsTest.testOneArgNull":349,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":451,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_BC":189,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":286,"org.apache.commons.lang3.time.FastDatePrinterTest.testFormat":113,"org.apache.commons.lang3.text.StrBuilderTest.testSubstringIntInt":306,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEqualsExcludeFields":63,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":50,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":60,"org.apache.commons.lang3.ObjectUtilsTest.testConstMethods":318,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":130,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":144,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testInteger":68,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":394,"org.apache.commons.lang3.ArrayUtilsTest.testReverseByte":482,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseZone":207,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":417,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":408,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvWriter":471,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":154,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryMatcher":313,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeStaticMethod":79,"org.apache.commons.lang3.math.FractionTest.testReduce":330,"org.apache.commons.lang3.time.FastDatePrinterTest.testLowYearPadding":110,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixture":66,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeResultsIsSuccessfulFalse":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":395,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":424,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":175,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_byte":362,"org.apache.commons.lang3.reflect.TypeUtilsTest.testParameterizeWithOwner":92,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":156,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryStartIndex":311,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":419,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":45,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":402,"org.apache.commons.lang3.ArrayUtilsTest.testIsEquals":19,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":46,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":157,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":59,"org.apache.commons.lang3.reflect.TypeLiteralTest.testTyped":90,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":427,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":385,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_BC":195,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":232,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":262,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":57,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceFirst_StrMatcher_String":302,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementFloatArray":96,"org.apache.commons.lang3.text.StrBuilderTest.testToCharArrayIntInt":316,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetRuntimeException":40,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testDoubleArray":18,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":204,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllNullObjectArray":372,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":445,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":168,"org.apache.commons.lang3.StringUtilsTest.testAppendIfMissing":8,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":239,"org.apache.commons.lang3.AnnotationUtilsTest.testAnnotationsOfDifferingTypes":353,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":56,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":240,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":406,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":226,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectAtIndex":165,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":251,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateTimeInstance":345,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseChecked":30,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":298,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":299,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":228,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":377,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":104,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_BC":198,"org.apache.commons.lang3.math.FractionTest.testInvert":328,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testAmPm":208,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":254,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":255,"org.apache.commons.lang3.StringUtilsTest.testAppendIfMissingIgnoreCase":7,"org.apache.commons.lang3.AnnotationUtilsTest.testHashCode":354,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":396,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteFirst_StrMatcher":301,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_AD":194,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareExcludeFields":42,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":234,"org.apache.commons.lang3.text.StrBuilderTest.testSubSequenceIntInt":303,"org.apache.commons.lang3.builder.EqualsBuilderTest.testNpeForNullElement":27,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":446,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":422,"org.apache.commons.lang3.text.StrTokenizerTest.test8":281,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":411,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":139,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveDoubleArray":363,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrChar":87,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLowYearPadding":209,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLANG_832":215,"org.apache.commons.lang3.text.StrTokenizerTest.test5":278,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGenericArrayType":93,"org.apache.commons.lang3.text.StrTokenizerTest.test4":277,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadDeclaredNamedField":484,"org.apache.commons.lang3.text.StrTokenizerTest.test7":280,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":412,"org.apache.commons.lang3.text.StrTokenizerTest.test6":279,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":413,"org.apache.commons.lang3.text.StrTokenizerTest.test1":274,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testEndsWith":6,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":273,"org.apache.commons.lang3.text.StrTokenizerTest.test3":276,"org.apache.commons.lang3.text.StrTokenizerTest.test2":275,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":388,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testIntegerWithTransients":65,"org.apache.commons.lang3.AnnotationUtilsTest.testIsValidAnnotationMemberType":358,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":121,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":252,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareTransients":44,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":253,"org.apache.commons.lang3.reflect.MethodUtilsTest.testNullArgument":80,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEquals":61,"org.apache.commons.lang3.math.FractionTest.testSubtract":322,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":379,"org.apache.commons.lang3.time.FastDateParserTest.testQuotes":202,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveFloatArray":365,"org.apache.commons.lang3.math.FractionTest.testToProperString":325,"org.apache.commons.lang3.BooleanUtilsTest.test_toStringYesNo_boolean":480,"org.apache.commons.lang3.math.FractionTest.testPow":321,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveByteArray":368,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveShortArray":369,"org.apache.commons.lang3.StringUtilsTest.testReverse_String":348,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":256,"org.apache.commons.lang3.time.FastDateParserTest.testParses":201,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":291,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":378,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":237,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveIntArray":370,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLowYearPadding":117,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompare":43,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":283,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":289,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":288,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":290,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":287,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":180,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":438,"org.apache.commons.lang3.math.FractionTest.testToString":323,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":393,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":126,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeConstructor":84,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":350,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":155,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":115,"org.apache.commons.lang3.builder.CompareToBuilderTest.testDoubleArrayHiddenByObject":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":390,"org.apache.commons.lang3.StringUtilsTest.testSplitPreserveAllTokens_String":481},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:221","type":"CtInvocationImpl","sourcecode":"java.lang.Double.isNaN(a)"},"failures":[0,1,2,3,4],"tindex":"67ad93d0-2e7c-11e6-a2cf-b36a1064c6fa","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:547","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final double lhs, final double rhs) {\n    if (java.lang.Double.isNaN(rhs)) {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            int = java.lang.Double.compare(lhs, rhs);\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"rhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:335","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isWhitespace(c)"},"failures":[],"tindex":"67ae5721-2e7c-11e6-a2cf-4d1ccb6538b4","method":{"position":"org.apache.commons.lang3.CharRange:113","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.CharRange isIn(final char start, final char end) {\n    if (java.lang.Character.isWhitespace(start)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.lang3.CharRange(start , end , false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"start"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:195","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(className)"},"failures":[5,6,7,8],"tindex":"67ae5722-2e7c-11e6-a2cf-6b2d8de6778b","method":{"position":"org.apache.commons.lang3.StringUtils:7311","type":"CtMethodImpl","sourcecode":"private static boolean endsWith(final java.lang.CharSequence str, final java.lang.CharSequence suffix, final boolean ignoreCase) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((str == null) || (suffix == null)) {\n                return (str == null) && (suffix == null);\n            } \n            if ((suffix.length()) > (str.length())) {\n                return false;\n            } \n            final int int = (str.length()) - (suffix.length());\n            return org.apache.commons.lang3.CharSequenceUtils.regionMatches(str, ignoreCase, strOffset, suffix, 0, suffix.length());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"className":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:910","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[],"tindex":"67ae7e33-2e7c-11e6-a2cf-4d74a012c025","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:461","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.StringBuffer format(final java.util.Calendar calendar, final java.lang.StringBuffer buf) {\n    if (calendar == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return applyRules(calendar, buf);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"calendar"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:214","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[9],"tindex":"67ae7e34-2e7c-11e6-a2cf-1f1fe3dee76e","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:728","type":"CtMethodImpl","sourcecode":"public static java.lang.String escapeXml11(final java.lang.String input) {\n    if (input == null) {\n        {\n            return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.NoSuchMethodException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:848","type":"CtBinaryOperatorImpl","sourcecode":"varValue != null"},"failures":[],"tindex":"67aea545-2e7c-11e6-a2cf-31f2d20ba14d","method":{"position":"org.apache.commons.lang3.reflect.MethodUtils:253","type":"CtMethodImpl","sourcecode":"public static java.lang.Object invokeStaticMethod(final java.lang.Class<?> cls, final java.lang.String methodName, java.lang.Object... args) throws java.lang.IllegalAccessException, java.lang.NoSuchMethodException, java.lang.reflect.InvocationTargetException {\n    if (methodName != null) {\n        {\n            args = org.apache.commons.lang3.ArrayUtils.nullToEmpty(args);\n            final java.lang.Class<?>[] java.lang.Class<?>[] = org.apache.commons.lang3.ClassUtils.toClass(args);\n            return org.apache.commons.lang3.reflect.MethodUtils.invokeStaticMethod(cls, methodName, args, parameterTypes);\n        }\n    } else {\n        throw new java.lang.NoSuchMethodException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"varValue":"methodName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:4575","type":"CtBinaryOperatorImpl","sourcecode":"index < length"},"failures":[10],"tindex":"67aea546-2e7c-11e6-a2cf-c5f0a47d2a0d","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1348","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendSeparator(final char separator, final int loopIndex) {\n    if (loopIndex < loopIndex) {\n        {\n            if (loopIndex > 0) {\n                append(separator);\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"loopIndex","index":"loopIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1686","type":"CtBinaryOperatorImpl","sourcecode":"0 == nBytes"},"failures":[11,12],"tindex":"67aecc57-2e7c-11e6-a2cf-3970cc750cde","method":{"position":"org.apache.commons.lang3.RandomStringUtils:82","type":"CtMethodImpl","sourcecode":"public static java.lang.String randomAscii(final int count) {\n    if (0 == count) {\n        {\n            return org.apache.commons.lang3.RandomStringUtils.random(count, 32, 127, false, false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nBytes":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:651","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[],"tindex":"67aecc58-2e7c-11e6-a2cf-f5e1be56d4e1","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:859","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final java.lang.Object[] array) {\n    if (array == array) {\n        {\n            if (array == null) {\n                int = (int) * (int);\n            } else {\n                for (final java.lang.Object java.lang.Object : array) {\n                    append(element);\n                }\n            }\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array","rhs":"array"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDatePrinter:305","type":"CtBinaryOperatorImpl","sourcecode":"((c >= 'A') && (c <= 'Z')) || ((c >= 'a') && (c <= 'z'))"},"failures":[],"tindex":"67aef369-2e7c-11e6-a2cf-43d8066e7dee","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:874","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrTokenizer setDelimiterChar(final char delim) {\n    if (((delim >= 'A') && (c <= 'Z')) || ((c >= 'a') && (c <= 'z'))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return setDelimiterMatcher(org.apache.commons.lang3.text.StrMatcher.charMatcher(delim));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"delim"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:113","type":"CtBinaryOperatorImpl","sourcecode":"initialCapacity <= 0"},"failures":[13,14],"tindex":"67aef36a-2e7c-11e6-a2cf-bbbfe4c7ca10","method":{"position":"org.apache.commons.lang3.ArrayUtils:2481","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final byte[] array, final byte valueToFind, int startIndex) {\n    if (startIndex <= 0) {\n        {\n            if (array == null) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } else if (startIndex >= (array.int)) {\n                startIndex = (array.int) - 1;\n            } \n            for (int int = startIndex ; i >= 0 ; i--) {\n                if (valueToFind == (array[i])) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"initialCapacity":"startIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:938","type":"CtBinaryOperatorImpl","sourcecode":"rhs == null"},"failures":[15],"tindex":"67af1a7b-2e7c-11e6-a2cf-e96383259bb9","method":{"position":"org.apache.commons.lang3.ArrayUtils:2834","type":"CtMethodImpl","sourcecode":"public static boolean contains(final float[] array, final float valueToFind) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind)) != (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"rhs":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6455","type":"CtBinaryOperatorImpl","sourcecode":"(length >= (str.length())) || (length < ((middle.length()) + 2))"},"failures":[],"tindex":"67af1a7c-2e7c-11e6-a2cf-b75f62a2b594","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:918","type":"CtMethodImpl","sourcecode":"protected java.lang.String resolveVariable(final java.lang.String variableName, final org.apache.commons.lang3.text.StrBuilder buf, final int startPos, final int endPos) {\n    if ((endPos >= (variableName.length())) || (length < ((variableName.length()) + 2))) {\n        {\n            final org.apache.commons.lang3.text.StrLookup<?> org.apache.commons.lang3.text.StrLookup<?> = getVariableResolver();\n            if (resolver == null) {\n                return null;\n            } \n            return resolver.lookup(variableName);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"variableName","middle":"variableName","length":"endPos"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:454","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isBlank(str)"},"failures":[],"tindex":"67af418d-2e7c-11e6-a2cf-a3f420870200","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:742","type":"CtMethodImpl","sourcecode":"public static void writeField(final java.lang.Object target, final java.lang.String fieldName, final java.lang.Object value, final boolean forceAccess) throws java.lang.IllegalAccessException {\n    if (org.apache.commons.lang3.StringUtils.isBlank(target)) {\n        throw new java.lang.IllegalAccessException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.isTrue((target != null), \"target object must not be null\");\n            final java.lang.Class<?> java.lang.Class<?> = target.getClass();\n            final java.lang.reflect.Field java.lang.reflect.Field = org.apache.commons.lang3.reflect.FieldUtils.getField(cls, fieldName, forceAccess);\n            org.apache.commons.lang3.Validate.isTrue((field != null), \"Cannot locate declared field %s.%s\", cls.getName(), fieldName);\n            org.apache.commons.lang3.reflect.FieldUtils.writeField(field, target, value, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"target"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:224","type":"CtInvocationImpl","sourcecode":"java.lang.Double.isNaN(b)"},"failures":[16,17,18],"tindex":"67af689e-2e7c-11e6-a2cf-cdcb1138d661","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:676","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final double value) {\n    if (java.lang.Double.isNaN(value)) {\n        {\n            return append(java.lang.Double.doubleToLongBits(value));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:210","type":"CtBinaryOperatorImpl","sourcecode":"valueProperties == null"},"failures":[19,20,21,22,23,24,25,26,27,28],"tindex":"67af689f-2e7c-11e6-a2cf-e3e8087453b5","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:451","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.EqualsBuilder append(final java.lang.Object lhs, final java.lang.Object rhs) {\n    if (lhs == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((boolean) == false) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if ((lhs == null) || (rhs == null)) {\n                org.apache.commons.lang3.builder.EqualsBuilder.this.setEquals(false);\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            final java.lang.Class<?> java.lang.Class<?> = lhs.getClass();\n            if (!(lhsClass.isArray())) {\n                boolean = lhs.equals(rhs);\n            } else if ((lhs.getClass()) != (rhs.getClass())) {\n                org.apache.commons.lang3.builder.EqualsBuilder.this.setEquals(false);\n            } else if (lhs instanceof long[]) {\n                append(((long[])(lhs)), ((long[])(rhs)));\n            } else if (lhs instanceof int[]) {\n                append(((int[])(lhs)), ((int[])(rhs)));\n            } else if (lhs instanceof short[]) {\n                append(((short[])(lhs)), ((short[])(rhs)));\n            } else if (lhs instanceof char[]) {\n                append(((char[])(lhs)), ((char[])(rhs)));\n            } else if (lhs instanceof byte[]) {\n                append(((byte[])(lhs)), ((byte[])(rhs)));\n            } else if (lhs instanceof double[]) {\n                append(((double[])(lhs)), ((double[])(rhs)));\n            } else if (lhs instanceof float[]) {\n                append(((float[])(lhs)), ((float[])(rhs)));\n            } else if (lhs instanceof boolean[]) {\n                append(((boolean[])(lhs)), ((boolean[])(rhs)));\n            } else {\n                append(((java.lang.Object[])(lhs)), ((java.lang.Object[])(rhs)));\n            }\n            return org.apache.commons.lang3.builder.EqualsBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"valueProperties":"lhs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:163","type":"CtBinaryOperatorImpl","sourcecode":"(ex.getCause()) instanceof java.lang.Error"},"failures":[29,30,31,32,33,34,35,36,37,38,39,40],"tindex":"67af8fb0-2e7c-11e6-a2cf-e10d7d5df960","method":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:60","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.concurrent.ConcurrentException extractCause(final java.util.concurrent.ExecutionException ex) {\n    if ((ex.getCause()) instanceof java.lang.Error) {\n        {\n            if ((ex == null) || ((ex.getCause()) == null)) {\n                return null;\n            } \n            org.apache.commons.lang3.concurrent.ConcurrentUtils.throwCause(ex);\n            return new org.apache.commons.lang3.concurrent.ConcurrentException(ex.getMessage() , ex.getCause());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ex":"ex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3336","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[41],"tindex":"67afb6c1-2e7c-11e6-a2cf-d7b12239ab83","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:687","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final long[] lhs, final long[] rhs) {\n    if (rhs == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == null) {\n                int = -1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (rhs == null) {\n                int = +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                int = (lhs.int) < (rhs.int) ? -1 : +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && ((int) == 0) ; i++) {\n                append(lhs[i], rhs[i]);\n            }\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"rhs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:826","type":"CtBinaryOperatorImpl","sourcecode":"(isEquals) == false"},"failures":[],"tindex":"67afddd2-2e7c-11e6-a2cf-09a08a1d22be","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:650","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final char[] array, final boolean fullDetail) {\n    if (fullDetail == false) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, array, java.lang.Boolean.valueOf(fullDetail));\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isEquals":"fullDetail"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1572","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.ObjectUtils.equals(t1, t2)"},"failures":[42,43,44,45,20,46,47,48,49,50,51,52,53,54,55,21,22,56,57,23,58,59,24,60,61,62,63,64,65,66,67,68],"tindex":"67afddd3-2e7c-11e6-a2cf-8dbc572ba5ca","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:171","type":"CtMethodImpl","sourcecode":"static void register(final java.lang.Object lhs, final java.lang.Object rhs) {\n    if (org.apache.commons.lang3.ObjectUtils.equals(lhs, lhs)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(org.apache.commons.lang3.builder.EqualsBuilder.org.apache.commons.lang3.builder.EqualsBuilder.java.lang.Class) {\n                if ((org.apache.commons.lang3.builder.EqualsBuilder.getRegistry()) == null) {\n                    org.apache.commons.lang3.builder.EqualsBuilder.org.apache.commons.lang3.builder.EqualsBuilder.java.lang.ThreadLocal<java.util.Set<org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey>>>.set(new java.util.HashSet<org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey>>());\n                } \n            }\n            final java.util.Set<org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey>> java.util.Set<org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey>> = org.apache.commons.lang3.builder.EqualsBuilder.getRegistry();\n            final org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey> org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey> = org.apache.commons.lang3.builder.EqualsBuilder.getRegisterPair(lhs, rhs);\n            registry.add(pair);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"t1":"lhs","t2":"lhs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:698","type":"CtBinaryOperatorImpl","sourcecode":"rhs == null"},"failures":[69],"tindex":"67b004e4-2e7c-11e6-a2cf-ddd7c9c7e442","method":{"position":"org.apache.commons.lang3.math.NumberUtils:788","type":"CtMethodImpl","sourcecode":"public static long min(final long[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.math.NumberUtils.validateArray(array);\n            long long = array[0];\n            for (int int = 1 ; i < (array.int) ; i++) {\n                if ((array[i]) < min) {\n                    min = array[i];\n                } \n            }\n            return min;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"rhs":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:603","type":"CtBinaryOperatorImpl","sourcecode":"(tokens) == null"},"failures":[70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86],"tindex":"67b02bf5-2e7c-11e6-a2cf-879f19cab830","method":{"position":"org.apache.commons.lang3.ArrayUtils:1227","type":"CtMethodImpl","sourcecode":"public static boolean isSameLength(final java.lang.Object[] array1, final java.lang.Object[] array2) {\n    if (array1 == null) {\n        {\n            if (((((array1 == null) && (array2 != null)) && ((array2.int) > 0)) || (((array2 == null) && (array1 != null)) && ((array1.int) > 0))) || (((array1 != null) && (array2 != null)) && ((array1.int) != (array2.int)))) {\n                return false;\n            } \n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"tokens":"array1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:715","type":"CtBinaryOperatorImpl","sourcecode":"quoteLen > 0"},"failures":[87],"tindex":"67b05306-2e7c-11e6-a2cf-41bf69d5da06","method":{"position":"org.apache.commons.lang3.ArrayUtils:1034","type":"CtMethodImpl","sourcecode":"public static char[] subarray(final char[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (startIndexInclusive > 0) {\n        {\n            if (array == null) {\n                return null;\n            } \n            if (startIndexInclusive < 0) {\n                startIndexInclusive = 0;\n            } \n            if (endIndexExclusive > (array.int)) {\n                endIndexExclusive = array.int;\n            } \n            final int int = endIndexExclusive - startIndexInclusive;\n            if (newSize <= 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.char[];\n            } \n            final char[] char[] = new char[newSize];\n            java.lang.System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);\n            return subarray;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"quoteLen":"startIndexInclusive"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:495","type":"CtBinaryOperatorImpl","sourcecode":"(comparison) != 0"},"failures":[88],"tindex":"67b05307-2e7c-11e6-a2cf-814658288354","method":{"position":"org.apache.commons.lang3.time.DateUtils:1289","type":"CtMethodImpl","sourcecode":"public static long getFragmentInMilliseconds(final java.util.Date date, final int fragment) {\n    if (fragment != 0) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparison":"fragment"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:666","type":"CtBinaryOperatorImpl","sourcecode":"clazz != null"},"failures":[89,90,91,92,93],"tindex":"67b07a18-2e7c-11e6-a2cf-ed9dbaf66e36","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1458","type":"CtMethodImpl","sourcecode":"public static final java.lang.reflect.ParameterizedType parameterize(final java.lang.Class<?> raw, final java.lang.reflect.Type... typeArguments) {\n    if (typeArguments == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (raw != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.lang3.reflect.TypeUtils.parameterizeWithOwner(null, raw, typeArguments);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"clazz":"raw"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3135","type":"CtBinaryOperatorImpl","sourcecode":"(sizePlus1++) == max"},"failures":[94,95,96,97],"tindex":"67b07a19-2e7c-11e6-a2cf-771eac4765d4","method":{"position":"org.apache.commons.lang3.ArrayUtils:2765","type":"CtMethodImpl","sourcecode":"public static int indexOf(final float[] array, final float valueToFind, int startIndex) {\n    if ((startIndex++) == startIndex) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                startIndex = 0;\n            } \n            for (int int = startIndex ; i < (array.int) ; i++) {\n                if (valueToFind == (array[i])) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sizePlus1":"startIndex","max":"startIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:690","type":"CtBinaryOperatorImpl","sourcecode":"(((nInts - 1) * 32) + dstPos) >= 64"},"failures":[98],"tindex":"67b07a1a-2e7c-11e6-a2cf-1d99f5ab6efd","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2179","type":"CtMethodImpl","sourcecode":"public java.lang.String leftString(final int length) {\n    if ((((length - 1) * 32) + length) >= 64) {\n        {\n            if (length <= 0) {\n                return \"\";\n            } else if (length >= (int)) {\n                return new java.lang.String(char[] , 0 , int);\n            } else {\n                return new java.lang.String(char[] , 0 , length);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dstPos":"length","nInts":"length"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:507","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[99,100],"tindex":"67b0a12b-2e7c-11e6-a2cf-2720dc7f89f7","method":{"position":"org.apache.commons.lang3.CharSetUtils:64","type":"CtMethodImpl","sourcecode":"public static java.lang.String squeeze(final java.lang.String str, final java.lang.String... set) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.CharSetUtils.deepEmpty(set))) {\n                return str;\n            } \n            final org.apache.commons.lang3.CharSet org.apache.commons.lang3.CharSet = org.apache.commons.lang3.CharSet.getInstance(set);\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(str.length());\n            final char[] char[] = str.toCharArray();\n            final int int = chrs.int;\n            char char = ' ';\n            char char = ' ';\n            for (int int = 0 ; i < sz ; i++) {\n                ch = chrs[i];\n                if (((ch == lastChar) && (i != 0)) && (chars.contains(ch))) {\n                    continue;\n                } \n                buffer.append(ch);\n                lastChar = ch;\n            }\n            return buffer.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:1150","type":"CtBinaryOperatorImpl","sourcecode":"(value <= start) || (value >= end)"},"failures":[],"tindex":"67b0a12c-2e7c-11e6-a2cf-25caf5f777cb","method":{"position":"org.apache.commons.lang3.ArrayUtils:2714","type":"CtMethodImpl","sourcecode":"public static boolean contains(final double[] array, final double valueToFind) {\n    if ((valueToFind <= valueToFind) || (value >= valueToFind)) {\n        {\n            return (org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind)) != (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"valueToFind","end":"valueToFind","value":"valueToFind"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:454","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isBlank(str)"},"failures":[],"tindex":"67b0c83d-2e7c-11e6-a2cf-71957d4e2263","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:303","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setContentEnd(final java.lang.String contentEnd) {\n    if (org.apache.commons.lang3.StringUtils.isBlank(contentEnd)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            super.setContentEnd(contentEnd);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"contentEnd"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1668","type":"CtBinaryOperatorImpl","sourcecode":"calendar == null"},"failures":[101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144],"tindex":"67b0c83e-2e7c-11e6-a2cf-2777f594133e","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:842","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n    if (calendar == null) {\n        {\n            appendTo(buffer, calendar.get(int));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"calendar":"calendar"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1099","type":"CtBinaryOperatorImpl","sourcecode":"b < a"},"failures":[],"tindex":"67b0c83f-2e7c-11e6-a2cf-ada7c4d11578","method":{"position":"org.apache.commons.lang3.Validate:1081","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"boxing\")\npublic static void exclusiveBetween(long start, long end, long value) {\n    if (value < value) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((value <= start) || (value >= end)) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.java.lang.String, value, start, end));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"value","b":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4320","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(remove))"},"failures":[145,146],"tindex":"67b0ef50-2e7c-11e6-a2cf-87118420aecb","method":{"position":"org.apache.commons.lang3.StringUtils:6540","type":"CtMethodImpl","sourcecode":"public static int indexOfDifference(final java.lang.CharSequence cs1, final java.lang.CharSequence cs2) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(cs1)) || (org.apache.commons.lang3.StringUtils.isEmpty(cs2))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (cs1 == cs2) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            if ((cs1 == null) || (cs2 == null)) {\n                return 0;\n            } \n            int int;\n            for (i = 0 ; (i < (cs1.length())) && (i < (cs2.length())) ; ++i) {\n                if ((cs1.charAt(i)) != (cs2.charAt(i))) {\n                    break;\n                } \n            }\n            if ((i < (cs2.length())) || (i < (cs1.length()))) {\n                return i;\n            } \n            return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"cs1","remove":"cs2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:357","type":"CtBinaryOperatorImpl","sourcecode":"(size) == 0"},"failures":[147,148,149,150,151,152,153,154,155,156,157,158],"tindex":"67b0ef51-2e7c-11e6-a2cf-1d6544fbf5bd","method":{"position":"org.apache.commons.lang3.text.StrBuilder:646","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder append(final java.lang.StringBuilder str, final int startIndex, final int length) {\n    if (startIndex == 0) {\n        {\n            if (str == null) {\n                return appendNull();\n            } \n            if ((startIndex < 0) || (startIndex > (str.length()))) {\n                throw new java.lang.StringIndexOutOfBoundsException(\"startIndex must be valid\");\n            } \n            if ((length < 0) || ((startIndex + length) > (str.length()))) {\n                throw new java.lang.StringIndexOutOfBoundsException(\"length must be valid\");\n            } \n            if (length > 0) {\n                final int int = length();\n                ensureCapacity((len + length));\n                str.getChars(startIndex, (startIndex + length), char[], len);\n                int += length;\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"startIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2210","type":"CtBinaryOperatorImpl","sourcecode":"len < 0"},"failures":[159],"tindex":"67b0ef52-2e7c-11e6-a2cf-5dfe660160fc","method":{"position":"org.apache.commons.lang3.ArrayUtils:2332","type":"CtMethodImpl","sourcecode":"public static int indexOf(final char[] array, final char valueToFind, int startIndex) {\n    if (startIndex < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                startIndex = 0;\n            } \n            for (int int = startIndex ; i < (array.int) ; i++) {\n                if (valueToFind == (array[i])) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"startIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1386","type":"CtBinaryOperatorImpl","sourcecode":"width > 0"},"failures":[160,161,162,163,164],"tindex":"67b11663-2e7c-11e6-a2cf-29a842ec464c","method":{"position":"org.apache.commons.lang3.RandomUtils:84","type":"CtMethodImpl","sourcecode":"public static int nextInt(int startInclusive, int endExclusive) {\n    if (endExclusive > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.isTrue((endExclusive >= startInclusive), \"Start value must be smaller or equal to end value.\");\n            org.apache.commons.lang3.Validate.isTrue((startInclusive >= 0), \"Both range values must be non-negative.\");\n            if (startInclusive == endExclusive) {\n                return startInclusive;\n            } \n            return startInclusive + (org.apache.commons.lang3.RandomUtils.org.apache.commons.lang3.RandomUtils.java.util.Random.nextInt((endExclusive - startInclusive)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"width":"endExclusive"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3571","type":"CtBinaryOperatorImpl","sourcecode":"i > startIndex"},"failures":[165],"tindex":"67b11664-2e7c-11e6-a2cf-d7979012b65b","method":{"position":"org.apache.commons.lang3.ArrayUtils:4326","type":"CtMethodImpl","sourcecode":"public static boolean[] add(final boolean[] array, final int index, final boolean element) {\n    if (index > index) {\n        {\n            return ((boolean[])(org.apache.commons.lang3.ArrayUtils.add(array, index, java.lang.Boolean.valueOf(element), java.lang.Boolean.java.lang.Boolean.java.lang.Class<java.lang.Boolean>)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"index","i":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2335","type":"CtBinaryOperatorImpl","sourcecode":"separator == null"},"failures":[166,74,75,167,76,77,78,79,80,81,82,83],"tindex":"67b11665-2e7c-11e6-a2cf-b5ebfce37416","method":{"position":"org.apache.commons.lang3.reflect.MethodUtils:474","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Method getMatchingAccessibleMethod(final java.lang.Class<?> cls, final java.lang.String methodName, final java.lang.Class<?>... parameterTypes) {\n    if (methodName == null) {\n        {\n            try {\n                final java.lang.reflect.Method java.lang.reflect.Method = cls.getMethod(methodName, parameterTypes);\n                org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(method);\n                return method;\n            } catch (final java.lang.NoSuchMethodException e) {\n            }\n            java.lang.reflect.Method java.lang.reflect.Method = null;\n            final java.lang.reflect.Method[] java.lang.reflect.Method[] = cls.getMethods();\n            for (final java.lang.reflect.Method java.lang.reflect.Method : methods) {\n                if ((method.getName().equals(methodName)) && (org.apache.commons.lang3.ClassUtils.isAssignable(parameterTypes, method.getParameterTypes(), true))) {\n                    final java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethod(method);\n                    if ((accessibleMethod != null) && ((bestMatch == null) || ((org.apache.commons.lang3.reflect.MemberUtils.compareParameterTypes(accessibleMethod.getParameterTypes(), bestMatch.getParameterTypes(), parameterTypes)) < 0))) {\n                        bestMatch = accessibleMethod;\n                    } \n                } \n            }\n            if (bestMatch != null) {\n                org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(bestMatch);\n            } \n            return bestMatch;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"separator":"methodName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6505","type":"CtBinaryOperatorImpl","sourcecode":"str2 == null"},"failures":[168,169,170,171,171,172,173,174,175,176,176,177,178,179,180],"tindex":"67b13d76-2e7c-11e6-a2cf-53f73a4365b2","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:951","type":"CtMethodImpl","sourcecode":"protected void appendSummary(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final java.lang.Object[] array) {\n    if (fieldName == null) {\n        {\n            appendSummarySize(buffer, fieldName, array.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str2":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:419","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[2,3,4],"tindex":"67b13d77-2e7c-11e6-a2cf-ff3c09a9fd77","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:887","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final double[] lhs, final double[] rhs) {\n    if (rhs == null) {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == null) {\n                int = -1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (rhs == null) {\n                int = +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                int = (lhs.int) < (rhs.int) ? -1 : +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && ((int) == 0) ; i++) {\n                append(lhs[i], rhs[i]);\n            }\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"rhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1338","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[121,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224],"tindex":"67b16488-2e7c-11e6-a2cf-3747d77aa907","method":{"position":"org.apache.commons.lang3.time.FastDateParser:306","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.Date parse(final java.lang.String source, final java.text.ParsePosition pos) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(source)) {\n        {\n            final int int = pos.getIndex();\n            final java.util.regex.Matcher java.util.regex.Matcher = java.util.regex.Pattern.matcher(source.substring(offset));\n            if (!(matcher.lookingAt())) {\n                return null;\n            } \n            final java.util.Calendar java.util.Calendar = java.util.Calendar.getInstance(java.util.TimeZone, java.util.Locale);\n            cal.clear();\n            for (int int = 0 ; i < (org.apache.commons.lang3.time.FastDateParser.Strategy[].int) ; ) {\n                final org.apache.commons.lang3.time.FastDateParser.Strategy org.apache.commons.lang3.time.FastDateParser.Strategy = org.apache.commons.lang3.time.FastDateParser.Strategy[][(i++)];\n                strategy.setCalendar(org.apache.commons.lang3.time.FastDateParser.this, cal, matcher.group(i));\n            }\n            pos.setIndex((offset + (matcher.end())));\n            return cal.getTime();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"source"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1173","type":"CtBinaryOperatorImpl","sourcecode":"rangeStyle == (org.apache.commons.lang3.time.DateUtils.RANGE_MONTH_MONDAY)"},"failures":[],"tindex":"67b16489-2e7c-11e6-a2cf-b5d1c245e522","method":{"position":"org.apache.commons.lang3.StringUtils:2244","type":"CtMethodImpl","sourcecode":"public static java.lang.String mid(final java.lang.String str, int pos, final int len) {\n    if (pos == pos) {\n        {\n            if (str == null) {\n                return null;\n            } \n            if ((len < 0) || (pos > (str.length()))) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            if (pos < 0) {\n                pos = 0;\n            } \n            if ((str.length()) <= (pos + len)) {\n                return str.substring(pos);\n            } \n            return str.substring(pos, (pos + len));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"rangeStyle":"pos","org.apache.commons.lang3.time.DateUtils.RANGE_MONTH_MONDAY":"pos"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:626","type":"CtInvocationImpl","sourcecode":"stripChars.isEmpty()"},"failures":[147,225,148,226,149,150,227,151,228,229,230,152,153,231,232,233,234,235,236,237,154,238,155,239,156,240,241,157,242,243,244],"tindex":"67b18b9a-2e7c-11e6-a2cf-a9f90494790f","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:889","type":"CtMethodImpl","sourcecode":"private void checkCyclicSubstitution(final java.lang.String varName, final java.util.List<java.lang.String> priorVariables) {\n    if (varName.isEmpty()) {\n        {\n            if ((priorVariables.contains(varName)) == false) {\n                return ;\n            } \n            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(256);\n            buf.append(\"Infinite loop in property interpolation of \");\n            buf.append(priorVariables.remove(0));\n            buf.append(\": \");\n            buf.appendWithSeparators(priorVariables, \"->\");\n            throw new java.lang.IllegalStateException(buf.toString());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"stripChars":"varName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1153","type":"CtBinaryOperatorImpl","sourcecode":"b < a"},"failures":[245],"tindex":"67b18b9b-2e7c-11e6-a2cf-0b93226ad8d0","method":{"position":"org.apache.commons.lang3.BitField:240","type":"CtMethodImpl","sourcecode":"public byte setByte(final byte holder) {\n    if (holder < holder) {\n        {\n            return ((byte)(set(holder)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"holder","b":"holder"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:857","type":"CtBinaryOperatorImpl","sourcecode":"ownerType instanceof java.lang.reflect.ParameterizedType"},"failures":[246],"tindex":"67b18b9c-2e7c-11e6-a2cf-b52fc39cda57","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1335","type":"CtMethodImpl","sourcecode":"public static boolean isArrayType(final java.lang.reflect.Type type) {\n    if (type instanceof java.lang.reflect.ParameterizedType) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (type instanceof java.lang.reflect.GenericArrayType) || ((type instanceof java.lang.Class<?>) && (((java.lang.Class<?>)(type)).isArray()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ownerType":"type"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1450","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[247,248,249],"tindex":"67b1b2ad-2e7c-11e6-a2cf-91b5ef2d5102","method":{"position":"org.apache.commons.lang3.ArrayUtils:338","type":"CtMethodImpl","sourcecode":"public static long[] clone(final long[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            return array.clone();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:623","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[250],"tindex":"67b1b2ae-2e7c-11e6-a2cf-0f907fbadbba","method":{"position":"org.apache.commons.lang3.ArrayUtils:3654","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final byte[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (array != null) && ((array.int) != 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSequenceUtils:74","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,147,225,148,226,149,150,227,151,228,229,230,152,153,231,232,234,235,236,154,238,155,239,156,240,241,157,242,243,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316],"tindex":"67b1b2af-2e7c-11e6-a2cf-1fc73096a69c","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2781","type":"CtMethodImpl","sourcecode":"protected int validateRange(final int startIndex, int endIndex) {\n    if (startIndex < 0) {\n        {\n            if (startIndex < 0) {\n                throw new java.lang.StringIndexOutOfBoundsException(startIndex);\n            } \n            if (endIndex > (int)) {\n                endIndex = int;\n            } \n            if (startIndex > endIndex) {\n                throw new java.lang.StringIndexOutOfBoundsException(\"end < start\");\n            } \n            return endIndex;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"startIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:448","type":"CtBinaryOperatorImpl","sourcecode":"(nullText) == null"},"failures":[317],"tindex":"67b1d9c0-2e7c-11e6-a2cf-ebcc4d4a0f27","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2975","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(final java.lang.String str) {\n    if (str == null) {\n        {\n            org.apache.commons.lang3.text.StrBuilder.this.append(str);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nullText":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"c < a"},"failures":[318],"tindex":"67b1d9c1-2e7c-11e6-a2cf-53a23f46a0f1","method":{"position":"org.apache.commons.lang3.ObjectUtils:765","type":"CtMethodImpl","sourcecode":"public static byte CONST(final byte v) {\n    if (v < v) {\n        {\n            return v;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"v","c":"v"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:683","type":"CtBinaryOperatorImpl","sourcecode":"toTypeVariable == null"},"failures":[],"tindex":"67b1d9c2-2e7c-11e6-a2cf-15b00ba4e0d4","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1161","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Type[] getImplicitBounds(final java.lang.reflect.TypeVariable<?> typeVariable) {\n    if (typeVariable == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.notNull(typeVariable, \"typeVariable is null\");\n            final java.lang.reflect.Type[] java.lang.reflect.Type[] = typeVariable.getBounds();\n            return (bounds.int) == 0 ? new java.lang.reflect.Type[]{ java.lang.Object.java.lang.Object.java.lang.Class } : org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds(bounds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toTypeVariable":"typeVariable"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1558","type":"CtBinaryOperatorImpl","sourcecode":"length > 0"},"failures":[319,320,321,322,323,324,325,326,327,328,329,330,331],"tindex":"67b200d3-2e7c-11e6-a2cf-b541ce0dc4d4","method":{"position":"org.apache.commons.lang3.math.Fraction:141","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.math.Fraction getFraction(int numerator, int denominator) {\n    if (numerator > 0) {\n        {\n            if (denominator == 0) {\n                throw new java.lang.ArithmeticException(\"The denominator must not be zero\");\n            } \n            if (denominator < 0) {\n                if ((numerator == (java.lang.Integer.java.lang.Integer.int)) || (denominator == (java.lang.Integer.java.lang.Integer.int))) {\n                    throw new java.lang.ArithmeticException(\"overflow: can't negate\");\n                } \n                numerator = -numerator;\n                denominator = -denominator;\n            } \n            return new org.apache.commons.lang3.math.Fraction(numerator , denominator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"numerator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1214","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[332],"tindex":"67b200d4-2e7c-11e6-a2cf-2d559db3422e","method":{"position":"org.apache.commons.lang3.ArrayUtils:1299","type":"CtMethodImpl","sourcecode":"public static boolean isSameLength(final char[] array1, final char[] array2) {\n    if (array1 == null) {\n        {\n            if (((((array1 == null) && (array2 != null)) && ((array2.int) > 0)) || (((array2 == null) && (array1 != null)) && ((array1.int) > 0))) || (((array1 != null) && (array2 != null)) && ((array1.int) != (array2.int)))) {\n                return false;\n            } \n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharRange:236","type":"CtBinaryOperatorImpl","sourcecode":"(iToString) == null"},"failures":[],"tindex":"67b200d5-2e7c-11e6-a2cf-8317a26375b5","method":{"position":"org.apache.commons.lang3.exception.DefaultExceptionContext:62","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic org.apache.commons.lang3.exception.DefaultExceptionContext setContextValue(final java.lang.String label, final java.lang.Object value) {\n    if (label == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final java.util.Iterator<org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>> java.util.Iterator<org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>> = java.util.List<org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>>.iterator() ; iter.hasNext() ; ) {\n                final org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object> org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object> = iter.next();\n                if (org.apache.commons.lang3.StringUtils.equals(label, p.getKey())) {\n                    iter.remove();\n                } \n            }\n            addContextValue(label, value);\n            return org.apache.commons.lang3.exception.DefaultExceptionContext.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iToString":"label"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:529","type":"CtBinaryOperatorImpl","sourcecode":"buffer == null"},"failures":[101,333,102,103,104,334,105,106,335,336,337,338,120,339,340,341,342,343,344,345,346,186,188,189,194,195,196,197,198,199,200,201,122,123,124,125,126,127,128,129,130,131,132,133,134,135,347,136,137,138,139,140,141,142,143,144,208,210,211,216,217,218,219,220,221,222,223],"tindex":"67b227e6-2e7c-11e6-a2cf-e92412cc2153","method":{"position":"org.apache.commons.lang3.time.FastDateParser:605","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nboolean addRegex(final org.apache.commons.lang3.time.FastDateParser parser, final java.lang.StringBuilder regex) {\n    if (regex == null) {\n        {\n            regex.append('(');\n            for (final java.lang.String java.lang.String : java.util.Map<java.lang.String, java.lang.Integer>.keySet()) {\n                org.apache.commons.lang3.time.FastDateParser.escapeRegex(regex, textKeyValue, false).append('|');\n            }\n            regex.setCharAt(((regex.length()) - 1), ')');\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"buffer":"regex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1244","type":"CtBinaryOperatorImpl","sourcecode":"c > a"},"failures":[],"tindex":"67b227e7-2e7c-11e6-a2cf-877bac02d1d7","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1240","type":"CtMethodImpl","sourcecode":"public static short max(short a, final short b, final short c) {\n    if (b > b) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (b > a) {\n                a = b;\n            } \n            if (c > a) {\n                a = c;\n            } \n            return a;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b","c":"b"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4941","type":"CtBinaryOperatorImpl","sourcecode":"overlay == null"},"failures":[348],"tindex":"67b24ef8-2e7c-11e6-a2cf-ad41a663bb18","method":{"position":"org.apache.commons.lang3.StringUtils:6283","type":"CtMethodImpl","sourcecode":"public static java.lang.String reverse(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return null;\n            } \n            return new java.lang.StringBuilder(str).reverse().toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"overlay":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:520","type":"CtBinaryOperatorImpl","sourcecode":"toClassArray == null"},"failures":[],"tindex":"67b24ef9-2e7c-11e6-a2cf-d7e34426c541","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1458","type":"CtMethodImpl","sourcecode":"public static final java.lang.reflect.ParameterizedType parameterize(final java.lang.Class<?> raw, final java.lang.reflect.Type... typeArguments) {\n    if (typeArguments == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (raw != null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.lang3.reflect.TypeUtils.parameterizeWithOwner(null, raw, typeArguments);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toClassArray":"typeArguments"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:553","type":"CtFieldReadImpl","sourcecode":"objectsTriviallyEqual"},"failures":[349,350,351,352,353,354,355,356,357,358],"tindex":"67b24efa-2e7c-11e6-a2cf-ff67c651d8de","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1696","type":"CtMethodImpl","sourcecode":"protected void setDefaultFullDetail(final boolean defaultFullDetail) {\n    if (defaultFullDetail) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.this.boolean = defaultFullDetail;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsTriviallyEqual":"defaultFullDetail"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:823","type":"CtBinaryOperatorImpl","sourcecode":"fraction == null"},"failures":[321,326,327],"tindex":"67b24efb-2e7c-11e6-a2cf-2f7e0235f8d9","method":{"position":"org.apache.commons.lang3.math.Fraction:796","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.math.Fraction multiplyBy(final org.apache.commons.lang3.math.Fraction fraction) {\n    if (fraction == null) {\n        {\n            if (fraction == null) {\n                throw new java.lang.IllegalArgumentException(\"The fraction must not be null\");\n            } \n            if (((int) == 0) || ((fraction.int) == 0)) {\n                return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction;\n            } \n            final int int = org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int, fraction.int);\n            final int int = org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(fraction.int, int);\n            return org.apache.commons.lang3.math.Fraction.getReducedFraction(org.apache.commons.lang3.math.Fraction.mulAndCheck(((int) / d1), ((fraction.int) / d2)), org.apache.commons.lang3.math.Fraction.mulPosAndCheck(((int) / d2), ((fraction.int) / d1)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fraction":"fraction"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6907","type":"CtBinaryOperatorImpl","sourcecode":"m == 0"},"failures":[341],"tindex":"67b2760c-2e7c-11e6-a2cf-d9287ab6d6ff","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:353","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.time.FastDateFormat getDateTimeInstance(final int dateStyle, final int timeStyle, final java.util.TimeZone timeZone, final java.util.Locale locale) {\n    if (timeStyle == 0) {\n        {\n            return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getDateTimeInstance(dateStyle, timeStyle, timeZone, locale);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"m":"timeStyle"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:517","type":"CtBinaryOperatorImpl","sourcecode":"classArray == null"},"failures":[79,81,83,84,86],"tindex":"67b2760d-2e7c-11e6-a2cf-296b5cdad5cf","method":{"position":"org.apache.commons.lang3.reflect.MemberUtils:113","type":"CtMethodImpl","sourcecode":"private static float getTotalTransformationCost(final java.lang.Class<?>[] srcArgs, final java.lang.Class<?>[] destArgs) {\n    if (destArgs == null) {\n        {\n            float float = 0.0F;\n            for (int int = 0 ; i < (srcArgs.int) ; i++) {\n                java.lang.Class<?> java.lang.Class<?>;\n                java.lang.Class<?> java.lang.Class<?>;\n                srcClass = srcArgs[i];\n                destClass = destArgs[i];\n                totalCost += org.apache.commons.lang3.reflect.MemberUtils.getObjectTransformationCost(srcClass, destClass);\n            }\n            return totalCost;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classArray":"destArgs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:455","type":"CtInvocationImpl","sourcecode":"fromTypeVarAssigns.isEmpty()"},"failures":[],"tindex":"67b2760e-2e7c-11e6-a2cf-09ce64193b67","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1214","type":"CtMethodImpl","sourcecode":"public static boolean typesSatisfyVariables(final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> typeVarAssigns) {\n    if (typeVarAssigns.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.notNull(typeVarAssigns, \"typeVarAssigns is null\");\n            for (final java.util.Map.Entry<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map.Entry<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> : typeVarAssigns.entrySet()) {\n                final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = entry.getKey();\n                final java.lang.reflect.Type java.lang.reflect.Type = entry.getValue();\n                for (final java.lang.reflect.Type java.lang.reflect.Type : org.apache.commons.lang3.reflect.TypeUtils.getImplicitBounds(typeVar)) {\n                    if (!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(type, org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(bound, typeVarAssigns), typeVarAssigns))) {\n                        return false;\n                    } \n                }\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fromTypeVarAssigns":"typeVarAssigns"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1092","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"67b29d1f-2e7c-11e6-a2cf-19022e46ec17","method":{"position":"org.apache.commons.lang3.builder.IDKey:63","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object other) {\n    if (other == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(other instanceof org.apache.commons.lang3.builder.IDKey)) {\n                return false;\n            } \n            final org.apache.commons.lang3.builder.IDKey org.apache.commons.lang3.builder.IDKey = ((org.apache.commons.lang3.builder.IDKey)(other));\n            if ((int) != (idKey.int)) {\n                return false;\n            } \n            return (java.lang.Object) == (idKey.java.lang.Object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"other"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3907","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[359],"tindex":"67b29d20-2e7c-11e6-a2cf-335ee5b79654","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:927","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final float[] lhs, final float[] rhs) {\n    if (rhs == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == null) {\n                int = -1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (rhs == null) {\n                int = +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                int = (lhs.int) < (rhs.int) ? -1 : +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && ((int) == 0) ; i++) {\n                append(lhs[i], rhs[i]);\n            }\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"rhs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.JavaVersion:136","type":"CtInvocationImpl","sourcecode":"\"1.2\".equals(nom)"},"failures":[],"tindex":"67b2c431-2e7c-11e6-a2cf-472f75b85020","method":{"position":"org.apache.commons.lang3.time.FastDateParser:434","type":"CtMethodImpl","sourcecode":"void setCalendar(final org.apache.commons.lang3.time.FastDateParser parser, final java.util.Calendar cal, final java.lang.String value) {\n    if (\"1.2\".equals(value)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nom":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2245","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"67b2c432-2e7c-11e6-a2cf-9b1e19a5ad73","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:630","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final char[] array) {\n    if (fieldName == null) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, array, null);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:795","type":"CtBinaryOperatorImpl","sourcecode":"(isEquals) == false"},"failures":[360,361],"tindex":"67b2c433-2e7c-11e6-a2cf-3b9a752a74cc","method":{"position":"org.apache.commons.lang3.BooleanUtils:392","type":"CtMethodImpl","sourcecode":"public static int toInteger(final boolean bool) {\n    if (bool == false) {\n        {\n            return bool ? 1 : 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isEquals":"bool"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:554","type":"CtBinaryOperatorImpl","sourcecode":"str == \"true\""},"failures":[],"tindex":"67b2eb44-2e7c-11e6-a2cf-375564cf0576","method":{"position":"org.apache.commons.lang3.StringUtils:3948","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final java.lang.Object[] array, final java.lang.String separator) {\n    if (separator == \"true\") {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            return org.apache.commons.lang3.StringUtils.join(array, separator, 0, array.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"separator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3230","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[362],"tindex":"67b2eb45-2e7c-11e6-a2cf-6b0e8b2a2fbf","method":{"position":"org.apache.commons.lang3.ArrayUtils:3229","type":"CtMethodImpl","sourcecode":"public static byte[] toPrimitive(final java.lang.Byte[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.byte[];\n            } \n            final byte[] byte[] = new byte[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = array[i].byteValue();\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSetUtils:242","type":"CtBinaryOperatorImpl","sourcecode":"strings != null"},"failures":[363,364,365,366,367,368,369,370,371,372],"tindex":"67b2eb46-2e7c-11e6-a2cf-5138e9c3122a","method":{"position":"org.apache.commons.lang3.ArrayUtils:5190","type":"CtMethodImpl","sourcecode":"private static java.lang.Object remove(final java.lang.Object array, final int index) {\n    if (array != null) {\n        {\n            final int int = org.apache.commons.lang3.ArrayUtils.getLength(array);\n            if ((index < 0) || (index >= length)) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Length: \") + length));\n            } \n            final java.lang.Object java.lang.Object = java.lang.reflect.Array.newInstance(array.getClass().getComponentType(), (length - 1));\n            java.lang.System.arraycopy(array, 0, result, 0, index);\n            if (index < (length - 1)) {\n                java.lang.System.arraycopy(array, (index + 1), result, index, ((length - index) - 1));\n            } \n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"strings":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.SerializationUtils:235","type":"CtBinaryOperatorImpl","sourcecode":"in != null"},"failures":[],"tindex":"67b2eb47-2e7c-11e6-a2cf-6fed1c5557b4","method":{"position":"org.apache.commons.lang3.event.EventListenerSupport:251","type":"CtMethodImpl","sourcecode":"private void readObject(final java.io.ObjectInputStream objectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException {\n    if (objectInputStream != null) {\n        {\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final L[] L[] = ((L[])(objectInputStream.readObject()));\n            org.apache.commons.lang3.event.EventListenerSupport.this.java.util.List<L> = new java.util.concurrent.CopyOnWriteArrayList<L>(srcListeners);\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final java.lang.Class<L> java.lang.Class<L> = ((java.lang.Class<L>)(srcListeners.getClass().getComponentType()));\n            initializeTransientFields(listenerInterface, java.lang.Thread.currentThread().getContextClassLoader());\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"in":"objectInputStream"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:292","type":"CtUnaryOperatorImpl","sourcecode":"!(java.lang.reflect.Modifier.isPublic(cls.getModifiers()))"},"failures":[373,374,374,375,376,376,377,378,379,379,380,171,172,173,173,174,174,175,381,382,383,384,385,386,386,387,387,388,389,390,391,391,392,393,394,395,395,396,397,397,398,399,399,400,400,401,401,402,403,404,404,405,405,406,406,407,408,409,409,410,410,411,412,413,414,414,415,415,416,416,417,418,418,419,420,421,422,422,423,423,424,425,425,426,427,427,428,429,430,431,431,432,433,433,176,434,435,435,436,436,437,438,438,439,439,440,441,441,442,443,444,445,446,447,448,449,450,451,452],"tindex":"67b31258-2e7c-11e6-a2cf-d1625211717d","method":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:513","type":"CtMethodImpl","sourcecode":"protected void appendFieldsIn(final java.lang.Class<?> clazz) {\n    if (!(java.lang.reflect.Modifier.isPublic(clazz.getModifiers()))) {\n        {\n            if (clazz.isArray()) {\n                org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.reflectionAppendArray(org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.getObject());\n                return ;\n            } \n            final java.lang.reflect.Field[] java.lang.reflect.Field[] = clazz.getDeclaredFields();\n            java.lang.reflect.AccessibleObject.setAccessible(fields, true);\n            for (final java.lang.reflect.Field java.lang.reflect.Field : fields) {\n                final java.lang.String java.lang.String = field.getName();\n                if (org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.accept(field)) {\n                    try {\n                        final java.lang.Object java.lang.Object = org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.getValue(field);\n                        org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.append(fieldName, fieldValue);\n                    } catch (final java.lang.IllegalAccessException ex) {\n                        throw new java.lang.InternalError((\"Unexpected IllegalAccessException: \" + (ex.getMessage())));\n                    }\n                } \n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"clazz"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:934","type":"CtUnaryOperatorImpl","sourcecode":"!(java.lang.reflect.Modifier.isPublic(candidateClass.getModifiers()))"},"failures":[],"tindex":"67b33969-2e7c-11e6-a2cf-e5099ac4d995","method":{"position":"org.apache.commons.lang3.Validate:1225","type":"CtMethodImpl","sourcecode":"public static void isAssignableFrom(final java.lang.Class<?> superType, final java.lang.Class<?> type) {\n    if (!(java.lang.reflect.Modifier.isPublic(type.getModifiers()))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((superType.isAssignableFrom(type)) == false) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.java.lang.String, (type == null ? \"null\" : type.getName()), superType.getName()));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"candidateClass":"type"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3794","type":"CtBinaryOperatorImpl","sourcecode":"array2 == null"},"failures":[453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473],"tindex":"67b3396a-2e7c-11e6-a2cf-fb1479d5be3d","method":{"position":"org.apache.commons.lang3.ArrayUtils:3542","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final char[] array) {\n    if (array == null) {\n        {\n            return (array == null) || ((array.int) == 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array2":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:146","type":"CtBinaryOperatorImpl","sourcecode":"(((org.apache.commons.lang3.StringUtils.isAllLowerCase(split[0])) && (((split[0].length()) == 2) || ((split[0].length()) == 3))) && (((split[1].length()) == 0) || (((split[1].length()) == 2) && (org.apache.commons.lang3.StringUtils.isAllUpperCase(split[1]))))) && ((split[2].length()) > 0)"},"failures":[],"tindex":"67b3396b-2e7c-11e6-a2cf-9930cf9be107","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:647","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final java.lang.Object[] lhs, final java.lang.Object[] rhs, final java.util.Comparator<?> comparator) {\n    if ((((org.apache.commons.lang3.StringUtils.isAllLowerCase(lhs[0])) && (((split[0].length()) == 2) || ((split[0].length()) == 3))) && (((split[1].length()) == 0) || (((split[1].length()) == 2) && (org.apache.commons.lang3.StringUtils.isAllUpperCase(split[1]))))) && ((split[2].length()) > 0)) {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == null) {\n                int = -1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (rhs == null) {\n                int = +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                int = (lhs.int) < (rhs.int) ? -1 : +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && ((int) == 0) ; i++) {\n                append(lhs[i], rhs[i], comparator);\n            }\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"split":"lhs"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.MethodUtils:392","type":"CtInvocationImpl","sourcecode":"java.lang.reflect.Modifier.isPublic(parentClass.getModifiers())"},"failures":[474],"tindex":"67b3607c-2e7c-11e6-a2cf-bfe64840b53c","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:844","type":"CtMethodImpl","sourcecode":"private static java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> getTypeArguments(final java.lang.reflect.ParameterizedType parameterizedType, final java.lang.Class<?> toClass, final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> subtypeVarAssigns) {\n    if (java.lang.reflect.Modifier.isPublic(toClass.getModifiers())) {\n        {\n            final java.lang.Class<?> java.lang.Class<?> = org.apache.commons.lang3.reflect.TypeUtils.getRawType(parameterizedType);\n            if (!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(cls, toClass))) {\n                return null;\n            } \n            final java.lang.reflect.Type java.lang.reflect.Type = parameterizedType.getOwnerType();\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>;\n            if (ownerType instanceof java.lang.reflect.ParameterizedType) {\n                final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(ownerType));\n                typeVarAssigns = org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(parameterizedOwnerType, org.apache.commons.lang3.reflect.TypeUtils.getRawType(parameterizedOwnerType), subtypeVarAssigns);\n            } else {\n                typeVarAssigns = subtypeVarAssigns == null ? new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>() : new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>(subtypeVarAssigns);\n            }\n            final java.lang.reflect.Type[] java.lang.reflect.Type[] = parameterizedType.getActualTypeArguments();\n            final java.lang.reflect.TypeVariable<?>[] java.lang.reflect.TypeVariable<?>[] = cls.getTypeParameters();\n            for (int int = 0 ; i < (typeParams.int) ; i++) {\n                final java.lang.reflect.Type java.lang.reflect.Type = typeArgs[i];\n                typeVarAssigns.put(typeParams[i], (typeVarAssigns.containsKey(typeArg) ? typeVarAssigns.get(typeArg) : typeArg));\n            }\n            if (toClass.equals(cls)) {\n                return typeVarAssigns;\n            } \n            return org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(org.apache.commons.lang3.reflect.TypeUtils.getClosestParentType(cls, toClass), toClass, typeVarAssigns);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"parentClass":"toClass"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:1012","type":"CtBinaryOperatorImpl","sourcecode":"(value < start) || (value > end)"},"failures":[],"tindex":"67b3878d-2e7c-11e6-a2cf-0f5992b0890a","method":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:102","type":"CtMethodImpl","sourcecode":"public static double min(final double a, final double b) {\n    if ((b < b) || (value > a)) {\n        {\n            if (java.lang.Double.isNaN(a)) {\n                return b;\n            } else if (java.lang.Double.isNaN(b)) {\n                return a;\n            } else {\n                return java.lang.Math.min(a, b);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"b","end":"a","value":"b"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:797","type":"CtBinaryOperatorImpl","sourcecode":"fraction == null"},"failures":[322],"tindex":"67b3878e-2e7c-11e6-a2cf-3987d4b1ffc4","method":{"position":"org.apache.commons.lang3.math.Fraction:726","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.math.Fraction subtract(final org.apache.commons.lang3.math.Fraction fraction) {\n    if (fraction == null) {\n        {\n            return addSub(fraction, false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fraction":"fraction"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.MemberUtils:170","type":"CtUnaryOperatorImpl","sourcecode":"!(cls.isPrimitive())"},"failures":[475,476],"tindex":"67b3878f-2e7c-11e6-a2cf-172ee85cc8dc","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:211","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.lang.reflect.Field> getAllFieldsList(java.lang.Class<?> cls) {\n    if (!(cls.isPrimitive())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.isTrue((cls != null), \"The class must not be null\");\n            final java.util.List<java.lang.reflect.Field> java.util.List<java.lang.reflect.Field> = new java.util.ArrayList<java.lang.reflect.Field>();\n            java.lang.Class<?> java.lang.Class<?> = cls;\n            while (currentClass != null) {\n                final java.lang.reflect.Field[] java.lang.reflect.Field[] = currentClass.getDeclaredFields();\n                for (java.lang.reflect.Field java.lang.reflect.Field : declaredFields) {\n                    allFields.add(field);\n                }\n                currentClass = currentClass.getSuperclass();\n            }\n            return allFields;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"cls"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:573","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[477],"tindex":"67b38790-2e7c-11e6-a2cf-036e27733513","method":{"position":"org.apache.commons.lang3.StringUtils:1073","type":"CtMethodImpl","sourcecode":"public static int indexOfIgnoreCase(final java.lang.CharSequence str, final java.lang.CharSequence searchStr) {\n    if (str == null) {\n        {\n            return org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(str, searchStr, 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:894","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[478,479],"tindex":"67b3aea1-2e7c-11e6-a2cf-336b1356da8b","method":{"position":"org.apache.commons.lang3.math.NumberUtils:834","type":"CtMethodImpl","sourcecode":"public static short min(final short[] array) {\n    if (array == null) {\n        {\n            org.apache.commons.lang3.math.NumberUtils.validateArray(array);\n            short short = array[0];\n            for (int int = 1 ; i < (array.int) ; i++) {\n                if ((array[i]) < min) {\n                    min = array[i];\n                } \n            }\n            return min;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:622","type":"CtBinaryOperatorImpl","sourcecode":"(isEquals) == false"},"failures":[480],"tindex":"67b3aea2-2e7c-11e6-a2cf-7fc9fc72f2d3","method":{"position":"org.apache.commons.lang3.BooleanUtils:864","type":"CtMethodImpl","sourcecode":"public static java.lang.String toStringYesNo(final boolean bool) {\n    if (bool == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.BooleanUtils.toString(bool, \"yes\", \"no\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isEquals":"bool"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:508","type":"CtBinaryOperatorImpl","sourcecode":"(array[i]) == null"},"failures":[],"tindex":"67b3aea3-2e7c-11e6-a2cf-870d2913b4be","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1478","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder insert(final int index, final java.lang.Object obj) {\n    if ((obj[index]) == null) {\n        {\n            if (obj == null) {\n                return insert(index, java.lang.String);\n            } \n            return insert(index, obj.toString());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"obj","i":"index"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:557","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[454,460,461,463,467,468,469],"tindex":"67b3aea4-2e7c-11e6-a2cf-83f10dd8d1a3","method":{"position":"org.apache.commons.lang3.StringUtils:1709","type":"CtMethodImpl","sourcecode":"public static int indexOfAnyBut(final java.lang.CharSequence cs, final char... searchChars) {\n    if (cs == null) {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(cs)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(searchChars))) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            final int int = cs.length();\n            final int int = csLen - 1;\n            final int int = searchChars.int;\n            final int int = searchLen - 1;\n            outer : for (int int = 0 ; i < csLen ; i++) {\n                final char char = cs.charAt(i);\n                for (int int = 0 ; j < searchLen ; j++) {\n                    if ((searchChars[j]) == ch) {\n                        if (((i < csLast) && (j < searchLast)) && (java.lang.Character.isHighSurrogate(ch))) {\n                            if ((searchChars[(j + 1)]) == (cs.charAt((i + 1)))) {\n                                continue outer;\n                            } \n                        } else {\n                            continue outer;\n                        }\n                    } \n                }\n                return i;\n            }\n            return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"cs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1241","type":"CtBinaryOperatorImpl","sourcecode":"b > a"},"failures":[],"tindex":"67b3d5b5-2e7c-11e6-a2cf-3d2ca5d58754","method":{"position":"org.apache.commons.lang3.BitField:227","type":"CtMethodImpl","sourcecode":"public short setShort(final short holder) {\n    if (holder > holder) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((short)(set(holder)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"holder","b":"holder"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3239","type":"CtBinaryOperatorImpl","sourcecode":"newTokenStart != tokenStart"},"failures":[],"tindex":"67b3d5b6-2e7c-11e6-a2cf-939c76e346ed","method":{"position":"org.apache.commons.lang3.StringUtils:2063","type":"CtMethodImpl","sourcecode":"public static java.lang.String substring(final java.lang.String str, int start) {\n    if (start != start) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return null;\n            } \n            if (start < 0) {\n                start = (str.length()) + start;\n            } \n            if (start < 0) {\n                start = 0;\n            } \n            if (start > (str.length())) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            return str.substring(start);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"tokenStart":"start","newTokenStart":"start"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:759","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[456,459,462],"tindex":"67b3fcc7-2e7c-11e6-a2cf-114735ab2d6c","method":{"position":"org.apache.commons.lang3.StringUtils:1676","type":"CtMethodImpl","sourcecode":"public static boolean containsAny(final java.lang.CharSequence cs, final java.lang.CharSequence searchChars) {\n    if (cs == null) {\n        {\n            if (searchChars == null) {\n                return false;\n            } \n            return org.apache.commons.lang3.StringUtils.containsAny(cs, org.apache.commons.lang3.CharSequenceUtils.toCharArray(searchChars));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"cs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2416","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(separator)"},"failures":[481],"tindex":"67b3fcc8-2e7c-11e6-a2cf-7febc0f56c1f","method":{"position":"org.apache.commons.lang3.StringUtils:2894","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] splitPreserveAllTokens(final java.lang.String str) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n        {\n            return org.apache.commons.lang3.StringUtils.splitWorker(str, null, (-1), true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"separator":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:912","type":"CtBinaryOperatorImpl","sourcecode":"(toString) == null"},"failures":[],"tindex":"67b3fcc9-2e7c-11e6-a2cf-6bc422c5cdf9","method":{"position":"org.apache.commons.lang3.CharSequenceUtils:94","type":"CtMethodImpl","sourcecode":"static int indexOf(final java.lang.CharSequence cs, final java.lang.CharSequence searchChar, final int start) {\n    if (cs == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return cs.toString().indexOf(searchChar.toString(), start);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toString":"cs"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:958","type":"CtBinaryOperatorImpl","sourcecode":"startIndexInclusive < 0"},"failures":[],"tindex":"67b3fcca-2e7c-11e6-a2cf-6dd5386a13e4","method":{"position":"org.apache.commons.lang3.text.StrMatcher:333","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int isMatch(final char[] buffer, final int pos, final int bufferStart, final int bufferEnd) {\n    if (bufferStart < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (char) == (buffer[pos]) ? 1 : 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndexInclusive":"bufferStart"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:854","type":"CtBinaryOperatorImpl","sourcecode":"lhs == null"},"failures":[482],"tindex":"67b3fccb-2e7c-11e6-a2cf-af78273e7a41","method":{"position":"org.apache.commons.lang3.ArrayUtils:1505","type":"CtMethodImpl","sourcecode":"public static void reverse(final byte[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return ;\n            } \n            org.apache.commons.lang3.ArrayUtils.reverse(array, 0, array.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3622","type":"CtBinaryOperatorImpl","sourcecode":"i > startIndex"},"failures":[],"tindex":"67b423dc-2e7c-11e6-a2cf-dd2bfd4f5def","method":{"position":"org.apache.commons.lang3.time.DateUtils:883","type":"CtMethodImpl","sourcecode":"public static java.util.Date ceiling(final java.util.Date date, final int field) {\n    if (field > field) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (date == null) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            final java.util.Calendar java.util.Calendar = java.util.Calendar.getInstance();\n            gval.setTime(date);\n            org.apache.commons.lang3.time.DateUtils.modify(gval, field, org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.int);\n            return gval.getTime();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"field","i":"field"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5080","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[483],"tindex":"67b423dd-2e7c-11e6-a2cf-cf224e57da9a","method":{"position":"org.apache.commons.lang3.StringUtils:6167","type":"CtMethodImpl","sourcecode":"public static boolean isAllUpperCase(final java.lang.CharSequence cs) {\n    if (cs == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((cs == null) || (org.apache.commons.lang3.StringUtils.isEmpty(cs))) {\n                return false;\n            } \n            final int int = cs.length();\n            for (int int = 0 ; i < sz ; i++) {\n                if ((java.lang.Character.isUpperCase(cs.charAt(i))) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"cs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:70","type":"CtBinaryOperatorImpl","sourcecode":"pattern == null"},"failures":[168,169,170,171,171,172,173,174,175,176,176,177,178,179,180],"tindex":"67b423de-2e7c-11e6-a2cf-2fd8542acd51","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:618","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final java.util.Map<?, ?> map) {\n    if (fieldName == null) {\n        {\n            buffer.append(map);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pattern":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:663","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(tok)"},"failures":[484],"tindex":"67b44aef-2e7c-11e6-a2cf-bbc3e90de826","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:446","type":"CtMethodImpl","sourcecode":"public static java.lang.Object readDeclaredField(final java.lang.Object target, final java.lang.String fieldName) throws java.lang.IllegalAccessException {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(fieldName)) {\n        throw new java.lang.IllegalAccessException();\n    } else {\n        {\n            return org.apache.commons.lang3.reflect.FieldUtils.readDeclaredField(target, fieldName, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"tok":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:7053","type":"CtBinaryOperatorImpl","sourcecode":"((m1.length()) == 0) || ((m2.length()) == 0)"},"failures":[485],"tindex":"67b44af0-2e7c-11e6-a2cf-5f9fa6e36758","method":{"position":"org.apache.commons.lang3.StringUtils:5916","type":"CtMethodImpl","sourcecode":"public static boolean isAlphanumeric(final java.lang.CharSequence cs) {\n    if (((cs.length()) == 0) || ((cs.length()) == 0)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(cs)) {\n                return false;\n            } \n            final int int = cs.length();\n            for (int int = 0 ; i < sz ; i++) {\n                if ((java.lang.Character.isLetterOrDigit(cs.charAt(i))) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"m1":"cs","m2":"cs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:671","type":"CtInvocationImpl","sourcecode":"stripChars.isEmpty()"},"failures":[486,487,374,375,376,376,377,378,379,380,171,172,173,174,175,381,382,383,384,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,176,434,435,436,437,438,439,440,441,488,489,490,491],"tindex":"67b44af1-2e7c-11e6-a2cf-192f5abccae5","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:675","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final int value) {\n    if (fieldName.isEmpty()) {\n        {\n            appendFieldStart(buffer, fieldName);\n            appendDetail(buffer, fieldName, value);\n            appendFieldEnd(buffer, fieldName);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"stripChars":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:446","type":"CtVariableReadImpl","sourcecode":"lastOutputSeconds"},"failures":[492],"tindex":"67b44af2-2e7c-11e6-a2cf-3b86251a06db","method":{"position":"org.apache.commons.lang3.Validate:129","type":"CtMethodImpl","sourcecode":"public static void isTrue(final boolean expression, final java.lang.String message, final double value) {\n    if (expression) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (expression == false) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message, java.lang.Double.valueOf(value)));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lastOutputSeconds":"expression"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:76","type":"CtBinaryOperatorImpl","sourcecode":"out == null"},"failures":[],"tindex":"67b47203-2e7c-11e6-a2cf-912c821f38b4","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:400","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.StringBuffer format(final java.lang.Object obj, final java.lang.StringBuffer toAppendTo, final java.text.FieldPosition pos) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.FastDatePrinter.format(obj, toAppendTo, pos);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"out":"obj"},"type":"special","returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}