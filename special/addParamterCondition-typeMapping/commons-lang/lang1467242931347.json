{"failureDictionary":{"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":17,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":306,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":237,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":263,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":302,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":231,"org.apache.commons.lang3.BooleanUtilsTest.test_toStringTrueFalse_Boolean":287,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":258,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveBooleanArray":400,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testConstantFuture_null":406,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":18,"org.apache.commons.lang3.ArrayUtilsTest.testContainsLong":74,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":299,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCode":37,"org.apache.commons.lang3.StringUtilsTest.testSplitPreserveAllTokens_StringChar":414,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyDoubleEmptyArray":317,"org.apache.commons.lang3.time.FastDateParserTest.testLANG_832":383,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddDash":51,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":294,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":213,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_AD":367,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":274,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":276,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":25,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":151,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_char":283,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":257,"org.apache.commons.lang3.ClassUtilsTest.testGetClassWithArrayClasses2D":340,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetMatchingAccessibleMethod":125,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":15,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":70,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":259,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCyclicalObjectReferences":40,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringStringarray":62,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":266,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":224,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":268,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_BC":390,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":291,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testConstantFuture_Integer":405,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":228,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOf":12,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_BC":368,"org.apache.commons.lang3.ClassUtilsTest.test_getShortCanonicalName_Class":345,"org.apache.commons.lang3.StringUtilsTest.testSplitByWholeSeparatorPreserveAllTokens_StringStringInt":401,"org.apache.commons.lang3.reflect.TypeLiteralTest.testEquals":123,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":196,"org.apache.commons.lang3.reflect.TypeLiteralTest.testBasic":121,"org.apache.commons.lang3.exception.ContextedExceptionTest.testJavaSerialization":327,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":230,"org.apache.commons.lang3.ArrayUtilsTest.testSameLengthShort":398,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_AD":389,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":66,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":214,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseUncheckedUncheckedException":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":207,"org.apache.commons.lang3.StringUtilsTest.testSplit_StringChar":415,"org.apache.commons.lang3.reflect.InheritanceUtilsTest.testDistanceNullParentNullChild":419,"org.apache.commons.lang3.time.FastDateParserTest.testParseNumerics":380,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":160,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementLongArray":73,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":300,"org.apache.commons.lang3.BooleanUtilsTest.testXor_object_nullInput":413,"org.apache.commons.lang3.ClassUtilsTest.test_getShortCanonicalName_Object":343,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testInvalidFragmentWithDate":397,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":253,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":315,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":204,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":372,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":301,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":155,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":27,"org.apache.commons.lang3.exception.ContextedExceptionTest.testSetContextValue":328,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_AD":387,"org.apache.commons.lang3.ArrayUtilsTest.testContains":11,"org.apache.commons.lang3.time.FastDateParserTest.testDayOf":374,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseNumerics":358,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":203,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringString":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":188,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang538":360,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":217,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":248,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":172,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":238,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":165,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":191,"org.apache.commons.lang3.time.DateUtilsTest.testIteratorEx":282,"org.apache.commons.lang3.text.StrTokenizerTest.testChaining":58,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testBugzilla38401":96,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetTypeArguments":114,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOfAny_StringStringArray":333,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang303":359,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":273,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":128,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":21,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationPluralWords":95,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":152,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyBooleanObjectEmptyArray":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":182,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":181,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":386,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":154,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":167,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_BC":366,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":187,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testIntArray":320,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testArrayList":156,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":202,"org.apache.commons.lang3.builder.DiffBuilderTest.testSimilarObjectIgnoresAppends":26,"org.apache.commons.lang3.mutable.MutableObjectTest.testEquals":110,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testBlank":168,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":201,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyDouble":316,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":308,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":252,"org.apache.commons.lang3.builder.DiffResultTest.testNullStyle":130,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":190,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriod":84,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsInstance":115,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_AD":365,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_Object":109,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":223,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":162,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":247,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStrip_StringString":3,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":245,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseUncheckedNull":79,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":296,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":293,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":24,"org.apache.commons.lang3.reflect.TypeUtilsTest.testParameterize":284,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":260,"org.apache.commons.lang3.StringUtilsTest.testLANG666":0,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable":111,"org.apache.commons.lang3.math.FractionTest.testAdd":396,"org.apache.commons.lang3.builder.DiffTest.testGetFieldName":134,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":126,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":226,"org.apache.commons.lang3.ClassUtilsTest.testGetClassByNormalNameArrays2D":341,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":236,"org.apache.commons.lang3.ClassUtilsTest.testWithInterleavingWhitespace":342,"org.apache.commons.lang3.BooleanUtilsTest.test_toStringTrueFalse_boolean":408,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":179,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLexx":90,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":23,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddCombinations":53,"org.apache.commons.lang3.ConversionTest.testShortArrayToInt":407,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":246,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_AD":362,"org.apache.commons.lang3.ArrayUtilsTest.testToMap":412,"org.apache.commons.lang3.ClassUtilsTest.testGetClassInvalidArguments":346,"org.apache.commons.lang3.builder.DiffTest.testToString":135,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testLinkedList":158,"org.apache.commons.lang3.ValidateTest.testNoNullElementsCollection1":403,"org.apache.commons.lang3.ValidateTest.testNoNullElementsCollection2":404,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":30,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsert":418,"org.apache.commons.lang3.ClassUtilsTest.testGetClassClassNotFound":347,"org.apache.commons.lang3.time.FastDateParserTest.testAmPm":376,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":68,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testEdgeDurations":94,"org.apache.commons.lang3.exception.ContextedExceptionTest.testGetContextValues":326,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_BC":363,"org.apache.commons.lang3.StringUtilsTest.testDeleteWhitespace_String":348,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_BC":357,"org.apache.commons.lang3.mutable.MutableFloatTest.testSubtractValueObject":395,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":219,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":298,"org.apache.commons.lang3.ClassUtilsTest.test_getShortCanonicalName_String":344,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":19,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":254,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":278,"org.apache.commons.lang3.CharSetTest.testConstructor_String_combo":52,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixtureWithTransients":49,"org.apache.commons.lang3.reflect.InheritanceUtilsTest.testDistanceNullParent":420,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationHMS":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":232,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":64,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":205,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testSpecialCharacters":349,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":195,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParses":369,"org.apache.commons.lang3.reflect.TypeUtilsTest.testTypesSatisfyVariables":117,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyByteEmptyArray":323,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_StrMatcher":71,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":312,"org.apache.commons.lang3.reflect.TypeLiteralTest.testRaw":120,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testBuilderResetAfterBuild":108,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":250,"org.apache.commons.lang3.BooleanUtilsTest.test_toString_Boolean_String_String_String":289,"org.apache.commons.lang3.ClassUtilsTest.test_isInnerClass_Class":325,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSimpleGet":100,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStrip_String":6,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testDayOf":352,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testMilleniumBug":351,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":183,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":176,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":92,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testQuotes":370,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":241,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":173,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":124,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":235,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSplit":101,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":234,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLANG815":85,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":169,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":269,"org.apache.commons.lang3.builder.DiffResultTest.testListIsNonModifiable":129,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":164,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":290,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStripAll":1,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayInt":138,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_StrMatcher_int":72,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfLong":75,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":69,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseUncheckedUncheckedException":78,"org.apache.commons.lang3.ClassUtilsTest.testGetClassByNormalNameArrays":334,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":262,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":208,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfIgnoreCase_String":330,"org.apache.commons.lang3.builder.DiffResultTest.testNullRhs":133,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":314,"org.apache.commons.lang3.BooleanUtilsTest.test_toStringOnOff_boolean":410,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":239,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationISO":7,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":170,"org.apache.commons.lang3.time.FastDateParserTest.testSpecialCharacters":371,"org.apache.commons.lang3.time.FastDateParserTest.testLowYearPadding":377,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":295,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_AD":356,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":209,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":218,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":63,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetRawType":119,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":67,"org.apache.commons.lang3.time.FastDateParserTest.testMilleniumBug":373,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":159,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_Widening":112,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionCompare":45,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISOMethod":93,"org.apache.commons.lang3.StringUtilsTest.testReplaceOnce_StringStringString":279,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":175,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":243,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadDaemonTrue":106,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":264,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstringBetween_StringString":394,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHierarchyHashCode":36,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":364,"org.apache.commons.lang3.time.FastDateParserTest.testParseZone":375,"org.apache.commons.lang3.StringUtilsTest.testReverseDelimited_StringChar":57,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":211,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":244,"org.apache.commons.lang3.ClassUtilsTest.test_getPackageCanonicalName_String":337,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":185,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCodeExcludeFields":38,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":22,"org.apache.commons.lang3.time.DateUtilsTest.testAddWeeks":324,"org.apache.commons.lang3.time.FastDateParserTest.testLang538":382,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":180,"org.apache.commons.lang3.time.FastDateParserTest.testLang303":381,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfWithStartIndex":13,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_AD":378,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":265,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":242,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":233,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLANG984":88,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLANG981":86,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLANG982":87,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyBooleanObject":105,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testBuilderReset":107,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorNoArgs":304,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":186,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":221,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":193,"org.apache.commons.lang3.builder.DiffTest.testCannotModify":136,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":277,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionHierarchyEquals":42,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyShort":82,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":31,"org.apache.commons.lang3.ClassUtilsTest.test_getPackageCanonicalName_Class":339,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":261,"org.apache.commons.lang3.ClassUtilsTest.testGetInnerClass":335,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationWords":98,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_BC":379,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":319,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":116,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEqualsExcludeFields":41,"org.apache.commons.lang3.reflect.TypeUtilsTest.testDetermineTypeVariableAssignments":118,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":20,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":34,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_DefaultUnboxing_Widening":113,"org.apache.commons.lang3.ClassUtilsTest.testGetClassWithArrayClasses":338,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testInteger":50,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":198,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":271,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseZone":353,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":220,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":212,"org.apache.commons.lang3.ConversionTest.testShortToByteArray":399,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionObjectCycle":35,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementObjectArray":10,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":307,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixture":48,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":275,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testBlank":149,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayShort":402,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":267,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":199,"org.apache.commons.lang3.builder.DiffResultTest.testIterator":131,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":227,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":184,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":272,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":311,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":222,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":14,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testDurationsByBruteForce":83,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":206,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStripToNull_String":2,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":251,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":16,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":313,"org.apache.commons.lang3.BooleanUtilsTest.test_toStringYesNo_Boolean":288,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":32,"org.apache.commons.lang3.reflect.TypeLiteralTest.testTyped":122,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":161,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":229,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":189,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testJiraLang281":99,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":303,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_BC":385,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":29,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":255,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":350,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":127,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":153,"org.apache.commons.lang3.time.DateUtilsTest.testAddYears":8,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":310,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":28,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyShortEmptyArray":81,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfCharWithStartIndex":102,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testCopyOnWriteArrayList":157,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":210,"org.apache.commons.lang3.builder.DiffResultTest.testNullLhs":132,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":292,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":318,"org.apache.commons.lang3.ArrayUtilsTest.testToString":139,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":171,"org.apache.commons.lang3.LocaleUtilsTest.testLocaleLookupList_Locale":280,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDuration":97,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":297,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringInt":80,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_BC":388,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":150,"org.apache.commons.lang3.math.NumberUtilsTest.testStringToDoubleString":321,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOf_String":331,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testAmPm":354,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayByte":60,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddNegate":55,"org.apache.commons.lang3.time.DateUtilsTest.testWeekIterator":281,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":200,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_AD":384,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareExcludeFields":43,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":166,"org.apache.commons.lang3.CharSetTest.testStatics":56,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseUncheckedNull":76,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":305,"org.apache.commons.lang3.builder.DiffTest.testGetType":137,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":256,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":225,"org.apache.commons.lang3.text.StrTokenizerTest.test8":147,"org.apache.commons.lang3.text.StrTokenizerTest.test5":144,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLowYearPadding":355,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLANG_832":361,"org.apache.commons.lang3.text.StrTokenizerTest.test4":143,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGenericArrayType":285,"org.apache.commons.lang3.text.StrTokenizerTest.test7":146,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":215,"org.apache.commons.lang3.BooleanUtilsTest.test_toStringOnOff_Boolean":286,"org.apache.commons.lang3.text.StrTokenizerTest.test6":145,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":216,"org.apache.commons.lang3.text.StrTokenizerTest.test1":140,"org.apache.commons.lang3.text.StrTokenizerTest.test3":142,"org.apache.commons.lang3.text.StrTokenizerTest.test2":141,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":192,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testIntegerWithTransients":47,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":270,"org.apache.commons.lang3.StringUtilsIsTest.testIsNumericSpace":103,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":174,"org.apache.commons.lang3.exception.ContextedExceptionTest.testGetFirstContextValue":329,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStripToEmpty_String":4,"org.apache.commons.lang3.StringUtilsTest.testCaseFunctions":416,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":393,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLowDurations":89,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareTransients":46,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEquals":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":178,"org.apache.commons.lang3.time.FastDateParserTest.testQuotes":392,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStripEnd_StringString":5,"org.apache.commons.lang3.BooleanUtilsTest.test_toStringYesNo_boolean":409,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":163,"org.apache.commons.lang3.ClassUtilsTest.test_getPackageCanonicalName_Object":336,"org.apache.commons.lang3.time.FastDateParserTest.testParses":391,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":177,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompare":44,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":249,"org.apache.commons.lang3.CharSetTest.testConstructor_String_comboNegated":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":240,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":197,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOf_StringInt":332,"org.apache.commons.lang3.BooleanUtilsTest.test_toString_boolean_String_String_String":411,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementsObjectArray":9,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":59,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":309,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsertWithNullText":417,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":194,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyByte":322,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":148},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5588","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[0,1,2,3,4,5,6],"tindex":"3cc00946-3e51-11e6-bf2e-e7e3d9021477","method":{"position":"org.apache.commons.lang3.StringUtils:661","type":"CtMethodImpl","sourcecode":"public static java.lang.String stripEnd(final java.lang.String str, final java.lang.String stripChars) {\n    if (str == null) {\n        {\n            int int;\n            if ((str == null) || ((end = str.length()) == 0)) {\n                return str;\n            } \n            if (stripChars == null) {\n                while ((end != 0) && (java.lang.Character.isWhitespace(str.charAt((end - 1))))) {\n                    end--;\n                }\n            } else if (stripChars.isEmpty()) {\n                return str;\n            } else {\n                while ((end != 0) && ((stripChars.indexOf(str.charAt((end - 1)))) != (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int))) {\n                    end--;\n                }\n            }\n            return str.substring(0, end);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:108","type":"CtBinaryOperatorImpl","sourcecode":"cex != null"},"failures":[],"tindex":"3cc0f3a7-3e51-11e6-bf2e-854fd63052a4","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:432","type":"CtMethodImpl","sourcecode":"public static void printRootCauseStackTrace(final java.lang.Throwable throwable) {\n    if (throwable != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.exception.ExceptionUtils.printRootCauseStackTrace(throwable, java.lang.System.java.lang.System.java.io.PrintStream);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cex":"throwable"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:385","type":"CtFieldReadImpl","sourcecode":"objectsTriviallyEqual"},"failures":[7],"tindex":"3cc0f3a8-3e51-11e6-bf2e-2b4e0da41282","method":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:126","type":"CtMethodImpl","sourcecode":"public static java.lang.String formatDuration(final long durationMillis, final java.lang.String format, final boolean padWithZeros) {\n    if (padWithZeros) {\n        {\n            final org.apache.commons.lang3.time.DurationFormatUtils.Token[] org.apache.commons.lang3.time.DurationFormatUtils.Token[] = org.apache.commons.lang3.time.DurationFormatUtils.lexx(format);\n            long long = 0;\n            long long = 0;\n            long long = 0;\n            long long = 0;\n            long long = durationMillis;\n            if (org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(tokens, org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n                days = milliseconds / (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.long);\n                milliseconds = milliseconds - (days * (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.long));\n            } \n            if (org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(tokens, org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n                hours = milliseconds / (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.long);\n                milliseconds = milliseconds - (hours * (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.long));\n            } \n            if (org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(tokens, org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n                minutes = milliseconds / (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.long);\n                milliseconds = milliseconds - (minutes * (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.long));\n            } \n            if (org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(tokens, org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n                seconds = milliseconds / (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.long);\n                milliseconds = milliseconds - (seconds * (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.long));\n            } \n            return org.apache.commons.lang3.time.DurationFormatUtils.format(tokens, 0, 0, days, hours, minutes, seconds, milliseconds, padWithZeros);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsTriviallyEqual":"padWithZeros"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2057","type":"CtBinaryOperatorImpl","sourcecode":"pos > 0"},"failures":[8],"tindex":"3cc141c9-3e51-11e6-bf2e-6f558226a4ea","method":{"position":"org.apache.commons.lang3.time.DateUtils:404","type":"CtMethodImpl","sourcecode":"public static java.util.Date addYears(final java.util.Date date, final int amount) {\n    if (amount > 0) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.add(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pos":"amount"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:827","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof short[]"},"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"tindex":"3cc141ca-3e51-11e6-bf2e-251412c20834","method":{"position":"org.apache.commons.lang3.ArrayUtils:1902","type":"CtMethodImpl","sourcecode":"public static int indexOf(final java.lang.Object[] array, final java.lang.Object objectToFind, int startIndex) {\n    if (objectToFind instanceof short[]) {\n        {\n            if (array == null) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                startIndex = 0;\n            } \n            if (objectToFind == null) {\n                for (int int = startIndex ; i < (array.int) ; i++) {\n                    if ((array[i]) == null) {\n                        return i;\n                    } \n                }\n            } else if (array.getClass().getComponentType().isInstance(objectToFind)) {\n                for (int int = startIndex ; i < (array.int) ; i++) {\n                    if (objectToFind.equals(array[i])) {\n                        return i;\n                    } \n                }\n            } \n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"objectToFind"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1072","type":"CtBinaryOperatorImpl","sourcecode":"suffix == null"},"failures":[57],"tindex":"3cc168db-3e51-11e6-bf2e-47034e515364","method":{"position":"org.apache.commons.lang3.StringUtils:6309","type":"CtMethodImpl","sourcecode":"public static java.lang.String reverseDelimited(final java.lang.String str, final char separatorChar) {\n    if (str == null) {\n        {\n            if (str == null) {\n                return null;\n            } \n            final java.lang.String[] java.lang.String[] = org.apache.commons.lang3.StringUtils.split(str, separatorChar);\n            org.apache.commons.lang3.ArrayUtils.reverse(strs);\n            return org.apache.commons.lang3.StringUtils.join(strs, separatorChar);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"suffix":"str"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:304","type":"CtBinaryOperatorImpl","sourcecode":"lhs != rhs"},"failures":[58],"tindex":"3cc18fec-3e51-11e6-bf2e-a3139f8e6f54","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:972","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrTokenizer setIgnoredChar(final char ignored) {\n    if (ignored != ignored) {\n        {\n            return setIgnoredMatcher(org.apache.commons.lang3.text.StrMatcher.charMatcher(ignored));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"ignored","rhs":"ignored"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:726","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[59],"tindex":"3cc18fed-3e51-11e6-bf2e-69cdf31ef76c","method":{"position":"org.apache.commons.lang3.AnnotationUtils:91","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, java.lang.Object value) {\n    if (fieldName == null) {\n        {\n            if (value instanceof java.lang.annotation.Annotation) {\n                value = org.apache.commons.lang3.AnnotationUtils.toString(((java.lang.annotation.Annotation)(value)));\n            } \n            super.appendDetail(buffer, fieldName, value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2297","type":"CtBinaryOperatorImpl","sourcecode":"pos == (org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND)"},"failures":[60],"tindex":"3cc1b6fe-3e51-11e6-bf2e-e9a78eb39aa8","method":{"position":"org.apache.commons.lang3.ArrayUtils:1074","type":"CtMethodImpl","sourcecode":"public static byte[] subarray(final byte[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (startIndexInclusive == endIndexExclusive) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            if (startIndexInclusive < 0) {\n                startIndexInclusive = 0;\n            } \n            if (endIndexExclusive > (array.int)) {\n                endIndexExclusive = array.int;\n            } \n            final int int = endIndexExclusive - startIndexInclusive;\n            if (newSize <= 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.byte[];\n            } \n            final byte[] byte[] = new byte[newSize];\n            java.lang.System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);\n            return subarray;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND":"endIndexExclusive","pos":"startIndexInclusive"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrMatcher:190","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(chars)"},"failures":[61,62],"tindex":"3cc1de0f-3e51-11e6-bf2e-79c7d418de1b","method":{"position":"org.apache.commons.lang3.CharSetUtils:175","type":"CtMethodImpl","sourcecode":"public static java.lang.String keep(final java.lang.String str, final java.lang.String... set) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return null;\n            } \n            if ((str.isEmpty()) || (org.apache.commons.lang3.CharSetUtils.deepEmpty(set))) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            return org.apache.commons.lang3.CharSetUtils.modify(str, set, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chars":"str"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5374","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[63,64,65,66,67,68,69,70],"tindex":"3cc20520-3e51-11e6-bf2e-bdd60a8e409d","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:523","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setSummaryObjectStartText(final java.lang.String summaryObjectStartText) {\n    if (summaryObjectStartText == null) {\n        {\n            super.setSummaryObjectStartText(summaryObjectStartText);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"summaryObjectStartText"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1364","type":"CtBinaryOperatorImpl","sourcecode":"length >= 0"},"failures":[71,72],"tindex":"3cc20521-3e51-11e6-bf2e-c92feea09a9b","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2512","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final org.apache.commons.lang3.text.StrMatcher matcher, int startIndex) {\n    if (startIndex >= 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            startIndex = startIndex >= (int) ? (int) - 1 : startIndex;\n            if ((matcher == null) || (startIndex < 0)) {\n                return -1;\n            } \n            final char[] char[] = char[];\n            final int int = startIndex + 1;\n            for (int int = startIndex ; i >= 0 ; i--) {\n                if ((matcher.isMatch(buf, i, 0, endIndex)) > 0) {\n                    return i;\n                } \n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"startIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:698","type":"CtBinaryOperatorImpl","sourcecode":"rhs == null"},"failures":[73,74,75],"tindex":"3cc22c32-3e51-11e6-bf2e-e908265e415f","method":{"position":"org.apache.commons.lang3.ArrayUtils:2003","type":"CtMethodImpl","sourcecode":"public static int indexOf(final long[] array, final long valueToFind) {\n    if (array == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"rhs":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:159","type":"CtBinaryOperatorImpl","sourcecode":"(ex.getCause()) instanceof java.lang.RuntimeException"},"failures":[76,77,78,79],"tindex":"3cc22c33-3e51-11e6-bf2e-13225f1c23c9","method":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:81","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.concurrent.ConcurrentRuntimeException extractCauseUnchecked(final java.util.concurrent.ExecutionException ex) {\n    if ((ex.getCause()) instanceof java.lang.RuntimeException) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((ex == null) || ((ex.getCause()) == null)) {\n                return null;\n            } \n            org.apache.commons.lang3.concurrent.ConcurrentUtils.throwCause(ex);\n            return new org.apache.commons.lang3.concurrent.ConcurrentRuntimeException(ex.getMessage() , ex.getCause());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ex":"ex"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6310","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[80],"tindex":"3cc25344-3e51-11e6-bf2e-9b2107493ae7","method":{"position":"org.apache.commons.lang3.text.WordUtils:96","type":"CtMethodImpl","sourcecode":"public static java.lang.String wrap(final java.lang.String str, final int wrapLength) {\n    if (str == null) {\n        {\n            return org.apache.commons.lang3.text.WordUtils.wrap(str, wrapLength, null, false);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:301","type":"CtFieldReadImpl","sourcecode":"objectsTriviallyEqual"},"failures":[],"tindex":"3cc25345-3e51-11e6-bf2e-39117936305a","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1696","type":"CtMethodImpl","sourcecode":"protected void setDefaultFullDetail(final boolean defaultFullDetail) {\n    if (defaultFullDetail) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.this.boolean = defaultFullDetail;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsTriviallyEqual":"defaultFullDetail"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2271","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[81,82],"tindex":"3cc27a56-3e51-11e6-bf2e-edd781b7fbc8","method":{"position":"org.apache.commons.lang3.ArrayUtils:572","type":"CtMethodImpl","sourcecode":"public static short[] nullToEmpty(final short[] array) {\n    if (array == null) {\n        {\n            if ((array == null) || ((array.int) == 0)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.short[];\n            } \n            return array;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:989","type":"CtBinaryOperatorImpl","sourcecode":"(value < start) || (value > end)"},"failures":[],"tindex":"3cc27a57-3e51-11e6-bf2e-055c622a6160","method":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:102","type":"CtMethodImpl","sourcecode":"public static double min(final double a, final double b) {\n    if ((b < a) || (value > b)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (java.lang.Double.isNaN(a)) {\n                return b;\n            } else if (java.lang.Double.isNaN(b)) {\n                return a;\n            } else {\n                return java.lang.Math.min(a, b);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"a","end":"b","value":"b"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:481","type":"CtVariableReadImpl","sourcecode":"detail"},"failures":[],"tindex":"3cc27a58-3e51-11e6-bf2e-130cf28709ad","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setUseFieldNames(final boolean useFieldNames) {\n    if (useFieldNames) {\n        {\n            super.setUseFieldNames(useFieldNames);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"detail":"useFieldNames"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:253","type":"CtBinaryOperatorImpl","sourcecode":"input != null"},"failures":[83,84,85,86,87,88,89,90,91,7,92,93,94,95,96,97,98,99,100,101],"tindex":"3cc27a59-3e51-11e6-bf2e-21cb17b9c3ad","method":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:480","type":"CtMethodImpl","sourcecode":"static org.apache.commons.lang3.time.DurationFormatUtils.Token[] lexx(final java.lang.String format) {\n    if (format != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.ArrayList<org.apache.commons.lang3.time.DurationFormatUtils.Token> java.util.ArrayList<org.apache.commons.lang3.time.DurationFormatUtils.Token> = new java.util.ArrayList<org.apache.commons.lang3.time.DurationFormatUtils.Token>(format.length());\n            boolean boolean = false;\n            java.lang.StringBuilder java.lang.StringBuilder = null;\n            org.apache.commons.lang3.time.DurationFormatUtils.Token org.apache.commons.lang3.time.DurationFormatUtils.Token = null;\n            for (int int = 0 ; i < (format.length()) ; i++) {\n                final char char = format.charAt(i);\n                if (inLiteral && (ch != '\\'')) {\n                    buffer.append(ch);\n                    continue;\n                } \n                java.lang.Object java.lang.Object = null;\n                switch (ch) {\n                    case '\\'' :\n                        if (inLiteral) {\n                            buffer = null;\n                            inLiteral = false;\n                        } else {\n                            buffer = new java.lang.StringBuilder();\n                            list.add(new org.apache.commons.lang3.time.DurationFormatUtils.Token(buffer));\n                            inLiteral = true;\n                        }\n                        break;\n                    case 'y' :\n                        value = org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n                        break;\n                    case 'M' :\n                        value = org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n                        break;\n                    case 'd' :\n                        value = org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n                        break;\n                    case 'H' :\n                        value = org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n                        break;\n                    case 'm' :\n                        value = org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n                        break;\n                    case 's' :\n                        value = org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n                        break;\n                    case 'S' :\n                        value = org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n                        break;\n                    default :\n                        if (buffer == null) {\n                            buffer = new java.lang.StringBuilder();\n                            list.add(new org.apache.commons.lang3.time.DurationFormatUtils.Token(buffer));\n                        } \n                        buffer.append(ch);\n                }\n                if (value != null) {\n                    if ((previous != null) && ((previous.getValue()) == value)) {\n                        previous.increment();\n                    } else {\n                        final org.apache.commons.lang3.time.DurationFormatUtils.Token org.apache.commons.lang3.time.DurationFormatUtils.Token = new org.apache.commons.lang3.time.DurationFormatUtils.Token(value);\n                        list.add(token);\n                        previous = token;\n                    }\n                    buffer = null;\n                } \n            }\n            if (inLiteral) {\n                throw new java.lang.IllegalArgumentException((\"Unmatched quote in format: \" + format));\n            } \n            return list.toArray(new org.apache.commons.lang3.time.DurationFormatUtils.Token[list.size()]);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"format"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:472","type":"CtBinaryOperatorImpl","sourcecode":"(java.lang.Float.floatToIntBits(lhs)) != (java.lang.Float.floatToIntBits(rhs))"},"failures":[],"tindex":"3cc2c87a-3e51-11e6-bf2e-cbc476b4ebb8","method":{"position":"org.apache.commons.lang3.ArrayUtils:4151","type":"CtMethodImpl","sourcecode":"public static float[] add(final float[] array, final float element) {\n    if ((java.lang.Float.floatToIntBits(element)) != (java.lang.Float.floatToIntBits(element))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final float[] float[] = ((float[])(org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(array, java.lang.Float.java.lang.Float.java.lang.Class<java.lang.Float>)));\n            newArray[((newArray.int) - 1)] = element;\n            return newArray;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"element","rhs":"element"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1364","type":"CtBinaryOperatorImpl","sourcecode":"typeArguments == null"},"failures":[],"tindex":"3cc2c87b-3e51-11e6-bf2e-1b0dac4d199f","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1214","type":"CtMethodImpl","sourcecode":"public static boolean typesSatisfyVariables(final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> typeVarAssigns) {\n    if (typeVarAssigns == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.notNull(typeVarAssigns, \"typeVarAssigns is null\");\n            for (final java.util.Map.Entry<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map.Entry<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> : typeVarAssigns.entrySet()) {\n                final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = entry.getKey();\n                final java.lang.reflect.Type java.lang.reflect.Type = entry.getValue();\n                for (final java.lang.reflect.Type java.lang.reflect.Type : org.apache.commons.lang3.reflect.TypeUtils.getImplicitBounds(typeVar)) {\n                    if (!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(type, org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(bound, typeVarAssigns), typeVarAssigns))) {\n                        return false;\n                    } \n                }\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeArguments":"typeVarAssigns"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5308","type":"CtBinaryOperatorImpl","sourcecode":"pads <= 0"},"failures":[],"tindex":"3cc2ef8c-3e51-11e6-bf2e-f33ea1a58c8f","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1222","type":"CtMethodImpl","sourcecode":"public static int max(int a, final int b, final int c) {\n    if (c <= 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (b > a) {\n                a = b;\n            } \n            if (c > a) {\n                a = c;\n            } \n            return a;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pads":"c"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:255","type":"CtInvocationImpl","sourcecode":"java.lang.Float.isNaN(a)"},"failures":[],"tindex":"3cc2ef8d-3e51-11e6-bf2e-3f7ca44d72af","method":{"position":"org.apache.commons.lang3.RandomUtils:163","type":"CtMethodImpl","sourcecode":"public static float nextFloat(float startInclusive, float endInclusive) {\n    if (java.lang.Float.isNaN(startInclusive)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.isTrue((endInclusive >= startInclusive), \"Start value must be smaller or equal to end value.\");\n            org.apache.commons.lang3.Validate.isTrue((startInclusive >= 0), \"Both range values must be non-negative.\");\n            if (startInclusive == endInclusive) {\n                return startInclusive;\n            } \n            return startInclusive + ((endInclusive - startInclusive) * (org.apache.commons.lang3.RandomUtils.org.apache.commons.lang3.RandomUtils.java.util.Random.nextFloat()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"startInclusive"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1118","type":"CtBinaryOperatorImpl","sourcecode":"startIndexInclusive < 0"},"failures":[102],"tindex":"3cc2ef8e-3e51-11e6-bf2e-1da127d2cfd0","method":{"position":"org.apache.commons.lang3.ArrayUtils:2377","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final char[] array, final char valueToFind, int startIndex) {\n    if (startIndex < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } else if (startIndex >= (array.int)) {\n                startIndex = (array.int) - 1;\n            } \n            for (int int = startIndex ; i >= 0 ; i--) {\n                if (valueToFind == (array[i])) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndexInclusive":"startIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:214","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[103],"tindex":"3cc3169f-3e51-11e6-bf2e-9b25dafc8cb5","method":{"position":"org.apache.commons.lang3.StringUtils:6070","type":"CtMethodImpl","sourcecode":"public static boolean isNumericSpace(final java.lang.CharSequence cs) {\n    if (cs == null) {\n        {\n            if (cs == null) {\n                return false;\n            } \n            final int int = cs.length();\n            for (int int = 0 ; i < sz ; i++) {\n                if (((java.lang.Character.isDigit(cs.charAt(i))) == false) && ((cs.charAt(i)) != ' ')) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"cs"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:940","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[104,105],"tindex":"3cc316a0-3e51-11e6-bf2e-f97dc18abab1","method":{"position":"org.apache.commons.lang3.ArrayUtils:832","type":"CtMethodImpl","sourcecode":"public static java.lang.Boolean[] nullToEmpty(final java.lang.Boolean[] array) {\n    if (array == null) {\n        {\n            if ((array == null) || ((array.int) == 0)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Boolean[];\n            } \n            return array;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3671","type":"CtBinaryOperatorImpl","sourcecode":"i > startIndex"},"failures":[],"tindex":"3cc316a1-3e51-11e6-bf2e-250466e55c6c","method":{"position":"org.apache.commons.lang3.StringUtils:3661","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final int[] array, final char separator, final int startIndex, final int endIndex) {\n    if (startIndex > startIndex) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            final int int = endIndex - startIndex;\n            if (noOfItems <= 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder((noOfItems * 16));\n            for (int int = startIndex ; i < endIndex ; i++) {\n                if (i > startIndex) {\n                    buf.append(separator);\n                } \n                buf.append(array[i]);\n            }\n            return buf.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"startIndex","i":"startIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5317","type":"CtBinaryOperatorImpl","sourcecode":"pads < padLen"},"failures":[],"tindex":"3cc33db2-3e51-11e6-bf2e-ed9f220dea6d","method":{"position":"org.apache.commons.lang3.StringUtils:895","type":"CtMethodImpl","sourcecode":"public static int indexOf(final java.lang.CharSequence seq, final int searchChar, final int startPos) {\n    if (searchChar < startPos) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(seq)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            return org.apache.commons.lang3.CharSequenceUtils.indexOf(seq, searchChar, startPos);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pads":"searchChar","padLen":"startPos"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:419","type":"CtVariableReadImpl","sourcecode":"match"},"failures":[106,107,108],"tindex":"3cc33db3-3e51-11e6-bf2e-3939ed04ff85","method":{"position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:318","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder daemon(final boolean f) {\n    if (f) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Boolean = java.lang.Boolean.valueOf(f);\n            return org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"match":"f"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:529","type":"CtBinaryOperatorImpl","sourcecode":"value instanceof double[]"},"failures":[109],"tindex":"3cc33db4-3e51-11e6-bf2e-bf9456bccb7f","method":{"position":"org.apache.commons.lang3.text.StrBuilder:851","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendln(final java.lang.Object obj) {\n    if (obj instanceof double[]) {\n        {\n            return append(obj).appendNewLine();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:520","type":"CtBinaryOperatorImpl","sourcecode":"toGenericArrayType == null"},"failures":[110],"tindex":"3cc364c5-3e51-11e6-bf2e-d5d24d08f342","method":{"position":"org.apache.commons.lang3.mutable.MutableObject:93","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == null) {\n                return false;\n            } \n            if ((org.apache.commons.lang3.mutable.MutableObject.this) == obj) {\n                return true;\n            } \n            if ((org.apache.commons.lang3.mutable.MutableObject.this.getClass()) == (obj.getClass())) {\n                final org.apache.commons.lang3.mutable.MutableObject<?> org.apache.commons.lang3.mutable.MutableObject<?> = ((org.apache.commons.lang3.mutable.MutableObject<?>)(obj));\n                return org.apache.commons.lang3.mutable.MutableObject.this.T.equals(that.?);\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toGenericArrayType":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.InheritanceUtils:50","type":"CtBinaryOperatorImpl","sourcecode":"(child == null) || (parent == null)"},"failures":[111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,14,15,16,17,18,19,20,21,22,23,24,25,28,29,31,32,33,34,127,128,129,130,131,132,133,134,135,136,137],"tindex":"3cc364c6-3e51-11e6-bf2e-ff4afd0dee2c","method":{"position":"org.apache.commons.lang3.ClassUtils:593","type":"CtMethodImpl","sourcecode":"public static boolean isAssignable(final java.lang.Class<?> cls, final java.lang.Class<?> toClass) {\n    if ((cls == null) || (cls == null)) {\n        {\n            return org.apache.commons.lang3.ClassUtils.isAssignable(cls, toClass, org.apache.commons.lang3.SystemUtils.isJavaVersionAtLeast(org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"parent":"cls","child":"cls"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:325","type":"CtBinaryOperatorImpl","sourcecode":"value == trueValue"},"failures":[138],"tindex":"3cc38bd7-3e51-11e6-bf2e-9bab70bd9cd4","method":{"position":"org.apache.commons.lang3.ArrayUtils:4178","type":"CtMethodImpl","sourcecode":"public static int[] add(final int[] array, final int element) {\n    if (element == element) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int[] int[] = ((int[])(org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(array, java.lang.Integer.java.lang.Integer.java.lang.Class<java.lang.Integer>)));\n            newArray[((newArray.int) - 1)] = element;\n            return newArray;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trueValue":"element","value":"element"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:297","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[59,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,63,64,65,66,67,68,69,70,127,128,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278],"tindex":"3cc38bd8-3e51-11e6-bf2e-df6f8d0d4217","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:376","type":"CtMethodImpl","sourcecode":"public void appendStart(final java.lang.StringBuffer buffer, final java.lang.Object object) {\n    if (object == null) {\n        {\n            if (object != null) {\n                appendClassName(buffer, object);\n                appendIdentityHashCode(buffer, object);\n                appendContentStart(buffer);\n                if (boolean) {\n                    appendFieldSeparator(buffer);\n                } \n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"object"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2413","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[279,95,98],"tindex":"3cc3b2e9-3e51-11e6-bf2e-df784a16a378","method":{"position":"org.apache.commons.lang3.StringUtils:4417","type":"CtMethodImpl","sourcecode":"public static java.lang.String replaceOnce(final java.lang.String text, final java.lang.String searchString, final java.lang.String replacement) {\n    if (searchString == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(text)) {\n                {\n                    return org.apache.commons.lang3.StringUtils.replace(text, searchString, replacement, 1);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"text"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1007","type":"CtBinaryOperatorImpl","sourcecode":"prefix == null"},"failures":[],"tindex":"3cc3b2ea-3e51-11e6-bf2e-29a4c62d40cd","method":{"position":"org.apache.commons.lang3.StringUtils:4417","type":"CtMethodImpl","sourcecode":"public static java.lang.String replaceOnce(final java.lang.String text, final java.lang.String searchString, final java.lang.String replacement) {\n    if (searchString == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(text)) {\n                {\n                    return org.apache.commons.lang3.StringUtils.replace(text, searchString, replacement, 1);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"prefix":"searchString"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.LookupTranslator:56","type":"CtBinaryOperatorImpl","sourcecode":"sz > _longest"},"failures":[],"tindex":"3cc3b2eb-3e51-11e6-bf2e-9b1e42ad1879","method":{"position":"org.apache.commons.lang3.StringUtils:966","type":"CtMethodImpl","sourcecode":"public static int indexOf(final java.lang.CharSequence seq, final java.lang.CharSequence searchSeq, final int startPos) {\n    if (startPos > startPos) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((seq == null) || (searchSeq == null)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            return org.apache.commons.lang3.CharSequenceUtils.indexOf(seq, searchSeq, startPos);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"_longest":"startPos","sz":"startPos"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1381","type":"CtBinaryOperatorImpl","sourcecode":"(searchStr.length()) == 0"},"failures":[],"tindex":"3cc3d9fc-3e51-11e6-bf2e-cf75bc76e51c","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:324","type":"CtMethodImpl","sourcecode":"public static boolean reflectionEquals(final java.lang.Object lhs, final java.lang.Object rhs, final boolean testTransients, final java.lang.Class<?> reflectUpToClass, final java.lang.String... excludeFields) {\n    if ((lhs.length()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (lhs == rhs) {\n                return true;\n            } \n            if ((lhs == null) || (rhs == null)) {\n                return false;\n            } \n            final java.lang.Class<?> java.lang.Class<?> = lhs.getClass();\n            final java.lang.Class<?> java.lang.Class<?> = rhs.getClass();\n            java.lang.Class<?> java.lang.Class<?>;\n            if (lhsClass.isInstance(rhs)) {\n                testClass = lhsClass;\n                if (!(rhsClass.isInstance(lhs))) {\n                    testClass = rhsClass;\n                } \n            } else if (rhsClass.isInstance(lhs)) {\n                testClass = rhsClass;\n                if (!(lhsClass.isInstance(rhs))) {\n                    testClass = lhsClass;\n                } \n            } else {\n                return false;\n            }\n            final org.apache.commons.lang3.builder.EqualsBuilder org.apache.commons.lang3.builder.EqualsBuilder = new org.apache.commons.lang3.builder.EqualsBuilder();\n            try {\n                if (testClass.isArray()) {\n                    equalsBuilder.append(lhs, rhs);\n                } else {\n                    org.apache.commons.lang3.builder.EqualsBuilder.reflectionAppend(lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields);\n                    while (((testClass.getSuperclass()) != null) && (testClass != reflectUpToClass)) {\n                        testClass = testClass.getSuperclass();\n                        org.apache.commons.lang3.builder.EqualsBuilder.reflectionAppend(lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields);\n                    }\n                }\n            } catch (final java.lang.IllegalArgumentException e) {\n                return false;\n            }\n            return equalsBuilder.isEquals();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"searchStr":"lhs"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:121","type":"CtBinaryOperatorImpl","sourcecode":"locale == null"},"failures":[280],"tindex":"3cc3d9fd-3e51-11e6-bf2e-593c3ca48699","method":{"position":"org.apache.commons.lang3.LocaleUtils:172","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.util.Locale> localeLookupList(final java.util.Locale locale) {\n    if (locale == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.LocaleUtils.localeLookupList(locale, locale);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"locale":"locale"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.EnumUtils:91","type":"CtBinaryOperatorImpl","sourcecode":"enumName == null"},"failures":[281,282],"tindex":"3cc4010e-3e51-11e6-bf2e-77767162f6e3","method":{"position":"org.apache.commons.lang3.time.DateUtils:1245","type":"CtMethodImpl","sourcecode":"public static java.util.Iterator<?> iterator(final java.lang.Object focus, final int rangeStyle) {\n    if (focus == null) {\n        {\n            if (focus == null) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            if (focus instanceof java.util.Date) {\n                return org.apache.commons.lang3.time.DateUtils.iterator(((java.util.Date)(focus)), rangeStyle);\n            } else if (focus instanceof java.util.Calendar) {\n                return org.apache.commons.lang3.time.DateUtils.iterator(((java.util.Calendar)(focus)), rangeStyle);\n            } else {\n                throw new java.lang.ClassCastException((\"Could not iterate based on \" + focus));\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumName":"focus"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2980","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[283],"tindex":"3cc4010f-3e51-11e6-bf2e-55a40591ebb9","method":{"position":"org.apache.commons.lang3.ArrayUtils:2957","type":"CtMethodImpl","sourcecode":"public static char[] toPrimitive(final java.lang.Character[] array) {\n    if (array == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.char[];\n            } \n            final char[] char[] = new char[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = array[i].charValue();\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:568","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.ParameterizedType"},"failures":[284,285,121,122,123],"tindex":"3cc40110-3e51-11e6-bf2e-814a660fd893","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1658","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(java.lang.reflect.Type type) {\n    if (type instanceof java.lang.reflect.ParameterizedType) {\n        {\n            org.apache.commons.lang3.Validate.notNull(type);\n            if (type instanceof java.lang.Class<?>) {\n                return org.apache.commons.lang3.reflect.TypeUtils.classToString(((java.lang.Class<?>)(type)));\n            } \n            if (type instanceof java.lang.reflect.ParameterizedType) {\n                return org.apache.commons.lang3.reflect.TypeUtils.parameterizedTypeToString(((java.lang.reflect.ParameterizedType)(type)));\n            } \n            if (type instanceof java.lang.reflect.WildcardType) {\n                return org.apache.commons.lang3.reflect.TypeUtils.wildcardTypeToString(((java.lang.reflect.WildcardType)(type)));\n            } \n            if (type instanceof java.lang.reflect.TypeVariable<?>) {\n                return org.apache.commons.lang3.reflect.TypeUtils.typeVariableToString(((java.lang.reflect.TypeVariable<?>)(type)));\n            } \n            if (type instanceof java.lang.reflect.GenericArrayType) {\n                return org.apache.commons.lang3.reflect.TypeUtils.genericArrayTypeToString(((java.lang.reflect.GenericArrayType)(type)));\n            } \n            throw new java.lang.IllegalArgumentException(org.apache.commons.lang3.ObjectUtils.identityToString(type));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1792","type":"CtBinaryOperatorImpl","sourcecode":"arraySeparator == null"},"failures":[286,287,288,289],"tindex":"3cc42821-3e51-11e6-bf2e-e97ab0f23082","method":{"position":"org.apache.commons.lang3.BooleanUtils:811","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(final java.lang.Boolean bool, final java.lang.String trueString, final java.lang.String falseString, final java.lang.String nullString) {\n    if (falseString == null) {\n        {\n            if (bool == null) {\n                return nullString;\n            } \n            return bool.booleanValue() ? trueString : falseString;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"arraySeparator":"falseString"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:848","type":"CtBinaryOperatorImpl","sourcecode":"(comparison) != 0"},"failures":[290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315],"tindex":"3cc42822-3e51-11e6-bf2e-6b916bb1969f","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:918","type":"CtMethodImpl","sourcecode":"protected java.lang.String resolveVariable(final java.lang.String variableName, final org.apache.commons.lang3.text.StrBuilder buf, final int startPos, final int endPos) {\n    if (startPos != 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.lang3.text.StrLookup<?> org.apache.commons.lang3.text.StrLookup<?> = getVariableResolver();\n            if (resolver == null) {\n                return null;\n            } \n            return resolver.lookup(variableName);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparison":"startPos"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3342","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[316,317],"tindex":"3cc42823-3e51-11e6-bf2e-0105f68e3cff","method":{"position":"org.apache.commons.lang3.ArrayUtils:632","type":"CtMethodImpl","sourcecode":"public static double[] nullToEmpty(final double[] array) {\n    if (array == null) {\n        {\n            if ((array == null) || ((array.int) == 0)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.double[];\n            } \n            return array;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1298","type":"CtBinaryOperatorImpl","sourcecode":"typeVarAssigns == null"},"failures":[],"tindex":"3cc44f34-3e51-11e6-bf2e-a5f093022d2c","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1406","type":"CtMethodImpl","sourcecode":"private static java.lang.reflect.Type[] unrollBounds(final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> typeArguments, final java.lang.reflect.Type[] bounds) {\n    if (typeArguments == null) {\n        {\n            java.lang.reflect.Type[] java.lang.reflect.Type[] = bounds;\n            int int = 0;\n            for ( ; i < (result.int) ; i++) {\n                final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(typeArguments, result[i]);\n                if (unrolled == null) {\n                    result = org.apache.commons.lang3.ArrayUtils.remove(result, (i--));\n                } else {\n                    result[i] = unrolled;\n                }\n            }\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeVarAssigns":"typeArguments"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1630","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isHighSurrogate(ch)"},"failures":[],"tindex":"3cc44f35-3e51-11e6-bf2e-69138cbdb6de","method":{"position":"org.apache.commons.lang3.StringUtils:4126","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final java.lang.Iterable<?> iterable, final char separator) {\n    if (java.lang.Character.isHighSurrogate(separator)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterable == null) {\n                return null;\n            } \n            return org.apache.commons.lang3.StringUtils.join(iterable.iterator(), separator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"separator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:1106","type":"CtBinaryOperatorImpl","sourcecode":"(value <= start) || (value >= end)"},"failures":[],"tindex":"3cc44f36-3e51-11e6-bf2e-274aa2cabae2","method":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:230","type":"CtMethodImpl","sourcecode":"public static java.lang.String formatPeriodISO(final long startMillis, final long endMillis) {\n    if ((startMillis <= startMillis) || (value >= startMillis)) {\n        {\n            return org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(startMillis, endMillis, org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.String, false, java.util.TimeZone.getDefault());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"startMillis","end":"startMillis","value":"startMillis"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:456","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[318,319],"tindex":"3cc47647-3e51-11e6-bf2e-8dd9b5fc4b34","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:179","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.StrTokenizer getCSVInstance(final char[] input) {\n    if (input == null) {\n        {\n            final org.apache.commons.lang3.text.StrTokenizer org.apache.commons.lang3.text.StrTokenizer = org.apache.commons.lang3.text.StrTokenizer.getCSVClone();\n            tok.reset(input);\n            return tok;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"input"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3138","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[320],"tindex":"3cc47648-3e51-11e6-bf2e-13903882bf3e","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:757","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final int[] array) {\n    if (array == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                int = (int) * (int);\n            } else {\n                for (final int int : array) {\n                    append(element);\n                }\n            }\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2481","type":"CtBinaryOperatorImpl","sourcecode":"((str == null) || (open == null)) || (close == null)"},"failures":[321],"tindex":"3cc47649-3e51-11e6-bf2e-dba4285f9ba1","method":{"position":"org.apache.commons.lang3.math.NumberUtils:250","type":"CtMethodImpl","sourcecode":"public static double toDouble(final java.lang.String str) {\n    if (((str == null) || (str == null)) || (str == null)) {\n        {\n            return org.apache.commons.lang3.math.NumberUtils.toDouble(str, 0.0);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str","close":"str","open":"str"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:854","type":"CtBinaryOperatorImpl","sourcecode":"lhs == null"},"failures":[322,323],"tindex":"3cc49d5a-3e51-11e6-bf2e-b9f401312682","method":{"position":"org.apache.commons.lang3.ArrayUtils:612","type":"CtMethodImpl","sourcecode":"public static byte[] nullToEmpty(final byte[] array) {\n    if (array == null) {\n        {\n            if ((array == null) || ((array.int) == 0)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.byte[];\n            } \n            return array;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:715","type":"CtBinaryOperatorImpl","sourcecode":"quoteLen > 0"},"failures":[324],"tindex":"3cc49d5b-3e51-11e6-bf2e-ffef668f0f85","method":{"position":"org.apache.commons.lang3.time.DateUtils:432","type":"CtMethodImpl","sourcecode":"public static java.util.Date addWeeks(final java.util.Date date, final int amount) {\n    if (amount > 0) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.add(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"quoteLen":"amount"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:642","type":"CtBinaryOperatorImpl","sourcecode":"cls == null"},"failures":[325],"tindex":"3cc49d5c-3e51-11e6-bf2e-fb0d77e38d3c","method":{"position":"org.apache.commons.lang3.ClassUtils:802","type":"CtMethodImpl","sourcecode":"public static boolean isInnerClass(final java.lang.Class<?> cls) {\n    if (cls == null) {\n        {\n            return (cls != null) && ((cls.getEnclosingClass()) != null);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"cls"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:656","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[326],"tindex":"3cc4c46d-3e51-11e6-bf2e-c710b614a623","method":{"position":"org.apache.commons.lang3.exception.ContextedException:199","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<java.lang.Object> getContextValues(final java.lang.String label) {\n    if (label == null) {\n        {\n            return org.apache.commons.lang3.exception.ContextedException.this.org.apache.commons.lang3.exception.ExceptionContext.getContextValues(label);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"label"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:738","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[327,328,329,326],"tindex":"3cc4c46e-3e51-11e6-bf2e-97b1a763b42f","method":{"position":"org.apache.commons.lang3.exception.ContextedException:190","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic org.apache.commons.lang3.exception.ContextedException setContextValue(final java.lang.String label, final java.lang.Object value) {\n    if (value == null) {\n        {\n            org.apache.commons.lang3.exception.ExceptionContext.setContextValue(label, value);\n            return org.apache.commons.lang3.exception.ContextedException.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:324","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[330],"tindex":"3cc4c46f-3e51-11e6-bf2e-61c17b9a8db0","method":{"position":"org.apache.commons.lang3.StringUtils:1073","type":"CtMethodImpl","sourcecode":"public static int indexOfIgnoreCase(final java.lang.CharSequence str, final java.lang.CharSequence searchStr) {\n    if (searchStr == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(str, searchStr, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"searchStr"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:929","type":"CtBinaryOperatorImpl","sourcecode":"i > 0"},"failures":[331,332,333],"tindex":"3cc4c470-3e51-11e6-bf2e-d1a1f2dffb07","method":{"position":"org.apache.commons.lang3.CharSequenceUtils:144","type":"CtMethodImpl","sourcecode":"static int lastIndexOf(final java.lang.CharSequence cs, final java.lang.CharSequence searchChar, final int start) {\n    if (start > 0) {\n        {\n            return cs.toString().lastIndexOf(searchChar.toString(), start);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"start"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:461","type":"CtInvocationImpl","sourcecode":"str.startsWith(pfx)"},"failures":[],"tindex":"3cc4eb81-3e51-11e6-bf2e-c3054446ce8a","method":{"position":"org.apache.commons.lang3.text.translate.CodePointTranslator:36","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic final int translate(final java.lang.CharSequence input, final int index, final java.io.Writer out) throws java.io.IOException {\n    if (input.startsWith(input)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            final int int = java.lang.Character.codePointAt(input, index);\n            final boolean boolean = translate(codepoint, out);\n            return consumed ? 1 : 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"input","pfx":"input"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:845","type":"CtBinaryOperatorImpl","sourcecode":"varValue == null"},"failures":[334,335,336,337,338,339,340,341,342,343,344,345,346,347,348],"tindex":"3cc4eb82-3e51-11e6-bf2e-eb7b34ff9fd4","method":{"position":"org.apache.commons.lang3.StringUtils:4170","type":"CtMethodImpl","sourcecode":"public static java.lang.String deleteWhitespace(final java.lang.String str) {\n    if (str == null) {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n                return str;\n            } \n            final int int = str.length();\n            final char[] char[] = new char[sz];\n            int int = 0;\n            for (int int = 0 ; i < sz ; i++) {\n                if (!(java.lang.Character.isWhitespace(str.charAt(i)))) {\n                    chs[(count++)] = str.charAt(i);\n                } \n            }\n            if (count == sz) {\n                return str;\n            } \n            return new java.lang.String(chs , 0 , count);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"varValue":"str"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:1009","type":"CtBinaryOperatorImpl","sourcecode":"toString != null"},"failures":[349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393],"tindex":"3cc4eb83-3e51-11e6-bf2e-8b4b771d4f28","method":{"position":"org.apache.commons.lang3.time.FastDateParser:675","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nvoid setCalendar(final org.apache.commons.lang3.time.FastDateParser parser, final java.util.Calendar cal, final java.lang.String value) {\n    if (value != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            cal.set(int, modify(java.lang.Integer.parseInt(value)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toString":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:523","type":"CtVariableReadImpl","sourcecode":"detail"},"failures":[],"tindex":"3cc51294-3e51-11e6-bf2e-47936b87e901","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:275","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final boolean value) {\n    if (value) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, value);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"detail":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:70","type":"CtBinaryOperatorImpl","sourcecode":"pattern == null"},"failures":[394],"tindex":"3cc51295-3e51-11e6-bf2e-85aad4e98a57","method":{"position":"org.apache.commons.lang3.StringUtils:2449","type":"CtMethodImpl","sourcecode":"public static java.lang.String substringBetween(final java.lang.String str, final java.lang.String tag) {\n    if (str == null) {\n        {\n            return org.apache.commons.lang3.StringUtils.substringBetween(str, tag, tag);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pattern":"str"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:371","type":"CtInvocationImpl","sourcecode":"value.equals(nullValue)"},"failures":[395],"tindex":"3cc51296-3e51-11e6-bf2e-7986f511e757","method":{"position":"org.apache.commons.lang3.mutable.MutableFloat:188","type":"CtMethodImpl","sourcecode":"public void subtract(final java.lang.Number operand) {\n    if (operand.equals(operand)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.mutable.MutableFloat.this.float -= operand.floatValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"operand","nullValue":"operand"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:543","type":"CtBinaryOperatorImpl","sourcecode":"value instanceof boolean[]"},"failures":[],"tindex":"3cc539a7-3e51-11e6-bf2e-dbd7a505e8a9","method":{"position":"org.apache.commons.lang3.mutable.MutableShort:245","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof boolean[]) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj instanceof org.apache.commons.lang3.mutable.MutableShort) {\n                return (short) == (((org.apache.commons.lang3.mutable.MutableShort)(obj)).shortValue());\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharEncoding:95","type":"CtBinaryOperatorImpl","sourcecode":"name == null"},"failures":[],"tindex":"3cc539a8-3e51-11e6-bf2e-f95842f91a51","method":{"position":"org.apache.commons.lang3.text.StrBuilder:477","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic org.apache.commons.lang3.text.StrBuilder append(final java.lang.CharSequence seq) {\n    if (seq == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (seq == null) {\n                return appendNull();\n            } \n            return append(seq.toString());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"seq"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:592","type":"CtBinaryOperatorImpl","sourcecode":"u > 0"},"failures":[396],"tindex":"3cc539a9-3e51-11e6-bf2e-8f18b91e0007","method":{"position":"org.apache.commons.lang3.math.Fraction:675","type":"CtMethodImpl","sourcecode":"private static int addAndCheck(final int x, final int y) {\n    if (y > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final long long = ((long)(x)) + ((long)(y));\n            if ((s < (java.lang.Integer.java.lang.Integer.int)) || (s > (java.lang.Integer.java.lang.Integer.int))) {\n                throw new java.lang.ArithmeticException(\"overflow: add\");\n            } \n            return ((int)(s));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"u":"y"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.text.ParseException","condition":{"position":"org.apache.commons.lang3.StringUtils:4997","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[],"tindex":"3cc539aa-3e51-11e6-bf2e-abe573d0f43a","method":{"position":"org.apache.commons.lang3.time.DateUtils:332","type":"CtMethodImpl","sourcecode":"public static java.util.Date parseDateStrictly(final java.lang.String str, final java.util.Locale locale, final java.lang.String... parsePatterns) throws java.text.ParseException {\n    if (str.equals(str)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.text.ParseException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.text.ParseException();\n            } else {\n                {\n                    return org.apache.commons.lang3.time.DateUtils.parseDateWithLeniency(str, null, parsePatterns, false);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:726","type":"CtBinaryOperatorImpl","sourcecode":"strLen > 0"},"failures":[397],"tindex":"3cc560bb-3e51-11e6-bf2e-0573ebb2fc5b","method":{"position":"org.apache.commons.lang3.time.DateUtils:1289","type":"CtMethodImpl","sourcecode":"public static long getFragmentInMilliseconds(final java.util.Date date, final int fragment) {\n    if (fragment > 0) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"strLen":"fragment"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:771","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[398],"tindex":"3cc560bc-3e51-11e6-bf2e-e55789f6a3ef","method":{"position":"org.apache.commons.lang3.ArrayUtils:1281","type":"CtMethodImpl","sourcecode":"public static boolean isSameLength(final short[] array1, final short[] array2) {\n    if (array2 == array1) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((((array1 == null) && (array2 != null)) && ((array2.int) > 0)) || (((array2 == null) && (array1 != null)) && ((array1.int) > 0))) || (((array1 != null) && (array2 != null)) && ((array1.int) != (array2.int)))) {\n                return false;\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array2","rhs":"array1"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5125","type":"CtBinaryOperatorImpl","sourcecode":"repeat <= 0"},"failures":[399],"tindex":"3cc560bd-3e51-11e6-bf2e-b3cc03b850a2","method":{"position":"org.apache.commons.lang3.Conversion:1356","type":"CtMethodImpl","sourcecode":"public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n    if (nBytes <= 0) {\n        {\n            if (0 == nBytes) {\n                return dst;\n            } \n            if ((((nBytes - 1) * 8) + srcPos) >= 16) {\n                throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n            } \n            int int = 0;\n            for (int int = 0 ; i < nBytes ; i++) {\n                shift = (i * 8) + srcPos;\n                dst[(dstPos + i)] = ((byte)(255 & (src >> shift)));\n            }\n            return dst;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"repeat":"nBytes"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1744","type":"CtBinaryOperatorImpl","sourcecode":"len > 0"},"failures":[400],"tindex":"3cc587ce-3e51-11e6-bf2e-6b5d2e318b7a","method":{"position":"org.apache.commons.lang3.ArrayUtils:4677","type":"CtMethodImpl","sourcecode":"public static boolean[] remove(final boolean[] array, final int index) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((boolean[])(org.apache.commons.lang3.ArrayUtils.remove(((java.lang.Object)(array)), index)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:221","type":"CtInvocationImpl","sourcecode":"java.lang.Double.isNaN(a)"},"failures":[],"tindex":"3cc587cf-3e51-11e6-bf2e-0f10c11e95e0","method":{"position":"org.apache.commons.lang3.mutable.MutableDouble:96","type":"CtMethodImpl","sourcecode":"public void setValue(final double value) {\n    if (java.lang.Double.isNaN(value)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.mutable.MutableDouble.this.double = value;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDateParser:160","type":"CtInvocationImpl","sourcecode":"currentStrategy.addRegex(org.apache.commons.lang3.time.FastDateParser.this, regex)"},"failures":[],"tindex":"3cc587d0-3e51-11e6-bf2e-f916fa7992bd","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:178","type":"CtMethodImpl","sourcecode":"public static java.lang.String reflectionToString(final java.lang.Object object, final org.apache.commons.lang3.builder.ToStringStyle style, final boolean outputTransients) {\n    return org.apache.commons.lang3.builder.ReflectionToStringBuilder.toString(object, style, outputTransients, false, null);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"regex":"object","this":"object","currentStrategy":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1361","type":"CtBinaryOperatorImpl","sourcecode":"i > 0"},"failures":[401],"tindex":"3cc5aee1-3e51-11e6-bf2e-993a3d38fa14","method":{"position":"org.apache.commons.lang3.StringUtils:2785","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] splitByWholeSeparatorPreserveAllTokens(final java.lang.String str, final java.lang.String separator, final int max) {\n    if (max > 0) {\n        {\n            return org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(str, separator, max, true);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"max"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:509","type":"CtVariableReadImpl","sourcecode":"detail"},"failures":[61,62],"tindex":"3cc5aee2-3e51-11e6-bf2e-0f1a752b9514","method":{"position":"org.apache.commons.lang3.CharSetUtils:221","type":"CtMethodImpl","sourcecode":"private static java.lang.String modify(final java.lang.String str, final java.lang.String[] set, final boolean expect) {\n    if (expect) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.lang3.CharSet org.apache.commons.lang3.CharSet = org.apache.commons.lang3.CharSet.getInstance(set);\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(str.length());\n            final char[] char[] = str.toCharArray();\n            final int int = chrs.int;\n            for (int int = 0 ; i < sz ; i++) {\n                if ((chars.contains(chrs[i])) == expect) {\n                    buffer.append(chrs[i]);\n                } \n            }\n            return buffer.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"detail":"expect"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.StringUtils:2290","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (separator == null)"},"failures":[],"tindex":"3cc5aee3-3e51-11e6-bf2e-9df457b38734","method":{"position":"org.apache.commons.lang3.ObjectUtils:292","type":"CtMethodImpl","sourcecode":"public static void identityToString(final java.lang.Appendable appendable, final java.lang.Object object) throws java.io.IOException {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(object)) || (object == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (object == null) {\n                throw new java.lang.NullPointerException(\"Cannot get the toString of a null identity\");\n            } \n            appendable.append(object.getClass().getName()).append('@').append(java.lang.Integer.toHexString(java.lang.System.identityHashCode(object)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"object","separator":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:255","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"3cc5d5f4-3e51-11e6-bf2e-9fa310c1d7eb","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1358","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final float[] array) {\n    if (fieldName == null) {\n        {\n            buffer.append(java.lang.String);\n            for (int int = 0 ; i < (array.int) ; i++) {\n                if (i > 0) {\n                    buffer.append(java.lang.String);\n                } \n                appendDetail(buffer, fieldName, array[i]);\n            }\n            buffer.append(java.lang.String);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2228","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[402],"tindex":"3cc5d5f5-3e51-11e6-bf2e-4d6974b76d2e","method":{"position":"org.apache.commons.lang3.ArrayUtils:4232","type":"CtMethodImpl","sourcecode":"public static short[] add(final short[] array, final short element) {\n    if (array == null) {\n        {\n            final short[] short[] = ((short[])(org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(array, java.lang.Short.java.lang.Short.java.lang.Class<java.lang.Short>)));\n            newArray[((newArray.int) - 1)] = element;\n            return newArray;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2245","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[2],"tindex":"3cc5d5f6-3e51-11e6-bf2e-c71ec45500ce","method":{"position":"org.apache.commons.lang3.StringUtils:524","type":"CtMethodImpl","sourcecode":"public static java.lang.String stripToNull(java.lang.String str) {\n    if (str == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return null;\n            } \n            str = org.apache.commons.lang3.StringUtils.strip(str, null);\n            return str.isEmpty() ? null : str;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2805","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[403,404],"tindex":"3cc5d5f7-3e51-11e6-bf2e-857e842cfeab","method":{"position":"org.apache.commons.lang3.Validate:567","type":"CtMethodImpl","sourcecode":"public static <T extends java.lang.Iterable<?>>T noNullElements(final T iterable, final java.lang.String message, final java.lang.Object... values) {\n    if (message == null) {\n        {\n            org.apache.commons.lang3.Validate.notNull(iterable);\n            int int = 0;\n            for (final java.util.Iterator<?> java.util.Iterator<?> = iterable.iterator() ; it.hasNext() ; i++) {\n                if ((it.next()) == null) {\n                    final java.lang.Object[] java.lang.Object[] = org.apache.commons.lang3.ArrayUtils.addAll(values, java.lang.Integer.valueOf(i));\n                    throw new java.lang.IllegalArgumentException(java.lang.String.format(message, values2));\n                } \n            }\n            return iterable;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"message"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:683","type":"CtBinaryOperatorImpl","sourcecode":"toTypeVariable == null"},"failures":[],"tindex":"3cc5fd08-3e51-11e6-bf2e-951de866efea","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1161","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Type[] getImplicitBounds(final java.lang.reflect.TypeVariable<?> typeVariable) {\n    if (typeVariable == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.notNull(typeVariable, \"typeVariable is null\");\n            final java.lang.reflect.Type[] java.lang.reflect.Type[] = typeVariable.getBounds();\n            return (bounds.int) == 0 ? new java.lang.reflect.Type[]{ java.lang.Object.java.lang.Object.java.lang.Class } : org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds(bounds);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toTypeVariable":"typeVariable"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.FieldUtils:172","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.lang3.reflect.MemberUtils.isAccessible(field))"},"failures":[],"tindex":"3cc5fd09-3e51-11e6-bf2e-fb1e6ea0a7f3","method":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:479","type":"CtMethodImpl","sourcecode":"protected boolean accept(final java.lang.reflect.Field field) {\n    if (!(org.apache.commons.lang3.reflect.MemberUtils.isAccessible(field))) {\n        {\n            if ((field.getName().indexOf(org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.char)) != (-1)) {\n                return false;\n            } \n            if ((java.lang.reflect.Modifier.isTransient(field.getModifiers())) && (!(org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.isAppendTransients()))) {\n                return false;\n            } \n            if ((java.lang.reflect.Modifier.isStatic(field.getModifiers())) && (!(org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.isAppendStatics()))) {\n                return false;\n            } \n            if (((org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.java.lang.String[]) != null) && ((java.util.Arrays.binarySearch(org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.java.lang.String[], field.getName())) >= 0)) {\n                return false;\n            } \n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"field"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:728","type":"CtBinaryOperatorImpl","sourcecode":"classes == null"},"failures":[],"tindex":"3cc6241a-3e51-11e6-bf2e-97597793a9ae","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1125","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Type[] normalizeUpperBounds(final java.lang.reflect.Type[] bounds) {\n    if (bounds == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.notNull(bounds, \"null value specified for bounds array\");\n            if ((bounds.int) < 2) {\n                return bounds;\n            } \n            final java.util.Set<java.lang.reflect.Type> java.util.Set<java.lang.reflect.Type> = new java.util.HashSet<java.lang.reflect.Type>(bounds.int);\n            for (final java.lang.reflect.Type java.lang.reflect.Type : bounds) {\n                boolean boolean = false;\n                for (final java.lang.reflect.Type java.lang.reflect.Type : bounds) {\n                    if ((type1 != type2) && (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(type2, type1, null))) {\n                        subtypeFound = true;\n                        break;\n                    } \n                }\n                if (!subtypeFound) {\n                    types.add(type1);\n                } \n            }\n            return types.toArray(new java.lang.reflect.Type[types.size()]);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classes":"bounds"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:800","type":"CtFieldReadImpl","sourcecode":"objectsTriviallyEqual"},"failures":[405,406],"tindex":"3cc6241b-3e51-11e6-bf2e-d94a866c11eb","method":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:388","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean cancel(final boolean mayInterruptIfRunning) {\n    if (mayInterruptIfRunning) {\n        {\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsTriviallyEqual":"mayInterruptIfRunning"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:115","type":"CtBinaryOperatorImpl","sourcecode":"codepoint > 65535"},"failures":[407],"tindex":"3cc6241c-3e51-11e6-bf2e-7781c0b195da","method":{"position":"org.apache.commons.lang3.Conversion:759","type":"CtMethodImpl","sourcecode":"public static int shortArrayToInt(final short[] src, final int srcPos, final int dstInit, final int dstPos, final int nShorts) {\n    if (dstPos > 65535) {\n        {\n            if ((((src.int) == 0) && (srcPos == 0)) || (0 == nShorts)) {\n                return dstInit;\n            } \n            if ((((nShorts - 1) * 16) + dstPos) >= 32) {\n                throw new java.lang.IllegalArgumentException(\"(nShorts-1)*16+dstPos is greather or equal to than 32\");\n            } \n            int int = dstInit;\n            int int = 0;\n            for (int int = 0 ; i < nShorts ; i++) {\n                shift = (i * 16) + dstPos;\n                final int int = (65535 & (src[(i + srcPos)])) << shift;\n                final int int = 65535 << shift;\n                out = (out & (~mask)) | bits;\n            }\n            return out;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"codepoint":"dstPos"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4941","type":"CtBinaryOperatorImpl","sourcecode":"overlay == null"},"failures":[408,409,410,411],"tindex":"3cc64b2d-3e51-11e6-bf2e-3db1d9005d91","method":{"position":"org.apache.commons.lang3.BooleanUtils:881","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(final boolean bool, final java.lang.String trueString, final java.lang.String falseString) {\n    if (trueString == null) {\n        {\n            return bool ? trueString : falseString;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"overlay":"trueString"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:425","type":"CtBinaryOperatorImpl","sourcecode":"customPattern != null"},"failures":[],"tindex":"3cc64b2e-3e51-11e6-bf2e-7739cf4d223e","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:212","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final byte lhs, final byte rhs) {\n    if (fieldName != null) {\n        {\n            if (fieldName == null) {\n                throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n            } \n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if (lhs != rhs) {\n                java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Byte>(fieldName) {\n                    private static final long serialVersionUID = 1L;\n\n                    @java.lang.Override\n                    public java.lang.Byte getLeft() {\n                        return java.lang.Byte.valueOf(lhs);\n                    }\n\n                    @java.lang.Override\n                    public java.lang.Byte getRight() {\n                        return java.lang.Byte.valueOf(rhs);\n                    }\n                });\n            } \n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"customPattern":"fieldName"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.text.ParseException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:735","type":"CtInvocationImpl","sourcecode":"str.equals(falseString)"},"failures":[],"tindex":"3cc6723f-3e51-11e6-bf2e-3935c64f13f9","method":{"position":"org.apache.commons.lang3.time.DateUtils:332","type":"CtMethodImpl","sourcecode":"public static java.util.Date parseDateStrictly(final java.lang.String str, final java.util.Locale locale, final java.lang.String... parsePatterns) throws java.text.ParseException {\n    if (str.equals(str)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.text.ParseException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.text.ParseException();\n            } else {\n                {\n                    return org.apache.commons.lang3.time.DateUtils.parseDateWithLeniency(str, null, parsePatterns, false);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str","falseString":"str"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:1108","type":"CtBinaryOperatorImpl","sourcecode":"(tokens) == null"},"failures":[412],"tindex":"3cc67240-3e51-11e6-bf2e-a1838629ef89","method":{"position":"org.apache.commons.lang3.ArrayUtils:237","type":"CtMethodImpl","sourcecode":"public static java.util.Map<java.lang.Object, java.lang.Object> toMap(final java.lang.Object[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } \n            final java.util.Map<java.lang.Object, java.lang.Object> java.util.Map<java.lang.Object, java.lang.Object> = new java.util.HashMap<java.lang.Object, java.lang.Object>(((int)((array.int) * 1.5)));\n            for (int int = 0 ; i < (array.int) ; i++) {\n                final java.lang.Object java.lang.Object = array[i];\n                if (object instanceof java.util.Map.Entry<?, ?>) {\n                    final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(object));\n                    map.put(entry.getKey(), entry.getValue());\n                } else if (object instanceof java.lang.Object[]) {\n                    final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(object));\n                    if ((entry.int) < 2) {\n                        throw new java.lang.IllegalArgumentException(((((\"Array element \" + i) + \", '\") + object) + \"', has a length less than 2\"));\n                    } \n                    map.put(entry[0], entry[1]);\n                } else {\n                    throw new java.lang.IllegalArgumentException(((((\"Array element \" + i) + \", '\") + object) + \"', is neither of type Map.Entry nor an Array\"));\n                }\n            }\n            return map;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"tokens":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:682","type":"CtUnaryOperatorImpl","sourcecode":"!(java.util.Arrays.equals(lhs, rhs))"},"failures":[],"tindex":"3cc69951-3e51-11e6-bf2e-150ec40d51a4","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:457","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final long[] array) {\n    if (!(java.util.Arrays.equals(array, array))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, array, null);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array","rhs":"array"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2171","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[],"tindex":"3cc69952-3e51-11e6-bf2e-9763e75436d6","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:675","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final int value) {\n    if (value < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendFieldStart(buffer, fieldName);\n            appendDetail(buffer, fieldName, value);\n            appendFieldEnd(buffer, fieldName);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:6085","type":"CtBinaryOperatorImpl","sourcecode":"count > 0"},"failures":[],"tindex":"3cc69953-3e51-11e6-bf2e-7767240f2d4a","method":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:84","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.translate.UnicodeEscaper outsideOf(final int codepointLow, final int codepointHigh) {\n    if (codepointHigh > 0) {\n        {\n            return new org.apache.commons.lang3.text.translate.UnicodeEscaper(codepointLow , codepointHigh , false);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"codepointHigh"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:1009","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[413],"tindex":"3cc69954-3e51-11e6-bf2e-17db6055bb28","method":{"position":"org.apache.commons.lang3.BooleanUtils:1073","type":"CtMethodImpl","sourcecode":"public static java.lang.Boolean xor(final java.lang.Boolean... array) {\n    if (array == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n            } \n            if ((array.int) == 0) {\n                throw new java.lang.IllegalArgumentException(\"Array is empty\");\n            } \n            try {\n                final boolean[] boolean[] = org.apache.commons.lang3.ArrayUtils.toPrimitive(array);\n                return org.apache.commons.lang3.BooleanUtils.xor(primitive) ? java.lang.Boolean.java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n            } catch (final java.lang.NullPointerException ex) {\n                throw new java.lang.IllegalArgumentException(\"The array must not contain any null elements\");\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:131","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[57,414,415],"tindex":"3cc6c065-3e51-11e6-bf2e-35f181b04c67","method":{"position":"org.apache.commons.lang3.StringUtils:2946","type":"CtMethodImpl","sourcecode":"private static java.lang.String[] splitWorker(final java.lang.String str, final char separatorChar, final boolean preserveAllTokens) {\n    if (str == null) {\n        {\n            if (str == null) {\n                return null;\n            } \n            final int int = str.length();\n            if (len == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.String[];\n            } \n            final java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n            int int = 0;\n            int int = 0;\n            boolean boolean = false;\n            boolean boolean = false;\n            while (i < len) {\n                if ((str.charAt(i)) == separatorChar) {\n                    if (match || preserveAllTokens) {\n                        list.add(str.substring(start, i));\n                        match = false;\n                        lastMatch = true;\n                    } \n                    start = ++i;\n                    continue;\n                } \n                lastMatch = false;\n                match = true;\n                i++;\n            }\n            if (match || (preserveAllTokens && lastMatch)) {\n                list.add(str.substring(start, i));\n            } \n            return list.toArray(new java.lang.String[list.size()]);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"str"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:657","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[416],"tindex":"3cc6c066-3e51-11e6-bf2e-c1767b7f9f48","method":{"position":"org.apache.commons.lang3.StringUtils:5587","type":"CtMethodImpl","sourcecode":"public static java.lang.String upperCase(final java.lang.String str) {\n    if (str == null) {\n        {\n            if (str == null) {\n                return null;\n            } \n            return str.toUpperCase();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2025","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[417,418],"tindex":"3cc6c067-3e51-11e6-bf2e-570aaa52423a","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1547","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder insert(final int index, final char[] chars, final int offset, final int length) {\n    if (offset < 0) {\n        {\n            validateIndex(index);\n            if (chars == null) {\n                return insert(index, java.lang.String);\n            } \n            if ((offset < 0) || (offset > (chars.int))) {\n                throw new java.lang.StringIndexOutOfBoundsException((\"Invalid offset: \" + offset));\n            } \n            if ((length < 0) || ((offset + length) > (chars.int))) {\n                throw new java.lang.StringIndexOutOfBoundsException((\"Invalid length: \" + length));\n            } \n            if (length > 0) {\n                ensureCapacity(((int) + length));\n                java.lang.System.arraycopy(char[], index, char[], (index + length), ((int) - index));\n                java.lang.System.arraycopy(chars, offset, char[], index, length);\n                int += length;\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"offset"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1153","type":"CtBinaryOperatorImpl","sourcecode":"b < a"},"failures":[],"tindex":"3cc6e778-3e51-11e6-bf2e-d98bb967ef09","method":{"position":"org.apache.commons.lang3.mutable.MutableByte:158","type":"CtMethodImpl","sourcecode":"public void subtract(final byte operand) {\n    if (operand < operand) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.mutable.MutableByte.this.byte -= operand;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"operand","b":"operand"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:327","type":"CtBinaryOperatorImpl","sourcecode":"cls == null"},"failures":[419,420],"tindex":"3cc6e779-3e51-11e6-bf2e-db5992347d64","method":{"position":"org.apache.commons.lang3.reflect.InheritanceUtils:49","type":"CtMethodImpl","sourcecode":"public static int distance(final java.lang.Class<?> child, final java.lang.Class<?> parent) {\n    if (parent == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236082873/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((child == null) || (parent == null)) {\n                return -1;\n            } \n            if (child.equals(parent)) {\n                return 0;\n            } \n            final java.lang.Class<?> java.lang.Class<?> = child.getSuperclass();\n            int int = org.apache.commons.lang3.BooleanUtils.toInteger(parent.equals(cParent));\n            if (d == 1) {\n                return d;\n            } else {\n                d += org.apache.commons.lang3.reflect.InheritanceUtils.distance(cParent, parent);\n                return d > 0 ? d + 1 : -1;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"parent"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}