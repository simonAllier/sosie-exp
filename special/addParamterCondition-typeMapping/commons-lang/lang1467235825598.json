{"failureDictionary":{"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":277,"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":239,"org.apache.commons.lang3.ArrayUtilsTest.testSameLengthBoolean":343,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":101,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":103,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":115,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":97,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":100,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedFieldForceAccess":215,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":291,"org.apache.commons.lang3.tuple.TripleTest.testComparable2":172,"org.apache.commons.lang3.tuple.TripleTest.testComparable1":171,"org.apache.commons.lang3.tuple.TripleTest.testComparable4":174,"org.apache.commons.lang3.tuple.TripleTest.testComparable3":173,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":240,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":276,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":335,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":310,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":34,"org.apache.commons.lang3.builder.DiffResultTest.testListIsNonModifiable":266,"org.apache.commons.lang3.concurrent.CallableBackgroundInitializerTest.testInitExecutor":345,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":1,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStripAll":209,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArrayEqualAsObject":251,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":77,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":339,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":120,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":154,"org.apache.commons.lang3.builder.CompareToBuilderTest.testByteArrayHiddenByObject":180,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":122,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":24,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":248,"org.apache.commons.lang3.concurrent.CallableBackgroundInitializerTest.testInitialize":344,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":295,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":290,"org.apache.commons.lang3.StringUtilsTest.testIsNoneBlank":322,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":72,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":337,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":155,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":237,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePartialString_noReplace":14,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVEmpty":160,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml11":142,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":292,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":116,"org.apache.commons.lang3.builder.DiffResultTest.testNullRhs":270,"org.apache.commons.lang3.math.NumberUtilsTest.testToLongString":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":105,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":89,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":118,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfLong":324,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":3,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":158,"org.apache.commons.lang3.tuple.PairTest.testComparable2":176,"org.apache.commons.lang3.tuple.PairTest.testComparable1":175,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":93,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":36,"org.apache.commons.lang3.builder.CompareToBuilderTest.testObjectBuild":177,"org.apache.commons.lang3.CharEncodingTest.testSupported":326,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":83,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_String_int_int":16,"org.apache.commons.lang3.mutable.MutableShortTest.testGetSet":206,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":340,"org.apache.commons.lang3.reflect.InheritanceUtilsTest.testDistanceDisjoint":166,"org.apache.commons.lang3.exception.ExceptionUtilsTest.test_getRootCauseMessage_Throwable":126,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":27,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementFloatArray":168,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":60,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":29,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfInt":140,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":31,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":96,"org.apache.commons.lang3.builder.CompareToBuilderTest.testCharArrayHiddenByObject":186,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StringBuilder_int_int":17,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":28,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionCompare":181,"org.apache.commons.lang3.builder.CompareToBuilderTest.testObjectEx2":185,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementIntArray":137,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":110,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":279,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSizeStartText":297,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":308,"org.apache.commons.lang3.AnnotationUtilsTest.testNonEquivalentAnnotationsOfSameType":227,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfDoubleTolerance":316,"org.apache.commons.lang3.CharEncodingTest.testNotSupported":327,"org.apache.commons.lang3.ArrayUtilsTest.testSameLengthByte":212,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":75,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":271,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":111,"org.apache.commons.lang3.builder.CompareToBuilderTest.testObject":192,"org.apache.commons.lang3.ArrayUtilsTest.testContainsDoubleTolerance":123,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":50,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":336,"org.apache.commons.lang3.AnnotationUtilsTest.testSameInstance":221,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":7,"org.apache.commons.lang3.StringUtilsTest.testUnescapeSurrogatePairs":204,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":244,"org.apache.commons.lang3.CharEncodingTest.testWorksOnJava1_1_8":328,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":45,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementIntArray":138,"org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayOfDoubles":346,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":286,"org.apache.commons.lang3.AnnotationUtilsTest.testBothArgsNull":226,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":68,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":8,"org.apache.commons.lang3.CharEncodingTest.testMustBeSupportedJava1_3_1":325,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":309,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":109,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":99,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetNullText":299,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":232,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":250,"org.apache.commons.lang3.StringUtilsTest.testIsAnyBlank":321,"org.apache.commons.lang3.AnnotationUtilsTest.testEquivalence":222,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":51,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":57,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":341,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":314,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendAll_Iterator":202,"org.apache.commons.lang3.text.StrBuilderTest.testAsWriter":15,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":256,"org.apache.commons.lang3.AnnotationUtilsTest.testOneArgNull":219,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":294,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetContentEnd":296,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":161,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAlphaNumeric":143,"org.apache.commons.lang3.CharEncodingTest.testWorksOnJava1_2_2":329,"org.apache.commons.lang3.text.StrBuilderTest.testLang294":211,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":67,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":242,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":261,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":280,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":82,"org.apache.commons.lang3.builder.DiffResultTest.testNullList":264,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testShortArray":128,"org.apache.commons.lang3.ArrayUtilsTest.testContainsInt":139,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":113,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":62,"org.apache.commons.lang3.builder.DiffBuilderTest.testStylePassedToDiffResult":246,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":119,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":85,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":104,"org.apache.commons.lang3.ObjectUtilsTest.testComparatorMedian":148,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":76,"org.apache.commons.lang3.StringUtilsTest.testRemove_char":218,"org.apache.commons.lang3.reflect.InheritanceUtilsTest.testDistanceReverseParentChild":164,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_String_int_int":18,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":273,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":55,"org.apache.commons.lang3.text.StrTokenizerTest.testChaining":162,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":2,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":333,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":121,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testBlank":229,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":313,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":195,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":117,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":263,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":63,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":243,"org.apache.commons.lang3.builder.DiffResultTest.testIterator":268,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":92,"org.apache.commons.lang3.builder.DiffResultTest.testNoDifferencesString":265,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":49,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":312,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":12,"org.apache.commons.lang3.math.NumberUtilsTest.testToIntString":203,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":47,"org.apache.commons.lang3.ConversionTest.testShortArrayToLong":213,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":87,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":236,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":70,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":46,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedField":214,"org.apache.commons.lang3.text.StrMatcherTest.testCharSetMatcher_charArray":124,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":284,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":231,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":238,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":13,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":35,"org.apache.commons.lang3.BooleanUtilsTest.test_toInteger_boolean":167,"org.apache.commons.lang3.math.NumberUtilsTest.testLang300":217,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":52,"org.apache.commons.lang3.BooleanUtilsTest.test_toStringYesNo_Boolean":207,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":257,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":272,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":95,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberFailure_1":199,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":53,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberFailure_4":200,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testArrayList":233,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtilsHomog":147,"org.apache.commons.lang3.builder.CompareToBuilderTest.testObjectArrayHiddenByObject":182,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":253,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":66,"org.apache.commons.lang3.builder.DiffBuilderTest.testSimilarObjectIgnoresAppends":249,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testBlank":275,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":65,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementFloatArray":169,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":285,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":288,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":157,"org.apache.commons.lang3.builder.DiffResultTest.testNullStyle":267,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":54,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":262,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":26,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":198,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_Object":331,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":88,"org.apache.commons.lang3.ObjectUtilsTest.testComparatorMedian_nullItems":150,"org.apache.commons.lang3.AnnotationUtilsTest.testAnnotationsOfDifferingTypes":223,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":252,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testCopyOnWriteArrayList":234,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":74,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":32,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":40,"org.apache.commons.lang3.ObjectUtilsTest.testComparatorMedian_emptyItems":149,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":112,"org.apache.commons.lang3.builder.DiffResultTest.testNullLhs":269,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":156,"org.apache.commons.lang3.ArrayUtilsTest.testToString":21,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":37,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateTimeInstance":146,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetContentStart":298,"org.apache.commons.lang3.reflect.InheritanceUtilsTest.testDistanceGreaterThanZero":165,"org.apache.commons.lang3.builder.DiffBuilderTest.testNullLhs":259,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":281,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":41,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSummaryObjectEndText":307,"org.apache.commons.lang3.builder.CompareToBuilderTest.testFloatArrayHiddenByObject":190,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":4,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":230,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":247,"org.apache.commons.lang3.builder.CompareToBuilderTest.testBooleanArrayHiddenByObject":187,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":293,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":94,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":332,"org.apache.commons.lang3.builder.DiffBuilderTest.testSameObjectIgnoresAppends":255,"org.apache.commons.lang3.builder.CompareToBuilderTest.testAppendSuper":193,"org.apache.commons.lang3.exception.ExceptionUtilsTest.test_getMessage_Throwable":127,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":91,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSummaryObjectStartText":303,"org.apache.commons.lang3.AnnotationUtilsTest.testHashCode":224,"org.apache.commons.lang3.builder.CompareToBuilderTest.testIntArrayHiddenByObject":188,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":64,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":102,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteAll_String":210,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":153,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareExcludeFields":178,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":274,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetArraySeparator":305,"org.apache.commons.lang3.ValidateTest.testExclusiveBetweenLong":323,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyLong":318,"org.apache.commons.lang3.StringUtilsTest.testNormalizeSpace":320,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":44,"org.apache.commons.lang3.math.NumberUtilsTest.testLANG992":216,"org.apache.commons.lang3.text.StrTokenizerTest.testTSVEmpty":159,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":289,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":245,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":90,"org.apache.commons.lang3.text.StrMatcherTest.testCharSetMatcher_String":129,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyLongEmptyArray":319,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyStringNull":151,"org.apache.commons.lang3.builder.CompareToBuilderTest.testLongArrayHiddenByObject":184,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":79,"org.apache.commons.lang3.text.StrTokenizerTest.test8":136,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":282,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":342,"org.apache.commons.lang3.time.DateUtilsTest.testRound":194,"org.apache.commons.lang3.text.StrTokenizerTest.test5":22,"org.apache.commons.lang3.text.StrTokenizerTest.test4":133,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":80,"org.apache.commons.lang3.text.StrTokenizerTest.test7":135,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":81,"org.apache.commons.lang3.text.StrTokenizerTest.test6":134,"org.apache.commons.lang3.text.StrTokenizerTest.test1":130,"org.apache.commons.lang3.text.StrTokenizerTest.test3":132,"org.apache.commons.lang3.text.StrTokenizerTest.test2":131,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":56,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetFieldSeparator":304,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testLinkedList":235,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":311,"org.apache.commons.lang3.ArrayUtilsTest.testContainsDouble":347,"org.apache.commons.lang3.AnnotationUtilsTest.testIsValidAnnotationMemberType":228,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":254,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":278,"org.apache.commons.lang3.StringUtilsTest.testCaseFunctions":330,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfIntWithStartIndex":141,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareTransients":189,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":43,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringCharArray":145,"org.apache.commons.lang3.AnnotationUtilsTest.testGeneratedAnnotationEquivalentToRealAnnotation":225,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOfType_ThrowableClass":0,"org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss":201,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":258,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":84,"org.apache.commons.lang3.builder.CompareToBuilderTest.testShortArrayHiddenByObject":183,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":241,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":33,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":287,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":315,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayFloat":163,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetArrayEnd":302,"org.apache.commons.lang3.builder.DiffBuilderTest.testNullRhs":260,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":98,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":42,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":338,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetRootCause_Throwable":208,"org.apache.commons.lang3.math.NumberUtilsTest.testMinimumDouble":125,"org.apache.commons.lang3.ArrayUtilsTest.testCloneFloat":170,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":69,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":152,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":106,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":59,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateBigDecimal":197,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompare":179,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetArrayStart":306,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetFieldNameValueSeparator":301,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_StrMatcher":317,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":114,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":107,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":61,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":283,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":334,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":220,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils":144,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":11,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvString":205,"org.apache.commons.lang3.builder.CompareToBuilderTest.testDoubleArrayHiddenByObject":191,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":48,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":58,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSizeEndText":300,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":196,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":108,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":9,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":23},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:281","type":"CtBinaryOperatorImpl","sourcecode":"cls == null"},"failures":[0],"tindex":"b164a238-3e40-11e6-aaff-0566f0611e4a","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:347","type":"CtMethodImpl","sourcecode":"public static int indexOfType(final java.lang.Throwable throwable, final java.lang.Class<?> type) {\n    if (type == null) {\n        {\n            return org.apache.commons.lang3.exception.ExceptionUtils.indexOf(throwable, type, 0, true);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"type"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.CharSet:247","type":"CtBinaryOperatorImpl","sourcecode":"obj == (org.apache.commons.lang3.CharSet.this)"},"failures":[],"tindex":"b1658c99-3e40-11e6-aaff-4127122524a1","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:488","type":"CtMethodImpl","sourcecode":"public static void writeStaticField(final java.lang.reflect.Field field, final java.lang.Object value) throws java.lang.IllegalAccessException {\n    org.apache.commons.lang3.reflect.FieldUtils.writeStaticField(field, value, false);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"value","this":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2336","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"tindex":"b1658c9a-3e40-11e6-aaff-43a0edd82f6e","method":{"position":"org.apache.commons.lang3.text.StrBuilder:533","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder append(final java.lang.String str, final int startIndex, final int length) {\n    if (length < 0) {\n        {\n            if (str == null) {\n                return appendNull();\n            } \n            if ((startIndex < 0) || (startIndex > (str.length()))) {\n                throw new java.lang.StringIndexOutOfBoundsException(\"startIndex must be valid\");\n            } \n            if ((length < 0) || ((startIndex + length) > (str.length()))) {\n                throw new java.lang.StringIndexOutOfBoundsException(\"length must be valid\");\n            } \n            if (length > 0) {\n                final int int = length();\n                ensureCapacity((len + length));\n                str.getChars(startIndex, (startIndex + length), char[], len);\n                int += length;\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"length"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:255","type":"CtInvocationImpl","sourcecode":"java.lang.Float.isNaN(a)"},"failures":[19],"tindex":"b165dabb-3e40-11e6-aaff-0f1ffd3f99cd","method":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:241","type":"CtMethodImpl","sourcecode":"public static float max(final float a, final float b, final float c) {\n    if (java.lang.Float.isNaN(c)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.math.IEEE754rUtils.max(org.apache.commons.lang3.math.IEEE754rUtils.max(a, b), c);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"c"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:709","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[20],"tindex":"b165dabc-3e40-11e6-aaff-73996f87bd0e","method":{"position":"org.apache.commons.lang3.math.NumberUtils:169","type":"CtMethodImpl","sourcecode":"public static long toLong(final java.lang.String str, final long defaultValue) {\n    if (str == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return defaultValue;\n            } \n            try {\n                return java.lang.Long.parseLong(str);\n            } catch (final java.lang.NumberFormatException nfe) {\n                return defaultValue;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:391","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,39,40,40,41,42,42,43,44,44,45,45,46,47,48,49,50,50,51,51,52,52,53,53,54,55,55,56,57,58,59,60,61,62,63,64,64,65,66,67,67,68,69,70,70,71,71,72,73,74,74,75,76,77,78,78,79,80,81,82,82,83,84,84,85,85,86,87,87,88,88,89,90,90,91,92,93,94,95,95,96,96,97,98,98,99,100,100,101,102,102,103,104,105,106,107,108,109,109,110,110,111,112,113,114,115,116,117,118,119,120,121,122],"tindex":"b16601cd-3e40-11e6-aaff-c767dec9e199","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1502","type":"CtMethodImpl","sourcecode":"protected void appendNullText(final java.lang.StringBuffer buffer, final java.lang.String fieldName) {\n    if (fieldName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(java.lang.String);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"fieldName"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2559","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.ArrayUtils.isEmpty(array)"},"failures":[123],"tindex":"b16628de-3e40-11e6-aaff-a3c82dae1f89","method":{"position":"org.apache.commons.lang3.ArrayUtils:2731","type":"CtMethodImpl","sourcecode":"public static boolean contains(final double[] array, final double valueToFind, final double tolerance) {\n    if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n        {\n            return (org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0, tolerance)) != (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2378","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[124],"tindex":"b1664fef-3e40-11e6-aaff-87eb5266214f","method":{"position":"org.apache.commons.lang3.text.StrMatcher:173","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.StrMatcher charSetMatcher(final char... chars) {\n    if (chars == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((chars == null) || ((chars.int) == 0)) {\n                return org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher;\n            } \n            if ((chars.int) == 1) {\n                return new org.apache.commons.lang3.text.StrMatcher.CharMatcher(chars[0]);\n            } \n            return new org.apache.commons.lang3.text.StrMatcher.CharSetMatcher(chars);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"chars"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:224","type":"CtInvocationImpl","sourcecode":"java.lang.Double.isNaN(b)"},"failures":[125],"tindex":"b1667700-3e40-11e6-aaff-f9130bf679df","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1174","type":"CtMethodImpl","sourcecode":"public static double min(final double a, final double b, final double c) {\n    if (java.lang.Double.isNaN(c)) {\n        {\n            return java.lang.Math.min(java.lang.Math.min(a, b), c);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"c"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomUtils:115","type":"CtBinaryOperatorImpl","sourcecode":"startInclusive == endExclusive"},"failures":[],"tindex":"b1667701-3e40-11e6-aaff-bfcf53ed0fa8","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:781","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final long value) {\n    if (value == value) {\n        {\n            int = ((int) * (int)) + ((int)((value ^ (value >> 32))));\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startInclusive":"value","endExclusive":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:226","type":"CtBinaryOperatorImpl","sourcecode":"(getUncaughtExceptionHandler()) != null"},"failures":[],"tindex":"b1669e12-3e40-11e6-aaff-af9936f24298","method":{"position":"org.apache.commons.lang3.CharSet:246","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == (org.apache.commons.lang3.CharSet.this)) {\n        return true;\n    } \n    if ((obj instanceof org.apache.commons.lang3.CharSet) == false) {\n        return false;\n    } \n    final org.apache.commons.lang3.CharSet org.apache.commons.lang3.CharSet = ((org.apache.commons.lang3.CharSet)(obj));\n    return java.util.Set<org.apache.commons.lang3.CharRange>.equals(other.java.util.Set<org.apache.commons.lang3.CharRange>);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:517","type":"CtBinaryOperatorImpl","sourcecode":"throwable == null"},"failures":[126,127],"tindex":"b166c523-3e40-11e6-aaff-a7ff54977b90","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:671","type":"CtMethodImpl","sourcecode":"public static java.lang.String getMessage(final java.lang.Throwable th) {\n    if (th == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (th == null) {\n                {\n                    if (th == null) {\n                        return \"\";\n                    } \n                    final java.lang.String java.lang.String = org.apache.commons.lang3.ClassUtils.getShortClassName(th, null);\n                    final java.lang.String java.lang.String = th.getMessage();\n                    return (clsName + \": \") + (org.apache.commons.lang3.StringUtils.defaultString(msg));\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"throwable":"th"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3850","type":"CtBinaryOperatorImpl","sourcecode":"array1 == null"},"failures":[128],"tindex":"b166ec34-3e40-11e6-aaff-6d492f708a96","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:893","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final short[] array) {\n    if (array == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                int = (int) * (int);\n            } else {\n                for (final short short : array) {\n                    append(element);\n                }\n            }\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array1":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:202","type":"CtBinaryOperatorImpl","sourcecode":"(tmp.length()) != (duration.length())"},"failures":[129],"tindex":"b1671345-3e40-11e6-aaff-8fc6a66dd00e","method":{"position":"org.apache.commons.lang3.text.StrMatcher:189","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.StrMatcher charSetMatcher(final java.lang.String chars) {\n    if ((chars.length()) != (chars.length())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(chars)) {\n                return org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher;\n            } \n            if ((chars.length()) == 1) {\n                return new org.apache.commons.lang3.text.StrMatcher.CharMatcher(chars.charAt(0));\n            } \n            return new org.apache.commons.lang3.text.StrMatcher.CharSetMatcher(chars.toCharArray());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"duration":"chars","tmp":"chars"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:105","type":"CtBinaryOperatorImpl","sourcecode":"(codepoint < (below)) || (codepoint > (above))"},"failures":[],"tindex":"b1673a56-3e40-11e6-aaff-8b73bb156d80","method":{"position":"org.apache.commons.lang3.text.translate.JavaUnicodeEscaper:49","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.translate.JavaUnicodeEscaper below(final int codepoint) {\n    if ((codepoint < codepoint) || (codepoint > codepoint)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.outsideOf(codepoint, java.lang.Integer.java.lang.Integer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"codepoint":"codepoint","below":"codepoint","above":"codepoint"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:626","type":"CtInvocationImpl","sourcecode":"stripChars.isEmpty()"},"failures":[21,130,131,132,133,22,134,135,136,23,24,26,27,28,30,31,32,34,35,36,38,42,42,43,44,44,45,45,46,47,48,49,50,50,51,51,59,59,60,61,62,63,64,64,65,66,67,68,69,70,71,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,88,89,90,91,91,92,93,93,94,95,96,97,98,98,99,100,100,101,102,102,103,104,105,106,107,108,109,110,111,112,114,115,116,118,119,120,122],"tindex":"b1673a57-3e40-11e6-aaff-d75072b696ad","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:898","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final java.lang.Object[] array) {\n    if (fieldName.isEmpty()) {\n        {\n            buffer.append(java.lang.String);\n            for (int int = 0 ; i < (array.int) ; i++) {\n                final java.lang.Object java.lang.Object = array[i];\n                if (i > 0) {\n                    buffer.append(java.lang.String);\n                } \n                if (item == null) {\n                    appendNullText(buffer, fieldName);\n                } else {\n                    appendInternal(buffer, fieldName, item, boolean);\n                }\n            }\n            buffer.append(java.lang.String);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"stripChars":"fieldName"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:649","type":"CtBinaryOperatorImpl","sourcecode":"pos >= count"},"failures":[137,138,139,140,141],"tindex":"b16899e8-3e40-11e6-aaff-6debf750dfe8","method":{"position":"org.apache.commons.lang3.ArrayUtils:2124","type":"CtMethodImpl","sourcecode":"public static int indexOf(final int[] array, final int valueToFind, int startIndex) {\n    if (startIndex >= startIndex) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                startIndex = 0;\n            } \n            for (int int = startIndex ; i < (array.int) ; i++) {\n                if (valueToFind == (array[i])) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pos":"startIndex","count":"startIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:663","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(tok)"},"failures":[142],"tindex":"b168c0f9-3e40-11e6-aaff-57b4890f87ef","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:728","type":"CtMethodImpl","sourcecode":"public static java.lang.String escapeXml11(final java.lang.String input) {\n    if (input == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(input)) {\n                {\n                    return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"tok":"input"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:730","type":"CtBinaryOperatorImpl","sourcecode":"str == falseString"},"failures":[],"tindex":"b168c0fa-3e40-11e6-aaff-b31af7dceb55","method":{"position":"org.apache.commons.lang3.CharSet:173","type":"CtMethodImpl","sourcecode":"protected void add(final java.lang.String str) {\n    if (str == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == str) {\n                {\n                    if (str == null) {\n                        return ;\n                    } \n                    final int int = str.length();\n                    int int = 0;\n                    while (pos < len) {\n                        final int int = len - pos;\n                        if (((remainder >= 4) && ((str.charAt(pos)) == '^')) && ((str.charAt((pos + 2))) == '-')) {\n                            java.util.Set<org.apache.commons.lang3.CharRange>.add(org.apache.commons.lang3.CharRange.isNotIn(str.charAt((pos + 1)), str.charAt((pos + 3))));\n                            pos += 4;\n                        } else if ((remainder >= 3) && ((str.charAt((pos + 1))) == '-')) {\n                            java.util.Set<org.apache.commons.lang3.CharRange>.add(org.apache.commons.lang3.CharRange.isIn(str.charAt(pos), str.charAt((pos + 2))));\n                            pos += 3;\n                        } else if ((remainder >= 2) && ((str.charAt(pos)) == '^')) {\n                            java.util.Set<org.apache.commons.lang3.CharRange>.add(org.apache.commons.lang3.CharRange.isNot(str.charAt((pos + 1))));\n                            pos += 2;\n                        } else {\n                            java.util.Set<org.apache.commons.lang3.CharRange>.add(org.apache.commons.lang3.CharRange.is(str.charAt(pos)));\n                            pos += 1;\n                        }\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str","falseString":"str"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomUtils:168","type":"CtBinaryOperatorImpl","sourcecode":"startInclusive == endInclusive"},"failures":[57,57],"tindex":"b168e80b-3e40-11e6-aaff-999bb146642c","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:387","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final float value) {\n    if (value == value) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, value);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startInclusive":"value","endInclusive":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:514","type":"CtBinaryOperatorImpl","sourcecode":"strLen > 0"},"failures":[143,144],"tindex":"b168e80c-3e40-11e6-aaff-7d6affe86692","method":{"position":"org.apache.commons.lang3.RandomStringUtils:110","type":"CtMethodImpl","sourcecode":"public static java.lang.String randomAlphanumeric(final int count) {\n    if (count > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.RandomStringUtils.random(count, true, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"strLen":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5770","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[145],"tindex":"b168e80d-3e40-11e6-aaff-854111580cc1","method":{"position":"org.apache.commons.lang3.StringUtils:1536","type":"CtMethodImpl","sourcecode":"public static int indexOfAny(final java.lang.CharSequence cs, final char... searchChars) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(cs)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(cs)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(searchChars))) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            final int int = cs.length();\n            final int int = csLen - 1;\n            final int int = searchChars.int;\n            final int int = searchLen - 1;\n            for (int int = 0 ; i < csLen ; i++) {\n                final char char = cs.charAt(i);\n                for (int int = 0 ; j < searchLen ; j++) {\n                    if ((searchChars[j]) == ch) {\n                        if (((i < csLast) && (j < searchLast)) && (java.lang.Character.isHighSurrogate(ch))) {\n                            if ((searchChars[(j + 1)]) == (cs.charAt((i + 1)))) {\n                                return i;\n                            } \n                        } else {\n                            return i;\n                        }\n                    } \n                }\n            }\n            return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"cs"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1007","type":"CtBinaryOperatorImpl","sourcecode":"0 == nHex"},"failures":[146,147],"tindex":"b1690f1e-3e40-11e6-aaff-bfa8ac259ed0","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:320","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.time.FastDateFormat getDateTimeInstance(final int dateStyle, final int timeStyle, final java.util.Locale locale) {\n    if (0 == timeStyle) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getDateTimeInstance(dateStyle, timeStyle, null, locale);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nHex":"timeStyle"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:114","type":"CtBinaryOperatorImpl","sourcecode":"len == 3"},"failures":[],"tindex":"b1690f1f-3e40-11e6-aaff-37d5bac43228","method":{"position":"org.apache.commons.lang3.time.DateUtils:1781","type":"CtMethodImpl","sourcecode":"public static int truncatedCompareTo(final java.util.Date date1, final java.util.Date date2, final int field) {\n    if (field == 3) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Date java.util.Date = org.apache.commons.lang3.time.DateUtils.truncate(date1, field);\n            final java.util.Date java.util.Date = org.apache.commons.lang3.time.DateUtils.truncate(date2, field);\n            return truncatedDate1.compareTo(truncatedDate2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"field"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Range:151","type":"CtBinaryOperatorImpl","sourcecode":"comp == null"},"failures":[148,149,150],"tindex":"b1693530-3e40-11e6-aaff-b590c2afd31d","method":{"position":"org.apache.commons.lang3.ObjectUtils:548","type":"CtMethodImpl","sourcecode":"public static <T>T median(final java.util.Comparator<T> comparator, final T... items) {\n    if (comparator == null) {\n        {\n            org.apache.commons.lang3.Validate.notEmpty(items, \"null/empty items\");\n            org.apache.commons.lang3.Validate.noNullElements(items);\n            org.apache.commons.lang3.Validate.notNull(comparator, \"null comparator\");\n            final java.util.TreeSet<T> java.util.TreeSet<T> = new java.util.TreeSet<T>(comparator);\n            java.util.Collections.addAll(sort, items);\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final T T = ((T)(sort.toArray()[(((sort.size()) - 1) / 2)]));\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comp":"comparator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:647","type":"CtBinaryOperatorImpl","sourcecode":"excludeFieldNamesParam == null"},"failures":[151],"tindex":"b1693531-3e40-11e6-aaff-15f642de3687","method":{"position":"org.apache.commons.lang3.ArrayUtils:512","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] nullToEmpty(final java.lang.String[] array) {\n    if (array == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((array == null) || ((array.int) == 0)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.String[];\n            } \n            return array;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"excludeFieldNamesParam":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:361","type":"CtFieldReadImpl","sourcecode":"fieldSeparatorAtStart"},"failures":[],"tindex":"b1693532-3e40-11e6-aaff-43b712636968","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:178","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setArrayContentDetail(final boolean arrayContentDetail) {\n    if (arrayContentDetail) {\n        {\n            super.setArrayContentDetail(arrayContentDetail);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldSeparatorAtStart":"arrayContentDetail"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:554","type":"CtBinaryOperatorImpl","sourcecode":"str == \"true\""},"failures":[27,152,153,28,29,30,154,155],"tindex":"b1695c43-3e40-11e6-aaff-55a34aad0279","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:461","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setSizeStartText(final java.lang.String sizeStartText) {\n    if (sizeStartText == \"true\") {\n        {\n            super.setSizeStartText(sizeStartText);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"sizeStartText"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:728","type":"CtBinaryOperatorImpl","sourcecode":"str == trueString"},"failures":[156,157,158,159,160,161,162],"tindex":"b1695c44-3e40-11e6-aaff-f986b435ff75","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:472","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrTokenizer reset(final java.lang.String input) {\n    if (input == input) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            reset();\n            if (input != null) {\n                org.apache.commons.lang3.text.StrTokenizer.this.char[] = input.toCharArray();\n            } else {\n                org.apache.commons.lang3.text.StrTokenizer.this.char[] = null;\n            }\n            return org.apache.commons.lang3.text.StrTokenizer.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"input","trueString":"input"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2107","type":"CtBinaryOperatorImpl","sourcecode":"len > (size)"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,18],"tindex":"b1695c45-3e40-11e6-aaff-99ea91276ea7","method":{"position":"org.apache.commons.lang3.text.StrBuilder:495","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic org.apache.commons.lang3.text.StrBuilder append(final java.lang.CharSequence seq, final int startIndex, final int length) {\n    if (length > length) {\n        {\n            if (seq == null) {\n                return appendNull();\n            } \n            return append(seq.toString(), startIndex, length);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"length","size":"length"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2766","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.ArrayUtils.isEmpty(array)"},"failures":[163],"tindex":"b1698356-3e40-11e6-aaff-3df9cc2aabea","method":{"position":"org.apache.commons.lang3.ArrayUtils:4151","type":"CtMethodImpl","sourcecode":"public static float[] add(final float[] array, final float element) {\n    if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final float[] float[] = ((float[])(org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(array, java.lang.Float.java.lang.Float.java.lang.Class<java.lang.Float>)));\n            newArray[((newArray.int) - 1)] = element;\n            return newArray;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1223","type":"CtBinaryOperatorImpl","sourcecode":"0 == nShorts"},"failures":[],"tindex":"b1698357-3e40-11e6-aaff-b97286d691f1","method":{"position":"org.apache.commons.lang3.StringUtils:3710","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final byte[] array, final char separator, final int startIndex, final int endIndex) {\n    if (0 == endIndex) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            final int int = endIndex - startIndex;\n            if (noOfItems <= 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder((noOfItems * 16));\n            for (int int = startIndex ; i < endIndex ; i++) {\n                if (i > startIndex) {\n                    buf.append(separator);\n                } \n                buf.append(array[i]);\n            }\n            return buf.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nShorts":"endIndex"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4900","type":"CtVariableReadImpl","sourcecode":"modified"},"failures":[164,165,166,167],"tindex":"b169aa68-3e40-11e6-aaff-4f210019fbf7","method":{"position":"org.apache.commons.lang3.BooleanUtils:392","type":"CtMethodImpl","sourcecode":"public static int toInteger(final boolean bool) {\n    if (bool) {\n        {\n            return bool ? 1 : 0;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"modified":"bool"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:590","type":"CtBinaryOperatorImpl","sourcecode":"(((ch0 == 'y') || (ch0 == 'Y')) && ((ch1 == 'e') || (ch1 == 'E'))) && ((ch2 == 's') || (ch2 == 'S'))"},"failures":[],"tindex":"b169aa69-3e40-11e6-aaff-131d983b365b","method":{"position":"org.apache.commons.lang3.Conversion:162","type":"CtMethodImpl","sourcecode":"public static boolean[] hexDigitToBinary(final char hexDigit) {\n    if ((((hexDigit == 'y') || (ch0 == 'Y')) && ((hexDigit == 'e') || (ch1 == 'E'))) && ((hexDigit == 's') || (ch2 == 'S'))) {\n        {\n            switch (hexDigit) {\n                case '0' :\n                    return new boolean[]{ false , false , false , false };\n                case '1' :\n                    return new boolean[]{ true , false , false , false };\n                case '2' :\n                    return new boolean[]{ false , true , false , false };\n                case '3' :\n                    return new boolean[]{ true , true , false , false };\n                case '4' :\n                    return new boolean[]{ false , false , true , false };\n                case '5' :\n                    return new boolean[]{ true , false , true , false };\n                case '6' :\n                    return new boolean[]{ false , true , true , false };\n                case '7' :\n                    return new boolean[]{ true , true , true , false };\n                case '8' :\n                    return new boolean[]{ false , false , false , true };\n                case '9' :\n                    return new boolean[]{ true , false , false , true };\n                case 'a' :\n                case 'A' :\n                    return new boolean[]{ false , true , false , true };\n                case 'b' :\n                case 'B' :\n                    return new boolean[]{ true , true , false , true };\n                case 'c' :\n                case 'C' :\n                    return new boolean[]{ false , false , true , true };\n                case 'd' :\n                case 'D' :\n                    return new boolean[]{ true , false , true , true };\n                case 'e' :\n                case 'E' :\n                    return new boolean[]{ false , true , true , true };\n                case 'f' :\n                case 'F' :\n                    return new boolean[]{ true , true , true , true };\n                default :\n                    throw new java.lang.IllegalArgumentException(((\"Cannot interpret '\" + hexDigit) + \"' as a hexadecimal digit\"));\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch0":"hexDigit","ch2":"hexDigit","ch1":"hexDigit"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3410","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[168,169,170],"tindex":"b169d17a-3e40-11e6-aaff-d71d51c32311","method":{"position":"org.apache.commons.lang3.ArrayUtils:434","type":"CtMethodImpl","sourcecode":"public static float[] clone(final float[] array) {\n    if (array == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            return array.clone();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.ClassNotFoundException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:658","type":"CtBinaryOperatorImpl","sourcecode":"trueString == null"},"failures":[],"tindex":"b169d17b-3e40-11e6-aaff-6fed391f8ba5","method":{"position":"org.apache.commons.lang3.ClassUtils:861","type":"CtMethodImpl","sourcecode":"public static java.lang.Class<?> getClass(final java.lang.ClassLoader classLoader, final java.lang.String className) throws java.lang.ClassNotFoundException {\n    if (className == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.ClassNotFoundException();\n    } else {\n        {\n            return org.apache.commons.lang3.ClassUtils.getClass(classLoader, className, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trueString":"className"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:437","type":"CtInvocationImpl","sourcecode":"toParameterizedType.equals(type)"},"failures":[171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193],"tindex":"b169d17c-3e40-11e6-aaff-ad96a3946511","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:369","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final java.lang.Object lhs, final java.lang.Object rhs) {\n    if (lhs.equals(rhs)) {\n        {\n            return append(lhs, rhs, null);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toParameterizedType":"lhs","type":"rhs"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.text.ParseException","condition":{"position":"org.apache.commons.lang3.StringUtils:3108","type":"CtBinaryOperatorImpl","sourcecode":"(separatorChars.length()) == 1"},"failures":[],"tindex":"b169f88d-3e40-11e6-aaff-8fc93648d9d4","method":{"position":"org.apache.commons.lang3.time.DateUtils:310","type":"CtMethodImpl","sourcecode":"public static java.util.Date parseDateStrictly(final java.lang.String str, final java.lang.String... parsePatterns) throws java.text.ParseException {\n    if ((str.length()) == 1) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.text.ParseException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateUtils.parseDateStrictly(str, null, parsePatterns);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"separatorChars":"str"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:209","type":"CtBinaryOperatorImpl","sourcecode":"spaceToWrapAt >= 0"},"failures":[],"tindex":"b169f88e-3e40-11e6-aaff-21a814f44f86","method":{"position":"org.apache.commons.lang3.mutable.MutableInt:137","type":"CtMethodImpl","sourcecode":"public void add(final int operand) {\n    if (operand >= 0) {\n        {\n            org.apache.commons.lang3.mutable.MutableInt.this.int += operand;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"spaceToWrapAt":"operand"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1078","type":"CtBinaryOperatorImpl","sourcecode":"startIndexInclusive < 0"},"failures":[194],"tindex":"b169f88f-3e40-11e6-aaff-91080a387a33","method":{"position":"org.apache.commons.lang3.time.DateUtils:700","type":"CtMethodImpl","sourcecode":"public static java.util.Date round(final java.util.Date date, final int field) {\n    if (field < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (date == null) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            final java.util.Calendar java.util.Calendar = java.util.Calendar.getInstance();\n            gval.setTime(date);\n            org.apache.commons.lang3.time.DateUtils.modify(gval, field, org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.int);\n            return gval.getTime();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndexInclusive":"field"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:717","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[195,196,197,198,199,200,201],"tindex":"b16a1fa0-3e40-11e6-aaff-7dcc3bfba92b","method":{"position":"org.apache.commons.lang3.math.NumberUtils:760","type":"CtMethodImpl","sourcecode":"public static java.math.BigDecimal createBigDecimal(final java.lang.String str) {\n    if (str == null) {\n        {\n            if (str == null) {\n                return null;\n            } \n            if (org.apache.commons.lang3.StringUtils.isBlank(str)) {\n                throw new java.lang.NumberFormatException(\"A blank string is not a valid number\");\n            } \n            if (str.trim().startsWith(\"--\")) {\n                throw new java.lang.NumberFormatException((str + \" is not a valid number.\"));\n            } \n            return new java.math.BigDecimal(str);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"str"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:1150","type":"CtBinaryOperatorImpl","sourcecode":"(value <= start) || (value >= end)"},"failures":[],"tindex":"b16a1fa1-3e40-11e6-aaff-adda82dd85c5","method":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:89","type":"CtMethodImpl","sourcecode":"public static double min(final double a, final double b, final double c) {\n    if ((a <= c) || (value >= a)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.math.IEEE754rUtils.min(org.apache.commons.lang3.math.IEEE754rUtils.min(a, b), c);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"c","end":"a","value":"a"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1180","type":"CtBinaryOperatorImpl","sourcecode":"it != null"},"failures":[202],"tindex":"b16a1fa2-3e40-11e6-aaff-b5022d40d5c7","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1111","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendAll(final java.util.Iterator<?> it) {\n    if (it != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (it != null) {\n                while (it.hasNext()) {\n                    append(it.next());\n                }\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"it":"it"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:759","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[203],"tindex":"b16a46b3-3e40-11e6-aaff-85fc5684f27e","method":{"position":"org.apache.commons.lang3.math.NumberUtils:99","type":"CtMethodImpl","sourcecode":"public static int toInt(final java.lang.String str) {\n    if (str == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.math.NumberUtils.toInt(str, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"str"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:180","type":"CtBinaryOperatorImpl","sourcecode":"(tmp.length()) != (duration.length())"},"failures":[204,205],"tindex":"b16a46b4-3e40-11e6-aaff-81162820559f","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:801","type":"CtMethodImpl","sourcecode":"public static final java.lang.String unescapeCsv(final java.lang.String input) {\n    if ((input.length()) != (input.length())) {\n        {\n            return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"duration":"input","tmp":"input"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ObjectUtils:575","type":"CtBinaryOperatorImpl","sourcecode":"count == null"},"failures":[206],"tindex":"b16a46b5-3e40-11e6-aaff-5d5d81f14903","method":{"position":"org.apache.commons.lang3.mutable.MutableShort:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setValue(final java.lang.Number value) {\n    if (value == null) {\n        {\n            org.apache.commons.lang3.mutable.MutableShort.this.short = value.shortValue();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:176","type":"CtBinaryOperatorImpl","sourcecode":"bool == null"},"failures":[207],"tindex":"b16a6dc6-3e40-11e6-aaff-3ddd9d5e9c37","method":{"position":"org.apache.commons.lang3.BooleanUtils:792","type":"CtMethodImpl","sourcecode":"public static java.lang.String toStringYesNo(final java.lang.Boolean bool) {\n    if (bool == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.BooleanUtils.toString(bool, \"yes\", \"no\", null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bool":"bool"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:159","type":"CtBinaryOperatorImpl","sourcecode":"(ex.getCause()) instanceof java.lang.RuntimeException"},"failures":[126,208],"tindex":"b16a6dc7-3e40-11e6-aaff-5f21cebf0882","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:179","type":"CtMethodImpl","sourcecode":"public static java.lang.Throwable getRootCause(final java.lang.Throwable throwable) {\n    if ((throwable.getCause()) instanceof java.lang.RuntimeException) {\n        {\n            final java.util.List<java.lang.Throwable> java.util.List<java.lang.Throwable> = org.apache.commons.lang3.exception.ExceptionUtils.getThrowableList(throwable);\n            return (list.size()) < 2 ? null : ((java.lang.Throwable)(list.get(((list.size()) - 1))));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ex":"throwable"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:1108","type":"CtBinaryOperatorImpl","sourcecode":"(tokens) == null"},"failures":[209],"tindex":"b16a6dc8-3e40-11e6-aaff-4be37079ae92","method":{"position":"org.apache.commons.lang3.StringUtils:702","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] stripAll(final java.lang.String... strs) {\n    if (strs == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (strs == null) {\n                {\n                    return org.apache.commons.lang3.StringUtils.stripAll(strs, null);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"tokens":"strs"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:661","type":"CtBinaryOperatorImpl","sourcecode":"falseString == null"},"failures":[210,211],"tindex":"b16a94d9-3e40-11e6-aaff-8595d8861f2b","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1742","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder deleteAll(final java.lang.String str) {\n    if (str == null) {\n        {\n            final int int = str == null ? 0 : str.length();\n            if (len > 0) {\n                int int = indexOf(str, 0);\n                while (index >= 0) {\n                    deleteImpl(index, (index + len), len);\n                    index = indexOf(str, index);\n                }\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"falseString":"str"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2439","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[212],"tindex":"b16a94da-3e40-11e6-aaff-61da9a8819d6","method":{"position":"org.apache.commons.lang3.ArrayUtils:1317","type":"CtMethodImpl","sourcecode":"public static boolean isSameLength(final byte[] array1, final byte[] array2) {\n    if (array2 == null) {\n        {\n            if (((((array1 == null) && (array2 != null)) && ((array2.int) > 0)) || (((array2 == null) && (array1 != null)) && ((array1.int) > 0))) || (((array1 != null) && (array2 != null)) && ((array1.int) != (array2.int)))) {\n                return false;\n            } \n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array2"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1970","type":"CtBinaryOperatorImpl","sourcecode":"nullText == null"},"failures":[],"tindex":"b16a94db-3e40-11e6-aaff-ebb09f145923","method":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:370","type":"CtMethodImpl","sourcecode":"private java.lang.String parseFormatDescription(final java.lang.String pattern, final java.text.ParsePosition pos) {\n    if (pattern == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = pos.getIndex();\n            seekNonWs(pattern, pos);\n            final int int = pos.getIndex();\n            int int = 1;\n            for ( ; (pos.getIndex()) < (pattern.length()) ; next(pos)) {\n                switch (pattern.charAt(pos.getIndex())) {\n                    case org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char :\n                        depth++;\n                        break;\n                    case org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char :\n                        depth--;\n                        if (depth == 0) {\n                            return pattern.substring(text, pos.getIndex());\n                        } \n                        break;\n                    case org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char :\n                        getQuotedString(pattern, pos, false);\n                        break;\n                    default :\n                        break;\n                }\n            }\n            throw new java.lang.IllegalArgumentException((\"Unterminated format element at position \" + start));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nullText":"pattern"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:117","type":"CtBinaryOperatorImpl","sourcecode":"codepoint > 4095"},"failures":[213],"tindex":"b16abbec-3e40-11e6-aaff-b5906692a03a","method":{"position":"org.apache.commons.lang3.Conversion:722","type":"CtMethodImpl","sourcecode":"public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos, final int nShorts) {\n    if (dstPos > 4095) {\n        {\n            if ((((src.int) == 0) && (srcPos == 0)) || (0 == nShorts)) {\n                return dstInit;\n            } \n            if ((((nShorts - 1) * 16) + dstPos) >= 64) {\n                throw new java.lang.IllegalArgumentException(\"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n            } \n            long long = dstInit;\n            int int = 0;\n            for (int int = 0 ; i < nShorts ; i++) {\n                shift = (i * 16) + dstPos;\n                final long long = (65535L & (src[(i + srcPos)])) << shift;\n                final long long = 65535L << shift;\n                out = (out & (~mask)) | bits;\n            }\n            return out;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"codepoint":"dstPos"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:373","type":"CtInvocationImpl","sourcecode":"parsePattern.endsWith(\"ZZ\")"},"failures":[162],"tindex":"b16ae2fd-3e40-11e6-aaff-272b46436cd4","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:884","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrTokenizer setDelimiterString(final java.lang.String delim) {\n    if (delim.endsWith(\"ZZ\")) {\n        {\n            return setDelimiterMatcher(org.apache.commons.lang3.text.StrMatcher.stringMatcher(delim));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"parsePattern":"delim"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.reflect.InvocationTargetException","condition":{"position":"org.apache.commons.lang3.reflect.MethodUtils:371","type":"CtBinaryOperatorImpl","sourcecode":"method == null"},"failures":[],"tindex":"b16b0a0e-3e40-11e6-aaff-5bb7d148402c","method":{"position":"org.apache.commons.lang3.reflect.MethodUtils:153","type":"CtMethodImpl","sourcecode":"public static java.lang.Object invokeExactMethod(final java.lang.Object object, final java.lang.String methodName, java.lang.Object... args) throws java.lang.IllegalAccessException, java.lang.NoSuchMethodException, java.lang.reflect.InvocationTargetException {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.reflect.InvocationTargetException();\n    } else {\n        {\n            args = org.apache.commons.lang3.ArrayUtils.nullToEmpty(args);\n            final java.lang.Class<?>[] java.lang.Class<?>[] = org.apache.commons.lang3.ClassUtils.toClass(args);\n            return org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(object, methodName, args, parameterTypes);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"method":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:355","type":"CtBinaryOperatorImpl","sourcecode":"(str == null) || (parsePatterns == null)"},"failures":[214,215],"tindex":"b16b0a0f-3e40-11e6-aaff-53bfbef488a9","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:742","type":"CtMethodImpl","sourcecode":"public static void writeField(final java.lang.Object target, final java.lang.String fieldName, final java.lang.Object value, final boolean forceAccess) throws java.lang.IllegalAccessException {\n    if ((target == null) || (value == null)) {\n        {\n            org.apache.commons.lang3.Validate.isTrue((target != null), \"target object must not be null\");\n            final java.lang.Class<?> java.lang.Class<?> = target.getClass();\n            final java.lang.reflect.Field java.lang.reflect.Field = org.apache.commons.lang3.reflect.FieldUtils.getField(cls, fieldName, forceAccess);\n            org.apache.commons.lang3.Validate.isTrue((field != null), \"Cannot locate declared field %s.%s\", cls.getName(), fieldName);\n            org.apache.commons.lang3.reflect.FieldUtils.writeField(field, target, value, false);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"target","parsePatterns":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:253","type":"CtBinaryOperatorImpl","sourcecode":"input != null"},"failures":[195,216,196,217,198,199,200,201],"tindex":"b16b0a10-3e40-11e6-aaff-89d4b0041ed5","method":{"position":"org.apache.commons.lang3.math.NumberUtils:633","type":"CtMethodImpl","sourcecode":"private static boolean isAllZeros(final java.lang.String str) {\n    if (str != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return true;\n            } \n            for (int int = (str.length()) - 1 ; i >= 0 ; i--) {\n                if ((str.charAt(i)) != '0') {\n                    return false;\n                } \n            }\n            return (str.length()) > 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"str"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:604","type":"CtBinaryOperatorImpl","sourcecode":"(chars) == null"},"failures":[],"tindex":"b16b3121-3e40-11e6-aaff-71bb8b0d1483","method":{"position":"org.apache.commons.lang3.ArrayUtils:5622","type":"CtMethodImpl","sourcecode":"public static char[] removeElements(final char[] array, final char... values) {\n    if (values == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            final java.util.HashMap<java.lang.Character, org.apache.commons.lang3.mutable.MutableInt> java.util.HashMap<java.lang.Character, org.apache.commons.lang3.mutable.MutableInt> = new java.util.HashMap<java.lang.Character, org.apache.commons.lang3.mutable.MutableInt>(values.int);\n            for (final char char : values) {\n                final java.lang.Character java.lang.Character = java.lang.Character.valueOf(v);\n                final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = occurrences.get(boxed);\n                if (count == null) {\n                    occurrences.put(boxed, new org.apache.commons.lang3.mutable.MutableInt(1));\n                } else {\n                    count.increment();\n                }\n            }\n            final java.util.BitSet java.util.BitSet = new java.util.BitSet();\n            for (final java.util.Map.Entry<java.lang.Character, org.apache.commons.lang3.mutable.MutableInt> java.util.Map.Entry<java.lang.Character, org.apache.commons.lang3.mutable.MutableInt> : occurrences.entrySet()) {\n                final java.lang.Character java.lang.Character = e.getKey();\n                int int = 0;\n                for (int int = 0, int int = e.getValue().intValue() ; i < ct ; i++) {\n                    found = org.apache.commons.lang3.ArrayUtils.indexOf(array, v.charValue(), found);\n                    if (found < 0) {\n                        break;\n                    } \n                    toRemove.set((found++));\n                }\n            }\n            return ((char[])(org.apache.commons.lang3.ArrayUtils.removeAll(array, toRemove)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chars":"values"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:435","type":"CtBinaryOperatorImpl","sourcecode":"(newLine) == null"},"failures":[218],"tindex":"b16b3122-3e40-11e6-aaff-67c471ae42bc","method":{"position":"org.apache.commons.lang3.StringUtils:4378","type":"CtMethodImpl","sourcecode":"public static java.lang.String remove(final java.lang.String str, final char remove) {\n    if (str == null) {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || ((str.indexOf(remove)) == (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int))) {\n                return str;\n            } \n            final char[] char[] = str.toCharArray();\n            int int = 0;\n            for (int int = 0 ; i < (chars.int) ; i++) {\n                if ((chars[i]) != remove) {\n                    chars[(pos++)] = chars[i];\n                } \n            }\n            return new java.lang.String(chars , 0 , pos);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"newLine":"str"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:764","type":"CtBinaryOperatorImpl","sourcecode":"(isEquals) == false"},"failures":[219,220,221,222,223,224,225,226,227,228,21,130,131,132,133,22,134,135,136,23,23,229,229,230,230,24,24,25,25,26,26,231,231,232,232,233,234,235,27,152,153,28,29,30,154,155,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,31,31,271,271,272,272,32,32,33,33,34,34,273,273,274,274,35,35,275,275,276,276,36,36,37,37,38,38,277,277,278,278,279,279,39,39,40,40,41,41,42,42,43,43,44,44,45,45,46,46,47,47,48,48,49,49,50,50,51,51,52,52,280,280,53,53,54,54,55,55,56,56,57,57,58,58,59,59,60,60,61,61,62,62,63,63,64,64,65,65,66,66,67,67,68,68,69,69,70,70,71,71,72,72,73,73,74,74,75,75,76,76,77,77,78,78,79,79,80,80,81,81,82,82,83,83,84,84,85,85,86,86,87,87,88,88,89,89,90,90,91,91,92,92,93,93,94,94,95,95,96,96,97,97,98,98,99,99,100,100,101,101,102,102,103,103,104,104,105,105,106,106,107,107,108,108,109,109,110,110,111,111,281,281,282,282,112,112,113,113,114,114,283,283,284,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,115,115,308,308,309,309,116,116,117,117,118,118,310,310,311,311,119,119,312,312,313,313,120,120,121,121,122,122,314,314,315,315],"tindex":"b16b5833-3e40-11e6-aaff-5b8ca879744a","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1654","type":"CtMethodImpl","sourcecode":"protected void setUseIdentityHashCode(final boolean useIdentityHashCode) {\n    if (useIdentityHashCode == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.this.boolean = useIdentityHashCode;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isEquals":"useIdentityHashCode"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5890","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))"},"failures":[316],"tindex":"b16b7f44-3e40-11e6-aaff-915e33f4746e","method":{"position":"org.apache.commons.lang3.ArrayUtils:2540","type":"CtMethodImpl","sourcecode":"public static int indexOf(final double[] array, final double valueToFind, final double tolerance) {\n    if ((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(array))) {\n        {\n            return org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0, tolerance);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array","values":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDatePrinter:207","type":"CtBinaryOperatorImpl","sourcecode":"tokenLen >= 4"},"failures":[],"tindex":"b16b7f45-3e40-11e6-aaff-9143e9ad3eb8","method":{"position":"org.apache.commons.lang3.text.translate.JavaUnicodeEscaper:64","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.translate.JavaUnicodeEscaper between(final int codepointLow, final int codepointHigh) {\n    if (codepointLow >= 4) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.lang3.text.translate.JavaUnicodeEscaper(codepointLow , codepointHigh , true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"tokenLen":"codepointLow"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:658","type":"CtBinaryOperatorImpl","sourcecode":"trueString == null"},"failures":[],"tindex":"b16b7f46-3e40-11e6-aaff-a12109dfde19","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1114","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final short[] array) {\n    if (fieldName == null) {\n        {\n            buffer.append(java.lang.String);\n            for (int int = 0 ; i < (array.int) ; i++) {\n                if (i > 0) {\n                    buffer.append(java.lang.String);\n                } \n                appendDetail(buffer, fieldName, array[i]);\n            }\n            buffer.append(java.lang.String);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trueString":"fieldName"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:623","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"b16ba657-3e40-11e6-aaff-a7dba353a109","method":{"position":"org.apache.commons.lang3.time.FastDateParser:605","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nboolean addRegex(final org.apache.commons.lang3.time.FastDateParser parser, final java.lang.StringBuilder regex) {\n    if (regex == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            regex.append('(');\n            for (final java.lang.String java.lang.String : java.util.Map<java.lang.String, java.lang.Integer>.keySet()) {\n                org.apache.commons.lang3.time.FastDateParser.escapeRegex(regex, textKeyValue, false).append('|');\n            }\n            regex.setCharAt(((regex.length()) - 1), ')');\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"regex"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:913","type":"CtBinaryOperatorImpl","sourcecode":"quote != null"},"failures":[317],"tindex":"b16ba658-3e40-11e6-aaff-bbfbb20d5dc9","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2496","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final org.apache.commons.lang3.text.StrMatcher matcher) {\n    if (matcher != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return lastIndexOf(matcher, int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"quote":"matcher"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:915","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[318,319],"tindex":"b16ba659-3e40-11e6-aaff-7545532d1d2a","method":{"position":"org.apache.commons.lang3.ArrayUtils:532","type":"CtMethodImpl","sourcecode":"public static long[] nullToEmpty(final long[] array) {\n    if (array == null) {\n        {\n            if ((array == null) || ((array.int) == 0)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.long[];\n            } \n            return array;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:517","type":"CtBinaryOperatorImpl","sourcecode":"throwable == null"},"failures":[],"tindex":"b16bcd6a-3e40-11e6-aaff-8f67542b1bff","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:671","type":"CtMethodImpl","sourcecode":"public static java.lang.String getMessage(final java.lang.Throwable th) {\n    if (th == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (th == null) {\n                {\n                    if (th == null) {\n                        return \"\";\n                    } \n                    final java.lang.String java.lang.String = org.apache.commons.lang3.ClassUtils.getShortClassName(th, null);\n                    final java.lang.String java.lang.String = th.getMessage();\n                    return (clsName + \": \") + (org.apache.commons.lang3.StringUtils.defaultString(msg));\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"throwable":"th"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:530","type":"CtBinaryOperatorImpl","sourcecode":"((dec == null) && (exp == null)) && ((((numeric.charAt(0)) == '-') && (org.apache.commons.lang3.math.NumberUtils.isDigits(numeric.substring(1)))) || (org.apache.commons.lang3.math.NumberUtils.isDigits(numeric)))"},"failures":[],"tindex":"b16bcd6b-3e40-11e6-aaff-f565870a61c3","method":{"position":"org.apache.commons.lang3.math.NumberUtils:221","type":"CtMethodImpl","sourcecode":"public static float toFloat(final java.lang.String str, final float defaultValue) {\n    if (((str == null) && (str == null)) && ((((str.charAt(0)) == '-') && (org.apache.commons.lang3.math.NumberUtils.isDigits(numeric.substring(1)))) || (org.apache.commons.lang3.math.NumberUtils.isDigits(numeric)))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return defaultValue;\n            } \n            try {\n                return java.lang.Float.parseFloat(str);\n            } catch (final java.lang.NumberFormatException nfe) {\n                return defaultValue;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dec":"str","numeric":"str","exp":"str"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.reflect.FieldUtils:106","type":"CtUnaryOperatorImpl","sourcecode":"!(java.lang.reflect.Modifier.isPublic(field.getModifiers()))"},"failures":[231,279,279,43,43,44,45,46,47,47,48,48,49,50,51,52,280,53,54,55,56,57,58,59,60,61,62,63,64,65,65,66,67,68,69,69,70,71,72,73,74,75,75,76,76,77,78,79,80,81,82,83,83,84,85,86,86,87,88,89,89,90,91,92,93,93,94,95,96,97,98,99,100,101,101,102,103,104,105,106,107,107,108,108,109,110,285,286,287,288,289,290,291,292,293,294,295],"tindex":"b16bf47c-3e40-11e6-aaff-65493750ddf4","method":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:573","type":"CtMethodImpl","sourcecode":"protected java.lang.Object getValue(final java.lang.reflect.Field field) throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException {\n    if (!(java.lang.reflect.Modifier.isPublic(field.getModifiers()))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IllegalAccessException();\n    } else {\n        {\n            return field.get(org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.getObject());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"field"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3094","type":"CtBinaryOperatorImpl","sourcecode":"(sizePlus1++) == max"},"failures":[],"tindex":"b16bf47d-3e40-11e6-aaff-61c706327f72","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:455","type":"CtMethodImpl","sourcecode":"public java.lang.String replace(final char[] source, final int offset, final int length) {\n    if ((length++) == length) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (source == null) {\n                return null;\n            } \n            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(length).append(source, offset, length);\n            substitute(buf, 0, length);\n            return buf.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sizePlus1":"length","max":"length"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:657","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"b16bf47e-3e40-11e6-aaff-e7f57e0a91fa","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:353","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setFieldSeparator(final java.lang.String fieldSeparator) {\n    if (fieldSeparator == null) {\n        {\n            super.setFieldSeparator(fieldSeparator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldSeparator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDateParser:463","type":"CtBinaryOperatorImpl","sourcecode":"(formatField.length()) > 2"},"failures":[320],"tindex":"b16c1b8f-3e40-11e6-aaff-b575dc69bf09","method":{"position":"org.apache.commons.lang3.StringUtils:7363","type":"CtMethodImpl","sourcecode":"public static java.lang.String normalizeSpace(final java.lang.String str) {\n    if ((str.length()) > 2) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return null;\n            } \n            return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.util.regex.Pattern.matcher(org.apache.commons.lang3.StringUtils.trim(str)).replaceAll(org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"formatField":"str"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:647","type":"CtBinaryOperatorImpl","sourcecode":"excludeFieldNamesParam == null"},"failures":[321,322],"tindex":"b16c1b90-3e40-11e6-aaff-95628ed93c66","method":{"position":"org.apache.commons.lang3.StringUtils:358","type":"CtMethodImpl","sourcecode":"public static boolean isAnyBlank(java.lang.CharSequence... css) {\n    if (css == null) {\n        {\n            if (org.apache.commons.lang3.ArrayUtils.isEmpty(css)) {\n                return true;\n            } \n            for (java.lang.CharSequence java.lang.CharSequence : css) {\n                if (org.apache.commons.lang3.StringUtils.isBlank(cs)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"excludeFieldNamesParam":"css"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:338","type":"CtBinaryOperatorImpl","sourcecode":"toType instanceof java.lang.reflect.WildcardType"},"failures":[],"tindex":"b16c1b91-3e40-11e6-aaff-af586d4e81c7","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:311","type":"CtMethodImpl","sourcecode":"public static boolean isAssignable(final java.lang.reflect.Type type, final java.lang.reflect.Type toType) {\n    if (type instanceof java.lang.reflect.WildcardType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.reflect.TypeUtils.isAssignable(type, toType, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toType":"type"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2068","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[139],"tindex":"b16c42a2-3e40-11e6-aaff-0dae2c1683b2","method":{"position":"org.apache.commons.lang3.ArrayUtils:2193","type":"CtMethodImpl","sourcecode":"public static boolean contains(final int[] array, final int valueToFind) {\n    if (valueToFind < 0) {\n        {\n            return (org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind)) != (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"valueToFind"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:963","type":"CtInvocationImpl","sourcecode":"className.endsWith(\"[]\")"},"failures":[],"tindex":"b16c42a3-3e40-11e6-aaff-b7ba9d1a9c32","method":{"position":"org.apache.commons.lang3.time.DateFormatUtils:250","type":"CtMethodImpl","sourcecode":"public static java.lang.String format(final long millis, final java.lang.String pattern, final java.util.Locale locale) {\n    if (pattern.endsWith(\"[]\")) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateFormatUtils.format(new java.util.Date(millis), pattern, null, locale);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"className":"pattern"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:214","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"b16c42a4-3e40-11e6-aaff-ab8e1264766a","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:728","type":"CtMethodImpl","sourcecode":"public static java.lang.String escapeXml11(final java.lang.String input) {\n    if (input == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(input)) {\n                {\n                    return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"input"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:640","type":"CtBinaryOperatorImpl","sourcecode":"lhs != rhs"},"failures":[323],"tindex":"b16c42a5-3e40-11e6-aaff-69ce4a5bd481","method":{"position":"org.apache.commons.lang3.Validate:1081","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"boxing\")\npublic static void exclusiveBetween(long start, long end, long value) {\n    if (end != value) {\n        {\n            if ((value <= start) || (value >= end)) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.java.lang.String, value, start, end));\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"end","rhs":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:674","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[324],"tindex":"b16c69b6-3e40-11e6-aaff-e5a868ddc9df","method":{"position":"org.apache.commons.lang3.ArrayUtils:2046","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final long[] array, final long valueToFind) {\n    if (array == array) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.java.lang.Integer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array","rhs":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:591","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[325,326,327,328,329],"tindex":"b16cdee7-3e40-11e6-aaff-dd996e88fbc8","method":{"position":"org.apache.commons.lang3.CharEncoding:94","type":"CtMethodImpl","sourcecode":"public static boolean isSupported(final java.lang.String name) {\n    if (name == null) {\n        {\n            if (name == null) {\n                return false;\n            } \n            try {\n                return java.nio.charset.Charset.isSupported(name);\n            } catch (final java.nio.charset.IllegalCharsetNameException ex) {\n                return false;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"name"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharEncoding:95","type":"CtBinaryOperatorImpl","sourcecode":"name == null"},"failures":[330],"tindex":"b16cdee8-3e40-11e6-aaff-6b7b28afc7cd","method":{"position":"org.apache.commons.lang3.StringUtils:5686","type":"CtMethodImpl","sourcecode":"public static java.lang.String capitalize(final java.lang.String str) {\n    if (str == null) {\n        {\n            int int;\n            if ((str == null) || ((strLen = str.length()) == 0)) {\n                return str;\n            } \n            char char = str.charAt(0);\n            if (java.lang.Character.isTitleCase(firstChar)) {\n                return str;\n            } \n            return new java.lang.StringBuilder(strLen).append(java.lang.Character.toTitleCase(firstChar)).append(str.substring(1)).toString();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"str"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:86","type":"CtBinaryOperatorImpl","sourcecode":"(firstChar == 'x') || (firstChar == 'X')"},"failures":[],"tindex":"b16cdee9-3e40-11e6-aaff-bb7651dd39ed","method":{"position":"org.apache.commons.lang3.CharUtils:149","type":"CtMethodImpl","sourcecode":"public static char toChar(final java.lang.Character ch, final char defaultValue) {\n    if ((defaultValue == 'x') || (firstChar == 'X')) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (ch == null) {\n                return defaultValue;\n            } \n            return ch.charValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"firstChar":"defaultValue"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:434","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[156,161],"tindex":"b16cdeea-3e40-11e6-aaff-f145d66b8c76","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:179","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.StrTokenizer getCSVInstance(final char[] input) {\n    if (input == null) {\n        {\n            final org.apache.commons.lang3.text.StrTokenizer org.apache.commons.lang3.text.StrTokenizer = org.apache.commons.lang3.text.StrTokenizer.getCSVClone();\n            tok.reset(input);\n            return tok;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"input"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:156","type":"CtBinaryOperatorImpl","sourcecode":"(date1 == null) || (date2 == null)"},"failures":[331],"tindex":"b16d05fb-3e40-11e6-aaff-11653a5c77ac","method":{"position":"org.apache.commons.lang3.text.StrBuilder:851","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendln(final java.lang.Object obj) {\n    if ((obj == null) || (obj == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return append(obj).appendNewLine();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date2":"obj","date1":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5778","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isUpperCase(ch)"},"failures":[],"tindex":"b16d05fc-3e40-11e6-aaff-4f2f824fe2c8","method":{"position":"org.apache.commons.lang3.CharRange:88","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.CharRange is(final char ch) {\n    if (java.lang.Character.isUpperCase(ch)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.lang3.CharRange(ch , ch , false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:728","type":"CtBinaryOperatorImpl","sourcecode":"str == trueString"},"failures":[],"tindex":"b16d05fd-3e40-11e6-aaff-911b1214c5e0","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:511","type":"CtMethodImpl","sourcecode":"public static final java.lang.String escapeJson(final java.lang.String input) {\n    if (input == input) {\n        {\n            return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"input","trueString":"input"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSequenceUtils:121","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[194,332,333,334,335,336,337,338,339,340,341,342],"tindex":"b16d05fe-3e40-11e6-aaff-4d5f7e867212","method":{"position":"org.apache.commons.lang3.time.DateUtils:774","type":"CtMethodImpl","sourcecode":"public static java.util.Date round(final java.lang.Object date, final int field) {\n    if (field < 0) {\n        {\n            if (date == null) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            if (date instanceof java.util.Date) {\n                return org.apache.commons.lang3.time.DateUtils.round(((java.util.Date)(date)), field);\n            } else if (date instanceof java.util.Calendar) {\n                return org.apache.commons.lang3.time.DateUtils.round(((java.util.Calendar)(date)), field).getTime();\n            } else {\n                throw new java.lang.ClassCastException((\"Could not round \" + date));\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"field"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3478","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[343],"tindex":"b16d2d0f-3e40-11e6-aaff-87de88be81fb","method":{"position":"org.apache.commons.lang3.ArrayUtils:1371","type":"CtMethodImpl","sourcecode":"public static boolean isSameLength(final boolean[] array1, final boolean[] array2) {\n    if (array2 == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((((array1 == null) && (array2 != null)) && ((array2.int) > 0)) || (((array2 == null) && (array1 != null)) && ((array1.int) > 0))) || (((array1 != null) && (array2 != null)) && ((array1.int) != (array2.int)))) {\n                return false;\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2663","type":"CtBinaryOperatorImpl","sourcecode":"(c1 != c2) && ((java.lang.Character.toUpperCase(c1)) != (java.lang.Character.toUpperCase(c2)))"},"failures":[],"tindex":"b16d2d10-3e40-11e6-aaff-478c0f5aeb34","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1057","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrSubstitutor setVariableSuffix(final char suffix) {\n    if ((suffix != suffix) && ((java.lang.Character.toUpperCase(c1)) != (java.lang.Character.toUpperCase(c2)))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return setVariableSuffixMatcher(org.apache.commons.lang3.text.StrMatcher.charMatcher(suffix));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c1":"suffix","c2":"suffix"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:661","type":"CtBinaryOperatorImpl","sourcecode":"falseString == null"},"failures":[],"tindex":"b16d2d11-3e40-11e6-aaff-e9a196078877","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:212","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final byte lhs, final byte rhs) {\n    if (fieldName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (fieldName == null) {\n                throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n            } \n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if (lhs != rhs) {\n                java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Byte>(fieldName) {\n                    private static final long serialVersionUID = 1L;\n\n                    @java.lang.Override\n                    public java.lang.Byte getLeft() {\n                        return java.lang.Byte.valueOf(lhs);\n                    }\n\n                    @java.lang.Override\n                    public java.lang.Byte getRight() {\n                        return java.lang.Byte.valueOf(rhs);\n                    }\n                });\n            } \n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"falseString":"fieldName"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.CallableBackgroundInitializer:122","type":"CtBinaryOperatorImpl","sourcecode":"call == null"},"failures":[344,345],"tindex":"b16d7b32-3e40-11e6-aaff-b32631870712","method":{"position":"org.apache.commons.lang3.concurrent.CallableBackgroundInitializer:121","type":"CtMethodImpl","sourcecode":"private void checkCallable(final java.util.concurrent.Callable<T> call) {\n    if (call == null) {\n        {\n            if (call == null) {\n                throw new java.lang.IllegalArgumentException(\"Callable must not be null!\");\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"call":"call"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2815","type":"CtBinaryOperatorImpl","sourcecode":"(separator == null) || (org.apache.commons.lang3.StringUtils.EMPTY.equals(separator))"},"failures":[],"tindex":"b16d7b33-3e40-11e6-aaff-2fc279e7240e","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:815","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final float value) {\n    if ((fieldName == null) || (fieldName.equals(separator))) {\n        {\n            appendFieldStart(buffer, fieldName);\n            appendDetail(buffer, fieldName, value);\n            appendFieldEnd(buffer, fieldName);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.lang3.StringUtils.EMPTY":"fieldName","separator":"fieldName"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:733","type":"CtBinaryOperatorImpl","sourcecode":"(isEquals) == false"},"failures":[],"tindex":"b16d7b34-3e40-11e6-aaff-535ced68b11f","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:559","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final boolean[] array, final boolean fullDetail) {\n    if (fullDetail == false) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, array, java.lang.Boolean.valueOf(fullDetail));\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isEquals":"fullDetail"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:146","type":"CtBinaryOperatorImpl","sourcecode":"methodNames == null"},"failures":[],"tindex":"b16d7b35-3e40-11e6-aaff-dd9ba68be286","method":{"position":"org.apache.commons.lang3.StringUtils:702","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] stripAll(final java.lang.String... strs) {\n    if (strs == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (strs == null) {\n                {\n                    return org.apache.commons.lang3.StringUtils.stripAll(strs, null);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodNames":"strs"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1740","type":"CtBinaryOperatorImpl","sourcecode":"arrayStart == null"},"failures":[],"tindex":"b16da246-3e40-11e6-aaff-8593ec85e551","method":{"position":"org.apache.commons.lang3.time.DateFormatUtils:289","type":"CtMethodImpl","sourcecode":"public static java.lang.String format(final long millis, final java.lang.String pattern, final java.util.TimeZone timeZone, final java.util.Locale locale) {\n    if (pattern == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateFormatUtils.format(new java.util.Date(millis), pattern, timeZone, locale);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"arrayStart":"pattern"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:588","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[],"tindex":"b16da247-3e40-11e6-aaff-4f37f8b6a7f4","method":{"position":"org.apache.commons.lang3.ArrayUtils:3455","type":"CtMethodImpl","sourcecode":"public static boolean[] toPrimitive(final java.lang.Boolean[] array, final boolean valueForNull) {\n    if (valueForNull == valueForNull) {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.boolean[];\n            } \n            final boolean[] boolean[] = new boolean[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                final java.lang.Boolean java.lang.Boolean = array[i];\n                result[i] = b == null ? valueForNull : b.booleanValue();\n            }\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"valueForNull","rhs":"valueForNull"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:690","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[346],"tindex":"b16da248-3e40-11e6-aaff-6b6a79e3eac0","method":{"position":"org.apache.commons.lang3.StringUtils:3527","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final double[] array, final char separator) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } \n            return org.apache.commons.lang3.StringUtils.join(array, separator, 0, array.int);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharEncoding:95","type":"CtBinaryOperatorImpl","sourcecode":"name == null"},"failures":[],"tindex":"b16dc959-3e40-11e6-aaff-edbe67ff93e1","method":{"position":"org.apache.commons.lang3.CharSet:173","type":"CtMethodImpl","sourcecode":"protected void add(final java.lang.String str) {\n    if (str == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == str) {\n                {\n                    if (str == null) {\n                        return ;\n                    } \n                    final int int = str.length();\n                    int int = 0;\n                    while (pos < len) {\n                        final int int = len - pos;\n                        if (((remainder >= 4) && ((str.charAt(pos)) == '^')) && ((str.charAt((pos + 2))) == '-')) {\n                            java.util.Set<org.apache.commons.lang3.CharRange>.add(org.apache.commons.lang3.CharRange.isNotIn(str.charAt((pos + 1)), str.charAt((pos + 3))));\n                            pos += 4;\n                        } else if ((remainder >= 3) && ((str.charAt((pos + 1))) == '-')) {\n                            java.util.Set<org.apache.commons.lang3.CharRange>.add(org.apache.commons.lang3.CharRange.isIn(str.charAt(pos), str.charAt((pos + 2))));\n                            pos += 3;\n                        } else if ((remainder >= 2) && ((str.charAt(pos)) == '^')) {\n                            java.util.Set<org.apache.commons.lang3.CharRange>.add(org.apache.commons.lang3.CharRange.isNot(str.charAt((pos + 1))));\n                            pos += 2;\n                        } else {\n                            java.util.Set<org.apache.commons.lang3.CharRange>.add(org.apache.commons.lang3.CharRange.is(str.charAt(pos)));\n                            pos += 1;\n                        }\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"str"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:596","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"b16dc95a-3e40-11e6-aaff-d7c50dd8d24a","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1490","type":"CtMethodImpl","sourcecode":"protected void appendContentEnd(final java.lang.StringBuffer buffer) {\n    if (buffer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(java.lang.String);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"buffer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:898","type":"CtBinaryOperatorImpl","sourcecode":"rhs == null"},"failures":[347],"tindex":"b16dc95b-3e40-11e6-aaff-bb1d83004666","method":{"position":"org.apache.commons.lang3.ArrayUtils:2714","type":"CtMethodImpl","sourcecode":"public static boolean contains(final double[] array, final double valueToFind) {\n    if (array == null) {\n        {\n            return (org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind)) != (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229073577/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"rhs":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}