{"failureDictionary":{"org.apache.commons.lang3.text.StrBuilderTest.testDeleteFirst_String":134,"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":182,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":97,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":259,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_Boolean":60,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":92,"org.apache.commons.lang3.math.NumberUtilsTest.testLang381":216,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testConstantFuture_null":2,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":183,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":306,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":309,"org.apache.commons.lang3.ValidateTest.testIsTrue5":14,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceFirst_String_String":133,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":89,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceAll_StrMatcher_String":159,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementLongArray":285,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCode":32,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testFloatArrayAsObject":24,"org.apache.commons.lang3.time.FastDateParserTest.testLANG_832":329,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":84,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddDash":410,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_AD":379,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":396,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":221,"org.apache.commons.lang3.text.StrBuilderTest.testContains_StrMatcher":68,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDefaults":352,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":223,"org.apache.commons.lang3.StringUtilsTest.testSplitByCharacterType":71,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":190,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":254,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testByteArrayAsObject":35,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOfLang294":76,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":393,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":180,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":249,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCyclicalObjectReferences":173,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringStringarray":428,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":262,"org.apache.commons.lang3.math.NumberUtilsTest.testToLongString":15,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":80,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":264,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_BC":337,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":81,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testConstantFuture_Integer":1,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_BC":380,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testExtendedFormats":112,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testTimeZoneMatches":303,"org.apache.commons.lang3.StringUtilsTest.testSplitByWholeSeparatorPreserveAllTokens_StringStringInt":145,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListenerWithPrivateAddMethod":48,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testTimeZoneMatches":384,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementFloatArray":286,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testObject":33,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testLongArrayAsObject":34,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOf_StrMatcher_int":67,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringString":422,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":305,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_AD":336,"org.apache.commons.lang3.StringUtilsTest.testSplitByWholeString_StringStringBooleanInt":146,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":245,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":312,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":400,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_Integer":62,"org.apache.commons.lang3.time.FastDateParserTest.testParseNumerics":325,"org.apache.commons.lang3.time.FastDateParserTest.testPatternMatches":342,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryReplace":162,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":235,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":307,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeMethod":53,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testShort":140,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":390,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetValueDelimiter":151,"org.apache.commons.lang3.time.FastDateParserTest.testLocaleMatches":318,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":90,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testToStringContainsName":300,"org.apache.commons.lang3.CharUtilsTest.testIsAsciiAlphaLower_char":277,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":308,"org.apache.commons.lang3.CharSetTest.testConstructor_String_simple":412,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":108,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":316,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":91,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":405,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":258,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":192,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":398,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithNullText":208,"org.apache.commons.lang3.CharUtilsTest.testIsAsciiAlphanumeric_char":275,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_AD":334,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":343,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAlphaNumeric":4,"org.apache.commons.lang3.time.FastDateParserTest.testDayOf":319,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":401,"org.apache.commons.lang3.text.StrMatcherTest.testSpaceMatcher":121,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseNumerics":368,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringString":424,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementShortArray":290,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang538":370,"org.apache.commons.lang3.CharSetTest.testContains_Char":414,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":271,"org.apache.commons.lang3.time.DateFormatUtilsTest.testConstructor":314,"org.apache.commons.lang3.text.StrMatcherTest.testCharMatcher_char":116,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":231,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementBooleanArray":63,"org.apache.commons.lang3.RangeTest.testContainsRange":440,"org.apache.commons.lang3.BitFieldTest.testClearShort":441,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":240,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":126,"org.apache.commons.lang3.time.DateUtilsTest.testIteratorEx":438,"org.apache.commons.lang3.text.StrTokenizerTest.testChaining":169,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":387,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":399,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testBooleanMultiArray":30,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang303":369,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadNamingPattern":278,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":220,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testPatternMatches":304,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceAll_String_String":131,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":186,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableWriter":59,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":255,"org.apache.commons.lang3.tuple.ImmutablePairTest.testEquals":201,"org.apache.commons.lang3.text.StrMatcherTest.testCharSetMatcher_charArray":123,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":333,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":257,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":226,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_BC":378,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang303":297,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testBuildNamingPatternNull":280,"org.apache.commons.lang3.builder.DiffBuilderTest.testSimilarObjectIgnoresAppends":191,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testBlank":227,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLocaleMatches":294,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":100,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StringBuffer":209,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":311,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":125,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_AD":377,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":298,"org.apache.commons.lang3.ArrayUtilsTest.testContainsChar":12,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetEscape":152,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvString":409,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.test_Equality_Hash":373,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":403,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOf_String_int":135,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_Object":210,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":237,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementByteArray":289,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":270,"org.apache.commons.lang3.ArrayUtilsTest.testCloneBoolean":66,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":268,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":86,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":83,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":189,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testBooleanArrayAsObject":38,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateInstance":348,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":386,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testPatternMatches":385,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsOnly_String":143,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeExactStaticMethod":54,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":244,"org.apache.commons.lang3.text.StrBuilderTest.testContains_char":9,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryCount":158,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":188,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddCombinations":416,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":269,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_AD":374,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":391,"org.apache.commons.lang3.tuple.MutablePairTest.testSerialization":202,"org.apache.commons.lang3.CharSetTest.testGetInstance":421,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testSuper":23,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":195,"org.apache.commons.lang3.time.FastDateParserTest.testAmPm":321,"org.apache.commons.lang3.event.EventUtilsTest.testBindFilteredEventsToMethod":49,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":247,"org.apache.commons.lang3.time.FastDateFormatTest.testLang954":346,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testObjectArrayAsObject":29,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListenerWithNoAddMethod":45,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_BC":375,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testMilleniumBug":293,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_BC":367,"org.apache.commons.lang3.text.StrMatcherTest.testTabMatcher":119,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":198,"org.apache.commons.lang3.ClassUtilsTest.testPrimitivesToWrappers":214,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":88,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":184,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringStringarray":431,"org.apache.commons.lang3.tuple.PairTest.testCompatibilityBetweenPairs":204,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":225,"org.apache.commons.lang3.CharSetTest.testConstructor_String_combo":415,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixtureWithTransients":41,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyByteNull":206,"org.apache.commons.lang3.time.FastDateParserTest.testEquals":338,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":395,"org.apache.commons.lang3.SerializationUtilsTest.testSerializeBytesNull":44,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang645":299,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":243,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance":344,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":250,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testSpecialCharacters":358,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParses":382,"org.apache.commons.lang3.text.StrBuilderTest.testEquals":434,"org.apache.commons.lang3.reflect.TypeUtilsTest.testTypesSatisfyVariables":445,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOf_StrMatcher":69,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testExtendedAndBuiltInFormats":113,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":105,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_StrMatcher":435,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementCharArray":11,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringStringarray":430,"org.apache.commons.lang3.BitFieldTest.testSetShortBoolean":442,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testBuilderResetAfterBuild":281,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":273,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone_Locale":347,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils":7,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testDayOf":362,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteDeclaredNamedStaticField":212,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testMilleniumBug":360,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String":213,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testQuotes":383,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":408,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":96,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":232,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringString":429,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone":354,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementBooleanArray":64,"org.apache.commons.lang3.StringUtilsTest.testDifference_StringString":439,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":228,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":389,"org.apache.commons.lang3.CharSetTest.testHashCode":418,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":265,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_Integer_Integer_Integer_noMatch":18,"org.apache.commons.lang3.builder.DiffResultTest.testListIsNonModifiable":170,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":239,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNull":149,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String":350,"org.apache.commons.lang3.tuple.MutablePairTest.testEquals":203,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testSimpleDate":291,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDifferingStyles":353,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":79,"org.apache.commons.lang3.time.DateUtilsTest.testAddSeconds":10,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testDoubleArrayAsObject":26,"org.apache.commons.lang3.time.FastDateParserTest.testToStringContainsName":328,"org.apache.commons.lang3.ObjectUtilsTest.testHashCodeMulti_multiple_nullArray":74,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":248,"org.apache.commons.lang3.CharUtilsTest.testToChar_Character":142,"org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayOfFloats":282,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testObjectArray":20,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEmbeddedPatternInChoice":111,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiBooleanArray":137,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":296,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePartialString_noReplace":109,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementCharArray":288,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDefaults":357,"org.apache.commons.lang3.StringUtilsIsTest.testIsAlphaspace":73,"org.apache.commons.lang3.StringUtilsTest.testIsAllUpperCase":432,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":107,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":406,"org.apache.commons.lang3.ConversionTest.testBinaryToInt":0,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethodWithEvent":50,"org.apache.commons.lang3.RandomStringUtilsTest.testLang100":3,"org.apache.commons.lang3.text.StrBuilderTest.testRightString":144,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":229,"org.apache.commons.lang3.time.FastDateParserTest.testSpecialCharacters":315,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testOverriddenBuiltinFormat":110,"org.apache.commons.lang3.time.FastDateParserTest.testLowYearPadding":322,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":85,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_AD":366,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":397,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOf_String":77,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryEndIndex":157,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethod":47,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableStream":127,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":242,"org.apache.commons.lang3.time.FastDateFormatTest.testDateDefaults":351,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":246,"org.apache.commons.lang3.time.FastDateParserTest.testMilleniumBug":317,"org.apache.commons.lang3.CharSetTest.testEquals_Object":413,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetPrefix":154,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringStringarray":425,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":234,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDateDefaults":349,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetSuffix":155,"org.apache.commons.lang3.text.StrMatcherTest.testStringMatcher_String":120,"org.apache.commons.lang3.text.StrMatcherTest.testMatcherIndices":163,"org.apache.commons.lang3.text.StrMatcherTest.testNoneMatcher":118,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementIntArray":287,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":394,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementDoubleArray":75,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testShortArrayAsObject":37,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":260,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":302,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstringBetween_StringString":72,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionArrays":433,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHierarchyHashCode":28,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":376,"org.apache.commons.lang3.time.FastDateParserTest.testParseZone":320,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListener":46,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmpty":153,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":267,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCodeExcludeFields":36,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxFloat_emptyArray":215,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyObject":57,"org.apache.commons.lang3.tuple.ImmutablePairTest.testSerialization":200,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":187,"org.apache.commons.lang3.time.FastDateParserTest.testLang538":327,"org.apache.commons.lang3.time.FastDateParserTest.testLang303":326,"org.apache.commons.lang3.text.StrMatcherTest.testCommaMatcher":115,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_AD":323,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":261,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testBuilderReset":279,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":404,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorNoArgs":94,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":224,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testCharArrayAsObject":22,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetRootCauseStackTrace_Throwable":128,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionHierarchyEquals":175,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":196,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_Boolean":61,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":313,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_BC":324,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfChar":13,"org.apache.commons.lang3.text.StrBuilderTest.testLang294":132,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEqualsExcludeFields":174,"org.apache.commons.lang3.text.StrBuilderTest.testLang295":8,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":185,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":199,"org.apache.commons.lang3.ObjectUtilsTest.testConstMethods":70,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":392,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testShortArray":141,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":407,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testInteger":42,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":218,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseZone":363,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionObjectCycle":27,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":99,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryMatcher":161,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeStaticMethod":51,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringString":427,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixture":40,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":148,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testToStringContainsName":371,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":222,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testBlank":252,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomNumeric":6,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringStringarray":426,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayToObjectArray":65,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testObjectBuild":21,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":263,"org.apache.commons.lang3.builder.DiffResultTest.testIterator":171,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testToHashCodeEqualsHashCode":31,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_StringBuffer":207,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":219,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":103,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryStartIndex":160,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":179,"org.apache.commons.lang3.StringUtilsTest.testSplitByWholeString_StringStringBoolean":147,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":211,"org.apache.commons.lang3.ArrayUtilsTest.testReverseDouble":443,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":274,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":181,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":106,"org.apache.commons.lang3.ClassUtilsTest.testGetPublicMethod":136,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":197,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":236,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":124,"org.apache.commons.lang3.time.FastDateParserTest.testTimeZoneMatches":341,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":93,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_BC":332,"org.apache.commons.lang3.builder.CompareToBuilderTest.testBooleanArray":138,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":194,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceFirst_StrMatcher_String":156,"org.apache.commons.lang3.mutable.MutableIntTest.testCompareToNull":444,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":359,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_Integer_Integer_Integer_nullValue":17,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":256,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":102,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoVariables":150,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testIntArrayAsObject":25,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":193,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_Locale":355,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":104,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testEquals":381,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":82,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":230,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateTimeInstance":356,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxFloat":217,"org.apache.commons.lang3.CharSetTest.testGetInstance_Stringarray":419,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":168,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":87,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":310,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_BC":335,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":253,"org.apache.commons.lang3.text.StrMatcherTest.testSplitMatcher":122,"org.apache.commons.lang3.builder.CompareToBuilderTest.testBooleanArrayHiddenByObject":139,"org.apache.commons.lang3.CharSetTest.testSerialization":411,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testAmPm":364,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddNegate":420,"org.apache.commons.lang3.time.DateUtilsTest.testWeekIterator":437,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteAll_String":129,"org.apache.commons.lang3.time.DateUtilsTest.testMonthIterator":436,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_AD":331,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareExcludeFields":176,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":241,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":95,"org.apache.commons.lang3.text.StrBuilderTest.testContains_String":130,"org.apache.commons.lang3.text.StrMatcherTest.testCharSetMatcher_String":117,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeExactMethod":52,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":402,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLowYearPadding":365,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLANG_832":372,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyObjectEmptyArray":58,"org.apache.commons.lang3.StringUtilsSubstringTest.testCountMatches_String":19,"org.apache.commons.lang3.time.FastDateParserTest.test_Equality_Hash":330,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testIntegerWithTransients":39,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":266,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":233,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":345,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareTransients":178,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEquals":172,"org.apache.commons.lang3.time.FastDateParserTest.testQuotes":340,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAlphabetic":5,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testEquals":301,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":238,"org.apache.commons.lang3.tuple.PairTest.testMapEntry":205,"org.apache.commons.lang3.ArrayUtilsTest.testHashCode":43,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeExactConstructor":56,"org.apache.commons.lang3.time.FastDateParserTest.testParses":339,"org.apache.commons.lang3.text.StrMatcherTest.testTrimMatcher":114,"org.apache.commons.lang3.HashSetvBitSetTest.testTimesExtractOrBitset":283,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":98,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLowYearPadding":295,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompare":177,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":166,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":165,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringString":423,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":167,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":164,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":272,"org.apache.commons.lang3.CharSetTest.testConstructor_String_comboNegated":417,"org.apache.commons.lang3.CharUtilsTest.testIsAsciiAlpha_char":276,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":388,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeConstructor":55,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementsObjectArray":284,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocaleMatches":361,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":101,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":292,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_Integer_Integer_Integer":16,"org.apache.commons.lang3.StringUtilsTest.testSplitPreserveAllTokens_String":78,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":251},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1010","type":"CtBinaryOperatorImpl","sourcecode":"element == field"},"failures":[0],"tindex":"9872967e-2eba-11e6-9639-abf4db55456a","method":{"position":"org.apache.commons.lang3.Conversion:1079","type":"CtMethodImpl","sourcecode":"public static int binaryToInt(final boolean[] src, final int srcPos, final int dstInit, final int dstPos, final int nBools) {\n    if (dstPos == dstInit) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((((src.int) == 0) && (srcPos == 0)) || (0 == nBools)) {\n                return dstInit;\n            } \n            if (((nBools - 1) + dstPos) >= 32) {\n                throw new java.lang.IllegalArgumentException(\"nBools-1+dstPos is greather or equal to than 32\");\n            } \n            int int = dstInit;\n            int int = 0;\n            for (int int = 0 ; i < nBools ; i++) {\n                shift = (i * 1) + dstPos;\n                final int int = (src[(i + srcPos)] ? 1 : 0) << shift;\n                final int int = 1 << shift;\n                out = (out & (~mask)) | bits;\n            }\n            return out;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"dstInit","element":"dstPos"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:633","type":"CtVariableReadImpl","sourcecode":"autoboxing"},"failures":[1,2],"tindex":"987380df-2eba-11e6-9639-f5ada05de766","method":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:388","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean cancel(final boolean mayInterruptIfRunning) {\n    if (mayInterruptIfRunning) {\n        {\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"autoboxing":"mayInterruptIfRunning"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:801","type":"CtBinaryOperatorImpl","sourcecode":"(((nBytes - 1) * 8) + dstPos) >= 64"},"failures":[3,4,5,6,7],"tindex":"987380e0-2eba-11e6-9639-4104d1ee1c38","method":{"position":"org.apache.commons.lang3.RandomStringUtils:142","type":"CtMethodImpl","sourcecode":"public static java.lang.String random(final int count, final boolean letters, final boolean numbers) {\n    if ((((count - 1) * 8) + count) >= 64) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.RandomStringUtils.random(count, 0, 0, letters, numbers);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dstPos":"count","nBytes":"count"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5782","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isLowerCase(ch)"},"failures":[8,9],"tindex":"9873a7f1-2eba-11e6-9639-b5ca738bcb5d","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2247","type":"CtMethodImpl","sourcecode":"public boolean contains(final char ch) {\n    if (java.lang.Character.isLowerCase(ch)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final char[] char[] = char[];\n            for (int int = 0 ; i < (org.apache.commons.lang3.text.StrBuilder.this.int) ; i++) {\n                if ((thisBuf[i]) == ch) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:422","type":"CtBinaryOperatorImpl","sourcecode":"depth == 1"},"failures":[10],"tindex":"9873cf02-2eba-11e6-9639-454acf3f744e","method":{"position":"org.apache.commons.lang3.time.DateUtils:488","type":"CtMethodImpl","sourcecode":"public static java.util.Date addSeconds(final java.util.Date date, final int amount) {\n    if (amount == 1) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.add(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"depth":"amount"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3792","type":"CtBinaryOperatorImpl","sourcecode":"array1 == null"},"failures":[11,12,13],"tindex":"9873cf03-2eba-11e6-9639-018635b24059","method":{"position":"org.apache.commons.lang3.ArrayUtils:2313","type":"CtMethodImpl","sourcecode":"public static int indexOf(final char[] array, final char valueToFind) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array1":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4881","type":"CtBinaryOperatorImpl","sourcecode":"replaceChars == null"},"failures":[14],"tindex":"9873f614-2eba-11e6-9639-61df1e10a222","method":{"position":"org.apache.commons.lang3.Validate:129","type":"CtMethodImpl","sourcecode":"public static void isTrue(final boolean expression, final java.lang.String message, final double value) {\n    if (message == null) {\n        {\n            if (expression == false) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message, java.lang.Double.valueOf(value)));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"replaceChars":"message"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2034","type":"CtBinaryOperatorImpl","sourcecode":"sizeEndText == null"},"failures":[15],"tindex":"9873f615-2eba-11e6-9639-07c1c30a726d","method":{"position":"org.apache.commons.lang3.math.NumberUtils:148","type":"CtMethodImpl","sourcecode":"public static long toLong(final java.lang.String str) {\n    if (str == null) {\n        {\n            return org.apache.commons.lang3.math.NumberUtils.toLong(str, 0L);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sizeEndText":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:371","type":"CtInvocationImpl","sourcecode":"value.equals(nullValue)"},"failures":[16,17,18],"tindex":"98741d26-2eba-11e6-9639-91509e74713d","method":{"position":"org.apache.commons.lang3.BooleanUtils:289","type":"CtMethodImpl","sourcecode":"public static boolean toBoolean(final java.lang.Integer value, final java.lang.Integer trueValue, final java.lang.Integer falseValue) {\n    if (value.equals(falseValue)) {\n        {\n            if (value == null) {\n                if (trueValue == null) {\n                    return true;\n                } \n                if (falseValue == null) {\n                    return false;\n                } \n            } else if (value.equals(trueValue)) {\n                return true;\n            } else if (value.equals(falseValue)) {\n                return false;\n            } \n            throw new java.lang.IllegalArgumentException(\"The Integer did not match either specified value\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value","nullValue":"falseValue"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:86","type":"CtBinaryOperatorImpl","sourcecode":"(firstChar == 'x') || (firstChar == 'X')"},"failures":[],"tindex":"98741d27-2eba-11e6-9639-338c9affb2f9","method":{"position":"org.apache.commons.lang3.CharUtils:217","type":"CtMethodImpl","sourcecode":"public static int toIntValue(final char ch) {\n    if ((ch == 'x') || (firstChar == 'X')) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.CharUtils.isAsciiNumeric(ch)) == false) {\n                throw new java.lang.IllegalArgumentException(((\"The character \" + ch) + \" is not in the range '0' - '9'\"));\n            } \n            return ch - 48;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"firstChar":"ch"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4878","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(searchChars))"},"failures":[19],"tindex":"98744438-2eba-11e6-9639-69fb20cb59a2","method":{"position":"org.apache.commons.lang3.StringUtils:5811","type":"CtMethodImpl","sourcecode":"public static int countMatches(final java.lang.CharSequence str, final java.lang.CharSequence sub) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(str))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(sub))) {\n                return 0;\n            } \n            int int = 0;\n            int int = 0;\n            while ((idx = org.apache.commons.lang3.CharSequenceUtils.indexOf(str, sub, idx)) != (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) {\n                count++;\n                idx += sub.length();\n            }\n            return count;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str","searchChars":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1075","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"tindex":"98746b49-2eba-11e6-9639-c528ba81cb69","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:815","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final java.lang.Object object) {\n    if (object == null) {\n        {\n            if (object == null) {\n                int = (int) * (int);\n            } else {\n                if (object.getClass().isArray()) {\n                    if (object instanceof long[]) {\n                        append(((long[])(object)));\n                    } else if (object instanceof int[]) {\n                        append(((int[])(object)));\n                    } else if (object instanceof short[]) {\n                        append(((short[])(object)));\n                    } else if (object instanceof char[]) {\n                        append(((char[])(object)));\n                    } else if (object instanceof byte[]) {\n                        append(((byte[])(object)));\n                    } else if (object instanceof double[]) {\n                        append(((double[])(object)));\n                    } else if (object instanceof float[]) {\n                        append(((float[])(object)));\n                    } else if (object instanceof boolean[]) {\n                        append(((boolean[])(object)));\n                    } else {\n                        append(((java.lang.Object[])(object)));\n                    }\n                } else {\n                    int = ((int) * (int)) + (object.hashCode());\n                }\n            }\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:891","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[],"tindex":"9874925a-2eba-11e6-9639-1b3339cb1f74","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:466","type":"CtMethodImpl","sourcecode":"static void register(final java.lang.Object value) {\n    if (value == value) {\n        {\n            synchronized(org.apache.commons.lang3.builder.HashCodeBuilder.org.apache.commons.lang3.builder.HashCodeBuilder.java.lang.Class) {\n                if ((org.apache.commons.lang3.builder.HashCodeBuilder.getRegistry()) == null) {\n                    org.apache.commons.lang3.builder.HashCodeBuilder.org.apache.commons.lang3.builder.HashCodeBuilder.java.lang.ThreadLocal<java.util.Set<org.apache.commons.lang3.builder.IDKey>>.set(new java.util.HashSet<org.apache.commons.lang3.builder.IDKey>());\n                } \n            }\n            org.apache.commons.lang3.builder.HashCodeBuilder.getRegistry().add(new org.apache.commons.lang3.builder.IDKey(value));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"value","rhs":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2034","type":"CtBinaryOperatorImpl","sourcecode":"sizeEndText == null"},"failures":[],"tindex":"9874b96b-2eba-11e6-9639-3d696eecf029","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:340","type":"CtMethodImpl","sourcecode":"public static java.lang.Object readDeclaredStaticField(final java.lang.Class<?> cls, final java.lang.String fieldName, final boolean forceAccess) throws java.lang.IllegalAccessException {\n    if (fieldName == null) {\n        throw new java.lang.IllegalAccessException();\n    } else {\n        {\n            final java.lang.reflect.Field java.lang.reflect.Field = org.apache.commons.lang3.reflect.FieldUtils.getDeclaredField(cls, fieldName, forceAccess);\n            org.apache.commons.lang3.Validate.isTrue((field != null), \"Cannot locate declared field %s.%s\", cls.getName(), fieldName);\n            return org.apache.commons.lang3.reflect.FieldUtils.readStaticField(field, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sizeEndText":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:265","type":"CtBinaryOperatorImpl","sourcecode":"value == falseValue"},"failures":[],"tindex":"9874b96c-2eba-11e6-9639-01bc4c06956d","method":{"position":"org.apache.commons.lang3.ArrayUtils:2481","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final byte[] array, final byte valueToFind, int startIndex) {\n    if (startIndex == startIndex) {\n        {\n            if (array == null) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } else if (startIndex >= (array.int)) {\n                startIndex = (array.int) - 1;\n            } \n            for (int int = startIndex ; i >= 0 ; i--) {\n                if (valueToFind == (array[i])) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"falseValue":"startIndex","value":"startIndex"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3368","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[44],"tindex":"9874e07d-2eba-11e6-9639-d5cd1a7acc02","method":{"position":"org.apache.commons.lang3.SerializationUtils:177","type":"CtMethodImpl","sourcecode":"public static byte[] serialize(final java.io.Serializable obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream(512);\n            org.apache.commons.lang3.SerializationUtils.serialize(obj, baos);\n            return baos.toByteArray();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:146","type":"CtBinaryOperatorImpl","sourcecode":"methodNames == null"},"failures":[45,46,47,48,49,50,51,52,53,54,55,56,57,58],"tindex":"9875078e-2eba-11e6-9639-1b1c254f11a0","method":{"position":"org.apache.commons.lang3.ArrayUtils:472","type":"CtMethodImpl","sourcecode":"public static java.lang.Object[] nullToEmpty(final java.lang.Object[] array) {\n    if (array == null) {\n        {\n            if ((array == null) || ((array.int) == 0)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Object[];\n            } \n            return array;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodNames":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2127","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[],"tindex":"9875078f-2eba-11e6-9639-131a588fe18c","method":{"position":"org.apache.commons.lang3.math.NumberUtils:120","type":"CtMethodImpl","sourcecode":"public static int toInt(final java.lang.String str, final int defaultValue) {\n    if (defaultValue < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return defaultValue;\n            } \n            try {\n                return java.lang.Integer.parseInt(str);\n            } catch (final java.lang.NumberFormatException nfe) {\n                return defaultValue;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"defaultValue"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.NoSuchMethodException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5897","type":"CtBinaryOperatorImpl","sourcecode":"count == null"},"failures":[],"tindex":"98752ea0-2eba-11e6-9639-21a352446148","method":{"position":"org.apache.commons.lang3.reflect.MethodUtils:153","type":"CtMethodImpl","sourcecode":"public static java.lang.Object invokeExactMethod(final java.lang.Object object, final java.lang.String methodName, java.lang.Object... args) throws java.lang.IllegalAccessException, java.lang.NoSuchMethodException, java.lang.reflect.InvocationTargetException {\n    if (object == null) {\n        throw new java.lang.NoSuchMethodException();\n    } else {\n        {\n            args = org.apache.commons.lang3.ArrayUtils.nullToEmpty(args);\n            final java.lang.Class<?>[] java.lang.Class<?>[] = org.apache.commons.lang3.ClassUtils.toClass(args);\n            return org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(object, methodName, args, parameterTypes);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:517","type":"CtBinaryOperatorImpl","sourcecode":"throwable == null"},"failures":[59],"tindex":"98752ea1-2eba-11e6-9639-4d7b5eb3fba3","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:488","type":"CtMethodImpl","sourcecode":"public static void printRootCauseStackTrace(final java.lang.Throwable throwable, final java.io.PrintWriter writer) {\n    if (throwable == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (throwable == null) {\n                return ;\n            } \n            if (writer == null) {\n                throw new java.lang.IllegalArgumentException(\"The PrintWriter must not be null\");\n            } \n            final java.lang.String[] java.lang.String[] = org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(throwable);\n            for (final java.lang.String java.lang.String : trace) {\n                writer.println(element);\n            }\n            writer.flush();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"throwable":"throwable"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:679","type":"CtFieldReadImpl","sourcecode":"objectsTriviallyEqual"},"failures":[60,61],"tindex":"987555b2-2eba-11e6-9639-59e572216b01","method":{"position":"org.apache.commons.lang3.text.StrBuilder:769","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder append(final boolean value) {\n    if (value) {\n        {\n            if (value) {\n                ensureCapacity(((int) + 4));\n                char[][((int)++)] = 't';\n                char[][((int)++)] = 'r';\n                char[][((int)++)] = 'u';\n                char[][((int)++)] = 'e';\n            } else {\n                ensureCapacity(((int) + 5));\n                char[][((int)++)] = 'f';\n                char[][((int)++)] = 'a';\n                char[][((int)++)] = 'l';\n                char[][((int)++)] = 's';\n                char[][((int)++)] = 'e';\n            }\n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsTriviallyEqual":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:369","type":"CtInvocationImpl","sourcecode":"value.equals(falseValue)"},"failures":[62],"tindex":"98757cc3-2eba-11e6-9639-632bfb4cf52d","method":{"position":"org.apache.commons.lang3.BooleanUtils:238","type":"CtMethodImpl","sourcecode":"public static java.lang.Boolean toBooleanObject(final java.lang.Integer value) {\n    if (value.equals(value)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                return null;\n            } \n            return (value.intValue()) == 0 ? java.lang.Boolean.java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"falseValue":"value","value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1195","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[63,64,65,66],"tindex":"9875a3d4-2eba-11e6-9639-ef2500f1bde6","method":{"position":"org.apache.commons.lang3.ArrayUtils:450","type":"CtMethodImpl","sourcecode":"public static boolean[] clone(final boolean[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } \n            return array.clone();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1217","type":"CtBinaryOperatorImpl","sourcecode":"endCutoff > (java.util.Calendar.SATURDAY)"},"failures":[67,68,69],"tindex":"9875a3d5-2eba-11e6-9639-29d1c7407683","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2391","type":"CtMethodImpl","sourcecode":"public int indexOf(final org.apache.commons.lang3.text.StrMatcher matcher, int startIndex) {\n    if (startIndex > startIndex) {\n        {\n            startIndex = startIndex < 0 ? 0 : startIndex;\n            if ((matcher == null) || (startIndex >= (int))) {\n                return -1;\n            } \n            final int int = int;\n            final char[] char[] = char[];\n            for (int int = startIndex ; i < len ; i++) {\n                if ((matcher.isMatch(buf, i, startIndex, len)) > 0) {\n                    return i;\n                } \n            }\n            return -1;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.util.Calendar.SATURDAY":"startIndex","endCutoff":"startIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomUtils:142","type":"CtBinaryOperatorImpl","sourcecode":"startInclusive == endInclusive"},"failures":[70],"tindex":"9875cae6-2eba-11e6-9639-abe81f7920ad","method":{"position":"org.apache.commons.lang3.ObjectUtils:934","type":"CtMethodImpl","sourcecode":"public static double CONST(final double v) {\n    if (v == v) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return v;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startInclusive":"v","endInclusive":"v"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:674","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[],"tindex":"9875cae7-2eba-11e6-9639-772967f440db","method":{"position":"org.apache.commons.lang3.time.FastDateParser:577","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nboolean addRegex(final org.apache.commons.lang3.time.FastDateParser parser, final java.lang.StringBuilder regex) {\n    if (regex == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.time.FastDateParser.escapeRegex(regex, java.lang.String, true);\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"regex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:732","type":"CtBinaryOperatorImpl","sourcecode":"str != null"},"failures":[71],"tindex":"9875cae8-2eba-11e6-9639-7bcf8f29813d","method":{"position":"org.apache.commons.lang3.StringUtils:3175","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] splitByCharacterType(final java.lang.String str) {\n    if (str != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.splitByCharacterType(str, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:195","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(className)"},"failures":[72],"tindex":"9875f1f9-2eba-11e6-9639-09c55e6f999f","method":{"position":"org.apache.commons.lang3.StringUtils:2449","type":"CtMethodImpl","sourcecode":"public static java.lang.String substringBetween(final java.lang.String str, final java.lang.String tag) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(tag)) {\n        {\n            return org.apache.commons.lang3.StringUtils.substringBetween(str, tag, tag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"className":"tag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:507","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[73],"tindex":"9875f1fa-2eba-11e6-9639-3b019bf3a80f","method":{"position":"org.apache.commons.lang3.StringUtils:5881","type":"CtMethodImpl","sourcecode":"public static boolean isAlphaSpace(final java.lang.CharSequence cs) {\n    if (cs == null) {\n        {\n            if (cs == null) {\n                return false;\n            } \n            final int int = cs.length();\n            for (int int = 0 ; i < sz ; i++) {\n                if (((java.lang.Character.isLetter(cs.charAt(i))) == false) && ((cs.charAt(i)) != ' ')) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"cs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3949","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[74],"tindex":"9875f1fb-2eba-11e6-9639-316731639da0","method":{"position":"org.apache.commons.lang3.ObjectUtils:238","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static int hashCodeMulti(final java.lang.Object... objects) {\n    if (objects == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 1;\n            if (objects != null) {\n                for (final java.lang.Object java.lang.Object : objects) {\n                    int int = org.apache.commons.lang3.ObjectUtils.hashCode(object);\n                    hash = (hash * 31) + tmpHash;\n                }\n            } \n            return hash;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"objects"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:672","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"9875f1fc-2eba-11e6-9639-4bbd38a12e03","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:212","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final byte lhs, final byte rhs) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (fieldName == null) {\n                throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n            } \n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if (lhs != rhs) {\n                java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Byte>(fieldName) {\n                    private static final long serialVersionUID = 1L;\n\n                    @java.lang.Override\n                    public java.lang.Byte getLeft() {\n                        return java.lang.Byte.valueOf(lhs);\n                    }\n\n                    @java.lang.Override\n                    public java.lang.Byte getRight() {\n                        return java.lang.Byte.valueOf(rhs);\n                    }\n                });\n            } \n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1433","type":"CtBinaryOperatorImpl","sourcecode":"(((nHexs - 1) * 4) + srcPos) >= 32"},"failures":[],"tindex":"9876190d-2eba-11e6-9639-012be21c4ed5","method":{"position":"org.apache.commons.lang3.Validate:776","type":"CtMethodImpl","sourcecode":"public static <T extends java.lang.CharSequence>T validIndex(final T chars, final int index) {\n    if ((((index - 1) * 4) + index) >= 32) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.Validate.validIndex(chars, index, org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.java.lang.String, java.lang.Integer.valueOf(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcPos":"index","nHexs":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:419","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[75],"tindex":"9876190e-2eba-11e6-9639-612245b08ec5","method":{"position":"org.apache.commons.lang3.ArrayUtils:5889","type":"CtMethodImpl","sourcecode":"public static double[] removeElements(final double[] array, final double... values) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            final java.util.HashMap<java.lang.Double, org.apache.commons.lang3.mutable.MutableInt> java.util.HashMap<java.lang.Double, org.apache.commons.lang3.mutable.MutableInt> = new java.util.HashMap<java.lang.Double, org.apache.commons.lang3.mutable.MutableInt>(values.int);\n            for (final double double : values) {\n                final java.lang.Double java.lang.Double = java.lang.Double.valueOf(v);\n                final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = occurrences.get(boxed);\n                if (count == null) {\n                    occurrences.put(boxed, new org.apache.commons.lang3.mutable.MutableInt(1));\n                } else {\n                    count.increment();\n                }\n            }\n            final java.util.BitSet java.util.BitSet = new java.util.BitSet();\n            for (final java.util.Map.Entry<java.lang.Double, org.apache.commons.lang3.mutable.MutableInt> java.util.Map.Entry<java.lang.Double, org.apache.commons.lang3.mutable.MutableInt> : occurrences.entrySet()) {\n                final java.lang.Double java.lang.Double = e.getKey();\n                int int = 0;\n                for (int int = 0, int int = e.getValue().intValue() ; i < ct ; i++) {\n                    found = org.apache.commons.lang3.ArrayUtils.indexOf(array, v.doubleValue(), found);\n                    if (found < 0) {\n                        break;\n                    } \n                    toRemove.set((found++));\n                }\n            }\n            return ((double[])(org.apache.commons.lang3.ArrayUtils.removeAll(array, toRemove)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:255","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[76,77],"tindex":"9876401f-2eba-11e6-9639-0d3cd616a1bf","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2322","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.String str) {\n    if (str == null) {\n        {\n            return indexOf(str, 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:253","type":"CtBinaryOperatorImpl","sourcecode":"input != null"},"failures":[78],"tindex":"98764020-2eba-11e6-9639-a5335e49864a","method":{"position":"org.apache.commons.lang3.StringUtils:2894","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] splitPreserveAllTokens(final java.lang.String str) {\n    if (str != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.splitWorker(str, null, (-1), true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3368","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"98766731-2eba-11e6-9639-511d019cdea2","method":{"position":"org.apache.commons.lang3.ArrayUtils:5769","type":"CtMethodImpl","sourcecode":"public static float[] removeAll(final float[] array, final int... indices) {\n    if (indices == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((float[])(org.apache.commons.lang3.ArrayUtils.removeAll(((java.lang.Object)(array)), org.apache.commons.lang3.ArrayUtils.clone(indices))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"indices"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:735","type":"CtInvocationImpl","sourcecode":"str.equals(falseString)"},"failures":[],"tindex":"98766732-2eba-11e6-9639-e57fcf79e759","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:492","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setSizeEndText(final java.lang.String sizeEndText) {\n    if (sizeEndText.equals(sizeEndText)) {\n        {\n            super.setSizeEndText(sizeEndText);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"sizeEndText","falseString":"sizeEndText"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:801","type":"CtBinaryOperatorImpl","sourcecode":"(((nBytes - 1) * 8) + dstPos) >= 64"},"failures":[79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123],"tindex":"98766733-2eba-11e6-9639-ef97625317f4","method":{"position":"org.apache.commons.lang3.text.StrMatcher:267","type":"CtMethodImpl","sourcecode":"public int isMatch(final char[] buffer, final int pos) {\n    if ((((pos - 1) * 8) + pos) >= 64) {\n        {\n            return isMatch(buffer, pos, 0, buffer.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dstPos":"pos","nBytes":"pos"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:801","type":"CtBinaryOperatorImpl","sourcecode":"(lhs == null) || (rhs == null)"},"failures":[124,124,125,126],"tindex":"98768e44-2eba-11e6-9639-efa0c4eaf051","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:317","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final byte[] array) {\n    if ((array == null) || (array == null)) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, array, null);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array","rhs":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:551","type":"CtBinaryOperatorImpl","sourcecode":"(causeFrames == null) || (wrapperFrames == null)"},"failures":[127,59,128],"tindex":"98768e45-2eba-11e6-9639-c5c098851fb3","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:550","type":"CtMethodImpl","sourcecode":"public static void removeCommonFrames(final java.util.List<java.lang.String> causeFrames, final java.util.List<java.lang.String> wrapperFrames) {\n    if ((wrapperFrames == null) || (causeFrames == null)) {\n        {\n            if ((causeFrames == null) || (wrapperFrames == null)) {\n                throw new java.lang.IllegalArgumentException(\"The List must not be null\");\n            } \n            int int = (causeFrames.size()) - 1;\n            int int = (wrapperFrames.size()) - 1;\n            while ((causeFrameIndex >= 0) && (wrapperFrameIndex >= 0)) {\n                final java.lang.String java.lang.String = causeFrames.get(causeFrameIndex);\n                final java.lang.String java.lang.String = wrapperFrames.get(wrapperFrameIndex);\n                if (causeFrame.equals(wrapperFrame)) {\n                    causeFrames.remove(causeFrameIndex);\n                } \n                causeFrameIndex--;\n                wrapperFrameIndex--;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"causeFrames":"wrapperFrames","wrapperFrames":"causeFrames"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:507","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[129,76,130,131,132,8,133,134,135,77],"tindex":"98768e46-2eba-11e6-9639-1122a1010cac","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2336","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.String str, int startIndex) {\n    if (str == null) {\n        {\n            startIndex = startIndex < 0 ? 0 : startIndex;\n            if ((str == null) || (startIndex >= (int))) {\n                return -1;\n            } \n            final int int = str.length();\n            if (strLen == 1) {\n                return indexOf(str.charAt(0), startIndex);\n            } \n            if (strLen == 0) {\n                return startIndex;\n            } \n            if (strLen > (int)) {\n                return -1;\n            } \n            final char[] char[] = char[];\n            final int int = ((int) - strLen) + 1;\n            outer : for (int int = startIndex ; i < len ; i++) {\n                for (int int = 0 ; j < strLen ; j++) {\n                    if ((str.charAt(j)) != (thisBuf[(i + j)])) {\n                        continue outer;\n                    } \n                }\n                return i;\n            }\n            return -1;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.NoSuchMethodException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1338","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[136],"tindex":"9876b557-2eba-11e6-9639-15eb61e96413","method":{"position":"org.apache.commons.lang3.ClassUtils:921","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Method getPublicMethod(final java.lang.Class<?> cls, final java.lang.String methodName, final java.lang.Class<?>... parameterTypes) throws java.lang.NoSuchMethodException, java.lang.SecurityException {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(methodName)) {\n        {\n            final java.lang.reflect.Method java.lang.reflect.Method = cls.getMethod(methodName, parameterTypes);\n            if (java.lang.reflect.Modifier.isPublic(declaredMethod.getDeclaringClass().getModifiers())) {\n                return declaredMethod;\n            } \n            final java.util.List<java.lang.Class<?>> java.util.List<java.lang.Class<?>> = new java.util.ArrayList<java.lang.Class<?>>();\n            candidateClasses.addAll(org.apache.commons.lang3.ClassUtils.getAllInterfaces(cls));\n            candidateClasses.addAll(org.apache.commons.lang3.ClassUtils.getAllSuperclasses(cls));\n            for (final java.lang.Class<?> java.lang.Class<?> : candidateClasses) {\n                if (!(java.lang.reflect.Modifier.isPublic(candidateClass.getModifiers()))) {\n                    continue;\n                } \n                java.lang.reflect.Method java.lang.reflect.Method;\n                try {\n                    candidateMethod = candidateClass.getMethod(methodName, parameterTypes);\n                } catch (final java.lang.NoSuchMethodException ex) {\n                    continue;\n                }\n                if (java.lang.reflect.Modifier.isPublic(candidateMethod.getDeclaringClass().getModifiers())) {\n                    return candidateMethod;\n                } \n            }\n            throw new java.lang.NoSuchMethodException((((\"Can't find a public method for \" + methodName) + \" \") + (org.apache.commons.lang3.ArrayUtils.toString(parameterTypes))));\n        }\n    } else {\n        throw new java.lang.NoSuchMethodException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"methodName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:891","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[137,138,139],"tindex":"9876dc68-2eba-11e6-9639-7ddf4abc91be","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:967","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final boolean[] lhs, final boolean[] rhs) {\n    if (rhs == rhs) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == null) {\n                int = -1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (rhs == null) {\n                int = +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                int = (lhs.int) < (rhs.int) ? -1 : +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && ((int) == 0) ; i++) {\n                append(lhs[i], rhs[i]);\n            }\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"rhs","rhs":"rhs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:4561","type":"CtBinaryOperatorImpl","sourcecode":"index != 0"},"failures":[],"tindex":"9876dc69-2eba-11e6-9639-7dd3db9897e4","method":{"position":"org.apache.commons.lang3.text.StrMatcher:366","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int isMatch(final char[] buffer, int pos, final int bufferStart, final int bufferEnd) {\n    if (bufferEnd != 0) {\n        {\n            final int int = char[].int;\n            if ((pos + len) > bufferEnd) {\n                return 0;\n            } \n            for (int int = 0 ; i < (char[].int) ; i++ , pos++) {\n                if ((char[][i]) != (buffer[pos])) {\n                    return 0;\n                } \n            }\n            return len;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"bufferEnd"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:798","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[],"tindex":"9877037a-2eba-11e6-9639-618740151acc","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:622","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final byte[] array) {\n    if (array == array) {\n        {\n            if (array == null) {\n                int = (int) * (int);\n            } else {\n                for (final byte byte : array) {\n                    append(element);\n                }\n            }\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array","rhs":"array"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:724","type":"CtBinaryOperatorImpl","sourcecode":"lhs != rhs"},"failures":[140,141,37],"tindex":"9877037b-2eba-11e6-9639-030818d53a2b","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:879","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final short value) {\n    if (value < value) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value != value) {\n                {\n                    int = ((int) * (int)) + value;\n                    return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"value","rhs":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:530","type":"CtBinaryOperatorImpl","sourcecode":"((dec == null) && (exp == null)) && ((((numeric.charAt(0)) == '-') && (org.apache.commons.lang3.math.NumberUtils.isDigits(numeric.substring(1)))) || (org.apache.commons.lang3.math.NumberUtils.isDigits(numeric)))"},"failures":[],"tindex":"9877037c-2eba-11e6-9639-e7a6eefbe907","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:583","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void set(final java.lang.String obj) {\n    if (((obj == null) && (obj == null)) && ((((obj.charAt(0)) == '-') && (org.apache.commons.lang3.math.NumberUtils.isDigits(numeric.substring(1)))) || (org.apache.commons.lang3.math.NumberUtils.isDigits(numeric)))) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"set() is unsupported\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dec":"obj","numeric":"obj","exp":"obj"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:263","type":"CtBinaryOperatorImpl","sourcecode":"ch == null"},"failures":[142],"tindex":"98772a8d-2eba-11e6-9639-abbef012b716","method":{"position":"org.apache.commons.lang3.CharUtils:129","type":"CtMethodImpl","sourcecode":"public static char toChar(final java.lang.Character ch) {\n    if (ch == null) {\n        {\n            if (ch == null) {\n                throw new java.lang.IllegalArgumentException(\"The Character must not be null\");\n            } \n            return ch.charValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:831","type":"CtBinaryOperatorImpl","sourcecode":"str1 == str2"},"failures":[143],"tindex":"98772a8e-2eba-11e6-9639-1f6196814b08","method":{"position":"org.apache.commons.lang3.StringUtils:1842","type":"CtMethodImpl","sourcecode":"public static boolean containsOnly(final java.lang.CharSequence cs, final java.lang.String validChars) {\n    if (cs == cs) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((cs == null) || (validChars == null)) {\n                return false;\n            } \n            return org.apache.commons.lang3.StringUtils.containsOnly(cs, validChars.toCharArray());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str1":"cs","str2":"cs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.LookupTranslator:56","type":"CtBinaryOperatorImpl","sourcecode":"sz > _longest"},"failures":[144],"tindex":"98772a8f-2eba-11e6-9639-89c8a85aeacb","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2201","type":"CtMethodImpl","sourcecode":"public java.lang.String rightString(final int length) {\n    if (length > length) {\n        {\n            if (length <= 0) {\n                return \"\";\n            } else if (length >= (int)) {\n                return new java.lang.String(char[] , 0 , int);\n            } else {\n                return new java.lang.String(char[] , ((int) - length) , length);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"_longest":"length","sz":"length"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:640","type":"CtBinaryOperatorImpl","sourcecode":"(isEquals) == false"},"failures":[],"tindex":"98772a90-2eba-11e6-9639-4541c1261de0","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:405","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setFieldSeparatorAtEnd(final boolean fieldSeparatorAtEnd) {\n    if (fieldSeparatorAtEnd == false) {\n        {\n            super.setFieldSeparatorAtEnd(fieldSeparatorAtEnd);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isEquals":"fieldSeparatorAtEnd"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4320","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(remove))"},"failures":[145,146,147],"tindex":"987751a1-2eba-11e6-9639-b9551b296b3d","method":{"position":"org.apache.commons.lang3.StringUtils:2803","type":"CtMethodImpl","sourcecode":"private static java.lang.String[] splitByWholeSeparatorWorker(final java.lang.String str, final java.lang.String separator, final int max, final boolean preserveAllTokens) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(str))) {\n        {\n            if (str == null) {\n                return null;\n            } \n            final int int = str.length();\n            if (len == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.String[];\n            } \n            if ((separator == null) || (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String.equals(separator))) {\n                return org.apache.commons.lang3.StringUtils.splitWorker(str, null, max, preserveAllTokens);\n            } \n            final int int = separator.length();\n            final java.util.ArrayList<java.lang.String> java.util.ArrayList<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n            int int = 0;\n            int int = 0;\n            int int = 0;\n            while (end < len) {\n                end = str.indexOf(separator, beg);\n                if (end > (-1)) {\n                    if (end > beg) {\n                        numberOfSubstrings += 1;\n                        if (numberOfSubstrings == max) {\n                            end = len;\n                            substrings.add(str.substring(beg));\n                        } else {\n                            substrings.add(str.substring(beg, end));\n                            beg = end + separatorLength;\n                        }\n                    } else {\n                        if (preserveAllTokens) {\n                            numberOfSubstrings += 1;\n                            if (numberOfSubstrings == max) {\n                                end = len;\n                                substrings.add(str.substring(beg));\n                            } else {\n                                substrings.add(org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String);\n                            }\n                        } \n                        beg = end + separatorLength;\n                    }\n                } else {\n                    substrings.add(str.substring(beg));\n                    end = len;\n                }\n            }\n            return substrings.toArray(new java.lang.String[substrings.size()]);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str","remove":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6310","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[79,148,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,149,96,97,98,99,100,150,101,102,103,104,151,105,106,152,107,153,154,108,155,109,156,157,158,159,160,161,68,162,163,120,164,165,166,167,168,169],"tindex":"987778b2-2eba-11e6-9639-4b9842a7b0bc","method":{"position":"org.apache.commons.lang3.text.StrMatcher:205","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.StrMatcher stringMatcher(final java.lang.String str) {\n    if (str == null) {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n                return org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher;\n            } \n            return new org.apache.commons.lang3.text.StrMatcher.StringMatcher(str);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:894","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,39,40,41,42,200,201,202,203,204,205],"tindex":"987778b3-2eba-11e6-9639-41127690cf5d","method":{"position":"org.apache.commons.lang3.tuple.Pair:130","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\n@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (obj == (org.apache.commons.lang3.tuple.Pair.this)) {\n                return true;\n            } \n            if (obj instanceof java.util.Map.Entry<?, ?>) {\n                final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n                return (org.apache.commons.lang3.ObjectUtils.equals(getKey(), other.getKey())) && (org.apache.commons.lang3.ObjectUtils.equals(getValue(), other.getValue()));\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:742","type":"CtBinaryOperatorImpl","sourcecode":"(str.startsWith(\"0\", pos)) && ((str.length()) > (pos + 1))"},"failures":[],"tindex":"98779fc4-2eba-11e6-9639-8560f13af55a","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:534","type":"CtMethodImpl","sourcecode":"public java.lang.String replace(java.lang.CharSequence source, int offset, int length) {\n    if ((source.startsWith(\"0\", length)) && ((str.length()) > (pos + 1))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (source == null) {\n                return null;\n            } \n            org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(length).append(source, offset, length);\n            substitute(buf, 0, length);\n            return buf.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"source","pos":"length"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1506","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[206],"tindex":"98779fc5-2eba-11e6-9639-91c18d54b9b4","method":{"position":"org.apache.commons.lang3.ArrayUtils:612","type":"CtMethodImpl","sourcecode":"public static byte[] nullToEmpty(final byte[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((array == null) || ((array.int) == 0)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.byte[];\n            } \n            return array;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:239","type":"CtBinaryOperatorImpl","sourcecode":"(cal1 == null) || (cal2 == null)"},"failures":[],"tindex":"98779fc6-2eba-11e6-9639-df38ddd9fd6b","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1194","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n    if ((calendar == null) || (calendar == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = (calendar.get(java.util.Calendar.java.util.Calendar.int)) + (calendar.get(java.util.Calendar.java.util.Calendar.int));\n            if (offset < 0) {\n                buffer.append('-');\n                offset = -offset;\n            } else {\n                buffer.append('+');\n            }\n            final int int = offset / ((60 * 60) * 1000);\n            buffer.append(((char)((hours / 10) + '0')));\n            buffer.append(((char)((hours % 10) + '0')));\n            if (boolean) {\n                buffer.append(':');\n            } \n            final int int = (offset / (60 * 1000)) - (60 * hours);\n            buffer.append(((char)((minutes / 10) + '0')));\n            buffer.append(((char)((minutes % 10) + '0')));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cal2":"calendar","cal1":"calendar"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:573","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[79,148,81,83,84,86,90,91,96,99,101,103,106,207,208,209,210],"tindex":"9877c6d7-2eba-11e6-9639-11edd69e9c6d","method":{"position":"org.apache.commons.lang3.text.StrBuilder:572","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder append(final java.lang.StringBuffer str) {\n    if (str == null) {\n        {\n            if (str == null) {\n                return appendNull();\n            } \n            final int int = str.length();\n            if (strLen > 0) {\n                final int int = length();\n                ensureCapacity((len + strLen));\n                str.getChars(0, strLen, char[], len);\n                int += strLen;\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:974","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[211,211],"tindex":"9877c6d8-2eba-11e6-9639-2d1837e39ce8","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:289","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final boolean[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, array, null);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.ClassUtils:281","type":"CtBinaryOperatorImpl","sourcecode":"cls == null"},"failures":[212],"tindex":"9877c6d9-2eba-11e6-9639-9d3ad3911373","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:576","type":"CtMethodImpl","sourcecode":"public static void writeDeclaredStaticField(final java.lang.Class<?> cls, final java.lang.String fieldName, final java.lang.Object value) throws java.lang.IllegalAccessException {\n    if (cls == null) {\n        {\n            org.apache.commons.lang3.reflect.FieldUtils.writeDeclaredStaticField(cls, fieldName, value, false);\n        }\n    } else {\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"cls"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:218","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.CharUtils.isAsciiNumeric(ch)) == false"},"failures":[],"tindex":"9877edea-2eba-11e6-9639-43ec741540d3","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:331","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final char value) {\n    if ((org.apache.commons.lang3.CharUtils.isAsciiNumeric(value)) == false) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, value);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6284","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[213],"tindex":"9877edeb-2eba-11e6-9639-4b6ef025e1b6","method":{"position":"org.apache.commons.lang3.text.WordUtils:504","type":"CtMethodImpl","sourcecode":"public static java.lang.String initials(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.text.WordUtils.initials(str, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:728","type":"CtBinaryOperatorImpl","sourcecode":"classes == null"},"failures":[214],"tindex":"9877edec-2eba-11e6-9639-e5d3a789fdf4","method":{"position":"org.apache.commons.lang3.ClassUtils:727","type":"CtMethodImpl","sourcecode":"public static java.lang.Class<?>[] primitivesToWrappers(final java.lang.Class<?>... classes) {\n    if (classes == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (classes == null) {\n                return null;\n            } \n            if ((classes.int) == 0) {\n                return classes;\n            } \n            final java.lang.Class<?>[] java.lang.Class<?>[] = new java.lang.Class[classes.int];\n            for (int int = 0 ; i < (classes.int) ; i++) {\n                convertedClasses[i] = org.apache.commons.lang3.ClassUtils.primitiveToWrapper(classes[i]);\n            }\n            return convertedClasses;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classes":"classes"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:863","type":"CtBinaryOperatorImpl","sourcecode":"(lhs == null) || (rhs == null)"},"failures":[215,216,217],"tindex":"987814fd-2eba-11e6-9639-0378a0842ad8","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1056","type":"CtMethodImpl","sourcecode":"public static float max(final float[] array) {\n    if ((array == null) || (array == null)) {\n        {\n            org.apache.commons.lang3.math.NumberUtils.validateArray(array);\n            float float = array[0];\n            for (int int = 1 ; j < (array.int) ; j++) {\n                if (java.lang.Float.isNaN(array[j])) {\n                    return java.lang.Float.java.lang.Float.float;\n                } \n                if ((array[j]) > max) {\n                    max = array[j];\n                } \n            }\n            return max;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array","rhs":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.NoSuchMethodException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:121","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"987814fe-2eba-11e6-9639-0b41eab6202e","method":{"position":"org.apache.commons.lang3.reflect.MethodUtils:215","type":"CtMethodImpl","sourcecode":"public static java.lang.Object invokeExactStaticMethod(final java.lang.Class<?> cls, final java.lang.String methodName, java.lang.Object[] args, java.lang.Class<?>[] parameterTypes) throws java.lang.IllegalAccessException, java.lang.NoSuchMethodException, java.lang.reflect.InvocationTargetException {\n    if (methodName == null) {\n        throw new java.lang.NoSuchMethodException();\n    } else {\n        {\n            args = org.apache.commons.lang3.ArrayUtils.nullToEmpty(args);\n            parameterTypes = org.apache.commons.lang3.ArrayUtils.nullToEmpty(parameterTypes);\n            final java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethod(cls, methodName, parameterTypes);\n            if (method == null) {\n                throw new java.lang.NoSuchMethodException((((\"No such accessible method: \" + methodName) + \"() on class: \") + (cls.getName())));\n            } \n            return method.invoke(null, args);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"methodName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:253","type":"CtBinaryOperatorImpl","sourcecode":"style == null"},"failures":[218,218,219,219,220,220,221,221,222,222,223,223,224,224,225,225,226,226,227,227,228,228,229,229,230,230,231,231,232,232,233,233,234,234,235,235,236,236,237,237,238,238,239,239,240,240,241,241,242,242,243,243,244,244,245,245,246,246,247,247,248,248,249,249,250,251,251,252,252,253,253,254,254,255,255,256,256,257,257,258,258,259,259,260,260,261,261,262,262,263,263,264,264,265,265,266,266,267,267,268,268,269,269,270,270,271,271,272,272,273,273,274,274],"tindex":"987814ff-2eba-11e6-9639-b95704ca6459","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:135","type":"CtMethodImpl","sourcecode":"public static void setDefaultStyle(final org.apache.commons.lang3.builder.ToStringStyle style) {\n    if (style == null) {\n        {\n            if (style == null) {\n                throw new java.lang.IllegalArgumentException(\"The style must not be null\");\n            } \n            org.apache.commons.lang3.builder.ToStringBuilder.org.apache.commons.lang3.builder.ToStringBuilder.org.apache.commons.lang3.builder.ToStringStyle = style;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"style":"style"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:467","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isLowerCase(ch)"},"failures":[275,276,277],"tindex":"98783c10-2eba-11e6-9639-23d0737e9e02","method":{"position":"org.apache.commons.lang3.CharUtils:497","type":"CtMethodImpl","sourcecode":"public static boolean isAsciiAlphaLower(final char ch) {\n    if (java.lang.Character.isLowerCase(ch)) {\n        {\n            return (ch >= 'a') && (ch <= 'z');\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:274","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[124,124,125,126],"tindex":"98783c11-2eba-11e6-9639-2ffb6e5fe74b","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1150","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final byte[] array, final java.lang.Boolean fullDetail) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendFieldStart(buffer, fieldName);\n            if (array == null) {\n                appendNullText(buffer, fieldName);\n            } else if (isFullDetail(fullDetail)) {\n                appendDetail(buffer, fieldName, array);\n            } else {\n                appendSummary(buffer, fieldName, array);\n            }\n            appendFieldEnd(buffer, fieldName);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.JavaVersion:134","type":"CtInvocationImpl","sourcecode":"\"1.1\".equals(nom)"},"failures":[278,279,280,281],"tindex":"98783c12-2eba-11e6-9639-e1ac6dfa2155","method":{"position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:300","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder namingPattern(final java.lang.String pattern) {\n    if (\"1.1\".equals(pattern)) {\n        {\n            if (pattern == null) {\n                throw new java.lang.NullPointerException(\"Naming pattern must not be null!\");\n            } \n            java.lang.String = pattern;\n            return org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nom":"pattern"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:1128","type":"CtBinaryOperatorImpl","sourcecode":"(className.length()) > 0"},"failures":[],"tindex":"98786323-2eba-11e6-9639-43bcfe0386a5","method":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:304","type":"CtMethodImpl","sourcecode":"private java.text.Format getFormat(final java.lang.String desc) {\n    if ((desc.length()) > 0) {\n        {\n            if ((java.util.Map<java.lang.String, ? extends org.apache.commons.lang3.text.FormatFactory>) != null) {\n                java.lang.String java.lang.String = desc;\n                java.lang.String java.lang.String = null;\n                final int int = desc.indexOf(org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char);\n                if (i > 0) {\n                    name = desc.substring(0, i).trim();\n                    args = desc.substring((i + 1)).trim();\n                } \n                final org.apache.commons.lang3.text.FormatFactory org.apache.commons.lang3.text.FormatFactory = java.util.Map<java.lang.String, ? extends org.apache.commons.lang3.text.FormatFactory>.get(name);\n                if (factory != null) {\n                    return factory.getFormat(name, args, getLocale());\n                } \n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"className":"desc"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5623","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))"},"failures":[11],"tindex":"98786324-2eba-11e6-9639-d3afe3415b7d","method":{"position":"org.apache.commons.lang3.ArrayUtils:4836","type":"CtMethodImpl","sourcecode":"public static char[] removeElement(final char[] array, final char element) {\n    if ((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(array))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = org.apache.commons.lang3.ArrayUtils.indexOf(array, element);\n            if (index == (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int)) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            return org.apache.commons.lang3.ArrayUtils.remove(array, index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array","values":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:209","type":"CtBinaryOperatorImpl","sourcecode":"spaceToWrapAt >= 0"},"failures":[],"tindex":"98786325-2eba-11e6-9639-33011e731a14","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:831","type":"CtMethodImpl","sourcecode":"private boolean isQuote(final char[] srcChars, final int pos, final int len, final int quoteStart, final int quoteLen) {\n    if (quoteLen >= 0) {\n        {\n            for (int int = 0 ; i < quoteLen ; i++) {\n                if (((pos + i) >= len) || ((srcChars[(pos + i)]) != (srcChars[(quoteStart + i)]))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"spaceToWrapAt":"quoteLen"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4948","type":"CtBinaryOperatorImpl","sourcecode":"start > len"},"failures":[282],"tindex":"98788a36-2eba-11e6-9639-1b820b12303e","method":{"position":"org.apache.commons.lang3.StringUtils:3906","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final float[] array, final char separator, final int startIndex, final int endIndex) {\n    if (startIndex > startIndex) {\n        {\n            if (array == null) {\n                return null;\n            } \n            final int int = endIndex - startIndex;\n            if (noOfItems <= 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder((noOfItems * 16));\n            for (int int = startIndex ; i < endIndex ; i++) {\n                if (i > startIndex) {\n                    buf.append(separator);\n                } \n                buf.append(array[i]);\n            }\n            return buf.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"startIndex","start":"startIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:694","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[283,284,285,64,286,287,288,289,75,290],"tindex":"98788a37-2eba-11e6-9639-1f61433ba2c2","method":{"position":"org.apache.commons.lang3.ArrayUtils:6062","type":"CtMethodImpl","sourcecode":"static java.lang.Object removeAll(final java.lang.Object array, final java.util.BitSet indices) {\n    if (array == null) {\n        {\n            final int int = org.apache.commons.lang3.ArrayUtils.getLength(array);\n            final int int = indices.cardinality();\n            final java.lang.Object java.lang.Object = java.lang.reflect.Array.newInstance(array.getClass().getComponentType(), (srcLength - removals));\n            int int = 0;\n            int int = 0;\n            int int;\n            int int;\n            while ((set = indices.nextSetBit(srcIndex)) != (-1)) {\n                count = set - srcIndex;\n                if (count > 0) {\n                    java.lang.System.arraycopy(array, srcIndex, result, destIndex, count);\n                    destIndex += count;\n                } \n                srcIndex = indices.nextClearBit(set);\n            }\n            count = srcLength - srcIndex;\n            if (count > 0) {\n                java.lang.System.arraycopy(array, srcIndex, result, destIndex, count);\n            } \n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:910","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408],"tindex":"9878b148-2eba-11e6-9639-53d57f446d2b","method":{"position":"org.apache.commons.lang3.time.FastDateParser:139","type":"CtMethodImpl","sourcecode":"private void init(java.util.Calendar definingCalendar) {\n    if (definingCalendar == null) {\n        {\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            final java.util.List<org.apache.commons.lang3.time.FastDateParser.Strategy> java.util.List<org.apache.commons.lang3.time.FastDateParser.Strategy> = new java.util.ArrayList<org.apache.commons.lang3.time.FastDateParser.Strategy>();\n            final java.util.regex.Matcher java.util.regex.Matcher = org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.java.util.regex.Pattern.matcher(java.lang.String);\n            if (!(patternMatcher.lookingAt())) {\n                throw new java.lang.IllegalArgumentException(((\"Illegal pattern character '\" + (java.lang.String.charAt(patternMatcher.regionStart()))) + \"'\"));\n            } \n            java.lang.String = patternMatcher.group();\n            org.apache.commons.lang3.time.FastDateParser.Strategy org.apache.commons.lang3.time.FastDateParser.Strategy = getStrategy(java.lang.String, definingCalendar);\n            for ( ;  ; ) {\n                patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd());\n                if (!(patternMatcher.lookingAt())) {\n                    org.apache.commons.lang3.time.FastDateParser.Strategy = null;\n                    break;\n                } \n                final java.lang.String java.lang.String = patternMatcher.group();\n                org.apache.commons.lang3.time.FastDateParser.Strategy = getStrategy(nextFormatField, definingCalendar);\n                if (currentStrategy.addRegex(org.apache.commons.lang3.time.FastDateParser.this, regex)) {\n                    collector.add(currentStrategy);\n                } \n                java.lang.String = nextFormatField;\n                currentStrategy = org.apache.commons.lang3.time.FastDateParser.Strategy;\n            }\n            if ((patternMatcher.regionStart()) != (patternMatcher.regionEnd())) {\n                throw new java.lang.IllegalArgumentException((((\"Failed to parse \\\"\" + (java.lang.String)) + \"\\\" ; gave up at index \") + (patternMatcher.regionStart())));\n            } \n            if (currentStrategy.addRegex(org.apache.commons.lang3.time.FastDateParser.this, regex)) {\n                collector.add(currentStrategy);\n            } \n            java.lang.String = null;\n            org.apache.commons.lang3.time.FastDateParser.Strategy[] = collector.toArray(new org.apache.commons.lang3.time.FastDateParser.Strategy[collector.size()]);\n            java.util.regex.Pattern = java.util.regex.Pattern.compile(regex.toString());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"definingCalendar"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:525","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[409],"tindex":"9878d859-2eba-11e6-9639-e534d0c9484f","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:776","type":"CtMethodImpl","sourcecode":"public static final java.lang.String escapeCsv(final java.lang.String input) {\n    if (input == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:647","type":"CtBinaryOperatorImpl","sourcecode":"excludeFieldNamesParam == null"},"failures":[410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431],"tindex":"9878d85a-2eba-11e6-9639-9fe50901006d","method":{"position":"org.apache.commons.lang3.CharSet:138","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.CharSet getInstance(final java.lang.String... setStrs) {\n    if (setStrs == null) {\n        {\n            if (setStrs == null) {\n                return null;\n            } \n            if ((setStrs.int) == 1) {\n                final org.apache.commons.lang3.CharSet org.apache.commons.lang3.CharSet = org.apache.commons.lang3.CharSet.org.apache.commons.lang3.CharSet.java.util.Map<java.lang.String, org.apache.commons.lang3.CharSet>.get(setStrs[0]);\n                if (common != null) {\n                    return common;\n                } \n            } \n            return new org.apache.commons.lang3.CharSet(setStrs);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"excludeFieldNamesParam":"setStrs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:425","type":"CtBinaryOperatorImpl","sourcecode":"customPattern != null"},"failures":[432],"tindex":"9878ff6b-2eba-11e6-9639-41baf638111c","method":{"position":"org.apache.commons.lang3.StringUtils:6167","type":"CtMethodImpl","sourcecode":"public static boolean isAllUpperCase(final java.lang.CharSequence cs) {\n    if (cs != null) {\n        {\n            if ((cs == null) || (org.apache.commons.lang3.StringUtils.isEmpty(cs))) {\n                return false;\n            } \n            final int int = cs.length();\n            for (int int = 0 ; i < sz ; i++) {\n                if ((java.lang.Character.isUpperCase(cs.charAt(i))) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"customPattern":"cs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.reflect.InvocationTargetException","condition":{"position":"org.apache.commons.lang3.StringUtils:2207","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"9878ff6c-2eba-11e6-9639-5d56848e7d82","method":{"position":"org.apache.commons.lang3.reflect.MethodUtils:316","type":"CtMethodImpl","sourcecode":"public static java.lang.Object invokeExactStaticMethod(final java.lang.Class<?> cls, final java.lang.String methodName, java.lang.Object... args) throws java.lang.IllegalAccessException, java.lang.NoSuchMethodException, java.lang.reflect.InvocationTargetException {\n    if (methodName == null) {\n        throw new java.lang.reflect.InvocationTargetException();\n    } else {\n        {\n            args = org.apache.commons.lang3.ArrayUtils.nullToEmpty(args);\n            final java.lang.Class<?>[] java.lang.Class<?>[] = org.apache.commons.lang3.ClassUtils.toClass(args);\n            return org.apache.commons.lang3.reflect.MethodUtils.invokeExactStaticMethod(cls, methodName, args, parameterTypes);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"methodName"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:154","type":"CtBinaryOperatorImpl","sourcecode":"expression == false"},"failures":[433,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,40,42],"tindex":"9878ff6d-2eba-11e6-9639-6bda29e66497","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:324","type":"CtMethodImpl","sourcecode":"public static boolean reflectionEquals(final java.lang.Object lhs, final java.lang.Object rhs, final boolean testTransients, final java.lang.Class<?> reflectUpToClass, final java.lang.String... excludeFields) {\n    if (testTransients == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (lhs == rhs) {\n                return true;\n            } \n            if ((lhs == null) || (rhs == null)) {\n                return false;\n            } \n            final java.lang.Class<?> java.lang.Class<?> = lhs.getClass();\n            final java.lang.Class<?> java.lang.Class<?> = rhs.getClass();\n            java.lang.Class<?> java.lang.Class<?>;\n            if (lhsClass.isInstance(rhs)) {\n                testClass = lhsClass;\n                if (!(rhsClass.isInstance(lhs))) {\n                    testClass = rhsClass;\n                } \n            } else if (rhsClass.isInstance(lhs)) {\n                testClass = rhsClass;\n                if (!(lhsClass.isInstance(rhs))) {\n                    testClass = lhsClass;\n                } \n            } else {\n                return false;\n            }\n            final org.apache.commons.lang3.builder.EqualsBuilder org.apache.commons.lang3.builder.EqualsBuilder = new org.apache.commons.lang3.builder.EqualsBuilder();\n            try {\n                if (testClass.isArray()) {\n                    equalsBuilder.append(lhs, rhs);\n                } else {\n                    org.apache.commons.lang3.builder.EqualsBuilder.reflectionAppend(lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields);\n                    while (((testClass.getSuperclass()) != null) && (testClass != reflectUpToClass)) {\n                        testClass = testClass.getSuperclass();\n                        org.apache.commons.lang3.builder.EqualsBuilder.reflectionAppend(lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields);\n                    }\n                }\n            } catch (final java.lang.IllegalArgumentException e) {\n                return false;\n            }\n            return equalsBuilder.isEquals();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"expression":"testTransients"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:472","type":"CtBinaryOperatorImpl","sourcecode":"(java.lang.Float.floatToIntBits(lhs)) != (java.lang.Float.floatToIntBits(rhs))"},"failures":[],"tindex":"9879267e-2eba-11e6-9639-73d05daabfc1","method":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:136","type":"CtMethodImpl","sourcecode":"public static float min(final float a, final float b) {\n    if ((java.lang.Float.floatToIntBits(a)) != (java.lang.Float.floatToIntBits(b))) {\n        {\n            if (java.lang.Float.isNaN(a)) {\n                return b;\n            } else if (java.lang.Float.isNaN(b)) {\n                return a;\n            } else {\n                return java.lang.Math.min(a, b);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"a","rhs":"b"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:631","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[],"tindex":"9879267f-2eba-11e6-9639-3f4cee219145","method":{"position":"org.apache.commons.lang3.CharSequenceUtils:144","type":"CtMethodImpl","sourcecode":"static int lastIndexOf(final java.lang.CharSequence cs, final java.lang.CharSequence searchChar, final int start) {\n    if (searchChar == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return cs.toString().lastIndexOf(searchChar.toString(), start);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"searchChar"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:598","type":"CtUnaryOperatorImpl","sourcecode":"!(java.util.Arrays.equals(lhs, rhs))"},"failures":[],"tindex":"98792680-2eba-11e6-9639-fbca71d71b7b","method":{"position":"org.apache.commons.lang3.ArrayUtils:5324","type":"CtMethodImpl","sourcecode":"public static byte[] removeAll(final byte[] array, final int... indices) {\n    if (!(java.util.Arrays.equals(indices, indices))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((byte[])(org.apache.commons.lang3.ArrayUtils.removeAll(((java.lang.Object)(array)), org.apache.commons.lang3.ArrayUtils.clone(indices))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"indices","rhs":"indices"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:173","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"98794d91-2eba-11e6-9639-3d039d0d6e24","method":{"position":"org.apache.commons.lang3.exception.ContextedException:199","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<java.lang.Object> getContextValues(final java.lang.String label) {\n    if (label == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.exception.ContextedException.this.org.apache.commons.lang3.exception.ExceptionContext.getContextValues(label);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"label"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1138","type":"CtBinaryOperatorImpl","sourcecode":"c < a"},"failures":[],"tindex":"98794d92-2eba-11e6-9639-2f9bce1fe683","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:879","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final short value) {\n    if (value < value) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value != value) {\n                {\n                    int = ((int) * (int)) + value;\n                    return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"value","c":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3939","type":"CtBinaryOperatorImpl","sourcecode":"array2 == null"},"failures":[434],"tindex":"98794d93-2eba-11e6-9639-490335b074f8","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2702","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (obj instanceof org.apache.commons.lang3.text.StrBuilder) {\n                return equals(((org.apache.commons.lang3.text.StrBuilder)(obj)));\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array2":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:913","type":"CtBinaryOperatorImpl","sourcecode":"quote != null"},"failures":[435],"tindex":"987974a4-2eba-11e6-9639-7ba6d97b8554","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2496","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final org.apache.commons.lang3.text.StrMatcher matcher) {\n    if (matcher != null) {\n        {\n            return lastIndexOf(matcher, int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"quote":"matcher"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:455","type":"CtInvocationImpl","sourcecode":"fromTypeVarAssigns.isEmpty()"},"failures":[],"tindex":"987974a5-2eba-11e6-9639-715c0bc4fa43","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1406","type":"CtMethodImpl","sourcecode":"private static java.lang.reflect.Type[] unrollBounds(final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> typeArguments, final java.lang.reflect.Type[] bounds) {\n    if (typeArguments.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.reflect.Type[] java.lang.reflect.Type[] = bounds;\n            int int = 0;\n            for ( ; i < (result.int) ; i++) {\n                final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(typeArguments, result[i]);\n                if (unrolled == null) {\n                    result = org.apache.commons.lang3.ArrayUtils.remove(result, (i--));\n                } else {\n                    result[i] = unrolled;\n                }\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fromTypeVarAssigns":"typeArguments"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1378","type":"CtBinaryOperatorImpl","sourcecode":"startPos < 0"},"failures":[436,437,438],"tindex":"987974a6-2eba-11e6-9639-0d8895b5a9d8","method":{"position":"org.apache.commons.lang3.time.DateUtils:1122","type":"CtMethodImpl","sourcecode":"public static java.util.Iterator<java.util.Calendar> iterator(final java.util.Date focus, final int rangeStyle) {\n    if (rangeStyle < 0) {\n        {\n            if (focus == null) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            final java.util.Calendar java.util.Calendar = java.util.Calendar.getInstance();\n            gval.setTime(focus);\n            return org.apache.commons.lang3.time.DateUtils.iterator(gval, rangeStyle);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startPos":"rangeStyle"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:120","type":"CtBinaryOperatorImpl","sourcecode":"(str.charAt(3)) != '_'"},"failures":[439],"tindex":"98799bb7-2eba-11e6-9639-0b2f2a8080d9","method":{"position":"org.apache.commons.lang3.StringUtils:6501","type":"CtMethodImpl","sourcecode":"public static java.lang.String difference(final java.lang.String str1, final java.lang.String str2) {\n    if ((str1.charAt(3)) != '_') {\n        {\n            if (str1 == null) {\n                return str2;\n            } \n            if (str2 == null) {\n                return str1;\n            } \n            final int int = org.apache.commons.lang3.StringUtils.indexOfDifference(str1, str2);\n            if (at == (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            return str2.substring(at);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Range:315","type":"CtBinaryOperatorImpl","sourcecode":"otherRange == null"},"failures":[440],"tindex":"98799bb8-2eba-11e6-9639-41e00c7c8bac","method":{"position":"org.apache.commons.lang3.Range:314","type":"CtMethodImpl","sourcecode":"public boolean containsRange(final org.apache.commons.lang3.Range<T> otherRange) {\n    if (otherRange == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (otherRange == null) {\n                return false;\n            } \n            return (contains(otherRange.T)) && (contains(otherRange.T));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"otherRange":"otherRange"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:304","type":"CtBinaryOperatorImpl","sourcecode":"lhs != rhs"},"failures":[],"tindex":"98799bb9-2eba-11e6-9639-c100e0aad46b","method":{"position":"org.apache.commons.lang3.CharUtils:402","type":"CtMethodImpl","sourcecode":"public static boolean isAscii(final char ch) {\n    if (ch != ch) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ch < 128;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"ch","rhs":"ch"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1138","type":"CtBinaryOperatorImpl","sourcecode":"c < a"},"failures":[441,442],"tindex":"98799bba-2eba-11e6-9639-2503d42e1f8b","method":{"position":"org.apache.commons.lang3.BitField:190","type":"CtMethodImpl","sourcecode":"public short clearShort(final short holder) {\n    if (holder < holder) {\n        {\n            return ((short)(clear(holder)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"holder","c":"holder"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:832","type":"CtBinaryOperatorImpl","sourcecode":"(lhs == null) || (rhs == null)"},"failures":[443],"tindex":"98799bbb-2eba-11e6-9639-190df740ae7a","method":{"position":"org.apache.commons.lang3.ArrayUtils:1519","type":"CtMethodImpl","sourcecode":"public static void reverse(final double[] array) {\n    if ((array == null) || (array == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return ;\n            } \n            org.apache.commons.lang3.ArrayUtils.reverse(array, 0, array.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array","rhs":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:882","type":"CtBinaryOperatorImpl","sourcecode":"newSize <= 0"},"failures":[348],"tindex":"9879c2cc-2eba-11e6-9639-c164e2d00e57","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:194","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.time.FastDateFormat getDateInstance(final int style, final java.util.Locale locale) {\n    if (style <= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getDateInstance(style, null, locale);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"newSize":"style"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.InheritanceUtils:54","type":"CtInvocationImpl","sourcecode":"child.equals(parent)"},"failures":[],"tindex":"9879c2cd-2eba-11e6-9639-0f2d8d05a3c6","method":{"position":"org.apache.commons.lang3.ClassUtils:1027","type":"CtMethodImpl","sourcecode":"public static java.lang.String getShortCanonicalName(final java.lang.Class<?> cls) {\n    if (cls.equals(cls)) {\n        {\n            if (cls == null) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            return org.apache.commons.lang3.ClassUtils.getShortCanonicalName(cls.getName());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"parent":"cls","child":"cls"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5808","type":"CtBinaryOperatorImpl","sourcecode":"count == null"},"failures":[444],"tindex":"9879c2ce-2eba-11e6-9639-e5b1d7885a77","method":{"position":"org.apache.commons.lang3.mutable.MutableInt:260","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int compareTo(final org.apache.commons.lang3.mutable.MutableInt other) {\n    if (other == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = other.int;\n            return (int) < anotherVal ? -1 : (int) == anotherVal ? 0 : 1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"other"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1298","type":"CtBinaryOperatorImpl","sourcecode":"typeVarAssigns == null"},"failures":[445],"tindex":"9879c2cf-2eba-11e6-9639-956131b02a20","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1214","type":"CtMethodImpl","sourcecode":"public static boolean typesSatisfyVariables(final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> typeVarAssigns) {\n    if (typeVarAssigns == null) {\n        {\n            org.apache.commons.lang3.Validate.notNull(typeVarAssigns, \"typeVarAssigns is null\");\n            for (final java.util.Map.Entry<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map.Entry<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> : typeVarAssigns.entrySet()) {\n                final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = entry.getKey();\n                final java.lang.reflect.Type java.lang.reflect.Type = entry.getValue();\n                for (final java.lang.reflect.Type java.lang.reflect.Type : org.apache.commons.lang3.reflect.TypeUtils.getImplicitBounds(typeVar)) {\n                    if (!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(type, org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(bound, typeVarAssigns), typeVarAssigns))) {\n                        return false;\n                    } \n                }\n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeVarAssigns":"typeVarAssigns"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:502","type":"CtVariableReadImpl","sourcecode":"detail"},"failures":[93,102],"tindex":"9879e9e0-2eba-11e6-9639-07348606d253","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1193","type":"CtMethodImpl","sourcecode":"public void setEnableSubstitutionInVariables(final boolean enableSubstitutionInVariables) {\n    if (enableSubstitutionInVariables) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.text.StrSubstitutor.this.boolean = enableSubstitutionInVariables;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"detail":"enableSubstitutionInVariables"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:422","type":"CtBinaryOperatorImpl","sourcecode":"depth == 1"},"failures":[],"tindex":"9879e9e1-2eba-11e6-9639-9ff0827b6677","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1081","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final int value) {\n    if (value == 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.time.FastDatePrinter.NumberRule.appendTo(buffer, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"depth":"value"},"type":"special","returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}