{"failureDictionary":{"org.apache.commons.lang3.text.StrBuilderTest.testDeleteFirst_String":15,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":463,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":41,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":104,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":460,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":35,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedFieldForceAccess":144,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":443,"org.apache.commons.lang3.builder.CompareToBuilderTest.testBoolean":406,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstringAfter_StringString":4,"org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testOutOfBounds":197,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":208,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":211,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadDeclaredNamedStaticField":337,"org.apache.commons.lang3.StringUtilsIsTest.testIsAlphanumericSpace":16,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":459,"org.apache.commons.lang3.time.FastDateParserTest.testLANG_832":252,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":150,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":93,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_AD":179,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":273,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":97,"org.apache.commons.lang3.time.FastDatePrinterTest.testEquals":160,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDefaults":164,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":99,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":59,"org.apache.commons.lang3.ConversionTest.testHexDigitToBinary":135,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":442,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOfLang294":13,"org.apache.commons.lang3.EnumUtilsTest.test_processBitVectors":400,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":270,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetMatchingAccessibleMethod":322,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":429,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVEmpty":7,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":444,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringStringarray":189,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":105,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":454,"org.apache.commons.lang3.text.StrLookupTest.testMapLookup":453,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":27,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":107,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_BC":257,"org.apache.commons.lang3.mutable.MutableIntTest.testSubtractValuePrimitive":57,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":148,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":31,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_BC":302,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testTimeZoneMatches":229,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testTimeZoneMatches":304,"org.apache.commons.lang3.ArrayUtilsTest.testReverseLong":399,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":124,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":34,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringString":183,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":217,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_AD":173,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":101,"org.apache.commons.lang3.math.FractionTest.testDivide":352,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":214,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testRawMessage":358,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":94,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":87,"org.apache.commons.lang3.StringEscapeUtilsTest.testStandaloneAmphersand":199,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetContextEntries":366,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":277,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfDoubleTolerance":114,"org.apache.commons.lang3.time.FastDateParserTest.testParseNumerics":248,"org.apache.commons.lang3.time.FastDateParserTest.testPatternMatches":261,"org.apache.commons.lang3.BooleanUtilsTest.testOr_object_validInput_3items":308,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":209,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeMethod":325,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":268,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeUnknownEntity":205,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetValueDelimiter":371,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadStaticFieldIllegalArgumentException2":142,"org.apache.commons.lang3.time.FastDateParserTest.testLocaleMatches":242,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":152,"org.apache.commons.lang3.StringUtilsTest.testUnescapeSurrogatePairs":198,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testToStringContainsName":227,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":210,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":438,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":372,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":20,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":169,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":153,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":282,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":419,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":275,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_AD":255,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":262,"org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayOfLongs":310,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_char":313,"org.apache.commons.lang3.time.FastDateParserTest.testDayOf":170,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":278,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseNumerics":293,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":19,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringString":185,"org.apache.commons.lang3.ArrayUtilsTest.testCloneShort":9,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementShortArray":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":119,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang538":295,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":132,"org.apache.commons.lang3.BooleanUtilsTest.test_toIntegerObject_boolean_Integer_Integer":3,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":110,"org.apache.commons.lang3.time.DateFormatUtilsTest.testConstructor":216,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":42,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":69,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteField":139,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":420,"org.apache.commons.lang3.math.FractionTest.testReducedFactory_int_int":345,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":85,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testBugzilla38401":392,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetTypeArguments":50,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":265,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":276,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang303":294,"org.apache.commons.lang3.ClassUtilsTest.testIsPrimitiveWrapper":116,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testPatternMatches":230,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":423,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHexCharsHtml":203,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeXmlSupplementaryCharacters":204,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadDeclaredNamedStaticFieldForceAccess":335,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationPluralWords":391,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":60,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testContextedExceptionStringThrowable":362,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":77,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":172,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":117,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":66,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_BC":301,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":82,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang303":224,"org.apache.commons.lang3.StringUtilsTest.testIsNotEmpty":181,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testArrayList":434,"org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testUnfinishedEntity":196,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":18,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLocaleMatches":221,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":128,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":370,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":213,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testNullExceptionPassing":357,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":437,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":84,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsInstance":51,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_AD":300,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriod":382,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":225,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":26,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testContextedExceptionString":361,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.test_Equality_Hash":298,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":280,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":63,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":71,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":109,"org.apache.commons.lang3.text.WordUtilsTest.testUncapitalize_String":2,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHtml4":200,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBelow":473,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":151,"org.apache.commons.lang3.EnumUtilsTest.test_processBitVector":402,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":149,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":445,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":32,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateInstance":235,"org.apache.commons.lang3.math.FractionTest.testAdd":346,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":264,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testPatternMatches":305,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":323,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":29,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetField":138,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testContextedException":356,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":40,"org.apache.commons.lang3.BooleanUtilsTest.testOr_object_nullElementInput":309,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeExactStaticMethod":326,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetFirstContextValue":368,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetAccessiblePublicMethod":319,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":75,"org.apache.commons.lang3.text.StrTokenizerTest.testTSVEmpty":6,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit_2args":137,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_AD":177,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":159,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testLinkedList":436,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedFieldForceAccess":145,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetMatchingAccessibleMethod":333,"org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testSupplementaryUnescaping":195,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testIsNotEmpty":182,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetAccessibleConstructorFromDescription":329,"org.apache.commons.lang3.time.FastDateParserTest.testAmPm":244,"org.apache.commons.lang3.event.EventUtilsTest.testBindFilteredEventsToMethod":316,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":103,"org.apache.commons.lang3.time.FastDateFormatTest.testLang954":233,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testEdgeDurations":390,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_BC":299,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testMilleniumBug":220,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_BC":292,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteDeclaredNamedStaticFieldForceAccess":340,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testAbove":472,"org.apache.commons.lang3.StringUtilsTest.testRightPad_StringIntString":134,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":22,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":458,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlHighUnicode":202,"org.apache.commons.lang3.ArrayUtilsTest.testReverseLongRange":398,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":439,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringStringarray":192,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":427,"org.apache.commons.lang3.time.FastDateParserTest.testEquals":258,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationHMS":387,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":36,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":272,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedField":141,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang645":226,"org.apache.commons.lang3.text.StrLookupTest.testMapLookup_nullMap":452,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":129,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance":231,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":44,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testSpecialCharacters":285,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":123,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParses":180,"org.apache.commons.lang3.text.StrLookupTest.testSystemProperiesLookup":450,"org.apache.commons.lang3.reflect.TypeUtilsTest.testTypesSatisfyVariables":53,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":466,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringStringarray":191,"org.apache.commons.lang3.EnumUtilsTest.test_generateBitVectors":403,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":432,"org.apache.commons.lang3.ClassUtilsTest.test_isInnerClass_Class":396,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone_Locale":234,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSimpleGet":379,"org.apache.commons.lang3.StringUtilsIsTest.testIsAsciiPrintable_String":471,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testDayOf":176,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testMilleniumBug":286,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteDeclaredNamedStaticField":339,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testSetContextValue":365,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetContextLabels":367,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":79,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":70,"org.apache.commons.lang3.ValidateTest.testExclusiveBetweenDouble_withMessage":112,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":263,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testQuotes":303,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":46,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":154,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":424,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":49,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":39,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringString":190,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSplit":380,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":38,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone":237,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLANG815":383,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteDeclaredNamedField":341,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":267,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":430,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":65,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String":236,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDifferingStyles":165,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testSimpleDate":218,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":146,"org.apache.commons.lang3.time.FastDateParserTest.testToStringContainsName":251,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testNullArgument":331,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHiragana":206,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":428,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":447,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiBooleanArray":405,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":88,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":223,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDefaults":166,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":283,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":467,"org.apache.commons.lang3.BooleanUtilsTest.test_toStringOnOff_boolean":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":43,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethodWithEvent":317,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationISO":388,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetDeclaredField":342,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":67,"org.apache.commons.lang3.time.FastDateParserTest.testSpecialCharacters":240,"org.apache.commons.lang3.time.FastDateParserTest.testLowYearPadding":245,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_AD":291,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":456,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":89,"org.apache.commons.lang3.StringUtilsTest.testOverlay_StringStringIntInt":344,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":133,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":274,"org.apache.commons.lang3.math.FractionTest.testMultiply":353,"org.apache.commons.lang3.BitFieldTest.testByte":468,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethod":315,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetRawType":55,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":100,"org.apache.commons.lang3.time.FastDateFormatTest.testDateDefaults":163,"org.apache.commons.lang3.EnumUtilsTest.test_generateBitVectorsFromArray":401,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":102,"org.apache.commons.lang3.time.FastDateParserTest.testMilleniumBug":241,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringStringarray":186,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":62,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDateDefaults":162,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testJavaSerialization":364,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISOMethod":389,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":271,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":48,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":118,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetAccessiblePublicMethodFromDescription":327,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":228,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":178,"org.apache.commons.lang3.time.FastDateParserTest.testParseZone":243,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListener":314,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":91,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":108,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":81,"org.apache.commons.lang3.BooleanUtilsTest.testOr_object_validInput_2items":307,"org.apache.commons.lang3.ArrayUtilsTest.testContainsByte":311,"org.apache.commons.lang3.time.FastDateParserTest.testLang538":250,"org.apache.commons.lang3.ConversionTest.testHexToShort":397,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":76,"org.apache.commons.lang3.time.FastDateParserTest.testLang303":249,"org.apache.commons.lang3.ClassUtilsTest.testIsPrimitiveOrWrapper":115,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_AD":246,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtml":375,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":37,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetNullText":355,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLANG984":385,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLANG982":384,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":281,"org.apache.commons.lang3.ArrayUtilsTest.testToObject_float":373,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":121,"org.apache.commons.lang3.time.DateUtilsTest.testIsSameLocalTime_Cal":474,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":426,"org.apache.commons.lang3.ConversionTest.testByteArrayToShort":113,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testContextedExceptionStringThrowableContext":360,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":215,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":446,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationWords":394,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_BC":247,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":8,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":52,"org.apache.commons.lang3.reflect.TypeUtilsTest.testDetermineTypeVariableAssignments":54,"org.apache.commons.lang3.text.StrBuilderTest.testLang295":14,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":269,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":284,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":126,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":96,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseZone":288,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":92,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":155,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeStaticMethod":318,"org.apache.commons.lang3.math.FractionTest.testReduce":354,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringString":188,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":147,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testToStringContainsName":296,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":98,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringStringarray":187,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":106,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":127,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":30,"org.apache.commons.lang3.time.DateUtilsTest.testSetHours":469,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":80,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":157,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":25,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang313":201,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":21,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testDurationsByBruteForce":381,"org.apache.commons.lang3.ArrayUtilsTest.testIsEquals":56,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparators_Collection":194,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedField":140,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":433,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":374,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":158,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":33,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteDeclaredNamedFieldForceAccess":338,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":83,"org.apache.commons.lang3.time.FastDateParserTest.testTimeZoneMatches":260,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_BC":254,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testJiraLang281":395,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":461,"org.apache.commons.lang3.builder.CompareToBuilderTest.testBooleanArray":407,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetAccessibleMethodInaccessible":321,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxLong":378,"org.apache.commons.lang3.text.StrBuilderTest.testToCharArrayIntInt":193,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetDeclaredFieldForceAccess":343,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":175,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":440,"org.apache.commons.lang3.time.DateUtilsTest.testIsSameDay_Date":12,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":422,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":61,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadField":143,"org.apache.commons.lang3.BooleanUtilsTest.testOr_object_emptyInput":306,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":465,"org.apache.commons.lang3.math.FractionTest.testFactory_double":349,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_Locale":238,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testCopyOnWriteArrayList":435,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":90,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testEquals":167,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":455,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":5,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":68,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateTimeInstance":239,"org.apache.commons.lang3.ArrayUtilsTest.testToString":417,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDuration":393,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":457,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":72,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":212,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_BC":256,"org.apache.commons.lang3.CharUtilsTest.testIsAsciiPrintable_char":470,"org.apache.commons.lang3.builder.CompareToBuilderTest.testBooleanArrayHiddenByObject":408,"org.apache.commons.lang3.text.StrLookupTest.testNoneLookup":451,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testAmPm":289,"org.apache.commons.lang3.ArrayUtilsTest.testReverseChar":448,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":86,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxLong_nullArray":377,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_AD":171,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":421,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":462,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementShortArray":10,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":441,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":95,"org.apache.commons.lang3.text.StrTokenizerTest.test8":416,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":279,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeExactMethod":324,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLowYearPadding":290,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLANG_832":297,"org.apache.commons.lang3.text.StrTokenizerTest.test5":413,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadDeclaredNamedField":334,"org.apache.commons.lang3.text.StrTokenizerTest.test4":412,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":130,"org.apache.commons.lang3.StringUtilsSubstringTest.testCountMatches_String":404,"org.apache.commons.lang3.text.StrTokenizerTest.test7":415,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":131,"org.apache.commons.lang3.text.StrTokenizerTest.test6":414,"org.apache.commons.lang3.text.StrTokenizerTest.test1":409,"org.apache.commons.lang3.text.StrTokenizerTest.test3":411,"org.apache.commons.lang3.time.FastDateParserTest.test_Equality_Hash":253,"org.apache.commons.lang3.text.StrTokenizerTest.test2":410,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":120,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml":207,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":431,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":425,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testContextedExceptionThrowable":359,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStripToEmpty_String":1,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":232,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLowDurations":386,"org.apache.commons.lang3.reflect.MethodUtilsTest.testNullArgument":320,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetAccessibleConstructor":332,"org.apache.commons.lang3.math.FractionTest.testSubtract":348,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":74,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetContextValues":369,"org.apache.commons.lang3.time.FastDateParserTest.testQuotes":259,"org.apache.commons.lang3.math.FractionTest.testToProperString":350,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testAddContextValue":363,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testEquals":161,"org.apache.commons.lang3.BooleanUtilsTest.test_toStringYesNo_boolean":312,"org.apache.commons.lang3.math.FractionTest.testPow":347,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":64,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxLong_emptyArray":376,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeExactConstructor":330,"org.apache.commons.lang3.time.FastDateParserTest.testParses":174,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":73,"org.apache.commons.lang3.StringUtilsSubstringTest.testMid_String":168,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":351,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":464,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLowYearPadding":222,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit":136,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringString":184,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":111,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":45,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":125,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOf_StringInt":449,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":266,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeConstructor":328,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":418,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocaleMatches":287,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":156,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadDeclaredNamedFieldForceAccess":336,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":219,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":122,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":58},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:721","type":"CtFieldReadImpl","sourcecode":"objectsTriviallyEqual"},"failures":[0],"tindex":"a17994ee-2ea5-11e6-b451-2934bbb0e484","method":{"position":"org.apache.commons.lang3.BooleanUtils:848","type":"CtMethodImpl","sourcecode":"public static java.lang.String toStringOnOff(final boolean bool) {\n    if (bool) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.BooleanUtils.toString(bool, \"on\", \"off\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsTriviallyEqual":"bool"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:931","type":"CtBinaryOperatorImpl","sourcecode":"(toProperString) == null"},"failures":[1],"tindex":"a17a312f-2ea5-11e6-b451-1dbac38948e5","method":{"position":"org.apache.commons.lang3.StringUtils:554","type":"CtMethodImpl","sourcecode":"public static java.lang.String stripToEmpty(final java.lang.String str) {\n    if (str == null) {\n        {\n            return str == null ? org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String : org.apache.commons.lang3.StringUtils.strip(str, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toProperString":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:851","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[],"tindex":"a17a5840-2ea5-11e6-b451-9db95a59996a","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:631","type":"CtMethodImpl","sourcecode":"protected void appendSummary(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final java.lang.Object value) {\n    if (value == value) {\n        {\n            buffer.append(java.lang.String);\n            buffer.append(getShortClassName(value.getClass()));\n            buffer.append(java.lang.String);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"value","rhs":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:762","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[2],"tindex":"a17a7f51-2ea5-11e6-b451-2928b19930f2","method":{"position":"org.apache.commons.lang3.text.WordUtils:380","type":"CtMethodImpl","sourcecode":"public static java.lang.String uncapitalize(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.text.WordUtils.uncapitalize(str, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.text.ParseException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:717","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"a17a7f52-2ea5-11e6-b451-5377210f1967","method":{"position":"org.apache.commons.lang3.time.DateUtils:267","type":"CtMethodImpl","sourcecode":"public static java.util.Date parseDate(final java.lang.String str, final java.lang.String... parsePatterns) throws java.text.ParseException {\n    if (str == null) {\n        throw new java.text.ParseException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateUtils.parseDate(str, null, parsePatterns);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"str"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:825","type":"CtBinaryOperatorImpl","sourcecode":"expression == false"},"failures":[3],"tindex":"a17aa663-2ea5-11e6-b451-8598442a6c67","method":{"position":"org.apache.commons.lang3.BooleanUtils:485","type":"CtMethodImpl","sourcecode":"public static java.lang.Integer toIntegerObject(final boolean bool, final java.lang.Integer trueValue, final java.lang.Integer falseValue) {\n    if (bool == false) {\n        {\n            return bool ? trueValue : falseValue;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"expression":"bool"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:896","type":"CtBinaryOperatorImpl","sourcecode":"first < second"},"failures":[],"tindex":"a17aa664-2ea5-11e6-b451-3516ed5f9f78","method":{"position":"org.apache.commons.lang3.time.DateFormatUtils:212","type":"CtMethodImpl","sourcecode":"public static java.lang.String format(final long millis, final java.lang.String pattern, final java.util.TimeZone timeZone) {\n    if (pattern == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (millis < millis) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.lang3.time.DateFormatUtils.format(new java.util.Date(millis), pattern, timeZone, null);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"first":"millis","second":"millis"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:599","type":"CtBinaryOperatorImpl","sourcecode":"(startIndex < 0) || (startIndex > (str.length()))"},"failures":[],"tindex":"a17acd75-2ea5-11e6-b451-bd8e2012cd2b","method":{"position":"org.apache.commons.lang3.time.DateUtils:853","type":"CtMethodImpl","sourcecode":"public static java.util.Date truncate(final java.lang.Object date, final int field) {\n    if ((field < 0) || (startIndex > (date.length()))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (date == null) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            if (date instanceof java.util.Date) {\n                return org.apache.commons.lang3.time.DateUtils.truncate(((java.util.Date)(date)), field);\n            } else if (date instanceof java.util.Calendar) {\n                return org.apache.commons.lang3.time.DateUtils.truncate(((java.util.Calendar)(date)), field).getTime();\n            } else {\n                throw new java.lang.ClassCastException((\"Could not truncate \" + date));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"date","startIndex":"field"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:702","type":"CtBinaryOperatorImpl","sourcecode":"(length < 0) || ((startIndex + length) > (str.length()))"},"failures":[],"tindex":"a17af486-2ea5-11e6-b451-e5f3ae4eef25","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:237","type":"CtMethodImpl","sourcecode":"public static int reflectionHashCode(final int initialNonZeroOddNumber, final int multiplierNonZeroOddNumber, final java.lang.Object object) {\n    if ((multiplierNonZeroOddNumber < 0) || ((initialNonZeroOddNumber + length) > (object.length()))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(initialNonZeroOddNumber, multiplierNonZeroOddNumber, object, false, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"object","startIndex":"initialNonZeroOddNumber","length":"multiplierNonZeroOddNumber"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1389","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[4],"tindex":"a17af487-2ea5-11e6-b451-6b34ab600623","method":{"position":"org.apache.commons.lang3.StringUtils:2331","type":"CtMethodImpl","sourcecode":"public static java.lang.String substringAfter(final java.lang.String str, final java.lang.String separator) {\n    if (str == null) {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n                return str;\n            } \n            if (separator == null) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final int int = str.indexOf(separator);\n            if (pos == (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            return str.substring((pos + (separator.length())));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:373","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[5,6,7,8],"tindex":"a17b1b98-2ea5-11e6-b451-f93fd28fb967","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:164","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.StrTokenizer getCSVInstance(final java.lang.String input) {\n    if (input == null) {\n        {\n            final org.apache.commons.lang3.text.StrTokenizer org.apache.commons.lang3.text.StrTokenizer = org.apache.commons.lang3.text.StrTokenizer.getCSVClone();\n            tok.reset(input);\n            return tok;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3206","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[9,10,11],"tindex":"a17b42a9-2ea5-11e6-b451-d12978b60c2a","method":{"position":"org.apache.commons.lang3.ArrayUtils:370","type":"CtMethodImpl","sourcecode":"public static short[] clone(final short[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            return array.clone();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:156","type":"CtBinaryOperatorImpl","sourcecode":"(date1 == null) || (date2 == null)"},"failures":[12],"tindex":"a17b42aa-2ea5-11e6-b451-8d5aff8d2574","method":{"position":"org.apache.commons.lang3.time.DateUtils:155","type":"CtMethodImpl","sourcecode":"public static boolean isSameDay(final java.util.Date date1, final java.util.Date date2) {\n    if ((date2 == null) || (date1 == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((date1 == null) || (date2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            final java.util.Calendar java.util.Calendar = java.util.Calendar.getInstance();\n            cal1.setTime(date1);\n            final java.util.Calendar java.util.Calendar = java.util.Calendar.getInstance();\n            cal2.setTime(date2);\n            return org.apache.commons.lang3.time.DateUtils.isSameDay(cal1, cal2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date2":"date1","date1":"date2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:7059","type":"CtBinaryOperatorImpl","sourcecode":"(m1.length()) != (m2.length())"},"failures":[13,14,15],"tindex":"a17b69bb-2ea5-11e6-b451-3fea3a6c1f2a","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1760","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder deleteFirst(final java.lang.String str) {\n    if ((str.length()) != (str.length())) {\n        {\n            final int int = str == null ? 0 : str.length();\n            if (len > 0) {\n                final int int = indexOf(str, 0);\n                if (index >= 0) {\n                    deleteImpl(index, (index + len), len);\n                } \n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"m1":"str","m2":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.DefaultExceptionContext:134","type":"CtBinaryOperatorImpl","sourcecode":"(buffer.length()) > 0"},"failures":[16],"tindex":"a17b69bc-2ea5-11e6-b451-21b4589946ef","method":{"position":"org.apache.commons.lang3.StringUtils:5951","type":"CtMethodImpl","sourcecode":"public static boolean isAlphanumericSpace(final java.lang.CharSequence cs) {\n    if ((cs.length()) > 0) {\n        {\n            if (cs == null) {\n                return false;\n            } \n            final int int = cs.length();\n            for (int int = 0 ; i < sz ; i++) {\n                if (((java.lang.Character.isLetterOrDigit(cs.charAt(i))) == false) && ((cs.charAt(i)) != ' ')) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"buffer":"cs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"methodName != null"},"failures":[17,17,18,18,19,20,21,21,22,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"tindex":"a17b90cd-2ea5-11e6-b451-ebc8f31b47ba","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:857","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final boolean value) {\n    if (fieldName != null) {\n        {\n            buffer.append(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1666","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.WildcardType"},"failures":[49,50,51,52,53,54,55],"tindex":"a17bb7de-2ea5-11e6-b451-8d8f559804b3","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:311","type":"CtMethodImpl","sourcecode":"public static boolean isAssignable(final java.lang.reflect.Type type, final java.lang.reflect.Type toType) {\n    if (toType instanceof java.lang.reflect.WildcardType) {\n        {\n            return org.apache.commons.lang3.reflect.TypeUtils.isAssignable(type, toType, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"toType"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:146","type":"CtBinaryOperatorImpl","sourcecode":"(((org.apache.commons.lang3.StringUtils.isAllLowerCase(split[0])) && (((split[0].length()) == 2) || ((split[0].length()) == 3))) && (((split[1].length()) == 0) || (((split[1].length()) == 2) && (org.apache.commons.lang3.StringUtils.isAllUpperCase(split[1]))))) && ((split[2].length()) > 0)"},"failures":[],"tindex":"a17bb7df-2ea5-11e6-b451-137470fa8efd","method":{"position":"org.apache.commons.lang3.StringUtils:3990","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final java.lang.Object[] array, java.lang.String separator, final int startIndex, final int endIndex) {\n    if ((((org.apache.commons.lang3.StringUtils.isAllLowerCase(array[0])) && (((split[0].length()) == 2) || ((split[0].length()) == 3))) && (((split[1].length()) == 0) || (((split[1].length()) == 2) && (org.apache.commons.lang3.StringUtils.isAllUpperCase(split[1]))))) && ((split[2].length()) > 0)) {\n        {\n            if (array == null) {\n                return null;\n            } \n            if (separator == null) {\n                separator = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final int int = endIndex - startIndex;\n            if (noOfItems <= 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder((noOfItems * 16));\n            for (int int = startIndex ; i < endIndex ; i++) {\n                if (i > startIndex) {\n                    buf.append(separator);\n                } \n                if ((array[i]) != null) {\n                    buf.append(array[i]);\n                } \n            }\n            return buf.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"split":"array"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.text.ParseException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:382","type":"CtInvocationImpl","sourcecode":"parsePattern.endsWith(\"ZZ\")"},"failures":[],"tindex":"a17bdef0-2ea5-11e6-b451-1fdd0d1ee367","method":{"position":"org.apache.commons.lang3.time.DateUtils:310","type":"CtMethodImpl","sourcecode":"public static java.util.Date parseDateStrictly(final java.lang.String str, final java.lang.String... parsePatterns) throws java.text.ParseException {\n    if (str == null) {\n        throw new java.text.ParseException();\n    } else {\n        {\n            if (str.endsWith(\"ZZ\")) {\n                throw new java.text.ParseException();\n            } else {\n                {\n                    return org.apache.commons.lang3.time.DateUtils.parseDateStrictly(str, null, parsePatterns);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"parsePattern":"str"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1478","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[56],"tindex":"a17c0601-2ea5-11e6-b451-bb953f0f4e01","method":{"position":"org.apache.commons.lang3.ArrayUtils:206","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static boolean isEquals(final java.lang.Object array1, final java.lang.Object array2) {\n    if (array2 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.lang3.builder.EqualsBuilder().append(array1, array2).isEquals();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1324","type":"CtBinaryOperatorImpl","sourcecode":"0 == nBytes"},"failures":[57],"tindex":"a17c0602-2ea5-11e6-b451-35b3e86cc7cc","method":{"position":"org.apache.commons.lang3.mutable.MutableInt:158","type":"CtMethodImpl","sourcecode":"public void subtract(final int operand) {\n    if (operand > operand) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (0 == operand) {\n                {\n                    org.apache.commons.lang3.mutable.MutableInt.this.int -= operand;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nBytes":"operand"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:590","type":"CtBinaryOperatorImpl","sourcecode":"(((ch0 == 'y') || (ch0 == 'Y')) && ((ch1 == 'e') || (ch1 == 'E'))) && ((ch2 == 's') || (ch2 == 'S'))"},"failures":[],"tindex":"a17c2d13-2ea5-11e6-b451-4396da6f80a5","method":{"position":"org.apache.commons.lang3.CharUtils:352","type":"CtMethodImpl","sourcecode":"public static java.lang.String unicodeEscaped(final char ch) {\n    if ((((ch == 'y') || (ch0 == 'Y')) && ((ch == 'e') || (ch1 == 'E'))) && ((ch == 's') || (ch2 == 'S'))) {\n        {\n            if (ch < 16) {\n                return \"\\\\u000\" + (java.lang.Integer.toHexString(ch));\n            } else if (ch < 256) {\n                return \"\\\\u00\" + (java.lang.Integer.toHexString(ch));\n            } else if (ch < 4096) {\n                return \"\\\\u0\" + (java.lang.Integer.toHexString(ch));\n            } \n            return \"\\\\u\" + (java.lang.Integer.toHexString(ch));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch0":"ch","ch2":"ch","ch1":"ch"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.mutable.MutableObject:94","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[58,59,60,61,62,63,64,65,66,67,68,69,70,70,71,71,72,73,73,74,75,75,76,76,77,78,79,80,81,81,17,17,82,82,83,83,84,85,86,86,21,21,87,87,88,89,90,91,92,93,94,95,23,23,24,25,25,26,26,27,28,29,34,34,36,36,37,38,38,39,40,40,47,47,48,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111],"tindex":"a17c2d14-2ea5-11e6-b451-43a6e1275274","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:471","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, obj, null);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1740","type":"CtBinaryOperatorImpl","sourcecode":"arrayStart == null"},"failures":[112],"tindex":"a17c5425-2ea5-11e6-b451-cb46adc007ca","method":{"position":"org.apache.commons.lang3.Validate:1148","type":"CtMethodImpl","sourcecode":"public static void exclusiveBetween(double start, double end, double value, java.lang.String message) {\n    if (message == null) {\n        {\n            if ((value <= start) || (value >= end)) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"arrayStart":"message"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1056","type":"CtBinaryOperatorImpl","sourcecode":"i > 0"},"failures":[113],"tindex":"a17c7b36-2ea5-11e6-b451-657ba92d68a9","method":{"position":"org.apache.commons.lang3.Conversion:869","type":"CtMethodImpl","sourcecode":"public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos, final int nBytes) {\n    if (srcPos > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((((src.int) == 0) && (srcPos == 0)) || (0 == nBytes)) {\n                return dstInit;\n            } \n            if ((((nBytes - 1) * 8) + dstPos) >= 16) {\n                throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n            } \n            short short = dstInit;\n            int int = 0;\n            for (int int = 0 ; i < nBytes ; i++) {\n                shift = (i * 8) + dstPos;\n                final int int = (255 & (src[(i + srcPos)])) << shift;\n                final int int = 255 << shift;\n                out = ((short)((out & (~mask)) | bits));\n            }\n            return out;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"srcPos"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:39","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[114],"tindex":"a17c7b37-2ea5-11e6-b451-e7c159c9d10f","method":{"position":"org.apache.commons.lang3.ArrayUtils:2540","type":"CtMethodImpl","sourcecode":"public static int indexOf(final double[] array, final double valueToFind, final double tolerance) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0, tolerance);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:642","type":"CtBinaryOperatorImpl","sourcecode":"cls == null"},"failures":[115,116,117,118,70,71,71,72,73,74,75,76,77,78,79,80,81,17,82,119,83,84,85,120,121,122,123,124,125,126,127,86,128,18,19,20,129,21,87,88,89,90,91,92,93,94,95,130,131,132,133,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"tindex":"a17c7b38-2ea5-11e6-b451-310a5844a95c","method":{"position":"org.apache.commons.lang3.ClassUtils:558","type":"CtMethodImpl","sourcecode":"public static boolean isPrimitiveWrapper(final java.lang.Class<?> type) {\n    if (type == null) {\n        {\n            return org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.containsKey(type);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"type"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1205","type":"CtBinaryOperatorImpl","sourcecode":"b > a"},"failures":[],"tindex":"a17ca249-2ea5-11e6-b451-0f6c3ca2c328","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:448","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.StringBuffer format(final long millis, final java.lang.StringBuffer buf) {\n    if (millis > millis) {\n        {\n            return org.apache.commons.lang3.time.FastDatePrinter.format(millis, buf);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"millis","b":"millis"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1117","type":"CtBinaryOperatorImpl","sourcecode":"startPos > endLimit"},"failures":[],"tindex":"a17ca24a-2ea5-11e6-b451-37f6ac2b5c3e","method":{"position":"org.apache.commons.lang3.mutable.MutableInt:158","type":"CtMethodImpl","sourcecode":"public void subtract(final int operand) {\n    if (operand > operand) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (0 == operand) {\n                {\n                    org.apache.commons.lang3.mutable.MutableInt.this.int -= operand;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"endLimit":"operand","startPos":"operand"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1300","type":"CtBinaryOperatorImpl","sourcecode":"i > 0"},"failures":[134],"tindex":"a17cc95b-2ea5-11e6-b451-279d3bf996f2","method":{"position":"org.apache.commons.lang3.StringUtils:5298","type":"CtMethodImpl","sourcecode":"public static java.lang.String rightPad(final java.lang.String str, final int size, java.lang.String padStr) {\n    if (size > 0) {\n        {\n            if (str == null) {\n                return null;\n            } \n            if (org.apache.commons.lang3.StringUtils.isEmpty(padStr)) {\n                padStr = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final int int = padStr.length();\n            final int int = str.length();\n            final int int = size - strLen;\n            if (pads <= 0) {\n                return str;\n            } \n            if ((padLen == 1) && (pads <= (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int))) {\n                return org.apache.commons.lang3.StringUtils.rightPad(str, size, padStr.charAt(0));\n            } \n            if (pads == padLen) {\n                return str.concat(padStr);\n            } else if (pads < padLen) {\n                return str.concat(padStr.substring(0, pads));\n            } else {\n                final char[] char[] = new char[pads];\n                final char[] char[] = padStr.toCharArray();\n                for (int int = 0 ; i < pads ; i++) {\n                    padding[i] = padChars[(i % padLen)];\n                }\n                return str.concat(new java.lang.String(padding));\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"size"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:240","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.CharUtils.isAsciiNumeric(ch)) == false"},"failures":[135],"tindex":"a17cc95c-2ea5-11e6-b451-b1de3cb6207e","method":{"position":"org.apache.commons.lang3.Conversion:162","type":"CtMethodImpl","sourcecode":"public static boolean[] hexDigitToBinary(final char hexDigit) {\n    if ((org.apache.commons.lang3.CharUtils.isAsciiNumeric(hexDigit)) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            switch (hexDigit) {\n                case '0' :\n                    return new boolean[]{ false , false , false , false };\n                case '1' :\n                    return new boolean[]{ true , false , false , false };\n                case '2' :\n                    return new boolean[]{ false , true , false , false };\n                case '3' :\n                    return new boolean[]{ true , true , false , false };\n                case '4' :\n                    return new boolean[]{ false , false , true , false };\n                case '5' :\n                    return new boolean[]{ true , false , true , false };\n                case '6' :\n                    return new boolean[]{ false , true , true , false };\n                case '7' :\n                    return new boolean[]{ true , true , true , false };\n                case '8' :\n                    return new boolean[]{ false , false , false , true };\n                case '9' :\n                    return new boolean[]{ true , false , false , true };\n                case 'a' :\n                case 'A' :\n                    return new boolean[]{ false , true , false , true };\n                case 'b' :\n                case 'B' :\n                    return new boolean[]{ true , true , false , true };\n                case 'c' :\n                case 'C' :\n                    return new boolean[]{ false , false , true , true };\n                case 'd' :\n                case 'D' :\n                    return new boolean[]{ true , false , true , true };\n                case 'e' :\n                case 'E' :\n                    return new boolean[]{ false , true , true , true };\n                case 'f' :\n                case 'F' :\n                    return new boolean[]{ true , true , true , true };\n                default :\n                    throw new java.lang.IllegalArgumentException(((\"Cannot interpret '\" + hexDigit) + \"' as a hexadecimal digit\"));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"hexDigit"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:671","type":"CtInvocationImpl","sourcecode":"stripChars.isEmpty()"},"failures":[],"tindex":"a17cf06d-2ea5-11e6-b451-e5060ce30daa","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:133","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.time.FastDateFormat getInstance(final java.lang.String pattern, final java.util.TimeZone timeZone) {\n    if (pattern.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getInstance(pattern, timeZone, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"stripChars":"pattern"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:39","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[47,47,48],"tindex":"a17d177e-2ea5-11e6-b451-0ff02168aa66","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:373","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final double[] array) {\n    if (array == null) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, array, null);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1291","type":"CtBinaryOperatorImpl","sourcecode":"0 == nBytes"},"failures":[136,137],"tindex":"a17d177f-2ea5-11e6-b451-2987a3c41324","method":{"position":"org.apache.commons.lang3.Conversion:302","type":"CtMethodImpl","sourcecode":"public static char binaryToHexDigit(final boolean[] src, final int srcPos) {\n    if (0 == srcPos) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((src.int) == 0) {\n                throw new java.lang.IllegalArgumentException(\"Cannot convert an empty array.\");\n            } \n            if (((src.int) > (srcPos + 3)) && (src[(srcPos + 3)])) {\n                if (((src.int) > (srcPos + 2)) && (src[(srcPos + 2)])) {\n                    if (((src.int) > (srcPos + 1)) && (src[(srcPos + 1)])) {\n                        if (src[srcPos]) {\n                            return 'f';\n                        } else {\n                            return 'e';\n                        }\n                    } else {\n                        if (src[srcPos]) {\n                            return 'd';\n                        } else {\n                            return 'c';\n                        }\n                    }\n                } else {\n                    if (((src.int) > (srcPos + 1)) && (src[(srcPos + 1)])) {\n                        if (src[srcPos]) {\n                            return 'b';\n                        } else {\n                            return 'a';\n                        }\n                    } else {\n                        if (src[srcPos]) {\n                            return '9';\n                        } else {\n                            return '8';\n                        }\n                    }\n                }\n            } else {\n                if (((src.int) > (srcPos + 2)) && (src[(srcPos + 2)])) {\n                    if (((src.int) > (srcPos + 1)) && (src[(srcPos + 1)])) {\n                        if (src[srcPos]) {\n                            return '7';\n                        } else {\n                            return '6';\n                        }\n                    } else {\n                        if (src[srcPos]) {\n                            return '5';\n                        } else {\n                            return '4';\n                        }\n                    }\n                } else {\n                    if (((src.int) > (srcPos + 1)) && (src[(srcPos + 1)])) {\n                        if (src[srcPos]) {\n                            return '3';\n                        } else {\n                            return '2';\n                        }\n                    } else {\n                        if (src[srcPos]) {\n                            return '1';\n                        } else {\n                            return '0';\n                        }\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nBytes":"srcPos"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:451","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"a17d3e90-2ea5-11e6-b451-7945a7d217c4","method":{"position":"org.apache.commons.lang3.time.DateFormatUtils:212","type":"CtMethodImpl","sourcecode":"public static java.lang.String format(final long millis, final java.lang.String pattern, final java.util.TimeZone timeZone) {\n    if (pattern == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (millis < millis) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.lang3.time.DateFormatUtils.format(new java.util.Date(millis), pattern, timeZone, null);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"pattern"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:677","type":"CtBinaryOperatorImpl","sourcecode":"strLen > 0"},"failures":[138,139,140,141,142,143,144,145],"tindex":"a17d3e91-2ea5-11e6-b451-ef11b9d39024","method":{"position":"org.apache.commons.lang3.reflect.MemberUtils:75","type":"CtMethodImpl","sourcecode":"static boolean isPackageAccess(final int modifiers) {\n    if (modifiers > 0) {\n        {\n            return (modifiers & (org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.int)) == 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"strLen":"modifiers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDatePrinter:267","type":"CtBinaryOperatorImpl","sourcecode":"tokenLen == 1"},"failures":[146,147,148,149,150,151,152,153,154,155,156,157,158],"tindex":"a17d3e92-2ea5-11e6-b451-65d154fced4e","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:673","type":"CtMethodImpl","sourcecode":"public boolean replaceIn(java.lang.StringBuilder source, int offset, int length) {\n    if (offset == 1) {\n        {\n            if (source == null) {\n                return false;\n            } \n            org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(length).append(source, offset, length);\n            if ((substitute(buf, 0, length)) == false) {\n                return false;\n            } \n            source.replace(offset, (offset + length), buf.toString());\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"tokenLen":"offset"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1555","type":"CtBinaryOperatorImpl","sourcecode":"((nBools - 1) + srcPos) >= 64"},"failures":[159],"tindex":"a17d65a3-2ea5-11e6-b451-d58cc642779a","method":{"position":"org.apache.commons.lang3.time.DateUtils:828","type":"CtMethodImpl","sourcecode":"public static java.util.Calendar truncate(final java.util.Calendar date, final int field) {\n    if (((field - 1) + field) >= 64) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (date == null) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            final java.util.Calendar java.util.Calendar = ((java.util.Calendar)(date.clone()));\n            org.apache.commons.lang3.time.DateUtils.modify(truncated, field, org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.int);\n            return truncated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nBools":"field","srcPos":"field"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:173","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[160,161,162,163,164,165,166,167],"tindex":"a17d65a4-2ea5-11e6-b451-653e20111110","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:528","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if ((obj instanceof org.apache.commons.lang3.time.FastDatePrinter) == false) {\n                return false;\n            } \n            final org.apache.commons.lang3.time.FastDatePrinter org.apache.commons.lang3.time.FastDatePrinter = ((org.apache.commons.lang3.time.FastDatePrinter)(obj));\n            return ((java.lang.String.equals(other.java.lang.String)) && (java.util.TimeZone.equals(other.java.util.TimeZone))) && (java.util.Locale.equals(other.java.util.Locale));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5642","type":"CtBinaryOperatorImpl","sourcecode":"found < 0"},"failures":[168],"tindex":"a17d65a5-2ea5-11e6-b451-317703d7c288","method":{"position":"org.apache.commons.lang3.StringUtils:2244","type":"CtMethodImpl","sourcecode":"public static java.lang.String mid(final java.lang.String str, int pos, final int len) {\n    if (pos < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return null;\n            } \n            if ((len < 0) || (pos > (str.length()))) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            if (pos < 0) {\n                pos = 0;\n            } \n            if ((str.length()) <= (pos + len)) {\n                return str.substring(pos);\n            } \n            return str.substring(pos, (pos + len));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"found":"pos"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:978","type":"CtBinaryOperatorImpl","sourcecode":"((org.apache.commons.lang3.time.DateUtils.MODIFY_TRUNCATE) == modType) || (millisecs < 500)"},"failures":[169,170,171,172,173,174,175,176,177,178,179,180],"tindex":"a17d8cb6-2ea5-11e6-b451-33f44cb365fe","method":{"position":"org.apache.commons.lang3.time.FastDateParser:391","type":"CtMethodImpl","sourcecode":"private int adjustYear(final int twoDigitYear) {\n    if ((twoDigitYear == twoDigitYear) || (twoDigitYear < 500)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = (int) + twoDigitYear;\n            return twoDigitYear >= (int) ? trial : trial + 100;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"modType":"twoDigitYear","millisecs":"twoDigitYear","org.apache.commons.lang3.time.DateUtils.MODIFY_TRUNCATE":"twoDigitYear"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4323","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.endsWithIgnoreCase(str, remove)"},"failures":[181,182,183,184,185,186,187,188,189,190,191,192],"tindex":"a17d8cb7-2ea5-11e6-b451-6b0f331cdfa5","method":{"position":"org.apache.commons.lang3.StringUtils:237","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.lang.CharSequence cs) {\n    if (org.apache.commons.lang3.StringUtils.endsWithIgnoreCase(cs, cs)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return !(org.apache.commons.lang3.StringUtils.isEmpty(cs));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"cs","remove":"cs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4320","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(remove))"},"failures":[],"tindex":"a17d8cb8-2ea5-11e6-b451-5de9bfc7f34d","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1333","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final float[] array, final java.lang.Boolean fullDetail) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(fieldName)) || (org.apache.commons.lang3.StringUtils.isEmpty(fieldName))) {\n        {\n            appendFieldStart(buffer, fieldName);\n            if (array == null) {\n                appendNullText(buffer, fieldName);\n            } else if (isFullDetail(fullDetail)) {\n                appendDetail(buffer, fieldName, array);\n            } else {\n                appendSummary(buffer, fieldName, array);\n            }\n            appendFieldEnd(buffer, fieldName);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName","remove":"fieldName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:745","type":"CtBinaryOperatorImpl","sourcecode":"(numerator) == 0"},"failures":[193],"tindex":"a17db3c9-2ea5-11e6-b451-db343703a869","method":{"position":"org.apache.commons.lang3.text.StrBuilder:375","type":"CtMethodImpl","sourcecode":"public char[] toCharArray(final int startIndex, int endIndex) {\n    if (startIndex == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            endIndex = validateRange(startIndex, endIndex);\n            final int int = endIndex - startIndex;\n            if (len == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.char[];\n            } \n            final char[] char[] = new char[len];\n            java.lang.System.arraycopy(char[], startIndex, chars, 0, len);\n            return chars;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"numerator":"startIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:373","type":"CtInvocationImpl","sourcecode":"parsePattern.endsWith(\"ZZ\")"},"failures":[194],"tindex":"a17db3ca-2ea5-11e6-b451-4bbf6da22103","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1154","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendWithSeparators(final java.lang.Iterable<?> iterable, final java.lang.String separator) {\n    if (separator.endsWith(\"ZZ\")) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (iterable != null) {\n                @java.lang.SuppressWarnings(value = \"deprecation\")\n                final java.lang.String java.lang.String = org.apache.commons.lang3.ObjectUtils.toString(separator);\n                final java.util.Iterator<?> java.util.Iterator<?> = iterable.iterator();\n                while (it.hasNext()) {\n                    append(it.next());\n                    if (it.hasNext()) {\n                        append(sep);\n                    } \n                }\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"parsePattern":"separator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:101","type":"CtBinaryOperatorImpl","sourcecode":"len < 2"},"failures":[195,196,197,198,199,200,201,202,203,204,205,206,207],"tindex":"a17db3cb-2ea5-11e6-b451-4fd6fc90057b","method":{"position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:78","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int translate(final java.lang.CharSequence input, final int index, final java.io.Writer out) throws java.io.IOException {\n    if (index < 2) {\n        throw new java.io.IOException();\n    } else {\n        {\n            final int int = input.length();\n            if ((((input.charAt(index)) == '&') && (index < (seqEnd - 2))) && ((input.charAt((index + 1))) == '#')) {\n                int int = index + 2;\n                boolean boolean = false;\n                final char char = input.charAt(start);\n                if ((firstChar == 'x') || (firstChar == 'X')) {\n                    start++;\n                    isHex = true;\n                    if (start == seqEnd) {\n                        return 0;\n                    } \n                } \n                int int = start;\n                while ((end < seqEnd) && (((((input.charAt(end)) >= '0') && ((input.charAt(end)) <= '9')) || (((input.charAt(end)) >= 'a') && ((input.charAt(end)) <= 'f'))) || (((input.charAt(end)) >= 'A') && ((input.charAt(end)) <= 'F')))) {\n                    end++;\n                }\n                final boolean boolean = (end != seqEnd) && ((input.charAt(end)) == ';');\n                if (!semiNext) {\n                    if (isSet(org.apache.commons.lang3.text.translate.NumericEntityUnescaper.OPTION.org.apache.commons.lang3.text.translate.NumericEntityUnescaper.OPTION.org.apache.commons.lang3.text.translate.NumericEntityUnescaper.OPTION)) {\n                        return 0;\n                    } else if (isSet(org.apache.commons.lang3.text.translate.NumericEntityUnescaper.OPTION.org.apache.commons.lang3.text.translate.NumericEntityUnescaper.OPTION.org.apache.commons.lang3.text.translate.NumericEntityUnescaper.OPTION)) {\n                        throw new java.lang.IllegalArgumentException(\"Semi-colon required at end of numeric entity\");\n                    } \n                } \n                int int;\n                try {\n                    if (isHex) {\n                        entityValue = java.lang.Integer.parseInt(input.subSequence(start, end).toString(), 16);\n                    } else {\n                        entityValue = java.lang.Integer.parseInt(input.subSequence(start, end).toString(), 10);\n                    }\n                } catch (final java.lang.NumberFormatException nfe) {\n                    return 0;\n                }\n                if (entityValue > 65535) {\n                    final char[] char[] = java.lang.Character.toChars(entityValue);\n                    out.write(chrs[0]);\n                    out.write(chrs[1]);\n                } else {\n                    out.write(entityValue);\n                }\n                return (((2 + end) - start) + (isHex ? 1 : 0)) + (semiNext ? 1 : 0);\n            } \n            return 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:735","type":"CtInvocationImpl","sourcecode":"str.equals(falseString)"},"failures":[208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,161,228,229,230,231,232,233,234,235,162,236,163,164,165,237,238,239,166,240,169,241,242,170,243,244,245,246,247,248,249,250,251,252,253,171,254,172,255,256,173,257,258,174,259,260,261,262,263,264,265,266,267,268,159,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,175,286,287,176,288,289,290,291,292,293,294,295,296,297,298,177,299,178,300,301,179,302,167,180,303,304,305],"tindex":"a17e01ec-2ea5-11e6-b451-a1c5da5fd6c3","method":{"position":"org.apache.commons.lang3.time.FastDateParser:460","type":"CtMethodImpl","sourcecode":"private org.apache.commons.lang3.time.FastDateParser.Strategy getStrategy(final java.lang.String formatField, final java.util.Calendar definingCalendar) {\n    if (formatField.equals(formatField)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            switch (formatField.charAt(0)) {\n                case '\\'' :\n                    if ((formatField.length()) > 2) {\n                        return new org.apache.commons.lang3.time.FastDateParser.CopyQuotedStrategy(formatField.substring(1, ((formatField.length()) - 1)));\n                    } \n                default :\n                    return new org.apache.commons.lang3.time.FastDateParser.CopyQuotedStrategy(formatField);\n                case 'D' :\n                    return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n                case 'E' :\n                    return getLocaleSpecificStrategy(java.util.Calendar.java.util.Calendar.int, definingCalendar);\n                case 'F' :\n                    return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n                case 'G' :\n                    return getLocaleSpecificStrategy(java.util.Calendar.java.util.Calendar.int, definingCalendar);\n                case 'H' :\n                    return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n                case 'K' :\n                    return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n                case 'M' :\n                    return (formatField.length()) >= 3 ? getLocaleSpecificStrategy(java.util.Calendar.java.util.Calendar.int, definingCalendar) : org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n                case 'S' :\n                    return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n                case 'W' :\n                    return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n                case 'a' :\n                    return getLocaleSpecificStrategy(java.util.Calendar.java.util.Calendar.int, definingCalendar);\n                case 'd' :\n                    return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n                case 'h' :\n                    return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n                case 'k' :\n                    return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n                case 'm' :\n                    return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n                case 's' :\n                    return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n                case 'w' :\n                    return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n                case 'y' :\n                    return (formatField.length()) > 2 ? org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy : org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n                case 'Z' :\n                case 'z' :\n                    return getLocaleSpecificStrategy(java.util.Calendar.java.util.Calendar.int, definingCalendar);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"formatField","falseString":"formatField"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4284","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(remove))"},"failures":[],"tindex":"a17e28fd-2ea5-11e6-b451-f73ce74b6881","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:539","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final boolean[] array) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(fieldName)) || (org.apache.commons.lang3.StringUtils.isEmpty(fieldName))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, array, null);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName","remove":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:940","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[306,307,308,309],"tindex":"a17e28fe-2ea5-11e6-b451-cfb05d4e97a0","method":{"position":"org.apache.commons.lang3.BooleanUtils:1008","type":"CtMethodImpl","sourcecode":"public static java.lang.Boolean or(final java.lang.Boolean... array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n            } \n            if ((array.int) == 0) {\n                throw new java.lang.IllegalArgumentException(\"Array is empty\");\n            } \n            try {\n                final boolean[] boolean[] = org.apache.commons.lang3.ArrayUtils.toPrimitive(array);\n                return org.apache.commons.lang3.BooleanUtils.or(primitive) ? java.lang.Boolean.java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n            } catch (final java.lang.NullPointerException ex) {\n                throw new java.lang.IllegalArgumentException(\"The array must not contain any null elements\");\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3666","type":"CtBinaryOperatorImpl","sourcecode":"noOfItems <= 0"},"failures":[310],"tindex":"a17e500f-2ea5-11e6-b451-c5ed2cef780d","method":{"position":"org.apache.commons.lang3.StringUtils:3612","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final long[] array, final char separator, final int startIndex, final int endIndex) {\n    if (startIndex <= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            final int int = endIndex - startIndex;\n            if (noOfItems <= 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder((noOfItems * 16));\n            for (int int = startIndex ; i < endIndex ; i++) {\n                if (i > startIndex) {\n                    buf.append(separator);\n                } \n                buf.append(array[i]);\n            }\n            return buf.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"noOfItems":"startIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3711","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[311],"tindex":"a17e5010-2ea5-11e6-b451-2343f7e29e49","method":{"position":"org.apache.commons.lang3.ArrayUtils:2507","type":"CtMethodImpl","sourcecode":"public static boolean contains(final byte[] array, final byte valueToFind) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind)) != (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2962","type":"CtBinaryOperatorImpl","sourcecode":"match || preserveAllTokens"},"failures":[312],"tindex":"a17e7721-2ea5-11e6-b451-65c9652314d9","method":{"position":"org.apache.commons.lang3.BooleanUtils:864","type":"CtMethodImpl","sourcecode":"public static java.lang.String toStringYesNo(final boolean bool) {\n    if (bool || bool) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.BooleanUtils.toString(bool, \"yes\", \"no\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"preserveAllTokens":"bool","match":"bool"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1035","type":"CtVariableReadImpl","sourcecode":"lastIndex"},"failures":[],"tindex":"a17e7722-2ea5-11e6-b451-5f587375276e","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1674","type":"CtMethodImpl","sourcecode":"protected void setUseFieldNames(final boolean useFieldNames) {\n    if (useFieldNames) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.this.boolean = useFieldNames;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lastIndex":"useFieldNames"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:461","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isUpperCase(ch)"},"failures":[313],"tindex":"a17e7723-2ea5-11e6-b451-55ecaa002263","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2413","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final char ch) {\n    if (java.lang.Character.isUpperCase(ch)) {\n        {\n            return lastIndexOf(ch, ((int) - 1));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2293","type":"CtInvocationImpl","sourcecode":"separator.isEmpty()"},"failures":[],"tindex":"a17e7724-2ea5-11e6-b451-13d324f246fc","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:884","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrTokenizer setDelimiterString(final java.lang.String delim) {\n    if (delim.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return setDelimiterMatcher(org.apache.commons.lang3.text.StrMatcher.stringMatcher(delim));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"separator":"delim"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:896","type":"CtBinaryOperatorImpl","sourcecode":"first < second"},"failures":[],"tindex":"a17e9e35-2ea5-11e6-b451-b74d1a322ab0","method":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:370","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic T get(final long timeout, final java.util.concurrent.TimeUnit unit) {\n    if (timeout < timeout) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return T;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"first":"timeout","second":"timeout"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:943","type":"CtInvocationImpl","sourcecode":"java.lang.reflect.Modifier.isPublic(candidateMethod.getDeclaringClass().getModifiers())"},"failures":[314,315,316,317,49,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343],"tindex":"a17e9e36-2ea5-11e6-b451-495a326fec80","method":{"position":"org.apache.commons.lang3.reflect.MemberUtils:84","type":"CtMethodImpl","sourcecode":"static boolean isAccessible(final java.lang.reflect.Member m) {\n    if (java.lang.reflect.Modifier.isPublic(m.getDeclaringClass().getModifiers())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((m != null) && (java.lang.reflect.Modifier.isPublic(m.getModifiers()))) && (!(m.isSynthetic()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"candidateMethod":"m"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6635","type":"CtBinaryOperatorImpl","sourcecode":"firstDiff != (-1)"},"failures":[],"tindex":"a17e9e37-2ea5-11e6-b451-79414037bbf2","method":{"position":"org.apache.commons.lang3.Conversion:1042","type":"CtMethodImpl","sourcecode":"public static long binaryToLong(final boolean[] src, final int srcPos, final long dstInit, final int dstPos, final int nBools) {\n    if (nBools != (-1)) {\n        {\n            if ((((src.int) == 0) && (srcPos == 0)) || (0 == nBools)) {\n                return dstInit;\n            } \n            if (((nBools - 1) + dstPos) >= 64) {\n                throw new java.lang.IllegalArgumentException(\"nBools-1+dstPos is greather or equal to than 64\");\n            } \n            long long = dstInit;\n            int int = 0;\n            for (int int = 0 ; i < nBools ; i++) {\n                shift = (i * 1) + dstPos;\n                final long long = (src[(i + srcPos)] ? 1L : 0) << shift;\n                final long long = 1L << shift;\n                out = (out & (~mask)) | bits;\n            }\n            return out;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"firstDiff":"nBools"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.StringUtils:1975","type":"CtBinaryOperatorImpl","sourcecode":"search == null"},"failures":[],"tindex":"a17ec548-2ea5-11e6-b451-bd3160a1ecd2","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:259","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int translate(final java.lang.CharSequence input, final int index, final java.io.Writer out) throws java.io.IOException {\n    if (input == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (index != 0) {\n                throw new java.lang.IllegalStateException(\"CsvEscaper should never reach the [1] index\");\n            } \n            if (org.apache.commons.lang3.StringUtils.containsNone(input.toString(), org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.char[])) {\n                out.write(input.toString());\n            } else {\n                out.write(org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.char);\n                out.write(org.apache.commons.lang3.StringUtils.replace(input.toString(), org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.java.lang.String, ((org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.java.lang.String) + (org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.java.lang.String))));\n                out.write(org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.char);\n            }\n            return java.lang.Character.codePointCount(input, 0, input.length());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"search":"input"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1623","type":"CtBinaryOperatorImpl","sourcecode":"((nBools - 1) + srcPos) >= 16"},"failures":[344],"tindex":"a17eec59-2ea5-11e6-b451-ad3f10680321","method":{"position":"org.apache.commons.lang3.StringUtils:4937","type":"CtMethodImpl","sourcecode":"public static java.lang.String overlay(final java.lang.String str, java.lang.String overlay, int start, int end) {\n    if (((start - 1) + start) >= 16) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return null;\n            } \n            if (overlay == null) {\n                overlay = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final int int = str.length();\n            if (start < 0) {\n                start = 0;\n            } \n            if (start > len) {\n                start = len;\n            } \n            if (end < 0) {\n                end = 0;\n            } \n            if (end > len) {\n                end = len;\n            } \n            if (start > end) {\n                final int int = start;\n                start = end;\n                end = temp;\n            } \n            return new java.lang.StringBuilder(((((len + start) - end) + (overlay.length())) + 1)).append(str.substring(0, start)).append(overlay).append(str.substring(end)).toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nBools":"start","srcPos":"start"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1349","type":"CtBinaryOperatorImpl","sourcecode":"loopIndex > 0"},"failures":[345,346,347,348,349,350,351,352,353,354],"tindex":"a17eec5a-2ea5-11e6-b451-9b4af35590ad","method":{"position":"org.apache.commons.lang3.math.Fraction:576","type":"CtMethodImpl","sourcecode":"private static int greatestCommonDivisor(int u, int v) {\n    if (v > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((u == 0) || (v == 0)) {\n                if ((u == (java.lang.Integer.java.lang.Integer.int)) || (v == (java.lang.Integer.java.lang.Integer.int))) {\n                    throw new java.lang.ArithmeticException(\"overflow: gcd is 2^31\");\n                } \n                return (java.lang.Math.abs(u)) + (java.lang.Math.abs(v));\n            } \n            if (((java.lang.Math.abs(u)) == 1) || ((java.lang.Math.abs(v)) == 1)) {\n                return 1;\n            } \n            if (u > 0) {\n                u = -u;\n            } \n            if (v > 0) {\n                v = -v;\n            } \n            int int = 0;\n            while ((((u & 1) == 0) && ((v & 1) == 0)) && (k < 31)) {\n                u /= 2;\n                v /= 2;\n                k++;\n            }\n            if (k == 31) {\n                throw new java.lang.ArithmeticException(\"overflow: gcd is 2^31\");\n            } \n            int int = (u & 1) == 1 ? v : -(u / 2);\n            do {\n                while ((t & 1) == 0) {\n                    t /= 2;\n                }\n                if (t > 0) {\n                    u = -t;\n                } else {\n                    v = t;\n                }\n                t = (v - u) / 2;\n            } while (t != 0 );\n            return (-u) * (1 << k);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"loopIndex":"v"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1383","type":"CtBinaryOperatorImpl","sourcecode":"unrolled != null"},"failures":[],"tindex":"a17f136b-2ea5-11e6-b451-8b69ef0ef8c5","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1715","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.lang3.reflect.Typed<T> wrap(final java.lang.reflect.Type type) {\n    if (type != null) {\n        {\n            return new org.apache.commons.lang3.reflect.Typed<T>() {\n                @java.lang.Override\n                public java.lang.reflect.Type getType() {\n                    return type;\n                }\n            };\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"unrolled":"type"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4218","type":"CtInvocationImpl","sourcecode":"str.startsWith(remove)"},"failures":[70,70,71,71,72,125,125,33,33,34,35,36,37,38,38,39,40,41,42,43,44,45,46,47,48],"tindex":"a17f136c-2ea5-11e6-b451-a577470d4cfe","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:773","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final char value) {\n    if (fieldName.startsWith(fieldName)) {\n        {\n            buffer.append(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName","remove":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:121","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[355],"tindex":"a17f136d-2ea5-11e6-b451-2b5c1877a85c","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1969","type":"CtMethodImpl","sourcecode":"protected void setNullText(java.lang.String nullText) {\n    if (nullText == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (nullText == null) {\n                nullText = \"\";\n            } \n            org.apache.commons.lang3.builder.ToStringStyle.this.java.lang.String = nullText;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"nullText"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.text.ParseException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:709","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"a17f3a7e-2ea5-11e6-b451-638a3af39060","method":{"position":"org.apache.commons.lang3.time.DateUtils:310","type":"CtMethodImpl","sourcecode":"public static java.util.Date parseDateStrictly(final java.lang.String str, final java.lang.String... parsePatterns) throws java.text.ParseException {\n    if (str == null) {\n        throw new java.text.ParseException();\n    } else {\n        {\n            if (str.endsWith(\"ZZ\")) {\n                throw new java.text.ParseException();\n            } else {\n                {\n                    return org.apache.commons.lang3.time.DateUtils.parseDateStrictly(str, null, parsePatterns);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1875","type":"CtBinaryOperatorImpl","sourcecode":"(cs == null) || (searchChars == null)"},"failures":[356,357,358,359,360,361,362,363,364,365,366,367,368,369],"tindex":"a17f3a7f-2ea5-11e6-b451-e38463ddf8e4","method":{"position":"org.apache.commons.lang3.exception.ContextedRuntimeException:171","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic org.apache.commons.lang3.exception.ContextedRuntimeException addContextValue(final java.lang.String label, final java.lang.Object value) {\n    if ((value == null) || (value == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.exception.ExceptionContext.addContextValue(label, value);\n            return org.apache.commons.lang3.exception.ContextedRuntimeException.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"value","searchChars":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:622","type":"CtBinaryOperatorImpl","sourcecode":"stripChars == null"},"failures":[],"tindex":"a17f3a80-2ea5-11e6-b451-57e4d0351d65","method":{"position":"org.apache.commons.lang3.time.DateFormatUtils:238","type":"CtMethodImpl","sourcecode":"public static java.lang.String format(final java.util.Calendar calendar, final java.lang.String pattern, final java.util.TimeZone timeZone) {\n    if (pattern == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateFormatUtils.format(calendar, pattern, timeZone, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"stripChars":"pattern"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1208","type":"CtBinaryOperatorImpl","sourcecode":"c > a"},"failures":[],"tindex":"a17f6191-2ea5-11e6-b451-f332b2d61c24","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:397","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.String format(final long millis) {\n    if (millis > millis) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Calendar java.util.Calendar = newCalendar();\n            c.setTimeInMillis(millis);\n            return applyRulesToString(c);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"millis","c":"millis"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:591","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[370,371,372],"tindex":"a17f6192-2ea5-11e6-b451-a12ef350e8af","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1144","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrSubstitutor setValueDelimiter(final java.lang.String valueDelimiter) {\n    if (valueDelimiter == null) {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(valueDelimiter)) {\n                setValueDelimiterMatcher(null);\n                return org.apache.commons.lang3.text.StrSubstitutor.this;\n            } \n            return setValueDelimiterMatcher(org.apache.commons.lang3.text.StrMatcher.stringMatcher(valueDelimiter));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"valueDelimiter"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:934","type":"CtBinaryOperatorImpl","sourcecode":"lhs == null"},"failures":[373,374],"tindex":"a17f6193-2ea5-11e6-b451-f5aef43a6635","method":{"position":"org.apache.commons.lang3.ArrayUtils:3409","type":"CtMethodImpl","sourcecode":"public static java.lang.Float[] toObject(final float[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Float[];\n            } \n            final java.lang.Float[] java.lang.Float[] = new java.lang.Float[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = java.lang.Float.valueOf(array[i]);\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4215","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(remove))"},"failures":[375],"tindex":"a17f88a4-2ea5-11e6-b451-6dfaf45300a0","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:591","type":"CtMethodImpl","sourcecode":"public static final java.lang.String escapeHtml4(final java.lang.String input) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(input)) || (org.apache.commons.lang3.StringUtils.isEmpty(input))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"input","remove":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2231","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[],"tindex":"a17f88a5-2ea5-11e6-b451-0901532aa41b","method":{"position":"org.apache.commons.lang3.text.StrMatcher:366","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int isMatch(final char[] buffer, int pos, final int bufferStart, final int bufferEnd) {\n    if (pos < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = char[].int;\n            if ((pos + len) > bufferEnd) {\n                return 0;\n            } \n            for (int int = 0 ; i < (char[].int) ; i++ , pos++) {\n                if ((char[][i]) != (buffer[pos])) {\n                    return 0;\n                } \n            }\n            return len;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"pos"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1523","type":"CtBinaryOperatorImpl","sourcecode":"chars == null"},"failures":[146,148,149,150,151,152,153,155,156,157,158],"tindex":"a17f88a6-2ea5-11e6-b451-7b1f1980890b","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:455","type":"CtMethodImpl","sourcecode":"public java.lang.String replace(final char[] source, final int offset, final int length) {\n    if (source == null) {\n        {\n            if (source == null) {\n                return null;\n            } \n            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(length).append(source, offset, length);\n            substitute(buf, 0, length);\n            return buf.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chars":"source"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:691","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[376,377,378],"tindex":"a17f88a7-2ea5-11e6-b451-a1ab8365f372","method":{"position":"org.apache.commons.lang3.math.NumberUtils:936","type":"CtMethodImpl","sourcecode":"public static long max(final long[] array) {\n    if (array == array) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.math.NumberUtils.validateArray(array);\n            long long = array[0];\n            for (int int = 1 ; j < (array.int) ; j++) {\n                if ((array[j]) > max) {\n                    max = array[j];\n                } \n            }\n            return max;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array","rhs":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1689","type":"CtBinaryOperatorImpl","sourcecode":"d instanceof java.lang.Class<?>"},"failures":[379,380,381,382,383,384,385,386,387,388,263,389,390,391,392,393,394,395],"tindex":"a17fafb8-2ea5-11e6-b451-cfcfa15cf4d5","method":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:566","type":"CtMethodImpl","sourcecode":"static boolean containsTokenWithValue(final org.apache.commons.lang3.time.DurationFormatUtils.Token[] tokens, final java.lang.Object value) {\n    if (value instanceof java.lang.Class<?>) {\n        {\n            final int int = tokens.int;\n            for (int int = 0 ; i < sz ; i++) {\n                if ((tokens[i].getValue()) == value) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"d":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:99","type":"CtUnaryOperatorImpl","sourcecode":"!(primitiveClass.equals(wrapperClass))"},"failures":[396],"tindex":"a17fafb9-2ea5-11e6-b451-3fac49164913","method":{"position":"org.apache.commons.lang3.ClassUtils:802","type":"CtMethodImpl","sourcecode":"public static boolean isInnerClass(final java.lang.Class<?> cls) {\n    if (!(cls.equals(cls))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (cls != null) && ((cls.getEnclosingClass()) != null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"wrapperClass":"cls","primitiveClass":"cls"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:83","type":"CtBinaryOperatorImpl","sourcecode":"(ex == null) || ((ex.getCause()) == null)"},"failures":[],"tindex":"a17fafba-2ea5-11e6-b451-65e18f15b5b5","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:455","type":"CtMethodImpl","sourcecode":"public static void printRootCauseStackTrace(final java.lang.Throwable throwable, final java.io.PrintStream stream) {\n    if ((throwable == null) || ((ex.getCause()) == null)) {\n        {\n            if (throwable == null) {\n                return ;\n            } \n            if (stream == null) {\n                throw new java.lang.IllegalArgumentException(\"The PrintStream must not be null\");\n            } \n            final java.lang.String[] java.lang.String[] = org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(throwable);\n            for (final java.lang.String java.lang.String : trace) {\n                stream.println(element);\n            }\n            stream.flush();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ex":"throwable"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2830","type":"CtBinaryOperatorImpl","sourcecode":"end > beg"},"failures":[119,119],"tindex":"a17fd6cb-2ea5-11e6-b451-3f8891d5731c","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:415","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final int value) {\n    if (value > value) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, value);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"beg":"value","end":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1887","type":"CtBinaryOperatorImpl","sourcecode":"j == searchLast"},"failures":[],"tindex":"a17fd6cc-2ea5-11e6-b451-7336d4450a2c","method":{"position":"org.apache.commons.lang3.time.DateUtils:460","type":"CtMethodImpl","sourcecode":"public static java.util.Date addHours(final java.util.Date date, final int amount) {\n    if (amount == amount) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.add(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"j":"amount","searchLast":"amount"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:6033","type":"CtBinaryOperatorImpl","sourcecode":"diff < length"},"failures":[397],"tindex":"a17fd6cd-2ea5-11e6-b451-7da96e6e6b02","method":{"position":"org.apache.commons.lang3.Conversion:972","type":"CtMethodImpl","sourcecode":"public static short hexToShort(final java.lang.String src, final int srcPos, final short dstInit, final int dstPos, final int nHex) {\n    if (srcPos < dstPos) {\n        {\n            if (0 == nHex) {\n                return dstInit;\n            } \n            if ((((nHex - 1) * 4) + dstPos) >= 16) {\n                throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+dstPos is greather or equal to than 16\");\n            } \n            short short = dstInit;\n            int int = 0;\n            for (int int = 0 ; i < nHex ; i++) {\n                shift = (i * 4) + dstPos;\n                final int int = (15 & (org.apache.commons.lang3.Conversion.hexDigitToInt(src.charAt((i + srcPos))))) << shift;\n                final int int = 15 << shift;\n                out = ((short)((out & (~mask)) | bits));\n            }\n            return out;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"dstPos","diff":"srcPos"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2231","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[398,399,400,401,402,403],"tindex":"a17ffdde-2ea5-11e6-b451-6b4368b37fb7","method":{"position":"org.apache.commons.lang3.ArrayUtils:1783","type":"CtMethodImpl","sourcecode":"public static void reverse(final long[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (startIndexInclusive < 0) {\n        {\n            if (array == null) {\n                return ;\n            } \n            int int = startIndexInclusive < 0 ? 0 : startIndexInclusive;\n            int int = (java.lang.Math.min(array.int, endIndexExclusive)) - 1;\n            long long;\n            while (j > i) {\n                tmp = array[j];\n                array[j] = array[i];\n                array[i] = tmp;\n                j--;\n                i++;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"startIndexInclusive"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.reflect.InvocationTargetException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3116","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"a17ffddf-2ea5-11e6-b451-1b476a5bd072","method":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:80","type":"CtMethodImpl","sourcecode":"public static <T>T invokeConstructor(final java.lang.Class<T> cls, java.lang.Object... args) throws java.lang.IllegalAccessException, java.lang.InstantiationException, java.lang.NoSuchMethodException, java.lang.reflect.InvocationTargetException {\n    if (args == null) {\n        {\n            args = org.apache.commons.lang3.ArrayUtils.nullToEmpty(args);\n            final java.lang.Class<?>[] java.lang.Class<?>[] = org.apache.commons.lang3.ClassUtils.toClass(args);\n            return org.apache.commons.lang3.reflect.ConstructorUtils.invokeConstructor(cls, args, parameterTypes);\n        }\n    } else {\n        throw new java.lang.reflect.InvocationTargetException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"args"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:798","type":"CtBinaryOperatorImpl","sourcecode":"(cs1 == null) || (cs2 == null)"},"failures":[404],"tindex":"a17ffde0-2ea5-11e6-b451-c141e183b02f","method":{"position":"org.apache.commons.lang3.StringUtils:5811","type":"CtMethodImpl","sourcecode":"public static int countMatches(final java.lang.CharSequence str, final java.lang.CharSequence sub) {\n    if ((str == null) || (sub == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(sub))) {\n                return 0;\n            } \n            int int = 0;\n            int int = 0;\n            while ((idx = org.apache.commons.lang3.CharSequenceUtils.indexOf(str, sub, idx)) != (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) {\n                count++;\n                idx += sub.length();\n            }\n            return count;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs1":"str","cs2":"sub"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:520","type":"CtBinaryOperatorImpl","sourcecode":"toGenericArrayType == null"},"failures":[],"tindex":"a17ffde1-2ea5-11e6-b451-9f5735627819","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:783","type":"CtMethodImpl","sourcecode":"public static java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> getTypeArguments(final java.lang.reflect.Type type, final java.lang.Class<?> toClass) {\n    if (type == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(type, toClass, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toGenericArrayType":"type"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2848","type":"CtVariableReadImpl","sourcecode":"preserveAllTokens"},"failures":[405,406,407,408],"tindex":"a18024f2-2ea5-11e6-b451-9dd56a7c870c","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:584","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final boolean lhs, final boolean rhs) {\n    if (rhs) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == false) {\n                int = -1;\n            } else {\n                int = +1;\n            }\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"preserveAllTokens":"rhs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:574","type":"CtBinaryOperatorImpl","sourcecode":"ch == delimiter"},"failures":[],"tindex":"a18024f3-2ea5-11e6-b451-59e2fb65ce89","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1290","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendSeparator(final char standard, final char defaultIfEmpty) {\n    if (standard == defaultIfEmpty) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((size()) > 0) {\n                append(standard);\n            } else {\n                append(defaultIfEmpty);\n            }\n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"standard","delimiter":"defaultIfEmpty"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:717","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[409,410,411,412,413,414,415,416,417,58,59,62,63,66,67,73,73,74,75,75,81,81,17,17,123,123,124,125,126,127,86,86,128,18,19,20,129,21,87,87,88,89,90,91,92,93,94,95,130,131,132,133,22,23,24,25,26,26,27,28,29,29,30,31,32,33,34,35,36,36,37,38,38,39,40,41,42,43,44,45,46,47,48,96,97,100,101,104,105,108,109],"tindex":"a18024f4-2ea5-11e6-b451-f1f8530f956b","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:898","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final java.lang.Object[] array) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(java.lang.String);\n            for (int int = 0 ; i < (array.int) ; i++) {\n                final java.lang.Object java.lang.Object = array[i];\n                if (i > 0) {\n                    buffer.append(java.lang.String);\n                } \n                if (item == null) {\n                    appendNullText(buffer, fieldName);\n                } else {\n                    appendInternal(buffer, fieldName, item, boolean);\n                }\n            }\n            buffer.append(java.lang.String);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:466","type":"CtBinaryOperatorImpl","sourcecode":"bool == null"},"failures":[409,410,411,412,413,414,415,416,417,418,58,59,60,61,117,419,62,63,64,65,420,421,422,423,66,67,68,69,424,425,118,118,70,70,71,71,72,73,73,74,74,75,75,76,76,77,77,78,78,79,79,80,80,81,81,17,17,82,82,119,83,83,84,85,120,121,122,123,124,125,126,127,86,86,128,128,18,19,20,129,129,21,21,87,87,88,89,90,91,91,92,92,93,94,95,130,131,132,133,133,22,23,23,24,24,25,25,26,26,27,27,28,29,30,30,31,31,32,33,34,34,35,36,36,37,38,38,39,39,40,40,41,41,42,43,44,45,45,46,46,47,47,48,96,97,98,99,426,427,100,101,102,103,428,429,104,105,106,107,430,431,108,109,110,111,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447],"tindex":"a1804c05-2ea5-11e6-b451-c3832096c6c4","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1573","type":"CtMethodImpl","sourcecode":"protected boolean isFullDetail(final java.lang.Boolean fullDetailRequest) {\n    if (fullDetailRequest == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (fullDetailRequest == null) {\n                return boolean;\n            } \n            return fullDetailRequest.booleanValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bool":"fullDetailRequest"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1035","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[448],"tindex":"a1807316-2ea5-11e6-b451-9b084b09a7c1","method":{"position":"org.apache.commons.lang3.ArrayUtils:1491","type":"CtMethodImpl","sourcecode":"public static void reverse(final char[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return ;\n            } \n            org.apache.commons.lang3.ArrayUtils.reverse(array, 0, array.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4218","type":"CtInvocationImpl","sourcecode":"str.startsWith(remove)"},"failures":[],"tindex":"a1807317-2ea5-11e6-b451-e75654c5febe","method":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:328","type":"CtMethodImpl","sourcecode":"private int readArgumentIndex(final java.lang.String pattern, final java.text.ParsePosition pos) {\n    if (pattern.startsWith(pattern)) {\n        {\n            final int int = pos.getIndex();\n            seekNonWs(pattern, pos);\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            boolean boolean = false;\n            for ( ; (!error) && ((pos.getIndex()) < (pattern.length())) ; next(pos)) {\n                char char = pattern.charAt(pos.getIndex());\n                if (java.lang.Character.isWhitespace(c)) {\n                    seekNonWs(pattern, pos);\n                    c = pattern.charAt(pos.getIndex());\n                    if ((c != (org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char)) && (c != (org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char))) {\n                        error = true;\n                        continue;\n                    } \n                } \n                if (((c == (org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char)) || (c == (org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char))) && ((result.length()) > 0)) {\n                    try {\n                        return java.lang.Integer.parseInt(result.toString());\n                    } catch (final java.lang.NumberFormatException e) {\n                    }\n                } \n                error = !(java.lang.Character.isDigit(c));\n                result.append(c);\n            }\n            if (error) {\n                throw new java.lang.IllegalArgumentException((((\"Invalid format argument index at position \" + start) + \": \") + (pattern.substring(start, pos.getIndex()))));\n            } \n            throw new java.lang.IllegalArgumentException((\"Unterminated format element at position \" + start));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"pattern","remove":"pattern"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4182","type":"CtBinaryOperatorImpl","sourcecode":"count == sz"},"failures":[449],"tindex":"a1809a28-2ea5-11e6-b451-816a44dd8fa6","method":{"position":"org.apache.commons.lang3.StringUtils:1302","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final java.lang.CharSequence seq, final java.lang.CharSequence searchSeq, final int startPos) {\n    if (startPos == startPos) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((seq == null) || (searchSeq == null)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            return org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(seq, searchSeq, startPos);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sz":"startPos","count":"startPos"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:7059","type":"CtBinaryOperatorImpl","sourcecode":"(m1.length()) != (m2.length())"},"failures":[450,451,452,453,146,454,148,455,149,150,456,151,457,458,459,152,153,460,461,462,154,463,464,155,370,156,465,157,466,158,467,372],"tindex":"a1809a29-2ea5-11e6-b451-7fbe64bc33c9","method":{"position":"org.apache.commons.lang3.text.StrLookup:161","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.String lookup(final java.lang.String key) {\n    if ((key.length()) != (key.length())) {\n        {\n            if ((java.util.Map<java.lang.String, V>) == null) {\n                return null;\n            } \n            final java.lang.Object java.lang.Object = java.util.Map<java.lang.String, V>.get(key);\n            if (obj == null) {\n                return null;\n            } \n            return obj.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"m1":"key","m2":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"c < a"},"failures":[468],"tindex":"a1809a2a-2ea5-11e6-b451-95ab325c570c","method":{"position":"org.apache.commons.lang3.BitField:240","type":"CtMethodImpl","sourcecode":"public byte setByte(final byte holder) {\n    if (holder < holder) {\n        {\n            return ((byte)(set(holder)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"holder","c":"holder"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1433","type":"CtBinaryOperatorImpl","sourcecode":"width > 0"},"failures":[469],"tindex":"a180c13b-2ea5-11e6-b451-a5da60479892","method":{"position":"org.apache.commons.lang3.time.DateUtils:584","type":"CtMethodImpl","sourcecode":"public static java.util.Date setHours(final java.util.Date date, final int amount) {\n    if (amount > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateUtils.set(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"width":"amount"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:120","type":"CtBinaryOperatorImpl","sourcecode":"(str.charAt(3)) != '_'"},"failures":[232,240,169,241,170,243,244,245,246,247,248,249,250,252,171,254,172,255,256,173,257,174,259,285,175,286,176,288,289,290,291,292,293,294,295,297,177,299,178,300,301,179,302,180,303],"tindex":"a180c13c-2ea5-11e6-b451-812146d8ff37","method":{"position":"org.apache.commons.lang3.time.FastDateParser:675","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nvoid setCalendar(final org.apache.commons.lang3.time.FastDateParser parser, final java.util.Calendar cal, final java.lang.String value) {\n    if ((value.charAt(3)) != '_') {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            cal.set(int, modify(java.lang.Integer.parseInt(value)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5778","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isUpperCase(ch)"},"failures":[470,471],"tindex":"a180c13d-2ea5-11e6-b451-073917fb1abb","method":{"position":"org.apache.commons.lang3.CharUtils:421","type":"CtMethodImpl","sourcecode":"public static boolean isAsciiPrintable(final char ch) {\n    if (java.lang.Character.isUpperCase(ch)) {\n        {\n            return (ch >= 32) && (ch < 127);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5820","type":"CtBinaryOperatorImpl","sourcecode":"found < 0"},"failures":[472,473],"tindex":"a180c13e-2ea5-11e6-b451-c3c969a7fca6","method":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:84","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.translate.UnicodeEscaper outsideOf(final int codepointLow, final int codepointHigh) {\n    if (codepointHigh < 2) {\n        {\n            if (codepointHigh < 0) {\n                {\n                    return new org.apache.commons.lang3.text.translate.UnicodeEscaper(codepointLow , codepointHigh , false);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"found":"codepointHigh"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:61","type":"CtBinaryOperatorImpl","sourcecode":"(ex == null) || ((ex.getCause()) == null)"},"failures":[],"tindex":"a180e84f-2ea5-11e6-b451-c7966f499610","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:602","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] getStackFrames(final java.lang.Throwable throwable) {\n    if ((throwable == null) || ((ex.getCause()) == null)) {\n        {\n            if (throwable == null) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.String[];\n            } \n            return org.apache.commons.lang3.exception.ExceptionUtils.getStackFrames(org.apache.commons.lang3.exception.ExceptionUtils.getStackTrace(throwable));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ex":"throwable"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:101","type":"CtBinaryOperatorImpl","sourcecode":"len < 2"},"failures":[],"tindex":"a180e850-2ea5-11e6-b451-f732ce06f7a5","method":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:84","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.translate.UnicodeEscaper outsideOf(final int codepointLow, final int codepointHigh) {\n    if (codepointHigh < 2) {\n        {\n            if (codepointHigh < 0) {\n                {\n                    return new org.apache.commons.lang3.text.translate.UnicodeEscaper(codepointLow , codepointHigh , false);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"codepointHigh"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:180","type":"CtBinaryOperatorImpl","sourcecode":"(cal1 == null) || (cal2 == null)"},"failures":[474],"tindex":"a180e851-2ea5-11e6-b451-97d4a6c984cf","method":{"position":"org.apache.commons.lang3.time.DateUtils:238","type":"CtMethodImpl","sourcecode":"public static boolean isSameLocalTime(final java.util.Calendar cal1, final java.util.Calendar cal2) {\n    if ((cal2 == null) || (cal1 == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((cal1 == null) || (cal2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            return ((((((((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.getClass()) == (cal2.getClass()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cal2":"cal1","cal1":"cal2"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}