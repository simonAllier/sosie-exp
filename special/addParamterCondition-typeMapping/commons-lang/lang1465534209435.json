{"failureDictionary":{"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":101,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllByteArrayRemoveNone":236,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringString":36,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSplit":7,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLANG815":10,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllCharArrayOutOfBoundsIndex":256,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":102,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":134,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":60,"org.apache.commons.lang3.time.FastDatePrinterTest.testMilleniumBug":129,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":142,"org.apache.commons.lang3.CharSetTest.testHashCode":282,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllDoubleArray":264,"org.apache.commons.lang3.time.DateUtilsTest.testAddDays":200,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testSimpleDate":120,"org.apache.commons.lang3.time.DateUtilsTest.testAddSeconds":201,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":59,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddDash":274,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":149,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_AD":297,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":197,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllCharArrayRemoveNone":243,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang708":1,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":110,"org.apache.commons.lang3.time.DateUtilsTest.testAddMonths":205,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":146,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":40,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":99,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":198,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllLongArrayRemoveNone":244,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVEmpty":72,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowables_Throwable_withoutCause":220,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringStringarray":35,"org.apache.commons.lang3.mutable.MutableLongTest.testSetNull":173,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":158,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllFloatArrayRemoveNone":252,"org.apache.commons.lang3.ConversionTest.testHexToByte":161,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllObjectArrayOutOfBoundsIndex":240,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfIntWithStartIndex":169,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationISO":17,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":66,"org.apache.commons.lang3.ValidateTest.testIsAssignable":190,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllObjectArrayRemoveNone":263,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_double":272,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":70,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeEcmaScript":2,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":62,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondFragmentInLargerUnitWithCalendar":177,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":150,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang303":131,"org.apache.commons.lang3.exception.ExceptionUtilsTest.test_getRootCauseMessage_Throwable":208,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableStream":215,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":191,"org.apache.commons.lang3.mutable.MutableLongTest.testAddValuePrimitive":187,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllFloatArrayOutOfBoundsIndex":250,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":195,"org.apache.commons.lang3.CharSetTest.testEquals_Object":277,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllLongArrayOutOfBoundsIndex":238,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringStringarray":32,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringString":29,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":58,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":41,"org.apache.commons.lang3.time.FastDatePrinterTest.testSimpleDate":127,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_AD":291,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOf_char":46,"org.apache.commons.lang3.math.NumberUtilsTest.testToByteString":228,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":194,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":136,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinuteFragmentInLargerUnitWithCalendar":175,"org.apache.commons.lang3.StringUtilsSubstringTest.testRight_String":42,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISOMethod":19,"org.apache.commons.lang3.builder.CompareToBuilderTest.testFloatArray":26,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":147,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairsLang858":0,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowables_Throwable_withCause":212,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":126,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOf_ThrowableClass":214,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":152,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstringBetween_StringString":188,"org.apache.commons.lang3.mutable.MutableLongTest.testSubtractValueObject":43,"org.apache.commons.lang3.AnnotationUtilsTest.testNonEquivalentAnnotationsOfSameType":96,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableCount_Throwable":219,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":296,"org.apache.commons.lang3.ConversionTest.testHexDigitToInt":164,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmpty":88,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfYearWithCalendar":182,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfMonthWithCalendar":176,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllByteArray":255,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":143,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":77,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":106,"org.apache.commons.lang3.time.DateUtilsTest.testAddWeeks":203,"org.apache.commons.lang3.ConversionTest.testHexToShort":165,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfHourWithCalendar":174,"org.apache.commons.lang3.CharSetTest.testConstructor_String_simple":276,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":78,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":61,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":79,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":80,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfDayWithCalendar":180,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":287,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":81,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":157,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLANG984":13,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLANG981":11,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLANG982":12,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":156,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":111,"org.apache.commons.lang3.AnnotationUtilsTest.testEquivalence":94,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":207,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowables_Throwable_recursiveCause":222,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetRootCauseStackTrace_Throwable":218,"org.apache.commons.lang3.BitFieldTest.testIsAllSet":39,"org.apache.commons.lang3.time.FastDatePrinterTest.testShortDateStyleWithLocales":128,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableList_Throwable_jdkNoCause":210,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":115,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":137,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":74,"org.apache.commons.lang3.ValidateTest.testIsAssignableExceptionMessage":189,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationWords":24,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":75,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":153,"org.apache.commons.lang3.time.FastDateParserTest.testDayOf":288,"org.apache.commons.lang3.time.FastDatePrinterTest.testFormat":133,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOf_charInt":45,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringString":31,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":104,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":118,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":145,"org.apache.commons.lang3.CharSetTest.testContains_Char":278,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testNullCalendar":179,"org.apache.commons.lang3.ValidateTest.testMatchesPattern":185,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllBooleanArray":234,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":159,"org.apache.commons.lang3.builder.DiffBuilderTest.testStylePassedToDiffResult":108,"org.apache.commons.lang3.reflect.FieldUtilsTest.testRemoveFinalModifier":271,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondFragmentInLargerUnitWithCalendar":181,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowables_Throwable_jdkNoCause":225,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllByteArrayNegativeIndex":260,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringString":34,"org.apache.commons.lang3.time.FastDatePrinterTest.testLowYearPadding":130,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testBugzilla38401":22,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":140,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":151,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringStringarray":33,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":49,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayToObjectArray":166,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllDoubleArrayOutOfBoundsIndex":242,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":105,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetCause_Throwable":213,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationPluralWords":21,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableWriter":217,"org.apache.commons.lang3.time.DateUtilsTest.testSetHours":232,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testTrimToNull":273,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":98,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testDurationsByBruteForce":8,"org.apache.commons.lang3.ArrayUtilsTest.testReverseDouble":119,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllCharArrayNegativeIndex":258,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":290,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":100,"org.apache.commons.lang3.BooleanUtilsTest.test_toInteger_boolean":92,"org.apache.commons.lang3.ClassUtilsTest.testGetPublicMethod":172,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang303":124,"org.apache.commons.lang3.StringUtilsTest.testIsNotEmpty":27,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":116,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllDoubleArrayNegativeIndex":269,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllShortArrayOutOfBoundsIndex":246,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testJiraLang281":25,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllNumberArray":248,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":113,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllLongArrayNegativeIndex":257,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllBooleanArrayRemoveNone":265,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllBooleanArrayNegativeIndex":262,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOfType_ThrowableClassInt":223,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementFloatArray":86,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfYearWithWrongOffsetBugWithCalendar":178,"org.apache.commons.lang3.ConversionTest.testHexToInt":163,"org.apache.commons.lang3.ValidateTest.testValidIndex_array":230,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneNull":69,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":293,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":56,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriod":9,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":125,"org.apache.commons.lang3.time.DateUtilsTest.testAddYears":204,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":112,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":155,"org.apache.commons.lang3.ClassUtilsTest.test_getAllSuperclasses_Class":171,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllDoubleArrayRemoveNone":241,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":50,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstring_StringInt":168,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":83,"org.apache.commons.lang3.reflect.InheritanceUtilsTest.testDistanceGreaterThanZero":93,"org.apache.commons.lang3.CharSetTest.testGetInstance_Stringarray":283,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDuration":23,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":84,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":135,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":109,"org.apache.commons.lang3.ValidateTest.testValidIndex_withMessage_array":231,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOf_ThrowableClassInt":221,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testAbove":48,"org.apache.commons.lang3.CharSetTest.testSerialization":275,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":139,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableList_Throwable_nested":211,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfInt":170,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":53,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllLongArray":270,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":54,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddNegate":284,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":229,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOf":167,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableList_Throwable_recursiveCause":224,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllIntArrayRemoveNone":237,"org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayOfInts":160,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":193,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_AD":289,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":57,"org.apache.commons.lang3.CharSetTest.testStatics":286,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllIntArray":259,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":82,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllObjectArray":267,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLexx":15,"org.apache.commons.lang3.text.StrTokenizerTest.testTSVEmpty":67,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":107,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllCharArray":249,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddCombinations":280,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit_2args":4,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":154,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllFloatArray":266,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_AD":295,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":144,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllShortArrayNegativeIndex":239,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":68,"org.apache.commons.lang3.CharSetTest.testGetInstance":285,"org.apache.commons.lang3.AnnotationUtilsTest.testIsValidAnnotationMemberType":97,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":114,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":138,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableList_Throwable_withoutCause":216,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLowDurations":14,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":51,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":52,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testIsNotEmpty":28,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetAccessibleConstructorFromDescription":89,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":196,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testEdgeDurations":20,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetAccessibleConstructor":91,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang538":132,"org.apache.commons.lang3.ConversionTest.testIntToByteArray":186,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":47,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testMilleniumBug":122,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetContextValues":5,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllShortArray":251,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllBooleanArrayOutOfBoundsIndex":253,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllIntArrayNegativeIndex":268,"org.apache.commons.lang3.AnnotationUtilsTest.testGeneratedAnnotationEquivalentToRealAnnotation":95,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOfType_ThrowableClass":44,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":117,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testInvalidFragmentWithCalendar":183,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllFloatArrayNegativeIndex":235,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":103,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringStringarray":38,"org.apache.commons.lang3.time.DateUtilsTest.testAddMilliseconds":206,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllShortArrayRemoveNone":247,"org.apache.commons.lang3.CharSetTest.testConstructor_String_combo":279,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":63,"org.apache.commons.lang3.ConversionTest.testHexToLong":162,"org.apache.commons.lang3.time.DateUtilsTest.testAddMinutes":199,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":55,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":65,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":64,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllByteArrayOutOfBoundsIndex":254,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationHMS":16,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeExactConstructor":90,"org.apache.commons.lang3.time.FastDateParserTest.testParses":292,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":76,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":148,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetRootCause_Throwable":227,"org.apache.commons.lang3.HashSetvBitSetTest.testTimesExtractOrBitset":233,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":192,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":87,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllIntArrayOutOfBoundsIndex":261,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParses":298,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLowYearPadding":123,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit":3,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":71,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringString":30,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringStringarray":37,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":73,"org.apache.commons.lang3.CharSetTest.testConstructor_String_comboNegated":281,"org.apache.commons.lang3.time.DateUtilsTest.testAddHours":202,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllObjectArrayNegativeIndex":245,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOf_StringInt":85,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":141,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSimpleGet":6,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStrip_String":184,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowables_Throwable_nested":209,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableList_Throwable_withCause":226,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testDayOf":294,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":121,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":18},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:138","type":"CtBinaryOperatorImpl","sourcecode":"lhs != rhs"},"failures":[],"tindex":"cf1ee7b7-2ec6-11e6-8000-734678d2003e","method":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:126","type":"CtMethodImpl","sourcecode":"public static java.lang.String formatDuration(final long durationMillis, final java.lang.String format, final boolean padWithZeros) {\n    if (padWithZeros != padWithZeros) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.lang3.time.DurationFormatUtils.Token[] org.apache.commons.lang3.time.DurationFormatUtils.Token[] = org.apache.commons.lang3.time.DurationFormatUtils.lexx(format);\n            long long = 0;\n            long long = 0;\n            long long = 0;\n            long long = 0;\n            long long = durationMillis;\n            if (org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(tokens, org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n                days = milliseconds / (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.long);\n                milliseconds = milliseconds - (days * (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.long));\n            } \n            if (org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(tokens, org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n                hours = milliseconds / (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.long);\n                milliseconds = milliseconds - (hours * (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.long));\n            } \n            if (org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(tokens, org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n                minutes = milliseconds / (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.long);\n                milliseconds = milliseconds - (minutes * (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.long));\n            } \n            if (org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(tokens, org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n                seconds = milliseconds / (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.long);\n                milliseconds = milliseconds - (seconds * (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.long));\n            } \n            return org.apache.commons.lang3.time.DurationFormatUtils.format(tokens, 0, 0, days, hours, minutes, seconds, milliseconds, padWithZeros);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"padWithZeros","rhs":"padWithZeros"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1102","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[0,1,2],"tindex":"cf1fd218-2ec6-11e6-8000-bf2e25ab89e5","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:483","type":"CtMethodImpl","sourcecode":"public static final java.lang.String escapeEcmaScript(final java.lang.String input) {\n    if (input == null) {\n        {\n            return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:945","type":"CtBinaryOperatorImpl","sourcecode":"(value < start) || (value > end)"},"failures":[],"tindex":"cf1ff929-2ec6-11e6-8000-8f95cfdd0bc2","method":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:370","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic T get(final long timeout, final java.util.concurrent.TimeUnit unit) {\n    if ((timeout < timeout) || (value > timeout)) {\n        {\n            return T;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"timeout","end":"timeout","value":"timeout"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3133","type":"CtBinaryOperatorImpl","sourcecode":"match || preserveAllTokens"},"failures":[],"tindex":"cf1ff92a-2ec6-11e6-8000-a12b2f07476d","method":{"position":"org.apache.commons.lang3.ObjectUtils:746","type":"CtMethodImpl","sourcecode":"public static boolean CONST(final boolean v) {\n    if (v || v) {\n        {\n            return v;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"preserveAllTokens":"v","match":"v"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2068","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[3,4],"tindex":"cf20203b-2ec6-11e6-8000-57126cc37e8b","method":{"position":"org.apache.commons.lang3.Conversion:302","type":"CtMethodImpl","sourcecode":"public static char binaryToHexDigit(final boolean[] src, final int srcPos) {\n    if (srcPos < 0) {\n        {\n            if ((src.int) == 0) {\n                throw new java.lang.IllegalArgumentException(\"Cannot convert an empty array.\");\n            } \n            if (((src.int) > (srcPos + 3)) && (src[(srcPos + 3)])) {\n                if (((src.int) > (srcPos + 2)) && (src[(srcPos + 2)])) {\n                    if (((src.int) > (srcPos + 1)) && (src[(srcPos + 1)])) {\n                        if (src[srcPos]) {\n                            return 'f';\n                        } else {\n                            return 'e';\n                        }\n                    } else {\n                        if (src[srcPos]) {\n                            return 'd';\n                        } else {\n                            return 'c';\n                        }\n                    }\n                } else {\n                    if (((src.int) > (srcPos + 1)) && (src[(srcPos + 1)])) {\n                        if (src[srcPos]) {\n                            return 'b';\n                        } else {\n                            return 'a';\n                        }\n                    } else {\n                        if (src[srcPos]) {\n                            return '9';\n                        } else {\n                            return '8';\n                        }\n                    }\n                }\n            } else {\n                if (((src.int) > (srcPos + 2)) && (src[(srcPos + 2)])) {\n                    if (((src.int) > (srcPos + 1)) && (src[(srcPos + 1)])) {\n                        if (src[srcPos]) {\n                            return '7';\n                        } else {\n                            return '6';\n                        }\n                    } else {\n                        if (src[srcPos]) {\n                            return '5';\n                        } else {\n                            return '4';\n                        }\n                    }\n                } else {\n                    if (((src.int) > (srcPos + 1)) && (src[(srcPos + 1)])) {\n                        if (src[srcPos]) {\n                            return '3';\n                        } else {\n                            return '2';\n                        }\n                    } else {\n                        if (src[srcPos]) {\n                            return '1';\n                        } else {\n                            return '0';\n                        }\n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"srcPos"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:735","type":"CtInvocationImpl","sourcecode":"str.equals(falseString)"},"failures":[5],"tindex":"cf20474c-2ec6-11e6-8000-81e219f56004","method":{"position":"org.apache.commons.lang3.exception.ContextedRuntimeException:199","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<java.lang.Object> getContextValues(final java.lang.String label) {\n    if (label.equals(label)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.exception.ContextedRuntimeException.this.org.apache.commons.lang3.exception.ExceptionContext.getContextValues(label);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"label","falseString":"label"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:656","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"tindex":"cf206e5d-2ec6-11e6-8000-57fb325336dc","method":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:480","type":"CtMethodImpl","sourcecode":"static org.apache.commons.lang3.time.DurationFormatUtils.Token[] lexx(final java.lang.String format) {\n    if (format == null) {\n        {\n            final java.util.ArrayList<org.apache.commons.lang3.time.DurationFormatUtils.Token> java.util.ArrayList<org.apache.commons.lang3.time.DurationFormatUtils.Token> = new java.util.ArrayList<org.apache.commons.lang3.time.DurationFormatUtils.Token>(format.length());\n            boolean boolean = false;\n            java.lang.StringBuilder java.lang.StringBuilder = null;\n            org.apache.commons.lang3.time.DurationFormatUtils.Token org.apache.commons.lang3.time.DurationFormatUtils.Token = null;\n            for (int int = 0 ; i < (format.length()) ; i++) {\n                final char char = format.charAt(i);\n                if (inLiteral && (ch != '\\'')) {\n                    buffer.append(ch);\n                    continue;\n                } \n                java.lang.Object java.lang.Object = null;\n                switch (ch) {\n                    case '\\'' :\n                        if (inLiteral) {\n                            buffer = null;\n                            inLiteral = false;\n                        } else {\n                            buffer = new java.lang.StringBuilder();\n                            list.add(new org.apache.commons.lang3.time.DurationFormatUtils.Token(buffer));\n                            inLiteral = true;\n                        }\n                        break;\n                    case 'y' :\n                        value = org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n                        break;\n                    case 'M' :\n                        value = org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n                        break;\n                    case 'd' :\n                        value = org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n                        break;\n                    case 'H' :\n                        value = org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n                        break;\n                    case 'm' :\n                        value = org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n                        break;\n                    case 's' :\n                        value = org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n                        break;\n                    case 'S' :\n                        value = org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n                        break;\n                    default :\n                        if (buffer == null) {\n                            buffer = new java.lang.StringBuilder();\n                            list.add(new org.apache.commons.lang3.time.DurationFormatUtils.Token(buffer));\n                        } \n                        buffer.append(ch);\n                }\n                if (value != null) {\n                    if ((previous != null) && ((previous.getValue()) == value)) {\n                        previous.increment();\n                    } else {\n                        final org.apache.commons.lang3.time.DurationFormatUtils.Token org.apache.commons.lang3.time.DurationFormatUtils.Token = new org.apache.commons.lang3.time.DurationFormatUtils.Token(value);\n                        list.add(token);\n                        previous = token;\n                    }\n                    buffer = null;\n                } \n            }\n            if (inLiteral) {\n                throw new java.lang.IllegalArgumentException((\"Unmatched quote in format: \" + format));\n            } \n            return list.toArray(new org.apache.commons.lang3.time.DurationFormatUtils.Token[list.size()]);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"format"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1336","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[26],"tindex":"cf20bc7e-2ec6-11e6-8000-5df9ce3532c7","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:927","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final float[] lhs, final float[] rhs) {\n    if (lhs == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == null) {\n                int = -1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (rhs == null) {\n                int = +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                int = (lhs.int) < (rhs.int) ? -1 : +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && ((int) == 0) ; i++) {\n                append(lhs[i], rhs[i]);\n            }\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"lhs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3711","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"cf20e38f-2ec6-11e6-8000-11a257636fec","method":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:300","type":"CtMethodImpl","sourcecode":"public static java.lang.String toStringExclude(final java.lang.Object object, final java.util.Collection<java.lang.String> excludeFieldNames) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.builder.ReflectionToStringBuilder.toStringExclude(object, org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(excludeFieldNames));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6502","type":"CtBinaryOperatorImpl","sourcecode":"str1 == null"},"failures":[27,28,29,30,31,32,33,34,35,36,37,38],"tindex":"cf210aa0-2ec6-11e6-8000-7fa979f8e19c","method":{"position":"org.apache.commons.lang3.StringUtils:237","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.lang.CharSequence cs) {\n    if (cs == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return !(org.apache.commons.lang3.StringUtils.isEmpty(cs));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str1":"cs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.EnumUtils:114","type":"CtBinaryOperatorImpl","sourcecode":"enumName == null"},"failures":[],"tindex":"cf210aa1-2ec6-11e6-8000-23c855c0470d","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1134","type":"CtMethodImpl","sourcecode":"protected void appendSummary(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final short[] array) {\n    if (fieldName == null) {\n        {\n            appendSummarySize(buffer, fieldName, array.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumName":"fieldName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:474","type":"CtBinaryOperatorImpl","sourcecode":"gcd == 1"},"failures":[39],"tindex":"cf2131b2-2ec6-11e6-8000-a96b4be04bb0","method":{"position":"org.apache.commons.lang3.BitField:138","type":"CtMethodImpl","sourcecode":"public boolean isAllSet(final int holder) {\n    if (holder == 1) {\n        {\n            return (holder & (int)) == (int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"gcd":"holder"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:180","type":"CtBinaryOperatorImpl","sourcecode":"(cal1 == null) || (cal2 == null)"},"failures":[40,41],"tindex":"cf2131b3-2ec6-11e6-8000-8da447821b65","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1024","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n    if ((calendar == null) || (calendar == null)) {\n        {\n            int int = calendar.get(java.util.Calendar.java.util.Calendar.int);\n            if (value == 0) {\n                value = (calendar.getLeastMaximum(java.util.Calendar.java.util.Calendar.int)) + 1;\n            } \n            org.apache.commons.lang3.time.FastDatePrinter.NumberRule.appendTo(buffer, value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cal2":"calendar","cal1":"calendar"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:527","type":"CtBinaryOperatorImpl","sourcecode":"(comparison) != 0"},"failures":[42],"tindex":"cf2131b4-2ec6-11e6-8000-cbe2dd8dbec7","method":{"position":"org.apache.commons.lang3.StringUtils:2206","type":"CtMethodImpl","sourcecode":"public static java.lang.String right(final java.lang.String str, final int len) {\n    if (len != 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return null;\n            } \n            if (len < 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            if ((str.length()) <= len) {\n                return str;\n            } \n            return str.substring(((str.length()) - len));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparison":"len"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.AnnotationUtils:270","type":"CtInvocationImpl","sourcecode":"type.isArray()"},"failures":[],"tindex":"cf2158c5-2ec6-11e6-8000-3d25d7d54f26","method":{"position":"org.apache.commons.lang3.ClassUtils:369","type":"CtMethodImpl","sourcecode":"private static void getAllInterfaces(java.lang.Class<?> cls, final java.util.HashSet<java.lang.Class<?>> interfacesFound) {\n    if (cls.isArray()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            while (cls != null) {\n                final java.lang.Class<?>[] java.lang.Class<?>[] = cls.getInterfaces();\n                for (final java.lang.Class<?> java.lang.Class<?> : interfaces) {\n                    if (interfacesFound.add(i)) {\n                        org.apache.commons.lang3.ClassUtils.getAllInterfaces(i, interfacesFound);\n                    } \n                }\n                cls = cls.getSuperclass();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"cls"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:61","type":"CtBinaryOperatorImpl","sourcecode":"(ex == null) || ((ex.getCause()) == null)"},"failures":[],"tindex":"cf2158c6-2ec6-11e6-8000-bd99610577aa","method":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:158","type":"CtMethodImpl","sourcecode":"private static void throwCause(final java.util.concurrent.ExecutionException ex) {\n    if ((ex == null) || ((ex.getCause()) == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((ex.getCause()) instanceof java.lang.RuntimeException) {\n                throw ((java.lang.RuntimeException)(ex.getCause()));\n            } \n            if ((ex.getCause()) instanceof java.lang.Error) {\n                throw ((java.lang.Error)(ex.getCause()));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ex":"ex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:197","type":"CtBinaryOperatorImpl","sourcecode":"dateStyle == null"},"failures":[43],"tindex":"cf2158c7-2ec6-11e6-8000-7b92a411e86f","method":{"position":"org.apache.commons.lang3.mutable.MutableLong:169","type":"CtMethodImpl","sourcecode":"public void subtract(final java.lang.Number operand) {\n    if (operand == null) {\n        {\n            org.apache.commons.lang3.mutable.MutableLong.this.long -= operand.longValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dateStyle":"operand"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:353","type":"CtBinaryOperatorImpl","sourcecode":"cls == null"},"failures":[44],"tindex":"cf217fd8-2ec6-11e6-8000-b71fcf30e5f6","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:347","type":"CtMethodImpl","sourcecode":"public static int indexOfType(final java.lang.Throwable throwable, final java.lang.Class<?> type) {\n    if (type == null) {\n        {\n            return org.apache.commons.lang3.exception.ExceptionUtils.indexOf(throwable, type, 0, true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"type"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:795","type":"CtBinaryOperatorImpl","sourcecode":"cs1 == cs2"},"failures":[45,46],"tindex":"cf217fd9-2ec6-11e6-8000-63a548e14e52","method":{"position":"org.apache.commons.lang3.CharSequenceUtils:116","type":"CtMethodImpl","sourcecode":"static int lastIndexOf(final java.lang.CharSequence cs, final int searchChar, int start) {\n    if (cs == cs) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (cs instanceof java.lang.String) {\n                return ((java.lang.String)(cs)).lastIndexOf(searchChar, start);\n            } else {\n                final int int = cs.length();\n                if (start < 0) {\n                    return -1;\n                } \n                if (start >= sz) {\n                    start = sz - 1;\n                } \n                for (int int = start ; i >= 0 ; --i) {\n                    if ((cs.charAt(i)) == searchChar) {\n                        return i;\n                    } \n                }\n                return -1;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs1":"cs","cs2":"cs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5731","type":"CtBinaryOperatorImpl","sourcecode":"found < 0"},"failures":[],"tindex":"cf217fda-2ec6-11e6-8000-31096e90c99d","method":{"position":"org.apache.commons.lang3.CharSequenceUtils:187","type":"CtMethodImpl","sourcecode":"static boolean regionMatches(final java.lang.CharSequence cs, final boolean ignoreCase, final int thisStart, final java.lang.CharSequence substring, final int start, final int length) {\n    if (length < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((cs instanceof java.lang.String) && (substring instanceof java.lang.String)) {\n                return ((java.lang.String)(cs)).regionMatches(ignoreCase, thisStart, ((java.lang.String)(substring)), start, length);\n            } else {\n                int int = thisStart;\n                int int = start;\n                int int = length;\n                while ((tmpLen--) > 0) {\n                    char char = cs.charAt((index1++));\n                    char char = substring.charAt((index2++));\n                    if (c1 == c2) {\n                        continue;\n                    } \n                    if (!ignoreCase) {\n                        return false;\n                    } \n                    if (((java.lang.Character.toUpperCase(c1)) != (java.lang.Character.toUpperCase(c2))) && ((java.lang.Character.toLowerCase(c1)) != (java.lang.Character.toLowerCase(c2)))) {\n                        return false;\n                    } \n                }\n                return true;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"found":"length"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:86","type":"CtBinaryOperatorImpl","sourcecode":"consumed == 0"},"failures":[47,48],"tindex":"cf21a6eb-2ec6-11e6-8000-0b9ca340dfa6","method":{"position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:73","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.translate.NumericEntityEscaper above(final int codepoint) {\n    if (codepoint == 0) {\n        {\n            return org.apache.commons.lang3.text.translate.NumericEntityEscaper.outsideOf(0, codepoint);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"consumed":"codepoint"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1658","type":"CtBinaryOperatorImpl","sourcecode":"((nBools - 1) + srcPos) >= 8"},"failures":[49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84],"tindex":"cf21a6ec-2ec6-11e6-8000-5d589e1360f5","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:635","type":"CtMethodImpl","sourcecode":"protected java.util.List<java.lang.String> tokenize(final char[] srcChars, final int offset, final int count) {\n    if (count < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((count - 1) + offset) >= 8) {\n                {\n                    if ((srcChars == null) || (count == 0)) {\n                        return java.util.Collections.emptyList();\n                    } \n                    final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder();\n                    final java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                    int int = offset;\n                    while ((pos >= 0) && (pos < count)) {\n                        pos = readNextToken(srcChars, pos, count, buf, tokenList);\n                        if (pos >= count) {\n                            addToken(tokenList, \"\");\n                        } \n                    }\n                    return tokenList;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nBools":"count","srcPos":"offset"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1316","type":"CtUnaryOperatorImpl","sourcecode":"!(java.lang.Character.isDigit(str.charAt(i)))"},"failures":[85],"tindex":"cf21cdfd-2ec6-11e6-8000-31990841a370","method":{"position":"org.apache.commons.lang3.StringUtils:1302","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final java.lang.CharSequence seq, final java.lang.CharSequence searchSeq, final int startPos) {\n    if (!(java.lang.Character.isDigit(seq.charAt(startPos)))) {\n        {\n            if ((seq == null) || (searchSeq == null)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            return org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(seq, searchSeq, startPos);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"seq","i":"startPos"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3907","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[86],"tindex":"cf21cdfe-2ec6-11e6-8000-eb6e23536ed1","method":{"position":"org.apache.commons.lang3.ArrayUtils:4966","type":"CtMethodImpl","sourcecode":"public static float[] removeElement(final float[] array, final float element) {\n    if (array == null) {\n        {\n            if (array == null) {\n                {\n                    final int int = org.apache.commons.lang3.ArrayUtils.indexOf(array, element);\n                    if (index == (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int)) {\n                        return org.apache.commons.lang3.ArrayUtils.clone(array);\n                    } \n                    return org.apache.commons.lang3.ArrayUtils.remove(array, index);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1040","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[],"tindex":"cf21f50f-2ec6-11e6-8000-29d3eee55d8e","method":{"position":"org.apache.commons.lang3.StringUtils:5119","type":"CtMethodImpl","sourcecode":"public static java.lang.String repeat(final java.lang.String str, final int repeat) {\n    if (repeat < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return null;\n            } \n            if (repeat <= 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final int int = str.length();\n            if ((repeat == 1) || (inputLength == 0)) {\n                return str;\n            } \n            if ((inputLength == 1) && (repeat <= (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int))) {\n                return org.apache.commons.lang3.StringUtils.repeat(str.charAt(0), repeat);\n            } \n            final int int = inputLength * repeat;\n            switch (inputLength) {\n                case 1 :\n                    return org.apache.commons.lang3.StringUtils.repeat(str.charAt(0), repeat);\n                case 2 :\n                    final char char = str.charAt(0);\n                    final char char = str.charAt(1);\n                    final char[] char[] = new char[outputLength];\n                    for (int int = (repeat * 2) - 2 ; i >= 0 ; i-- , i--) {\n                        output2[i] = ch0;\n                        output2[(i + 1)] = ch1;\n                    }\n                    return new java.lang.String(output2);\n                default :\n                    final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(outputLength);\n                    for (int int = 0 ; i < repeat ; i++) {\n                        buf.append(str);\n                    }\n                    return buf.toString();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"repeat"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3764","type":"CtBinaryOperatorImpl","sourcecode":"noOfItems <= 0"},"failures":[87,88],"tindex":"cf21f510-2ec6-11e6-8000-e922d2164ee9","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:750","type":"CtMethodImpl","sourcecode":"private int substitute(final org.apache.commons.lang3.text.StrBuilder buf, final int offset, final int length, java.util.List<java.lang.String> priorVariables) {\n    if (length <= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.lang3.text.StrMatcher org.apache.commons.lang3.text.StrMatcher = getVariablePrefixMatcher();\n            final org.apache.commons.lang3.text.StrMatcher org.apache.commons.lang3.text.StrMatcher = getVariableSuffixMatcher();\n            final char char = getEscapeChar();\n            final org.apache.commons.lang3.text.StrMatcher org.apache.commons.lang3.text.StrMatcher = getValueDelimiterMatcher();\n            final boolean boolean = isEnableSubstitutionInVariables();\n            final boolean boolean = priorVariables == null;\n            boolean boolean = false;\n            int int = 0;\n            char[] char[] = buf.char[];\n            int int = offset + length;\n            int int = offset;\n            while (pos < bufEnd) {\n                final int int = pfxMatcher.isMatch(chars, pos, offset, bufEnd);\n                if (startMatchLen == 0) {\n                    pos++;\n                } else {\n                    if ((pos > offset) && ((chars[(pos - 1)]) == escape)) {\n                        buf.deleteCharAt((pos - 1));\n                        chars = buf.char[];\n                        lengthChange--;\n                        altered = true;\n                        bufEnd--;\n                    } else {\n                        final int int = pos;\n                        pos += startMatchLen;\n                        int int = 0;\n                        int int = 0;\n                        while (pos < bufEnd) {\n                            if (substitutionInVariablesEnabled && ((endMatchLen = pfxMatcher.isMatch(chars, pos, offset, bufEnd)) != 0)) {\n                                nestedVarCount++;\n                                pos += endMatchLen;\n                                continue;\n                            } \n                            endMatchLen = suffMatcher.isMatch(chars, pos, offset, bufEnd);\n                            if (endMatchLen == 0) {\n                                pos++;\n                            } else {\n                                if (nestedVarCount == 0) {\n                                    java.lang.String java.lang.String = new java.lang.String(chars , (startPos + startMatchLen) , ((pos - startPos) - startMatchLen));\n                                    if (substitutionInVariablesEnabled) {\n                                        final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(varNameExpr);\n                                        substitute(bufName, 0, bufName.length());\n                                        varNameExpr = bufName.toString();\n                                    } \n                                    pos += endMatchLen;\n                                    final int int = pos;\n                                    java.lang.String java.lang.String = varNameExpr;\n                                    java.lang.String java.lang.String = null;\n                                    if (valueDelimMatcher != null) {\n                                        final char[] char[] = varNameExpr.toCharArray();\n                                        int int = 0;\n                                        for (int int = 0 ; i < (varNameExprChars.int) ; i++) {\n                                            if ((!substitutionInVariablesEnabled) && ((pfxMatcher.isMatch(varNameExprChars, i, i, varNameExprChars.int)) != 0)) {\n                                                break;\n                                            } \n                                            if ((valueDelimiterMatchLen = valueDelimMatcher.isMatch(varNameExprChars, i)) != 0) {\n                                                varName = varNameExpr.substring(0, i);\n                                                varDefaultValue = varNameExpr.substring((i + valueDelimiterMatchLen));\n                                                break;\n                                            } \n                                        }\n                                    } \n                                    if (priorVariables == null) {\n                                        priorVariables = new java.util.ArrayList<java.lang.String>();\n                                        priorVariables.add(new java.lang.String(chars , offset , length));\n                                    } \n                                    checkCyclicSubstitution(varName, priorVariables);\n                                    priorVariables.add(varName);\n                                    java.lang.String java.lang.String = resolveVariable(varName, buf, startPos, endPos);\n                                    if (varValue == null) {\n                                        varValue = varDefaultValue;\n                                    } \n                                    if (varValue != null) {\n                                        final int int = varValue.length();\n                                        buf.replace(startPos, endPos, varValue);\n                                        altered = true;\n                                        int int = substitute(buf, startPos, varLen, priorVariables);\n                                        change = (change + varLen) - (endPos - startPos);\n                                        pos += change;\n                                        bufEnd += change;\n                                        lengthChange += change;\n                                        chars = buf.char[];\n                                    } \n                                    priorVariables.remove(((priorVariables.size()) - 1));\n                                    break;\n                                } else {\n                                    nestedVarCount--;\n                                    pos += endMatchLen;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (top) {\n                return altered ? 1 : 0;\n            } \n            return lengthChange;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"noOfItems":"length"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:728","type":"CtBinaryOperatorImpl","sourcecode":"classes == null"},"failures":[89,90,91],"tindex":"cf224231-2ec6-11e6-8000-5d62177a1e7e","method":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:196","type":"CtMethodImpl","sourcecode":"public static <T>java.lang.reflect.Constructor<T> getAccessibleConstructor(final java.lang.Class<T> cls, final java.lang.Class<?>... parameterTypes) {\n    if (parameterTypes == null) {\n        {\n            org.apache.commons.lang3.Validate.notNull(cls, \"class cannot be null\");\n            try {\n                return org.apache.commons.lang3.reflect.ConstructorUtils.getAccessibleConstructor(cls.getConstructor(parameterTypes));\n            } catch (final java.lang.NoSuchMethodException e) {\n                return null;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classes":"parameterTypes"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:671","type":"CtInvocationImpl","sourcecode":"str.equals(nullString)"},"failures":[],"tindex":"cf224232-2ec6-11e6-8000-136520b248ea","method":{"position":"org.apache.commons.lang3.time.DateFormatUtils:153","type":"CtMethodImpl","sourcecode":"public static java.lang.String formatUTC(final long millis, final java.lang.String pattern, final java.util.Locale locale) {\n    if (pattern.equals(pattern)) {\n        {\n            return org.apache.commons.lang3.time.DateFormatUtils.format(new java.util.Date(millis), pattern, org.apache.commons.lang3.time.DateFormatUtils.org.apache.commons.lang3.time.DateFormatUtils.java.util.TimeZone, locale);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"pattern","nullString":"pattern"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:395","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.builder.ToStringStyle.this.fieldSeparatorAtEnd) == false"},"failures":[92,93],"tindex":"cf224233-2ec6-11e6-8000-df06a7bfa1e4","method":{"position":"org.apache.commons.lang3.BooleanUtils:392","type":"CtMethodImpl","sourcecode":"public static int toInteger(final boolean bool) {\n    if (bool == false) {\n        {\n            return bool ? 1 : 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldSeparatorAtEnd":"bool"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1080","type":"CtUnaryOperatorImpl","sourcecode":"!offsetSet"},"failures":[],"tindex":"cf226944-2ec6-11e6-8000-873af66e8832","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:156","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setDefaultFullDetail(final boolean defaultFullDetail) {\n    if (!defaultFullDetail) {\n        {\n            super.setDefaultFullDetail(defaultFullDetail);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"offsetSet":"defaultFullDetail"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:1072","type":"CtBinaryOperatorImpl","sourcecode":"cls == null"},"failures":[94,95,96,97],"tindex":"cf226945-2ec6-11e6-8000-7d64f99431e0","method":{"position":"org.apache.commons.lang3.AnnotationUtils:223","type":"CtMethodImpl","sourcecode":"public static boolean isValidAnnotationMemberType(java.lang.Class<?> type) {\n    if (type == null) {\n        {\n            if (type == null) {\n                return false;\n            } \n            if (type.isArray()) {\n                type = type.getComponentType();\n            } \n            return ((((type.isPrimitive()) || (type.isEnum())) || (type.isAnnotation())) || (java.lang.String.java.lang.String.java.lang.Class.equals(type))) || (java.lang.Class.java.lang.Class.java.lang.Class.equals(type));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"type"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2018","type":"CtBinaryOperatorImpl","sourcecode":"(str == null) || (searchStrs == null)"},"failures":[],"tindex":"cf226946-2ec6-11e6-8000-bde0e3e93f2c","method":{"position":"org.apache.commons.lang3.Validate:1199","type":"CtMethodImpl","sourcecode":"public static void isInstanceOf(final java.lang.Class<?> type, final java.lang.Object obj, final java.lang.String message, final java.lang.Object... values) {\n    if ((obj == null) || (obj == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((type.isInstance(obj)) == false) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message, values));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"obj","searchStrs":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:306","type":"CtBinaryOperatorImpl","sourcecode":"((className.charAt(0)) == 'L') && ((className.charAt(((className.length()) - 1))) == ';')"},"failures":[],"tindex":"cf229057-2ec6-11e6-8000-8578d85f8025","method":{"position":"org.apache.commons.lang3.CharUtils:172","type":"CtMethodImpl","sourcecode":"public static char toChar(final java.lang.String str) {\n    if (((str.charAt(0)) == 'L') && ((className.charAt(((className.length()) - 1))) == ';')) {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n                throw new java.lang.IllegalArgumentException(\"The String must not be empty\");\n            } \n            return str.charAt(0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"className":"str"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2207","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118],"tindex":"cf229058-2ec6-11e6-8000-0fe1a6107633","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:212","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final byte lhs, final byte rhs) {\n    if (fieldName == null) {\n        {\n            if (fieldName == null) {\n                throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n            } \n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if (lhs != rhs) {\n                java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Byte>(fieldName) {\n                    private static final long serialVersionUID = 1L;\n\n                    @java.lang.Override\n                    public java.lang.Byte getLeft() {\n                        return java.lang.Byte.valueOf(lhs);\n                    }\n\n                    @java.lang.Override\n                    public java.lang.Byte getRight() {\n                        return java.lang.Byte.valueOf(rhs);\n                    }\n                });\n            } \n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3528","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[119],"tindex":"cf22b769-2ec6-11e6-8000-95bac6d79118","method":{"position":"org.apache.commons.lang3.ArrayUtils:1519","type":"CtMethodImpl","sourcecode":"public static void reverse(final double[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return ;\n            } \n            org.apache.commons.lang3.ArrayUtils.reverse(array, 0, array.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDateParser:463","type":"CtBinaryOperatorImpl","sourcecode":"(formatField.length()) > 2"},"failures":[98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118],"tindex":"cf22b76a-2ec6-11e6-8000-bf5882d097e3","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:715","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final short lhs, final short rhs) {\n    if ((fieldName.length()) > 2) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (fieldName == null) {\n                throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n            } \n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if (lhs != rhs) {\n                java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Short>(fieldName) {\n                    private static final long serialVersionUID = 1L;\n\n                    @java.lang.Override\n                    public java.lang.Short getLeft() {\n                        return java.lang.Short.valueOf(lhs);\n                    }\n\n                    @java.lang.Override\n                    public java.lang.Short getRight() {\n                        return java.lang.Short.valueOf(rhs);\n                    }\n                });\n            } \n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"formatField":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:682","type":"CtUnaryOperatorImpl","sourcecode":"!(java.util.Arrays.equals(lhs, rhs))"},"failures":[],"tindex":"cf22de7b-2ec6-11e6-8000-0d7f77f8076e","method":{"position":"org.apache.commons.lang3.math.NumberUtils:788","type":"CtMethodImpl","sourcecode":"public static long min(final long[] array) {\n    if (!(java.util.Arrays.equals(array, array))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.math.NumberUtils.validateArray(array);\n            long long = array[0];\n            for (int int = 1 ; i < (array.int) ; i++) {\n                if ((array[i]) < min) {\n                    min = array[i];\n                } \n            }\n            return min;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array","rhs":"array"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:239","type":"CtBinaryOperatorImpl","sourcecode":"(cal1 == null) || (cal2 == null)"},"failures":[120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,18],"tindex":"cf22de7c-2ec6-11e6-8000-a3de5fbf7b64","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:982","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n    if ((calendar == null) || (calendar == null)) {\n        {\n            appendTo(buffer, ((calendar.get(java.util.Calendar.java.util.Calendar.int)) + 1));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cal2":"calendar","cal1":"calendar"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:547","type":"CtBinaryOperatorImpl","sourcecode":"power == 1"},"failures":[160],"tindex":"cf23058d-2ec6-11e6-8000-cf49717b6f3c","method":{"position":"org.apache.commons.lang3.StringUtils:3661","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final int[] array, final char separator, final int startIndex, final int endIndex) {\n    if (startIndex == 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            final int int = endIndex - startIndex;\n            if (noOfItems <= 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder((noOfItems * 16));\n            for (int int = startIndex ; i < endIndex ; i++) {\n                if (i > startIndex) {\n                    buf.append(separator);\n                } \n                buf.append(array[i]);\n            }\n            return buf.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"power":"startIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:464","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isTitleCase(ch)"},"failures":[161,162,163,164,165],"tindex":"cf23058e-2ec6-11e6-8000-3bd8054c5b5b","method":{"position":"org.apache.commons.lang3.Conversion:80","type":"CtMethodImpl","sourcecode":"public static int hexDigitToInt(final char hexDigit) {\n    if (java.lang.Character.isTitleCase(hexDigit)) {\n        {\n            final int int = java.lang.Character.digit(hexDigit, 16);\n            if (digit < 0) {\n                throw new java.lang.IllegalArgumentException(((\"Cannot interpret '\" + hexDigit) + \"' as a hexadecimal digit\"));\n            } \n            return digit;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"hexDigit"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3760","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[166],"tindex":"cf232c9f-2ec6-11e6-8000-232adb0708ac","method":{"position":"org.apache.commons.lang3.ArrayUtils:3849","type":"CtMethodImpl","sourcecode":"public static short[] addAll(final short[] array1, final short... array2) {\n    if (array1 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array1 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array2);\n            } else if (array2 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array1);\n            } \n            final short[] short[] = new short[(array1.int) + (array2.int)];\n            java.lang.System.arraycopy(array1, 0, joinedArray, 0, array1.int);\n            java.lang.System.arraycopy(array2, 0, joinedArray, array1.int, array2.int);\n            return joinedArray;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6071","type":"CtBinaryOperatorImpl","sourcecode":"cs == null"},"failures":[167],"tindex":"cf232ca0-2ec6-11e6-8000-39172acc1656","method":{"position":"org.apache.commons.lang3.ArrayUtils:1935","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final java.lang.Object[] array, final java.lang.Object objectToFind) {\n    if (objectToFind == null) {\n        {\n            return org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, objectToFind, java.lang.Integer.java.lang.Integer.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"objectToFind"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:622","type":"CtBinaryOperatorImpl","sourcecode":"stripChars == null"},"failures":[168],"tindex":"cf232ca1-2ec6-11e6-8000-4f33206fe5c7","method":{"position":"org.apache.commons.lang3.StringUtils:2063","type":"CtMethodImpl","sourcecode":"public static java.lang.String substring(final java.lang.String str, int start) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return null;\n            } \n            if (start < 0) {\n                start = (str.length()) + start;\n            } \n            if (start < 0) {\n                start = 0;\n            } \n            if (start > (str.length())) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            return str.substring(start);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"stripChars":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2234","type":"CtBinaryOperatorImpl","sourcecode":"(size) <= (index + length)"},"failures":[169,170],"tindex":"cf2353b2-2ec6-11e6-8000-6b2e42695768","method":{"position":"org.apache.commons.lang3.ArrayUtils:2167","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final int[] array, final int valueToFind, int startIndex) {\n    if (valueToFind <= (startIndex + startIndex)) {\n        {\n            if (array == null) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } else if (startIndex >= (array.int)) {\n                startIndex = (array.int) - 1;\n            } \n            for (int int = startIndex ; i >= 0 ; i--) {\n                if (valueToFind == (array[i])) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"valueToFind","length":"startIndex","index":"startIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:634","type":"CtBinaryOperatorImpl","sourcecode":"(cls.isPrimitive()) && (!(toClass.isPrimitive()))"},"failures":[171,172],"tindex":"cf2353b3-2ec6-11e6-8000-173c76de82d9","method":{"position":"org.apache.commons.lang3.ClassUtils:326","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.lang.Class<?>> getAllSuperclasses(final java.lang.Class<?> cls) {\n    if ((cls.isPrimitive()) && (!(cls.isPrimitive()))) {\n        {\n            if (cls == null) {\n                return null;\n            } \n            final java.util.List<java.lang.Class<?>> java.util.List<java.lang.Class<?>> = new java.util.ArrayList<java.lang.Class<?>>();\n            java.lang.Class<?> java.lang.Class<?> = cls.getSuperclass();\n            while (superclass != null) {\n                classes.add(superclass);\n                superclass = superclass.getSuperclass();\n            }\n            return classes;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toClass":"cls","cls":"cls"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5452","type":"CtBinaryOperatorImpl","sourcecode":"count == null"},"failures":[173],"tindex":"cf2353b4-2ec6-11e6-8000-b317f99ec59e","method":{"position":"org.apache.commons.lang3.mutable.MutableLong:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setValue(final java.lang.Number value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.mutable.MutableLong.this.long = value.longValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1208","type":"CtBinaryOperatorImpl","sourcecode":"c > a"},"failures":[],"tindex":"cf237ac5-2ec6-11e6-8000-d12c22899781","method":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:415","type":"CtMethodImpl","sourcecode":"static java.lang.String format(final org.apache.commons.lang3.time.DurationFormatUtils.Token[] tokens, final long years, final long months, final long days, final long hours, final long minutes, final long seconds, long milliseconds, final boolean padWithZeros) {\n    if (days > days) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            boolean boolean = false;\n            final int int = tokens.int;\n            for (int int = 0 ; i < sz ; i++) {\n                final org.apache.commons.lang3.time.DurationFormatUtils.Token org.apache.commons.lang3.time.DurationFormatUtils.Token = tokens[i];\n                final java.lang.Object java.lang.Object = token.getValue();\n                final int int = token.getCount();\n                if (value instanceof java.lang.StringBuilder) {\n                    buffer.append(value.toString());\n                } else {\n                    if (value == (org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n                        buffer.append(org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(years, padWithZeros, count));\n                        lastOutputSeconds = false;\n                    } else if (value == (org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n                        buffer.append(org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(months, padWithZeros, count));\n                        lastOutputSeconds = false;\n                    } else if (value == (org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n                        buffer.append(org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(days, padWithZeros, count));\n                        lastOutputSeconds = false;\n                    } else if (value == (org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n                        buffer.append(org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(hours, padWithZeros, count));\n                        lastOutputSeconds = false;\n                    } else if (value == (org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n                        buffer.append(org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(minutes, padWithZeros, count));\n                        lastOutputSeconds = false;\n                    } else if (value == (org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n                        buffer.append(org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(seconds, padWithZeros, count));\n                        lastOutputSeconds = true;\n                    } else if (value == (org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n                        if (lastOutputSeconds) {\n                            int int = padWithZeros ? java.lang.Math.max(3, count) : 3;\n                            buffer.append(org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(milliseconds, true, width));\n                        } else {\n                            buffer.append(org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(milliseconds, padWithZeros, count));\n                        }\n                        lastOutputSeconds = false;\n                    } \n                }\n            }\n            return buffer.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"days","c":"days"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5198","type":"CtBinaryOperatorImpl","sourcecode":"index < (length - 1)"},"failures":[174,175,176,177,178,179,180,181,182,183],"tindex":"cf23a1d6-2ec6-11e6-8000-9fc96f171799","method":{"position":"org.apache.commons.lang3.time.DateUtils:1554","type":"CtMethodImpl","sourcecode":"public static long getFragmentInMinutes(final java.util.Calendar calendar, final int fragment) {\n    if (fragment < (fragment - 1)) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"fragment","index":"fragment"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:297","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[184],"tindex":"cf23a1d7-2ec6-11e6-8000-2fe889a48094","method":{"position":"org.apache.commons.lang3.StringUtils:497","type":"CtMethodImpl","sourcecode":"public static java.lang.String strip(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.strip(str, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3916","type":"CtBinaryOperatorImpl","sourcecode":"i > startIndex"},"failures":[],"tindex":"cf23a1d8-2ec6-11e6-8000-f9c5b4951a7e","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:288","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.time.FastDateFormat getTimeInstance(final int style, final java.util.TimeZone timeZone, final java.util.Locale locale) {\n    if (style > style) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getTimeInstance(style, timeZone, locale);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"style","i":"style"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:7364","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"cf23c8e9-2ec6-11e6-8000-0fca61a190e4","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:755","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final int value) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, value);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:195","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[185],"tindex":"cf23c8ea-2ec6-11e6-8000-ffdc949b4682","method":{"position":"org.apache.commons.lang3.Validate:848","type":"CtMethodImpl","sourcecode":"public static void matchesPattern(final java.lang.CharSequence input, final java.lang.String pattern) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(input)) {\n        {\n            if ((java.util.regex.Pattern.matches(pattern, input)) == false) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.java.lang.String, input, pattern));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:936","type":"CtBinaryOperatorImpl","sourcecode":"(numerator) == ((-1) * (denominator))"},"failures":[186],"tindex":"cf23c8eb-2ec6-11e6-8000-65f3a06880b0","method":{"position":"org.apache.commons.lang3.Conversion:1323","type":"CtMethodImpl","sourcecode":"public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n    if (dstPos == ((-1) * nBytes)) {\n        {\n            if (0 == nBytes) {\n                return dst;\n            } \n            if ((((nBytes - 1) * 8) + srcPos) >= 32) {\n                throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n            } \n            int int = 0;\n            for (int int = 0 ; i < nBytes ; i++) {\n                shift = (i * 8) + srcPos;\n                dst[(dstPos + i)] = ((byte)(255 & (src >> shift)));\n            }\n            return dst;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"numerator":"dstPos","denominator":"nBytes"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSequenceUtils:209","type":"CtBinaryOperatorImpl","sourcecode":"((java.lang.Character.toUpperCase(c1)) != (java.lang.Character.toUpperCase(c2))) && ((java.lang.Character.toLowerCase(c1)) != (java.lang.Character.toLowerCase(c2)))"},"failures":[],"tindex":"cf23effc-2ec6-11e6-8000-51bec2654f7e","method":{"position":"org.apache.commons.lang3.ArrayUtils:4836","type":"CtMethodImpl","sourcecode":"public static char[] removeElement(final char[] array, final char element) {\n    if (((java.lang.Character.toUpperCase(element)) != (java.lang.Character.toUpperCase(element))) && ((java.lang.Character.toLowerCase(c1)) != (java.lang.Character.toLowerCase(c2)))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = org.apache.commons.lang3.ArrayUtils.indexOf(array, element);\n            if (index == (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int)) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            return org.apache.commons.lang3.ArrayUtils.remove(array, index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c1":"element","c2":"element"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:137","type":"CtBinaryOperatorImpl","sourcecode":"(((org.apache.commons.lang3.StringUtils.isAllLowerCase(split[0])) && (((split[0].length()) == 2) || ((split[0].length()) == 3))) && ((split[1].length()) == 2)) && (org.apache.commons.lang3.StringUtils.isAllUpperCase(split[1]))"},"failures":[],"tindex":"cf23effd-2ec6-11e6-8000-3393b3b21c6d","method":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:80","type":"CtMethodImpl","sourcecode":"public static <T>T invokeConstructor(final java.lang.Class<T> cls, java.lang.Object... args) throws java.lang.IllegalAccessException, java.lang.InstantiationException, java.lang.NoSuchMethodException, java.lang.reflect.InvocationTargetException {\n    if ((((org.apache.commons.lang3.StringUtils.isAllLowerCase(args[0])) && (((split[0].length()) == 2) || ((split[0].length()) == 3))) && ((split[1].length()) == 2)) && (org.apache.commons.lang3.StringUtils.isAllUpperCase(split[1]))) {\n        {\n            args = org.apache.commons.lang3.ArrayUtils.nullToEmpty(args);\n            final java.lang.Class<?>[] java.lang.Class<?>[] = org.apache.commons.lang3.ClassUtils.toClass(args);\n            return org.apache.commons.lang3.reflect.ConstructorUtils.invokeConstructor(cls, args, parameterTypes);\n        }\n    } else {\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"split":"args"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1909","type":"CtBinaryOperatorImpl","sourcecode":"objectToFind == null"},"failures":[],"tindex":"cf24170e-2ec6-11e6-8000-59513b047fe1","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:199","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (obj == (org.apache.commons.lang3.reflect.TypeUtils.ParameterizedTypeImpl.this)) || ((obj instanceof java.lang.reflect.ParameterizedType) && (org.apache.commons.lang3.reflect.TypeUtils.equals(org.apache.commons.lang3.reflect.TypeUtils.ParameterizedTypeImpl.this, ((java.lang.reflect.ParameterizedType)(obj)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectToFind":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:640","type":"CtBinaryOperatorImpl","sourcecode":"lhs != rhs"},"failures":[187],"tindex":"cf24170f-2ec6-11e6-8000-83d583a5758b","method":{"position":"org.apache.commons.lang3.mutable.MutableLong:137","type":"CtMethodImpl","sourcecode":"public void add(final long operand) {\n    if (operand != operand) {\n        {\n            org.apache.commons.lang3.mutable.MutableLong.this.long += operand;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"operand","rhs":"operand"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSetUtils:176","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[188],"tindex":"cf241710-2ec6-11e6-8000-1f770b27c112","method":{"position":"org.apache.commons.lang3.StringUtils:2449","type":"CtMethodImpl","sourcecode":"public static java.lang.String substringBetween(final java.lang.String str, final java.lang.String tag) {\n    if (tag == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.substringBetween(str, tag, tag);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"tag"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.AnnotationUtils:288","type":"CtInvocationImpl","sourcecode":"componentType.isAnnotation()"},"failures":[189,190],"tindex":"cf241711-2ec6-11e6-8000-296ced72e75f","method":{"position":"org.apache.commons.lang3.Validate:1225","type":"CtMethodImpl","sourcecode":"public static void isAssignableFrom(final java.lang.Class<?> superType, final java.lang.Class<?> type) {\n    if (type.isAnnotation()) {\n        {\n            if ((superType.isAssignableFrom(type)) == false) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.java.lang.String, (type == null ? \"null\" : type.getName()), superType.getName()));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"componentType":"type"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:131","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[191,192,193,194,195,196,197,198],"tindex":"cf243e22-2ec6-11e6-8000-a33bcb0ceba5","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:523","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setSummaryObjectStartText(final java.lang.String summaryObjectStartText) {\n    if (summaryObjectStartText == null) {\n        {\n            super.setSummaryObjectStartText(summaryObjectStartText);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"summaryObjectStartText"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:297","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(className)"},"failures":[],"tindex":"cf243e23-2ec6-11e6-8000-a52e859e92e7","method":{"position":"org.apache.commons.lang3.Validate:104","type":"CtMethodImpl","sourcecode":"public static void isTrue(final boolean expression, final java.lang.String message, final long value) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(message)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (expression == false) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message, java.lang.Long.valueOf(value)));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"className":"message"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2231","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[],"tindex":"cf243e24-2ec6-11e6-8000-971135328c75","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:635","type":"CtMethodImpl","sourcecode":"protected java.util.List<java.lang.String> tokenize(final char[] srcChars, final int offset, final int count) {\n    if (count < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((count - 1) + offset) >= 8) {\n                {\n                    if ((srcChars == null) || (count == 0)) {\n                        return java.util.Collections.emptyList();\n                    } \n                    final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder();\n                    final java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                    int int = offset;\n                    while ((pos >= 0) && (pos < count)) {\n                        pos = readNextToken(srcChars, pos, count, buf, tokenList);\n                        if (pos >= count) {\n                            addToken(tokenList, \"\");\n                        } \n                    }\n                    return tokenList;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:325","type":"CtBinaryOperatorImpl","sourcecode":"pos >= 0"},"failures":[199,200,201,202,203,204,205,206,139,140,141,142,143,144,145,146,147,148,149,150,207,151,152,153,154,155,156,157,158,159],"tindex":"cf246535-2ec6-11e6-8000-911e68c5fb7d","method":{"position":"org.apache.commons.lang3.time.DateUtils:517","type":"CtMethodImpl","sourcecode":"private static java.util.Date add(final java.util.Date date, final int calendarField, final int amount) {\n    if (amount >= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (date == null) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            final java.util.Calendar java.util.Calendar = java.util.Calendar.getInstance();\n            c.setTime(date);\n            c.add(calendarField, amount);\n            return c.getTime();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pos":"amount"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1699","type":"CtBinaryOperatorImpl","sourcecode":"d instanceof java.lang.reflect.Type"},"failures":[],"tindex":"cf246536-2ec6-11e6-8000-0d9f360fbd21","method":{"position":"org.apache.commons.lang3.ArrayUtils:1987","type":"CtMethodImpl","sourcecode":"public static boolean contains(final java.lang.Object[] array, final java.lang.Object objectToFind) {\n    if (objectToFind instanceof java.lang.reflect.Type) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (org.apache.commons.lang3.ArrayUtils.indexOf(array, objectToFind)) != (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"d":"objectToFind"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:4838","type":"CtBinaryOperatorImpl","sourcecode":"index == (org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND)"},"failures":[],"tindex":"cf248c47-2ec6-11e6-8000-e554a7f71435","method":{"position":"org.apache.commons.lang3.time.FastDateParser:820","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nint modify(final int iValue) {\n    if (iValue == iValue) {\n        {\n            return iValue % 12;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND":"iValue","index":"iValue"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:517","type":"CtBinaryOperatorImpl","sourcecode":"throwable == null"},"failures":[44,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227],"tindex":"cf248c48-2ec6-11e6-8000-8d1ad9301829","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:123","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static java.lang.Throwable getCause(final java.lang.Throwable throwable) {\n    if (throwable == null) {\n        {\n            return org.apache.commons.lang3.exception.ExceptionUtils.getCause(throwable, org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.java.lang.String[]);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"throwable":"throwable"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:525","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[228],"tindex":"cf248c49-2ec6-11e6-8000-4f12ff844c9c","method":{"position":"org.apache.commons.lang3.math.NumberUtils:302","type":"CtMethodImpl","sourcecode":"public static byte toByte(final java.lang.String str) {\n    if (str == null) {\n        {\n            return org.apache.commons.lang3.math.NumberUtils.toByte(str, ((byte)(0)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4938","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[229],"tindex":"cf248c4a-2ec6-11e6-8000-c9082cf5a1b5","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:455","type":"CtMethodImpl","sourcecode":"public static final java.lang.String escapeJava(final java.lang.String input) {\n    if (input == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:945","type":"CtBinaryOperatorImpl","sourcecode":"(value < start) || (value > end)"},"failures":[],"tindex":"cf24b35b-2ec6-11e6-8000-21147f49543a","method":{"position":"org.apache.commons.lang3.ArrayUtils:2003","type":"CtMethodImpl","sourcecode":"public static int indexOf(final long[] array, final long valueToFind) {\n    if ((valueToFind < valueToFind) || (value > valueToFind)) {\n        {\n            return org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"valueToFind","end":"valueToFind","value":"valueToFind"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6771","type":"CtBinaryOperatorImpl","sourcecode":"n > m"},"failures":[230,231],"tindex":"cf24b35c-2ec6-11e6-8000-0318c2a93079","method":{"position":"org.apache.commons.lang3.Validate:628","type":"CtMethodImpl","sourcecode":"public static <T>T[] validIndex(final T[] array, final int index, final java.lang.String message, final java.lang.Object... values) {\n    if (index > index) {\n        {\n            org.apache.commons.lang3.Validate.notNull(array);\n            if ((index < 0) || (index >= (array.int))) {\n                throw new java.lang.IndexOutOfBoundsException(java.lang.String.format(message, values));\n            } \n            return array;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"m":"index","n":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:563","type":"CtBinaryOperatorImpl","sourcecode":"(((ch0 == 'y') || (ch0 == 'Y')) || (ch0 == 't')) || (ch0 == 'T')"},"failures":[],"tindex":"cf24b35d-2ec6-11e6-8000-33d8ac48c1f1","method":{"position":"org.apache.commons.lang3.CharUtils:217","type":"CtMethodImpl","sourcecode":"public static int toIntValue(final char ch) {\n    if ((((ch == 'y') || (ch0 == 'Y')) || (ch0 == 't')) || (ch0 == 'T')) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.CharUtils.isAsciiNumeric(ch)) == false) {\n                throw new java.lang.IllegalArgumentException(((\"The character \" + ch) + \" is not in the range '0' - '9'\"));\n            } \n            return ch - 48;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch0":"ch"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomUtils:89","type":"CtBinaryOperatorImpl","sourcecode":"startInclusive == endExclusive"},"failures":[232],"tindex":"cf24da6e-2ec6-11e6-8000-6bfd614a0994","method":{"position":"org.apache.commons.lang3.time.DateUtils:584","type":"CtMethodImpl","sourcecode":"public static java.util.Date setHours(final java.util.Date date, final int amount) {\n    if (amount == amount) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateUtils.set(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startInclusive":"amount","endExclusive":"amount"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:724","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"cf24da6f-2ec6-11e6-8000-a757a97b2dc9","method":{"position":"org.apache.commons.lang3.ArrayUtils:4966","type":"CtMethodImpl","sourcecode":"public static float[] removeElement(final float[] array, final float element) {\n    if (array == null) {\n        {\n            if (array == null) {\n                {\n                    final int int = org.apache.commons.lang3.ArrayUtils.indexOf(array, element);\n                    if (index == (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int)) {\n                        return org.apache.commons.lang3.ArrayUtils.clone(array);\n                    } \n                    return org.apache.commons.lang3.ArrayUtils.remove(array, index);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ObjectUtils:341","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270],"tindex":"cf24da70-2ec6-11e6-8000-5b5c75a0610c","method":{"position":"org.apache.commons.lang3.ArrayUtils:6011","type":"CtMethodImpl","sourcecode":"static java.lang.Object removeAll(final java.lang.Object array, final int... indices) {\n    if (array == null) {\n        {\n            final int int = org.apache.commons.lang3.ArrayUtils.getLength(array);\n            int int = 0;\n            if (org.apache.commons.lang3.ArrayUtils.isNotEmpty(indices)) {\n                java.util.Arrays.sort(indices);\n                int int = indices.int;\n                int int = length;\n                while ((--i) >= 0) {\n                    final int int = indices[i];\n                    if ((index < 0) || (index >= length)) {\n                        throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Length: \") + length));\n                    } \n                    if (index >= prevIndex) {\n                        continue;\n                    } \n                    diff++;\n                    prevIndex = index;\n                }\n            } \n            final java.lang.Object java.lang.Object = java.lang.reflect.Array.newInstance(array.getClass().getComponentType(), (length - diff));\n            if (diff < length) {\n                int int = length;\n                int int = length - diff;\n                for (int int = (indices.int) - 1 ; i >= 0 ; i--) {\n                    final int int = indices[i];\n                    if ((end - index) > 1) {\n                        final int int = (end - index) - 1;\n                        dest -= cp;\n                        java.lang.System.arraycopy(array, (index + 1), result, dest, cp);\n                    } \n                    end = index;\n                }\n                if (end > 0) {\n                    java.lang.System.arraycopy(array, 0, result, 0, end);\n                } \n            } \n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.FieldUtils:106","type":"CtUnaryOperatorImpl","sourcecode":"!(java.lang.reflect.Modifier.isPublic(field.getModifiers()))"},"failures":[271],"tindex":"cf250181-2ec6-11e6-8000-cf0ec92bd123","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:661","type":"CtMethodImpl","sourcecode":"public static void removeFinalModifier(java.lang.reflect.Field field) {\n    if (!(java.lang.reflect.Modifier.isPublic(field.getModifiers()))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.reflect.FieldUtils.removeFinalModifier(field, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"field"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6687","type":"CtBinaryOperatorImpl","sourcecode":"smallestIndexOfDiff == (org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND)"},"failures":[],"tindex":"cf250182-2ec6-11e6-8000-a51dd4fc4630","method":{"position":"org.apache.commons.lang3.math.Fraction:546","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.math.Fraction pow(final int power) {\n    if (power == power) {\n        {\n            if (power == 1) {\n                return org.apache.commons.lang3.math.Fraction.this;\n            } else if (power == 0) {\n                return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction;\n            } else if (power < 0) {\n                if (power == (java.lang.Integer.java.lang.Integer.int)) {\n                    return org.apache.commons.lang3.math.Fraction.this.invert().pow(2).pow((-(power / 2)));\n                } \n                return org.apache.commons.lang3.math.Fraction.this.invert().pow((-power));\n            } else {\n                final org.apache.commons.lang3.math.Fraction org.apache.commons.lang3.math.Fraction = org.apache.commons.lang3.math.Fraction.this.multiplyBy(org.apache.commons.lang3.math.Fraction.this);\n                if ((power % 2) == 0) {\n                    return f.pow((power / 2));\n                } else {\n                    return f.pow((power / 2)).multiplyBy(org.apache.commons.lang3.math.Fraction.this);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND":"power","smallestIndexOfDiff":"power"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3298","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[272],"tindex":"cf252893-2ec6-11e6-8000-839b8113575a","method":{"position":"org.apache.commons.lang3.ArrayUtils:3297","type":"CtMethodImpl","sourcecode":"public static double[] toPrimitive(final java.lang.Double[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.double[];\n            } \n            final double[] double[] = new double[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = array[i].doubleValue();\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:507","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[273],"tindex":"cf252894-2ec6-11e6-8000-1d0d0feb3963","method":{"position":"org.apache.commons.lang3.StringUtils:443","type":"CtMethodImpl","sourcecode":"public static java.lang.String trimToNull(final java.lang.String str) {\n    if (str == null) {\n        {\n            final java.lang.String java.lang.String = org.apache.commons.lang3.StringUtils.trim(str);\n            return org.apache.commons.lang3.StringUtils.isEmpty(ts) ? null : ts;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:261","type":"CtBinaryOperatorImpl","sourcecode":"countryCode == null"},"failures":[274,275,276,277,278,279,280,281,282,283,284,285,286,29,30,31,32,33,34,35,36,37,38],"tindex":"cf252895-2ec6-11e6-8000-3b3b5909323f","method":{"position":"org.apache.commons.lang3.CharSet:173","type":"CtMethodImpl","sourcecode":"protected void add(final java.lang.String str) {\n    if (str == null) {\n        {\n            if (str == null) {\n                return ;\n            } \n            final int int = str.length();\n            int int = 0;\n            while (pos < len) {\n                final int int = len - pos;\n                if (((remainder >= 4) && ((str.charAt(pos)) == '^')) && ((str.charAt((pos + 2))) == '-')) {\n                    java.util.Set<org.apache.commons.lang3.CharRange>.add(org.apache.commons.lang3.CharRange.isNotIn(str.charAt((pos + 1)), str.charAt((pos + 3))));\n                    pos += 4;\n                } else if ((remainder >= 3) && ((str.charAt((pos + 1))) == '-')) {\n                    java.util.Set<org.apache.commons.lang3.CharRange>.add(org.apache.commons.lang3.CharRange.isIn(str.charAt(pos), str.charAt((pos + 2))));\n                    pos += 3;\n                } else if ((remainder >= 2) && ((str.charAt(pos)) == '^')) {\n                    java.util.Set<org.apache.commons.lang3.CharRange>.add(org.apache.commons.lang3.CharRange.isNot(str.charAt((pos + 1))));\n                    pos += 2;\n                } else {\n                    java.util.Set<org.apache.commons.lang3.CharRange>.add(org.apache.commons.lang3.CharRange.is(str.charAt(pos)));\n                    pos += 1;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"countryCode":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:970","type":"CtBinaryOperatorImpl","sourcecode":"abbreviation != null"},"failures":[],"tindex":"cf254fa6-2ec6-11e6-8000-f9c1ec9ae046","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:90","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.lang3.time.FastDateFormat createInstance(final java.lang.String pattern, final java.util.TimeZone timeZone, final java.util.Locale locale) {\n    if (pattern != null) {\n        {\n            return new org.apache.commons.lang3.time.FastDateFormat(pattern , timeZone , locale);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"abbreviation":"pattern"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3571","type":"CtBinaryOperatorImpl","sourcecode":"i > startIndex"},"failures":[287,288,289,290,291,292,293,294,295,296,297,298],"tindex":"cf2576b7-2ec6-11e6-8000-6dca12a0474c","method":{"position":"org.apache.commons.lang3.time.FastDateParser:391","type":"CtMethodImpl","sourcecode":"private int adjustYear(final int twoDigitYear) {\n    if (twoDigitYear > twoDigitYear) {\n        {\n            int int = (int) + twoDigitYear;\n            return twoDigitYear >= (int) ? trial : trial + 100;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"twoDigitYear","i":"twoDigitYear"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:451","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"cf2576b8-2ec6-11e6-8000-39759e92e56d","method":{"position":"org.apache.commons.lang3.Conversion:384","type":"CtMethodImpl","sourcecode":"public static char binaryToHexDigitMsb0_4bits(final boolean[] src) {\n    if (src == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(src, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"src"},"type":"special","returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":82,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}