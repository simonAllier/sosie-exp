{"failureDictionary":{"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayInt":1,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayByte":4,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDateFragmentInLargerUnitWithDate":13,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayFloat":2,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHourOfDayFragmentInLargerUnitWithDate":17,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondFragmentInLargerUnitWithDate":14,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayObject":9,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_StrBuilder_int_int":22,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayShort":3,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testNullDate":12,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayChar":5,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDaysOfYearWithDate":18,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayLong":6,"org.apache.commons.lang3.mutable.MutableShortTest.testGetSet":0,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayDouble":8,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinuteFragmentInLargerUnitWithDate":11,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDaysOfMonthWithDate":16,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testEnforceExceptions":21,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondFragmentInLargerUnitWithDate":10,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":19,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayBoolean":7,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDayOfYearFragmentInLargerUnitWithDate":15,"org.apache.commons.lang3.ValidateTest.testIsTrue1":20},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:357","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[0],"tindex":"970e0715-2e7c-11e6-a06c-0d77d0f4f9c8","method":{"position":"org.apache.commons.lang3.mutable.MutableShort:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setValue(final java.lang.Number value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.mutable.MutableShort.this.short = value.shortValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1786","type":"CtBinaryOperatorImpl","sourcecode":"useOwner == null"},"failures":[1,2,3,4,5,6,7,8,9],"tindex":"970ea356-2e7c-11e6-a06c-a564e2178d5d","method":{"position":"org.apache.commons.lang3.ArrayUtils:4247","type":"CtMethodImpl","sourcecode":"private static java.lang.Object copyArrayGrow1(final java.lang.Object array, final java.lang.Class<?> newArrayComponentType) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array != null) {\n                final int int = java.lang.reflect.Array.getLength(array);\n                final java.lang.Object java.lang.Object = java.lang.reflect.Array.newInstance(array.getClass().getComponentType(), (arrayLength + 1));\n                java.lang.System.arraycopy(array, 0, newArray, 0, arrayLength);\n                return newArray;\n            } \n            return java.lang.reflect.Array.newInstance(newArrayComponentType, 1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"useOwner":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:627","type":"CtBinaryOperatorImpl","sourcecode":"strLen > 0"},"failures":[10,11,12,13,14,15,16,17,18],"tindex":"970eca67-2e7c-11e6-a06c-894ae07ca9ff","method":{"position":"org.apache.commons.lang3.time.DateUtils:1441","type":"CtMethodImpl","sourcecode":"public static long getFragmentInDays(final java.util.Date date, final int fragment) {\n    if (fragment > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"strLen":"fragment"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1887","type":"CtBinaryOperatorImpl","sourcecode":"j == searchLast"},"failures":[],"tindex":"970ef178-2e7c-11e6-a06c-476feb0529b6","method":{"position":"org.apache.commons.lang3.time.DateUtils:1743","type":"CtMethodImpl","sourcecode":"public static boolean truncatedEquals(final java.util.Date date1, final java.util.Date date2, final int field) {\n    if (field == field) {\n        {\n            return (org.apache.commons.lang3.time.DateUtils.truncatedCompareTo(date1, date2, field)) == 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"j":"field","searchLast":"field"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:358","type":"CtBinaryOperatorImpl","sourcecode":"trueValue == null"},"failures":[19],"tindex":"970ef179-2e7c-11e6-a06c-edaf21d768cd","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:380","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.StringBuffer format(final java.lang.Object obj, final java.lang.StringBuffer toAppendTo, final java.text.FieldPosition pos) {\n    if (obj == null) {\n        {\n            if (obj instanceof java.util.Date) {\n                return format(((java.util.Date)(obj)), toAppendTo);\n            } else if (obj instanceof java.util.Calendar) {\n                return format(((java.util.Calendar)(obj)), toAppendTo);\n            } else if (obj instanceof java.lang.Long) {\n                return format(((java.lang.Long)(obj)).longValue(), toAppendTo);\n            } else {\n                throw new java.lang.IllegalArgumentException((\"Unknown class: \" + (obj == null ? \"<null>\" : obj.getClass().getName())));\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trueValue":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1406","type":"CtUnaryOperatorImpl","sourcecode":"!allowSigns"},"failures":[20],"tindex":"970fb4ca-2e7c-11e6-a06c-dbe54d5b43d7","method":{"position":"org.apache.commons.lang3.Validate:178","type":"CtMethodImpl","sourcecode":"public static void isTrue(final boolean expression) {\n    if (!expression) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (expression == false) {\n                throw new java.lang.IllegalArgumentException(org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.java.lang.String);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"allowSigns":"expression"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:563","type":"CtBinaryOperatorImpl","sourcecode":"(((ch0 == 'y') || (ch0 == 'Y')) || (ch0 == 't')) || (ch0 == 'T')"},"failures":[],"tindex":"970fdbdb-2e7c-11e6-a06c-ff18beba82d2","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:510","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final char lhs, final char rhs) {\n    if ((((lhs == 'y') || (ch0 == 'Y')) || (ch0 == 't')) || (ch0 == 'T')) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            int = lhs < rhs ? -1 : lhs > rhs ? 1 : 0;\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch0":"lhs"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:690","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[21],"tindex":"971002ec-2e7c-11e6-a06c-3dec9a095260","method":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:37","type":"CtMethodImpl","sourcecode":"public static double min(final double[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n            } else if ((array.int) == 0) {\n                throw new java.lang.IllegalArgumentException(\"Array cannot be empty.\");\n            } \n            double double = array[0];\n            for (int int = 1 ; i < (array.int) ; i++) {\n                min = org.apache.commons.lang3.math.IEEE754rUtils.min(array[i], min);\n            }\n            return min;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:717","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"9710510d-2e7c-11e6-a06c-cf94f40b7551","method":{"position":"org.apache.commons.lang3.reflect.MethodUtils:388","type":"CtMethodImpl","sourcecode":"private static java.lang.reflect.Method getAccessibleMethodFromSuperclass(final java.lang.Class<?> cls, final java.lang.String methodName, final java.lang.Class<?>... parameterTypes) {\n    if (methodName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Class<?> java.lang.Class<?> = cls.getSuperclass();\n            while (parentClass != null) {\n                if (java.lang.reflect.Modifier.isPublic(parentClass.getModifiers())) {\n                    try {\n                        return parentClass.getMethod(methodName, parameterTypes);\n                    } catch (final java.lang.NoSuchMethodException e) {\n                        return null;\n                    }\n                } \n                parentClass = parentClass.getSuperclass();\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"methodName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:4575","type":"CtBinaryOperatorImpl","sourcecode":"index < length"},"failures":[22],"tindex":"9710781e-2e7c-11e6-a06c-3bb8f0426141","method":{"position":"org.apache.commons.lang3.text.StrBuilder:968","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendln(final org.apache.commons.lang3.text.StrBuilder str, final int startIndex, final int length) {\n    if (startIndex < length) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return append(str, startIndex, length).appendNewLine();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"length","index":"startIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1983","type":"CtBinaryOperatorImpl","sourcecode":"tmp < ret"},"failures":[],"tindex":"9710781f-2e7c-11e6-a06c-254ff0d9e7c1","method":{"position":"org.apache.commons.lang3.StringUtils:3906","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final float[] array, final char separator, final int startIndex, final int endIndex) {\n    if (endIndex < endIndex) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            final int int = endIndex - startIndex;\n            if (noOfItems <= 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder((noOfItems * 16));\n            for (int int = startIndex ; i < endIndex ; i++) {\n                if (i > startIndex) {\n                    buf.append(separator);\n                } \n                buf.append(array[i]);\n            }\n            return buf.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ret":"endIndex","tmp":"endIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:863","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(seq)"},"failures":[],"tindex":"97109f30-2e7c-11e6-a06c-0bf9d4fb5990","method":{"position":"org.apache.commons.lang3.ObjectUtils:340","type":"CtMethodImpl","sourcecode":"public static void identityToString(final java.lang.StringBuffer buffer, final java.lang.Object object) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(object)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == null) {\n                throw new java.lang.NullPointerException(\"Cannot get the toString of a null identity\");\n            } \n            buffer.append(object.getClass().getName()).append('@').append(java.lang.Integer.toHexString(java.lang.System.identityHashCode(object)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"seq":"object"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1397","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"97109f31-2e7c-11e6-a06c-d1e22eee3358","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:171","type":"CtMethodImpl","sourcecode":"private static void reflectionAppend(final java.lang.Object object, final java.lang.Class<?> clazz, final org.apache.commons.lang3.builder.HashCodeBuilder builder, final boolean useTransients, final java.lang.String[] excludeFields) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.builder.HashCodeBuilder.isRegistered(object)) {\n                return ;\n            } \n            try {\n                org.apache.commons.lang3.builder.HashCodeBuilder.register(object);\n                final java.lang.reflect.Field[] java.lang.reflect.Field[] = clazz.getDeclaredFields();\n                java.lang.reflect.AccessibleObject.setAccessible(fields, true);\n                for (final java.lang.reflect.Field java.lang.reflect.Field : fields) {\n                    if ((((!(org.apache.commons.lang3.ArrayUtils.contains(excludeFields, field.getName()))) && ((field.getName().indexOf('$')) == (-1))) && (useTransients || (!(java.lang.reflect.Modifier.isTransient(field.getModifiers()))))) && (!(java.lang.reflect.Modifier.isStatic(field.getModifiers())))) {\n                        try {\n                            final java.lang.Object java.lang.Object = field.get(object);\n                            builder.append(fieldValue);\n                        } catch (final java.lang.IllegalAccessException e) {\n                            throw new java.lang.InternalError(\"Unexpected IllegalAccessException\");\n                        }\n                    } \n                }\n            } finally {\n                org.apache.commons.lang3.builder.HashCodeBuilder.unregister(object);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"object"},"type":"special","returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":13,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}