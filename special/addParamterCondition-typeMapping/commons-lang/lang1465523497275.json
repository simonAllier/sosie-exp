{"failureDictionary":{"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":239,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":428,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":132,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":145,"org.apache.commons.lang3.time.DateUtilsTest.testSetMilliseconds":391,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":424,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":127,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":212,"org.apache.commons.lang3.builder.CompareToBuilderTest.testObjectComparator":394,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":240,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":274,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":276,"org.apache.commons.lang3.ValidateTest.testIsTrue4":305,"org.apache.commons.lang3.time.FastDatePrinterTest.testMilleniumBug":270,"org.apache.commons.lang3.ValidateTest.testIsTrue3":304,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":423,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArrayEqualAsObject":251,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testFloatArrayAsObject":20,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":407,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":110,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":292,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":61,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparators_Array":313,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":21,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":142,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":248,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":211,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":289,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":78,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":237,"org.apache.commons.lang3.RangeTest.testToString":40,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":213,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":147,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":418,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":32,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":119,"org.apache.commons.lang3.RangeTest.testIsBeforeRange":41,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":405,"org.apache.commons.lang3.CharUtilsTest.testToCharacterObject_String":343,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEqualsHashcode":324,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":123,"org.apache.commons.lang3.StringUtilsTest.testChomp":4,"org.apache.commons.lang3.ArrayUtilsTest.testReverseLong":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":95,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":126,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":337,"org.apache.commons.lang3.math.FractionTest.testFactory_int_int":361,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":76,"org.apache.commons.lang3.math.FractionTest.testDivide":355,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":278,"org.apache.commons.lang3.StringUtilsSubstringTest.testRight_String":369,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxDouble":387,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":111,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":104,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseUncheckedUncheckedException":371,"org.apache.commons.lang3.RangeTest.testIsWithCompare":34,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSizeStartText":195,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":295,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_Integer":368,"org.apache.commons.lang3.AnnotationUtilsTest.testNonEquivalentAnnotationsOfSameType":181,"org.apache.commons.lang3.CharEncodingTest.testNotSupported":0,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableCount_Throwable":362,"org.apache.commons.lang3.RangeTest.testIntersectionWithNonOverlapping":55,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":219,"org.apache.commons.lang3.builder.CompareToBuilderTest.testObject":395,"org.apache.commons.lang3.ConversionTest.testLongToShortArray":375,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":286,"org.apache.commons.lang3.AnnotationUtilsTest.testSameInstance":175,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetValueDelimiter":434,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":409,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfByte":399,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":275,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":207,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":440,"org.apache.commons.lang3.RangeTest.testIsBefore":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":102,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":410,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":300,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":144,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":250,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxDouble_nullArray":386,"org.apache.commons.lang3.AnnotationUtilsTest.testEquivalence":176,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithNullText":309,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":280,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetContentEnd":194,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":296,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparatorsWithNullText":311,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":101,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":88,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testStartsWith":323,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":229,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":153,"org.apache.commons.lang3.builder.DiffBuilderTest.testStylePassedToDiffResult":246,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":133,"org.apache.commons.lang3.RangeTest.testContainsRange":45,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementBooleanArray":338,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":220,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":91,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_String_String_String_noMatch":314,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsArrayGenericTypes":390,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang720":401,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":283,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":294,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":60,"org.apache.commons.lang3.math.FractionTest.testFactory_String_improper":352,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":184,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceAll_String_String":12,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":243,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":143,"org.apache.commons.lang3.ArrayUtilsTest.testReverse":385,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testTrimToNull":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":27,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":26,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":231,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":64,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":87,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang303":265,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testArrayList":155,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":100,"org.apache.commons.lang3.builder.DiffBuilderTest.testSimilarObjectIgnoresAppends":249,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testBlank":217,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":225,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":430,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":206,"org.apache.commons.lang3.builder.DiffResultTest.testNullStyle":188,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":90,"org.apache.commons.lang3.RangeTest.testIsStartedBy":37,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_Object":310,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":266,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":118,"org.apache.commons.lang3.RangeTest.testIntersectionWithNull":48,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetEscape":436,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":298,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOf_String_int":14,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_Object":312,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":80,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementByteArray":376,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":152,"org.apache.commons.lang3.RangeTest.testGetMinimum":54,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfBooleanWithStartIndex":342,"org.apache.commons.lang3.StringUtilsTest.testGetJaroWinklerDistance_StringString":328,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":234,"org.apache.commons.lang3.builder.DiffBuilderTest.testNullLhs":259,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseUncheckedNull":373,"org.apache.commons.lang3.math.FractionTest.testAbs":346,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSummaryObjectEndText":205,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":408,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":406,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":247,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":214,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":124,"org.apache.commons.lang3.StringUtilsTest.testRemoveEnd":5,"org.apache.commons.lang3.math.FractionTest.testAdd":347,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":282,"org.apache.commons.lang3.builder.DiffBuilderTest.testSameObjectIgnoresAppends":255,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":121,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":30,"org.apache.commons.lang3.BooleanUtilsTest.test_toStringTrueFalse_boolean":332,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":75,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetArraySeparator":203,"org.apache.commons.lang3.StringUtilsTest.testNormalizeSpace":1,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testEndsWithIgnoreCase":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":84,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":245,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":151,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":287,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testLinkedList":157,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_String_String_String":316,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":254,"org.apache.commons.lang3.ObjectUtilsTest.testHashCode":326,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_Integer_Integer_Integer_Integer":389,"org.apache.commons.lang3.event.EventUtilsTest.testBindFilteredEventsToMethod":7,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":24,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testCharArray":169,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang538":272,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testMilleniumBug":264,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testEndsWithAny":322,"org.apache.commons.lang3.AnnotationUtilsTest.testGeneratedAnnotationEquivalentToRealAnnotation":179,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":258,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":114,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StringBuffer_int_int":417,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testInvalidFragmentWithCalendar":382,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":422,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":241,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":208,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":63,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":128,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":291,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_object_nullInput":17,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":221,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":226,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":135,"org.apache.commons.lang3.math.FractionTest.testEquals":356,"org.apache.commons.lang3.RangeTest.testIsAfterRange":49,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":94,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_Integer_Integer_Integer_Integer_noMatch":388,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetFieldNameValueSeparator":199,"org.apache.commons.lang3.RangeTest.testSerializing":35,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":435,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":235,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_PrimitiveNumber":330,"org.apache.commons.lang3.ArrayUtilsTest.testContainsBoolean":341,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":79,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSizeEndText":198,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":303,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":137,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":411,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":218,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":131,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfBoolean":340,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":130,"org.apache.commons.lang3.RangeTest.testIsEndedBy":38,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementBooleanArray":339,"org.apache.commons.lang3.RangeTest.testGetMaximum":52,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":65,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":285,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":233,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":23,"org.apache.commons.lang3.builder.DiffResultTest.testListIsNonModifiable":187,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNull":345,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testSimpleDate":262,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":403,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayInt":377,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_String_String_String_nullValue":315,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_StringBuffer_int_int":416,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":222,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseUncheckedUncheckedException":372,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":216,"org.apache.commons.lang3.math.FractionTest.testNegate":359,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":105,"org.apache.commons.lang3.tuple.TripleTest.testToStringCustom":327,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":336,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePartialString_noReplace":442,"org.apache.commons.lang3.builder.DiffResultTest.testNullRhs":191,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":301,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":437,"org.apache.commons.lang3.mutable.MutableDoubleTest.testSubtractValueObject":167,"org.apache.commons.lang3.BooleanUtilsTest.test_toStringOnOff_boolean":334,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethodWithEvent":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":134,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":66,"org.apache.commons.lang3.builder.CompareToBuilderTest.testObjectBuild":392,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":420,"org.apache.commons.lang3.StringUtilsTest.testRemoveEndIgnoreCase":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":106,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":113,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":293,"org.apache.commons.lang3.math.FractionTest.testMultiply":357,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang303":271,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethod":6,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":74,"org.apache.commons.lang3.ValidateTest.testInclusiveBetween_withMessage":367,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":77,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringStringarray":364,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetPrefix":439,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":69,"org.apache.commons.lang3.time.FastDatePrinterTest.testSimpleDate":268,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetSuffix":441,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":290,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":139,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":223,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":232,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":267,"org.apache.commons.lang3.math.FractionTest.testHashCode":354,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":108,"org.apache.commons.lang3.StringUtilsTest.testReverseDelimited_StringChar":384,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":150,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmpty":438,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":85,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":244,"org.apache.commons.lang3.ArrayUtilsTest.testContainsByte":398,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":25,"org.apache.commons.lang3.AnnotationUtilsTest.testBothArgsNull":180,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":146,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":138,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":129,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetNullText":197,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":299,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorNoArgs":426,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":116,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":92,"org.apache.commons.lang3.time.DateUtilsTest.testIsSameLocalTime_Cal":168,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testEquals":319,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":193,"org.apache.commons.lang3.builder.CompareToBuilderTest.testObjectComparatorNull":393,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testCharArrayAsObject":170,"org.apache.commons.lang3.time.FastDatePrinterTest.testShortDateStyleWithLocales":269,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":256,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":279,"org.apache.commons.lang3.AnnotationUtilsTest.testOneArgNull":173,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":215,"org.apache.commons.lang3.StringUtilsTest.testPrependIfMissing":317,"org.apache.commons.lang3.time.FastDatePrinterTest.testFormat":273,"org.apache.commons.lang3.text.StrBuilderTest.testLang294":13,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":242,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":261,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":288,"org.apache.commons.lang3.builder.DiffResultTest.testNullList":185,"org.apache.commons.lang3.RangeTest.testIsOverlappedBy":36,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":302,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":97,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":59,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":115,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":109,"org.apache.commons.lang3.RangeTest.testHashCode":51,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testOrdinalIndexOf":380,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairs":400,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":412,"org.apache.commons.lang3.math.FractionTest.testReduce":360,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":404,"org.apache.commons.lang3.RangeTest.testElementCompareTo":50,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":62,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testBlank":230,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayToObjectArray":378,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":148,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":98,"org.apache.commons.lang3.CharUtilsTest.testToIntValue_Character_int":15,"org.apache.commons.lang3.builder.DiffResultTest.testIterator":189,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":122,"org.apache.commons.lang3.builder.DiffResultTest.testNoDifferencesString":186,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":29,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_byte":379,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":192,"org.apache.commons.lang3.StringUtilsTest.testGetJaroWinklerDistance_NullString":329,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":414,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":117,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":236,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":103,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparators_Collection":307,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":154,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":238,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":415,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":70,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":257,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":125,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":89,"org.apache.commons.lang3.RangeTest.testBetweenWithCompare":44,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":425,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":253,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testTrim":2,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAnyBut_StringString":58,"org.apache.commons.lang3.ValidateTest.testValidIndex_array":366,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":209,"org.apache.commons.lang3.time.DateUtilsTest.testIsSameDay_Date":374,"org.apache.commons.lang3.math.FractionTest.testCompareTo":351,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":183,"org.apache.commons.lang3.RangeTest.testComparableConstructors":53,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":31,"org.apache.commons.lang3.StringUtilsTest.testAppendIfMissing":318,"org.apache.commons.lang3.RangeTest.testToStringFormat":57,"org.apache.commons.lang3.AnnotationUtilsTest.testAnnotationsOfDifferingTypes":177,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoVariables":431,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":432,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testFloatArray":19,"org.apache.commons.lang3.RangeTest.testIntersectionWith":42,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":252,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":433,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testCopyOnWriteArrayList":156,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":107,"org.apache.commons.lang3.builder.DiffResultTest.testNullLhs":190,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":419,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":67,"org.apache.commons.lang3.ArrayUtilsTest.testToString":166,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetContentStart":196,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testStartsWithAny":321,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":421,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":81,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":277,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":141,"org.apache.commons.lang3.math.FractionTest.testInvert":358,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastOrdinalIndexOf":381,"org.apache.commons.lang3.ValidateTest.testNotEmptyMap1":171,"org.apache.commons.lang3.ValidateTest.testNotEmptyMap2":172,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSummaryObjectStartText":201,"org.apache.commons.lang3.AnnotationUtilsTest.testHashCode":178,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":99,"org.apache.commons.lang3.math.NumberUtilsTest.testToFloatString":306,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteAll_String":11,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_char_int":365,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_PrimitiveNumber":331,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":73,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseUncheckedNull":370,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":427,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementShortArray":383,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparators_Iterator":308,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":210,"org.apache.commons.lang3.RangeTest.testContains":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":120,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":112,"org.apache.commons.lang3.text.StrTokenizerTest.test8":165,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":297,"org.apache.commons.lang3.text.StrTokenizerTest.test5":162,"org.apache.commons.lang3.text.StrTokenizerTest.test4":161,"org.apache.commons.lang3.text.StrTokenizerTest.test7":164,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":227,"org.apache.commons.lang3.text.StrTokenizerTest.test6":163,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":228,"org.apache.commons.lang3.text.StrTokenizerTest.test1":158,"org.apache.commons.lang3.text.StrTokenizerTest.test3":160,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testEndsWith":320,"org.apache.commons.lang3.text.StrTokenizerTest.test2":159,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":224,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetFieldSeparator":202,"org.apache.commons.lang3.ArrayUtilsTest.testContainsDouble":18,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":149,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml":402,"org.apache.commons.lang3.AnnotationUtilsTest.testIsValidAnnotationMemberType":182,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":68,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":281,"org.apache.commons.lang3.RangeTest.testIsAfter":56,"org.apache.commons.lang3.math.FractionTest.testSubtract":349,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":83,"org.apache.commons.lang3.math.FractionTest.testToProperString":353,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementByteArray":397,"org.apache.commons.lang3.BooleanUtilsTest.test_toStringYesNo_boolean":333,"org.apache.commons.lang3.math.FractionTest.testPow":348,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":72,"org.apache.commons.lang3.ArrayUtilsTest.testNUllToEmptyCharObjectNull":396,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetArrayEnd":200,"org.apache.commons.lang3.builder.DiffBuilderTest.testNullRhs":260,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":82,"org.apache.commons.lang3.RangeTest.testEqualsObject":43,"org.apache.commons.lang3.RangeTest.testRangeOfChars":39,"org.apache.commons.lang3.ObjectUtilsTest.testHashCodeMulti_multiple_likeList":325,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":429,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetArrayStart":204,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringString":363,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":136,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":96,"org.apache.commons.lang3.CharUtilsTest.testToCharacterObject_char":344,"org.apache.commons.lang3.math.FractionTest.testToString":350,"org.apache.commons.lang3.BooleanUtilsTest.test_toString_boolean_String_String_String":335,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":284,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":174,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":413,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":263,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":93,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":140},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:195","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(className)"},"failures":[0],"tindex":"de2cda0a-2ead-11e6-bbb9-856812978eb3","method":{"position":"org.apache.commons.lang3.CharEncoding:94","type":"CtMethodImpl","sourcecode":"public static boolean isSupported(final java.lang.String name) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(name)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (name == null) {\n                return false;\n            } \n            try {\n                return java.nio.charset.Charset.isSupported(name);\n            } catch (final java.nio.charset.IllegalCharsetNameException ex) {\n                return false;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"className":"name"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:728","type":"CtBinaryOperatorImpl","sourcecode":"str == trueString"},"failures":[1,2,3],"tindex":"de2d9d5b-2ead-11e6-bbb9-b74cde7241ad","method":{"position":"org.apache.commons.lang3.StringUtils:417","type":"CtMethodImpl","sourcecode":"public static java.lang.String trim(final java.lang.String str) {\n    if (str == str) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return str == null ? null : str.trim();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str","trueString":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomStringUtils:310","type":"CtBinaryOperatorImpl","sourcecode":"chars == null"},"failures":[4,5],"tindex":"de2dc46c-2ead-11e6-bbb9-e11a242cdb14","method":{"position":"org.apache.commons.lang3.StringUtils:4283","type":"CtMethodImpl","sourcecode":"public static java.lang.String removeEnd(final java.lang.String str, final java.lang.String remove) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(remove))) {\n                return str;\n            } \n            if (str.endsWith(remove)) {\n                return str.substring(0, ((str.length()) - (remove.length())));\n            } \n            return str;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chars":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:675","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"de2deb7d-2ead-11e6-bbb9-9de2a60de356","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:814","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final long[] array) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, array, null);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:938","type":"CtBinaryOperatorImpl","sourcecode":"((numerator) > 0 ? -(numerator) : numerator) < (-(denominator))"},"failures":[],"tindex":"de2deb7e-2ead-11e6-bbb9-e3a8a7241575","method":{"position":"org.apache.commons.lang3.time.DateUtils:909","type":"CtMethodImpl","sourcecode":"public static java.util.Calendar ceiling(final java.util.Calendar date, final int field) {\n    if ((field > 0 ? -(int) : int) < (-field)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (date == null) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            final java.util.Calendar java.util.Calendar = ((java.util.Calendar)(date.clone()));\n            org.apache.commons.lang3.time.DateUtils.modify(ceiled, field, org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.int);\n            return ceiled;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"numerator":"field","denominator":"field"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:975","type":"CtBinaryOperatorImpl","sourcecode":"superToString != null"},"failures":[],"tindex":"de2e128f-2ead-11e6-bbb9-7348d52fb7ec","method":{"position":"org.apache.commons.lang3.exception.DefaultExceptionContext:91","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Object getFirstContextValue(final java.lang.String label) {\n    if (label != null) {\n        {\n            for (final org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object> org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object> : java.util.List<org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>>) {\n                if (org.apache.commons.lang3.StringUtils.equals(label, pair.getKey())) {\n                    return pair.getValue();\n                } \n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"superToString":"label"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.MethodUtils:222","type":"CtBinaryOperatorImpl","sourcecode":"method == null"},"failures":[6,7,8],"tindex":"de2e39a0-2ead-11e6-bbb9-df5c1d89b9a9","method":{"position":"org.apache.commons.lang3.event.EventUtils:127","type":"CtMethodImpl","sourcecode":"private boolean hasMatchingParametersMethod(final java.lang.reflect.Method method) {\n    if (method == null) {\n        {\n            return (org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethod(java.lang.Object.getClass(), java.lang.String, method.getParameterTypes())) != null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"method":"method"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:658","type":"CtBinaryOperatorImpl","sourcecode":"trueString == null"},"failures":[9,10],"tindex":"de2e39a1-2ead-11e6-bbb9-0b2c4bfa925c","method":{"position":"org.apache.commons.lang3.StringUtils:7296","type":"CtMethodImpl","sourcecode":"public static boolean endsWithIgnoreCase(final java.lang.CharSequence str, final java.lang.CharSequence suffix) {\n    if (suffix == null) {\n        {\n            return org.apache.commons.lang3.StringUtils.endsWith(str, suffix, true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trueString":"suffix"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2001","type":"CtBinaryOperatorImpl","sourcecode":"removeLen > 0"},"failures":[11,12,13,14],"tindex":"de2e60b2-2ead-11e6-bbb9-f7f71fa40359","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2336","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.String str, int startIndex) {\n    if (startIndex > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            startIndex = startIndex < 0 ? 0 : startIndex;\n            if ((str == null) || (startIndex >= (int))) {\n                return -1;\n            } \n            final int int = str.length();\n            if (strLen == 1) {\n                return indexOf(str.charAt(0), startIndex);\n            } \n            if (strLen == 0) {\n                return startIndex;\n            } \n            if (strLen > (int)) {\n                return -1;\n            } \n            final char[] char[] = char[];\n            final int int = ((int) - strLen) + 1;\n            outer : for (int int = startIndex ; i < len ; i++) {\n                for (int int = 0 ; j < strLen ; j++) {\n                    if ((str.charAt(j)) != (thisBuf[(i + j)])) {\n                        continue outer;\n                    } \n                }\n                return i;\n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"removeLen":"startIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:691","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[],"tindex":"de2e60b3-2ead-11e6-bbb9-cbfdd283261a","method":{"position":"org.apache.commons.lang3.ArrayUtils:338","type":"CtMethodImpl","sourcecode":"public static long[] clone(final long[] array) {\n    if (array == array) {\n        {\n            if (array == null) {\n                return null;\n            } \n            return array.clone();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array","rhs":"array"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:726","type":"CtBinaryOperatorImpl","sourcecode":"strLen > 0"},"failures":[15],"tindex":"de2e87c4-2ead-11e6-bbb9-21dc2364c8d2","method":{"position":"org.apache.commons.lang3.CharUtils:285","type":"CtMethodImpl","sourcecode":"public static int toIntValue(final java.lang.Character ch, final int defaultValue) {\n    if (defaultValue > 0) {\n        {\n            if (ch == null) {\n                return defaultValue;\n            } \n            return org.apache.commons.lang3.CharUtils.toIntValue(ch.charValue(), defaultValue);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"strLen":"defaultValue"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3862","type":"CtBinaryOperatorImpl","sourcecode":"noOfItems <= 0"},"failures":[],"tindex":"de2eaed5-2ead-11e6-bbb9-298897a482fa","method":{"position":"org.apache.commons.lang3.text.translate.JavaUnicodeEscaper:49","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.translate.JavaUnicodeEscaper below(final int codepoint) {\n    if (codepoint <= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.outsideOf(codepoint, java.lang.Integer.java.lang.Integer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"noOfItems":"codepoint"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3613","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[16],"tindex":"de2eaed6-2ead-11e6-bbb9-b3e45fdaef32","method":{"position":"org.apache.commons.lang3.ArrayUtils:1449","type":"CtMethodImpl","sourcecode":"public static void reverse(final long[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return ;\n            } \n            org.apache.commons.lang3.ArrayUtils.reverse(array, 0, array.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3456","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[17],"tindex":"de2eaed7-2ead-11e6-bbb9-c1dd47f3d5a8","method":{"position":"org.apache.commons.lang3.BooleanUtils:939","type":"CtMethodImpl","sourcecode":"public static java.lang.Boolean and(final java.lang.Boolean... array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n            } \n            if ((array.int) == 0) {\n                throw new java.lang.IllegalArgumentException(\"Array is empty\");\n            } \n            try {\n                final boolean[] boolean[] = org.apache.commons.lang3.ArrayUtils.toPrimitive(array);\n                return org.apache.commons.lang3.BooleanUtils.and(primitive) ? java.lang.Boolean.java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n            } catch (final java.lang.NullPointerException ex) {\n                throw new java.lang.IllegalArgumentException(\"The array must not contain any null elements\");\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:690","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[18],"tindex":"de2ed5e8-2ead-11e6-bbb9-97b2e7d96634","method":{"position":"org.apache.commons.lang3.ArrayUtils:2714","type":"CtMethodImpl","sourcecode":"public static boolean contains(final double[] array, final double valueToFind) {\n    if (array == null) {\n        {\n            return (org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind)) != (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2766","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.ArrayUtils.isEmpty(array)"},"failures":[19,20],"tindex":"de2efcf9-2ead-11e6-bbb9-1f3418adf447","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:723","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final float[] array) {\n    if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n        {\n            if (array == null) {\n                int = (int) * (int);\n            } else {\n                for (final float float : array) {\n                    append(element);\n                }\n            }\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:547","type":"CtVariableReadImpl","sourcecode":"inLiteral"},"failures":[21,22,23,24,25,25,26,27,28,29,30,30,31,32,33],"tindex":"de2efcfa-2ead-11e6-bbb9-03a9d7e03ee6","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:862","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final java.lang.Object obj, final boolean fullDetail) {\n    if (fullDetail) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, obj, java.lang.Boolean.valueOf(fullDetail));\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inLiteral":"fullDetail"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Range:151","type":"CtBinaryOperatorImpl","sourcecode":"comp == null"},"failures":[34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"tindex":"de2f240b-2ead-11e6-bbb9-57ea942317dd","method":{"position":"org.apache.commons.lang3.Range:134","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.lang3.Range<T> between(final T fromInclusive, final T toInclusive, final java.util.Comparator<T> comparator) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.lang3.Range<T>(fromInclusive , toInclusive , comparator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comp":"comparator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:7206","type":"CtBinaryOperatorImpl","sourcecode":"(prefix.length()) > (str.length())"},"failures":[58],"tindex":"de2f4b1c-2ead-11e6-bbb9-abad08484ee5","method":{"position":"org.apache.commons.lang3.StringUtils:1759","type":"CtMethodImpl","sourcecode":"public static int indexOfAnyBut(final java.lang.CharSequence seq, final java.lang.CharSequence searchChars) {\n    if ((searchChars.length()) > (searchChars.length())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(seq)) || (org.apache.commons.lang3.StringUtils.isEmpty(searchChars))) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            final int int = seq.length();\n            for (int int = 0 ; i < strLen ; i++) {\n                final char char = seq.charAt(i);\n                final boolean boolean = (org.apache.commons.lang3.CharSequenceUtils.indexOf(searchChars, ch, 0)) >= 0;\n                if (((i + 1) < strLen) && (java.lang.Character.isHighSurrogate(ch))) {\n                    final char char = seq.charAt((i + 1));\n                    if (chFound && ((org.apache.commons.lang3.CharSequenceUtils.indexOf(searchChars, ch2, 0)) < 0)) {\n                        return i;\n                    } \n                } else {\n                    if (!chFound) {\n                        return i;\n                    } \n                }\n            }\n            return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"searchChars","prefix":"searchChars"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5001","type":"CtBinaryOperatorImpl","sourcecode":"(str.length()) == 1"},"failures":[59,60,61,62,21,63,64,65,66,67,22,68,69,70,71,72,23,73,74,75,76,77,24,78,79,79,80,80,81,82,82,83,84,25,25,26,26,27,27,28,29,85,85,86,86,87,87,88,88,89,89,90,91,92,92,93,93,94,95,95,96,96,97,97,98,99,99,100,100,101,102,103,103,104,104,105,106,107,108,109,110,111,112,113,113,114,115,115,116,116,117,117,118,118,119,120,121,122,122,123,123,124,125,126,126,127,127,128,128,129,130,130,131,30,30,132,132,133,134,135,136,137,138,138,139,140,141,142,143,31,144,145,146,147,148,32,149,150,151,152,153,33,154,155,156,157,158,159,160,161,162,163,164,165,166],"tindex":"de2f4b1d-2ead-11e6-bbb9-3570e8d1e2c8","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1534","type":"CtMethodImpl","sourcecode":"protected void appendFieldEnd(final java.lang.StringBuffer buffer, final java.lang.String fieldName) {\n    if ((fieldName.length()) == 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendFieldSeparator(buffer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:290","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[167],"tindex":"de2f722e-2ead-11e6-bbb9-ef05ec2f3a46","method":{"position":"org.apache.commons.lang3.mutable.MutableDouble:188","type":"CtMethodImpl","sourcecode":"public void subtract(final java.lang.Number operand) {\n    if (operand == null) {\n        {\n            org.apache.commons.lang3.mutable.MutableDouble.this.double -= operand.doubleValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"operand"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:180","type":"CtBinaryOperatorImpl","sourcecode":"(cal1 == null) || (cal2 == null)"},"failures":[168],"tindex":"de2f993f-2ead-11e6-bbb9-f70d8e31e75f","method":{"position":"org.apache.commons.lang3.time.DateUtils:238","type":"CtMethodImpl","sourcecode":"public static boolean isSameLocalTime(final java.util.Calendar cal1, final java.util.Calendar cal2) {\n    if ((cal1 == null) || (cal2 == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((cal1 == null) || (cal2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            return ((((((((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.getClass()) == (cal2.getClass()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cal2":"cal2","cal1":"cal1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:858","type":"CtBinaryOperatorImpl","sourcecode":"rhs == null"},"failures":[],"tindex":"de2f9940-2ead-11e6-bbb9-2fe2a1f77724","method":{"position":"org.apache.commons.lang3.StringUtils:7635","type":"CtMethodImpl","sourcecode":"public static java.lang.String toEncodedString(byte[] bytes, java.nio.charset.Charset charset) {\n    if (bytes == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new java.lang.String(bytes , (charset != null ? charset : java.nio.charset.Charset.defaultCharset()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"rhs":"bytes"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2378","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[169,170],"tindex":"de2f9941-2ead-11e6-bbb9-c17c37cfae7d","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:656","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final char[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                int = (int) * (int);\n            } else {\n                for (final char char : array) {\n                    append(element);\n                }\n            }\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.text.ParseException","condition":{"position":"org.apache.commons.lang3.SystemUtils:1465","type":"CtBinaryOperatorImpl","sourcecode":"osName == null"},"failures":[],"tindex":"de2fc052-2ead-11e6-bbb9-e30335e20999","method":{"position":"org.apache.commons.lang3.time.DateUtils:353","type":"CtMethodImpl","sourcecode":"private static java.util.Date parseDateWithLeniency(final java.lang.String str, final java.util.Locale locale, final java.lang.String[] parsePatterns, final boolean lenient) throws java.text.ParseException {\n    if (str == null) {\n        throw new java.text.ParseException();\n    } else {\n        {\n            if ((str == null) || (parsePatterns == null)) {\n                throw new java.lang.IllegalArgumentException(\"Date and Patterns must not be null\");\n            } \n            java.text.SimpleDateFormat java.text.SimpleDateFormat;\n            if (locale == null) {\n                parser = new java.text.SimpleDateFormat();\n            } else {\n                parser = new java.text.SimpleDateFormat(\"\" , locale);\n            }\n            parser.setLenient(lenient);\n            final java.text.ParsePosition java.text.ParsePosition = new java.text.ParsePosition(0);\n            for (final java.lang.String java.lang.String : parsePatterns) {\n                java.lang.String java.lang.String = parsePattern;\n                if (parsePattern.endsWith(\"ZZ\")) {\n                    pattern = pattern.substring(0, ((pattern.length()) - 1));\n                } \n                parser.applyPattern(pattern);\n                pos.setIndex(0);\n                java.lang.String java.lang.String = str;\n                if (parsePattern.endsWith(\"ZZ\")) {\n                    str2 = str.replaceAll(\"([-+][0-9][0-9]):([0-9][0-9])$\", \"$1$2\");\n                } \n                final java.util.Date java.util.Date = parser.parse(str2, pos);\n                if ((date != null) && ((pos.getIndex()) == (str2.length()))) {\n                    return date;\n                } \n            }\n            throw new java.text.ParseException((\"Unable to parse the date: \" + str) , (-1));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"osName":"str"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1436","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[171,172],"tindex":"de2fc053-2ead-11e6-bbb9-cd8d0eab8717","method":{"position":"org.apache.commons.lang3.Validate:344","type":"CtMethodImpl","sourcecode":"public static <T extends java.util.Map<?, ?>>T notEmpty(final T map, final java.lang.String message, final java.lang.Object... values) {\n    if (values == null) {\n        {\n            if (map == null) {\n                throw new java.lang.NullPointerException(java.lang.String.format(message, values));\n            } \n            if (map.isEmpty()) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message, values));\n            } \n            return map;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"values"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:863","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(seq)"},"failures":[],"tindex":"de2fe764-2ead-11e6-bbb9-f54fbf55f667","method":{"position":"org.apache.commons.lang3.exception.ContextedException:190","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic org.apache.commons.lang3.exception.ContextedException setContextValue(final java.lang.String label, final java.lang.Object value) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(value)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.exception.ExceptionContext.setContextValue(label, value);\n            return org.apache.commons.lang3.exception.ContextedException.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"seq":"value"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:135","type":"CtFieldReadImpl","sourcecode":"objectsTriviallyEqual"},"failures":[173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,59,59,192,192,60,60,61,61,62,62,21,21,193,193,63,63,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,64,64,217,217,65,65,66,66,67,67,22,22,218,218,68,68,69,69,219,219,70,70,71,71,72,72,23,23,220,220,73,73,74,221,75,76,77,24,222,78,223,223,79,79,80,80,81,81,82,82,83,83,84,84,25,25,26,26,27,27,28,28,29,29,85,85,86,86,87,87,88,88,89,89,90,90,91,91,224,224,92,92,93,93,94,94,95,95,96,96,97,97,98,98,99,99,225,225,100,100,101,101,102,102,226,226,103,103,104,104,105,105,106,106,107,107,108,108,109,109,110,110,111,111,112,112,227,227,228,228,229,229,113,113,114,114,115,115,116,116,117,117,118,118,119,119,120,120,121,121,122,122,123,123,124,124,125,125,126,126,127,127,128,128,129,129,130,130,131,131,30,30,132,132,133,133,134,134,135,135,136,136,137,137,138,138,139,139,140,140,230,230,141,141,142,142,143,143,31,31,231,231,144,144,145,145,232,232,146,146,147,147,148,148,32,32,233,233,149,149,150,150,234,234,151,151,152,152,153,153,33,33,235,235,154,154,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,155,156,157,158,159,160,161,162,163,164,165,166],"tindex":"de2fe765-2ead-11e6-bbb9-ad328b0126d1","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1634","type":"CtMethodImpl","sourcecode":"protected void setUseShortClassName(final boolean useShortClassName) {\n    if (useShortClassName) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.this.boolean = useShortClassName;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsTriviallyEqual":"useShortClassName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:857","type":"CtBinaryOperatorImpl","sourcecode":"(isEquals) == false"},"failures":[262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305],"tindex":"de311fe6-2ead-11e6-bbb9-817ecce58aea","method":{"position":"org.apache.commons.lang3.Validate:104","type":"CtMethodImpl","sourcecode":"public static void isTrue(final boolean expression, final java.lang.String message, final long value) {\n    if (expression == false) {\n        {\n            if (expression == false) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message, java.lang.Long.valueOf(value)));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isEquals":"expression"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:474","type":"CtBinaryOperatorImpl","sourcecode":"input != null"},"failures":[306],"tindex":"de3146f7-2ead-11e6-bbb9-6bb6448d171b","method":{"position":"org.apache.commons.lang3.math.NumberUtils:198","type":"CtMethodImpl","sourcecode":"public static float toFloat(final java.lang.String str) {\n    if (str != null) {\n        {\n            return org.apache.commons.lang3.math.NumberUtils.toFloat(str, 0.0F);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2073","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[307,308,309,310,311,312,313],"tindex":"de3146f8-2ead-11e6-bbb9-a53e3c0e2421","method":{"position":"org.apache.commons.lang3.text.StrBuilder:461","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder append(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == null) {\n                return appendNull();\n            } \n            return append(obj.toString());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:381","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[314,315,316],"tindex":"de316e09-2ead-11e6-bbb9-315cbd063b54","method":{"position":"org.apache.commons.lang3.BooleanUtils:727","type":"CtMethodImpl","sourcecode":"public static boolean toBoolean(final java.lang.String str, final java.lang.String trueString, final java.lang.String falseString) {\n    if (trueString == null) {\n        {\n            if (str == trueString) {\n                return true;\n            } else if (str == falseString) {\n                return false;\n            } else if (str != null) {\n                if (str.equals(trueString)) {\n                    return true;\n                } else if (str.equals(falseString)) {\n                    return false;\n                } \n            } \n            throw new java.lang.IllegalArgumentException(\"The String did not match either specified value\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"trueString"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:430","type":"CtBinaryOperatorImpl","sourcecode":"cls == null"},"failures":[],"tindex":"de316e0a-2ead-11e6-bbb9-cd6d7dce7e23","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:897","type":"CtMethodImpl","sourcecode":"private static java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> getTypeArguments(java.lang.Class<?> cls, final java.lang.Class<?> toClass, final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> subtypeVarAssigns) {\n    if (toClass == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(cls, toClass))) {\n                return null;\n            } \n            if (cls.isPrimitive()) {\n                if (toClass.isPrimitive()) {\n                    return new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>();\n                } \n                cls = org.apache.commons.lang3.ClassUtils.primitiveToWrapper(cls);\n            } \n            final java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = subtypeVarAssigns == null ? new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>() : new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>(subtypeVarAssigns);\n            if (toClass.equals(cls)) {\n                return typeVarAssigns;\n            } \n            return org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(org.apache.commons.lang3.reflect.TypeUtils.getClosestParentType(cls, toClass), toClass, typeVarAssigns);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"toClass"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:702","type":"CtBinaryOperatorImpl","sourcecode":"(isEquals) == false"},"failures":[317,318,319,320,321,322,323],"tindex":"de31951b-2ead-11e6-bbb9-1bda8c365c47","method":{"position":"org.apache.commons.lang3.CharSequenceUtils:187","type":"CtMethodImpl","sourcecode":"static boolean regionMatches(final java.lang.CharSequence cs, final boolean ignoreCase, final int thisStart, final java.lang.CharSequence substring, final int start, final int length) {\n    if (ignoreCase == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((cs instanceof java.lang.String) && (substring instanceof java.lang.String)) {\n                return ((java.lang.String)(cs)).regionMatches(ignoreCase, thisStart, ((java.lang.String)(substring)), start, length);\n            } else {\n                int int = thisStart;\n                int int = start;\n                int int = length;\n                while ((tmpLen--) > 0) {\n                    char char = cs.charAt((index1++));\n                    char char = substring.charAt((index2++));\n                    if (c1 == c2) {\n                        continue;\n                    } \n                    if (!ignoreCase) {\n                        return false;\n                    } \n                    if (((java.lang.Character.toUpperCase(c1)) != (java.lang.Character.toUpperCase(c2))) && ((java.lang.Character.toLowerCase(c1)) != (java.lang.Character.toLowerCase(c2)))) {\n                        return false;\n                    } \n                }\n                return true;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isEquals":"ignoreCase"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1092","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[324,325,326],"tindex":"de31951c-2ead-11e6-bbb9-036e10581190","method":{"position":"org.apache.commons.lang3.ObjectUtils:205","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static int hashCode(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            return obj == null ? 0 : obj.hashCode();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:626","type":"CtInvocationImpl","sourcecode":"stripChars.isEmpty()"},"failures":[327],"tindex":"de31bc2d-2ead-11e6-bbb9-8b722b42993b","method":{"position":"org.apache.commons.lang3.tuple.Triple:157","type":"CtMethodImpl","sourcecode":"public java.lang.String toString(final java.lang.String format) {\n    if (format.isEmpty()) {\n        {\n            return java.lang.String.format(format, getLeft(), getMiddle(), getRight());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"stripChars":"format"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:674","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[],"tindex":"de31bc2e-2ead-11e6-bbb9-79e6706a988f","method":{"position":"org.apache.commons.lang3.time.FastDateParser:577","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nboolean addRegex(final org.apache.commons.lang3.time.FastDateParser parser, final java.lang.StringBuilder regex) {\n    if (regex == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (regex == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    org.apache.commons.lang3.time.FastDateParser.escapeRegex(regex, java.lang.String, true);\n                    return false;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"regex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:1150","type":"CtBinaryOperatorImpl","sourcecode":"(value <= start) || (value >= end)"},"failures":[],"tindex":"de31bc2f-2ead-11e6-bbb9-a75c6122e4d7","method":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:102","type":"CtMethodImpl","sourcecode":"public static double min(final double a, final double b) {\n    if ((a <= a) || (value >= a)) {\n        {\n            if (java.lang.Double.isNaN(a)) {\n                return b;\n            } else if (java.lang.Double.isNaN(b)) {\n                return a;\n            } else {\n                return java.lang.Math.min(a, b);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"a","end":"a","value":"a"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:975","type":"CtBinaryOperatorImpl","sourcecode":"superToString != null"},"failures":[328,329],"tindex":"de31e340-2ead-11e6-bbb9-7b635ddbb964","method":{"position":"org.apache.commons.lang3.StringUtils:7010","type":"CtMethodImpl","sourcecode":"public static double getJaroWinklerDistance(final java.lang.CharSequence first, final java.lang.CharSequence second) {\n    if (second != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final double double = 0.1;\n            if ((first == null) || (second == null)) {\n                throw new java.lang.IllegalArgumentException(\"Strings must not be null\");\n            } \n            final double double = org.apache.commons.lang3.StringUtils.score(first, second);\n            final int int = org.apache.commons.lang3.StringUtils.commonPrefixLength(first, second);\n            final double double = (java.lang.Math.round(((jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))) * 100.0))) / 100.0;\n            return matchScore;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"superToString":"second"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2132","type":"CtBinaryOperatorImpl","sourcecode":"startIndex > endIndex"},"failures":[330,331],"tindex":"de31e341-2ead-11e6-bbb9-c58f0ce2fe7b","method":{"position":"org.apache.commons.lang3.text.StrBuilder:808","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder append(final int value) {\n    if (value > value) {\n        {\n            return append(java.lang.String.valueOf(value));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"value","endIndex":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:498","type":"CtVariableReadImpl","sourcecode":"inLiteral"},"failures":[332,333,334,335],"tindex":"de320a52-2ead-11e6-bbb9-c5a80686191b","method":{"position":"org.apache.commons.lang3.BooleanUtils:881","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(final boolean bool, final java.lang.String trueString, final java.lang.String falseString) {\n    if (bool) {\n        {\n            return bool ? trueString : falseString;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"inLiteral":"bool"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1257","type":"CtBinaryOperatorImpl","sourcecode":"0 == nShorts"},"failures":[263,336,267,269,337,273,275,279],"tindex":"de320a53-2ead-11e6-bbb9-5951e56b29c6","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:752","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic final void appendTo(final java.lang.StringBuffer buffer, final int value) {\n    if (0 == value) {\n        {\n            if (value < 10) {\n                buffer.append(((char)(value + '0')));\n            } else if (value < 100) {\n                buffer.append(((char)((value / 10) + '0')));\n                buffer.append(((char)((value % 10) + '0')));\n            } else {\n                buffer.append(java.lang.Integer.toString(value));\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nShorts":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:468","type":"CtVariableReadImpl","sourcecode":"whitespace"},"failures":[338,339,340,341,342],"tindex":"de320a54-2ead-11e6-bbb9-cbdc6ac5bb4d","method":{"position":"org.apache.commons.lang3.ArrayUtils:2869","type":"CtMethodImpl","sourcecode":"public static int indexOf(final boolean[] array, final boolean valueToFind, int startIndex) {\n    if (valueToFind) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                startIndex = 0;\n            } \n            for (int int = startIndex ; i < (array.int) ; i++) {\n                if (valueToFind == (array[i])) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"whitespace":"valueToFind"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:258","type":"CtInvocationImpl","sourcecode":"java.lang.Float.isNaN(b)"},"failures":[92,92],"tindex":"de323165-2ead-11e6-bbb9-3974fce66844","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:387","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final float value) {\n    if (java.lang.Float.isNaN(value)) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, value);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:507","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"de323166-2ead-11e6-bbb9-2b757f26ee06","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:768","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final int[] array) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, array, null);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.EnumUtils:114","type":"CtBinaryOperatorImpl","sourcecode":"enumName == null"},"failures":[343,344],"tindex":"de325877-2ead-11e6-bbb9-e59d3145c86e","method":{"position":"org.apache.commons.lang3.CharUtils:108","type":"CtMethodImpl","sourcecode":"public static java.lang.Character toCharacterObject(final java.lang.String str) {\n    if (str == null) {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n                return null;\n            } \n            return java.lang.Character.valueOf(str.charAt(0));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumName":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:256","type":"CtBinaryOperatorImpl","sourcecode":"buffer == null"},"failures":[345],"tindex":"de325878-2ead-11e6-bbb9-3333bdb25c41","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:473","type":"CtMethodImpl","sourcecode":"public java.lang.String replace(final java.lang.StringBuffer source) {\n    if (source == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (source == null) {\n                return null;\n            } \n            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(source.length()).append(source);\n            substitute(buf, 0, buf.length());\n            return buf.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"buffer":"source"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1102","type":"CtBinaryOperatorImpl","sourcecode":"c < a"},"failures":[],"tindex":"de327f89-2ead-11e6-bbb9-81fe78f50790","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:506","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.EqualsBuilder append(final long lhs, final long rhs) {\n    if (lhs < lhs) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((boolean) == false) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            boolean = lhs == rhs;\n            return org.apache.commons.lang3.builder.EqualsBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"lhs","c":"lhs"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:265","type":"CtBinaryOperatorImpl","sourcecode":"value == falseValue"},"failures":[346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361],"tindex":"de327f8a-2ead-11e6-bbb9-8f213722e201","method":{"position":"org.apache.commons.lang3.math.Fraction:141","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.math.Fraction getFraction(int numerator, int denominator) {\n    if (numerator == denominator) {\n        {\n            if (denominator == 0) {\n                throw new java.lang.ArithmeticException(\"The denominator must not be zero\");\n            } \n            if (denominator < 0) {\n                if ((numerator == (java.lang.Integer.java.lang.Integer.int)) || (denominator == (java.lang.Integer.java.lang.Integer.int))) {\n                    throw new java.lang.ArithmeticException(\"overflow: can't negate\");\n                } \n                numerator = -numerator;\n                denominator = -denominator;\n            } \n            return new org.apache.commons.lang3.math.Fraction(numerator , denominator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"falseValue":"denominator","value":"numerator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:623","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"de32a69b-2ead-11e6-bbb9-318924d31f7f","method":{"position":"org.apache.commons.lang3.time.FastDateParser:577","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nboolean addRegex(final org.apache.commons.lang3.time.FastDateParser parser, final java.lang.StringBuilder regex) {\n    if (regex == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (regex == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    org.apache.commons.lang3.time.FastDateParser.escapeRegex(regex, java.lang.String, true);\n                    return false;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"regex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:456","type":"CtBinaryOperatorImpl","sourcecode":"throwable == null"},"failures":[362],"tindex":"de32a69c-2ead-11e6-bbb9-c5e71145a07d","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:233","type":"CtMethodImpl","sourcecode":"public static int getThrowableCount(final java.lang.Throwable throwable) {\n    if (throwable == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.exception.ExceptionUtils.getThrowableList(throwable).size();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"throwable":"throwable"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.text.ParseException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2100","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"de32a69d-2ead-11e6-bbb9-bffeb7079362","method":{"position":"org.apache.commons.lang3.text.CompositeFormat:112","type":"CtMethodImpl","sourcecode":"public java.lang.String reformat(final java.lang.String input) throws java.text.ParseException {\n    if (input == null) {\n        throw new java.text.ParseException();\n    } else {\n        {\n            return format(parseObject(input));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"input"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:355","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"de32cdae-2ead-11e6-bbb9-699196e6681d","method":{"position":"org.apache.commons.lang3.ArrayUtils:5591","type":"CtMethodImpl","sourcecode":"public static char[] removeAll(final char[] array, final int... indices) {\n    if (indices == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((char[])(org.apache.commons.lang3.ArrayUtils.removeAll(((java.lang.Object)(array)), org.apache.commons.lang3.ArrayUtils.clone(indices))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"indices"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:653","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[],"tindex":"de32cdaf-2ead-11e6-bbb9-1ba1970fbacc","method":{"position":"org.apache.commons.lang3.time.FastDateParser:772","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nboolean addRegex(final org.apache.commons.lang3.time.FastDateParser parser, final java.lang.StringBuilder regex) {\n    if (regex == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            regex.append(java.lang.String);\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"regex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:978","type":"CtBinaryOperatorImpl","sourcecode":"((org.apache.commons.lang3.time.DateUtils.MODIFY_TRUNCATE) == modType) || (millisecs < 500)"},"failures":[],"tindex":"de32cdb0-2ead-11e6-bbb9-3fd7c9e6407a","method":{"position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:103","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean translate(final int codepoint, final java.io.Writer out) throws java.io.IOException {\n    if ((codepoint == codepoint) || (codepoint < 500)) {\n        {\n            if (boolean) {\n                if ((codepoint < (int)) || (codepoint > (int))) {\n                    return false;\n                } \n            } else {\n                if ((codepoint >= (int)) && (codepoint <= (int))) {\n                    return false;\n                } \n            }\n            out.write(\"&#\");\n            out.write(java.lang.Integer.toString(codepoint, 10));\n            out.write(';');\n            return true;\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"modType":"codepoint","millisecs":"codepoint","org.apache.commons.lang3.time.DateUtils.MODIFY_TRUNCATE":"codepoint"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:557","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[363,364],"tindex":"de331bd1-2ead-11e6-bbb9-4589d06177cf","method":{"position":"org.apache.commons.lang3.CharSetUtils:205","type":"CtMethodImpl","sourcecode":"public static java.lang.String delete(final java.lang.String str, final java.lang.String... set) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.CharSetUtils.deepEmpty(set))) {\n                return str;\n            } \n            return org.apache.commons.lang3.CharSetUtils.modify(str, set, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:958","type":"CtBinaryOperatorImpl","sourcecode":"startIndexInclusive < 0"},"failures":[365],"tindex":"de3342e2-2ead-11e6-bbb9-5dbdcbcffe9c","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2424","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final char ch, int startIndex) {\n    if (startIndex < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            startIndex = startIndex >= (int) ? (int) - 1 : startIndex;\n            if (startIndex < 0) {\n                return -1;\n            } \n            for (int int = startIndex ; i >= 0 ; i--) {\n                if ((char[][i]) == ch) {\n                    return i;\n                } \n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndexInclusive":"startIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:728","type":"CtBinaryOperatorImpl","sourcecode":"(comparison) != 0"},"failures":[],"tindex":"de3342e3-2ead-11e6-bbb9-09ac7390b8ec","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:755","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final int value) {\n    if (value != 0) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, value);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparison":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:799","type":"CtBinaryOperatorImpl","sourcecode":"nestedVarCount == 0"},"failures":[366],"tindex":"de3369f4-2ead-11e6-bbb9-3d96570a5ac8","method":{"position":"org.apache.commons.lang3.Validate:659","type":"CtMethodImpl","sourcecode":"public static <T>T[] validIndex(final T[] array, final int index) {\n    if (index == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.Validate.validIndex(array, index, org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.java.lang.String, java.lang.Integer.valueOf(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nestedVarCount":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5660","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[74,221,75,76,77,24,222,78],"tindex":"de3369f5-2ead-11e6-bbb9-c15000d0c13c","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:492","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setSizeEndText(final java.lang.String sizeEndText) {\n    if (sizeEndText == null) {\n        {\n            super.setSizeEndText(sizeEndText);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"sizeEndText"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:669","type":"CtInvocationImpl","sourcecode":"str.equals(falseString)"},"failures":[367],"tindex":"de3369f6-2ead-11e6-bbb9-bb57ce042958","method":{"position":"org.apache.commons.lang3.Validate:922","type":"CtMethodImpl","sourcecode":"public static <T>void inclusiveBetween(final T start, final T end, final java.lang.Comparable<T> value, final java.lang.String message, final java.lang.Object... values) {\n    if (message.equals(message)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((value.compareTo(start)) < 0) || ((value.compareTo(end)) > 0)) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message, values));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"message","falseString":"message"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:258","type":"CtInvocationImpl","sourcecode":"java.lang.Float.isNaN(b)"},"failures":[],"tindex":"de339107-2ead-11e6-bbb9-373dd8de7cb2","method":{"position":"org.apache.commons.lang3.ArrayUtils:2790","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final float[] array, final float valueToFind) {\n    if (java.lang.Float.isNaN(valueToFind)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.java.lang.Integer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"valueToFind"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:371","type":"CtInvocationImpl","sourcecode":"value.equals(nullValue)"},"failures":[368],"tindex":"de339108-2ead-11e6-bbb9-3f5e95777590","method":{"position":"org.apache.commons.lang3.BooleanUtils:238","type":"CtMethodImpl","sourcecode":"public static java.lang.Boolean toBooleanObject(final java.lang.Integer value) {\n    if (value.equals(value)) {\n        {\n            if (value == null) {\n                return null;\n            } \n            return (value.intValue()) == 0 ? java.lang.Boolean.java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value","nullValue":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BitField:42","type":"CtBinaryOperatorImpl","sourcecode":"bit_pattern != 0"},"failures":[369],"tindex":"de339109-2ead-11e6-bbb9-f1d34b7df33b","method":{"position":"org.apache.commons.lang3.StringUtils:2206","type":"CtMethodImpl","sourcecode":"public static java.lang.String right(final java.lang.String str, final int len) {\n    if (len != 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return null;\n            } \n            if (len < 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            if ((str.length()) <= len) {\n                return str;\n            } \n            return str.substring(((str.length()) - len));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bit_pattern":"len"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:159","type":"CtBinaryOperatorImpl","sourcecode":"(ex.getCause()) instanceof java.lang.RuntimeException"},"failures":[370,371,372,373],"tindex":"de33b81a-2ead-11e6-bbb9-c56837369560","method":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:81","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.concurrent.ConcurrentRuntimeException extractCauseUnchecked(final java.util.concurrent.ExecutionException ex) {\n    if ((ex.getCause()) instanceof java.lang.RuntimeException) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((ex == null) || ((ex.getCause()) == null)) {\n                return null;\n            } \n            org.apache.commons.lang3.concurrent.ConcurrentUtils.throwCause(ex);\n            return new org.apache.commons.lang3.concurrent.ConcurrentRuntimeException(ex.getMessage() , ex.getCause());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ex":"ex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDateParser:282","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[374],"tindex":"de33b81b-2ead-11e6-bbb9-a350a23949c0","method":{"position":"org.apache.commons.lang3.time.DateUtils:155","type":"CtMethodImpl","sourcecode":"public static boolean isSameDay(final java.util.Date date1, final java.util.Date date2) {\n    if (date2 == null) {\n        {\n            if ((date1 == null) || (date2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            final java.util.Calendar java.util.Calendar = java.util.Calendar.getInstance();\n            cal1.setTime(date1);\n            final java.util.Calendar java.util.Calendar = java.util.Calendar.getInstance();\n            cal2.setTime(date2);\n            return org.apache.commons.lang3.time.DateUtils.isSameDay(cal1, cal2);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:795","type":"CtBinaryOperatorImpl","sourcecode":"endMatchLen == 0"},"failures":[375],"tindex":"de33df2c-2ead-11e6-bbb9-bf5362318cfe","method":{"position":"org.apache.commons.lang3.Conversion:1221","type":"CtMethodImpl","sourcecode":"public static short[] longToShortArray(final long src, final int srcPos, final short[] dst, final int dstPos, final int nShorts) {\n    if (nShorts == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (0 == nShorts) {\n                return dst;\n            } \n            if ((((nShorts - 1) * 16) + srcPos) >= 64) {\n                throw new java.lang.IllegalArgumentException(\"(nShorts-1)*16+srcPos is greather or equal to than 64\");\n            } \n            int int = 0;\n            for (int int = 0 ; i < nShorts ; i++) {\n                shift = (i * 16) + srcPos;\n                dst[(dstPos + i)] = ((short)(65535 & (src >> shift)));\n            }\n            return dst;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"endMatchLen":"nShorts"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1506","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[376],"tindex":"de33df2d-2ead-11e6-bbb9-b9cd69604531","method":{"position":"org.apache.commons.lang3.ArrayUtils:5355","type":"CtMethodImpl","sourcecode":"public static byte[] removeElements(final byte[] array, final byte... values) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            final java.util.HashMap<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt> java.util.HashMap<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt> = new java.util.HashMap<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt>(values.int);\n            for (final byte byte : values) {\n                final java.lang.Byte java.lang.Byte = java.lang.Byte.valueOf(v);\n                final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = occurrences.get(boxed);\n                if (count == null) {\n                    occurrences.put(boxed, new org.apache.commons.lang3.mutable.MutableInt(1));\n                } else {\n                    count.increment();\n                }\n            }\n            final java.util.BitSet java.util.BitSet = new java.util.BitSet();\n            for (final java.util.Map.Entry<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt> java.util.Map.Entry<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt> : occurrences.entrySet()) {\n                final java.lang.Byte java.lang.Byte = e.getKey();\n                int int = 0;\n                for (int int = 0, int int = e.getValue().intValue() ; i < ct ; i++) {\n                    found = org.apache.commons.lang3.ArrayUtils.indexOf(array, v.byteValue(), found);\n                    if (found < 0) {\n                        break;\n                    } \n                    toRemove.set((found++));\n                }\n            }\n            return ((byte[])(org.apache.commons.lang3.ArrayUtils.removeAll(array, toRemove)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:962","type":"CtBinaryOperatorImpl","sourcecode":"field == (java.util.Calendar.MILLISECOND)"},"failures":[377],"tindex":"de34063e-2ead-11e6-bbb9-efaf75999f23","method":{"position":"org.apache.commons.lang3.ArrayUtils:4178","type":"CtMethodImpl","sourcecode":"public static int[] add(final int[] array, final int element) {\n    if (element == element) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int[] int[] = ((int[])(org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(array, java.lang.Integer.java.lang.Integer.java.lang.Class<java.lang.Integer>)));\n            newArray[((newArray.int) - 1)] = element;\n            return newArray;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"element","java.util.Calendar.MILLISECOND":"element"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:738","type":"CtBinaryOperatorImpl","sourcecode":"rhs == null"},"failures":[378],"tindex":"de34063f-2ead-11e6-bbb9-2dea636bce01","method":{"position":"org.apache.commons.lang3.ArrayUtils:3878","type":"CtMethodImpl","sourcecode":"public static int[] addAll(final int[] array1, final int... array2) {\n    if (array1 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array1 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array2);\n            } else if (array2 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array1);\n            } \n            final int[] int[] = new int[(array1.int) + (array2.int)];\n            java.lang.System.arraycopy(array1, 0, joinedArray, 0, array1.int);\n            java.lang.System.arraycopy(array2, 0, joinedArray, array1.int, array2.int);\n            return joinedArray;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"rhs":"array1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3252","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[379],"tindex":"de342d50-2ead-11e6-bbb9-b55c4423f6d8","method":{"position":"org.apache.commons.lang3.ArrayUtils:3229","type":"CtMethodImpl","sourcecode":"public static byte[] toPrimitive(final java.lang.Byte[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.byte[];\n            } \n            final byte[] byte[] = new byte[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = array[i].byteValue();\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:623","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[322],"tindex":"de342d51-2ead-11e6-bbb9-05f834fbb0aa","method":{"position":"org.apache.commons.lang3.StringUtils:7388","type":"CtMethodImpl","sourcecode":"public static boolean endsWithAny(final java.lang.CharSequence string, final java.lang.CharSequence... searchStrings) {\n    if (string == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(string)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(searchStrings))) {\n                return false;\n            } \n            for (final java.lang.CharSequence java.lang.CharSequence : searchStrings) {\n                if (org.apache.commons.lang3.StringUtils.endsWith(string, searchString)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"string"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:595","type":"CtBinaryOperatorImpl","sourcecode":"(((ch0 == 'o') || (ch0 == 'O')) && ((ch1 == 'f') || (ch1 == 'F'))) && ((ch2 == 'f') || (ch2 == 'F'))"},"failures":[],"tindex":"de345462-2ead-11e6-bbb9-bf74c18d5216","method":{"position":"org.apache.commons.lang3.StringUtils:2930","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] splitPreserveAllTokens(final java.lang.String str, final char separatorChar) {\n    if ((((separatorChar == 'o') || (ch0 == 'O')) && ((separatorChar == 'f') || (ch1 == 'F'))) && ((separatorChar == 'f') || (ch2 == 'F'))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.splitWorker(str, separatorChar, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch0":"separatorChar","ch2":"separatorChar","ch1":"separatorChar"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:205","type":"CtBinaryOperatorImpl","sourcecode":"length > (size)"},"failures":[380,381],"tindex":"de345463-2ead-11e6-bbb9-43f76ed73697","method":{"position":"org.apache.commons.lang3.StringUtils:1025","type":"CtMethodImpl","sourcecode":"private static int ordinalIndexOf(final java.lang.CharSequence str, final java.lang.CharSequence searchStr, final int ordinal, final boolean lastIndex) {\n    if (ordinal > ordinal) {\n        {\n            if (((str == null) || (searchStr == null)) || (ordinal <= 0)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            if ((searchStr.length()) == 0) {\n                return lastIndex ? str.length() : 0;\n            } \n            int int = 0;\n            int int = lastIndex ? str.length() : org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            do {\n                if (lastIndex) {\n                    index = org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(str, searchStr, (index - 1));\n                } else {\n                    index = org.apache.commons.lang3.CharSequenceUtils.indexOf(str, searchStr, (index + 1));\n                }\n                if (index < 0) {\n                    return index;\n                } \n                found++;\n            } while (found < ordinal );\n            return index;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"ordinal","length":"ordinal"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5558","type":"CtBinaryOperatorImpl","sourcecode":"pads <= 0"},"failures":[382],"tindex":"de347b74-2ead-11e6-bbb9-6f312d0fe5df","method":{"position":"org.apache.commons.lang3.time.DateUtils:1516","type":"CtMethodImpl","sourcecode":"public static long getFragmentInSeconds(final java.util.Calendar calendar, final int fragment) {\n    if (fragment <= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pads":"fragment"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:795","type":"CtBinaryOperatorImpl","sourcecode":"cs1 == cs2"},"failures":[],"tindex":"de347b75-2ead-11e6-bbb9-bd50465cabde","method":{"position":"org.apache.commons.lang3.StringUtils:1191","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final java.lang.CharSequence seq, final int searchChar, final int startPos) {\n    if (seq == seq) {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(seq)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            return org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(seq, searchChar, startPos);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs1":"seq","cs2":"seq"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:774","type":"CtBinaryOperatorImpl","sourcecode":"lhs == null"},"failures":[383],"tindex":"de347b76-2ead-11e6-bbb9-4309ba00bc1a","method":{"position":"org.apache.commons.lang3.ArrayUtils:5161","type":"CtMethodImpl","sourcecode":"public static short[] removeElement(final short[] array, final short element) {\n    if (array == null) {\n        {\n            final int int = org.apache.commons.lang3.ArrayUtils.indexOf(array, element);\n            if (index == (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int)) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            return org.apache.commons.lang3.ArrayUtils.remove(array, index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:262","type":"CtUnaryOperatorImpl","sourcecode":"!(java.util.Arrays.equals(lhs, rhs))"},"failures":[],"tindex":"de34a287-2ead-11e6-bbb9-5d5695e2f5d7","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1195","type":"CtMethodImpl","sourcecode":"protected void appendSummary(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final byte[] array) {\n    if (!(java.util.Arrays.equals(array, array))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendSummarySize(buffer, fieldName, array.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array","rhs":"array"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:448","type":"CtBinaryOperatorImpl","sourcecode":"fromTypeVarAssigns == null"},"failures":[],"tindex":"de34a288-2ead-11e6-bbb9-1f4d63d54701","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1214","type":"CtMethodImpl","sourcecode":"public static boolean typesSatisfyVariables(final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> typeVarAssigns) {\n    if (typeVarAssigns == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.notNull(typeVarAssigns, \"typeVarAssigns is null\");\n            for (final java.util.Map.Entry<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map.Entry<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> : typeVarAssigns.entrySet()) {\n                final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = entry.getKey();\n                final java.lang.reflect.Type java.lang.reflect.Type = entry.getValue();\n                for (final java.lang.reflect.Type java.lang.reflect.Type : org.apache.commons.lang3.reflect.TypeUtils.getImplicitBounds(typeVar)) {\n                    if (!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(type, org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(bound, typeVarAssigns), typeVarAssigns))) {\n                        return false;\n                    } \n                }\n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fromTypeVarAssigns":"typeVarAssigns"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:654","type":"CtBinaryOperatorImpl","sourcecode":"lhs == null"},"failures":[384,385],"tindex":"de34a289-2ead-11e6-bbb9-090c59f86e95","method":{"position":"org.apache.commons.lang3.ArrayUtils:1435","type":"CtMethodImpl","sourcecode":"public static void reverse(final java.lang.Object[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return ;\n            } \n            org.apache.commons.lang3.ArrayUtils.reverse(array, 0, array.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:690","type":"CtBinaryOperatorImpl","sourcecode":"(((nInts - 1) * 32) + dstPos) >= 64"},"failures":[],"tindex":"de34c99a-2ead-11e6-bbb9-0f0e0ffa28b7","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:288","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.time.FastDateFormat getTimeInstance(final int style, final java.util.TimeZone timeZone, final java.util.Locale locale) {\n    if ((((style - 1) * 32) + style) >= 64) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getTimeInstance(style, timeZone, locale);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dstPos":"style","nInts":"style"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2182","type":"CtBinaryOperatorImpl","sourcecode":"length >= (size)"},"failures":[],"tindex":"de34c99b-2ead-11e6-bbb9-bf19c1c770f3","method":{"position":"org.apache.commons.lang3.ArrayUtils:5002","type":"CtMethodImpl","sourcecode":"public static int[] remove(final int[] array, final int index) {\n    if (index >= index) {\n        {\n            return ((int[])(org.apache.commons.lang3.ArrayUtils.remove(((java.lang.Object)(array)), index)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"index","length":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:636","type":"CtBinaryOperatorImpl","sourcecode":"cls == null"},"failures":[],"tindex":"de34c99c-2ead-11e6-bbb9-5b3b597ac64f","method":{"position":"org.apache.commons.lang3.ClassUtils:1027","type":"CtMethodImpl","sourcecode":"public static java.lang.String getShortCanonicalName(final java.lang.Class<?> cls) {\n    if (cls == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (cls == null) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            return org.apache.commons.lang3.ClassUtils.getShortCanonicalName(cls.getName());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"cls"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:894","type":"CtBinaryOperatorImpl","sourcecode":"lhs == null"},"failures":[386,387],"tindex":"de34f0ad-2ead-11e6-bbb9-0f2eb2a13d0b","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1029","type":"CtMethodImpl","sourcecode":"public static double max(final double[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.math.NumberUtils.validateArray(array);\n            double double = array[0];\n            for (int int = 1 ; j < (array.int) ; j++) {\n                if (java.lang.Double.isNaN(array[j])) {\n                    return java.lang.Double.java.lang.Double.double;\n                } \n                if ((array[j]) > max) {\n                    max = array[j];\n                } \n            }\n            return max;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:358","type":"CtBinaryOperatorImpl","sourcecode":"trueValue == null"},"failures":[388,389],"tindex":"de34f0ae-2ead-11e6-bbb9-7f6053dc02b4","method":{"position":"org.apache.commons.lang3.BooleanUtils:356","type":"CtMethodImpl","sourcecode":"public static java.lang.Boolean toBooleanObject(final java.lang.Integer value, final java.lang.Integer trueValue, final java.lang.Integer falseValue, final java.lang.Integer nullValue) {\n    if (value == null) {\n        {\n            if (value == null) {\n                if (trueValue == null) {\n                    return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                } \n                if (falseValue == null) {\n                    return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                } \n                if (nullValue == null) {\n                    return null;\n                } \n            } else if (value.equals(trueValue)) {\n                return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n            } else if (value.equals(falseValue)) {\n                return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n            } else if (value.equals(nullValue)) {\n                return null;\n            } \n            throw new java.lang.IllegalArgumentException(\"The Integer did not match any specified value\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trueValue":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1267","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.Class<?>"},"failures":[390],"tindex":"de3517bf-2ead-11e6-bbb9-b9e9ac29f230","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1335","type":"CtMethodImpl","sourcecode":"public static boolean isArrayType(final java.lang.reflect.Type type) {\n    if (type instanceof java.lang.Class<?>) {\n        {\n            return (type instanceof java.lang.reflect.GenericArrayType) || ((type instanceof java.lang.Class<?>) && (((java.lang.Class<?>)(type)).isArray()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:705","type":"CtBinaryOperatorImpl","sourcecode":"length > 0"},"failures":[391],"tindex":"de3517c0-2ead-11e6-bbb9-07361c0a3fdb","method":{"position":"org.apache.commons.lang3.time.DateUtils:629","type":"CtMethodImpl","sourcecode":"public static java.util.Date setMilliseconds(final java.util.Date date, final int amount) {\n    if (amount > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateUtils.set(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"amount"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:795","type":"CtBinaryOperatorImpl","sourcecode":"(isEquals) == false"},"failures":[81,83,83,84,25,26,27,27,28,28,29,85,86,87,88,89,90,90,91,91,224,92,93,94,94,95,96,97,98,98,99,225,100,101,101,102,102,226,226,103,104,105,105,106,106,107,107,108,108,109,109,110,110,111,111,112,227,228,229,229,113,113,114,114,115,116,116,117,118,119,119,120,120,121,121,122,123,123,124,125,125,126,127,128,129,129,130,131,131,30,132,133,133,134,134,135,136,136,137,137,138,139,139,231],"tindex":"de3565e1-2ead-11e6-bbb9-b1e1d1421065","method":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:635","type":"CtMethodImpl","sourcecode":"public void setAppendTransients(final boolean appendTransients) {\n    if (appendTransients == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.boolean = appendTransients;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isEquals":"appendTransients"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomStringUtils:329","type":"CtBinaryOperatorImpl","sourcecode":"chars == null"},"failures":[392,393,394,395],"tindex":"de358cf2-2ead-11e6-bbb9-5daecb5827e4","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:398","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final java.lang.Object lhs, final java.lang.Object rhs, final java.util.Comparator<?> comparator) {\n    if (lhs == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == null) {\n                int = -1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (rhs == null) {\n                int = +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs.getClass().isArray()) {\n                if (lhs instanceof long[]) {\n                    append(((long[])(lhs)), ((long[])(rhs)));\n                } else if (lhs instanceof int[]) {\n                    append(((int[])(lhs)), ((int[])(rhs)));\n                } else if (lhs instanceof short[]) {\n                    append(((short[])(lhs)), ((short[])(rhs)));\n                } else if (lhs instanceof char[]) {\n                    append(((char[])(lhs)), ((char[])(rhs)));\n                } else if (lhs instanceof byte[]) {\n                    append(((byte[])(lhs)), ((byte[])(rhs)));\n                } else if (lhs instanceof double[]) {\n                    append(((double[])(lhs)), ((double[])(rhs)));\n                } else if (lhs instanceof float[]) {\n                    append(((float[])(lhs)), ((float[])(rhs)));\n                } else if (lhs instanceof boolean[]) {\n                    append(((boolean[])(lhs)), ((boolean[])(rhs)));\n                } else {\n                    append(((java.lang.Object[])(lhs)), ((java.lang.Object[])(rhs)), comparator);\n                }\n            } else {\n                if (comparator == null) {\n                    @java.lang.SuppressWarnings(value = \"unchecked\")\n                    final java.lang.Comparable<java.lang.Object> java.lang.Comparable<java.lang.Object> = ((java.lang.Comparable<java.lang.Object>)(lhs));\n                    int = comparable.compareTo(rhs);\n                } else {\n                    @java.lang.SuppressWarnings(value = \"unchecked\")\n                    final java.util.Comparator<java.lang.Object> java.util.Comparator<java.lang.Object> = ((java.util.Comparator<java.lang.Object>)(comparator));\n                    int = comparator2.compare(lhs, rhs);\n                }\n            }\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chars":"lhs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:104","type":"CtFieldReadImpl","sourcecode":"between"},"failures":[],"tindex":"de35b403-2ead-11e6-bbb9-0bce3eea12c6","method":{"position":"org.apache.commons.lang3.Validate:802","type":"CtMethodImpl","sourcecode":"public static void validState(final boolean expression) {\n    if (expression) {\n        {\n            if (expression == false) {\n                throw new java.lang.IllegalStateException(org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.java.lang.String);\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"between":"expression"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:931","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[],"tindex":"de35db14-2ead-11e6-bbb9-3b926777af69","method":{"position":"org.apache.commons.lang3.ArrayUtils:2747","type":"CtMethodImpl","sourcecode":"public static int indexOf(final float[] array, final float valueToFind) {\n    if (array == array) {\n        {\n            return org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array","rhs":"array"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2980","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[396],"tindex":"de35db15-2ead-11e6-bbb9-9563eadbec46","method":{"position":"org.apache.commons.lang3.ArrayUtils:752","type":"CtMethodImpl","sourcecode":"public static java.lang.Character[] nullToEmpty(final java.lang.Character[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((array == null) || ((array.int) == 0)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Character[];\n            } \n            return array;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3234","type":"CtBinaryOperatorImpl","sourcecode":"type == currentType"},"failures":[],"tindex":"de35db16-2ead-11e6-bbb9-8543b1765727","method":{"position":"org.apache.commons.lang3.StringUtils:2803","type":"CtMethodImpl","sourcecode":"private static java.lang.String[] splitByWholeSeparatorWorker(final java.lang.String str, final java.lang.String separator, final int max, final boolean preserveAllTokens) {\n    if (max == max) {\n        {\n            if (str == null) {\n                return null;\n            } \n            final int int = str.length();\n            if (len == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.String[];\n            } \n            if ((separator == null) || (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String.equals(separator))) {\n                return org.apache.commons.lang3.StringUtils.splitWorker(str, null, max, preserveAllTokens);\n            } \n            final int int = separator.length();\n            final java.util.ArrayList<java.lang.String> java.util.ArrayList<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n            int int = 0;\n            int int = 0;\n            int int = 0;\n            while (end < len) {\n                end = str.indexOf(separator, beg);\n                if (end > (-1)) {\n                    if (end > beg) {\n                        numberOfSubstrings += 1;\n                        if (numberOfSubstrings == max) {\n                            end = len;\n                            substrings.add(str.substring(beg));\n                        } else {\n                            substrings.add(str.substring(beg, end));\n                            beg = end + separatorLength;\n                        }\n                    } else {\n                        if (preserveAllTokens) {\n                            numberOfSubstrings += 1;\n                            if (numberOfSubstrings == max) {\n                                end = len;\n                                substrings.add(str.substring(beg));\n                            } else {\n                                substrings.add(org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String);\n                            }\n                        } \n                        beg = end + separatorLength;\n                    }\n                } else {\n                    substrings.add(str.substring(beg));\n                    end = len;\n                }\n            }\n            return substrings.toArray(new java.lang.String[substrings.size()]);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"currentType":"max","type":"max"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1506","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[397,398,399],"tindex":"de360227-2ead-11e6-bbb9-9554df3191a4","method":{"position":"org.apache.commons.lang3.ArrayUtils:2420","type":"CtMethodImpl","sourcecode":"public static int indexOf(final byte[] array, final byte valueToFind) {\n    if (array == null) {\n        {\n            return org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:240","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.CharUtils.isAsciiNumeric(ch)) == false"},"failures":[],"tindex":"de360228-2ead-11e6-bbb9-7bc1d7cc8ff5","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:928","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrTokenizer setQuoteChar(final char quote) {\n    if ((org.apache.commons.lang3.CharUtils.isAsciiNumeric(quote)) == false) {\n        {\n            return setQuoteMatcher(org.apache.commons.lang3.text.StrMatcher.charMatcher(quote));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"quote"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6767","type":"CtBinaryOperatorImpl","sourcecode":"m == 0"},"failures":[],"tindex":"de362939-2ead-11e6-bbb9-db162c1e16e7","method":{"position":"org.apache.commons.lang3.time.FastDateParser:801","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nint modify(final int iValue) {\n    if (iValue == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return iValue - 1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"m":"iValue"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:530","type":"CtBinaryOperatorImpl","sourcecode":"((dec == null) && (exp == null)) && ((((numeric.charAt(0)) == '-') && (org.apache.commons.lang3.math.NumberUtils.isDigits(numeric.substring(1)))) || (org.apache.commons.lang3.math.NumberUtils.isDigits(numeric)))"},"failures":[],"tindex":"de36293a-2ead-11e6-bbb9-39d2b919850d","method":{"position":"org.apache.commons.lang3.math.NumberUtils:273","type":"CtMethodImpl","sourcecode":"public static double toDouble(final java.lang.String str, final double defaultValue) {\n    if (((str == null) && (str == null)) && ((((str.charAt(0)) == '-') && (org.apache.commons.lang3.math.NumberUtils.isDigits(numeric.substring(1)))) || (org.apache.commons.lang3.math.NumberUtils.isDigits(numeric)))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return defaultValue;\n            } \n            try {\n                return java.lang.Double.parseDouble(str);\n            } catch (final java.lang.NumberFormatException nfe) {\n                return defaultValue;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dec":"str","numeric":"str","exp":"str"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.JavaVersion:140","type":"CtInvocationImpl","sourcecode":"\"1.4\".equals(nom)"},"failures":[400,401,402],"tindex":"de36293b-2ead-11e6-bbb9-b5b98d2ea8fb","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:666","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static final java.lang.String escapeXml(final java.lang.String input) {\n    if (\"1.4\".equals(input)) {\n        {\n            return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nom":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3916","type":"CtBinaryOperatorImpl","sourcecode":"i > startIndex"},"failures":[403,404,405,406,407,408,409,410,411,412,413,414,415,416,417],"tindex":"de36504c-2ead-11e6-bbb9-ad7a25626ab6","method":{"position":"org.apache.commons.lang3.text.StrBuilder:595","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder append(final java.lang.StringBuffer str, final int startIndex, final int length) {\n    if (length > length) {\n        {\n            if (str == null) {\n                return appendNull();\n            } \n            if ((startIndex < 0) || (startIndex > (str.length()))) {\n                throw new java.lang.StringIndexOutOfBoundsException(\"startIndex must be valid\");\n            } \n            if ((length < 0) || ((startIndex + length) > (str.length()))) {\n                throw new java.lang.StringIndexOutOfBoundsException(\"length must be valid\");\n            } \n            if (length > 0) {\n                final int int = length();\n                ensureCapacity((len + length));\n                str.getChars(startIndex, (startIndex + length), char[], len);\n                int += length;\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"length","i":"length"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1040","type":"CtBinaryOperatorImpl","sourcecode":"suffixMatcher == null"},"failures":[403,404,418,405,419,406,407,420,408,421,422,423,409,410,424,425,426,427,345,411,428,429,412,430,431,413,432,414,433,434,435,415,436,437,438,439,440,441,442],"tindex":"de36504d-2ead-11e6-bbb9-43c5eea362f9","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1039","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrSubstitutor setVariableSuffixMatcher(final org.apache.commons.lang3.text.StrMatcher suffixMatcher) {\n    if (suffixMatcher == null) {\n        {\n            if (suffixMatcher == null) {\n                throw new java.lang.IllegalArgumentException(\"Variable suffix matcher must not be null!\");\n            } \n            org.apache.commons.lang3.text.StrSubstitutor.this.org.apache.commons.lang3.text.StrMatcher = suffixMatcher;\n            return org.apache.commons.lang3.text.StrSubstitutor.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"suffixMatcher":"suffixMatcher"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}