{"failureDictionary":{"org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayOfShorts":74,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteFirst_String":181,"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":156,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":221,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":335,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringString":216,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":331,"org.apache.commons.lang3.math.NumberUtilsTest.testLang381":193,"org.apache.commons.lang3.RangeTest.testIsEndedBy":285,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveBooleanArray":233,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":20,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":55,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":157,"org.apache.commons.lang3.RangeTest.testGetMaximum":299,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":109,"org.apache.commons.lang3.time.FastDatePrinterTest.testMilleniumBug":185,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":27,"org.apache.commons.lang3.CharSetTest.testHashCode":204,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":330,"org.apache.commons.lang3.builder.DiffResultTest.testListIsNonModifiable":312,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testSimpleDate":9,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayBoolean":148,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":259,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":108,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddDash":196,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":263,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":34,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_object_emptyInput":255,"org.apache.commons.lang3.StringUtilsTest.testSplitByCharacterType":273,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":165,"org.apache.commons.lang3.ArrayUtilsTest.testSameLengthChar":182,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOfLang294":179,"org.apache.commons.lang3.EnumUtilsTest.test_processBitVectors":91,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":31,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":13,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":154,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePartialString_noReplace":343,"org.apache.commons.lang3.RangeTest.testToString":287,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringStringarray":215,"org.apache.commons.lang3.builder.DiffResultTest.testNullRhs":316,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":43,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":325,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":341,"org.apache.commons.lang3.RangeTest.testIsBeforeRange":288,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":261,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":120,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEqualsHashcode":96,"org.apache.commons.lang3.StringUtilsTest.testPrependIfMissingIgnoreCase":47,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":130,"org.apache.commons.lang3.StringUtilsTest.testChomp":177,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":327,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":112,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondFragmentInLargerUnitWithCalendar":78,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":35,"org.apache.commons.lang3.math.FractionTest.testMultiply":7,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang303":187,"org.apache.commons.lang3.reflect.TypeLiteralTest.testEquals":321,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetRawType":324,"org.apache.commons.lang3.time.FastDateFormatTest.testDateDefaults":249,"org.apache.commons.lang3.EnumUtilsTest.test_generateBitVectorsFromArray":92,"org.apache.commons.lang3.builder.EqualsBuilderTest.testFloat":272,"org.apache.commons.lang3.ArrayUtilsTest.testReverseLong":95,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyFloatObjectNull":89,"org.apache.commons.lang3.CharSetTest.testEquals_Object":199,"org.apache.commons.lang3.BitFieldTest.testSetValue":251,"org.apache.commons.lang3.reflect.TypeLiteralTest.testBasic":49,"org.apache.commons.lang3.exception.ContextedExceptionTest.testAddContextValue":67,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringStringarray":212,"org.apache.commons.lang3.exception.ContextedExceptionTest.testJavaSerialization":68,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":107,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringString":209,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":17,"org.apache.commons.lang3.time.FastDatePrinterTest.testSimpleDate":183,"org.apache.commons.lang3.math.FractionTest.testDivide":6,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":23,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinuteFragmentInLargerUnitWithCalendar":76,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testJavaSerialization":64,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":32,"org.apache.commons.lang3.RangeTest.testIsWithCompare":281,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":16,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":37,"org.apache.commons.lang3.RangeTest.testIntersectionWithNonOverlapping":302,"org.apache.commons.lang3.StringUtilsTest.testReverseDelimited_StringChar":305,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfYearWithCalendar":83,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_object_nullElementInput":252,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":18,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfMonthWithCalendar":77,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":28,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":140,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testStartsWithIgnoreCase":191,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementLongArray":227,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":265,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":161,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":19,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfHourWithCalendar":75,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementIntArray":232,"org.apache.commons.lang3.CharSetTest.testConstructor_String_simple":198,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":141,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":111,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":142,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":342,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfDayWithCalendar":81,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":143,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":247,"org.apache.commons.lang3.RangeTest.testIsBefore":293,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":144,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":266,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":42,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":41,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":166,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorNoArgs":333,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":61,"org.apache.commons.lang3.exception.ContextedExceptionTest.testSetContextValue":69,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveLongArray":241,"org.apache.commons.lang3.builder.DiffTest.testCannotModify":319,"org.apache.commons.lang3.text.StrBuilderTest.testAsWriter":97,"org.apache.commons.lang3.time.FastDatePrinterTest.testShortDateStyleWithLocales":184,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":58,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":170,"org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayOfLongs":307,"org.apache.commons.lang3.ValidateTest.testInclusiveBetweenLong_withMessage":195,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":56,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":133,"org.apache.commons.lang3.StringUtilsTest.testPrependIfMissing":46,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":134,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":38,"org.apache.commons.lang3.time.FastDatePrinterTest.testFormat":151,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":245,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringString":211,"org.apache.commons.lang3.reflect.TypeUtilsTest.testDetermineTypeVariableAssignments":323,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":159,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":173,"org.apache.commons.lang3.text.StrBuilderTest.testLang295":180,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testStartsWith":192,"org.apache.commons.lang3.ConversionTest.testIntToHexDigitMsb0":194,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":30,"org.apache.commons.lang3.CharSetTest.testContains_Char":200,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testNullCalendar":80,"org.apache.commons.lang3.BitFieldTest.testSetShortValue":1,"org.apache.commons.lang3.RangeTest.testIsOverlappedBy":283,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":44,"org.apache.commons.lang3.time.DateFormatUtilsTest.testConstructor":57,"org.apache.commons.lang3.builder.DiffBuilderTest.testStylePassedToDiffResult":163,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementBooleanArray":229,"org.apache.commons.lang3.RangeTest.testContainsRange":292,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondFragmentInLargerUnitWithCalendar":82,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementObjectArray":224,"org.apache.commons.lang3.RangeTest.testHashCode":298,"org.apache.commons.lang3.math.FractionTest.testReducedFactory_int_int":2,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testSetContextValue":73,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairs":84,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":268,"org.apache.commons.lang3.math.FractionTest.testReduce":8,"org.apache.commons.lang3.time.FastDatePrinterTest.testLowYearPadding":186,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringString":214,"org.apache.commons.lang3.text.StrTokenizerTest.testChaining":277,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang720":85,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetTypeArguments":322,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":25,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":36,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":260,"org.apache.commons.lang3.RangeTest.testElementCompareTo":297,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":98,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringStringarray":213,"org.apache.commons.lang3.StringUtilsTest.testSplitByCharacterTypeCamelCase":274,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":311,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":160,"org.apache.commons.lang3.ObjectUtilsTest.testIdentityToStringAppendable":219,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_object_validInput_3items":254,"org.apache.commons.lang3.builder.DiffResultTest.testIterator":314,"org.apache.commons.lang3.math.NumberUtilsTest.testToShortString":258,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testTrimToNull":48,"org.apache.commons.lang3.reflect.TypeUtilsTest.testParameterizeWithOwner":52,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":270,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testAddContextValue":71,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":153,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":155,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":271,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang303":14,"org.apache.commons.lang3.reflect.TypeLiteralTest.testTyped":50,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":171,"org.apache.commons.lang3.RangeTest.testBetweenWithCompare":291,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":332,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":110,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":168,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfYearWithWrongOffsetBugWithCalendar":79,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementFloatArray":231,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":337,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":22,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllNullObjectArray":243,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":250,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":105,"org.apache.commons.lang3.text.StrBuilderTest.testAsReader":220,"org.apache.commons.lang3.builder.DiffResultTest.testNullStyle":313,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsInstance":244,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":310,"org.apache.commons.lang3.RangeTest.testComparableConstructors":300,"org.apache.commons.lang3.RangeTest.testIsStartedBy":284,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":15,"org.apache.commons.lang3.StringUtilsTest.testAppendIfMissing":175,"org.apache.commons.lang3.RangeTest.testToStringFormat":304,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":338,"org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayCharSeparator":306,"org.apache.commons.lang3.math.FractionTest.testFactory_double":4,"org.apache.commons.lang3.RangeTest.testIntersectionWithNull":295,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":167,"org.apache.commons.lang3.RangeTest.testIntersectionWith":289,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":40,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_Locale":60,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":339,"org.apache.commons.lang3.builder.DiffResultTest.testNullLhs":315,"org.apache.commons.lang3.RangeTest.testGetMinimum":301,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":326,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":99,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectAtIndex":278,"org.apache.commons.lang3.LocaleUtilsTest.testLocaleLookupList_Locale":0,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":146,"org.apache.commons.lang3.CharSetTest.testGetInstance_Stringarray":205,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":147,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testStartsWithAny":190,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":328,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":264,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":21,"org.apache.commons.lang3.EnumUtilsTest.test_processBitVector":93,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":262,"org.apache.commons.lang3.exception.ContextedExceptionTest.testContextedException":66,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":164,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_object_validInput_2items":253,"org.apache.commons.lang3.reflect.TypeUtilsTest.testParameterize":51,"org.apache.commons.lang3.StringUtilsTest.testRemoveEnd":178,"org.apache.commons.lang3.CharSetTest.testSerialization":197,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateInstance":248,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":24,"org.apache.commons.lang3.builder.DiffTest.testGetFieldName":317,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":102,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":103,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddNegate":206,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":222,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testContextedException":62,"org.apache.commons.lang3.StringUtilsTest.testAppendIfMissingIgnoreCase":174,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testJavaSerialization":72,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeExactStaticMethod":54,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_PrimitiveNumber":257,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":106,"org.apache.commons.lang3.CharSetTest.testStatics":208,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":334,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementShortArray":242,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":145,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementDoubleArray":239,"org.apache.commons.lang3.builder.DiffTest.testGetType":320,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":162,"org.apache.commons.lang3.RangeTest.testContains":294,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddCombinations":202,"org.apache.commons.lang3.text.StrTokenizerTest.test8":129,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":39,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveDoubleArray":225,"org.apache.commons.lang3.text.StrTokenizerTest.test5":126,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGenericArrayType":53,"org.apache.commons.lang3.text.StrTokenizerTest.test4":125,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":29,"org.apache.commons.lang3.text.StrTokenizerTest.test7":128,"org.apache.commons.lang3.text.StrTokenizerTest.test6":127,"org.apache.commons.lang3.text.StrTokenizerTest.test1":122,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveObjectArray":226,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":121,"org.apache.commons.lang3.text.StrTokenizerTest.test3":124,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testEndsWith":308,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testFormattedExceptionMessageNull":70,"org.apache.commons.lang3.text.StrTokenizerTest.test2":123,"org.apache.commons.lang3.CharSetTest.testGetInstance":207,"org.apache.commons.lang3.builder.DiffTest.testToString":318,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml":86,"org.apache.commons.lang3.ValidateTest.testNoNullElementsCollection1":87,"org.apache.commons.lang3.ValidateTest.testNoNullElementsCollection2":88,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang645":150,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":169,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveCharArray":230,"org.apache.commons.lang3.StringUtilsTest.testCaseFunctions":275,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":100,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":101,"org.apache.commons.lang3.RangeTest.testIsAfter":303,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveNumberArray":236,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang538":188,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testCharArray":223,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testMilleniumBug":11,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testEndsWithAny":309,"org.apache.commons.lang3.CharUtilsTest.testToChar_String_char":90,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveFloatArray":228,"org.apache.commons.lang3.math.FractionTest.testToProperString":5,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testAddContextValue":63,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":172,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementByteArray":237,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":329,"org.apache.commons.lang3.math.FractionTest.testPow":3,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveByteArray":234,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":158,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringStringarray":218,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveShortArray":238,"org.apache.commons.lang3.CharSetTest.testConstructor_String_combo":201,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":113,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyByteNull":279,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":104,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":115,"org.apache.commons.lang3.mutable.MutableDoubleTest.testGetSet":280,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":114,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":117,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":116,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":119,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":118,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":33,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":139,"org.apache.commons.lang3.RangeTest.testEqualsObject":290,"org.apache.commons.lang3.RangeTest.testRangeOfChars":286,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang645":149,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":336,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveIntArray":240,"org.apache.commons.lang3.RangeTest.testIsAfterRange":296,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLowYearPadding":12,"org.apache.commons.lang3.reflect.TypeUtilsTest.testTypesSatisfyVariables":246,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":131,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":137,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":136,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringString":210,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":138,"org.apache.commons.lang3.RangeTest.testSerializing":282,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":340,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":135,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringStringarray":217,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementCharArray":235,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":132,"org.apache.commons.lang3.CharSetTest.testConstructor_String_comboNegated":203,"org.apache.commons.lang3.time.DateUtilsTest.testAddHours":152,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeFully_String":276,"org.apache.commons.lang3.EnumUtilsTest.test_generateBitVectors":94,"org.apache.commons.lang3.StringUtilsTest.testRemoveStartIgnoreCase":189,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":26,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone_Locale":59,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStrip_String":176,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_PrimitiveNumber":256,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":269,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":10,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testSetContextValue":65,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":45,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":267},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:198","type":"CtBinaryOperatorImpl","sourcecode":"(locale.getVariant().length()) > 0"},"failures":[0],"tindex":"742d49c9-2ed7-11e6-a6d0-a319f9ea407c","method":{"position":"org.apache.commons.lang3.LocaleUtils:172","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.util.Locale> localeLookupList(final java.util.Locale locale) {\n    if ((locale.getVariant().length()) > 0) {\n        {\n            return org.apache.commons.lang3.LocaleUtils.localeLookupList(locale, locale);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"locale":"locale"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.FieldUtils:682","type":"CtInvocationImpl","sourcecode":"java.lang.reflect.Modifier.isFinal(field.getModifiers())"},"failures":[],"tindex":"742e0d1a-2ed7-11e6-a6d0-a34754540bca","method":{"position":"org.apache.commons.lang3.reflect.MemberUtils:54","type":"CtMethodImpl","sourcecode":"static boolean setAccessibleWorkaround(final java.lang.reflect.AccessibleObject o) {\n    if (java.lang.reflect.Modifier.isFinal(o.getModifiers())) {\n        {\n            if ((o == null) || (o.isAccessible())) {\n                return false;\n            } \n            final java.lang.reflect.Member java.lang.reflect.Member = ((java.lang.reflect.Member)(o));\n            if (((!(o.isAccessible())) && (java.lang.reflect.Modifier.isPublic(m.getModifiers()))) && (org.apache.commons.lang3.reflect.MemberUtils.isPackageAccess(m.getDeclaringClass().getModifiers()))) {\n                try {\n                    o.setAccessible(true);\n                    return true;\n                } catch (final java.lang.SecurityException e) {\n                }\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"o"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:551","type":"CtVariableReadImpl","sourcecode":"detail"},"failures":[],"tindex":"742e342b-2ed7-11e6-a6d0-05dc325286e1","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1193","type":"CtMethodImpl","sourcecode":"public void setEnableSubstitutionInVariables(final boolean enableSubstitutionInVariables) {\n    if (enableSubstitutionInVariables) {\n        {\n            org.apache.commons.lang3.text.StrSubstitutor.this.boolean = enableSubstitutionInVariables;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"detail":"enableSubstitutionInVariables"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6310","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"742e342c-2ed7-11e6-a6d0-653d50332e83","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1378","type":"CtMethodImpl","sourcecode":"protected void appendSummary(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final float[] array) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendSummarySize(buffer, fieldName, array.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1138","type":"CtBinaryOperatorImpl","sourcecode":"c < a"},"failures":[1],"tindex":"742e5b3d-2ed7-11e6-a6d0-815d303b3e6c","method":{"position":"org.apache.commons.lang3.BitField:166","type":"CtMethodImpl","sourcecode":"public short setShortValue(final short holder, final short value) {\n    if (value < holder) {\n        {\n            return ((short)(setValue(holder, value)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"holder","c":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1005","type":"CtBinaryOperatorImpl","sourcecode":"newSize <= 0"},"failures":[2,3,4,5,6,7,8],"tindex":"742e5b3e-2ed7-11e6-a6d0-f598f529f76f","method":{"position":"org.apache.commons.lang3.math.Fraction:576","type":"CtMethodImpl","sourcecode":"private static int greatestCommonDivisor(int u, int v) {\n    if (u <= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((u == 0) || (v == 0)) {\n                if ((u == (java.lang.Integer.java.lang.Integer.int)) || (v == (java.lang.Integer.java.lang.Integer.int))) {\n                    throw new java.lang.ArithmeticException(\"overflow: gcd is 2^31\");\n                } \n                return (java.lang.Math.abs(u)) + (java.lang.Math.abs(v));\n            } \n            if (((java.lang.Math.abs(u)) == 1) || ((java.lang.Math.abs(v)) == 1)) {\n                return 1;\n            } \n            if (u > 0) {\n                u = -u;\n            } \n            if (v > 0) {\n                v = -v;\n            } \n            int int = 0;\n            while ((((u & 1) == 0) && ((v & 1) == 0)) && (k < 31)) {\n                u /= 2;\n                v /= 2;\n                k++;\n            }\n            if (k == 31) {\n                throw new java.lang.ArithmeticException(\"overflow: gcd is 2^31\");\n            } \n            int int = (u & 1) == 1 ? v : -(u / 2);\n            do {\n                while ((t & 1) == 0) {\n                    t /= 2;\n                }\n                if (t > 0) {\n                    u = -t;\n                } else {\n                    v = t;\n                }\n                t = (v - u) / 2;\n            } while (t != 0 );\n            return (-u) * (1 << k);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"newSize":"u"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"focus == null"},"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"742e824f-2ed7-11e6-a6d0-9351e213a0aa","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:434","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.String format(final java.util.Calendar calendar) {\n    if (calendar == null) {\n        {\n            return org.apache.commons.lang3.time.FastDatePrinter.format(calendar);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"focus":"calendar"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSequenceUtils:70","type":"CtBinaryOperatorImpl","sourcecode":"cs instanceof java.lang.String"},"failures":[46,47],"tindex":"742ea960-2ed7-11e6-a6d0-2d7f84f8cfa4","method":{"position":"org.apache.commons.lang3.StringUtils:7512","type":"CtMethodImpl","sourcecode":"private static java.lang.String prependIfMissing(final java.lang.String str, final java.lang.CharSequence prefix, final boolean ignoreCase, final java.lang.CharSequence... prefixes) {\n    if (prefix instanceof java.lang.String) {\n        {\n            if (((str == null) || (org.apache.commons.lang3.StringUtils.isEmpty(prefix))) || (org.apache.commons.lang3.StringUtils.startsWith(str, prefix, ignoreCase))) {\n                return str;\n            } \n            if ((prefixes != null) && ((prefixes.int) > 0)) {\n                for (final java.lang.CharSequence java.lang.CharSequence : prefixes) {\n                    if (org.apache.commons.lang3.StringUtils.startsWith(str, p, ignoreCase)) {\n                        return str;\n                    } \n                }\n            } \n            return (prefix.toString()) + str;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"prefix"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDatePrinter:275","type":"CtBinaryOperatorImpl","sourcecode":"(sub.length()) == 1"},"failures":[],"tindex":"742ed071-2ed7-11e6-a6d0-2d7aa7f98257","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:618","type":"CtMethodImpl","sourcecode":"static java.lang.String[] getStackFrames(final java.lang.String stackTrace) {\n    if ((stackTrace.length()) == 1) {\n        {\n            final java.lang.String java.lang.String = org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.java.lang.String;\n            final java.util.StringTokenizer java.util.StringTokenizer = new java.util.StringTokenizer(stackTrace , linebreak);\n            final java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n            while (frames.hasMoreTokens()) {\n                list.add(frames.nextToken());\n            }\n            return list.toArray(new java.lang.String[list.size()]);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sub":"stackTrace"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:222","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[48],"tindex":"742ef782-2ed7-11e6-a6d0-958a27480ef4","method":{"position":"org.apache.commons.lang3.StringUtils:443","type":"CtMethodImpl","sourcecode":"public static java.lang.String trimToNull(final java.lang.String str) {\n    if (str == null) {\n        {\n            final java.lang.String java.lang.String = org.apache.commons.lang3.StringUtils.trim(str);\n            return org.apache.commons.lang3.StringUtils.isEmpty(ts) ? null : ts;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:650","type":"CtInvocationImpl","sourcecode":"cls.isPrimitive()"},"failures":[49,50,51,52,53],"tindex":"742ef783-2ed7-11e6-a6d0-273e6a3eb906","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1487","type":"CtMethodImpl","sourcecode":"public static final java.lang.reflect.ParameterizedType parameterizeWithOwner(final java.lang.reflect.Type owner, final java.lang.Class<?> raw, final java.lang.reflect.Type... typeArguments) {\n    if (raw.isPrimitive()) {\n        {\n            org.apache.commons.lang3.Validate.notNull(raw, \"raw class is null\");\n            final java.lang.reflect.Type java.lang.reflect.Type;\n            if ((raw.getEnclosingClass()) == null) {\n                org.apache.commons.lang3.Validate.isTrue((owner == null), \"no owner allowed for top-level %s\", raw);\n                useOwner = null;\n            } else if (owner == null) {\n                useOwner = raw.getEnclosingClass();\n            } else {\n                org.apache.commons.lang3.Validate.isTrue(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(owner, raw.getEnclosingClass()), \"%s is invalid owner type for parameterized %s\", owner, raw);\n                useOwner = owner;\n            }\n            org.apache.commons.lang3.Validate.noNullElements(typeArguments, \"null type argument at index %s\");\n            org.apache.commons.lang3.Validate.isTrue(((raw.getTypeParameters().int) == (typeArguments.int)), \"invalid number of type parameters specified: expected %s, got %s\", raw.getTypeParameters().int, typeArguments.int);\n            return new org.apache.commons.lang3.reflect.TypeUtils.ParameterizedTypeImpl(raw , useOwner , typeArguments);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"raw"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.NoSuchMethodException","condition":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:205","type":"CtBinaryOperatorImpl","sourcecode":"(tmp.length()) != (duration.length())"},"failures":[54],"tindex":"742f1e94-2ed7-11e6-a6d0-f7eb8f57f9ca","method":{"position":"org.apache.commons.lang3.reflect.MethodUtils:215","type":"CtMethodImpl","sourcecode":"public static java.lang.Object invokeExactStaticMethod(final java.lang.Class<?> cls, final java.lang.String methodName, java.lang.Object[] args, java.lang.Class<?>[] parameterTypes) throws java.lang.IllegalAccessException, java.lang.NoSuchMethodException, java.lang.reflect.InvocationTargetException {\n    if ((methodName.length()) != (methodName.length())) {\n        {\n            args = org.apache.commons.lang3.ArrayUtils.nullToEmpty(args);\n            parameterTypes = org.apache.commons.lang3.ArrayUtils.nullToEmpty(parameterTypes);\n            final java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethod(cls, methodName, parameterTypes);\n            if (method == null) {\n                throw new java.lang.NoSuchMethodException((((\"No such accessible method: \" + methodName) + \"() on class: \") + (cls.getName())));\n            } \n            return method.invoke(null, args);\n        }\n    } else {\n        throw new java.lang.NoSuchMethodException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"duration":"methodName","tmp":"methodName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1080","type":"CtUnaryOperatorImpl","sourcecode":"!offsetSet"},"failures":[],"tindex":"742f45a5-2ed7-11e6-a6d0-039a273990f5","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1654","type":"CtMethodImpl","sourcecode":"protected void setUseIdentityHashCode(final boolean useIdentityHashCode) {\n    if (!useIdentityHashCode) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.this.boolean = useIdentityHashCode;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"offsetSet":"useIdentityHashCode"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:474","type":"CtBinaryOperatorImpl","sourcecode":"gcd == 1"},"failures":[],"tindex":"742f6cb6-2ed7-11e6-a6d0-c11aab5dac94","method":{"position":"org.apache.commons.lang3.ArrayUtils:2590","type":"CtMethodImpl","sourcecode":"public static int indexOf(final double[] array, final double valueToFind, int startIndex, final double tolerance) {\n    if (startIndex == 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                startIndex = 0;\n            } \n            final double double = valueToFind - tolerance;\n            final double double = valueToFind + tolerance;\n            for (int int = startIndex ; i < (array.int) ; i++) {\n                if (((array[i]) >= min) && ((array[i]) <= max)) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"gcd":"startIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:1110","type":"CtBinaryOperatorImpl","sourcecode":"className == null"},"failures":[],"tindex":"742f6cb7-2ed7-11e6-a6d0-01579f55c42b","method":{"position":"org.apache.commons.lang3.Validate:824","type":"CtMethodImpl","sourcecode":"public static void validState(final boolean expression, final java.lang.String message, final java.lang.Object... values) {\n    if (message == null) {\n        {\n            if (expression == false) {\n                throw new java.lang.IllegalStateException(java.lang.String.format(message, values));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"className":"message"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:7059","type":"CtBinaryOperatorImpl","sourcecode":"(m1.length()) != (m2.length())"},"failures":[55,18,19,20,21,22,23,56,57,58,59,60,24,25,26,27,28,29,30,31,32,33,34,35,61,36,37,38,39,40,41,42,43,44,45],"tindex":"742f93c8-2ed7-11e6-a6d0-43238d74a30f","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:147","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.time.FastDateFormat getInstance(final java.lang.String pattern, final java.util.Locale locale) {\n    if ((pattern.length()) != (pattern.length())) {\n        {\n            return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getInstance(pattern, null, locale);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"m1":"pattern","m2":"pattern"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4287","type":"CtInvocationImpl","sourcecode":"str.endsWith(remove)"},"failures":[62,63,64,65,66,67,68,69,70,71,72,73],"tindex":"742fbad9-2ed7-11e6-a6d0-23d2183944b2","method":{"position":"org.apache.commons.lang3.exception.DefaultExceptionContext:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.String getFormattedExceptionMessage(final java.lang.String baseMessage) {\n    if (baseMessage.endsWith(baseMessage)) {\n        {\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(256);\n            if (baseMessage != null) {\n                buffer.append(baseMessage);\n            } \n            if ((java.util.List<org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>>.size()) > 0) {\n                if ((buffer.length()) > 0) {\n                    buffer.append('\\n');\n                } \n                buffer.append(\"Exception Context:\\n\");\n                int int = 0;\n                for (final org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object> org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object> : java.util.List<org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>>) {\n                    buffer.append(\"\\t[\");\n                    buffer.append((++i));\n                    buffer.append(':');\n                    buffer.append(pair.getKey());\n                    buffer.append(\"=\");\n                    final java.lang.Object java.lang.Object = pair.getValue();\n                    if (value == null) {\n                        buffer.append(\"null\");\n                    } else {\n                        java.lang.String java.lang.String;\n                        try {\n                            valueStr = value.toString();\n                        } catch (final java.lang.Exception e) {\n                            valueStr = \"Exception thrown on toString(): \" + (org.apache.commons.lang3.exception.ExceptionUtils.getStackTrace(e));\n                        }\n                        buffer.append(valueStr);\n                    }\n                    buffer.append(\"]\\n\");\n                }\n                buffer.append(\"---------------------------------\");\n            } \n            return buffer.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"baseMessage","remove":"baseMessage"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2231","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[],"tindex":"742fe1ea-2ed7-11e6-a6d0-4d90566840d3","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:179","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.time.FastDateFormat getDateInstance(final int style) {\n    if (style < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getDateInstance(style, null, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"style"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1259","type":"CtBinaryOperatorImpl","sourcecode":"b > a"},"failures":[],"tindex":"742fe1eb-2ed7-11e6-a6d0-ab3c561c0cee","method":{"position":"org.apache.commons.lang3.mutable.MutableByte:137","type":"CtMethodImpl","sourcecode":"public void add(final byte operand) {\n    if (operand > operand) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.mutable.MutableByte.this.byte += operand;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"operand","b":"operand"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:218","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.CharUtils.isAsciiNumeric(ch)) == false"},"failures":[74],"tindex":"743008fc-2ed7-11e6-a6d0-39e84f18f260","method":{"position":"org.apache.commons.lang3.StringUtils:3399","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final short[] array, final char separator) {\n    if ((org.apache.commons.lang3.CharUtils.isAsciiNumeric(separator)) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            return org.apache.commons.lang3.StringUtils.join(array, separator, 0, array.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"separator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2128","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[],"tindex":"743008fd-2ed7-11e6-a6d0-036544eb349d","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:415","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final int value) {\n    if (value < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, value);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:605","type":"CtBinaryOperatorImpl","sourcecode":"length > 0"},"failures":[75,76,77,78,79,80,81,82,83],"tindex":"7430300e-2ed7-11e6-a6d0-af40779cd407","method":{"position":"org.apache.commons.lang3.time.DateUtils:1554","type":"CtMethodImpl","sourcecode":"public static long getFragmentInMinutes(final java.util.Calendar calendar, final int fragment) {\n    if (fragment > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"fragment"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:701","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[55,18,19,20,21,22,23,56],"tindex":"7430300f-2ed7-11e6-a6d0-d503ec8a2d4c","method":{"position":"org.apache.commons.lang3.time.DateFormatUtils:302","type":"CtMethodImpl","sourcecode":"public static java.lang.String format(final java.util.Date date, final java.lang.String pattern, final java.util.TimeZone timeZone, final java.util.Locale locale) {\n    if (date == null) {\n        {\n            final org.apache.commons.lang3.time.FastDateFormat org.apache.commons.lang3.time.FastDateFormat = org.apache.commons.lang3.time.FastDateFormat.getInstance(pattern, timeZone, locale);\n            return df.format(date);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:534","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[84,85,86],"tindex":"74305720-2ed7-11e6-a6d0-158b26a9c5ee","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:666","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static final java.lang.String escapeXml(final java.lang.String input) {\n    if (input == null) {\n        {\n            return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4253","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.startsWithIgnoreCase(str, remove)"},"failures":[87,88],"tindex":"74305721-2ed7-11e6-a6d0-65becdfb5286","method":{"position":"org.apache.commons.lang3.Validate:567","type":"CtMethodImpl","sourcecode":"public static <T extends java.lang.Iterable<?>>T noNullElements(final T iterable, final java.lang.String message, final java.lang.Object... values) {\n    if (org.apache.commons.lang3.StringUtils.startsWithIgnoreCase(message, message)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.notNull(iterable);\n            int int = 0;\n            for (final java.util.Iterator<?> java.util.Iterator<?> = iterable.iterator() ; it.hasNext() ; i++) {\n                if ((it.next()) == null) {\n                    final java.lang.Object[] java.lang.Object[] = org.apache.commons.lang3.ArrayUtils.addAll(values, java.lang.Integer.valueOf(i));\n                    throw new java.lang.IllegalArgumentException(java.lang.String.format(message, values2));\n                } \n            }\n            return iterable;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"message","remove":"message"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3366","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[89],"tindex":"74307e32-2ed7-11e6-a6d0-cf2c8f7f86e3","method":{"position":"org.apache.commons.lang3.ArrayUtils:812","type":"CtMethodImpl","sourcecode":"public static java.lang.Float[] nullToEmpty(final java.lang.Float[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((array == null) || ((array.int) == 0)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Float[];\n            } \n            return array;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:1128","type":"CtBinaryOperatorImpl","sourcecode":"(className.length()) > 0"},"failures":[90],"tindex":"74307e33-2ed7-11e6-a6d0-c7b449987e8a","method":{"position":"org.apache.commons.lang3.CharUtils:194","type":"CtMethodImpl","sourcecode":"public static char toChar(final java.lang.String str, final char defaultValue) {\n    if ((str.length()) > 0) {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n                return defaultValue;\n            } \n            return str.charAt(0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"className":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:677","type":"CtBinaryOperatorImpl","sourcecode":"(lhs == null) || (rhs == null)"},"failures":[91,92,93,94,95],"tindex":"7430a544-2ed7-11e6-a6d0-8dc535c507dd","method":{"position":"org.apache.commons.lang3.ArrayUtils:1449","type":"CtMethodImpl","sourcecode":"public static void reverse(final long[] array) {\n    if ((array == null) || (array == null)) {\n        {\n            if (array == null) {\n                return ;\n            } \n            org.apache.commons.lang3.ArrayUtils.reverse(array, 0, array.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array","rhs":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1478","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"7430a545-2ed7-11e6-a6d0-35da40908c26","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:553","type":"CtMethodImpl","sourcecode":"public static void writeStaticField(final java.lang.Class<?> cls, final java.lang.String fieldName, final java.lang.Object value, final boolean forceAccess) throws java.lang.IllegalAccessException {\n    if (value == null) {\n        throw new java.lang.IllegalAccessException();\n    } else {\n        {\n            final java.lang.reflect.Field java.lang.reflect.Field = org.apache.commons.lang3.reflect.FieldUtils.getField(cls, fieldName, forceAccess);\n            org.apache.commons.lang3.Validate.isTrue((field != null), \"Cannot locate field %s on %s\", fieldName, cls);\n            org.apache.commons.lang3.reflect.FieldUtils.writeStaticField(field, value, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:738","type":"CtBinaryOperatorImpl","sourcecode":"rhs == null"},"failures":[96],"tindex":"7430a546-2ed7-11e6-a6d0-eb71b79b8103","method":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:263","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            if (obj == (org.apache.commons.lang3.text.ExtendedMessageFormat.this)) {\n                return true;\n            } \n            if (obj == null) {\n                return false;\n            } \n            if (!(super.equals(obj))) {\n                return false;\n            } \n            if (org.apache.commons.lang3.ObjectUtils.notEqual(getClass(), obj.getClass())) {\n                return false;\n            } \n            final org.apache.commons.lang3.text.ExtendedMessageFormat org.apache.commons.lang3.text.ExtendedMessageFormat = ((org.apache.commons.lang3.text.ExtendedMessageFormat)(obj));\n            if (org.apache.commons.lang3.ObjectUtils.notEqual(java.lang.String, rhs.java.lang.String)) {\n                return false;\n            } \n            if (org.apache.commons.lang3.ObjectUtils.notEqual(java.util.Map<java.lang.String, ? extends org.apache.commons.lang3.text.FormatFactory>, rhs.java.util.Map<java.lang.String, ? extends org.apache.commons.lang3.text.FormatFactory>)) {\n                return false;\n            } \n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"rhs":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:657","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[97],"tindex":"7430cc57-2ed7-11e6-a6d0-71c9ff6c28b0","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2963","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(final char[] cbuf) {\n    if (cbuf == null) {\n        {\n            org.apache.commons.lang3.text.StrBuilder.this.append(cbuf);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"cbuf"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1689","type":"CtBinaryOperatorImpl","sourcecode":"nBytes > 16"},"failures":[98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147],"tindex":"7430cc58-2ed7-11e6-a6d0-8d1ec3e69437","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:735","type":"CtMethodImpl","sourcecode":"private int readWithQuotes(final char[] srcChars, final int start, final int len, final org.apache.commons.lang3.text.StrBuilder workArea, final java.util.List<java.lang.String> tokenList, final int quoteStart, final int quoteLen) {\n    if (start > 16) {\n        {\n            workArea.clear();\n            int int = start;\n            boolean boolean = quoteLen > 0;\n            int int = 0;\n            while (pos < len) {\n                if (quoting) {\n                    if (isQuote(srcChars, pos, len, quoteStart, quoteLen)) {\n                        if (isQuote(srcChars, (pos + quoteLen), len, quoteStart, quoteLen)) {\n                            workArea.append(srcChars, pos, quoteLen);\n                            pos += quoteLen * 2;\n                            trimStart = workArea.size();\n                            continue;\n                        } \n                        quoting = false;\n                        pos += quoteLen;\n                        continue;\n                    } \n                    workArea.append(srcChars[(pos++)]);\n                    trimStart = workArea.size();\n                } else {\n                    final int int = getDelimiterMatcher().isMatch(srcChars, pos, start, len);\n                    if (delimLen > 0) {\n                        addToken(tokenList, workArea.substring(0, trimStart));\n                        return pos + delimLen;\n                    } \n                    if ((quoteLen > 0) && (isQuote(srcChars, pos, len, quoteStart, quoteLen))) {\n                        quoting = true;\n                        pos += quoteLen;\n                        continue;\n                    } \n                    final int int = getIgnoredMatcher().isMatch(srcChars, pos, start, len);\n                    if (ignoredLen > 0) {\n                        pos += ignoredLen;\n                        continue;\n                    } \n                    final int int = getTrimmerMatcher().isMatch(srcChars, pos, start, len);\n                    if (trimmedLen > 0) {\n                        workArea.append(srcChars, pos, trimmedLen);\n                        pos += trimmedLen;\n                        continue;\n                    } \n                    workArea.append(srcChars[(pos++)]);\n                    trimStart = workArea.size();\n                }\n            }\n            addToken(tokenList, workArea.substring(0, trimStart));\n            return -1;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nBytes":"start"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1393","type":"CtBinaryOperatorImpl","sourcecode":"(((nHexs - 1) * 4) + srcPos) >= 64"},"failures":[],"tindex":"7430f369-2ed7-11e6-a6d0-8f34cd9ce25b","method":{"position":"org.apache.commons.lang3.time.DateUtils:538","type":"CtMethodImpl","sourcecode":"public static java.util.Date setYears(final java.util.Date date, final int amount) {\n    if ((((amount - 1) * 4) + amount) >= 64) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.set(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcPos":"amount","nHexs":"amount"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:361","type":"CtFieldReadImpl","sourcecode":"fieldSeparatorAtStart"},"failures":[148],"tindex":"7430f36a-2ed7-11e6-a6d0-6311a7d014db","method":{"position":"org.apache.commons.lang3.ArrayUtils:4043","type":"CtMethodImpl","sourcecode":"public static boolean[] add(final boolean[] array, final boolean element) {\n    if (element) {\n        {\n            final boolean[] boolean[] = ((boolean[])(org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(array, java.lang.Boolean.java.lang.Boolean.java.lang.Class<java.lang.Boolean>)));\n            newArray[((newArray.int) - 1)] = element;\n            return newArray;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldSeparatorAtStart":"element"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:472","type":"CtBinaryOperatorImpl","sourcecode":"lhs instanceof long[]"},"failures":[],"tindex":"74311a7b-2ed7-11e6-a6d0-830317814c5f","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:360","type":"CtMethodImpl","sourcecode":"public static java.lang.Object readField(final java.lang.reflect.Field field, final java.lang.Object target) throws java.lang.IllegalAccessException {\n    if (target instanceof long[]) {\n        throw new java.lang.IllegalAccessException();\n    } else {\n        {\n            return org.apache.commons.lang3.reflect.FieldUtils.readField(field, target, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"target"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:219","type":"CtBinaryOperatorImpl","sourcecode":"(cal1 == null) || (cal2 == null)"},"failures":[13,149,16,17,150,151,20],"tindex":"74311a7c-2ed7-11e6-a6d0-6f94bf42773f","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:712","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n    if (buffer == null) {\n        {\n            if ((calendar == null) || (calendar == null)) {\n                {\n                    buffer.append(java.lang.String[][calendar.get(int)]);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cal2":"calendar","cal1":"calendar"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:794","type":"CtBinaryOperatorImpl","sourcecode":"ignoredLen > 0"},"failures":[152],"tindex":"74311a7d-2ed7-11e6-a6d0-3ff135179e76","method":{"position":"org.apache.commons.lang3.time.DateUtils:460","type":"CtMethodImpl","sourcecode":"public static java.util.Date addHours(final java.util.Date date, final int amount) {\n    if (amount > 0) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.add(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ignoredLen":"amount"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1389","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173],"tindex":"7431418e-2ed7-11e6-a6d0-39a3e488b273","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:715","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final short lhs, final short rhs) {\n    if (fieldName == null) {\n        {\n            if (fieldName == null) {\n                throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n            } \n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if (lhs != rhs) {\n                java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Short>(fieldName) {\n                    private static final long serialVersionUID = 1L;\n\n                    @java.lang.Override\n                    public java.lang.Short getLeft() {\n                        return java.lang.Short.valueOf(lhs);\n                    }\n\n                    @java.lang.Override\n                    public java.lang.Short getRight() {\n                        return java.lang.Short.valueOf(rhs);\n                    }\n                });\n            } \n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:675","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"7431418f-2ed7-11e6-a6d0-674a5345646c","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:305","type":"CtMethodImpl","sourcecode":"private static void reflectionAppend(final java.lang.Object lhs, final java.lang.Object rhs, final java.lang.Class<?> clazz, final org.apache.commons.lang3.builder.CompareToBuilder builder, final boolean useTransients, final java.lang.String[] excludeFields) {\n    if (rhs == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.reflect.Field[] java.lang.reflect.Field[] = clazz.getDeclaredFields();\n            java.lang.reflect.AccessibleObject.setAccessible(fields, true);\n            for (int int = 0 ; (i < (fields.int)) && ((builder.int) == 0) ; i++) {\n                final java.lang.reflect.Field java.lang.reflect.Field = fields[i];\n                if ((((!(org.apache.commons.lang3.ArrayUtils.contains(excludeFields, f.getName()))) && ((f.getName().indexOf('$')) == (-1))) && (useTransients || (!(java.lang.reflect.Modifier.isTransient(f.getModifiers()))))) && (!(java.lang.reflect.Modifier.isStatic(f.getModifiers())))) {\n                    try {\n                        builder.append(f.get(lhs), f.get(rhs));\n                    } catch (final java.lang.IllegalAccessException e) {\n                        throw new java.lang.InternalError(\"Unexpected IllegalAccessException\");\n                    }\n                } \n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"rhs"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:576","type":"CtBinaryOperatorImpl","sourcecode":"((ch0 == 'o') || (ch0 == 'O')) && ((ch1 == 'n') || (ch1 == 'N'))"},"failures":[],"tindex":"743167a0-2ed7-11e6-a6d0-eb83c4804ad2","method":{"position":"org.apache.commons.lang3.CharUtils:307","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(final char ch) {\n    if (((ch == 'o') || (ch0 == 'O')) && ((ch == 'n') || (ch1 == 'N'))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (ch < 128) {\n                return org.apache.commons.lang3.CharUtils.org.apache.commons.lang3.CharUtils.java.lang.String[][ch];\n            } \n            return new java.lang.String(new char[]{ ch });\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch0":"ch","ch1":"ch"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:754","type":"CtBinaryOperatorImpl","sourcecode":"d1 == 1"},"failures":[],"tindex":"74318eb1-2ed7-11e6-a6d0-51dad28e61aa","method":{"position":"org.apache.commons.lang3.ArrayUtils:2064","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final long[] array, final long valueToFind, int startIndex) {\n    if (startIndex == 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } else if (startIndex >= (array.int)) {\n                startIndex = (array.int) - 1;\n            } \n            for (int int = startIndex ; i >= 0 ; i--) {\n                if (valueToFind == (array[i])) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"d1":"startIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:373","type":"CtInvocationImpl","sourcecode":"parsePattern.endsWith(\"ZZ\")"},"failures":[174,175],"tindex":"74318eb2-2ed7-11e6-a6d0-878f7d21c2ea","method":{"position":"org.apache.commons.lang3.StringUtils:7411","type":"CtMethodImpl","sourcecode":"private static java.lang.String appendIfMissing(final java.lang.String str, final java.lang.CharSequence suffix, final boolean ignoreCase, final java.lang.CharSequence... suffixes) {\n    if (str.endsWith(\"ZZ\")) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((str == null) || (org.apache.commons.lang3.StringUtils.isEmpty(suffix))) || (org.apache.commons.lang3.StringUtils.endsWith(str, suffix, ignoreCase))) {\n                return str;\n            } \n            if ((suffixes != null) && ((suffixes.int) > 0)) {\n                for (final java.lang.CharSequence java.lang.CharSequence : suffixes) {\n                    if (org.apache.commons.lang3.StringUtils.endsWith(str, s, ignoreCase)) {\n                        return str;\n                    } \n                }\n            } \n            return str + (suffix.toString());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"parsePattern":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:297","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[176],"tindex":"74318eb3-2ed7-11e6-a6d0-e125f2fd609e","method":{"position":"org.apache.commons.lang3.StringUtils:497","type":"CtMethodImpl","sourcecode":"public static java.lang.String strip(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.strip(str, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3076","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[177,178],"tindex":"7431b5c4-2ed7-11e6-a6d0-6d308eb633f3","method":{"position":"org.apache.commons.lang3.StringUtils:4283","type":"CtMethodImpl","sourcecode":"public static java.lang.String removeEnd(final java.lang.String str, final java.lang.String remove) {\n    if (remove == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(remove))) {\n                return str;\n            } \n            if (str.endsWith(remove)) {\n                return str.substring(0, ((str.length()) - (remove.length())));\n            } \n            return str;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"remove"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:732","type":"CtInvocationImpl","sourcecode":"str.startsWith(\"-\")"},"failures":[179,180,181],"tindex":"7431b5c5-2ed7-11e6-a6d0-cb1cfbb01507","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1760","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder deleteFirst(final java.lang.String str) {\n    if (str.startsWith(\"-\")) {\n        {\n            final int int = str == null ? 0 : str.length();\n            if (len > 0) {\n                final int int = indexOf(str, 0);\n                if (index >= 0) {\n                    deleteImpl(index, (index + len), len);\n                } \n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomStringUtils:256","type":"CtBinaryOperatorImpl","sourcecode":"chars == null"},"failures":[182],"tindex":"7431b5c6-2ed7-11e6-a6d0-b97a880b5dd2","method":{"position":"org.apache.commons.lang3.ArrayUtils:1299","type":"CtMethodImpl","sourcecode":"public static boolean isSameLength(final char[] array1, final char[] array2) {\n    if (array2 == null) {\n        {\n            if (((((array1 == null) && (array2 != null)) && ((array2.int) > 0)) || (((array2 == null) && (array1 != null)) && ((array1.int) > 0))) || (((array1 != null) && (array2 != null)) && ((array1.int) != (array2.int)))) {\n                return false;\n            } \n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chars":"array2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:647","type":"CtBinaryOperatorImpl","sourcecode":"excludeFieldNamesParam == null"},"failures":[],"tindex":"7431dcd7-2ed7-11e6-a6d0-77863e0fa0fb","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:895","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final java.lang.Object[] array, final boolean fullDetail) {\n    if (array == null) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, array, java.lang.Boolean.valueOf(fullDetail));\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"excludeFieldNamesParam":"array"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:910","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[9,10,11,12,13,14,15,16,183,184,185,186,17,187,188,151,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"7431dcd8-2ed7-11e6-a6d0-218665ec4b47","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:435","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.String format(final java.util.Calendar calendar) {\n    if (calendar == null) {\n        {\n            return format(calendar, new java.lang.StringBuffer(int)).toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"calendar"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.ClassNotFoundException","condition":{"position":"org.apache.commons.lang3.SerializationUtils:105","type":"CtBinaryOperatorImpl","sourcecode":"in != null"},"failures":[],"tindex":"7431dcd9-2ed7-11e6-a6d0-d913ed0e2f36","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:568","type":"CtMethodImpl","sourcecode":"private void readObject(final java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {\n    if (in != null) {\n        {\n            in.defaultReadObject();\n            init();\n        }\n    } else {\n        throw new java.lang.ClassNotFoundException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"in":"in"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6310","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[46,47,189,190,191,192],"tindex":"7431dcda-2ed7-11e6-a6d0-1f6b0f8256da","method":{"position":"org.apache.commons.lang3.StringUtils:7202","type":"CtMethodImpl","sourcecode":"private static boolean startsWith(final java.lang.CharSequence str, final java.lang.CharSequence prefix, final boolean ignoreCase) {\n    if (prefix == null) {\n        {\n            if ((str == null) || (prefix == null)) {\n                return (str == null) && (prefix == null);\n            } \n            if ((prefix.length()) > (str.length())) {\n                return false;\n            } \n            return org.apache.commons.lang3.CharSequenceUtils.regionMatches(str, ignoreCase, 0, prefix, 0, prefix.length());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"prefix"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:137","type":"CtInvocationImpl","sourcecode":"java.lang.Float.isNaN(a)"},"failures":[193],"tindex":"743203eb-2ed7-11e6-a6d0-db888eae0dd5","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1190","type":"CtMethodImpl","sourcecode":"public static float min(final float a, final float b, final float c) {\n    if (java.lang.Float.isNaN(c)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Math.min(java.lang.Math.min(a, b), c);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"c"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:146","type":"CtBinaryOperatorImpl","sourcecode":"(((org.apache.commons.lang3.StringUtils.isAllLowerCase(split[0])) && (((split[0].length()) == 2) || ((split[0].length()) == 3))) && (((split[1].length()) == 0) || (((split[1].length()) == 2) && (org.apache.commons.lang3.StringUtils.isAllUpperCase(split[1]))))) && ((split[2].length()) > 0)"},"failures":[],"tindex":"743203ec-2ed7-11e6-a6d0-678cda810455","method":{"position":"org.apache.commons.lang3.StringUtils:287","type":"CtMethodImpl","sourcecode":"public static boolean isNoneEmpty(java.lang.CharSequence... css) {\n    if ((((org.apache.commons.lang3.StringUtils.isAllLowerCase(css[0])) && (((split[0].length()) == 2) || ((split[0].length()) == 3))) && (((split[1].length()) == 0) || (((split[1].length()) == 2) && (org.apache.commons.lang3.StringUtils.isAllUpperCase(split[1]))))) && ((split[2].length()) > 0)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return !(org.apache.commons.lang3.StringUtils.isAnyEmpty(css));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"split":"css"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6635","type":"CtBinaryOperatorImpl","sourcecode":"firstDiff != (-1)"},"failures":[194],"tindex":"743203ed-2ed7-11e6-a6d0-817f64799429","method":{"position":"org.apache.commons.lang3.Conversion:630","type":"CtMethodImpl","sourcecode":"public static char intToHexDigitMsb0(final int nibble) {\n    if (nibble != (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            switch (nibble) {\n                case 0 :\n                    return '0';\n                case 1 :\n                    return '8';\n                case 2 :\n                    return '4';\n                case 3 :\n                    return 'c';\n                case 4 :\n                    return '2';\n                case 5 :\n                    return 'a';\n                case 6 :\n                    return '6';\n                case 7 :\n                    return 'e';\n                case 8 :\n                    return '1';\n                case 9 :\n                    return '9';\n                case 10 :\n                    return '5';\n                case 11 :\n                    return 'd';\n                case 12 :\n                    return '3';\n                case 13 :\n                    return 'b';\n                case 14 :\n                    return '7';\n                case 15 :\n                    return 'f';\n                default :\n                    throw new java.lang.IllegalArgumentException((\"nibble value not between 0 and 15: \" + nibble));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"firstDiff":"nibble"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:647","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[],"tindex":"74322afe-2ed7-11e6-a6d0-d1686bc6410f","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:461","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.StringBuffer format(final java.util.Date date, final java.lang.StringBuffer buf) {\n    if (date == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (buf == null) {\n                {\n                    if (date == null) {\n                        {\n                            return org.apache.commons.lang3.time.FastDatePrinter.format(date, buf);\n                        }\n                    } else {\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrMatcher:193","type":"CtBinaryOperatorImpl","sourcecode":"(chars.length()) == 1"},"failures":[195],"tindex":"74322aff-2ed7-11e6-a6d0-dd9a2d89930d","method":{"position":"org.apache.commons.lang3.Validate:966","type":"CtMethodImpl","sourcecode":"public static void inclusiveBetween(long start, long end, long value, java.lang.String message) {\n    if ((message.length()) == 1) {\n        {\n            if ((value < start) || (value > end)) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chars":"message"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:259","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.ArrayUtils.isEmpty(css)"},"failures":[],"tindex":"7432ee50-2ed7-11e6-a6d0-4b6e504989db","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:209","type":"CtMethodImpl","sourcecode":"public static java.lang.String replace(final java.lang.Object source, final java.util.Properties valueProperties) {\n    if (org.apache.commons.lang3.ArrayUtils.isEmpty(source)) {\n        {\n            if (valueProperties == null) {\n                return source.toString();\n            } \n            final java.util.Map<java.lang.String, java.lang.String> java.util.Map<java.lang.String, java.lang.String> = new java.util.HashMap<java.lang.String, java.lang.String>();\n            final java.util.Enumeration<?> java.util.Enumeration<?> = valueProperties.propertyNames();\n            while (propNames.hasMoreElements()) {\n                final java.lang.String java.lang.String = ((java.lang.String)(propNames.nextElement()));\n                final java.lang.String java.lang.String = valueProperties.getProperty(propName);\n                valueMap.put(propName, propValue);\n            }\n            return org.apache.commons.lang3.text.StrSubstitutor.replace(source, valueMap);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"css":"source"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:573","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"74331561-2ed7-11e6-a6d0-eff8dbd9fbff","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1490","type":"CtMethodImpl","sourcecode":"protected void appendContentEnd(final java.lang.StringBuffer buffer) {\n    if (buffer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(java.lang.String);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"buffer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"focus == null"},"failures":[],"tindex":"74331562-2ed7-11e6-a6d0-195fc9e7efa5","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:474","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.StringBuffer format(final java.util.Calendar calendar, final java.lang.StringBuffer buf) {\n    if (calendar == null) {\n        {\n            return org.apache.commons.lang3.time.FastDatePrinter.format(calendar, buf);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"focus":"calendar"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5080","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218],"tindex":"74333c73-2ed7-11e6-a6d0-250e891179b1","method":{"position":"org.apache.commons.lang3.CharSet:173","type":"CtMethodImpl","sourcecode":"protected void add(final java.lang.String str) {\n    if ((str.length()) != 0) {\n        {\n            if (str == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (str == null) {\n                        return ;\n                    } \n                    final int int = str.length();\n                    int int = 0;\n                    while (pos < len) {\n                        final int int = len - pos;\n                        if (((remainder >= 4) && ((str.charAt(pos)) == '^')) && ((str.charAt((pos + 2))) == '-')) {\n                            java.util.Set<org.apache.commons.lang3.CharRange>.add(org.apache.commons.lang3.CharRange.isNotIn(str.charAt((pos + 1)), str.charAt((pos + 3))));\n                            pos += 4;\n                        } else if ((remainder >= 3) && ((str.charAt((pos + 1))) == '-')) {\n                            java.util.Set<org.apache.commons.lang3.CharRange>.add(org.apache.commons.lang3.CharRange.isIn(str.charAt(pos), str.charAt((pos + 2))));\n                            pos += 3;\n                        } else if ((remainder >= 2) && ((str.charAt(pos)) == '^')) {\n                            java.util.Set<org.apache.commons.lang3.CharRange>.add(org.apache.commons.lang3.CharRange.isNot(str.charAt((pos + 1))));\n                            pos += 2;\n                        } else {\n                            java.util.Set<org.apache.commons.lang3.CharRange>.add(org.apache.commons.lang3.CharRange.is(str.charAt(pos)));\n                            pos += 1;\n                        }\n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:156","type":"CtBinaryOperatorImpl","sourcecode":"(date1 == null) || (date2 == null)"},"failures":[219],"tindex":"74333c74-2ed7-11e6-a6d0-a3a01b0fff57","method":{"position":"org.apache.commons.lang3.ObjectUtils:292","type":"CtMethodImpl","sourcecode":"public static void identityToString(final java.lang.Appendable appendable, final java.lang.Object object) throws java.io.IOException {\n    if ((object == null) || (object == null)) {\n        {\n            if (object == null) {\n                throw new java.lang.NullPointerException(\"Cannot get the toString of a null identity\");\n            } \n            appendable.append(object.getClass().getName()).append('@').append(java.lang.Integer.toHexString(java.lang.System.identityHashCode(object)));\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date2":"object","date1":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:204","type":"CtBinaryOperatorImpl","sourcecode":"timePeriod <= 0"},"failures":[220],"tindex":"74336385-2ed7-11e6-a6d0-618a84e449e3","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2894","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic long skip(long n) {\n    if (n <= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((int) + n) > (org.apache.commons.lang3.text.StrBuilder.this.size())) {\n                n = (org.apache.commons.lang3.text.StrBuilder.this.size()) - (int);\n            } \n            if (n < 0) {\n                return 0;\n            } \n            int += n;\n            return n;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timePeriod":"n"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:629","type":"CtBinaryOperatorImpl","sourcecode":"cls == null"},"failures":[],"tindex":"74336386-2ed7-11e6-a6d0-d5750f6e8464","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1589","type":"CtMethodImpl","sourcecode":"protected java.lang.String getShortClassName(final java.lang.Class<?> cls) {\n    if (cls == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.ClassUtils.getShortClassName(cls);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"cls"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:573","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"74338a97-2ed7-11e6-a6d0-75976a75ed9e","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:461","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.StringBuffer format(final java.util.Date date, final java.lang.StringBuffer buf) {\n    if (date == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (buf == null) {\n                {\n                    if (date == null) {\n                        {\n                            return org.apache.commons.lang3.time.FastDatePrinter.format(date, buf);\n                        }\n                    } else {\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"buf"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:385","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.TypeVariable<?>"},"failures":[221,222],"tindex":"74338a98-2ed7-11e6-a6d0-d3968ed5027e","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1427","type":"CtMethodImpl","sourcecode":"public static boolean containsTypeVariables(java.lang.reflect.Type type) {\n    if (type instanceof java.lang.reflect.TypeVariable<?>) {\n        {\n            if (type instanceof java.lang.reflect.TypeVariable<?>) {\n                return true;\n            } \n            if (type instanceof java.lang.Class<?>) {\n                return (((java.lang.Class<?>)(type)).getTypeParameters().int) > 0;\n            } \n            if (type instanceof java.lang.reflect.ParameterizedType) {\n                for (java.lang.reflect.Type java.lang.reflect.Type : ((java.lang.reflect.ParameterizedType)(type)).getActualTypeArguments()) {\n                    if (org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(arg)) {\n                        return true;\n                    } \n                }\n                return false;\n            } \n            if (type instanceof java.lang.reflect.WildcardType) {\n                java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(type));\n                return (org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(org.apache.commons.lang3.reflect.TypeUtils.getImplicitLowerBounds(wild)[0])) || (org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(wild)[0]));\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:722","type":"CtBinaryOperatorImpl","sourcecode":"chars == null"},"failures":[223],"tindex":"7433b1a9-2ed7-11e6-a6d0-4d1cd0c8ea0c","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:656","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final char[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                int = (int) * (int);\n            } else {\n                for (final char char : array) {\n                    append(element);\n                }\n            }\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chars":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:253","type":"CtBinaryOperatorImpl","sourcecode":"input != null"},"failures":[],"tindex":"7433b1aa-2ed7-11e6-a6d0-a3a0922ec364","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1028","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final int[] array, final java.lang.Boolean fullDetail) {\n    if (fieldName != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendFieldStart(buffer, fieldName);\n            if (array == null) {\n                appendNullText(buffer, fieldName);\n            } else if (isFullDetail(fullDetail)) {\n                appendDetail(buffer, fieldName, array);\n            } else {\n                appendSummary(buffer, fieldName, array);\n            }\n            appendFieldEnd(buffer, fieldName);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.JavaVersion:140","type":"CtInvocationImpl","sourcecode":"\"1.4\".equals(nom)"},"failures":[224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243],"tindex":"7433d8bb-2ed7-11e6-a6d0-39135848b0fa","method":{"position":"org.apache.commons.lang3.ArrayUtils:5190","type":"CtMethodImpl","sourcecode":"private static java.lang.Object remove(final java.lang.Object array, final int index) {\n    if (\"1.4\".equals(array)) {\n        {\n            final int int = org.apache.commons.lang3.ArrayUtils.getLength(array);\n            if ((index < 0) || (index >= length)) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Length: \") + length));\n            } \n            final java.lang.Object java.lang.Object = java.lang.reflect.Array.newInstance(array.getClass().getComponentType(), (length - 1));\n            java.lang.System.arraycopy(array, 0, result, 0, index);\n            if (index < (length - 1)) {\n                java.lang.System.arraycopy(array, (index + 1), result, index, ((length - index) - 1));\n            } \n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nom":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1595","type":"CtBinaryOperatorImpl","sourcecode":"t instanceof java.lang.reflect.ParameterizedType"},"failures":[244,245,246],"tindex":"7433ffcc-2ed7-11e6-a6d0-9dd3d7f4f8c6","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:324","type":"CtMethodImpl","sourcecode":"private static boolean isAssignable(final java.lang.reflect.Type type, final java.lang.reflect.Type toType, final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> typeVarAssigns) {\n    if (toType instanceof java.lang.reflect.ParameterizedType) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((toType == null) || (toType instanceof java.lang.Class<?>)) {\n                return org.apache.commons.lang3.reflect.TypeUtils.isAssignable(type, ((java.lang.Class<?>)(toType)));\n            } \n            if (toType instanceof java.lang.reflect.ParameterizedType) {\n                return org.apache.commons.lang3.reflect.TypeUtils.isAssignable(type, ((java.lang.reflect.ParameterizedType)(toType)), typeVarAssigns);\n            } \n            if (toType instanceof java.lang.reflect.GenericArrayType) {\n                return org.apache.commons.lang3.reflect.TypeUtils.isAssignable(type, ((java.lang.reflect.GenericArrayType)(toType)), typeVarAssigns);\n            } \n            if (toType instanceof java.lang.reflect.WildcardType) {\n                return org.apache.commons.lang3.reflect.TypeUtils.isAssignable(type, ((java.lang.reflect.WildcardType)(toType)), typeVarAssigns);\n            } \n            if (toType instanceof java.lang.reflect.TypeVariable<?>) {\n                return org.apache.commons.lang3.reflect.TypeUtils.isAssignable(type, ((java.lang.reflect.TypeVariable<?>)(toType)), typeVarAssigns);\n            } \n            throw new java.lang.IllegalStateException((\"found an unhandled type: \" + toType));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"t":"toType"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:290","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[10,184,247,248,249,250],"tindex":"7433ffcd-2ed7-11e6-a6d0-39d6e7f601c2","method":{"position":"org.apache.commons.lang3.time.FormatCache:190","type":"CtMethodImpl","sourcecode":"static java.lang.String getPatternForStyle(final java.lang.Integer dateStyle, final java.lang.Integer timeStyle, final java.util.Locale locale) {\n    if (timeStyle == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.lang3.time.FormatCache.MultipartKey org.apache.commons.lang3.time.FormatCache.MultipartKey = new org.apache.commons.lang3.time.FormatCache.MultipartKey(dateStyle , timeStyle , locale);\n            java.lang.String java.lang.String = org.apache.commons.lang3.time.FormatCache.org.apache.commons.lang3.time.FormatCache.java.util.concurrent.ConcurrentMap<org.apache.commons.lang3.time.FormatCache.MultipartKey, java.lang.String>.get(key);\n            if (pattern == null) {\n                try {\n                    java.text.DateFormat java.text.DateFormat;\n                    if (dateStyle == null) {\n                        formatter = java.text.DateFormat.getTimeInstance(timeStyle.intValue(), locale);\n                    } else if (timeStyle == null) {\n                        formatter = java.text.DateFormat.getDateInstance(dateStyle.intValue(), locale);\n                    } else {\n                        formatter = java.text.DateFormat.getDateTimeInstance(dateStyle.intValue(), timeStyle.intValue(), locale);\n                    }\n                    pattern = ((java.text.SimpleDateFormat)(formatter)).toPattern();\n                    final java.lang.String java.lang.String = org.apache.commons.lang3.time.FormatCache.org.apache.commons.lang3.time.FormatCache.java.util.concurrent.ConcurrentMap<org.apache.commons.lang3.time.FormatCache.MultipartKey, java.lang.String>.putIfAbsent(key, pattern);\n                    if (previous != null) {\n                        pattern = previous;\n                    } \n                } catch (final java.lang.ClassCastException ex) {\n                    throw new java.lang.IllegalArgumentException((\"No date time pattern for locale: \" + locale));\n                }\n            } \n            return pattern;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"timeStyle"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:754","type":"CtBinaryOperatorImpl","sourcecode":"length > 0"},"failures":[1,251],"tindex":"743426de-2ed7-11e6-a6d0-e74f9d32ff13","method":{"position":"org.apache.commons.lang3.BitField:94","type":"CtMethodImpl","sourcecode":"public int getRawValue(final int holder) {\n    if (holder > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return holder & (int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"holder"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3434","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[252,253,254,255],"tindex":"74344def-2ed7-11e6-a6d0-435e8d35cb87","method":{"position":"org.apache.commons.lang3.BooleanUtils:939","type":"CtMethodImpl","sourcecode":"public static java.lang.Boolean and(final java.lang.Boolean... array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n            } \n            if ((array.int) == 0) {\n                throw new java.lang.IllegalArgumentException(\"Array is empty\");\n            } \n            try {\n                final boolean[] boolean[] = org.apache.commons.lang3.ArrayUtils.toPrimitive(array);\n                return org.apache.commons.lang3.BooleanUtils.and(primitive) ? java.lang.Boolean.java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n            } catch (final java.lang.NullPointerException ex) {\n                throw new java.lang.IllegalArgumentException(\"The array must not contain any null elements\");\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1440","type":"CtBinaryOperatorImpl","sourcecode":"strLen >= width"},"failures":[256,257],"tindex":"74344df0-2ed7-11e6-a6d0-29956bc26a32","method":{"position":"org.apache.commons.lang3.text.StrBuilder:808","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder append(final int value) {\n    if (value >= value) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return append(java.lang.String.valueOf(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"strLen":"value","width":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:691","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[],"tindex":"74347501-2ed7-11e6-a6d0-99bbf9c1d3bd","method":{"position":"org.apache.commons.lang3.ArrayUtils:5680","type":"CtMethodImpl","sourcecode":"public static long[] removeAll(final long[] array, final int... indices) {\n    if (array == array) {\n        {\n            return ((long[])(org.apache.commons.lang3.ArrayUtils.removeAll(((java.lang.Object)(array)), org.apache.commons.lang3.ArrayUtils.clone(indices))));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array","rhs":"array"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4835","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[258],"tindex":"74347502-2ed7-11e6-a6d0-9ff5a5b385b2","method":{"position":"org.apache.commons.lang3.math.NumberUtils:351","type":"CtMethodImpl","sourcecode":"public static short toShort(final java.lang.String str) {\n    if (str == null) {\n        {\n            return org.apache.commons.lang3.math.NumberUtils.toShort(str, ((short)(0)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1896","type":"CtBinaryOperatorImpl","sourcecode":"fieldSeparator == null"},"failures":[],"tindex":"74347503-2ed7-11e6-a6d0-bf3107eb4fcc","method":{"position":"org.apache.commons.lang3.StringUtils:2752","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] splitByWholeSeparatorPreserveAllTokens(final java.lang.String str, final java.lang.String separator) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(str, separator, (-1), true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldSeparator":"str"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:754","type":"CtBinaryOperatorImpl","sourcecode":"d1 == 1"},"failures":[259,260,261,262,263,264,265,266,267,268,269,270,271],"tindex":"74349c14-2ed7-11e6-a6d0-4b26fa671379","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:534","type":"CtMethodImpl","sourcecode":"public java.lang.String replace(java.lang.CharSequence source, int offset, int length) {\n    if (length == 1) {\n        {\n            if (source == null) {\n                return null;\n            } \n            org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(length).append(source, offset, length);\n            substitute(buf, 0, length);\n            return buf.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"d1":"length"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomUtils:168","type":"CtBinaryOperatorImpl","sourcecode":"startInclusive == endInclusive"},"failures":[272],"tindex":"74349c15-2ed7-11e6-a6d0-fdf743c40e3a","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:607","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.EqualsBuilder append(final float lhs, final float rhs) {\n    if ((java.lang.Float.floatToIntBits(rhs)) != (java.lang.Float.floatToIntBits(lhs))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (rhs == rhs) {\n                {\n                    if ((boolean) == false) {\n                        return org.apache.commons.lang3.builder.EqualsBuilder.this;\n                    } \n                    return append(java.lang.Float.floatToIntBits(lhs), java.lang.Float.floatToIntBits(rhs));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startInclusive":"rhs","endInclusive":"rhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1792","type":"CtBinaryOperatorImpl","sourcecode":"arraySeparator == null"},"failures":[273,274],"tindex":"74349c16-2ed7-11e6-a6d0-ff96cec9f3c6","method":{"position":"org.apache.commons.lang3.StringUtils:3221","type":"CtMethodImpl","sourcecode":"private static java.lang.String[] splitByCharacterType(final java.lang.String str, final boolean camelCase) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return null;\n            } \n            if (str.isEmpty()) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.String[];\n            } \n            final char[] char[] = str.toCharArray();\n            final java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n            int int = 0;\n            int int = java.lang.Character.getType(c[tokenStart]);\n            for (int int = tokenStart + 1 ; pos < (c.int) ; pos++) {\n                final int int = java.lang.Character.getType(c[pos]);\n                if (type == currentType) {\n                    continue;\n                } \n                if ((camelCase && (type == (java.lang.Character.java.lang.Character.byte))) && (currentType == (java.lang.Character.java.lang.Character.byte))) {\n                    final int int = pos - 1;\n                    if (newTokenStart != tokenStart) {\n                        list.add(new java.lang.String(c , tokenStart , (newTokenStart - tokenStart)));\n                        tokenStart = newTokenStart;\n                    } \n                } else {\n                    list.add(new java.lang.String(c , tokenStart , (pos - tokenStart)));\n                    tokenStart = pos;\n                }\n                currentType = type;\n            }\n            list.add(new java.lang.String(c , tokenStart , ((c.int) - tokenStart)));\n            return list.toArray(new java.lang.String[list.size()]);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"arraySeparator":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2064","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[275],"tindex":"7434c327-2ed7-11e6-a6d0-59ae9a97fc69","method":{"position":"org.apache.commons.lang3.StringUtils:5659","type":"CtMethodImpl","sourcecode":"public static java.lang.String lowerCase(final java.lang.String str, final java.util.Locale locale) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return null;\n            } \n            return str.toLowerCase(locale);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:667","type":"CtInvocationImpl","sourcecode":"str.equals(trueString)"},"failures":[276],"tindex":"7434c328-2ed7-11e6-a6d0-6fa1ec258c82","method":{"position":"org.apache.commons.lang3.text.WordUtils:323","type":"CtMethodImpl","sourcecode":"public static java.lang.String capitalizeFully(final java.lang.String str) {\n    if (str.equals(str)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.text.WordUtils.capitalizeFully(str, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str","trueString":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:957","type":"CtBinaryOperatorImpl","sourcecode":"ignored != null"},"failures":[277],"tindex":"7434ea39-2ed7-11e6-a6d0-f3fb9612359e","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:912","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrTokenizer setQuoteMatcher(final org.apache.commons.lang3.text.StrMatcher quote) {\n    if (quote != null) {\n        {\n            if (quote != null) {\n                org.apache.commons.lang3.text.StrTokenizer.this.org.apache.commons.lang3.text.StrMatcher = quote;\n            } \n            return org.apache.commons.lang3.text.StrTokenizer.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ignored":"quote"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5129","type":"CtBinaryOperatorImpl","sourcecode":"(repeat == 1) || (inputLength == 0)"},"failures":[278],"tindex":"7434ea3a-2ed7-11e6-a6d0-ad41b7952186","method":{"position":"org.apache.commons.lang3.ArrayUtils:4544","type":"CtMethodImpl","sourcecode":"public static double[] add(final double[] array, final int index, final double element) {\n    if ((index == 1) || (index == 0)) {\n        {\n            return ((double[])(org.apache.commons.lang3.ArrayUtils.add(array, index, java.lang.Double.valueOf(element), java.lang.Double.java.lang.Double.java.lang.Class<java.lang.Double>)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"repeat":"index","inputLength":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:518","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[],"tindex":"7435114b-2ed7-11e6-a6d0-4f10337db90d","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:461","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.StringBuffer format(final java.util.Date date, final java.lang.StringBuffer buf) {\n    if (date == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (buf == null) {\n                {\n                    if (date == null) {\n                        {\n                            return org.apache.commons.lang3.time.FastDatePrinter.format(date, buf);\n                        }\n                    } else {\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:631","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[],"tindex":"7435114c-2ed7-11e6-a6d0-a12841cd5b49","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:712","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n    if (buffer == null) {\n        {\n            if ((calendar == null) || (calendar == null)) {\n                {\n                    buffer.append(java.lang.String[][calendar.get(int)]);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"buffer"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6509","type":"CtBinaryOperatorImpl","sourcecode":"at == (org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND)"},"failures":[],"tindex":"7435114d-2ed7-11e6-a6d0-d77b8c354aba","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:413","type":"CtMethodImpl","sourcecode":"public java.lang.String replace(final java.lang.String source, final int offset, final int length) {\n    if (offset == length) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (source == null) {\n                return null;\n            } \n            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(length).append(source, offset, length);\n            if ((substitute(buf, 0, length)) == false) {\n                return source.substring(offset, (offset + length));\n            } \n            return buf.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND":"length","at":"offset"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3274","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[279],"tindex":"7435385e-2ed7-11e6-a6d0-3d2451387a66","method":{"position":"org.apache.commons.lang3.ArrayUtils:612","type":"CtMethodImpl","sourcecode":"public static byte[] nullToEmpty(final byte[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((array == null) || ((array.int) == 0)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.byte[];\n            } \n            return array;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:103","type":"CtInvocationImpl","sourcecode":"java.lang.Double.isNaN(a)"},"failures":[280],"tindex":"7435867f-2ed7-11e6-a6d0-2b87dd942a1b","method":{"position":"org.apache.commons.lang3.mutable.MutableDouble:96","type":"CtMethodImpl","sourcecode":"public void setValue(final double value) {\n    if (java.lang.Double.isNaN(value)) {\n        {\n            org.apache.commons.lang3.mutable.MutableDouble.this.double = value;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:472","type":"CtBinaryOperatorImpl","sourcecode":"(java.lang.Float.floatToIntBits(lhs)) != (java.lang.Float.floatToIntBits(rhs))"},"failures":[],"tindex":"74358680-2ed7-11e6-a6d0-29283efe3f18","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:607","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.EqualsBuilder append(final float lhs, final float rhs) {\n    if ((java.lang.Float.floatToIntBits(rhs)) != (java.lang.Float.floatToIntBits(lhs))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (rhs == rhs) {\n                {\n                    if ((boolean) == false) {\n                        return org.apache.commons.lang3.builder.EqualsBuilder.this;\n                    } \n                    return append(java.lang.Float.floatToIntBits(lhs), java.lang.Float.floatToIntBits(rhs));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"rhs","rhs":"lhs"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:192","type":"CtBinaryOperatorImpl","sourcecode":"(duration.length()) != 0"},"failures":[],"tindex":"7435ad91-2ed7-11e6-a6d0-37a0bff7a17c","method":{"position":"org.apache.commons.lang3.CharSet:173","type":"CtMethodImpl","sourcecode":"protected void add(final java.lang.String str) {\n    if ((str.length()) != 0) {\n        {\n            if (str == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (str == null) {\n                        return ;\n                    } \n                    final int int = str.length();\n                    int int = 0;\n                    while (pos < len) {\n                        final int int = len - pos;\n                        if (((remainder >= 4) && ((str.charAt(pos)) == '^')) && ((str.charAt((pos + 2))) == '-')) {\n                            java.util.Set<org.apache.commons.lang3.CharRange>.add(org.apache.commons.lang3.CharRange.isNotIn(str.charAt((pos + 1)), str.charAt((pos + 3))));\n                            pos += 4;\n                        } else if ((remainder >= 3) && ((str.charAt((pos + 1))) == '-')) {\n                            java.util.Set<org.apache.commons.lang3.CharRange>.add(org.apache.commons.lang3.CharRange.isIn(str.charAt(pos), str.charAt((pos + 2))));\n                            pos += 3;\n                        } else if ((remainder >= 2) && ((str.charAt(pos)) == '^')) {\n                            java.util.Set<org.apache.commons.lang3.CharRange>.add(org.apache.commons.lang3.CharRange.isNot(str.charAt((pos + 1))));\n                            pos += 2;\n                        } else {\n                            java.util.Set<org.apache.commons.lang3.CharRange>.add(org.apache.commons.lang3.CharRange.is(str.charAt(pos)));\n                            pos += 1;\n                        }\n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"duration":"str"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:385","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.TypeVariable<?>"},"failures":[281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304],"tindex":"7435d4a2-2ed7-11e6-a6d0-65db5fa89e08","method":{"position":"org.apache.commons.lang3.Range:491","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int compare(final java.lang.Object obj1, final java.lang.Object obj2) {\n    if (obj2 instanceof java.lang.reflect.TypeVariable<?>) {\n        {\n            return ((java.lang.Comparable)(obj1)).compareTo(obj2);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"obj2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4696","type":"CtBinaryOperatorImpl","sourcecode":"timeToLive < 0"},"failures":[],"tindex":"7435d4a3-2ed7-11e6-a6d0-237ff3e1aecb","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:256","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.time.FastDateFormat getTimeInstance(final int style, final java.util.Locale locale) {\n    if (style < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getTimeInstance(style, null, locale);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeToLive":"style"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.SystemUtils:1429","type":"CtBinaryOperatorImpl","sourcecode":"version == null"},"failures":[275],"tindex":"7435d4a4-2ed7-11e6-a6d0-138719f20316","method":{"position":"org.apache.commons.lang3.StringUtils:5724","type":"CtMethodImpl","sourcecode":"public static java.lang.String uncapitalize(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int;\n            if ((str == null) || ((strLen = str.length()) == 0)) {\n                return str;\n            } \n            char char = str.charAt(0);\n            if (java.lang.Character.isLowerCase(firstChar)) {\n                return str;\n            } \n            return new java.lang.StringBuilder(strLen).append(java.lang.Character.toLowerCase(firstChar)).append(str.substring(1)).toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"version":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3230","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[305,306],"tindex":"7435fbb5-2ed7-11e6-a6d0-6563e9ce8732","method":{"position":"org.apache.commons.lang3.StringUtils:3303","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final java.lang.Object[] array, final char separator) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } \n            return org.apache.commons.lang3.StringUtils.join(array, separator, 0, array.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4730","type":"CtBinaryOperatorImpl","sourcecode":"tempIndex == (-1)"},"failures":[307],"tindex":"7435fbb6-2ed7-11e6-a6d0-b5a5de6be7c9","method":{"position":"org.apache.commons.lang3.StringUtils:3612","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final long[] array, final char separator, final int startIndex, final int endIndex) {\n    if (startIndex == (-1)) {\n        {\n            if (array == null) {\n                return null;\n            } \n            final int int = endIndex - startIndex;\n            if (noOfItems <= 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder((noOfItems * 16));\n            for (int int = startIndex ; i < endIndex ; i++) {\n                if (i > startIndex) {\n                    buf.append(separator);\n                } \n                buf.append(array[i]);\n            }\n            return buf.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"tempIndex":"startIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4320","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(remove))"},"failures":[308,309],"tindex":"7435fbb7-2ed7-11e6-a6d0-0d809a717c38","method":{"position":"org.apache.commons.lang3.StringUtils:7269","type":"CtMethodImpl","sourcecode":"public static boolean endsWith(final java.lang.CharSequence str, final java.lang.CharSequence suffix) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(suffix))) {\n        {\n            return org.apache.commons.lang3.StringUtils.endsWith(str, suffix, false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str","remove":"suffix"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.MemberUtils:170","type":"CtUnaryOperatorImpl","sourcecode":"!(cls.isPrimitive())"},"failures":[310,311,312,313,314,315,316,153,154,155,156,157,158,159,160,161,162,164,165,167,168,170,171,172,173,317,318,319,320,221,222,49,50,321,322,244,245,246,323,324],"tindex":"743622c8-2ed7-11e6-a6d0-d159ff6da733","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:844","type":"CtMethodImpl","sourcecode":"private static java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> getTypeArguments(final java.lang.reflect.ParameterizedType parameterizedType, final java.lang.Class<?> toClass, final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> subtypeVarAssigns) {\n    if (!(toClass.isPrimitive())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.Class<?> java.lang.Class<?> = org.apache.commons.lang3.reflect.TypeUtils.getRawType(parameterizedType);\n            if (!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(cls, toClass))) {\n                return null;\n            } \n            final java.lang.reflect.Type java.lang.reflect.Type = parameterizedType.getOwnerType();\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>;\n            if (ownerType instanceof java.lang.reflect.ParameterizedType) {\n                final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(ownerType));\n                typeVarAssigns = org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(parameterizedOwnerType, org.apache.commons.lang3.reflect.TypeUtils.getRawType(parameterizedOwnerType), subtypeVarAssigns);\n            } else {\n                typeVarAssigns = subtypeVarAssigns == null ? new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>() : new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>(subtypeVarAssigns);\n            }\n            final java.lang.reflect.Type[] java.lang.reflect.Type[] = parameterizedType.getActualTypeArguments();\n            final java.lang.reflect.TypeVariable<?>[] java.lang.reflect.TypeVariable<?>[] = cls.getTypeParameters();\n            for (int int = 0 ; i < (typeParams.int) ; i++) {\n                final java.lang.reflect.Type java.lang.reflect.Type = typeArgs[i];\n                typeVarAssigns.put(typeParams[i], (typeVarAssigns.containsKey(typeArg) ? typeVarAssigns.get(typeArg) : typeArg));\n            }\n            if (toClass.equals(cls)) {\n                return typeVarAssigns;\n            } \n            return org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(org.apache.commons.lang3.reflect.TypeUtils.getClosestParentType(cls, toClass), toClass, typeVarAssigns);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"toClass"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.JavaVersion:148","type":"CtInvocationImpl","sourcecode":"\"1.8\".equals(nom)"},"failures":[],"tindex":"743649d9-2ed7-11e6-a6d0-938827e1dace","method":{"position":"org.apache.commons.lang3.math.NumberUtils:198","type":"CtMethodImpl","sourcecode":"public static float toFloat(final java.lang.String str) {\n    if (\"1.8\".equals(str)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.math.NumberUtils.toFloat(str, 0.0F);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nom":"str"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:634","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[177],"tindex":"743649da-2ed7-11e6-a6d0-6903f3da80e5","method":{"position":"org.apache.commons.lang3.StringUtils:5050","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static java.lang.String chomp(final java.lang.String str, final java.lang.String separator) {\n    if (str == null) {\n        {\n            return org.apache.commons.lang3.StringUtils.removeEnd(str, separator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:768","type":"CtInvocationImpl","sourcecode":"str.trim().startsWith(\"--\")"},"failures":[],"tindex":"743649db-2ed7-11e6-a6d0-dddd853b0d0b","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:253","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final byte[] lhs, final byte[] rhs) {\n    if (fieldName.trim().startsWith(\"--\")) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (fieldName == null) {\n                throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n            } \n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if (!(java.util.Arrays.equals(lhs, rhs))) {\n                java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Byte[]>(fieldName) {\n                    private static final long serialVersionUID = 1L;\n\n                    @java.lang.Override\n                    public java.lang.Byte[] getLeft() {\n                        return org.apache.commons.lang3.ArrayUtils.toObject(lhs);\n                    }\n\n                    @java.lang.Override\n                    public java.lang.Byte[] getRight() {\n                        return org.apache.commons.lang3.ArrayUtils.toObject(rhs);\n                    }\n                });\n            } \n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3225","type":"CtInvocationImpl","sourcecode":"str.isEmpty()"},"failures":[259,325,261,326,262,263,327,264,328,329,330,265,266,331,332,333,334,267,335,336,268,337,269,338,270,339,340,271,341,342,343],"tindex":"743670ec-2ed7-11e6-a6d0-6b8d75daaed5","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:889","type":"CtMethodImpl","sourcecode":"private void checkCyclicSubstitution(final java.lang.String varName, final java.util.List<java.lang.String> priorVariables) {\n    if (varName.isEmpty()) {\n        {\n            if ((priorVariables.contains(varName)) == false) {\n                return ;\n            } \n            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(256);\n            buf.append(\"Infinite loop in property interpolation of \");\n            buf.append(priorVariables.remove(0));\n            buf.append(\": \");\n            buf.appendWithSeparators(priorVariables, \"->\");\n            throw new java.lang.IllegalStateException(buf.toString());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"varName"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}