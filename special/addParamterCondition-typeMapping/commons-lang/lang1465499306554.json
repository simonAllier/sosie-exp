{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":61,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":72,"org.apache.commons.lang3.StringUtilsTest.testIsNoneEmpty":105,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":63,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringString":131,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang313":141,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSplit":3,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testDurationsByBruteForce":4,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":57,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":60,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":134,"org.apache.commons.lang3.ArrayUtilsTest.testIsEquals":74,"org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testOutOfBounds":137,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":148,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":151,"org.apache.commons.lang3.StringUtilsTest.testReplace_StringStringStringInt":31,"org.apache.commons.lang3.reflect.FieldUtilsTest.testRemoveFinalModifierAccessNotNeeded":27,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":166,"org.apache.commons.lang3.builder.EqualsBuilderTest.testIntArrayHiddenByObject":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":55,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiIntArray":85,"org.apache.commons.lang3.ArrayUtilsTest.testIsEmptyObject":106,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testJiraLang281":16,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":81,"org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testUnfinishedEntity":136,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":156,"org.apache.commons.lang3.builder.DiffBuilderTest.testSimilarObjectIgnoresAppends":78,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":159,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHiragana":146,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":153,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":97,"org.apache.commons.lang3.SystemUtilsTest.testOSMatchesNameAndVersion":168,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriod":5,"org.apache.commons.lang3.StringUtilsTest.testIsNoneBlank":104,"org.apache.commons.lang3.StringUtilsTest.testAppendIfMissing":71,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":75,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":98,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":48,"org.apache.commons.lang3.reflect.FieldUtilsTest.testRemoveFinalModifierWithoutAccess":26,"org.apache.commons.lang3.StringUtilsTest.testCenter_StringIntString":115,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvString":32,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringStringarray":130,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":80,"org.apache.commons.lang3.CharRangeTest.testContains_Char":121,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":49,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationISO":10,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":157,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":53,"org.apache.commons.lang3.StringUtilsTest.testPrependIfMissingIgnoreCase":120,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHtml4":140,"org.apache.commons.lang3.LocaleUtilsTest.testLocaleLookupList_Locale":119,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDuration":14,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testStartsWithAny":101,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":43,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":160,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":152,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":158,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":91,"org.apache.commons.lang3.BooleanUtilsTest.testXor_object_validInput_2items":20,"org.apache.commons.lang3.StringUtilsTest.testLeftPad_StringIntString":111,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":54,"org.apache.commons.lang3.builder.EqualsBuilderTest.testIntArray":87,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":95,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringStringarray":127,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":56,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringString":124,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":94,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":51,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":154,"org.apache.commons.lang3.StringUtilsTest.testRemove_String":28,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISOMethod":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":62,"org.apache.commons.lang3.math.NumberUtilsTest.testToFloatString":88,"org.apache.commons.lang3.StringUtilsTest.testReplaceOnce_StringStringString":29,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":93,"org.apache.commons.lang3.StringEscapeUtilsTest.testStandaloneAmphersand":139,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":24,"org.apache.commons.lang3.StringUtilsTest.testCenter_StringInt":112,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":70,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":50,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddCombinations":123,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":39,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":149,"org.apache.commons.lang3.math.NumberUtilsTest.testMaximumByte":169,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":37,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":40,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":41,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testStartsWithIgnoreCase":36,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeUnknownEntity":145,"org.apache.commons.lang3.StringUtilsTest.testLeftPad_StringIntChar":113,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvWriter":33,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":161,"org.apache.commons.lang3.StringUtilsTest.testUnescapeSurrogatePairs":138,"org.apache.commons.lang3.StringUtilsTest.testReplace_StringStringString":30,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml":147,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":150,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":82,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsert":118,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":162,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLowDurations":8,"org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testSupplementaryUnescaping":135,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":69,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":59,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLANG984":7,"org.apache.commons.lang3.text.StrBuilderTest.testGetChars":90,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLANG982":6,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":96,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testEdgeDurations":12,"org.apache.commons.lang3.StringUtilsTest.testIsAnyEmpty":103,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":79,"org.apache.commons.lang3.StringUtilsTest.testIsAnyBlank":102,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":46,"org.apache.commons.lang3.math.FractionTest.testFactory_String_proper":19,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":44,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":83,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlHighUnicode":142,"org.apache.commons.lang3.BooleanUtilsTest.testXor_primitive_validInput_3items":23,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":155,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationWords":15,"org.apache.commons.lang3.StringUtilsTest.testCenter_StringIntChar":110,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringStringarray":133,"org.apache.commons.lang3.BooleanUtilsTest.test_isNotFalse_Boolean":25,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":116,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringString":126,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":76,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationHMS":9,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyIntEmptyArray":109,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":42,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":58,"org.apache.commons.lang3.CharSetTest.testContains_Char":122,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":18,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfByteWithStartIndex":100,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":45,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":64,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":92,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvWriter":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":66,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_String_int_int":167,"org.apache.commons.lang3.reflect.TypeUtilsTest.testTypesSatisfyVariables":117,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":163,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfBoolean":0,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringString":125,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringString":129,"org.apache.commons.lang3.BooleanUtilsTest.testXor_primitive_validInput_2items":22,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringStringarray":132,"org.apache.commons.lang3.StringUtilsTest.testLeftPad_StringInt":114,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringStringarray":128,"org.apache.commons.lang3.BooleanUtilsTest.testXor_object_validInput_3items":21,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":67,"org.apache.commons.lang3.math.FractionTest.testFactory_String_improper":17,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSimpleGet":2,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementsObjectArray":107,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayInt":73,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfByte":99,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHexCharsHtml":143,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeXmlSupplementaryCharacters":144,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":164,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvString":34,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationPluralWords":13,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfBooleanWithStartIndex":1,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":52,"org.apache.commons.lang3.math.NumberUtilsTest.testToShortString":89,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":68,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyInt":108,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":165},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:987","type":"CtBinaryOperatorImpl","sourcecode":"(!done) && (((org.apache.commons.lang3.time.DateUtils.MODIFY_TRUNCATE) == modType) || (seconds < 30))"},"failures":[0,1],"tindex":"8b65ba5c-2e75-11e6-a8d1-4963822ce546","method":{"position":"org.apache.commons.lang3.ArrayUtils:2913","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final boolean[] array, final boolean valueToFind, int startIndex) {\n    if ((!valueToFind) && ((startIndex == startIndex) || (startIndex < 30))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } else if (startIndex >= (array.int)) {\n                startIndex = (array.int) - 1;\n            } \n            for (int int = startIndex ; i >= 0 ; i--) {\n                if (valueToFind == (array[i])) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"seconds":"startIndex","modType":"startIndex","org.apache.commons.lang3.time.DateUtils.MODIFY_TRUNCATE":"startIndex","done":"valueToFind"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:640","type":"CtBinaryOperatorImpl","sourcecode":"lhs != rhs"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"tindex":"8b6719ed-2e75-11e6-a8d1-53bcf211d3a1","method":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:415","type":"CtMethodImpl","sourcecode":"static java.lang.String format(final org.apache.commons.lang3.time.DurationFormatUtils.Token[] tokens, final long years, final long months, final long days, final long hours, final long minutes, final long seconds, long milliseconds, final boolean padWithZeros) {\n    if (days != minutes) {\n        {\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            boolean boolean = false;\n            final int int = tokens.int;\n            for (int int = 0 ; i < sz ; i++) {\n                final org.apache.commons.lang3.time.DurationFormatUtils.Token org.apache.commons.lang3.time.DurationFormatUtils.Token = tokens[i];\n                final java.lang.Object java.lang.Object = token.getValue();\n                final int int = token.getCount();\n                if (value instanceof java.lang.StringBuilder) {\n                    buffer.append(value.toString());\n                } else {\n                    if (value == (org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n                        buffer.append(org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(years, padWithZeros, count));\n                        lastOutputSeconds = false;\n                    } else if (value == (org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n                        buffer.append(org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(months, padWithZeros, count));\n                        lastOutputSeconds = false;\n                    } else if (value == (org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n                        buffer.append(org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(days, padWithZeros, count));\n                        lastOutputSeconds = false;\n                    } else if (value == (org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n                        buffer.append(org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(hours, padWithZeros, count));\n                        lastOutputSeconds = false;\n                    } else if (value == (org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n                        buffer.append(org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(minutes, padWithZeros, count));\n                        lastOutputSeconds = false;\n                    } else if (value == (org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n                        buffer.append(org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(seconds, padWithZeros, count));\n                        lastOutputSeconds = true;\n                    } else if (value == (org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n                        if (lastOutputSeconds) {\n                            int int = padWithZeros ? java.lang.Math.max(3, count) : 3;\n                            buffer.append(org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(milliseconds, true, width));\n                        } else {\n                            buffer.append(org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(milliseconds, padWithZeros, count));\n                        }\n                        lastOutputSeconds = false;\n                    } \n                }\n            }\n            return buffer.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"days","rhs":"minutes"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5122","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[17,18,19],"tindex":"8b67680e-2e75-11e6-a8d1-ddf6b718ed72","method":{"position":"org.apache.commons.lang3.math.Fraction:319","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.math.Fraction getFraction(java.lang.String str) {\n    if (str == null) {\n        {\n            if (str == null) {\n                throw new java.lang.IllegalArgumentException(\"The string must not be null\");\n            } \n            int int = str.indexOf('.');\n            if (pos >= 0) {\n                return org.apache.commons.lang3.math.Fraction.getFraction(java.lang.Double.parseDouble(str));\n            } \n            pos = str.indexOf(' ');\n            if (pos > 0) {\n                final int int = java.lang.Integer.parseInt(str.substring(0, pos));\n                str = str.substring((pos + 1));\n                pos = str.indexOf('/');\n                if (pos < 0) {\n                    throw new java.lang.NumberFormatException(\"The fraction could not be parsed as the format X Y/Z\");\n                } else {\n                    final int int = java.lang.Integer.parseInt(str.substring(0, pos));\n                    final int int = java.lang.Integer.parseInt(str.substring((pos + 1)));\n                    return org.apache.commons.lang3.math.Fraction.getFraction(whole, numer, denom);\n                }\n            } \n            pos = str.indexOf('/');\n            if (pos < 0) {\n                return org.apache.commons.lang3.math.Fraction.getFraction(java.lang.Integer.parseInt(str), 1);\n            } else {\n                final int int = java.lang.Integer.parseInt(str.substring(0, pos));\n                final int int = java.lang.Integer.parseInt(str.substring((pos + 1)));\n                return org.apache.commons.lang3.math.Fraction.getFraction(numer, denom);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1035","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"8b678f1f-2e75-11e6-a8d1-c13f8e1a4e20","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (obj == (org.apache.commons.lang3.reflect.TypeUtils.GenericArrayTypeImpl.this)) || ((obj instanceof java.lang.reflect.GenericArrayType) && (org.apache.commons.lang3.reflect.TypeUtils.equals(org.apache.commons.lang3.reflect.TypeUtils.GenericArrayTypeImpl.this, ((java.lang.reflect.GenericArrayType)(obj)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2914","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.ArrayUtils.isEmpty(array)"},"failures":[20,21,22,23],"tindex":"8b678f20-2e75-11e6-a8d1-394314aaad7c","method":{"position":"org.apache.commons.lang3.BooleanUtils:1040","type":"CtMethodImpl","sourcecode":"public static boolean xor(final boolean... array) {\n    if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n        {\n            if (array == null) {\n                throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n            } \n            if ((array.int) == 0) {\n                throw new java.lang.IllegalArgumentException(\"Array is empty\");\n            } \n            boolean boolean = false;\n            for (final boolean boolean : array) {\n                result ^= element;\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1223","type":"CtBinaryOperatorImpl","sourcecode":"0 == nShorts"},"failures":[],"tindex":"8b67b631-2e75-11e6-a8d1-4bd39707aa10","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2919","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void mark(final int readAheadLimit) {\n    if (0 == readAheadLimit) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int = int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nShorts":"readAheadLimit"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:202","type":"CtBinaryOperatorImpl","sourcecode":"(tmp.length()) != (duration.length())"},"failures":[],"tindex":"8b67dd42-2e75-11e6-a8d1-03a67931026d","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1073","type":"CtMethodImpl","sourcecode":"protected void appendSummary(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final int[] array) {\n    if ((fieldName.length()) != (fieldName.length())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendSummarySize(buffer, fieldName, array.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"duration":"fieldName","tmp":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2290","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (separator == null)"},"failures":[],"tindex":"8b67dd43-2e75-11e6-a8d1-ad3f891fb327","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1333","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final float[] array, final java.lang.Boolean fullDetail) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(fieldName)) || (fieldName == null)) {\n        {\n            appendFieldStart(buffer, fieldName);\n            if (array == null) {\n                appendNullText(buffer, fieldName);\n            } else if (isFullDetail(fullDetail)) {\n                appendDetail(buffer, fieldName, array);\n            } else {\n                appendSummary(buffer, fieldName, array);\n            }\n            appendFieldEnd(buffer, fieldName);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName","separator":"fieldName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:465","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[24],"tindex":"8b680454-2e75-11e6-a8d1-99c1512cc5e3","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:583","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void set(final java.lang.String obj) {\n    if (obj == null) {\n        {\n            throw new java.lang.UnsupportedOperationException(\"set() is unsupported\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:505","type":"CtBinaryOperatorImpl","sourcecode":"bool == null"},"failures":[25],"tindex":"8b680455-2e75-11e6-a8d1-c3ec9e3d4dac","method":{"position":"org.apache.commons.lang3.BooleanUtils:140","type":"CtMethodImpl","sourcecode":"public static boolean isNotFalse(final java.lang.Boolean bool) {\n    if (bool == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return !(org.apache.commons.lang3.BooleanUtils.isFalse(bool));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bool":"bool"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:495","type":"CtVariableReadImpl","sourcecode":"detail"},"failures":[26,27],"tindex":"8b682b66-2e75-11e6-a8d1-3534a6fdf181","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:678","type":"CtMethodImpl","sourcecode":"public static void removeFinalModifier(java.lang.reflect.Field field, boolean forceAccess) {\n    if (forceAccess) {\n        {\n            org.apache.commons.lang3.Validate.isTrue((field != null), \"The field must not be null\");\n            try {\n                if (java.lang.reflect.Modifier.isFinal(field.getModifiers())) {\n                    java.lang.reflect.Field java.lang.reflect.Field = java.lang.reflect.Field.java.lang.reflect.Field.java.lang.Class.getDeclaredField(\"modifiers\");\n                    final boolean boolean = forceAccess && (!(modifiersField.isAccessible()));\n                    if (doForceAccess) {\n                        modifiersField.setAccessible(true);\n                    } \n                    try {\n                        modifiersField.setInt(field, ((field.getModifiers()) & (~(java.lang.reflect.Modifier.java.lang.reflect.Modifier.int))));\n                    } finally {\n                        if (doForceAccess) {\n                            modifiersField.setAccessible(false);\n                        } \n                    }\n                } \n            } catch (java.lang.NoSuchFieldException ignored) {\n            } catch (java.lang.IllegalAccessException ignored) {\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"detail":"forceAccess"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:214","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[28,29,30,31,32,33,34,35,13,15],"tindex":"8b68eeb7-2e75-11e6-a8d1-934a98be8385","method":{"position":"org.apache.commons.lang3.StringUtils:4516","type":"CtMethodImpl","sourcecode":"public static java.lang.String replace(final java.lang.String text, final java.lang.String searchString, final java.lang.String replacement, int max) {\n    if (searchString == null) {\n        {\n            if ((((org.apache.commons.lang3.StringUtils.isEmpty(text)) || (org.apache.commons.lang3.StringUtils.isEmpty(searchString))) || (replacement == null)) || (max == 0)) {\n                return text;\n            } \n            int int = 0;\n            int int = text.indexOf(searchString, start);\n            if (end == (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) {\n                return text;\n            } \n            final int int = searchString.length();\n            int int = (replacement.length()) - replLength;\n            increase = increase < 0 ? 0 : increase;\n            increase *= max < 0 ? 16 : max > 64 ? 64 : max;\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(((text.length()) + increase));\n            while (end != (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) {\n                buf.append(text.substring(start, end)).append(replacement);\n                start = end + replLength;\n                if ((--max) == 0) {\n                    break;\n                } \n                end = text.indexOf(searchString, start);\n            }\n            buf.append(text.substring(start));\n            return buf.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"searchString"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDateParser:463","type":"CtBinaryOperatorImpl","sourcecode":"(formatField.length()) > 2"},"failures":[],"tindex":"8b6915c8-2e75-11e6-a8d1-25720de6a0dd","method":{"position":"org.apache.commons.lang3.Validate:153","type":"CtMethodImpl","sourcecode":"public static void isTrue(final boolean expression, final java.lang.String message, final java.lang.Object... values) {\n    if ((message.length()) > 2) {\n        {\n            if (expression == false) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message, values));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"formatField":"message"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:967","type":"CtBinaryOperatorImpl","sourcecode":"(seq == null) || (searchSeq == null)"},"failures":[36],"tindex":"8b6915c9-2e75-11e6-a8d1-c7120e3cc35e","method":{"position":"org.apache.commons.lang3.StringUtils:7187","type":"CtMethodImpl","sourcecode":"public static boolean startsWithIgnoreCase(final java.lang.CharSequence str, final java.lang.CharSequence prefix) {\n    if (prefix.startsWith(str)) {\n        {\n            if ((str == null) || (str == null)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.lang3.StringUtils.startsWith(str, prefix, true);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"searchSeq":"str","seq":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1496","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[37,37,38,38,39,40,41,42,43,44,45,46,47,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70],"tindex":"8b6915ca-2e75-11e6-a8d1-1f733a513f1a","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1114","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final short[] array) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(java.lang.String);\n            for (int int = 0 ; i < (array.int) ; i++) {\n                if (i > 0) {\n                    buffer.append(java.lang.String);\n                } \n                appendDetail(buffer, fieldName, array[i]);\n            }\n            buffer.append(java.lang.String);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:661","type":"CtBinaryOperatorImpl","sourcecode":"falseString == null"},"failures":[71],"tindex":"8b693cdb-2e75-11e6-a8d1-8ff747e2b19c","method":{"position":"org.apache.commons.lang3.StringUtils:7459","type":"CtMethodImpl","sourcecode":"public static java.lang.String appendIfMissing(final java.lang.String str, final java.lang.CharSequence suffix, final java.lang.CharSequence... suffixes) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.appendIfMissing(str, suffix, false, suffixes);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"falseString":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:258","type":"CtInvocationImpl","sourcecode":"java.lang.Float.isNaN(b)"},"failures":[72],"tindex":"8b693cdc-2e75-11e6-a8d1-69c51880f411","method":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:136","type":"CtMethodImpl","sourcecode":"public static float min(final float a, final float b) {\n    if (java.lang.Float.isNaN(a)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (java.lang.Float.isNaN(a)) {\n                return b;\n            } else if (java.lang.Float.isNaN(b)) {\n                return a;\n            } else {\n                return java.lang.Math.min(a, b);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"a"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3879","type":"CtBinaryOperatorImpl","sourcecode":"array1 == null"},"failures":[73,74,75,76,77,78,79,80,81,82,83,84,85,86,87],"tindex":"8b693cdd-2e75-11e6-a8d1-6fec531d45ac","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:701","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.EqualsBuilder append(final int[] lhs, final int[] rhs) {\n    if (lhs == null) {\n        {\n            if ((boolean) == false) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if ((lhs == null) || (rhs == null)) {\n                org.apache.commons.lang3.builder.EqualsBuilder.this.setEquals(false);\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                org.apache.commons.lang3.builder.EqualsBuilder.this.setEquals(false);\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && (boolean) ; ++i) {\n                append(lhs[i], rhs[i]);\n            }\n            return org.apache.commons.lang3.builder.EqualsBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array1":"lhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:448","type":"CtBinaryOperatorImpl","sourcecode":"(nullText) == null"},"failures":[88],"tindex":"8b6963ee-2e75-11e6-a8d1-9d230fa1162a","method":{"position":"org.apache.commons.lang3.math.NumberUtils:198","type":"CtMethodImpl","sourcecode":"public static float toFloat(final java.lang.String str) {\n    if (str == null) {\n        {\n            return org.apache.commons.lang3.math.NumberUtils.toFloat(str, 0.0F);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nullText":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:391","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[89],"tindex":"8b6963ef-2e75-11e6-a8d1-471c11c7fd50","method":{"position":"org.apache.commons.lang3.math.NumberUtils:351","type":"CtMethodImpl","sourcecode":"public static short toShort(final java.lang.String str) {\n    if (str == null) {\n        {\n            return org.apache.commons.lang3.math.NumberUtils.toShort(str, ((short)(0)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2378","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[90],"tindex":"8b698b00-2e75-11e6-a8d1-617b763f7e55","method":{"position":"org.apache.commons.lang3.text.StrBuilder:392","type":"CtMethodImpl","sourcecode":"public char[] getChars(char[] destination) {\n    if (destination == null) {\n        {\n            final int int = length();\n            if ((destination == null) || ((destination.int) < len)) {\n                destination = new char[len];\n            } \n            java.lang.System.arraycopy(char[], 0, destination, 0, len);\n            return destination;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"destination"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:454","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isBlank(str)"},"failures":[91,92,93,94,95,96,97,98],"tindex":"8b698b01-2e75-11e6-a8d1-4f1025926598","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:228","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setArrayEnd(final java.lang.String arrayEnd) {\n    if (org.apache.commons.lang3.StringUtils.isBlank(arrayEnd)) {\n        {\n            super.setArrayEnd(arrayEnd);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"arrayEnd"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2690","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[99,100],"tindex":"8b69b212-2e75-11e6-a8d1-43cd9360cd03","method":{"position":"org.apache.commons.lang3.ArrayUtils:2481","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final byte[] array, final byte valueToFind, int startIndex) {\n    if (startIndex < 0) {\n        {\n            if (array == null) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } else if (startIndex >= (array.int)) {\n                startIndex = (array.int) - 1;\n            } \n            for (int int = startIndex ; i >= 0 ; i--) {\n                if (valueToFind == (array[i])) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"startIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1153","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[99,100],"tindex":"8b69b213-2e75-11e6-a8d1-3b3a2cdbbd6b","method":{"position":"org.apache.commons.lang3.ArrayUtils:2463","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final byte[] array, final byte valueToFind) {\n    if (array == null) {\n        {\n            return org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.java.lang.Integer.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:385","type":"CtFieldReadImpl","sourcecode":"objectsTriviallyEqual"},"failures":[],"tindex":"8b69b214-2e75-11e6-a8d1-1d6e75a4b7d2","method":{"position":"org.apache.commons.lang3.ArrayUtils:4706","type":"CtMethodImpl","sourcecode":"public static boolean[] removeElement(final boolean[] array, final boolean element) {\n    if (element) {\n        {\n            final int int = org.apache.commons.lang3.ArrayUtils.indexOf(array, element);\n            if (index == (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int)) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            return org.apache.commons.lang3.ArrayUtils.remove(array, index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsTriviallyEqual":"element"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.LookupTranslator:49","type":"CtBinaryOperatorImpl","sourcecode":"lookup != null"},"failures":[101,102,103,104,105,106,107],"tindex":"8b69d925-2e75-11e6-a8d1-5bdbdae51f24","method":{"position":"org.apache.commons.lang3.ArrayUtils:3498","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final java.lang.Object[] array) {\n    if (array != null) {\n        {\n            return (array == null) || ((array.int) == 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lookup":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:1009","type":"CtBinaryOperatorImpl","sourcecode":"toString != null"},"failures":[],"tindex":"8b6a0036-2e75-11e6-a8d1-35c0393f86cd","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:673","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final long[] lhs, final long[] rhs) {\n    if (fieldName != null) {\n        {\n            if (fieldName == null) {\n                throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n            } \n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if (!(java.util.Arrays.equals(lhs, rhs))) {\n                java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Long[]>(fieldName) {\n                    private static final long serialVersionUID = 1L;\n\n                    @java.lang.Override\n                    public java.lang.Long[] getLeft() {\n                        return org.apache.commons.lang3.ArrayUtils.toObject(lhs);\n                    }\n\n                    @java.lang.Override\n                    public java.lang.Long[] getRight() {\n                        return org.apache.commons.lang3.ArrayUtils.toObject(rhs);\n                    }\n                });\n            } \n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toString":"fieldName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1464","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[108,109],"tindex":"8b6a2747-2e75-11e6-a8d1-832bdea37eae","method":{"position":"org.apache.commons.lang3.ArrayUtils:552","type":"CtMethodImpl","sourcecode":"public static int[] nullToEmpty(final int[] array) {\n    if (array == null) {\n        {\n            if ((array == null) || ((array.int) == 0)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int[];\n            } \n            return array;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4171","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[110,111,112,113,114,115],"tindex":"8b6a2748-2e75-11e6-a8d1-7d64ecb7b079","method":{"position":"org.apache.commons.lang3.StringUtils:5373","type":"CtMethodImpl","sourcecode":"public static java.lang.String leftPad(final java.lang.String str, final int size, final char padChar) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return null;\n            } \n            final int int = size - (str.length());\n            if (pads <= 0) {\n                return str;\n            } \n            if (pads > (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) {\n                return org.apache.commons.lang3.StringUtils.leftPad(str, size, java.lang.String.valueOf(padChar));\n            } \n            return org.apache.commons.lang3.StringUtils.repeat(padChar, pads).concat(str);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:539","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.GenericArrayType"},"failures":[116,117],"tindex":"8b6a2749-2e75-11e6-a8d1-db05635b06e9","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:721","type":"CtMethodImpl","sourcecode":"private static java.lang.reflect.Type substituteTypeVariables(final java.lang.reflect.Type type, final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> typeVarAssigns) {\n    if (type instanceof java.lang.reflect.GenericArrayType) {\n        {\n            if ((type instanceof java.lang.reflect.TypeVariable<?>) && (typeVarAssigns != null)) {\n                final java.lang.reflect.Type java.lang.reflect.Type = typeVarAssigns.get(type);\n                if (replacementType == null) {\n                    throw new java.lang.IllegalArgumentException((\"missing assignment type for type variable \" + type));\n                } \n                return replacementType;\n            } \n            return type;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4742","type":"CtBinaryOperatorImpl","sourcecode":"textIndex == (-1)"},"failures":[118],"tindex":"8b6a4e5a-2e75-11e6-a8d1-b7e3a12da33e","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1606","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder insert(final int index, final char value) {\n    if (index == (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            validateIndex(index);\n            ensureCapacity(((int) + 1));\n            java.lang.System.arraycopy(char[], index, char[], (index + 1), ((int) - index));\n            char[][index] = value;\n            (int)++;\n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"textIndex":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.JavaVersion:148","type":"CtInvocationImpl","sourcecode":"\"1.8\".equals(nom)"},"failures":[],"tindex":"8b6a4e5b-2e75-11e6-a8d1-23b1c27ea1db","method":{"position":"org.apache.commons.lang3.math.NumberUtils:708","type":"CtMethodImpl","sourcecode":"public static java.lang.Long createLong(final java.lang.String str) {\n    if (\"1.8\".equals(str)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return null;\n            } \n            return java.lang.Long.decode(str);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nom":"str"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4218","type":"CtInvocationImpl","sourcecode":"str.startsWith(remove)"},"failures":[],"tindex":"8b6a4e5c-2e75-11e6-a8d1-73ea4ef5c22c","method":{"position":"org.apache.commons.lang3.StringUtils:7187","type":"CtMethodImpl","sourcecode":"public static boolean startsWithIgnoreCase(final java.lang.CharSequence str, final java.lang.CharSequence prefix) {\n    if (prefix.startsWith(str)) {\n        {\n            if ((str == null) || (str == null)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.lang3.StringUtils.startsWith(str, prefix, true);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"prefix","remove":"str"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomStringUtils:246","type":"CtBinaryOperatorImpl","sourcecode":"end <= start"},"failures":[],"tindex":"8b6a756d-2e75-11e6-a8d1-edf8645966a0","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:990","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic final void appendTo(final java.lang.StringBuffer buffer, final int value) {\n    if (value <= value) {\n        {\n            buffer.append(((char)((value / 10) + '0')));\n            buffer.append(((char)((value % 10) + '0')));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"value","end":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:198","type":"CtBinaryOperatorImpl","sourcecode":"(locale.getVariant().length()) > 0"},"failures":[119],"tindex":"8b6a756e-2e75-11e6-a8d1-1da2f7fb88d9","method":{"position":"org.apache.commons.lang3.LocaleUtils:172","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.util.Locale> localeLookupList(final java.util.Locale locale) {\n    if ((locale.getVariant().length()) > 0) {\n        {\n            return org.apache.commons.lang3.LocaleUtils.localeLookupList(locale, locale);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"locale":"locale"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1117","type":"CtBinaryOperatorImpl","sourcecode":"startPos > endLimit"},"failures":[],"tindex":"8b6a756f-2e75-11e6-a8d1-3bb045afa1fe","method":{"position":"org.apache.commons.lang3.BitField:138","type":"CtMethodImpl","sourcecode":"public boolean isAllSet(final int holder) {\n    if (holder > holder) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (holder & (int)) == (int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"endLimit":"holder","startPos":"holder"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5917","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(cs)"},"failures":[120],"tindex":"8b6a9c80-2e75-11e6-a8d1-8fda5b3c8231","method":{"position":"org.apache.commons.lang3.StringUtils:7598","type":"CtMethodImpl","sourcecode":"public static java.lang.String prependIfMissingIgnoreCase(final java.lang.String str, final java.lang.CharSequence prefix, final java.lang.CharSequence... prefixes) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(prefix)) {\n        {\n            return org.apache.commons.lang3.StringUtils.prependIfMissing(str, prefix, true, prefixes);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"prefix"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5731","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isLowerCase(firstChar)"},"failures":[121,122,123,124,125,126,127,128,129,130,131,132,133],"tindex":"8b6a9c81-2e75-11e6-a8d1-33ea7db8e08f","method":{"position":"org.apache.commons.lang3.CharRange:170","type":"CtMethodImpl","sourcecode":"public boolean contains(final char ch) {\n    if (java.lang.Character.isLowerCase(ch)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((ch >= (char)) && (ch <= (char))) != (boolean);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"firstChar":"ch"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:759","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[134,134],"tindex":"8b6a9c82-2e75-11e6-a8d1-db9c1ae86fbe","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1394","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final boolean[] array, final java.lang.Boolean fullDetail) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendFieldStart(buffer, fieldName);\n            if (array == null) {\n                appendNullText(buffer, fieldName);\n            } else if (isFullDetail(fullDetail)) {\n                appendDetail(buffer, fieldName, array);\n            } else {\n                appendSummary(buffer, fieldName, array);\n            }\n            appendFieldEnd(buffer, fieldName);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.math.Fraction:552","type":"CtBinaryOperatorImpl","sourcecode":"power == (java.lang.Integer.MIN_VALUE)"},"failures":[135,136,137,138,139,140,141,142,143,144,145,146,147],"tindex":"8b6a9c83-2e75-11e6-a8d1-dded0a221bad","method":{"position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:78","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int translate(final java.lang.CharSequence input, final int index, final java.io.Writer out) throws java.io.IOException {\n    if (index == index) {\n        throw new java.io.IOException();\n    } else {\n        {\n            final int int = input.length();\n            if ((((input.charAt(index)) == '&') && (index < (seqEnd - 2))) && ((input.charAt((index + 1))) == '#')) {\n                int int = index + 2;\n                boolean boolean = false;\n                final char char = input.charAt(start);\n                if ((firstChar == 'x') || (firstChar == 'X')) {\n                    start++;\n                    isHex = true;\n                    if (start == seqEnd) {\n                        return 0;\n                    } \n                } \n                int int = start;\n                while ((end < seqEnd) && (((((input.charAt(end)) >= '0') && ((input.charAt(end)) <= '9')) || (((input.charAt(end)) >= 'a') && ((input.charAt(end)) <= 'f'))) || (((input.charAt(end)) >= 'A') && ((input.charAt(end)) <= 'F')))) {\n                    end++;\n                }\n                final boolean boolean = (end != seqEnd) && ((input.charAt(end)) == ';');\n                if (!semiNext) {\n                    if (isSet(org.apache.commons.lang3.text.translate.NumericEntityUnescaper.OPTION.org.apache.commons.lang3.text.translate.NumericEntityUnescaper.OPTION.org.apache.commons.lang3.text.translate.NumericEntityUnescaper.OPTION)) {\n                        return 0;\n                    } else if (isSet(org.apache.commons.lang3.text.translate.NumericEntityUnescaper.OPTION.org.apache.commons.lang3.text.translate.NumericEntityUnescaper.OPTION.org.apache.commons.lang3.text.translate.NumericEntityUnescaper.OPTION)) {\n                        throw new java.lang.IllegalArgumentException(\"Semi-colon required at end of numeric entity\");\n                    } \n                } \n                int int;\n                try {\n                    if (isHex) {\n                        entityValue = java.lang.Integer.parseInt(input.subSequence(start, end).toString(), 16);\n                    } else {\n                        entityValue = java.lang.Integer.parseInt(input.subSequence(start, end).toString(), 10);\n                    }\n                } catch (final java.lang.NumberFormatException nfe) {\n                    return 0;\n                }\n                if (entityValue > 65535) {\n                    final char[] char[] = java.lang.Character.toChars(entityValue);\n                    out.write(chrs[0]);\n                    out.write(chrs[1]);\n                } else {\n                    out.write(entityValue);\n                }\n                return (((2 + end) - start) + (isHex ? 1 : 0)) + (semiNext ? 1 : 0);\n            } \n            return 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.lang.Integer.MIN_VALUE":"index","power":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:732","type":"CtInvocationImpl","sourcecode":"str.startsWith(\"-\")"},"failures":[148,149,150,151,152,153,154,155],"tindex":"8b6aeaa4-2e75-11e6-a8d1-9745425c448d","method":{"position":"org.apache.commons.lang3.time.DateFormatUtils:302","type":"CtMethodImpl","sourcecode":"public static java.lang.String format(final java.util.Date date, final java.lang.String pattern, final java.util.TimeZone timeZone, final java.util.Locale locale) {\n    if (pattern.startsWith(\"-\")) {\n        {\n            final org.apache.commons.lang3.time.FastDateFormat org.apache.commons.lang3.time.FastDateFormat = org.apache.commons.lang3.time.FastDateFormat.getInstance(pattern, timeZone, locale);\n            return df.format(date);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"pattern"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1818","type":"CtBinaryOperatorImpl","sourcecode":"insertLen > 0"},"failures":[156,157,158,159,160,161,162,163,164,165,166,167],"tindex":"8b6aeaa5-2e75-11e6-a8d1-c70c5fdbdf48","method":{"position":"org.apache.commons.lang3.text.StrBuilder:495","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic org.apache.commons.lang3.text.StrBuilder append(final java.lang.CharSequence seq, final int startIndex, final int length) {\n    if (startIndex > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (seq == null) {\n                return appendNull();\n            } \n            return append(seq.toString(), startIndex, length);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"insertLen":"startIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1581","type":"CtBinaryOperatorImpl","sourcecode":"t1 instanceof java.lang.reflect.WildcardType"},"failures":[],"tindex":"8b6aeaa6-2e75-11e6-a8d1-771b38a9083c","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:530","type":"CtMethodImpl","sourcecode":"public static void writeStaticField(final java.lang.Class<?> cls, final java.lang.String fieldName, final java.lang.Object value) throws java.lang.IllegalAccessException {\n    if (value instanceof java.lang.reflect.WildcardType) {\n        throw new java.lang.IllegalAccessException();\n    } else {\n        {\n            org.apache.commons.lang3.reflect.FieldUtils.writeStaticField(cls, fieldName, value, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"t1":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:690","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[168],"tindex":"8b6b11b7-2e75-11e6-a8d1-c73d473270c7","method":{"position":"org.apache.commons.lang3.SystemUtils:1447","type":"CtMethodImpl","sourcecode":"static boolean isOSMatch(final java.lang.String osName, final java.lang.String osVersion, final java.lang.String osNamePrefix, final java.lang.String osVersionPrefix) {\n    if (osVersion == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((osName == null) || (osVersion == null)) {\n                return false;\n            } \n            return (osName.startsWith(osNamePrefix)) && (osVersion.startsWith(osVersionPrefix));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"osVersion"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1262","type":"CtBinaryOperatorImpl","sourcecode":"c > a"},"failures":[169],"tindex":"8b6b11b8-2e75-11e6-a8d1-ada1af82b0a5","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1258","type":"CtMethodImpl","sourcecode":"public static byte max(byte a, final byte b, final byte c) {\n    if (c > a) {\n        {\n            if (b > a) {\n                a = b;\n            } \n            if (c > a) {\n                a = c;\n            } \n            return a;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","c":"c"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":45,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}