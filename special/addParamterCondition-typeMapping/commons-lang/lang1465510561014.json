{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":83,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":153,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":85,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":15,"org.apache.commons.lang3.SerializationUtilsTest.testDeserializeBytesOfNull":123,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":79,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":82,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfDoubleWithStartIndexTolerance":144,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":164,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayDouble":49,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":27,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang303":115,"org.apache.commons.lang3.reflect.TypeLiteralTest.testTyped":108,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":77,"org.apache.commons.lang3.ArrayUtilsTest.testIsEmptyPrimitives":142,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":69,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":16,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllNumberArray":40,"org.apache.commons.lang3.SerializationUtilsTest.testDeserializeBytesNull":124,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":2,"org.apache.commons.lang3.SerializationUtilsTest.testDeserializeBytes":120,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testTrim":133,"org.apache.commons.lang3.SerializationUtilsTest.testDeserializeBytesBadStream":119,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testFloatArrayAsObject":151,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":7,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":22,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfYearWithWrongOffsetBugWithCalendar":56,"org.apache.commons.lang3.text.StrBuilderTest.testContains_StrMatcher":105,"org.apache.commons.lang3.SerializationUtilsTest.testDeserializeClassCastException":122,"org.apache.commons.lang3.SerializationUtilsTest.testRoundtrip":121,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfDouble":141,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testFloat":152,"org.apache.commons.lang3.ValidateTest.testExclusiveBetween_withMessage":93,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":70,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testObjectArray":127,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfDoubleWithStartIndex":148,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEmbeddedPatternInChoice":99,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":24,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringStringarray":44,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testFloatArray":150,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":3,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":28,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllFloatArrayRemoveNone":156,"org.apache.commons.lang3.text.StrLookupTest.testMapLookup":33,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllObjectArrayOutOfBoundsIndex":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":87,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":4,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEqualsHashcode":95,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":75,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectAtIndex":106,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testOverriddenBuiltinFormat":96,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testExtendedFormats":100,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":8,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondFragmentInLargerUnitWithCalendar":55,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":10,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":9,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfDoubleWithStartIndexTolerance":145,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringInt":0,"org.apache.commons.lang3.reflect.TypeLiteralTest.testEquals":109,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang303":116,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":6,"org.apache.commons.lang3.BooleanUtilsTest.testXor_object_validInput_2items":63,"org.apache.commons.lang3.reflect.TypeUtilsTest.testParameterize":110,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllFloatArrayOutOfBoundsIndex":155,"org.apache.commons.lang3.text.StrLookupTest.testNoneLookup":31,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":76,"org.apache.commons.lang3.reflect.TypeLiteralTest.testBasic":107,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringStringarray":42,"org.apache.commons.lang3.exception.ContextedExceptionTest.testJavaSerialization":113,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":78,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinuteFragmentInLargerUnitWithCalendar":53,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":73,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEscapedQuote_LANG_477":98,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testJavaSerialization":112,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISOMethod":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":84,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testJavaSerialization":114,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteAll_String":130,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":165,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementDoubleArray":138,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":92,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllObjectArray":41,"org.apache.commons.lang3.text.StrBuilderTest.testSubSequenceIntInt":68,"org.apache.commons.lang3.StringUtilsTest.testNormalizeSpace":132,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementDoubleArray":137,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfDoubleTolerance":143,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":72,"org.apache.commons.lang3.ConversionTest.testShortArrayToInt":50,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfYearWithCalendar":60,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllNullFloatArray":157,"org.apache.commons.lang3.ArrayUtilsTest.testContainsDoubleTolerance":139,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllFloatArray":158,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfMonthWithCalendar":54,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGenericArrayType":111,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyLongObjectNull":126,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":13,"org.apache.commons.lang3.ClassUtilsTest.testGetClassInvalidArguments":37,"org.apache.commons.lang3.BooleanUtilsTest.testXor_primitive_emptyInput":62,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetFieldSeparator":1,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfHourWithCalendar":52,"org.apache.commons.lang3.ArrayUtilsTest.testContainsDouble":149,"org.apache.commons.lang3.time.FastDateParserTest.testLang303":117,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfDoubleWithStartIndex":140,"org.apache.commons.lang3.ConversionTest.testUuidToByteArray":125,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":29,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfDayWithCalendar":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":162,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":14,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":51,"org.apache.commons.lang3.ClassUtilsTest.testPrimitiveToWrapper":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":81,"org.apache.commons.lang3.exception.ContextedExceptionTest.testGetContextValues":136,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testObjectArrayAsObject":128,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":160,"org.apache.commons.lang3.CharUtilsTest.testToChar_String_char":35,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfDoubleTolerance":146,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContains_Char":36,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testBuiltInNumberFormat":102,"org.apache.commons.lang3.CharUtilsTest.testIsAsciiAlphanumeric_char":135,"org.apache.commons.lang3.ClassUtilsTest.testPrimitivesToWrappers":104,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":11,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testInvalidFragmentWithCalendar":61,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllFloatArrayNegativeIndex":154,"org.apache.commons.lang3.BooleanUtilsTest.testXor_primitive_validInput_3items":66,"org.apache.commons.lang3.StringUtilsTest.testCenter_StringIntChar":34,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringStringarray":46,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfDouble":147,"org.apache.commons.lang3.text.StrBuilderTest.testLang294":131,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":161,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":80,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testNullCalendar":57,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":159,"org.apache.commons.lang3.text.StrLookupTest.testMapLookup_nullMap":32,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":163,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":88,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":20,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testBuiltInDateTimeFormat":94,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testAddInitializerNullName":47,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondFragmentInLargerUnitWithCalendar":59,"org.apache.commons.lang3.text.StrLookupTest.testSystemProperiesLookup":30,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":21,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testBuiltInChoiceFormat":97,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":71,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testExtendedAndBuiltInFormats":101,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":26,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringStringarray":45,"org.apache.commons.lang3.BooleanUtilsTest.testXor_primitive_validInput_2items":65,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang303":118,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testBooleanMultiArray":129,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllObjectArrayNegativeIndex":39,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringStringarray":43,"org.apache.commons.lang3.BooleanUtilsTest.testXor_object_validInput_3items":64,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":89,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendSeparator_char":48,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":74,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":90,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testTrimToNull":134,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":18,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":25},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:392","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(tokens, org.apache.commons.lang3.time.DurationFormatUtils.s))"},"failures":[],"tindex":"bf90fdcf-2e8f-11e6-9477-017ef976acba","method":{"position":"org.apache.commons.lang3.builder.IDKey:63","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object other) {\n    if (!(org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(other, other))) {\n        {\n            if (!(other instanceof org.apache.commons.lang3.builder.IDKey)) {\n                return false;\n            } \n            final org.apache.commons.lang3.builder.IDKey org.apache.commons.lang3.builder.IDKey = ((org.apache.commons.lang3.builder.IDKey)(other));\n            if ((int) != (idKey.int)) {\n                return false;\n            } \n            return (java.lang.Object) == (idKey.java.lang.Object);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.lang3.time.DurationFormatUtils.s":"other","tokens":"other"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2517","type":"CtBinaryOperatorImpl","sourcecode":"((str == null) || (org.apache.commons.lang3.StringUtils.isEmpty(open))) || (org.apache.commons.lang3.StringUtils.isEmpty(close))"},"failures":[0],"tindex":"bf925c60-2e8f-11e6-9477-8953969c97de","method":{"position":"org.apache.commons.lang3.text.WordUtils:96","type":"CtMethodImpl","sourcecode":"public static java.lang.String wrap(final java.lang.String str, final int wrapLength) {\n    if (((str == null) || (org.apache.commons.lang3.StringUtils.isEmpty(str))) || (org.apache.commons.lang3.StringUtils.isEmpty(str))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.text.WordUtils.wrap(str, wrapLength, null, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str","close":"str","open":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:391","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[1],"tindex":"bf928371-2e8f-11e6-9477-bb13be127183","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1895","type":"CtMethodImpl","sourcecode":"protected void setFieldSeparator(java.lang.String fieldSeparator) {\n    if (fieldSeparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (fieldSeparator == null) {\n                fieldSeparator = \"\";\n            } \n            org.apache.commons.lang3.builder.ToStringStyle.this.java.lang.String = fieldSeparator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"fieldSeparator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:549","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"tindex":"bf92d192-2e8f-11e6-9477-2d74d1da42fe","method":{"position":"org.apache.commons.lang3.text.StrLookup:161","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.String lookup(final java.lang.String key) {\n    if (key == null) {\n        {\n            if ((java.util.Map<java.lang.String, V>) == null) {\n                return null;\n            } \n            final java.lang.Object java.lang.Object = java.util.Map<java.lang.String, V>.get(key);\n            if (obj == null) {\n                return null;\n            } \n            return obj.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"key"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4705","type":"CtBinaryOperatorImpl","sourcecode":"searchLength != replacementLength"},"failures":[],"tindex":"bf92f8a3-2e8f-11e6-9477-d79ba19ce2e4","method":{"position":"org.apache.commons.lang3.ArrayUtils:4482","type":"CtMethodImpl","sourcecode":"public static long[] add(final long[] array, final int index, final long element) {\n    if (index != index) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((long[])(org.apache.commons.lang3.ArrayUtils.add(array, index, java.lang.Long.valueOf(element), java.lang.Long.java.lang.Long.java.lang.Class<java.lang.Long>)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"replacementLength":"index","searchLength":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6451","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(middle))"},"failures":[],"tindex":"bf931fb4-2e8f-11e6-9477-e518086170d0","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:834","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final long[] array, final boolean fullDetail) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(fieldName)) || (org.apache.commons.lang3.StringUtils.isEmpty(fieldName))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, array, java.lang.Boolean.valueOf(fullDetail));\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName","middle":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5731","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isLowerCase(firstChar)"},"failures":[34],"tindex":"bf9346c5-2e8f-11e6-9477-af3c9d1be929","method":{"position":"org.apache.commons.lang3.StringUtils:5509","type":"CtMethodImpl","sourcecode":"public static java.lang.String center(java.lang.String str, final int size, final char padChar) {\n    if (java.lang.Character.isLowerCase(padChar)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((str == null) || (size <= 0)) {\n                return str;\n            } \n            final int int = str.length();\n            final int int = size - strLen;\n            if (pads <= 0) {\n                return str;\n            } \n            str = org.apache.commons.lang3.StringUtils.leftPad(str, (strLen + (pads / 2)), padChar);\n            str = org.apache.commons.lang3.StringUtils.rightPad(str, size, padChar);\n            return str;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"firstChar":"padChar"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:121","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[35],"tindex":"bf936dd6-2e8f-11e6-9477-d7a64e27561c","method":{"position":"org.apache.commons.lang3.CharUtils:194","type":"CtMethodImpl","sourcecode":"public static char toChar(final java.lang.String str, final char defaultValue) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n                return defaultValue;\n            } \n            return str.charAt(0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:584","type":"CtBinaryOperatorImpl","sourcecode":"(dec == null) && (exp == null)"},"failures":[36],"tindex":"bf9394e7-2e8f-11e6-9477-b1f789cd5dce","method":{"position":"org.apache.commons.lang3.StringUtils:1415","type":"CtMethodImpl","sourcecode":"public static boolean contains(final java.lang.CharSequence seq, final int searchChar) {\n    if ((seq == null) && (seq == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(seq)) {\n                return false;\n            } \n            return (org.apache.commons.lang3.CharSequenceUtils.indexOf(seq, searchChar, 0)) >= 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dec":"seq","exp":"seq"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:391","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[37],"tindex":"bf9394e8-2e8f-11e6-9477-bf773d45ea52","method":{"position":"org.apache.commons.lang3.ClassUtils:959","type":"CtMethodImpl","sourcecode":"private static java.lang.String toCanonicalName(java.lang.String className) {\n    if (className == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            className = org.apache.commons.lang3.StringUtils.deleteWhitespace(className);\n            if (className == null) {\n                throw new java.lang.NullPointerException(\"className must not be null.\");\n            } else if (className.endsWith(\"[]\")) {\n                final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n                while (className.endsWith(\"[]\")) {\n                    className = className.substring(0, ((className.length()) - 2));\n                    classNameBuffer.append(\"[\");\n                }\n                final java.lang.String java.lang.String = org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.String, java.lang.String>.get(className);\n                if (abbreviation != null) {\n                    classNameBuffer.append(abbreviation);\n                } else {\n                    classNameBuffer.append(\"L\").append(className).append(\";\");\n                }\n                className = classNameBuffer.toString();\n            } \n            return className;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"className"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:6015","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.ArrayUtils.isNotEmpty(indices)"},"failures":[38,39,40,41],"tindex":"bf93bbf9-2e8f-11e6-9477-a1822e773279","method":{"position":"org.apache.commons.lang3.ArrayUtils:5232","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>T[] removeAll(final T[] array, final int... indices) {\n    if (org.apache.commons.lang3.ArrayUtils.isNotEmpty(indices)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((T[])(org.apache.commons.lang3.ArrayUtils.removeAll(((java.lang.Object)(array)), org.apache.commons.lang3.ArrayUtils.clone(indices))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"indices":"indices"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:146","type":"CtBinaryOperatorImpl","sourcecode":"methodNames == null"},"failures":[42,43,44,45,46],"tindex":"bf93e30a-2e8f-11e6-9477-a955bcf3f35b","method":{"position":"org.apache.commons.lang3.CharSetUtils:241","type":"CtMethodImpl","sourcecode":"private static boolean deepEmpty(final java.lang.String[] strings) {\n    if (strings == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (strings != null) {\n                for (final java.lang.String java.lang.String : strings) {\n                    if (org.apache.commons.lang3.StringUtils.isNotEmpty(s)) {\n                        return false;\n                    } \n                }\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodNames":"strings"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3108","type":"CtBinaryOperatorImpl","sourcecode":"(separatorChars.length()) == 1"},"failures":[47],"tindex":"bf93e30b-2e8f-11e6-9477-8137dd3b3dd8","method":{"position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:134","type":"CtMethodImpl","sourcecode":"public void addInitializer(final java.lang.String name, final org.apache.commons.lang3.concurrent.BackgroundInitializer<?> init) {\n    if ((name.length()) == 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (name == null) {\n                throw new java.lang.IllegalArgumentException(\"Name of child initializer must not be null!\");\n            } \n            if (init == null) {\n                throw new java.lang.IllegalArgumentException(\"Child initializer must not be null!\");\n            } \n            synchronized(org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.this) {\n                if (isStarted()) {\n                    throw new java.lang.IllegalStateException(\"addInitializer() must not be called after start()!\");\n                } \n                java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.BackgroundInitializer<?>>.put(name, init);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"separatorChars":"name"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSequenceUtils:200","type":"CtBinaryOperatorImpl","sourcecode":"c1 == c2"},"failures":[48],"tindex":"bf940a1c-2e8f-11e6-9477-6d99856b62de","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1272","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendSeparator(final char separator) {\n    if (separator == separator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((size()) > 0) {\n                append(separator);\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c1":"separator","c2":"separator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:193","type":"CtBinaryOperatorImpl","sourcecode":"spaceToWrapAt >= offset"},"failures":[49],"tindex":"bf94312d-2e8f-11e6-9477-0b63442f4996","method":{"position":"org.apache.commons.lang3.ArrayUtils:1114","type":"CtMethodImpl","sourcecode":"public static double[] subarray(final double[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (endIndexExclusive >= startIndexInclusive) {\n        {\n            if (array == null) {\n                return null;\n            } \n            if (startIndexInclusive < 0) {\n                startIndexInclusive = 0;\n            } \n            if (endIndexExclusive > (array.int)) {\n                endIndexExclusive = array.int;\n            } \n            final int int = endIndexExclusive - startIndexInclusive;\n            if (newSize <= 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.double[];\n            } \n            final double[] double[] = new double[newSize];\n            java.lang.System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);\n            return subarray;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"offset":"startIndexInclusive","spaceToWrapAt":"endIndexExclusive"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:512","type":"CtBinaryOperatorImpl","sourcecode":"(numerator) == (java.lang.Integer.MIN_VALUE)"},"failures":[50],"tindex":"bf94312e-2e8f-11e6-9477-c927e3c5dc6c","method":{"position":"org.apache.commons.lang3.Conversion:759","type":"CtMethodImpl","sourcecode":"public static int shortArrayToInt(final short[] src, final int srcPos, final int dstInit, final int dstPos, final int nShorts) {\n    if (dstPos == srcPos) {\n        {\n            if ((((src.int) == 0) && (srcPos == 0)) || (0 == nShorts)) {\n                return dstInit;\n            } \n            if ((((nShorts - 1) * 16) + dstPos) >= 32) {\n                throw new java.lang.IllegalArgumentException(\"(nShorts-1)*16+dstPos is greather or equal to than 32\");\n            } \n            int int = dstInit;\n            int int = 0;\n            for (int int = 0 ; i < nShorts ; i++) {\n                shift = (i * 16) + dstPos;\n                final int int = (65535 & (src[(i + srcPos)])) << shift;\n                final int int = 65535 << shift;\n                out = (out & (~mask)) | bits;\n            }\n            return out;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.lang.Integer.MIN_VALUE":"srcPos","numerator":"dstPos"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:848","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.lang3.math.Fraction) == false"},"failures":[51],"tindex":"bf94583f-2e8f-11e6-9477-a9069e31d7df","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:400","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.StringBuffer format(final java.lang.Object obj, final java.lang.StringBuffer toAppendTo, final java.text.FieldPosition pos) {\n    if ((obj instanceof org.apache.commons.lang3.math.Fraction) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.FastDatePrinter.format(obj, toAppendTo, pos);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1364","type":"CtBinaryOperatorImpl","sourcecode":"length >= 0"},"failures":[],"tindex":"bf947f50-2e8f-11e6-9477-d7a5f01964cb","method":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:461","type":"CtMethodImpl","sourcecode":"private static java.lang.String paddedValue(final long value, final boolean padWithZeros, final int count) {\n    if (count >= 0) {\n        {\n            final java.lang.String java.lang.String = java.lang.Long.toString(value);\n            return padWithZeros ? org.apache.commons.lang3.StringUtils.leftPad(longString, count, '0') : longString;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"count"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:563","type":"CtBinaryOperatorImpl","sourcecode":"(((ch0 == 'y') || (ch0 == 'Y')) || (ch0 == 't')) || (ch0 == 'T')"},"failures":[],"tindex":"bf947f51-2e8f-11e6-9477-698ec0430fc8","method":{"position":"org.apache.commons.lang3.CharRange:170","type":"CtMethodImpl","sourcecode":"public boolean contains(final char ch) {\n    if ((((ch == 'y') || (ch0 == 'Y')) || (ch0 == 't')) || (ch0 == 'T')) {\n        {\n            return ((ch >= (char)) && (ch <= (char))) != (boolean);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch0":"ch"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5375","type":"CtBinaryOperatorImpl","sourcecode":"found < 0"},"failures":[52,53,54,55,56,57,58,59,60,61],"tindex":"bf94a662-2e8f-11e6-9477-fdff8da0e089","method":{"position":"org.apache.commons.lang3.time.DateUtils:1554","type":"CtMethodImpl","sourcecode":"public static long getFragmentInMinutes(final java.util.Calendar calendar, final int fragment) {\n    if (fragment < 0) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"found":"fragment"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5198","type":"CtBinaryOperatorImpl","sourcecode":"index < (length - 1)"},"failures":[],"tindex":"bf94a663-2e8f-11e6-9477-dd74792491db","method":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:138","type":"CtMethodImpl","sourcecode":"protected java.lang.String toUtf16Escape(final int codepoint) {\n    if (codepoint < (codepoint - 1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return \"\\\\u\" + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(codepoint));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"codepoint","index":"codepoint"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1045","type":"CtBinaryOperatorImpl","sourcecode":"newSize <= 0"},"failures":[],"tindex":"bf94cd74-2e8f-11e6-9477-3329b4603b6e","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1834","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder replace(final int startIndex, int endIndex, final java.lang.String replaceStr) {\n    if (endIndex <= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            endIndex = validateRange(startIndex, endIndex);\n            final int int = replaceStr == null ? 0 : replaceStr.length();\n            replaceImpl(startIndex, endIndex, (endIndex - startIndex), replaceStr, insertLen);\n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"newSize":"endIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:1042","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[62,63,64,65,66],"tindex":"bf94cd75-2e8f-11e6-9477-1d7af8bb28ff","method":{"position":"org.apache.commons.lang3.BooleanUtils:1040","type":"CtMethodImpl","sourcecode":"public static boolean xor(final boolean... array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n            } \n            if ((array.int) == 0) {\n                throw new java.lang.IllegalArgumentException(\"Array is empty\");\n            } \n            boolean boolean = false;\n            for (final boolean boolean : array) {\n                result ^= element;\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomStringUtils:238","type":"CtBinaryOperatorImpl","sourcecode":"(!letters) && (!numbers)"},"failures":[],"tindex":"bf94cd76-2e8f-11e6-9477-65924773f87e","method":{"position":"org.apache.commons.lang3.Validate:802","type":"CtMethodImpl","sourcecode":"public static void validState(final boolean expression) {\n    if ((!expression) && (!expression)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (expression == false) {\n                throw new java.lang.IllegalStateException(org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.java.lang.String);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"numbers":"expression","letters":"expression"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:896","type":"CtBinaryOperatorImpl","sourcecode":"first < second"},"failures":[67],"tindex":"bf94f487-2e8f-11e6-9477-2d694c14d314","method":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:230","type":"CtMethodImpl","sourcecode":"public static java.lang.String formatPeriodISO(final long startMillis, final long endMillis) {\n    if (endMillis < startMillis) {\n        {\n            return org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(startMillis, endMillis, org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.String, false, java.util.TimeZone.getDefault());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"first":"endMillis","second":"startMillis"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4957","type":"CtBinaryOperatorImpl","sourcecode":"start > end"},"failures":[68],"tindex":"bf94f488-2e8f-11e6-9477-179f67ce22eb","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.CharSequence subSequence(final int startIndex, final int endIndex) {\n    if (startIndex > startIndex) {\n        {\n            if (startIndex < 0) {\n                throw new java.lang.StringIndexOutOfBoundsException(startIndex);\n            } \n            if (endIndex > (int)) {\n                throw new java.lang.StringIndexOutOfBoundsException(endIndex);\n            } \n            if (startIndex > endIndex) {\n                throw new java.lang.StringIndexOutOfBoundsException((endIndex - startIndex));\n            } \n            return substring(startIndex, endIndex);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"startIndex","end":"startIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:1128","type":"CtBinaryOperatorImpl","sourcecode":"(className.length()) > 0"},"failures":[69,69,70,71,72,72,73,74,75,76,77,78,79,80,80,81,82,83,84,85,86,87,88,89,90,91,92],"tindex":"bf94f489-2e8f-11e6-9477-052cc86a5182","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1175","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final byte[] array) {\n    if ((fieldName.length()) > 0) {\n        {\n            buffer.append(java.lang.String);\n            for (int int = 0 ; i < (array.int) ; i++) {\n                if (i > 0) {\n                    buffer.append(java.lang.String);\n                } \n                appendDetail(buffer, fieldName, array[i]);\n            }\n            buffer.append(java.lang.String);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"className":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1226","type":"CtBinaryOperatorImpl","sourcecode":"c > a"},"failures":[],"tindex":"bf951b9a-2e8f-11e6-9477-c5f6d3df532d","method":{"position":"org.apache.commons.lang3.RandomUtils:62","type":"CtMethodImpl","sourcecode":"public static byte[] nextBytes(int count) {\n    if (count > count) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.isTrue((count >= 0), \"Count cannot be negative.\");\n            byte[] byte[] = new byte[count];\n            org.apache.commons.lang3.RandomUtils.org.apache.commons.lang3.RandomUtils.java.util.Random.nextBytes(result);\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"count","c":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:127","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[93],"tindex":"bf951b9b-2e8f-11e6-9477-154a5182cb58","method":{"position":"org.apache.commons.lang3.Validate:1060","type":"CtMethodImpl","sourcecode":"public static <T>void exclusiveBetween(final T start, final T end, final java.lang.Comparable<T> value, final java.lang.String message, final java.lang.Object... values) {\n    if (message == null) {\n        {\n            if (((value.compareTo(start)) <= 0) || ((value.compareTo(end)) >= 0)) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message, values));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"message"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3108","type":"CtBinaryOperatorImpl","sourcecode":"(separatorChars.length()) == 1"},"failures":[94,95,96,97,98,99,100,101,102],"tindex":"bf951b9c-2e8f-11e6-9477-81841bc1a338","method":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:144","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic final void applyPattern(final java.lang.String pattern) {\n    if ((pattern.length()) == 1) {\n        {\n            if ((java.util.Map<java.lang.String, ? extends org.apache.commons.lang3.text.FormatFactory>) == null) {\n                super.applyPattern(pattern);\n                java.lang.String = super.toPattern();\n                return ;\n            } \n            final java.util.ArrayList<java.text.Format> java.util.ArrayList<java.text.Format> = new java.util.ArrayList<java.text.Format>();\n            final java.util.ArrayList<java.lang.String> java.util.ArrayList<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(pattern.length());\n            final java.text.ParsePosition java.text.ParsePosition = new java.text.ParsePosition(0);\n            final char[] char[] = pattern.toCharArray();\n            int int = 0;\n            while ((pos.getIndex()) < (pattern.length())) {\n                switch (c[pos.getIndex()]) {\n                    case org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char :\n                        appendQuotedString(pattern, pos, stripCustom, true);\n                        break;\n                    case org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char :\n                        fmtCount++;\n                        seekNonWs(pattern, pos);\n                        final int int = pos.getIndex();\n                        final int int = readArgumentIndex(pattern, next(pos));\n                        stripCustom.append(org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char).append(index);\n                        seekNonWs(pattern, pos);\n                        java.text.Format java.text.Format = null;\n                        java.lang.String java.lang.String = null;\n                        if ((c[pos.getIndex()]) == (org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char)) {\n                            formatDescription = parseFormatDescription(pattern, next(pos));\n                            format = getFormat(formatDescription);\n                            if (format == null) {\n                                stripCustom.append(org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char).append(formatDescription);\n                            } \n                        } \n                        foundFormats.add(format);\n                        foundDescriptions.add((format == null ? null : formatDescription));\n                        org.apache.commons.lang3.Validate.isTrue(((foundFormats.size()) == fmtCount));\n                        org.apache.commons.lang3.Validate.isTrue(((foundDescriptions.size()) == fmtCount));\n                        if ((c[pos.getIndex()]) != (org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char)) {\n                            throw new java.lang.IllegalArgumentException((\"Unreadable format element at position \" + start));\n                        } \n                    default :\n                        stripCustom.append(c[pos.getIndex()]);\n                        next(pos);\n                }\n            }\n            super.applyPattern(stripCustom.toString());\n            java.lang.String = insertFormats(super.toPattern(), foundDescriptions);\n            if (containsElements(foundFormats)) {\n                final java.text.Format[] java.text.Format[] = getFormats();\n                int int = 0;\n                for (final java.util.Iterator<java.text.Format> java.util.Iterator<java.text.Format> = foundFormats.iterator() ; it.hasNext() ; i++) {\n                    final java.text.Format java.text.Format = it.next();\n                    if (f != null) {\n                        origFormats[i] = f;\n                    } \n                }\n                super.setFormats(origFormats);\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"separatorChars":"pattern"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:176","type":"CtBinaryOperatorImpl","sourcecode":"cls == null"},"failures":[103,104],"tindex":"bf9569bd-2e8f-11e6-9477-e3b5e7df2441","method":{"position":"org.apache.commons.lang3.ClassUtils:709","type":"CtMethodImpl","sourcecode":"public static java.lang.Class<?> primitiveToWrapper(final java.lang.Class<?> cls) {\n    if (cls == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Class<?> java.lang.Class<?> = cls;\n            if ((cls != null) && (cls.isPrimitive())) {\n                convertedClass = org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(cls);\n            } \n            return convertedClass;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"cls"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:814","type":"CtBinaryOperatorImpl","sourcecode":"valueDelimMatcher != null"},"failures":[105],"tindex":"bf9569be-2e8f-11e6-9477-73b690b75fe5","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2278","type":"CtMethodImpl","sourcecode":"public boolean contains(final org.apache.commons.lang3.text.StrMatcher matcher) {\n    if (matcher != null) {\n        {\n            return (indexOf(matcher, 0)) >= 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"valueDelimMatcher":"matcher"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5033","type":"CtBinaryOperatorImpl","sourcecode":"index == (org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND)"},"failures":[],"tindex":"bf9590cf-2e8f-11e6-9477-6359470fff7d","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:413","type":"CtMethodImpl","sourcecode":"public java.lang.String replace(final java.lang.String source, final int offset, final int length) {\n    if (length == length) {\n        {\n            if (source == null) {\n                return null;\n            } \n            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(length).append(source, offset, length);\n            if ((substitute(buf, 0, length)) == false) {\n                return source.substring(offset, (offset + length));\n            } \n            return buf.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND":"length","index":"length"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:6046","type":"CtBinaryOperatorImpl","sourcecode":"end > 0"},"failures":[106],"tindex":"bf9590d0-2e8f-11e6-9477-8d0a522cf5ef","method":{"position":"org.apache.commons.lang3.ArrayUtils:4389","type":"CtMethodImpl","sourcecode":"public static byte[] add(final byte[] array, final int index, final byte element) {\n    if (index > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((byte[])(org.apache.commons.lang3.ArrayUtils.add(array, index, java.lang.Byte.valueOf(element), java.lang.Byte.java.lang.Byte.java.lang.Class<java.lang.Byte>)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"end":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:334","type":"CtBinaryOperatorImpl","sourcecode":"toType instanceof java.lang.reflect.GenericArrayType"},"failures":[107,108,109,110,111],"tindex":"bf9590d1-2e8f-11e6-9477-c1376832a745","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1658","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(java.lang.reflect.Type type) {\n    if (type instanceof java.lang.reflect.GenericArrayType) {\n        {\n            org.apache.commons.lang3.Validate.notNull(type);\n            if (type instanceof java.lang.Class<?>) {\n                return org.apache.commons.lang3.reflect.TypeUtils.classToString(((java.lang.Class<?>)(type)));\n            } \n            if (type instanceof java.lang.reflect.ParameterizedType) {\n                return org.apache.commons.lang3.reflect.TypeUtils.parameterizedTypeToString(((java.lang.reflect.ParameterizedType)(type)));\n            } \n            if (type instanceof java.lang.reflect.WildcardType) {\n                return org.apache.commons.lang3.reflect.TypeUtils.wildcardTypeToString(((java.lang.reflect.WildcardType)(type)));\n            } \n            if (type instanceof java.lang.reflect.TypeVariable<?>) {\n                return org.apache.commons.lang3.reflect.TypeUtils.typeVariableToString(((java.lang.reflect.TypeVariable<?>)(type)));\n            } \n            if (type instanceof java.lang.reflect.GenericArrayType) {\n                return org.apache.commons.lang3.reflect.TypeUtils.genericArrayTypeToString(((java.lang.reflect.GenericArrayType)(type)));\n            } \n            throw new java.lang.IllegalArgumentException(org.apache.commons.lang3.ObjectUtils.identityToString(type));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toType":"type"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1241","type":"CtBinaryOperatorImpl","sourcecode":"b > a"},"failures":[],"tindex":"bf95b7e2-2e8f-11e6-9477-81e9b1797a44","method":{"position":"org.apache.commons.lang3.BitField:227","type":"CtMethodImpl","sourcecode":"public short setShort(final short holder) {\n    if (holder > holder) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((short)(set(holder)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"holder","b":"holder"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDatePrinter:328","type":"CtBinaryOperatorImpl","sourcecode":"c == '\\''"},"failures":[],"tindex":"bf95b7e3-2e8f-11e6-9477-fb79498afa2e","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1016","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendln(final char ch) {\n    if (ch == '\\'') {\n        {\n            return append(ch).appendNewLine();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"ch"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.JavaVersion:136","type":"CtInvocationImpl","sourcecode":"\"1.2\".equals(nom)"},"failures":[],"tindex":"bf95b7e4-2e8f-11e6-9477-439faa31d022","method":{"position":"org.apache.commons.lang3.BooleanUtils:656","type":"CtMethodImpl","sourcecode":"public static java.lang.Boolean toBooleanObject(final java.lang.String str, final java.lang.String trueString, final java.lang.String falseString, final java.lang.String nullString) {\n    if (\"1.2\".equals(nullString)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                if (trueString == null) {\n                    return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                } \n                if (falseString == null) {\n                    return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                } \n                if (nullString == null) {\n                    return null;\n                } \n            } else if (str.equals(trueString)) {\n                return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n            } else if (str.equals(falseString)) {\n                return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n            } else if (str.equals(nullString)) {\n                return null;\n            } \n            throw new java.lang.IllegalArgumentException(\"The String did not match any specified value\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nom":"nullString"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:798","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[112,113,114,115,116,117,118,119,120,121,122,123,124],"tindex":"bf95b7e5-2e8f-11e6-9477-db9898499805","method":{"position":"org.apache.commons.lang3.SerializationUtils:264","type":"CtMethodImpl","sourcecode":"public static <T>T deserialize(final byte[] objectData) {\n    if (objectData == objectData) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (objectData == null) {\n                throw new java.lang.IllegalArgumentException(\"The byte[] must not be null\");\n            } \n            return org.apache.commons.lang3.SerializationUtils.<T>deserialize(new java.io.ByteArrayInputStream(objectData));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"objectData","rhs":"objectData"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:331","type":"CtBinaryOperatorImpl","sourcecode":"value == nullValue"},"failures":[125],"tindex":"bf95def6-2e8f-11e6-9477-fb7a81f20371","method":{"position":"org.apache.commons.lang3.Conversion:1685","type":"CtMethodImpl","sourcecode":"public static byte[] uuidToByteArray(final java.util.UUID src, final byte[] dst, final int dstPos, final int nBytes) {\n    if (nBytes == nBytes) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (0 == nBytes) {\n                return dst;\n            } \n            if (nBytes > 16) {\n                throw new java.lang.IllegalArgumentException(\"nBytes is greather than 16\");\n            } \n            org.apache.commons.lang3.Conversion.longToByteArray(src.getMostSignificantBits(), 0, dst, dstPos, (nBytes > 8 ? 8 : nBytes));\n            if (nBytes >= 8) {\n                org.apache.commons.lang3.Conversion.longToByteArray(src.getLeastSignificantBits(), 0, dst, (dstPos + 8), (nBytes - 8));\n            } \n            return dst;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"nBytes","nullValue":"nBytes"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3048","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[126],"tindex":"bf95def7-2e8f-11e6-9477-872659d637e6","method":{"position":"org.apache.commons.lang3.ArrayUtils:692","type":"CtMethodImpl","sourcecode":"public static java.lang.Long[] nullToEmpty(final java.lang.Long[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((array == null) || ((array.int) == 0)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Long[];\n            } \n            return array;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:764","type":"CtBinaryOperatorImpl","sourcecode":"(((nShorts - 1) * 16) + dstPos) >= 32"},"failures":[],"tindex":"bf95def8-2e8f-11e6-9477-f51f9398569c","method":{"position":"org.apache.commons.lang3.ArrayUtils:1818","type":"CtMethodImpl","sourcecode":"public static void reverse(final java.lang.Object[] array, int startIndexInclusive, int endIndexExclusive) {\n    if ((((startIndexInclusive - 1) * 16) + startIndexInclusive) >= 32) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return ;\n            } \n            int int = startIndexInclusive < 0 ? 0 : startIndexInclusive;\n            int int = (java.lang.Math.min(array.int, endIndexExclusive)) - 1;\n            java.lang.Object java.lang.Object;\n            while (j > i) {\n                tmp = array[j];\n                array[j] = array[i];\n                array[i] = tmp;\n                j--;\n                i++;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dstPos":"startIndexInclusive","nShorts":"startIndexInclusive"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6689","type":"CtBinaryOperatorImpl","sourcecode":"(strs[0]) == null"},"failures":[127,128,129],"tindex":"bf960609-2e8f-11e6-9477-d34536af202f","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:859","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final java.lang.Object[] array) {\n    if ((array[0]) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                int = (int) * (int);\n            } else {\n                for (final java.lang.Object java.lang.Object : array) {\n                    append(element);\n                }\n            }\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"strs":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDateParser:463","type":"CtBinaryOperatorImpl","sourcecode":"(formatField.length()) > 2"},"failures":[130,131],"tindex":"bf96060a-2e8f-11e6-9477-4748642afcd8","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1742","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder deleteAll(final java.lang.String str) {\n    if ((str.length()) > 2) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = str == null ? 0 : str.length();\n            if (len > 0) {\n                int int = indexOf(str, 0);\n                while (index >= 0) {\n                    deleteImpl(index, (index + len), len);\n                    index = indexOf(str, index);\n                }\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"formatField":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Range:450","type":"CtBinaryOperatorImpl","sourcecode":"result == null"},"failures":[132,133,134],"tindex":"bf962d1b-2e8f-11e6-9477-a51cdb14e18c","method":{"position":"org.apache.commons.lang3.StringUtils:417","type":"CtMethodImpl","sourcecode":"public static java.lang.String trim(final java.lang.String str) {\n    if (str == null) {\n        {\n            return str == null ? null : str.trim();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"result":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:308","type":"CtBinaryOperatorImpl","sourcecode":"ch < 128"},"failures":[135],"tindex":"bf962d1c-2e8f-11e6-9477-45d66bf5ffa9","method":{"position":"org.apache.commons.lang3.CharUtils:535","type":"CtMethodImpl","sourcecode":"public static boolean isAsciiAlphanumeric(final char ch) {\n    if (ch < 128) {\n        {\n            return (org.apache.commons.lang3.CharUtils.isAsciiAlpha(ch)) || (org.apache.commons.lang3.CharUtils.isAsciiNumeric(ch));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6687","type":"CtBinaryOperatorImpl","sourcecode":"smallestIndexOfDiff == (org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND)"},"failures":[],"tindex":"bf962d1d-2e8f-11e6-9477-45d55c2fc994","method":{"position":"org.apache.commons.lang3.time.DateUtils:1781","type":"CtMethodImpl","sourcecode":"public static int truncatedCompareTo(final java.util.Date date1, final java.util.Date date2, final int field) {\n    if (field == field) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Date java.util.Date = org.apache.commons.lang3.time.DateUtils.truncate(date1, field);\n            final java.util.Date java.util.Date = org.apache.commons.lang3.time.DateUtils.truncate(date2, field);\n            return truncatedDate1.compareTo(truncatedDate2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND":"field","smallestIndexOfDiff":"field"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSetUtils:244","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isNotEmpty(s)"},"failures":[136],"tindex":"bf96542e-2e8f-11e6-9477-9f58fae7097b","method":{"position":"org.apache.commons.lang3.exception.ContextedException:199","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<java.lang.Object> getContextValues(final java.lang.String label) {\n    if (org.apache.commons.lang3.StringUtils.isNotEmpty(label)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.exception.ContextedException.this.org.apache.commons.lang3.exception.ExceptionContext.getContextValues(label);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"s":"label"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:365","type":"CtBinaryOperatorImpl","sourcecode":"toClass == null"},"failures":[107,108,109,110,111],"tindex":"bf96542f-2e8f-11e6-9477-439c41ef06ac","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1742","type":"CtMethodImpl","sourcecode":"private static java.lang.String classToString(java.lang.Class<?> c) {\n    if (c == null) {\n        {\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            if ((c.getEnclosingClass()) != null) {\n                buf.append(org.apache.commons.lang3.reflect.TypeUtils.classToString(c.getEnclosingClass())).append('.').append(c.getSimpleName());\n            } else {\n                buf.append(c.getName());\n            }\n            if ((c.getTypeParameters().int) > 0) {\n                buf.append('<');\n                org.apache.commons.lang3.reflect.TypeUtils.appendAllTo(buf, \", \", c.getTypeParameters());\n                buf.append('>');\n            } \n            return buf.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toClass":"c"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2687","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.ArrayUtils.isEmpty(array)"},"failures":[137,138,139,140,141,142,143,144,145,146,147,148,149],"tindex":"bf965430-2e8f-11e6-9477-c779455aa9e3","method":{"position":"org.apache.commons.lang3.ArrayUtils:3564","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final double[] array) {\n    if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (array == null) || ((array.int) == 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:64","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[150,151],"tindex":"bf967b41-2e8f-11e6-9477-19b6ce056fe3","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:723","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final float[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                int = (int) * (int);\n            } else {\n                for (final float float : array) {\n                    append(element);\n                }\n            }\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:255","type":"CtInvocationImpl","sourcecode":"java.lang.Float.isNaN(a)"},"failures":[150,152,151],"tindex":"bf967b42-2e8f-11e6-9477-75e6ec77108e","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:709","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final float value) {\n    if (java.lang.Float.isNaN(value)) {\n        {\n            int = ((int) * (int)) + (java.lang.Float.floatToIntBits(value));\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ObjectUtils:613","type":"CtUnaryOperatorImpl","sourcecode":"!(componentType.isPrimitive())"},"failures":[],"tindex":"bf967b43-2e8f-11e6-9477-853db1d3bbd4","method":{"position":"org.apache.commons.lang3.Validate:1225","type":"CtMethodImpl","sourcecode":"public static void isAssignableFrom(final java.lang.Class<?> superType, final java.lang.Class<?> type) {\n    if (!(type.isPrimitive())) {\n        {\n            if ((superType.isAssignableFrom(type)) == false) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.java.lang.String, (type == null ? \"null\" : type.getName()), superType.getName()));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"componentType":"type"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1244","type":"CtBinaryOperatorImpl","sourcecode":"c > a"},"failures":[],"tindex":"bf96a254-2e8f-11e6-9477-9b6f610ffb83","method":{"position":"org.apache.commons.lang3.mutable.MutableShort:96","type":"CtMethodImpl","sourcecode":"public void setValue(final short value) {\n    if (value > value) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.mutable.MutableShort.this.short = value;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"value","c":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:596","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"bf96a255-2e8f-11e6-9477-b1b8d72ee754","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:448","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.StringBuffer format(final long millis, final java.lang.StringBuffer buf) {\n    if (buf == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.FastDatePrinter.format(millis, buf);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"buf"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:137","type":"CtInvocationImpl","sourcecode":"java.lang.Float.isNaN(a)"},"failures":[153],"tindex":"bf96a256-2e8f-11e6-9477-4992f464ffa0","method":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:241","type":"CtMethodImpl","sourcecode":"public static float max(final float a, final float b, final float c) {\n    if (java.lang.Float.isNaN(b)) {\n        {\n            return org.apache.commons.lang3.math.IEEE754rUtils.max(org.apache.commons.lang3.math.IEEE754rUtils.max(a, b), c);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3368","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[154,155,156,157,158],"tindex":"bf96c967-2e8f-11e6-9477-936df9b32663","method":{"position":"org.apache.commons.lang3.ArrayUtils:5769","type":"CtMethodImpl","sourcecode":"public static float[] removeAll(final float[] array, final int... indices) {\n    if (indices == null) {\n        {\n            return ((float[])(org.apache.commons.lang3.ArrayUtils.removeAll(((java.lang.Object)(array)), org.apache.commons.lang3.ArrayUtils.clone(indices))));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"indices"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:669","type":"CtInvocationImpl","sourcecode":"str.equals(falseString)"},"failures":[159,159,160,161,161,162,163,164,165,79,79,91,91,92],"tindex":"bf96c968-2e8f-11e6-9477-85110a81ff5e","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:801","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final double value) {\n    if (fieldName.equals(fieldName)) {\n        {\n            buffer.append(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName","falseString":"fieldName"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":58,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}