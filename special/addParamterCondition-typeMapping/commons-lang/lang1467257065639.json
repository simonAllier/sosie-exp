{"failureDictionary":{"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":224,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":418,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":120,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":179,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testAddInitializerAfterStart":284,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":114,"org.apache.commons.lang3.text.StrBuilderTest.testSubstringInt":308,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":383,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeRuntimeEx":274,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testConstantFuture_null":290,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":225,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":316,"org.apache.commons.lang3.time.FastDatePrinterTest.testMilleniumBug":323,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testIsStartedTrue":266,"org.apache.commons.lang3.ArrayUtilsTest.testIsEmptyPrimitives":23,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceFirst_String_String":305,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCode":244,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddDash":258,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":408,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":98,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":338,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":183,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":141,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultIsExceptionUnknown":286,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":165,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":232,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":382,"org.apache.commons.lang3.ClassUtilsTest.testGetClassWithArrayClasses2D":145,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetMatchingAccessibleMethod":39,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":335,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":13,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":222,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowables_Throwable_withoutCause":208,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":384,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCyclicalObjectReferences":247,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":180,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":110,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":140,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":405,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testConstantFuture_Integer":289,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":50,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_double":133,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOf":219,"org.apache.commons.lang3.ClassUtilsTest.test_convertClassNamesToClasses_List":431,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":81,"org.apache.commons.lang3.ArrayUtilsTest.testReverseIntRange":190,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":113,"org.apache.commons.lang3.math.FractionTest.testDivide":4,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":9,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":318,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":99,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":92,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowables_Throwable_withCause":201,"org.apache.commons.lang3.StringUtilsTest.testSplit_StringChar":46,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOf_ThrowableClass":202,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeEx":279,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":341,"org.apache.commons.lang3.AnnotationUtilsTest.testNonEquivalentAnnotationsOfSameType":301,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableCount_Throwable":207,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":365,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeMethod":40,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringString":351,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":332,"org.apache.commons.lang3.AnnotationUtilsTest.testSameInstance":295,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetValueDelimiter":18,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":411,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":378,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":430,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":89,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":412,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":346,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testIsStartedAfterGet":270,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":363,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeWithDelimiters_String":395,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":234,"org.apache.commons.lang3.AnnotationUtilsTest.testEquivalence":296,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringString":192,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowables_Throwable_recursiveCause":210,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_float":132,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":320,"org.apache.commons.lang3.ArrayUtilsTest.testContains":218,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":342,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstringAfterLast_StringString":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":88,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":103,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":178,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":121,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":138,"org.apache.commons.lang3.ArrayUtilsTest.testReverseInt":189,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowables_Throwable_jdkNoCause":213,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":367,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":76,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendSeparator_String_String":14,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetTypeArguments":194,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":329,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":340,"org.apache.commons.lang3.BooleanUtilsTest.testXor_primitive_validInput_2items":356,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":393,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":364,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":228,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":166,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableWriter":205,"org.apache.commons.lang3.text.StrBuilderTest.testMidString":288,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_Unboxing_Widening":32,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetCheckedException":264,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":66,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":362,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":173,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":72,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang303":313,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testArrayList":167,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":87,"org.apache.commons.lang3.builder.DiffBuilderTest.testSimilarObjectIgnoresAppends":233,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testBlank":369,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":86,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":421,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":377,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_Autoboxing":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":75,"org.apache.commons.lang3.ClassUtilsTest.test_getShortClassName_Class":55,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":314,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":109,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":344,"org.apache.commons.lang3.ClassUtilsTest.test_getShortClassName_Object":56,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":60,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":171,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeResultsIsSuccessfulTrue":275,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":177,"org.apache.commons.lang3.text.WordUtilsTest.testUncapitalize_String":396,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":373,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":409,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String_charArray":399,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":407,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":231,"org.apache.commons.lang3.BooleanUtilsTest.testXor_object_validInput_2items":354,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":385,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":51,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable":24,"org.apache.commons.lang3.math.FractionTest.testAdd":1,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":328,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableList_Throwable_nested":200,"org.apache.commons.lang3.text.WordUtilsTest.testUncapitalizeWithDelimiters_String":400,"org.apache.commons.lang3.builder.CompareToBuilderTest.testAppendSuper":153,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_ClassArray_ClassArray":31,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":112,"org.apache.commons.lang3.ClassUtilsTest.testGetClassByNormalNameArrays2D":146,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":119,"org.apache.commons.lang3.ClassUtilsTest.testWithInterleavingWhitespace":147,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":64,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementDoubleArray":20,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLexx":358,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":230,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddCombinations":260,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":374,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":333,"org.apache.commons.lang3.ClassUtilsTest.testGetClassInvalidArguments":148,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testLinkedList":169,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":237,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsert":42,"org.apache.commons.lang3.ClassUtilsTest.testGetClassClassNotFound":149,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableList_Throwable_withoutCause":204,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetMatchingAccessibleMethod":37,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":11,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang538":326,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testMilleniumBug":311,"org.apache.commons.lang3.text.CompositeFormatTest.testCompositeFormat":135,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testAbove":53,"org.apache.commons.lang3.AnnotationUtilsTest.testGeneratedAnnotationEquivalentToRealAnnotation":299,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":240,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":105,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":226,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":379,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetExceptionUnknown":276,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":394,"org.apache.commons.lang3.ClassUtilsTest.testWrapperToPrimitive":25,"org.apache.commons.lang3.CharSetTest.testConstructor_String_combo":259,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixtureWithTransients":256,"org.apache.commons.lang3.mutable.MutableDoubleTest.testGetSet":154,"org.apache.commons.lang3.ClassUtilsTest.testWrappersToPrimitives":26,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":115,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringWithSupplementaryChars":193,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":337,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetRootCause_Throwable":215,"org.apache.commons.lang3.ClassUtilsTest.test_convertClassesToClassNames_List":187,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseNull":150,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":90,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":123,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":80,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_ClassArray_ClassArray_Autoboxing":27,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":426,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringStringarray":292,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":375,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayInt":54,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_PrimitiveNumber":130,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":68,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String":401,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":59,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":319,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringWithBadSupplementaryChars":191,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":125,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":417,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":371,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":118,"org.apache.commons.lang3.StringUtilsTest.testLengthString":44,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":117,"org.apache.commons.lang3.ClassUtilsTest.testWrappersToPrimitivesNull":30,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":370,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":331,"org.apache.commons.lang3.text.CompositeFormatTest.testUsage":134,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":390,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":137,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNull":416,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testSimpleDate":309,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":403,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":12,"org.apache.commons.lang3.ClassUtilsTest.testGetClassByNormalNameArrays":142,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":387,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":93,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseNullCause":151,"org.apache.commons.lang3.ArrayUtilsTest.testSameLengthFloat":359,"org.apache.commons.lang3.math.NumberUtilsTest.testMinShort":48,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":347,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":428,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":122,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":174,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":94,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":104,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":339,"org.apache.commons.lang3.math.FractionTest.testMultiply":5,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOf_String":17,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang303":325,"org.apache.commons.lang3.exception.ExceptionUtilsTest.test_getRootCauseMessage_Throwable":197,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableStream":203,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":6,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":10,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":170,"org.apache.commons.lang3.time.FastDatePrinterTest.testSimpleDate":321,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionCompare":252,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementIntArray":22,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":336,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementDoubleArray":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":127,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":315,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":388,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHierarchyHashCode":243,"org.apache.commons.lang3.StringUtilsTest.testReverseDelimited_StringChar":45,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":96,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseNull":152,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":176,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmpty":429,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":70,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCodeExcludeFields":245,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringStringWithSupplementaryChars":352,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":229,"org.apache.commons.lang3.BooleanUtilsTest.testXor_primitive_emptyInput":353,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeNested":277,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":65,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetActiveExecutorTemp":267,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfWithStartIndex":220,"org.apache.commons.lang3.AnnotationUtilsTest.testBothArgsNull":300,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":389,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":126,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":116,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetNullText":186,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":345,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorNoArgs":414,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":107,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":78,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":128,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetRootCauseStackTrace_Throwable":206,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionHierarchyEquals":249,"org.apache.commons.lang3.time.FastDatePrinterTest.testShortDateStyleWithLocales":322,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableList_Throwable_jdkNoCause":199,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":238,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetResultObjectUnknown":285,"org.apache.commons.lang3.math.NumberUtilsTest.testMinShort_emptyArray":47,"org.apache.commons.lang3.BooleanUtilsTest.testXor_primitive_validInput_3items":357,"org.apache.commons.lang3.ClassUtilsTest.testGetInnerClass":143,"org.apache.commons.lang3.AnnotationUtilsTest.testOneArgNull":293,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":386,"org.apache.commons.lang3.time.FastDatePrinterTest.testFormat":327,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":35,"org.apache.commons.lang3.text.StrBuilderTest.testSubstringIntInt":307,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEqualsExcludeFields":248,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":227,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":241,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_DefaultUnboxing_Widening":29,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":334,"org.apache.commons.lang3.ClassUtilsTest.testGetClassWithArrayClasses":144,"org.apache.commons.lang3.text.StrBuilderTest.testStartsWith":306,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":348,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":83,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testInteger":257,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":182,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":106,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":97,"org.apache.commons.lang3.ConversionTest.testShortToByteArray":432,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionObjectCycle":242,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementObjectArray":217,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":420,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeStaticMethod":38,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringString":291,"org.apache.commons.lang3.time.FastDatePrinterTest.testLowYearPadding":324,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixture":255,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":404,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":184,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testBlank":360,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeResultsIsSuccessfulFalse":281,"org.apache.commons.lang3.BooleanUtilsTest.testXor_object_validInput_3items":355,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":181,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":49,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":69,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":392,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":425,"org.apache.commons.lang3.math.NumberUtilsTest.testToIntString":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":108,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":221,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":91,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":376,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":223,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":427,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":239,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":366,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":52,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":74,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":413,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":236,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOfType_ThrowableClassInt":211,"org.apache.commons.lang3.text.StrBuilderTest.testToCharArrayIntInt":304,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetRuntimeException":265,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testDoubleArray":195,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":380,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":57,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":136,"org.apache.commons.lang3.AnnotationUtilsTest.testAnnotationsOfDifferingTypes":297,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoVariables":422,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":424,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":235,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testCopyOnWriteArrayList":168,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":95,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":406,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectAtIndex":350,"org.apache.commons.lang3.ArrayUtilsTest.testToString":155,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":175,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testStartMultipleTimes":271,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":410,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":61,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testSetExternalExecutorAfterStart":268,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":317,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":361,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOf_ThrowableClassInt":209,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalize_String":397,"org.apache.commons.lang3.exception.ExceptionUtilsTest.test_getMessage_Throwable":129,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddNegate":262,"org.apache.commons.lang3.AnnotationUtilsTest.testHashCode":298,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableList_Throwable_recursiveCause":212,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":85,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_PrimitiveNumber":131,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareExcludeFields":250,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":368,"org.apache.commons.lang3.CharSetTest.testStatics":263,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":415,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":381,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":111,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":100,"org.apache.commons.lang3.text.StrTokenizerTest.test8":163,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testInitialize":269,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":343,"org.apache.commons.lang3.text.StrTokenizerTest.test5":160,"org.apache.commons.lang3.text.StrTokenizerTest.test4":159,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":101,"org.apache.commons.lang3.text.StrTokenizerTest.test7":162,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":102,"org.apache.commons.lang3.text.StrTokenizerTest.test6":161,"org.apache.commons.lang3.text.StrTokenizerTest.test1":156,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeChildWithExecutor":283,"org.apache.commons.lang3.text.StrTokenizerTest.test3":158,"org.apache.commons.lang3.text.StrTokenizerTest.test2":157,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":77,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testIntegerWithTransients":254,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":391,"org.apache.commons.lang3.AnnotationUtilsTest.testIsValidAnnotationMemberType":302,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":372,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":349,"org.apache.commons.lang3.ClassUtilsTest.testWrapperToPrimitiveNull":28,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareTransients":253,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultInitializerNamesModify":273,"org.apache.commons.lang3.math.FractionTest.testSubtract":3,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEquals":246,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":63,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeFullyWithDelimiters_String":402,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOfType_ThrowableClass":196,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveFloatArray":287,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetInitializerUnknown":280,"org.apache.commons.lang3.math.FractionTest.testPow":2,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":172,"org.apache.commons.lang3.ClassUtilsTest.testWrapperToPrimitiveNoWrapper":33,"org.apache.commons.lang3.math.NumberUtilsTest.testToIntStringI":15,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testInitializeTempExecutor":272,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetArrayEnd":303,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":62,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":419,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLowYearPadding":312,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompare":251,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeNoChildren":282,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeTempExec":278,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":139,"org.apache.commons.lang3.ClassUtilsTest.testGetClassRawPrimitives":185,"org.apache.commons.lang3.CharSetTest.testConstructor_String_comboNegated":261,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeFully_String":398,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":124,"org.apache.commons.lang3.ArrayUtilsTest.testCloneDouble":21,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":82,"org.apache.commons.lang3.StringUtilsTest.testJoin_IterableChar":43,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":330,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeConstructor":36,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementsObjectArray":216,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":294,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowables_Throwable_nested":198,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableList_Throwable_withCause":214,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":423,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":310,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsertWithNullText":41,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":79,"org.apache.commons.lang3.time.DateUtilsTest.testSetSeconds":188,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":164},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:514","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.ArrayUtils.isSameLength(classArray, toClassArray)) == false"},"failures":[],"tindex":"2570773c-3e72-11e6-9581-9dbe5fe9eb05","method":{"position":"org.apache.commons.lang3.math.Fraction:844","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((org.apache.commons.lang3.ArrayUtils.isSameLength(obj, obj)) == false) {\n        {\n            if (obj == (org.apache.commons.lang3.math.Fraction.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.lang3.math.Fraction) == false) {\n                return false;\n            } \n            final org.apache.commons.lang3.math.Fraction org.apache.commons.lang3.math.Fraction = ((org.apache.commons.lang3.math.Fraction)(obj));\n            return ((getNumerator()) == (other.getNumerator())) && ((getDenominator()) == (other.getDenominator()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toClassArray":"obj","classArray":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.EnumUtils:114","type":"CtBinaryOperatorImpl","sourcecode":"enumName == null"},"failures":[0],"tindex":"25713a8d-3e72-11e6-9581-310f7529428d","method":{"position":"org.apache.commons.lang3.StringUtils:2412","type":"CtMethodImpl","sourcecode":"public static java.lang.String substringAfterLast(final java.lang.String str, final java.lang.String separator) {\n    if (separator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n                return str;\n            } \n            if (org.apache.commons.lang3.StringUtils.isEmpty(separator)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final int int = str.lastIndexOf(separator);\n            if ((pos == (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) || (pos == ((str.length()) - (separator.length())))) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            return str.substring((pos + (separator.length())));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"enumName":"separator"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2656","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[1,2,3,4,5],"tindex":"2571619e-3e72-11e6-9581-d537e6ef390c","method":{"position":"org.apache.commons.lang3.math.Fraction:639","type":"CtMethodImpl","sourcecode":"private static int mulAndCheck(final int x, final int y) {\n    if (y < 0) {\n        {\n            final long long = ((long)(x)) * ((long)(y));\n            if ((m < (java.lang.Integer.java.lang.Integer.int)) || (m > (java.lang.Integer.java.lang.Integer.int))) {\n                throw new java.lang.ArithmeticException(\"overflow: mul\");\n            } \n            return ((int)(m));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"y"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:585","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[6,7,8,9,10,11,12,13],"tindex":"2571619f-3e72-11e6-9581-753b2cf39d1e","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2033","type":"CtMethodImpl","sourcecode":"protected void setSizeEndText(java.lang.String sizeEndText) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(sizeEndText)) {\n        {\n            if (sizeEndText == null) {\n                sizeEndText = \"\";\n            } \n            org.apache.commons.lang3.builder.ToStringStyle.this.java.lang.String = sizeEndText;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"sizeEndText"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2245","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[14],"tindex":"257188b0-3e72-11e6-9581-e918f9493231","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1245","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendSeparator(final java.lang.String standard, final java.lang.String defaultIfEmpty) {\n    if (defaultIfEmpty == null) {\n        {\n            final java.lang.String java.lang.String = isEmpty() ? defaultIfEmpty : standard;\n            if (str != null) {\n                append(str);\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"defaultIfEmpty"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:430","type":"CtBinaryOperatorImpl","sourcecode":"cls == null"},"failures":[],"tindex":"257188b1-3e72-11e6-9581-53fadd2b08c4","method":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:513","type":"CtMethodImpl","sourcecode":"protected void appendFieldsIn(final java.lang.Class<?> clazz) {\n    if (clazz == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (clazz.isArray()) {\n                org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.reflectionAppendArray(org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.getObject());\n                return ;\n            } \n            final java.lang.reflect.Field[] java.lang.reflect.Field[] = clazz.getDeclaredFields();\n            java.lang.reflect.AccessibleObject.setAccessible(fields, true);\n            for (final java.lang.reflect.Field java.lang.reflect.Field : fields) {\n                final java.lang.String java.lang.String = field.getName();\n                if (org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.accept(field)) {\n                    try {\n                        final java.lang.Object java.lang.Object = org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.getValue(field);\n                        org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.append(fieldName, fieldValue);\n                    } catch (final java.lang.IllegalAccessException ex) {\n                        throw new java.lang.InternalError((\"Unexpected IllegalAccessException: \" + (ex.getMessage())));\n                    }\n                } \n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"clazz"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:180","type":"CtBinaryOperatorImpl","sourcecode":"(tmp.length()) != (duration.length())"},"failures":[15,16],"tindex":"2571d6d2-3e72-11e6-9581-f51b9f989fa6","method":{"position":"org.apache.commons.lang3.math.NumberUtils:120","type":"CtMethodImpl","sourcecode":"public static int toInt(final java.lang.String str, final int defaultValue) {\n    if ((str.length()) != (str.length())) {\n        {\n            if (str == null) {\n                return defaultValue;\n            } \n            try {\n                return java.lang.Integer.parseInt(str);\n            } catch (final java.lang.NumberFormatException nfe) {\n                return defaultValue;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"duration":"str","tmp":"str"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:585","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[17],"tindex":"2571d6d3-3e72-11e6-9581-1d9dd9440696","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2322","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.String str) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return indexOf(str, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:611","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[],"tindex":"2571fde4-3e72-11e6-9581-f9a1d6321eb9","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:943","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n    if (buffer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendTo(buffer, ((calendar.get(java.util.Calendar.java.util.Calendar.int)) % 100));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"buffer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:754","type":"CtBinaryOperatorImpl","sourcecode":"length > 0"},"failures":[],"tindex":"2571fde5-3e72-11e6-9581-c3fbd9e4d95c","method":{"position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:121","type":"CtMethodImpl","sourcecode":"public static java.lang.String hex(final int codepoint) {\n    if (codepoint > 0) {\n        {\n            return java.lang.Integer.toHexString(codepoint).toUpperCase(java.util.Locale.java.util.Locale.java.util.Locale);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"codepoint"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5637","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[18],"tindex":"257224f6-3e72-11e6-9581-4d923396e9fb","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1144","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrSubstitutor setValueDelimiter(final java.lang.String valueDelimiter) {\n    if (valueDelimiter == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(valueDelimiter)) {\n                setValueDelimiterMatcher(null);\n                return org.apache.commons.lang3.text.StrSubstitutor.this;\n            } \n            return setValueDelimiterMatcher(org.apache.commons.lang3.text.StrMatcher.stringMatcher(valueDelimiter));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"valueDelimiter"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3858","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[19,20,21],"tindex":"257224f7-3e72-11e6-9581-e75d34a3f74d","method":{"position":"org.apache.commons.lang3.ArrayUtils:418","type":"CtMethodImpl","sourcecode":"public static double[] clone(final double[] array) {\n    if (array == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            return array.clone();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:705","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[22,23],"tindex":"25724c08-3e72-11e6-9581-77b3f09f3952","method":{"position":"org.apache.commons.lang3.ArrayUtils:3520","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final int[] array) {\n    if (array == array) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (array == null) || ((array.int) == 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array","rhs":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:900","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(cls, toClass))"},"failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"tindex":"25724c09-3e72-11e6-9581-35a4ef7f4ea7","method":{"position":"org.apache.commons.lang3.ClassUtils:759","type":"CtMethodImpl","sourcecode":"public static java.lang.Class<?> wrapperToPrimitive(final java.lang.Class<?> cls) {\n    if (!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(cls, cls))) {\n        {\n            return org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(cls);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toClass":"cls","cls":"cls"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2127","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[41,42],"tindex":"2572731a-3e72-11e6-9581-fffccf0136b9","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1521","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder insert(final int index, final char[] chars) {\n    if ((index < index) || (codepoint > index)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                {\n                    validateIndex(index);\n                    if (chars == null) {\n                        return insert(index, java.lang.String);\n                    } \n                    final int int = chars.int;\n                    if (len > 0) {\n                        ensureCapacity(((int) + len));\n                        java.lang.System.arraycopy(char[], index, char[], (index + len), ((int) - index));\n                        java.lang.System.arraycopy(chars, 0, char[], index, len);\n                        int += len;\n                    } \n                    return org.apache.commons.lang3.text.StrBuilder.this;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:353","type":"CtBinaryOperatorImpl","sourcecode":"ch < 16"},"failures":[43],"tindex":"25729a2b-3e72-11e6-9581-d9f2685b57ff","method":{"position":"org.apache.commons.lang3.StringUtils:4126","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final java.lang.Iterable<?> iterable, final char separator) {\n    if (separator < 16) {\n        {\n            if (iterable == null) {\n                return null;\n            } \n            return org.apache.commons.lang3.StringUtils.join(iterable.iterator(), separator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"separator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2064","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[44],"tindex":"25729a2c-3e72-11e6-9581-a958ee3c7ea1","method":{"position":"org.apache.commons.lang3.StringUtils:5452","type":"CtMethodImpl","sourcecode":"public static int length(final java.lang.CharSequence cs) {\n    if (cs == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return cs == null ? 0 : cs.length();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"cs"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:684","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.getObject()) == null"},"failures":[],"tindex":"2572c13d-3e72-11e6-9581-29d1e4e31070","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:562","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.lang3.time.FastDateFormat) == false) {\n        return false;\n    } \n    final org.apache.commons.lang3.time.FastDateFormat org.apache.commons.lang3.time.FastDateFormat = ((org.apache.commons.lang3.time.FastDateFormat)(obj));\n    return org.apache.commons.lang3.time.FastDatePrinter.equals(other.org.apache.commons.lang3.time.FastDatePrinter);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:998","type":"CtBinaryOperatorImpl","sourcecode":"startIndexInclusive < 0"},"failures":[],"tindex":"2572e84e-3e72-11e6-9581-6f2038537e7a","method":{"position":"org.apache.commons.lang3.text.translate.OctalUnescaper:39","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int translate(final java.lang.CharSequence input, final int index, final java.io.Writer out) throws java.io.IOException {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            int int = ((input.length()) - index) - 1;\n            java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            if ((((input.charAt(index)) == '\\\\') && (remaining > 0)) && (isOctalDigit(input.charAt((index + 1))))) {\n                int int = index + 1;\n                int int = index + 2;\n                int int = index + 3;\n                builder.append(input.charAt(next));\n                if ((remaining > 1) && (isOctalDigit(input.charAt(next2)))) {\n                    builder.append(input.charAt(next2));\n                    if (((remaining > 2) && (isZeroToThree(input.charAt(next)))) && (isOctalDigit(input.charAt(next3)))) {\n                        builder.append(input.charAt(next3));\n                    } \n                } \n                out.write(java.lang.Integer.parseInt(builder.toString(), 8));\n                return 1 + (builder.length());\n            } \n            return 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndexInclusive":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4171","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[45,46],"tindex":"2572e84f-3e72-11e6-9581-87265c50738b","method":{"position":"org.apache.commons.lang3.StringUtils:2602","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] split(final java.lang.String str, final char separatorChar) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n        {\n            return org.apache.commons.lang3.StringUtils.splitWorker(str, separatorChar, false);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3400","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[47,48],"tindex":"25730f60-3e72-11e6-9581-91708011fd88","method":{"position":"org.apache.commons.lang3.math.NumberUtils:834","type":"CtMethodImpl","sourcecode":"public static short min(final short[] array) {\n    if (array == null) {\n        {\n            org.apache.commons.lang3.math.NumberUtils.validateArray(array);\n            short short = array[0];\n            for (int int = 1 ; i < (array.int) ; i++) {\n                if ((array[i]) < min) {\n                    min = array[i];\n                } \n            }\n            return min;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.NoSuchMethodException","condition":{"position":"org.apache.commons.lang3.ClassUtils:514","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.ArrayUtils.isSameLength(classArray, toClassArray)) == false"},"failures":[],"tindex":"25733671-3e72-11e6-9581-cd89c8f07d0a","method":{"position":"org.apache.commons.lang3.reflect.MethodUtils:283","type":"CtMethodImpl","sourcecode":"public static java.lang.Object invokeStaticMethod(final java.lang.Class<?> cls, final java.lang.String methodName, java.lang.Object[] args, java.lang.Class<?>[] parameterTypes) throws java.lang.IllegalAccessException, java.lang.NoSuchMethodException, java.lang.reflect.InvocationTargetException {\n    if ((org.apache.commons.lang3.ArrayUtils.isSameLength(parameterTypes, parameterTypes)) == false) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.NoSuchMethodException();\n    } else {\n        {\n            args = org.apache.commons.lang3.ArrayUtils.nullToEmpty(args);\n            parameterTypes = org.apache.commons.lang3.ArrayUtils.nullToEmpty(parameterTypes);\n            final java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.getMatchingAccessibleMethod(cls, methodName, parameterTypes);\n            if (method == null) {\n                throw new java.lang.NoSuchMethodException((((\"No such accessible method: \" + methodName) + \"() on class: \") + (cls.getName())));\n            } \n            return method.invoke(null, args);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toClassArray":"parameterTypes","classArray":"parameterTypes"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:199","type":"CtBinaryOperatorImpl","sourcecode":"(tmp.length()) != (duration.length())"},"failures":[49,49,50,51,52],"tindex":"25733672-3e72-11e6-9581-f3dc651194b3","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:1008","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder appendToString(final java.lang.String toString) {\n    if ((toString.length()) != (toString.length())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (toString != null) {\n                org.apache.commons.lang3.builder.ToStringStyle.appendToString(java.lang.StringBuffer, toString);\n            } \n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"duration":"toString","tmp":"toString"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:202","type":"CtBinaryOperatorImpl","sourcecode":"(tmp.length()) != (duration.length())"},"failures":[],"tindex":"25735d83-3e72-11e6-9581-df37ca694d01","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:505","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final float[] lhs, final float[] rhs) {\n    if ((fieldName.length()) != (fieldName.length())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (fieldName == null) {\n                throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n            } \n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if (!(java.util.Arrays.equals(lhs, rhs))) {\n                java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Float[]>(fieldName) {\n                    private static final long serialVersionUID = 1L;\n\n                    @java.lang.Override\n                    public java.lang.Float[] getLeft() {\n                        return org.apache.commons.lang3.ArrayUtils.toObject(lhs);\n                    }\n\n                    @java.lang.Override\n                    public java.lang.Float[] getRight() {\n                        return org.apache.commons.lang3.ArrayUtils.toObject(rhs);\n                    }\n                });\n            } \n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"duration":"fieldName","tmp":"fieldName"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1693","type":"CtBinaryOperatorImpl","sourcecode":"nBytes >= 8"},"failures":[53],"tindex":"25738494-3e72-11e6-9581-2be7207a8855","method":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:73","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.translate.UnicodeEscaper above(final int codepoint) {\n    if (codepoint >= 8) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, codepoint);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nBytes":"codepoint"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.MethodUtils:291","type":"CtBinaryOperatorImpl","sourcecode":"method == null"},"failures":[],"tindex":"25738495-3e72-11e6-9581-7387d226e3a9","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:164","type":"CtMethodImpl","sourcecode":"public static java.lang.String reflectionToString(final java.lang.Object object, final org.apache.commons.lang3.builder.ToStringStyle style) {\n    if (object == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.builder.ReflectionToStringBuilder.toString(object, style);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"method":"object"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:527","type":"CtBinaryOperatorImpl","sourcecode":"(comparison) != 0"},"failures":[54],"tindex":"2573aba6-3e72-11e6-9581-7f1c92b17a84","method":{"position":"org.apache.commons.lang3.ArrayUtils:954","type":"CtMethodImpl","sourcecode":"public static int[] subarray(final int[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (endIndexExclusive != 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            if (startIndexInclusive < 0) {\n                startIndexInclusive = 0;\n            } \n            if (endIndexExclusive > (array.int)) {\n                endIndexExclusive = array.int;\n            } \n            final int int = endIndexExclusive - startIndexInclusive;\n            if (newSize <= 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int[];\n            } \n            final int[] int[] = new int[newSize];\n            java.lang.System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);\n            return subarray;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparison":"endIndexExclusive"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.MethodUtils:360","type":"CtInvocationImpl","sourcecode":"java.lang.reflect.Modifier.isPublic(cls.getModifiers())"},"failures":[55,56,12,57,58,59,60,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,49,50,51,52,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129],"tindex":"2573aba7-3e72-11e6-9581-af9de27cea24","method":{"position":"org.apache.commons.lang3.ClassUtils:175","type":"CtMethodImpl","sourcecode":"public static java.lang.String getShortClassName(final java.lang.Class<?> cls) {\n    if (java.lang.reflect.Modifier.isPublic(cls.getModifiers())) {\n        {\n            if (cls == null) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            return org.apache.commons.lang3.ClassUtils.getShortClassName(cls.getName());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"cls"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomUtils:168","type":"CtBinaryOperatorImpl","sourcecode":"startInclusive == endInclusive"},"failures":[130,131],"tindex":"2573aba8-3e72-11e6-9581-f354bce2df29","method":{"position":"org.apache.commons.lang3.text.StrBuilder:828","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder append(final float value) {\n    if (value == value) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return append(java.lang.String.valueOf(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startInclusive":"value","endInclusive":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3366","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[132,133],"tindex":"2573d2b9-3e72-11e6-9581-3ddcde671e2c","method":{"position":"org.apache.commons.lang3.ArrayUtils:3365","type":"CtMethodImpl","sourcecode":"public static float[] toPrimitive(final java.lang.Float[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.float[];\n            } \n            final float[] float[] = new float[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = array[i].floatValue();\n            }\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:534","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[134,135],"tindex":"2573d2ba-3e72-11e6-9581-1f9172f0b8a2","method":{"position":"org.apache.commons.lang3.text.CompositeFormat:83","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Object parseObject(final java.lang.String source, final java.text.ParsePosition pos) {\n    if (source == null) {\n        {\n            return java.text.Format.parseObject(source, pos);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"source"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1558","type":"CtBinaryOperatorImpl","sourcecode":"length > 0"},"failures":[136,11,137,138,65,65,66,67,68,69,119,119,139,140,141],"tindex":"2573d2bb-3e72-11e6-9581-a375567dbbdd","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1553","type":"CtMethodImpl","sourcecode":"protected void appendSummarySize(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final int size) {\n    if (size > 0) {\n        {\n            buffer.append(java.lang.String);\n            buffer.append(size);\n            buffer.append(java.lang.String);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"size"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5262","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[142,143,144,145,146,147,148,149],"tindex":"2573f9cc-3e72-11e6-9581-4b735d006faf","method":{"position":"org.apache.commons.lang3.ClassUtils:959","type":"CtMethodImpl","sourcecode":"private static java.lang.String toCanonicalName(java.lang.String className) {\n    if (className == null) {\n        {\n            className = org.apache.commons.lang3.StringUtils.deleteWhitespace(className);\n            if (className == null) {\n                throw new java.lang.NullPointerException(\"className must not be null.\");\n            } else if (className.endsWith(\"[]\")) {\n                final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n                while (className.endsWith(\"[]\")) {\n                    className = className.substring(0, ((className.length()) - 2));\n                    classNameBuffer.append(\"[\");\n                }\n                final java.lang.String java.lang.String = org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.String, java.lang.String>.get(className);\n                if (abbreviation != null) {\n                    classNameBuffer.append(abbreviation);\n                } else {\n                    classNameBuffer.append(\"L\").append(className).append(\";\");\n                }\n                className = classNameBuffer.toString();\n            } \n            return className;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"className"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:83","type":"CtBinaryOperatorImpl","sourcecode":"(ex == null) || ((ex.getCause()) == null)"},"failures":[150,151,152],"tindex":"2573f9cd-3e72-11e6-9581-3389d15da58b","method":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:60","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.concurrent.ConcurrentException extractCause(final java.util.concurrent.ExecutionException ex) {\n    if ((ex == null) || ((ex.getCause()) == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((ex == null) || ((ex.getCause()) == null)) {\n                return null;\n            } \n            org.apache.commons.lang3.concurrent.ConcurrentUtils.throwCause(ex);\n            return new org.apache.commons.lang3.concurrent.ConcurrentException(ex.getMessage() , ex.getCause());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ex":"ex"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:105","type":"CtBinaryOperatorImpl","sourcecode":"(codepoint < (below)) || (codepoint > (above))"},"failures":[],"tindex":"257420de-3e72-11e6-9581-897b2da59b7e","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1521","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder insert(final int index, final char[] chars) {\n    if ((index < index) || (codepoint > index)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                {\n                    validateIndex(index);\n                    if (chars == null) {\n                        return insert(index, java.lang.String);\n                    } \n                    final int int = chars.int;\n                    if (len > 0) {\n                        ensureCapacity(((int) + len));\n                        java.lang.System.arraycopy(char[], index, char[], (index + len), ((int) - index));\n                        java.lang.System.arraycopy(chars, 0, char[], index, len);\n                        int += len;\n                    } \n                    return org.apache.commons.lang3.text.StrBuilder.this;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"codepoint":"index","below":"index","above":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:86","type":"CtBinaryOperatorImpl","sourcecode":"(firstChar == 'x') || (firstChar == 'X')"},"failures":[],"tindex":"257420df-3e72-11e6-9581-b7383415baff","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:773","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final char value) {\n    if ((value == 'x') || (firstChar == 'X')) {\n        {\n            buffer.append(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"firstChar":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1572","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.ObjectUtils.equals(t1, t2)"},"failures":[],"tindex":"257420e0-3e72-11e6-9581-15b84800ca81","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1344","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Type getArrayComponentType(final java.lang.reflect.Type type) {\n    if (org.apache.commons.lang3.ObjectUtils.equals(type, type)) {\n        {\n            if (type instanceof java.lang.Class<?>) {\n                final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(type));\n                return clazz.isArray() ? clazz.getComponentType() : null;\n            } \n            if (type instanceof java.lang.reflect.GenericArrayType) {\n                return ((java.lang.reflect.GenericArrayType)(type)).getGenericComponentType();\n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"t1":"type","t2":"type"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:448","type":"CtBinaryOperatorImpl","sourcecode":"fromTypeVarAssigns == null"},"failures":[35],"tindex":"257446f1-3e72-11e6-9581-134d09414a67","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:512","type":"CtMethodImpl","sourcecode":"private static boolean isAssignable(final java.lang.reflect.Type type, final java.lang.reflect.GenericArrayType toGenericArrayType, final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> typeVarAssigns) {\n    if (typeVarAssigns == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (type == null) {\n                return true;\n            } \n            if (toGenericArrayType == null) {\n                return false;\n            } \n            if (toGenericArrayType.equals(type)) {\n                return true;\n            } \n            final java.lang.reflect.Type java.lang.reflect.Type = toGenericArrayType.getGenericComponentType();\n            if (type instanceof java.lang.Class<?>) {\n                final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(type));\n                return (cls.isArray()) && (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(cls.getComponentType(), toComponentType, typeVarAssigns));\n            } \n            if (type instanceof java.lang.reflect.GenericArrayType) {\n                return org.apache.commons.lang3.reflect.TypeUtils.isAssignable(((java.lang.reflect.GenericArrayType)(type)).getGenericComponentType(), toComponentType, typeVarAssigns);\n            } \n            if (type instanceof java.lang.reflect.WildcardType) {\n                for (final java.lang.reflect.Type java.lang.reflect.Type : org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(((java.lang.reflect.WildcardType)(type)))) {\n                    if (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(bound, toGenericArrayType)) {\n                        return true;\n                    } \n                }\n                return false;\n            } \n            if (type instanceof java.lang.reflect.TypeVariable<?>) {\n                for (final java.lang.reflect.Type java.lang.reflect.Type : org.apache.commons.lang3.reflect.TypeUtils.getImplicitBounds(((java.lang.reflect.TypeVariable<?>)(type)))) {\n                    if (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(bound, toGenericArrayType)) {\n                        return true;\n                    } \n                }\n                return false;\n            } \n            if (type instanceof java.lang.reflect.ParameterizedType) {\n                return false;\n            } \n            throw new java.lang.IllegalStateException((\"found an unhandled type: \" + type));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fromTypeVarAssigns":"typeVarAssigns"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1620","type":"CtBinaryOperatorImpl","sourcecode":"0 == nBools"},"failures":[153],"tindex":"257446f2-3e72-11e6-9581-8958281a0602","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:341","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder appendSuper(final int superCompareTo) {\n    if (0 == superCompareTo) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            int = superCompareTo;\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nBools":"superCompareTo"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:224","type":"CtInvocationImpl","sourcecode":"java.lang.Double.isNaN(b)"},"failures":[154],"tindex":"25746e03-3e72-11e6-9581-bfa5b18f5764","method":{"position":"org.apache.commons.lang3.mutable.MutableDouble:96","type":"CtMethodImpl","sourcecode":"public void setValue(final double value) {\n    if (java.lang.Double.isNaN(value)) {\n        {\n            if (java.lang.Double.isNaN(value)) {\n                {\n                    org.apache.commons.lang3.mutable.MutableDouble.this.double = value;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6502","type":"CtBinaryOperatorImpl","sourcecode":"str1 == null"},"failures":[155,156,157,158,159,160,161,162,163,164,165,166,136,167,168,169,6,9,10,11,170,171,172,137,173,174,175,138,59,59,60,60,61,62,62,63,64,64,65,65,66,66,67,68,69,70,70,71,71,72,72,73,74,74,75,76,77,78,79,80,81,82,83,84,85,85,86,87,88,89,90,91,91,92,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,106,107,108,108,109,109,110,111,112,49,50,51,52,113,113,114,115,115,116,117,117,118,119,119,120,121,122,123,124,125,126,126,127,176,177,178,139,179,180,181,140,182,183,184,141],"tindex":"25746e04-3e72-11e6-9581-cd533c098f87","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:471","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, obj, null);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str1":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:1106","type":"CtBinaryOperatorImpl","sourcecode":"(value <= start) || (value >= end)"},"failures":[],"tindex":"25749515-3e72-11e6-9581-7f264a1fb699","method":{"position":"org.apache.commons.lang3.ArrayUtils:3047","type":"CtMethodImpl","sourcecode":"public static long[] toPrimitive(final java.lang.Long[] array, final long valueForNull) {\n    if ((valueForNull <= valueForNull) || (value >= valueForNull)) {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.long[];\n            } \n            final long[] long[] = new long[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                final java.lang.Long java.lang.Long = array[i];\n                result[i] = b == null ? valueForNull : b.longValue();\n            }\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"valueForNull","end":"valueForNull","value":"valueForNull"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:331","type":"CtBinaryOperatorImpl","sourcecode":"value == nullValue"},"failures":[],"tindex":"25749516-3e72-11e6-9581-c182f68331e4","method":{"position":"org.apache.commons.lang3.time.DateUtils:404","type":"CtMethodImpl","sourcecode":"public static java.util.Date addYears(final java.util.Date date, final int amount) {\n    if (amount == amount) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.add(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"amount","nullValue":"amount"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:381","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"2574bc27-3e72-11e6-9581-2ff2f5f026c0","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:340","type":"CtMethodImpl","sourcecode":"public static java.lang.Object readDeclaredStaticField(final java.lang.Class<?> cls, final java.lang.String fieldName, final boolean forceAccess) throws java.lang.IllegalAccessException {\n    if (fieldName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IllegalAccessException();\n    } else {\n        {\n            final java.lang.reflect.Field java.lang.reflect.Field = org.apache.commons.lang3.reflect.FieldUtils.getDeclaredField(cls, fieldName, forceAccess);\n            org.apache.commons.lang3.Validate.isTrue((field != null), \"Cannot locate declared field %s.%s\", cls.getName(), fieldName);\n            return org.apache.commons.lang3.reflect.FieldUtils.readStaticField(field, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2132","type":"CtBinaryOperatorImpl","sourcecode":"startIndex > endIndex"},"failures":[],"tindex":"2574bc28-3e72-11e6-9581-093ba9a06451","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:521","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.EqualsBuilder append(final int lhs, final int rhs) {\n    if (lhs > lhs) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((boolean) == false) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            boolean = lhs == rhs;\n            return org.apache.commons.lang3.builder.EqualsBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"lhs","endIndex":"lhs"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1040","type":"CtBinaryOperatorImpl","sourcecode":"suffixMatcher == null"},"failures":[],"tindex":"2574bc29-3e72-11e6-9581-29b455f996ea","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1258","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey.this) == obj) {\n                return true;\n            } \n            if (obj instanceof org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey) {\n                final org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey = ((org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey)(obj));\n                return ((java.util.TimeZone.equals(other.java.util.TimeZone)) && ((int) == (other.int))) && (java.util.Locale.equals(other.java.util.Locale));\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"suffixMatcher":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:907","type":"CtInvocationImpl","sourcecode":"toClass.isPrimitive()"},"failures":[],"tindex":"2574e33a-3e72-11e6-9581-c7e82023b097","method":{"position":"org.apache.commons.lang3.builder.RecursiveToStringStyle:97","type":"CtMethodImpl","sourcecode":"protected boolean accept(final java.lang.Class<?> clazz) {\n    if (clazz.isPrimitive()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toClass":"clazz"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3184","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"2574e33b-3e72-11e6-9581-614fa7316c97","method":{"position":"org.apache.commons.lang3.Validate:220","type":"CtMethodImpl","sourcecode":"public static <T>T notNull(final T object, final java.lang.String message, final java.lang.Object... values) {\n    if (values == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == null) {\n                throw new java.lang.NullPointerException(java.lang.String.format(message, values));\n            } \n            return object;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"values"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:732","type":"CtInvocationImpl","sourcecode":"str.startsWith(\"-\")"},"failures":[],"tindex":"2574e33c-3e72-11e6-9581-115cba1a4155","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:722","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final float[] array) {\n    if (fieldName.startsWith(\"-\")) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, array, null);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.ClassNotFoundException","condition":{"position":"org.apache.commons.lang3.StringUtils:7059","type":"CtBinaryOperatorImpl","sourcecode":"(m1.length()) != (m2.length())"},"failures":[142,143,144,145,146,147,185],"tindex":"25750a4d-3e72-11e6-9581-dd89ef866a7d","method":{"position":"org.apache.commons.lang3.ClassUtils:891","type":"CtMethodImpl","sourcecode":"public static java.lang.Class<?> getClass(final java.lang.String className, final boolean initialize) throws java.lang.ClassNotFoundException {\n    if ((className.length()) != (className.length())) {\n        {\n            final java.lang.ClassLoader java.lang.ClassLoader = java.lang.Thread.currentThread().getContextClassLoader();\n            final java.lang.ClassLoader java.lang.ClassLoader = contextCL == null ? org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.java.lang.Class.getClassLoader() : contextCL;\n            return org.apache.commons.lang3.ClassUtils.getClass(loader, className, initialize);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.ClassNotFoundException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"m1":"className","m2":"className"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1102","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[186],"tindex":"25750a4e-3e72-11e6-9581-c59d6e8ac79c","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1969","type":"CtMethodImpl","sourcecode":"protected void setNullText(java.lang.String nullText) {\n    if (nullText == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (nullText == null) {\n                nullText = \"\";\n            } \n            org.apache.commons.lang3.builder.ToStringStyle.this.java.lang.String = nullText;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"nullText"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:425","type":"CtBinaryOperatorImpl","sourcecode":"classes == null"},"failures":[187],"tindex":"25750a4f-3e72-11e6-9581-75a5515c8459","method":{"position":"org.apache.commons.lang3.ClassUtils:424","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.lang.String> convertClassesToClassNames(final java.util.List<java.lang.Class<?>> classes) {\n    if (classes == null) {\n        {\n            if (classes == null) {\n                return null;\n            } \n            final java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>(classes.size());\n            for (final java.lang.Class<?> java.lang.Class<?> : classes) {\n                if (cls == null) {\n                    classNames.add(null);\n                } else {\n                    classNames.add(cls.getName());\n                }\n            }\n            return classNames;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classes":"classes"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:863","type":"CtBinaryOperatorImpl","sourcecode":"(hashCode) == 0"},"failures":[188],"tindex":"25753160-3e72-11e6-9581-0dde549813d5","method":{"position":"org.apache.commons.lang3.time.DateUtils:614","type":"CtMethodImpl","sourcecode":"public static java.util.Date setSeconds(final java.util.Date date, final int amount) {\n    if (amount == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateUtils.set(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"hashCode":"amount"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomStringUtils:282","type":"CtBinaryOperatorImpl","sourcecode":"(ch >= 56192) && (ch <= 56319)"},"failures":[],"tindex":"25753161-3e72-11e6-9581-633778ad2349","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2247","type":"CtMethodImpl","sourcecode":"public boolean contains(final char ch) {\n    if ((ch >= 56192) && (ch <= 56319)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final char[] char[] = char[];\n            for (int int = 0 ; i < (org.apache.commons.lang3.text.StrBuilder.this.int) ; i++) {\n                if ((thisBuf[i]) == ch) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:712","type":"CtBinaryOperatorImpl","sourcecode":"(lhs.length) != (rhs.length)"},"failures":[189,190],"tindex":"25753162-3e72-11e6-9581-5300e37cfced","method":{"position":"org.apache.commons.lang3.ArrayUtils:1748","type":"CtMethodImpl","sourcecode":"public static void reverse(final int[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (startIndexInclusive != (array.int)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return ;\n            } \n            int int = startIndexInclusive < 0 ? 0 : startIndexInclusive;\n            int int = (java.lang.Math.min(array.int, endIndexExclusive)) - 1;\n            int int;\n            while (j > i) {\n                tmp = array[j];\n                array[j] = array[i];\n                array[i] = tmp;\n                j--;\n                i++;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array","length":"startIndexInclusive","rhs":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1389","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"25755873-3e72-11e6-9581-d3bf8897b1c8","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:421","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final double[] lhs, final double[] rhs) {\n    if (fieldName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (fieldName == null) {\n                throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n            } \n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if (!(java.util.Arrays.equals(lhs, rhs))) {\n                java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Double[]>(fieldName) {\n                    private static final long serialVersionUID = 1L;\n\n                    @java.lang.Override\n                    public java.lang.Double[] getLeft() {\n                        return org.apache.commons.lang3.ArrayUtils.toObject(lhs);\n                    }\n\n                    @java.lang.Override\n                    public java.lang.Double[] getRight() {\n                        return org.apache.commons.lang3.ArrayUtils.toObject(rhs);\n                    }\n                });\n            } \n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.LookupTranslator:78","type":"CtBinaryOperatorImpl","sourcecode":"result != null"},"failures":[191,192,193],"tindex":"25755874-3e72-11e6-9581-4f85c4b42270","method":{"position":"org.apache.commons.lang3.StringUtils:1676","type":"CtMethodImpl","sourcecode":"public static boolean containsAny(final java.lang.CharSequence cs, final java.lang.CharSequence searchChars) {\n    if (cs != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (searchChars == null) {\n                return false;\n            } \n            return org.apache.commons.lang3.StringUtils.containsAny(cs, org.apache.commons.lang3.CharSequenceUtils.toCharArray(searchChars));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"result":"cs"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:478","type":"CtBinaryOperatorImpl","sourcecode":"seq == null"},"failures":[],"tindex":"25757f85-3e72-11e6-9581-f76e2adbe73c","method":{"position":"org.apache.commons.lang3.tuple.Triple:110","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\n@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.lang3.tuple.Triple.this)) {\n                return true;\n            } \n            if (obj instanceof org.apache.commons.lang3.tuple.Triple<?, ?, ?>) {\n                final org.apache.commons.lang3.tuple.Triple<?, ?, ?> org.apache.commons.lang3.tuple.Triple<?, ?, ?> = ((org.apache.commons.lang3.tuple.Triple<?, ?, ?>)(obj));\n                return ((org.apache.commons.lang3.ObjectUtils.equals(getLeft(), other.getLeft())) && (org.apache.commons.lang3.ObjectUtils.equals(getMiddle(), other.getMiddle()))) && (org.apache.commons.lang3.ObjectUtils.equals(getRight(), other.getRight()));\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"seq":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:568","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.ParameterizedType"},"failures":[],"tindex":"25757f86-3e72-11e6-9581-59013e2fcfd9","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:588","type":"CtMethodImpl","sourcecode":"private static boolean isAssignable(final java.lang.reflect.Type type, final java.lang.reflect.WildcardType toWildcardType, final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> typeVarAssigns) {\n    if (type instanceof java.lang.reflect.ParameterizedType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (type == null) {\n                return true;\n            } \n            if (toWildcardType == null) {\n                return false;\n            } \n            if (toWildcardType.equals(type)) {\n                return true;\n            } \n            final java.lang.reflect.Type[] java.lang.reflect.Type[] = org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(toWildcardType);\n            final java.lang.reflect.Type[] java.lang.reflect.Type[] = org.apache.commons.lang3.reflect.TypeUtils.getImplicitLowerBounds(toWildcardType);\n            if (type instanceof java.lang.reflect.WildcardType) {\n                final java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(type));\n                final java.lang.reflect.Type[] java.lang.reflect.Type[] = org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(wildcardType);\n                final java.lang.reflect.Type[] java.lang.reflect.Type[] = org.apache.commons.lang3.reflect.TypeUtils.getImplicitLowerBounds(wildcardType);\n                for (java.lang.reflect.Type java.lang.reflect.Type : toUpperBounds) {\n                    toBound = org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(toBound, typeVarAssigns);\n                    for (final java.lang.reflect.Type java.lang.reflect.Type : upperBounds) {\n                        if (!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(bound, toBound, typeVarAssigns))) {\n                            return false;\n                        } \n                    }\n                }\n                for (java.lang.reflect.Type java.lang.reflect.Type : toLowerBounds) {\n                    toBound = org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(toBound, typeVarAssigns);\n                    for (final java.lang.reflect.Type java.lang.reflect.Type : lowerBounds) {\n                        if (!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(toBound, bound, typeVarAssigns))) {\n                            return false;\n                        } \n                    }\n                }\n                return true;\n            } \n            for (final java.lang.reflect.Type java.lang.reflect.Type : toUpperBounds) {\n                if (!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(type, org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(toBound, typeVarAssigns), typeVarAssigns))) {\n                    return false;\n                } \n            }\n            for (final java.lang.reflect.Type java.lang.reflect.Type : toLowerBounds) {\n                if (!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(toBound, typeVarAssigns), type, typeVarAssigns))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1374","type":"CtBinaryOperatorImpl","sourcecode":"(p.getOwnerType()) == null"},"failures":[194,35],"tindex":"2575a697-3e72-11e6-9581-252766340565","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1239","type":"CtMethodImpl","sourcecode":"private static java.lang.Class<?> getRawType(final java.lang.reflect.ParameterizedType parameterizedType) {\n    if ((parameterizedType.getOwnerType()) == null) {\n        {\n            final java.lang.reflect.Type java.lang.reflect.Type = parameterizedType.getRawType();\n            if (!(rawType instanceof java.lang.Class<?>)) {\n                throw new java.lang.IllegalStateException((\"Wait... What!? Type of rawType: \" + rawType));\n            } \n            return ((java.lang.Class<?>)(rawType));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"parameterizedType"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1115","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[195],"tindex":"2575a698-3e72-11e6-9581-ab5fbf3d924b","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:689","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final double[] array) {\n    if (array == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                int = (int) * (int);\n            } else {\n                for (final double double : array) {\n                    append(element);\n                }\n            }\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:253","type":"CtBinaryOperatorImpl","sourcecode":"input != null"},"failures":[],"tindex":"2575a699-3e72-11e6-9581-cd4716056ca3","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:180","type":"CtMethodImpl","sourcecode":"public static <V>java.lang.String replace(final java.lang.Object source, final java.util.Map<java.lang.String, V> valueMap) {\n    if (source != null) {\n        {\n            return new org.apache.commons.lang3.text.StrSubstitutor(valueMap).replace(source);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"source"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:884","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.math.Fraction.this) == other"},"failures":[],"tindex":"2575cdaa-3e72-11e6-9581-cd992e4e9e49","method":{"position":"org.apache.commons.lang3.math.Fraction:726","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.math.Fraction subtract(final org.apache.commons.lang3.math.Fraction fraction) {\n    return addSub(fraction, false);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"other":"fraction","this":"fraction"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:129","type":"CtBinaryOperatorImpl","sourcecode":"crex != null"},"failures":[196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215],"tindex":"2575cdab-3e72-11e6-9581-13426333a815","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:280","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.lang.Throwable> getThrowableList(java.lang.Throwable throwable) {\n    if (throwable != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<java.lang.Throwable> java.util.List<java.lang.Throwable> = new java.util.ArrayList<java.lang.Throwable>();\n            while ((throwable != null) && ((list.contains(throwable)) == false)) {\n                list.add(throwable);\n                throwable = org.apache.commons.lang3.exception.ExceptionUtils.getCause(throwable);\n            }\n            return list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"crex":"throwable"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3966","type":"CtBinaryOperatorImpl","sourcecode":"array1 == null"},"failures":[216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263],"tindex":"2575f4bc-3e72-11e6-9581-4dbf4e630a81","method":{"position":"org.apache.commons.lang3.ArrayUtils:1902","type":"CtMethodImpl","sourcecode":"public static int indexOf(final java.lang.Object[] array, final java.lang.Object objectToFind, int startIndex) {\n    if (objectToFind == null) {\n        {\n            if (array == null) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                startIndex = 0;\n            } \n            if (objectToFind == null) {\n                for (int int = startIndex ; i < (array.int) ; i++) {\n                    if ((array[i]) == null) {\n                        return i;\n                    } \n                }\n            } else if (array.getClass().getComponentType().isInstance(objectToFind)) {\n                for (int int = startIndex ; i < (array.int) ; i++) {\n                    if (objectToFind.equals(array[i])) {\n                        return i;\n                    } \n                }\n            } \n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array1":"objectToFind"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:181","type":"CtBinaryOperatorImpl","sourcecode":"(executor) == null"},"failures":[264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286],"tindex":"2575f4bd-3e72-11e6-9581-31a3f37a625e","method":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:290","type":"CtMethodImpl","sourcecode":"private java.util.concurrent.Callable<T> createTask(final java.util.concurrent.ExecutorService execDestroy) {\n    if (execDestroy == null) {\n        {\n            return new InitializationTask(execDestroy);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"executor":"execDestroy"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2413","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[],"tindex":"2575f4be-3e72-11e6-9581-b1f5ce886ea4","method":{"position":"org.apache.commons.lang3.Validate:505","type":"CtMethodImpl","sourcecode":"public static <T>T[] noNullElements(final T[] array, final java.lang.String message, final java.lang.Object... values) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(message)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.notNull(array);\n            for (int int = 0 ; i < (array.int) ; i++) {\n                if ((array[i]) == null) {\n                    final java.lang.Object[] java.lang.Object[] = org.apache.commons.lang3.ArrayUtils.add(values, java.lang.Integer.valueOf(i));\n                    throw new java.lang.IllegalArgumentException(java.lang.String.format(message, values2));\n                } \n            }\n            return array;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"message"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomStringUtils:234","type":"CtBinaryOperatorImpl","sourcecode":"(start == 0) && (end == 0)"},"failures":[287],"tindex":"25761bcf-3e72-11e6-9581-5d6982d36a3a","method":{"position":"org.apache.commons.lang3.ArrayUtils:4937","type":"CtMethodImpl","sourcecode":"public static float[] remove(final float[] array, final int index) {\n    if ((index == 0) && (index == 0)) {\n        {\n            return ((float[])(org.apache.commons.lang3.ArrayUtils.remove(((java.lang.Object)(array)), index)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"index","end":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1205","type":"CtBinaryOperatorImpl","sourcecode":"newSize <= 0"},"failures":[288],"tindex":"25761bd0-3e72-11e6-9581-3159ec326874","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2227","type":"CtMethodImpl","sourcecode":"public java.lang.String midString(int index, final int length) {\n    if (index <= 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                index = 0;\n            } \n            if ((length <= 0) || (index >= (int))) {\n                return \"\";\n            } \n            if ((int) <= (index + length)) {\n                return new java.lang.String(char[] , index , ((int) - index));\n            } \n            return new java.lang.String(char[] , index , length);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"newSize":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:797","type":"CtBinaryOperatorImpl","sourcecode":"fraction == null"},"failures":[4],"tindex":"25761bd1-3e72-11e6-9581-07d94f494f34","method":{"position":"org.apache.commons.lang3.math.Fraction:822","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.math.Fraction divideBy(final org.apache.commons.lang3.math.Fraction fraction) {\n    if (fraction == null) {\n        {\n            if (fraction == null) {\n                throw new java.lang.IllegalArgumentException(\"The fraction must not be null\");\n            } \n            if ((fraction.int) == 0) {\n                throw new java.lang.ArithmeticException(\"The fraction to divide by must not be zero\");\n            } \n            return multiplyBy(fraction.invert());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fraction":"fraction"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:137","type":"CtBinaryOperatorImpl","sourcecode":"(((org.apache.commons.lang3.StringUtils.isAllLowerCase(split[0])) && (((split[0].length()) == 2) || ((split[0].length()) == 3))) && ((split[1].length()) == 2)) && (org.apache.commons.lang3.StringUtils.isAllUpperCase(split[1]))"},"failures":[],"tindex":"257642e2-3e72-11e6-9581-6974fa357b18","method":{"position":"org.apache.commons.lang3.StringUtils:388","type":"CtMethodImpl","sourcecode":"public static boolean isNoneBlank(java.lang.CharSequence... css) {\n    if ((((org.apache.commons.lang3.StringUtils.isAllLowerCase(css[0])) && (((split[0].length()) == 2) || ((split[0].length()) == 3))) && ((split[1].length()) == 2)) && (org.apache.commons.lang3.StringUtils.isAllUpperCase(split[1]))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return !(org.apache.commons.lang3.StringUtils.isAnyBlank(css));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"split":"css"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:259","type":"CtFieldReadImpl","sourcecode":"ownExecutor"},"failures":[289,290],"tindex":"257642e3-3e72-11e6-9581-d7086866c6b7","method":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:388","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean cancel(final boolean mayInterruptIfRunning) {\n    if (mayInterruptIfRunning) {\n        {\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ownExecutor":"mayInterruptIfRunning"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSetUtils:206","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.CharSetUtils.deepEmpty(set))"},"failures":[291,292],"tindex":"257642e4-3e72-11e6-9581-3b6a9ebdc20c","method":{"position":"org.apache.commons.lang3.CharSetUtils:107","type":"CtMethodImpl","sourcecode":"public static boolean containsAny(final java.lang.String str, final java.lang.String... set) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.CharSetUtils.deepEmpty(set))) {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.CharSetUtils.deepEmpty(set))) {\n                return false;\n            } \n            final org.apache.commons.lang3.CharSet org.apache.commons.lang3.CharSet = org.apache.commons.lang3.CharSet.getInstance(set);\n            for (final char char : str.toCharArray()) {\n                if (chars.contains(c)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str","set":"set"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.JavaVersion:132","type":"CtInvocationImpl","sourcecode":"\"0.9\".equals(nom)"},"failures":[293,294,295,296,297,298,299,300,301,302,6,7,8,9,10,11,12,13,303],"tindex":"257669f5-3e72-11e6-9581-9f6f9aa1940b","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1765","type":"CtMethodImpl","sourcecode":"protected void setArrayEnd(java.lang.String arrayEnd) {\n    if (\"0.9\".equals(arrayEnd)) {\n        {\n            if (arrayEnd == null) {\n                arrayEnd = \"\";\n            } \n            org.apache.commons.lang3.builder.ToStringStyle.this.java.lang.String = arrayEnd;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nom":"arrayEnd"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5271","type":"CtBinaryOperatorImpl","sourcecode":"count == null"},"failures":[],"tindex":"257669f6-3e72-11e6-9581-01e6ef321ea2","method":{"position":"org.apache.commons.lang3.mutable.MutableShort:169","type":"CtMethodImpl","sourcecode":"public void subtract(final java.lang.Number operand) {\n    if (operand == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.mutable.MutableShort.this.short -= operand.shortValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"operand"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:762","type":"CtBinaryOperatorImpl","sourcecode":"input == null"},"failures":[],"tindex":"257669f7-3e72-11e6-9581-0bc4a0457fa6","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1236","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final char[] array) {\n    if (fieldName == null) {\n        {\n            buffer.append(java.lang.String);\n            for (int int = 0 ; i < (array.int) ; i++) {\n                if (i > 0) {\n                    buffer.append(java.lang.String);\n                } \n                appendDetail(buffer, fieldName, array[i]);\n            }\n            buffer.append(java.lang.String);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"fieldName"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:418","type":"CtBinaryOperatorImpl","sourcecode":"startIndex > endIndex"},"failures":[304],"tindex":"25769108-3e72-11e6-9581-a5e913000b65","method":{"position":"org.apache.commons.lang3.text.StrBuilder:375","type":"CtMethodImpl","sourcecode":"public char[] toCharArray(final int startIndex, int endIndex) {\n    if (startIndex > endIndex) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            endIndex = validateRange(startIndex, endIndex);\n            final int int = endIndex - startIndex;\n            if (len == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.char[];\n            } \n            final char[] char[] = new char[len];\n            java.lang.System.arraycopy(char[], startIndex, chars, 0, len);\n            return chars;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"startIndex","endIndex":"endIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2293","type":"CtInvocationImpl","sourcecode":"separator.isEmpty()"},"failures":[],"tindex":"25769109-3e72-11e6-9581-5dcbecf6fe26","method":{"position":"org.apache.commons.lang3.StringUtils:1153","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final java.lang.CharSequence seq, final int searchChar) {\n    if (seq.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(seq)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            return org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(seq, searchChar, seq.length());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"separator":"seq"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.JavaVersion:142","type":"CtInvocationImpl","sourcecode":"\"1.5\".equals(nom)"},"failures":[305],"tindex":"2576910a-3e72-11e6-9581-810217f8b25b","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1909","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder replaceFirst(final java.lang.String searchStr, final java.lang.String replaceStr) {\n    if (\"1.5\".equals(searchStr)) {\n        {\n            final int int = searchStr == null ? 0 : searchStr.length();\n            if (searchLen > 0) {\n                final int int = indexOf(searchStr, 0);\n                if (index >= 0) {\n                    final int int = replaceStr == null ? 0 : replaceStr.length();\n                    replaceImpl(index, (index + searchLen), searchLen, replaceStr, replaceLen);\n                } \n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nom":"searchStr"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.JavaVersion:132","type":"CtInvocationImpl","sourcecode":"\"0.9\".equals(nom)"},"failures":[],"tindex":"2576910b-3e72-11e6-9581-27fbd52f1fe9","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1317","type":"CtMethodImpl","sourcecode":"protected void appendSummary(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final double[] array) {\n    if (\"0.9\".equals(fieldName)) {\n        {\n            appendSummarySize(buffer, fieldName, array.int);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nom":"fieldName"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:183","type":"CtBinaryOperatorImpl","sourcecode":"(tmp.length()) != (duration.length())"},"failures":[306],"tindex":"2576b81c-3e72-11e6-9581-6f3fe87e0c82","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2072","type":"CtMethodImpl","sourcecode":"public boolean startsWith(final java.lang.String str) {\n    if ((str.length()) != (str.length())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return false;\n            } \n            final int int = str.length();\n            if (len == 0) {\n                return true;\n            } \n            if (len > (int)) {\n                return false;\n            } \n            for (int int = 0 ; i < len ; i++) {\n                if ((char[][i]) != (str.charAt(i))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"duration":"str","tmp":"str"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1906","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[307,308],"tindex":"2576b81d-3e72-11e6-9581-f30ba200072e","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2162","type":"CtMethodImpl","sourcecode":"public java.lang.String substring(final int startIndex, int endIndex) {\n    if (startIndex < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            endIndex = validateRange(startIndex, endIndex);\n            return new java.lang.String(char[] , startIndex , (endIndex - startIndex));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"startIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:496","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349],"tindex":"2576b81e-3e72-11e6-9581-9562ab1aa458","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:982","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n    if (buffer == null) {\n        {\n            appendTo(buffer, ((calendar.get(java.util.Calendar.java.util.Calendar.int)) + 1));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"buffer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:256","type":"CtBinaryOperatorImpl","sourcecode":"buffer == null"},"failures":[],"tindex":"2576df2f-3e72-11e6-9581-05c0547c3d9b","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1439","type":"CtMethodImpl","sourcecode":"protected void appendSummary(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final boolean[] array) {\n    if (buffer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendSummarySize(buffer, fieldName, array.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"buffer":"buffer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:106","type":"CtInvocationImpl","sourcecode":"java.lang.Double.isNaN(b)"},"failures":[],"tindex":"2576df30-3e72-11e6-9581-17b431d2d432","method":{"position":"org.apache.commons.lang3.mutable.MutableDouble:96","type":"CtMethodImpl","sourcecode":"public void setValue(final double value) {\n    if (java.lang.Double.isNaN(value)) {\n        {\n            if (java.lang.Double.isNaN(value)) {\n                {\n                    org.apache.commons.lang3.mutable.MutableDouble.this.double = value;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:514","type":"CtBinaryOperatorImpl","sourcecode":"strLen > 0"},"failures":[350],"tindex":"2576df31-3e72-11e6-9581-c5399f3dd6ec","method":{"position":"org.apache.commons.lang3.ArrayUtils:4513","type":"CtMethodImpl","sourcecode":"public static float[] add(final float[] array, final int index, final float element) {\n    if (index > 0) {\n        {\n            return ((float[])(org.apache.commons.lang3.ArrayUtils.add(array, index, java.lang.Float.valueOf(element), java.lang.Float.java.lang.Float.java.lang.Class<java.lang.Float>)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"strLen":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:656","type":"CtBinaryOperatorImpl","sourcecode":"length > 0"},"failures":[350],"tindex":"2576df32-3e72-11e6-9581-03e81669c014","method":{"position":"org.apache.commons.lang3.ArrayUtils:4358","type":"CtMethodImpl","sourcecode":"public static char[] add(final char[] array, final int index, final char element) {\n    if (index > 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((char[])(org.apache.commons.lang3.ArrayUtils.add(array, index, java.lang.Character.valueOf(element), java.lang.Character.java.lang.Character.java.lang.Class<java.lang.Character>)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:674","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[],"tindex":"25770643-3e72-11e6-9581-958ebcfd77db","method":{"position":"org.apache.commons.lang3.text.StrBuilder:914","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendln(final java.lang.StringBuilder str) {\n    if (str == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return append(str).appendNewLine();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"str"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:137","type":"CtBinaryOperatorImpl","sourcecode":"(((org.apache.commons.lang3.StringUtils.isAllLowerCase(split[0])) && (((split[0].length()) == 2) || ((split[0].length()) == 3))) && ((split[1].length()) == 2)) && (org.apache.commons.lang3.StringUtils.isAllUpperCase(split[1]))"},"failures":[],"tindex":"25770644-3e72-11e6-9581-a9fd69aee9fe","method":{"position":"org.apache.commons.lang3.StringUtils:6682","type":"CtMethodImpl","sourcecode":"public static java.lang.String getCommonPrefix(final java.lang.String... strs) {\n    if ((((org.apache.commons.lang3.StringUtils.isAllLowerCase(strs[0])) && (((split[0].length()) == 2) || ((split[0].length()) == 3))) && ((split[1].length()) == 2)) && (org.apache.commons.lang3.StringUtils.isAllUpperCase(split[1]))) {\n        {\n            if ((strs == null) || ((strs.int) == 0)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final int int = org.apache.commons.lang3.StringUtils.indexOfDifference(strs);\n            if (smallestIndexOfDiff == (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) {\n                if ((strs[0]) == null) {\n                    return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n                } \n                return strs[0];\n            } else if (smallestIndexOfDiff == 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } else {\n                return strs[0].substring(0, smallestIndexOfDiff);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"split":"strs"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharRange:238","type":"CtInvocationImpl","sourcecode":"isNegated()"},"failures":[],"tindex":"25772d55-3e72-11e6-9581-e38e61aa5cc8","method":{"position":"org.apache.commons.lang3.CharRange:182","type":"CtMethodImpl","sourcecode":"public boolean contains(final org.apache.commons.lang3.CharRange range) {\n    if (range == null) {\n        throw new java.lang.IllegalArgumentException(\"The Range must not be null\");\n    } \n    if (boolean) {\n        if (range.boolean) {\n            return ((char) >= (range.char)) && ((char) <= (range.char));\n        } \n        return ((range.char) < (char)) || ((range.char) > (char));\n    } \n    if (range.boolean) {\n        return ((char) == 0) && ((char) == (java.lang.Character.java.lang.Character.char));\n    } \n    return ((char) <= (range.char)) && ((char) >= (range.char));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"range"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:7206","type":"CtBinaryOperatorImpl","sourcecode":"(prefix.length()) > (str.length())"},"failures":[351,352],"tindex":"25772d56-3e72-11e6-9581-e766959df4d5","method":{"position":"org.apache.commons.lang3.StringUtils:1585","type":"CtMethodImpl","sourcecode":"public static int indexOfAny(final java.lang.CharSequence cs, final java.lang.String searchChars) {\n    if ((cs.length()) > (cs.length())) {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(cs)) || (org.apache.commons.lang3.StringUtils.isEmpty(searchChars))) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            return org.apache.commons.lang3.StringUtils.indexOfAny(cs, searchChars.toCharArray());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"cs","prefix":"cs"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:974","type":"CtBinaryOperatorImpl","sourcecode":"lhs == null"},"failures":[353,354,355,356,357],"tindex":"25772d57-3e72-11e6-9581-a9d4653e574a","method":{"position":"org.apache.commons.lang3.BooleanUtils:1040","type":"CtMethodImpl","sourcecode":"public static boolean xor(final boolean... array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n            } \n            if ((array.int) == 0) {\n                throw new java.lang.IllegalArgumentException(\"Array is empty\");\n            } \n            boolean boolean = false;\n            for (final boolean boolean : array) {\n                result ^= element;\n            }\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:643","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[358],"tindex":"25772d58-3e72-11e6-9581-b9e078061dff","method":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:633","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj2) {\n    if (obj2 == obj2) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj2 instanceof org.apache.commons.lang3.time.DurationFormatUtils.Token) {\n                final org.apache.commons.lang3.time.DurationFormatUtils.Token org.apache.commons.lang3.time.DurationFormatUtils.Token = ((org.apache.commons.lang3.time.DurationFormatUtils.Token)(obj2));\n                if ((org.apache.commons.lang3.time.DurationFormatUtils.Token.this.java.lang.Object.getClass()) != (tok2.java.lang.Object.getClass())) {\n                    return false;\n                } \n                if ((org.apache.commons.lang3.time.DurationFormatUtils.Token.this.int) != (tok2.int)) {\n                    return false;\n                } \n                if ((org.apache.commons.lang3.time.DurationFormatUtils.Token.this.java.lang.Object) instanceof java.lang.StringBuilder) {\n                    return org.apache.commons.lang3.time.DurationFormatUtils.Token.this.java.lang.Object.toString().equals(tok2.java.lang.Object.toString());\n                } else if ((org.apache.commons.lang3.time.DurationFormatUtils.Token.this.java.lang.Object) instanceof java.lang.Number) {\n                    return org.apache.commons.lang3.time.DurationFormatUtils.Token.this.java.lang.Object.equals(tok2.java.lang.Object);\n                } else {\n                    return (org.apache.commons.lang3.time.DurationFormatUtils.Token.this.java.lang.Object) == (tok2.java.lang.Object);\n                }\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"obj2","rhs":"obj2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:270","type":"CtBinaryOperatorImpl","sourcecode":"(countryCode.equals(locale.getCountry())) && (locale.getVariant().isEmpty())"},"failures":[],"tindex":"25775469-3e72-11e6-9581-b792e20fc013","method":{"position":"org.apache.commons.lang3.ObjectUtils:422","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static java.lang.String toString(final java.lang.Object obj, final java.lang.String nullStr) {\n    if ((nullStr.equals(obj.getCountry())) && (locale.getVariant().isEmpty())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return obj == null ? nullStr : obj.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"countryCode":"nullStr","locale":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2809","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.ArrayUtils.isEmpty(array)"},"failures":[359],"tindex":"25777b7a-3e72-11e6-9581-a1f83e057d6f","method":{"position":"org.apache.commons.lang3.ArrayUtils:1353","type":"CtMethodImpl","sourcecode":"public static boolean isSameLength(final float[] array1, final float[] array2) {\n    if (org.apache.commons.lang3.ArrayUtils.isEmpty(array2)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((((array1 == null) && (array2 != null)) && ((array2.int) > 0)) || (((array2 == null) && (array1 != null)) && ((array1.int) > 0))) || (((array1 != null) && (array2 != null)) && ((array1.int) != (array2.int)))) {\n                return false;\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array2"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:256","type":"CtBinaryOperatorImpl","sourcecode":"buffer == null"},"failures":[294,155,156,157,158,159,160,161,162,163,164,360,361,165,166,136,362,363,6,7,8,9,10,11,12,13,57,364,170,365,366,171,172,137,367,368,173,369,370,174,175,138,371,372,58,58,59,59,60,60,61,62,62,63,63,64,64,65,65,66,66,67,67,68,68,69,69,70,70,71,71,72,72,73,73,74,74,75,75,76,76,77,77,78,78,79,79,80,80,81,81,82,82,83,83,84,84,85,85,86,86,87,87,88,88,89,89,90,90,91,91,92,92,93,93,94,94,95,95,96,96,97,97,98,98,99,99,100,101,101,102,102,103,103,104,104,105,105,106,106,107,107,108,108,109,109,110,110,111,111,112,112,49,49,50,50,51,52,52,113,113,114,114,115,115,116,116,117,117,118,118,119,119,120,120,121,121,122,122,123,124,124,125,125,126,126,127,127,176,373,374,177,178,139,375,376,377,378,379,380,381,382,383,384,385,386,387,179,388,389,180,181,140,390,391,182,392,393,183,184,141,128,394],"tindex":"25777b7b-3e72-11e6-9581-451da97135f7","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1490","type":"CtMethodImpl","sourcecode":"protected void appendContentEnd(final java.lang.StringBuffer buffer) {\n    if (buffer == null) {\n        {\n            buffer.append(java.lang.String);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"buffer":"buffer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharRange:69","type":"CtBinaryOperatorImpl","sourcecode":"start > end"},"failures":[395,396,397,398,399,400,401,402],"tindex":"2577a28c-3e72-11e6-9581-fd6e4c51f72b","method":{"position":"org.apache.commons.lang3.text.WordUtils:569","type":"CtMethodImpl","sourcecode":"private static boolean isDelimiter(final char ch, final char[] delimiters) {\n    if (ch > ch) {\n        {\n            if (delimiters == null) {\n                return java.lang.Character.isWhitespace(ch);\n            } \n            for (final char char : delimiters) {\n                if (ch == delimiter) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"ch","end":"ch"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:461","type":"CtInvocationImpl","sourcecode":"str.startsWith(pfx)"},"failures":[403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430],"tindex":"2577a28d-3e72-11e6-9581-b9d237b4ac7f","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:390","type":"CtMethodImpl","sourcecode":"public java.lang.String replace(final java.lang.String source) {\n    if (source.startsWith(source)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (source == null) {\n                return null;\n            } \n            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(source);\n            if ((substitute(buf, 0, source.length())) == false) {\n                return source;\n            } \n            return buf.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"source","pfx":"source"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2541","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[431],"tindex":"2577a28e-3e72-11e6-9581-cd321f91004a","method":{"position":"org.apache.commons.lang3.ClassUtils:397","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.lang.Class<?>> convertClassNamesToClasses(final java.util.List<java.lang.String> classNames) {\n    if (classNames.isEmpty()) {\n        {\n            if (classNames == null) {\n                return null;\n            } \n            final java.util.List<java.lang.Class<?>> java.util.List<java.lang.Class<?>> = new java.util.ArrayList<java.lang.Class<?>>(classNames.size());\n            for (final java.lang.String java.lang.String : classNames) {\n                try {\n                    classes.add(java.lang.Class.forName(className));\n                } catch (final java.lang.Exception ex) {\n                    classes.add(null);\n                }\n            }\n            return classes;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"classNames"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:527","type":"CtBinaryOperatorImpl","sourcecode":"(comparison) != 0"},"failures":[432],"tindex":"2577c99f-3e72-11e6-9581-a36d15bd11d6","method":{"position":"org.apache.commons.lang3.Conversion:1356","type":"CtMethodImpl","sourcecode":"public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n    if (dstPos != 0) {\n        {\n            if (0 == nBytes) {\n                return dst;\n            } \n            if ((((nBytes - 1) * 8) + srcPos) >= 16) {\n                throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n            } \n            int int = 0;\n            for (int int = 0 ; i < nBytes ; i++) {\n                shift = (i * 8) + srcPos;\n                dst[(dstPos + i)] = ((byte)(255 & (src >> shift)));\n            }\n            return dst;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250181609/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparison":"dstPos"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}