{"failureDictionary":{"org.apache.commons.lang3.text.StrBuilderTest.testDeleteFirst_String":146,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":90,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":76,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":92,"org.apache.commons.lang3.math.NumberUtilsTest.testLang381":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":59,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":89,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":34,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":40,"org.apache.commons.lang3.StringUtilsTest.testIsAllLowerCase":106,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":84,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceFirst_String_String":145,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":42,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCode":124,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":55,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayInt":110,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testFloatArrayAsObject":116,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testDoubleArrayAsObject":118,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":54,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementFloatArray":14,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":66,"org.apache.commons.lang3.ValidateTest.testValidIndex_array":138,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":43,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testObjectArray":112,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testByteArrayAsObject":127,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOfLang294":140,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":61,"org.apache.commons.lang3.ArrayUtilsTest.testContainsFloat":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":77,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testGetContextValues":7,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testIntArrayAsObject":117,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_1Part":22,"org.apache.commons.lang3.LocaleUtilsTest.testLang328":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":94,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOf_String_int":147,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":63,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":82,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testGetFirstContextValue":6,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxFloat":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":62,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":29,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOf_String":148,"org.apache.commons.lang3.math.NumberUtilsTest.testStringToDoubleString":108,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testObject":125,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testBooleanArrayAsObject":130,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testLongArrayAsObject":126,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":83,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":49,"org.apache.commons.lang3.ArrayUtilsTest.testReverseIntRange":150,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfFloat":13,"org.apache.commons.lang3.exception.ContextedExceptionTest.testJavaSerialization":0,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testBooleanArray":135,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":85,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDateDefaults":101,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":80,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testJavaSerialization":8,"org.apache.commons.lang3.math.NumberUtilsTest.testStringToDoubleStringD":109,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testJavaSerialization":4,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":53,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":60,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteAll_String":139,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetFirstContextValue":10,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testShortArrayAsObject":129,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":26,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":99,"org.apache.commons.lang3.text.StrBuilderTest.testContains_String":141,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":32,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHierarchyHashCode":120,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":79,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":64,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":68,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":69,"org.apache.commons.lang3.StringUtilsSubstringTest.testCountMatches_String":100,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":70,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCodeExcludeFields":128,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxFloat_emptyArray":15,"org.apache.commons.lang3.LocaleUtilsTest.testParseAllLocales":21,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":45,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testSuper":115,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testIntegerWithTransients":131,"org.apache.commons.lang3.ArrayUtilsTest.testContainsDouble":136,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":33,"org.apache.commons.lang3.exception.ContextedExceptionTest.testGetFirstContextValue":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":57,"org.apache.commons.lang3.LocaleUtilsTest.testThreeCharsLocale":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":98,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_2Part":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":88,"org.apache.commons.lang3.exception.ContextedExceptionTest.testGetContextValues":3,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testObjectArrayAsObject":121,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":75,"org.apache.commons.lang3.exception.ContextedExceptionTest.testSetContextValue":1,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":31,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":46,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetContextValues":11,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testCharArrayAsObject":114,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":73,"org.apache.commons.lang3.text.StrBuilderTest.testLang294":143,"org.apache.commons.lang3.ArrayUtilsTest.testHashCode":111,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixtureWithTransients":133,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":56,"org.apache.commons.lang3.text.StrBuilderTest.testLang295":144,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":41,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":87,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":51,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testInteger":134,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfByteWithStartIndex":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":74,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":93,"org.apache.commons.lang3.ArrayUtilsTest.testReverseInt":149,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":95,"org.apache.commons.lang3.math.FractionTest.testEquals":137,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":48,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionObjectCycle":119,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_3Part":24,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testSetContextValue":5,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetArrayStart":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":44,"org.apache.commons.lang3.text.StrTokenizerTest.testChaining":107,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixture":132,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testBooleanMultiArray":122,"org.apache.commons.lang3.StringUtilsIsTest.testIsNumeric":105,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":96,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":50,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testObjectBuild":113,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":52,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfByte":102,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceAll_String_String":142,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testSetContextValue":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":36,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testToHashCodeEqualsHashCode":123,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":27,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":81,"org.apache.commons.lang3.LocaleUtilsTest.testLang865":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":37,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":97},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:664","type":"CtBinaryOperatorImpl","sourcecode":"nullString == null"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"tindex":"a06cfe1c-2e8e-11e6-9b33-ff84b918a6ac","method":{"position":"org.apache.commons.lang3.exception.DefaultExceptionContext:62","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic org.apache.commons.lang3.exception.DefaultExceptionContext setContextValue(final java.lang.String label, final java.lang.Object value) {\n    if (label == null) {\n        {\n            for (final java.util.Iterator<org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>> java.util.Iterator<org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>> = java.util.List<org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>>.iterator() ; iter.hasNext() ; ) {\n                final org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object> org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object> = iter.next();\n                if (org.apache.commons.lang3.StringUtils.equals(label, p.getKey())) {\n                    iter.remove();\n                } \n            }\n            addContextValue(label, value);\n            return org.apache.commons.lang3.exception.DefaultExceptionContext.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nullString":"label"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:934","type":"CtBinaryOperatorImpl","sourcecode":"lhs == null"},"failures":[12,13,14],"tindex":"a06de87d-2e8e-11e6-9b33-2b68f07305ca","method":{"position":"org.apache.commons.lang3.ArrayUtils:2747","type":"CtMethodImpl","sourcecode":"public static int indexOf(final float[] array, final float valueToFind) {\n    if (array == null) {\n        {\n            return org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1436","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(arg)"},"failures":[],"tindex":"a06e0f8e-2e8e-11e6-9b33-c1401325e8c8","method":{"position":"org.apache.commons.lang3.mutable.MutableLong:235","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(obj)) {\n        {\n            if (obj instanceof org.apache.commons.lang3.mutable.MutableLong) {\n                return (long) == (((org.apache.commons.lang3.mutable.MutableLong)(obj)).longValue());\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"arg":"obj"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3939","type":"CtBinaryOperatorImpl","sourcecode":"array2 == null"},"failures":[15,16,17],"tindex":"a06e369f-2e8e-11e6-9b33-25db709304e6","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1056","type":"CtMethodImpl","sourcecode":"public static float max(final float[] array) {\n    if (array == null) {\n        {\n            org.apache.commons.lang3.math.NumberUtils.validateArray(array);\n            float float = array[0];\n            for (int int = 1 ; j < (array.int) ; j++) {\n                if (java.lang.Float.isNaN(array[j])) {\n                    return java.lang.Float.java.lang.Float.float;\n                } \n                if ((array[j]) > max) {\n                    max = array[j];\n                } \n            }\n            return max;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array2":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:732","type":"CtInvocationImpl","sourcecode":"str.startsWith(\"-\")"},"failures":[18,19,20,21,22,23,24],"tindex":"a06e36a0-2e8e-11e6-9b33-9f7fc364d6c7","method":{"position":"org.apache.commons.lang3.LocaleUtils:90","type":"CtMethodImpl","sourcecode":"public static java.util.Locale toLocale(final java.lang.String str) {\n    if (str.startsWith(\"-\")) {\n        {\n            if (str == null) {\n                return null;\n            } \n            if (str.isEmpty()) {\n                return new java.util.Locale(\"\" , \"\");\n            } \n            if (str.contains(\"#\")) {\n                throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + str));\n            } \n            final int int = str.length();\n            if (len < 2) {\n                throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + str));\n            } \n            final char char = str.charAt(0);\n            if (ch0 == '_') {\n                if (len < 3) {\n                    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + str));\n                } \n                final char char = str.charAt(1);\n                final char char = str.charAt(2);\n                if ((!(java.lang.Character.isUpperCase(ch1))) || (!(java.lang.Character.isUpperCase(ch2)))) {\n                    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + str));\n                } \n                if (len == 3) {\n                    return new java.util.Locale(\"\" , str.substring(1, 3));\n                } \n                if (len < 5) {\n                    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + str));\n                } \n                if ((str.charAt(3)) != '_') {\n                    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + str));\n                } \n                return new java.util.Locale(\"\" , str.substring(1, 3) , str.substring(4));\n            } \n            java.lang.String[] java.lang.String[] = str.split(\"_\", (-1));\n            int int = (split.int) - 1;\n            switch (occurrences) {\n                case 0 :\n                    if ((org.apache.commons.lang3.StringUtils.isAllLowerCase(str)) && ((len == 2) || (len == 3))) {\n                        return new java.util.Locale(str);\n                    } else {\n                        throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + str));\n                    }\n                case 1 :\n                    if ((((org.apache.commons.lang3.StringUtils.isAllLowerCase(split[0])) && (((split[0].length()) == 2) || ((split[0].length()) == 3))) && ((split[1].length()) == 2)) && (org.apache.commons.lang3.StringUtils.isAllUpperCase(split[1]))) {\n                        return new java.util.Locale(split[0] , split[1]);\n                    } else {\n                        throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + str));\n                    }\n                case 2 :\n                    if ((((org.apache.commons.lang3.StringUtils.isAllLowerCase(split[0])) && (((split[0].length()) == 2) || ((split[0].length()) == 3))) && (((split[1].length()) == 0) || (((split[1].length()) == 2) && (org.apache.commons.lang3.StringUtils.isAllUpperCase(split[1]))))) && ((split[2].length()) > 0)) {\n                        return new java.util.Locale(split[0] , split[1] , split[2]);\n                    } \n                default :\n                    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + str));\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:257","type":"CtUnaryOperatorImpl","sourcecode":"!(shutdown)"},"failures":[25,26,27,28,28,29,29,30,31,31,32,33,34,35,35,36,36,37,38,39,40,41,42,43,43,44,44,45,46,47,48,48,49,50,51,52,52,53,54,55,56,56,57,57,58,58,59,60,61,61,62,62,63,63,64,65,66,66,67,67,68,69,70,71,71,72,72,73,73,74,75,75,76,77,78,79,79,80,80,81,82,82,83,84,84,85,86,87,88,88,89,90,90,91,92,93,93,94,94,95,96,96,97,97,98,99,99],"tindex":"a06e84c1-2e8e-11e6-9b33-d3517aca4c27","method":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:623","type":"CtMethodImpl","sourcecode":"public void setAppendStatics(final boolean appendStatics) {\n    if (!appendStatics) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.boolean = appendStatics;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"shutdown":"appendStatics"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:667","type":"CtBinaryOperatorImpl","sourcecode":"stripChars == null"},"failures":[],"tindex":"a06eabd2-2e8e-11e6-9b33-e1f30c57ddd3","method":{"position":"org.apache.commons.lang3.exception.ContextedRuntimeException:207","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Object getFirstContextValue(final java.lang.String label) {\n    if (label == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.exception.ContextedRuntimeException.this.org.apache.commons.lang3.exception.ExceptionContext.getFirstContextValue(label);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"stripChars":"label"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:452","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[81,81,82,83,84],"tindex":"a06ed2e3-2e8e-11e6-9b33-a117688c08ef","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:1008","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder appendToString(final java.lang.String toString) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(toString)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (toString != null) {\n                org.apache.commons.lang3.builder.ToStringStyle.appendToString(java.lang.StringBuffer, toString);\n            } \n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"toString"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:759","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[100],"tindex":"a06ed2e4-2e8e-11e6-9b33-0f37458be14e","method":{"position":"org.apache.commons.lang3.StringUtils:5811","type":"CtMethodImpl","sourcecode":"public static int countMatches(final java.lang.CharSequence str, final java.lang.CharSequence sub) {\n    if (sub == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(sub))) {\n                return 0;\n            } \n            int int = 0;\n            int int = 0;\n            while ((idx = org.apache.commons.lang3.CharSequenceUtils.indexOf(str, sub, idx)) != (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) {\n                count++;\n                idx += sub.length();\n            }\n            return count;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"sub"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomStringUtils:227","type":"CtBinaryOperatorImpl","sourcecode":"count < 0"},"failures":[101],"tindex":"a06ef9f5-2e8e-11e6-9b33-ef7af8d9e55c","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:337","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.time.FastDateFormat getDateTimeInstance(final int dateStyle, final int timeStyle, final java.util.TimeZone timeZone) {\n    if (timeStyle < 0) {\n        {\n            return org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(dateStyle, timeStyle, timeZone, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"timeStyle"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:845","type":"CtBinaryOperatorImpl","sourcecode":"varValue == null"},"failures":[],"tindex":"a06f2106-2e8e-11e6-9b33-a9e2511a4eff","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:253","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final byte[] lhs, final byte[] rhs) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (fieldName == null) {\n                throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n            } \n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if (!(java.util.Arrays.equals(lhs, rhs))) {\n                java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Byte[]>(fieldName) {\n                    private static final long serialVersionUID = 1L;\n\n                    @java.lang.Override\n                    public java.lang.Byte[] getLeft() {\n                        return org.apache.commons.lang3.ArrayUtils.toObject(lhs);\n                    }\n\n                    @java.lang.Override\n                    public java.lang.Byte[] getRight() {\n                        return org.apache.commons.lang3.ArrayUtils.toObject(rhs);\n                    }\n                });\n            } \n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"varValue":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:798","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[102,103],"tindex":"a06f4817-2e8e-11e6-9b33-dfe235a6b757","method":{"position":"org.apache.commons.lang3.ArrayUtils:2463","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final byte[] array, final byte valueToFind) {\n    if (array == array) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.java.lang.Integer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array","rhs":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:373","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[104],"tindex":"a06f4818-2e8e-11e6-9b33-a37a447ad52b","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1739","type":"CtMethodImpl","sourcecode":"protected void setArrayStart(java.lang.String arrayStart) {\n    if (arrayStart == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (arrayStart == null) {\n                arrayStart = \"\";\n            } \n            org.apache.commons.lang3.builder.ToStringStyle.this.java.lang.String = arrayStart;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"arrayStart"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1436","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[105],"tindex":"a06f6f29-2e8e-11e6-9b33-e725cf247d57","method":{"position":"org.apache.commons.lang3.StringUtils:6033","type":"CtMethodImpl","sourcecode":"public static boolean isNumeric(final java.lang.CharSequence cs) {\n    if (cs == null) {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(cs)) {\n                return false;\n            } \n            final int int = cs.length();\n            for (int int = 0 ; i < sz ; i++) {\n                if ((java.lang.Character.isDigit(cs.charAt(i))) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"cs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDatePrinter:211","type":"CtBinaryOperatorImpl","sourcecode":"tokenLen == 2"},"failures":[],"tindex":"a06f6f2a-2e8e-11e6-9b33-11daf9705145","method":{"position":"org.apache.commons.lang3.Conversion:1323","type":"CtMethodImpl","sourcecode":"public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n    if (dstPos == 2) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (0 == nBytes) {\n                return dst;\n            } \n            if ((((nBytes - 1) * 8) + srcPos) >= 32) {\n                throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n            } \n            int int = 0;\n            for (int int = 0 ; i < nBytes ; i++) {\n                shift = (i * 8) + srcPos;\n                dst[(dstPos + i)] = ((byte)(255 & (src >> shift)));\n            }\n            return dst;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"tokenLen":"dstPos"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:262","type":"CtBinaryOperatorImpl","sourcecode":"value == trueValue"},"failures":[],"tindex":"a06f963b-2e8e-11e6-9b33-51b75084f36b","method":{"position":"org.apache.commons.lang3.Conversion:405","type":"CtMethodImpl","sourcecode":"public static char binaryToHexDigitMsb0_4bits(final boolean[] src, final int srcPos) {\n    if (srcPos == srcPos) {\n        {\n            if ((src.int) > 8) {\n                throw new java.lang.IllegalArgumentException((\"src.length>8: src.length=\" + (src.int)));\n            } \n            if (((src.int) - srcPos) < 4) {\n                throw new java.lang.IllegalArgumentException((((\"src.length-srcPos<4: src.length=\" + (src.int)) + \", srcPos=\") + srcPos));\n            } \n            if (src[(srcPos + 3)]) {\n                if (src[(srcPos + 2)]) {\n                    if (src[(srcPos + 1)]) {\n                        if (src[srcPos]) {\n                            return 'f';\n                        } else {\n                            return '7';\n                        }\n                    } else {\n                        if (src[srcPos]) {\n                            return 'b';\n                        } else {\n                            return '3';\n                        }\n                    }\n                } else {\n                    if (src[(srcPos + 1)]) {\n                        if (src[srcPos]) {\n                            return 'd';\n                        } else {\n                            return '5';\n                        }\n                    } else {\n                        if (src[srcPos]) {\n                            return '9';\n                        } else {\n                            return '1';\n                        }\n                    }\n                }\n            } else {\n                if (src[(srcPos + 2)]) {\n                    if (src[(srcPos + 1)]) {\n                        if (src[srcPos]) {\n                            return 'e';\n                        } else {\n                            return '6';\n                        }\n                    } else {\n                        if (src[srcPos]) {\n                            return 'a';\n                        } else {\n                            return '2';\n                        }\n                    }\n                } else {\n                    if (src[(srcPos + 1)]) {\n                        if (src[srcPos]) {\n                            return 'c';\n                        } else {\n                            return '4';\n                        }\n                    } else {\n                        if (src[srcPos]) {\n                            return '8';\n                        } else {\n                            return '0';\n                        }\n                    }\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trueValue":"srcPos","value":"srcPos"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrMatcher:193","type":"CtBinaryOperatorImpl","sourcecode":"(chars.length()) == 1"},"failures":[106],"tindex":"a06fe45c-2e8e-11e6-9b33-03a158f7e78f","method":{"position":"org.apache.commons.lang3.StringUtils:6135","type":"CtMethodImpl","sourcecode":"public static boolean isAllLowerCase(final java.lang.CharSequence cs) {\n    if ((cs.length()) == 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((cs == null) || (org.apache.commons.lang3.StringUtils.isEmpty(cs))) {\n                return false;\n            } \n            final int int = cs.length();\n            for (int int = 0 ; i < sz ; i++) {\n                if ((java.lang.Character.isLowerCase(cs.charAt(i))) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chars":"cs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:1001","type":"CtBinaryOperatorImpl","sourcecode":"trimmer != null"},"failures":[107],"tindex":"a06fe45d-2e8e-11e6-9b33-2f28531e8fdc","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:956","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrTokenizer setIgnoredMatcher(final org.apache.commons.lang3.text.StrMatcher ignored) {\n    if (ignored != null) {\n        {\n            if (ignored != null) {\n                org.apache.commons.lang3.text.StrTokenizer.this.org.apache.commons.lang3.text.StrMatcher = ignored;\n            } \n            return org.apache.commons.lang3.text.StrTokenizer.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trimmer":"ignored"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.JavaVersion:138","type":"CtInvocationImpl","sourcecode":"\"1.3\".equals(nom)"},"failures":[108,109],"tindex":"a0700b6e-2e8e-11e6-9b33-0d85b314d7c2","method":{"position":"org.apache.commons.lang3.math.NumberUtils:273","type":"CtMethodImpl","sourcecode":"public static double toDouble(final java.lang.String str, final double defaultValue) {\n    if (\"1.3\".equals(str)) {\n        {\n            if (str == null) {\n                return defaultValue;\n            } \n            try {\n                return java.lang.Double.parseDouble(str);\n            } catch (final java.lang.NumberFormatException nfe) {\n                return defaultValue;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nom":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:968","type":"CtBinaryOperatorImpl","sourcecode":"(value < start) || (value > end)"},"failures":[],"tindex":"a0700b6f-2e8e-11e6-9b33-47fd5283c799","method":{"position":"org.apache.commons.lang3.ObjectUtils:896","type":"CtMethodImpl","sourcecode":"public static long CONST(final long v) {\n    if ((v < v) || (value > v)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return v;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"v","end":"v","value":"v"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1157","type":"CtBinaryOperatorImpl","sourcecode":"((nBools - 1) + dstPos) >= 8"},"failures":[110],"tindex":"a0703280-2e8e-11e6-9b33-b3e11a7289a2","method":{"position":"org.apache.commons.lang3.ArrayUtils:4178","type":"CtMethodImpl","sourcecode":"public static int[] add(final int[] array, final int element) {\n    if (((element - 1) + element) >= 8) {\n        {\n            final int[] int[] = ((int[])(org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(array, java.lang.Integer.java.lang.Integer.java.lang.Class<java.lang.Integer>)));\n            newArray[((newArray.int) - 1)] = element;\n            return newArray;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nBools":"element","dstPos":"element"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1975","type":"CtBinaryOperatorImpl","sourcecode":"search == null"},"failures":[111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134],"tindex":"a0703281-2e8e-11e6-9b33-b3b783e2612d","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:815","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final java.lang.Object object) {\n    if (object == null) {\n        {\n            if (object == null) {\n                int = (int) * (int);\n            } else {\n                if (object.getClass().isArray()) {\n                    if (object instanceof long[]) {\n                        append(((long[])(object)));\n                    } else if (object instanceof int[]) {\n                        append(((int[])(object)));\n                    } else if (object instanceof short[]) {\n                        append(((short[])(object)));\n                    } else if (object instanceof char[]) {\n                        append(((char[])(object)));\n                    } else if (object instanceof byte[]) {\n                        append(((byte[])(object)));\n                    } else if (object instanceof double[]) {\n                        append(((double[])(object)));\n                    } else if (object instanceof float[]) {\n                        append(((float[])(object)));\n                    } else if (object instanceof boolean[]) {\n                        append(((boolean[])(object)));\n                    } else {\n                        append(((java.lang.Object[])(object)));\n                    }\n                } else {\n                    int = ((int) * (int)) + (object.hashCode());\n                }\n            }\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"search":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:971","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[111,135,122,130],"tindex":"a0705992-2e8e-11e6-9b33-75b4c45691fe","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:584","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final boolean[] array) {\n    if (array == array) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                int = (int) * (int);\n            } else {\n                for (final boolean boolean : array) {\n                    append(element);\n                }\n            }\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array","rhs":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:1058","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[],"tindex":"a07080a3-2e8e-11e6-9b33-fd578a365caf","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:209","type":"CtMethodImpl","sourcecode":"public static java.lang.String replace(final java.lang.Object source, final java.util.Properties valueProperties) {\n    if (source == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (valueProperties == null) {\n                return source.toString();\n            } \n            final java.util.Map<java.lang.String, java.lang.String> java.util.Map<java.lang.String, java.lang.String> = new java.util.HashMap<java.lang.String, java.lang.String>();\n            final java.util.Enumeration<?> java.util.Enumeration<?> = valueProperties.propertyNames();\n            while (propNames.hasMoreElements()) {\n                final java.lang.String java.lang.String = ((java.lang.String)(propNames.nextElement()));\n                final java.lang.String java.lang.String = valueProperties.getProperty(propName);\n                valueMap.put(propName, propValue);\n            }\n            return org.apache.commons.lang3.text.StrSubstitutor.replace(source, valueMap);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"source"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:690","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[136],"tindex":"a07080a4-2e8e-11e6-9b33-49878c8bd7f2","method":{"position":"org.apache.commons.lang3.ArrayUtils:2714","type":"CtMethodImpl","sourcecode":"public static boolean contains(final double[] array, final double valueToFind) {\n    if (array == null) {\n        {\n            return (org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind)) != (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:117","type":"CtBinaryOperatorImpl","sourcecode":"len < 5"},"failures":[],"tindex":"a070a7b5-2e8e-11e6-9b33-870696776e48","method":{"position":"org.apache.commons.lang3.StringUtils:862","type":"CtMethodImpl","sourcecode":"public static int indexOf(final java.lang.CharSequence seq, final int searchChar) {\n    if (searchChar < 5) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(seq)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            return org.apache.commons.lang3.CharSequenceUtils.indexOf(seq, searchChar, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"searchChar"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3823","type":"CtBinaryOperatorImpl","sourcecode":"array2 == null"},"failures":[137],"tindex":"a070a7b6-2e8e-11e6-9b33-017d436a5854","method":{"position":"org.apache.commons.lang3.math.Fraction:844","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.lang3.math.Fraction.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.lang3.math.Fraction) == false) {\n                return false;\n            } \n            final org.apache.commons.lang3.math.Fraction org.apache.commons.lang3.math.Fraction = ((org.apache.commons.lang3.math.Fraction)(obj));\n            return ((getNumerator()) == (other.getNumerator())) && ((getDenominator()) == (other.getDenominator()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array2":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2126","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[138],"tindex":"a070a7b7-2e8e-11e6-9b33-b73bbc8281ba","method":{"position":"org.apache.commons.lang3.Validate:659","type":"CtMethodImpl","sourcecode":"public static <T>T[] validIndex(final T[] array, final int index) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.Validate.validIndex(array, index, org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.java.lang.String, java.lang.Integer.valueOf(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5381","type":"CtBinaryOperatorImpl","sourcecode":"pads > (org.apache.commons.lang3.StringUtils.PAD_LIMIT)"},"failures":[139,140,141,142,143,144,145,146,147,148],"tindex":"a070a7b8-2e8e-11e6-9b33-a59ae96fb1b8","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2336","type":"CtMethodImpl","sourcecode":"public int indexOf(final java.lang.String str, int startIndex) {\n    if (startIndex > startIndex) {\n        {\n            startIndex = startIndex < 0 ? 0 : startIndex;\n            if ((str == null) || (startIndex >= (int))) {\n                return -1;\n            } \n            final int int = str.length();\n            if (strLen == 1) {\n                return indexOf(str.charAt(0), startIndex);\n            } \n            if (strLen == 0) {\n                return startIndex;\n            } \n            if (strLen > (int)) {\n                return -1;\n            } \n            final char[] char[] = char[];\n            final int int = ((int) - strLen) + 1;\n            outer : for (int int = startIndex ; i < len ; i++) {\n                for (int int = 0 ; j < strLen ; j++) {\n                    if ((str.charAt(j)) != (thisBuf[(i + j)])) {\n                        continue outer;\n                    } \n                }\n                return i;\n            }\n            return -1;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pads":"startIndex","org.apache.commons.lang3.StringUtils.PAD_LIMIT":"startIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:556","type":"CtBinaryOperatorImpl","sourcecode":"lhs != rhs"},"failures":[149,150],"tindex":"a070cec9-2e8e-11e6-9b33-5d276479ecb6","method":{"position":"org.apache.commons.lang3.ArrayUtils:1748","type":"CtMethodImpl","sourcecode":"public static void reverse(final int[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (startIndexInclusive != endIndexExclusive) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return ;\n            } \n            int int = startIndexInclusive < 0 ? 0 : startIndexInclusive;\n            int int = (java.lang.Math.min(array.int, endIndexExclusive)) - 1;\n            int int;\n            while (j > i) {\n                tmp = array[j];\n                array[j] = array[i];\n                array[i] = tmp;\n                j--;\n                i++;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"startIndexInclusive","rhs":"endIndexExclusive"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":30,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}