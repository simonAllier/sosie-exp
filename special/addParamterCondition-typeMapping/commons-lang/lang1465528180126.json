{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":14,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":101,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":16,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSplit":25,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":13,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":60,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":51,"org.apache.commons.lang3.math.NumberUtilsTest.testLang300":44,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":66,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":8,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberFailure_1":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":68,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberFailure_4":47,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNull":2,"org.apache.commons.lang3.time.DateUtilsTest.testAddSeconds":32,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":79,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":91,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":53,"org.apache.commons.lang3.ConversionTest.testHexDigitToBinary":40,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":69,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testByteArrayAsObject":38,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":45,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadField":49,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":102,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":88,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":107,"org.apache.commons.lang3.ArrayUtilsTest.testToString":3,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDuration":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":87,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":97,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":6,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":52,"org.apache.commons.lang3.math.NumberUtilsTest.testIsDigits":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":108,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":75,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":9,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":105,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":92,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":85,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":23,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":56,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstringBetween_StringString":0,"org.apache.commons.lang3.math.NumberUtilsTest.testLANG992":42,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":89,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":93,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":50,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":64,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":94,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":95,"org.apache.commons.lang3.ArrayUtilsTest.testToObject_char":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":82,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":57,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":12,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLANG984":27,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLANG982":26,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":100,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":72,"org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss":48,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":98,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":58,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationWords":31,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstringBetween_StringStringString":1,"org.apache.commons.lang3.time.FastDatePrinterTest.testFormat":55,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":81,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationHMS":28,"org.apache.commons.lang3.ObjectUtilsTest.testConstMethods":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":96,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":76,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":99,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":83,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":90,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":74,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testByteArray":36,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":70,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":20,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testByte":37,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":41,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":7,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSimpleGet":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":77,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationPluralWords":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":62,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":4,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":106,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":59,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":21,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":63},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.JavaVersion:138","type":"CtInvocationImpl","sourcecode":"\"1.3\".equals(nom)"},"failures":[0,1],"tindex":"c55fd13a-2eb8-11e6-8f2c-4f73e675e7a8","method":{"position":"org.apache.commons.lang3.StringUtils:2480","type":"CtMethodImpl","sourcecode":"public static java.lang.String substringBetween(final java.lang.String str, final java.lang.String open, final java.lang.String close) {\n    if (\"1.3\".equals(close)) {\n        {\n            if (((str == null) || (open == null)) || (close == null)) {\n                return null;\n            } \n            final int int = str.indexOf(open);\n            if (start != (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) {\n                final int int = str.indexOf(close, (start + (open.length())));\n                if (end != (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) {\n                    return str.substring((start + (open.length())), end);\n                } \n            } \n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nom":"close"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.text.ParseException","condition":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:187","type":"CtBinaryOperatorImpl","sourcecode":"(tmp.length()) != (duration.length())"},"failures":[],"tindex":"c560948b-2eb8-11e6-8f2c-f9003426ef97","method":{"position":"org.apache.commons.lang3.text.CompositeFormat:112","type":"CtMethodImpl","sourcecode":"public java.lang.String reformat(final java.lang.String input) throws java.text.ParseException {\n    if ((input.length()) != (input.length())) {\n        throw new java.text.ParseException();\n    } else {\n        {\n            return format(parseObject(input));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"duration":"input","tmp":"input"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:631","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[2],"tindex":"c560948c-2eb8-11e6-8f2c-655810989c3f","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:473","type":"CtMethodImpl","sourcecode":"public java.lang.String replace(final java.lang.StringBuffer source) {\n    if (source == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (source == null) {\n                return null;\n            } \n            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(source.length()).append(source);\n            substitute(buf, 0, buf.length());\n            return buf.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"source"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDateParser:119","type":"CtInvocationImpl","sourcecode":"locale.equals(org.apache.commons.lang3.time.FastDateParser.JAPANESE_IMPERIAL)"},"failures":[3],"tindex":"c560bb9d-2eb8-11e6-8f2c-81099332b897","method":{"position":"org.apache.commons.lang3.ArrayUtils:158","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(final java.lang.Object array) {\n    if (array.equals(array)) {\n        {\n            return org.apache.commons.lang3.ArrayUtils.toString(array, \"{}\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"locale":"array","org.apache.commons.lang3.time.FastDateParser.JAPANESE_IMPERIAL":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2373","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(separator))"},"failures":[4,4,5,5,6,7,7,8,8,9,10,11,12,13,13,14,15,16,17,18,19,20,21,22,23],"tindex":"c560e2ae-2eb8-11e6-8f2c-ff1ed4200bbc","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:773","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final char value) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(fieldName)) || (org.apache.commons.lang3.StringUtils.isEmpty(fieldName))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName","separator":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:591","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"c560e2af-2eb8-11e6-8f2c-c1625d56a5f0","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:303","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setContentEnd(final java.lang.String contentEnd) {\n    if (contentEnd == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            super.setContentEnd(contentEnd);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"contentEnd"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:763","type":"CtFieldReadImpl","sourcecode":"objectsTriviallyEqual"},"failures":[24,25,26,27,28,29,30,31],"tindex":"c56109c0-2eb8-11e6-8f2c-7b84afb14349","method":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:126","type":"CtMethodImpl","sourcecode":"public static java.lang.String formatDuration(final long durationMillis, final java.lang.String format, final boolean padWithZeros) {\n    if (padWithZeros) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.lang3.time.DurationFormatUtils.Token[] org.apache.commons.lang3.time.DurationFormatUtils.Token[] = org.apache.commons.lang3.time.DurationFormatUtils.lexx(format);\n            long long = 0;\n            long long = 0;\n            long long = 0;\n            long long = 0;\n            long long = durationMillis;\n            if (org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(tokens, org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n                days = milliseconds / (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.long);\n                milliseconds = milliseconds - (days * (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.long));\n            } \n            if (org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(tokens, org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n                hours = milliseconds / (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.long);\n                milliseconds = milliseconds - (hours * (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.long));\n            } \n            if (org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(tokens, org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n                minutes = milliseconds / (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.long);\n                milliseconds = milliseconds - (minutes * (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.long));\n            } \n            if (org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(tokens, org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n                seconds = milliseconds / (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.long);\n                milliseconds = milliseconds - (seconds * (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.long));\n            } \n            return org.apache.commons.lang3.time.DurationFormatUtils.format(tokens, 0, 0, days, hours, minutes, seconds, milliseconds, padWithZeros);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsTriviallyEqual":"padWithZeros"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1173","type":"CtBinaryOperatorImpl","sourcecode":"rangeStyle == (org.apache.commons.lang3.time.DateUtils.RANGE_MONTH_MONDAY)"},"failures":[32],"tindex":"c56130d1-2eb8-11e6-8f2c-bf5353e36521","method":{"position":"org.apache.commons.lang3.time.DateUtils:488","type":"CtMethodImpl","sourcecode":"public static java.util.Date addSeconds(final java.util.Date date, final int amount) {\n    if (amount == amount) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateUtils.add(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"rangeStyle":"amount","org.apache.commons.lang3.time.DateUtils.RANGE_MONTH_MONDAY":"amount"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1345","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.Class<?>"},"failures":[],"tindex":"c56157e2-2eb8-11e6-8f2c-b3e1793b1b28","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1611","type":"CtMethodImpl","sourcecode":"private static boolean equals(java.lang.reflect.GenericArrayType a, java.lang.reflect.Type t) {\n    if (t instanceof java.lang.Class<?>) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (t instanceof java.lang.reflect.GenericArrayType) && (org.apache.commons.lang3.reflect.TypeUtils.equals(a.getGenericComponentType(), ((java.lang.reflect.GenericArrayType)(t)).getGenericComponentType()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"t"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:818","type":"CtBinaryOperatorImpl","sourcecode":"rhs == null"},"failures":[33,34],"tindex":"c56157e3-2eb8-11e6-8f2c-b386a653c9bf","method":{"position":"org.apache.commons.lang3.ArrayUtils:3001","type":"CtMethodImpl","sourcecode":"public static java.lang.Character[] toObject(final char[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Character[];\n            } \n            final java.lang.Character[] java.lang.Character[] = new java.lang.Character[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = java.lang.Character.valueOf(array[i]);\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"rhs":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:221","type":"CtInvocationImpl","sourcecode":"java.lang.Double.isNaN(a)"},"failures":[35],"tindex":"c5617ef4-2eb8-11e6-8f2c-9b1b2d03b1b7","method":{"position":"org.apache.commons.lang3.ObjectUtils:934","type":"CtMethodImpl","sourcecode":"public static double CONST(final double v) {\n    if (java.lang.Double.isNaN(v)) {\n        {\n            return v;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"v"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:220","type":"CtBinaryOperatorImpl","sourcecode":"lhs != rhs"},"failures":[36,37,38],"tindex":"c561a605-2eb8-11e6-8f2c-ed06eefcac6b","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:606","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final byte value) {\n    if (value != value) {\n        {\n            int = ((int) * (int)) + value;\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"value","rhs":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:910","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[],"tindex":"c561a606-2eb8-11e6-8f2c-2bb3d28a5455","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:943","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n    if (calendar == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendTo(buffer, ((calendar.get(java.util.Calendar.java.util.Calendar.int)) % 100));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"calendar"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:359","type":"CtBinaryOperatorImpl","sourcecode":"((pos1 != pos2) && (pos1 >= 0)) && (pos2 >= 0)"},"failures":[],"tindex":"c561cd17-2eb8-11e6-8f2c-b9a161b8ea87","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2821","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.List<java.lang.String> tokenize(final char[] chars, final int offset, final int count) {\n    if (((offset != offset) && (pos1 >= 0)) && (pos2 >= 0)) {\n        {\n            if (chars == null) {\n                return super.tokenize(org.apache.commons.lang3.text.StrBuilder.this.char[], 0, org.apache.commons.lang3.text.StrBuilder.this.size());\n            } \n            return super.tokenize(chars, offset, count);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pos1":"offset","pos2":"offset"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:194","type":"CtBinaryOperatorImpl","sourcecode":"pattern == null"},"failures":[39],"tindex":"c561cd18-2eb8-11e6-8f2c-5db12d7af963","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1311","type":"CtMethodImpl","sourcecode":"public static boolean isDigits(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n                return false;\n            } \n            for (int int = 0 ; i < (str.length()) ; i++) {\n                if (!(java.lang.Character.isDigit(str.charAt(i)))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pattern":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:467","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isLowerCase(ch)"},"failures":[40],"tindex":"c561f429-2eb8-11e6-8f2c-f1bd1756774f","method":{"position":"org.apache.commons.lang3.Conversion:162","type":"CtMethodImpl","sourcecode":"public static boolean[] hexDigitToBinary(final char hexDigit) {\n    if (java.lang.Character.isLowerCase(hexDigit)) {\n        {\n            switch (hexDigit) {\n                case '0' :\n                    return new boolean[]{ false , false , false , false };\n                case '1' :\n                    return new boolean[]{ true , false , false , false };\n                case '2' :\n                    return new boolean[]{ false , true , false , false };\n                case '3' :\n                    return new boolean[]{ true , true , false , false };\n                case '4' :\n                    return new boolean[]{ false , false , true , false };\n                case '5' :\n                    return new boolean[]{ true , false , true , false };\n                case '6' :\n                    return new boolean[]{ false , true , true , false };\n                case '7' :\n                    return new boolean[]{ true , true , true , false };\n                case '8' :\n                    return new boolean[]{ false , false , false , true };\n                case '9' :\n                    return new boolean[]{ true , false , false , true };\n                case 'a' :\n                case 'A' :\n                    return new boolean[]{ false , true , false , true };\n                case 'b' :\n                case 'B' :\n                    return new boolean[]{ true , true , false , true };\n                case 'c' :\n                case 'C' :\n                    return new boolean[]{ false , false , true , true };\n                case 'd' :\n                case 'D' :\n                    return new boolean[]{ true , false , true , true };\n                case 'e' :\n                case 'E' :\n                    return new boolean[]{ false , true , true , true };\n                case 'f' :\n                case 'F' :\n                    return new boolean[]{ true , true , true , true };\n                default :\n                    throw new java.lang.IllegalArgumentException(((\"Cannot interpret '\" + hexDigit) + \"' as a hexadecimal digit\"));\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"hexDigit"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:1072","type":"CtBinaryOperatorImpl","sourcecode":"cls == null"},"failures":[],"tindex":"c561f42a-2eb8-11e6-8f2c-f1fe1bd2a73e","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1589","type":"CtMethodImpl","sourcecode":"protected java.lang.String getShortClassName(final java.lang.Class<?> cls) {\n    if (cls == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.ClassUtils.getShortClassName(cls);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"cls"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:1128","type":"CtBinaryOperatorImpl","sourcecode":"(className.length()) > 0"},"failures":[41,42,43,44,45,46,47,48],"tindex":"c5621b3b-2eb8-11e6-8f2c-45d7317fad59","method":{"position":"org.apache.commons.lang3.math.NumberUtils:633","type":"CtMethodImpl","sourcecode":"private static boolean isAllZeros(final java.lang.String str) {\n    if ((str.length()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return true;\n            } \n            for (int int = (str.length()) - 1 ; i >= 0 ; i--) {\n                if ((str.charAt(i)) != '0') {\n                    return false;\n                } \n            }\n            return (str.length()) > 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"className":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:103","type":"CtInvocationImpl","sourcecode":"java.lang.Double.isNaN(a)"},"failures":[],"tindex":"c5621b3c-2eb8-11e6-8f2c-1f72c22ffff1","method":{"position":"org.apache.commons.lang3.Validate:987","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"boxing\")\npublic static void inclusiveBetween(double start, double end, double value) {\n    if (java.lang.Double.isNaN(value)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((value < start) || (value > end)) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.java.lang.String, value, start, end));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3162","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[49],"tindex":"c5621b3d-2eb8-11e6-8f2c-e33183b5a6ff","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:360","type":"CtMethodImpl","sourcecode":"public static java.lang.Object readField(final java.lang.reflect.Field field, final java.lang.Object target) throws java.lang.IllegalAccessException {\n    if (target == null) {\n        {\n            return org.apache.commons.lang3.reflect.FieldUtils.readField(field, target, false);\n        }\n    } else {\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"target"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"((((ch0 == 't') || (ch0 == 'T')) && ((ch1 == 'r') || (ch1 == 'R'))) && ((ch2 == 'u') || (ch2 == 'U'))) && ((ch3 == 'e') || (ch3 == 'E'))"},"failures":[],"tindex":"c562424e-2eb8-11e6-8f2c-b70be72bebd8","method":{"position":"org.apache.commons.lang3.CharUtils:421","type":"CtMethodImpl","sourcecode":"public static boolean isAsciiPrintable(final char ch) {\n    if (((((ch == 't') || (ch0 == 'T')) && ((ch == 'r') || (ch1 == 'R'))) && ((ch == 'u') || (ch2 == 'U'))) && ((ch == 'e') || (ch3 == 'E'))) {\n        {\n            return (ch >= 32) && (ch < 127);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch0":"ch","ch2":"ch","ch1":"ch","ch3":"ch"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1548","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"c562424f-2eb8-11e6-8f2c-c190fd6de838","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:150","type":"CtMethodImpl","sourcecode":"static boolean isRegistered(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Set<org.apache.commons.lang3.builder.IDKey> java.util.Set<org.apache.commons.lang3.builder.IDKey> = org.apache.commons.lang3.builder.HashCodeBuilder.getRegistry();\n            return (registry != null) && (registry.contains(new org.apache.commons.lang3.builder.IDKey(value)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1668","type":"CtBinaryOperatorImpl","sourcecode":"calendar == null"},"failures":[50,51,52,53,54,55,56,57,58,59],"tindex":"c5624250-2eb8-11e6-8f2c-c1fcfd767a78","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1194","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n    if (calendar == null) {\n        {\n            int int = (calendar.get(java.util.Calendar.java.util.Calendar.int)) + (calendar.get(java.util.Calendar.java.util.Calendar.int));\n            if (offset < 0) {\n                buffer.append('-');\n                offset = -offset;\n            } else {\n                buffer.append('+');\n            }\n            final int int = offset / ((60 * 60) * 1000);\n            buffer.append(((char)((hours / 10) + '0')));\n            buffer.append(((char)((hours % 10) + '0')));\n            if (boolean) {\n                buffer.append(':');\n            } \n            final int int = (offset / (60 * 1000)) - (60 * hours);\n            buffer.append(((char)((minutes / 10) + '0')));\n            buffer.append(((char)((minutes % 10) + '0')));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"calendar":"calendar"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:448","type":"CtBinaryOperatorImpl","sourcecode":"(nullText) == null"},"failures":[60,60,61,62,62,63,64,65,66,67,68,69,69,70,71,72,73,74,74,75,7,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,97,98,99,100,100,101,102,103,104,105,105,106,107,107,108,8,9,10,11,12,13,14,14,15,16,17,18,19,20,21,22,23],"tindex":"c5626961-2eb8-11e6-8f2c-b7820fcafe4b","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:581","type":"CtMethodImpl","sourcecode":"protected void appendCyclicObject(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final java.lang.Object value) {\n    if (value == null) {\n        {\n            org.apache.commons.lang3.ObjectUtils.identityToString(buffer, value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nullText":"value"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":24,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}