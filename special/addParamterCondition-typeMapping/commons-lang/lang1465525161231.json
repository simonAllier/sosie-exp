{"failureDictionary":{"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":316,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":76,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":100,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_Boolean":179,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":403,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":135,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":356,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":317,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceFirst_String_String":430,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceAll_StrMatcher_String":432,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArrayEqualAsObject":328,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddDash":86,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":414,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":50,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_AD":445,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":69,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparators_Array":224,"org.apache.commons.lang3.SystemUtilsTest.testGetUserHome":275,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":71,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":14,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang708":153,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":325,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":355,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetMatchingAccessibleMethod":362,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":107,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml10":149,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":314,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml11":150,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":357,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":77,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StrBuilder_int_int":181,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":57,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":79,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":412,"org.apache.commons.lang3.RandomStringUtilsTest.testExceptions":377,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":132,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_StrBuilder_int_int":219,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_FormattedString":221,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testExtendedFormats":228,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeEcmaScript":156,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJavaWithSlash":148,"org.apache.commons.lang3.reflect.TypeLiteralTest.testEquals":367,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":117,"org.apache.commons.lang3.reflect.TypeLiteralTest.testBasic":365,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendAll_Array":202,"org.apache.commons.lang3.time.DateUtilsTest.testSetMinutes":254,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":60,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_AD":439,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StringBuilder_int_int":203,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":73,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_int_int_String":431,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":51,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":44,"org.apache.commons.lang3.StringEscapeUtilsTest.testStandaloneAmphersand":143,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSizeStartText":295,"org.apache.commons.lang3.AnnotationUtilsTest.testNonEquivalentAnnotationsOfSameType":249,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StringBuilder":216,"org.apache.commons.lang3.CharUtilsTest.testToString_char":402,"org.apache.commons.lang3.SystemUtilsTest.testOSMatchesName":274,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":279,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryReplace":433,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeMethod":396,"org.apache.commons.lang3.AnnotationUtilsTest.testSameInstance":243,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeUnknownEntity":161,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":416,"org.apache.commons.lang3.StringUtilsTest.testUnescapeSurrogatePairs":139,"org.apache.commons.lang3.CharEncodingTest.testWorksOnJava1_1_8":239,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":351,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":124,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":435,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":417,"org.apache.commons.lang3.CharEncodingTest.testMustBeSupportedJava1_3_1":238,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":97,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":327,"org.apache.commons.lang3.AnnotationUtilsTest.testEquivalence":244,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithNullText":194,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testBuiltInNumberFormat":230,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteAll_StrMatcher":434,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetContentEnd":294,"org.apache.commons.lang3.CharEncodingTest.testWorksOnJava1_2_2":240,"org.apache.commons.lang3.time.FastDateParserTest.testDayOf":436,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparatorsWithNullText":206,"org.apache.commons.lang3.ArrayUtilsTest.testToObject_int":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":123,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_NoAutoboxing":385,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":112,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":128,"org.apache.commons.lang3.CharRangeTest.testSerialization":84,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_ClassArray_ClassArray_NoAutoboxing":387,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":82,"org.apache.commons.lang3.builder.DiffBuilderTest.testStylePassedToDiffResult":323,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":101,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_StrBuilder":195,"org.apache.commons.lang3.ArrayUtilsTest.testReverseInt":424,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testBuiltInDateTimeFormat":225,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":281,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":41,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendSeparator_String_String":201,"org.apache.commons.lang3.BooleanUtilsTest.testXor_primitive_nullInput":404,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang720":154,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetTypeArguments":368,"org.apache.commons.lang3.BooleanUtilsTest.testXor_primitive_validInput_2items":408,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":307,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendSeparator_char":204,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":283,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadRight":218,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHexCharsHtml":158,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeXmlSupplementaryCharacters":159,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceAll_String_String":429,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":320,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":15,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableWriter":375,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_Unboxing_Widening":388,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":33,"org.apache.commons.lang3.time.DateUtilsTest.testIsSameInstant_Date":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":32,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":438,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":110,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":21,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":38,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testArrayList":347,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":122,"org.apache.commons.lang3.builder.DiffBuilderTest.testSimilarObjectIgnoresAppends":326,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testBlank":291,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":121,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StringBuffer":205,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadLeft_int":185,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":350,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_Autoboxing":389,"org.apache.commons.lang3.SystemUtilsTest.testOSMatchesNameAndVersion":267,"org.apache.commons.lang3.builder.DiffResultTest.testNullStyle":287,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":40,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsInstance":369,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_String":381,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_Object":196,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":56,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendAll_Collection":186,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_Object":210,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementByteArray":3,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":26,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":81,"org.apache.commons.lang3.text.WordUtilsTest.testUncapitalize_String":4,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHtml4":144,"org.apache.commons.lang3.builder.DiffBuilderTest.testNullLhs":335,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":344,"org.apache.commons.lang3.SystemUtilsTest.testJavaAwtHeadless":270,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSummaryObjectEndText":305,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":415,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendSeparator_char_int":200,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":413,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":324,"org.apache.commons.lang3.BooleanUtilsTest.testXor_object_validInput_2items":406,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":358,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":133,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable":233,"org.apache.commons.lang3.builder.DiffTest.testGetFieldName":309,"org.apache.commons.lang3.builder.DiffBuilderTest.testSameObjectIgnoresAppends":332,"org.apache.commons.lang3.ArrayUtilsTest.testIsNotEmptyPrimitives":426,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_ClassArray_ClassArray":236,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":363,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":59,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":146,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":65,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":339,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetArraySeparator":303,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":30,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":322,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddCombinations":89,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":252,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":155,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":345,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_AD":443,"org.apache.commons.lang3.builder.DiffTest.testToString":310,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testLinkedList":349,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":331,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsert":217,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetMatchingAccessibleMethod":399,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringIntStringBoolean":173,"org.apache.commons.lang3.event.EventUtilsTest.testBindFilteredEventsToMethod":392,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":75,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":141,"org.apache.commons.lang3.SystemUtilsTest.testIS_OS":268,"org.apache.commons.lang3.AnnotationUtilsTest.testGeneratedAnnotationEquivalentToRealAnnotation":247,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":334,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":130,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StringBuffer_int_int":211,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlHighUnicode":157,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":318,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":352,"org.apache.commons.lang3.text.translate.LookupTranslatorTest.testBasicLookup":136,"org.apache.commons.lang3.time.DateUtilsTest.testAddMilliseconds":263,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":106,"org.apache.commons.lang3.CharSetTest.testConstructor_String_combo":88,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":125,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":338,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":116,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParses":446,"org.apache.commons.lang3.reflect.TypeUtilsTest.testTypesSatisfyVariables":370,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testExtendedAndBuiltInFormats":229,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetFieldNameValueSeparator":299,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_ClassArray_ClassArray_Autoboxing":386,"org.apache.commons.lang3.time.DateUtilsTest.testAddHours":255,"org.apache.commons.lang3.reflect.TypeLiteralTest.testRaw":364,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":346,"org.apache.commons.lang3.StringUtilsIsTest.testIsAsciiPrintable_String":8,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils":379,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testDayOf":442,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_PrimitiveNumber":178,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":25,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSizeEndText":298,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":105,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":418,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":293,"org.apache.commons.lang3.SystemUtilsTest.testConstructor":276,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":361,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":64,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":447,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":63,"org.apache.commons.lang3.time.DateUtilsTest.testSetYears":265,"org.apache.commons.lang3.ConversionTest.testIntToBinary":96,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_String":199,"org.apache.commons.lang3.StringUtilsTest.testDifference_StringString":9,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":292,"org.apache.commons.lang3.SystemUtilsTest.testGetUserDir":271,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":343,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":20,"org.apache.commons.lang3.builder.DiffResultTest.testListIsNonModifiable":286,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":410,"org.apache.commons.lang3.time.DateUtilsTest.testAddSeconds":253,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testNullArgument":398,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHiragana":162,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_StringBuffer_int_int":208,"org.apache.commons.lang3.CharRangeTest.testEquals_Object":85,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":340,"org.apache.commons.lang3.time.DateUtilsTest.testAddMonths":260,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":360,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlVersions":160,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":45,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StrBuilder":197,"org.apache.commons.lang3.time.DateUtilsTest.testSetMonths":261,"org.apache.commons.lang3.SystemUtilsTest.testGetJavaHome":273,"org.apache.commons.lang3.builder.DiffResultTest.testNullRhs":290,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":102,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethodWithEvent":393,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_String":213,"org.apache.commons.lang3.RandomStringUtilsTest.testLang100":378,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":22,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testOverriddenBuiltinFormat":226,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_StringBuilder_int_int":223,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":46,"org.apache.commons.lang3.builder.CompareToBuilderTest.testLongArray":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":129,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_String_int_int":184,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableStream":374,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethod":391,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":72,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetRawType":372,"org.apache.commons.lang3.CharSetTest.testEquals_Object":10,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":74,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringStringarray":95,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":17,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_Widening":234,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairsLang858":140,"org.apache.commons.lang3.StringUtilsTest.testReplace_StringStringArrayStringArray":383,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":111,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":341,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadRight_int":177,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":444,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendSeparator_String":198,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListener":390,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":48,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":36,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_CharArray_int_int":189,"org.apache.commons.lang3.time.DateUtilsTest.testAddWeeks":256,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":321,"org.apache.commons.lang3.BooleanUtilsTest.testXor_primitive_emptyInput":405,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendNewLine":188,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":31,"org.apache.commons.lang3.AnnotationUtilsTest.testBothArgsNull":248,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtml":145,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":342,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":66,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":62,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testLang299":192,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetNullText":297,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":37,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":114,"org.apache.commons.lang3.builder.DiffTest.testCannotModify":311,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":308,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetRootCauseStackTrace_Throwable":376,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendAll_Iterator":190,"org.apache.commons.lang3.StringUtilsTest.testReplace_StringStringArrayStringArrayBoolean":384,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":6,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_Boolean":180,"org.apache.commons.lang3.BooleanUtilsTest.testXor_primitive_validInput_3items":409,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":423,"org.apache.commons.lang3.AnnotationUtilsTest.testOneArgNull":241,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":359,"org.apache.commons.lang3.ArrayUtilsTest.testReverseByteRange":425,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":164,"org.apache.commons.lang3.reflect.TypeUtilsTest.testDetermineTypeVariableAssignments":371,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":319,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":337,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_DefaultUnboxing_Widening":235,"org.apache.commons.lang3.builder.DiffResultTest.testNullList":284,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_FormattedString":209,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":119,"org.apache.commons.lang3.SystemUtilsTest.testJavaVersionMatches":266,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":68,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":53,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":49,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_String_int_int":214,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_3Part":373,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairs":138,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":419,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeStaticMethod":394,"org.apache.commons.lang3.StringUtilsTest.testToString":231,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":411,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":70,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testBlank":277,"org.apache.commons.lang3.BooleanUtilsTest.testXor_object_validInput_3items":407,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":120,"org.apache.commons.lang3.builder.DiffResultTest.testIterator":288,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_StringBuffer":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":131,"org.apache.commons.lang3.time.DateUtilsTest.testSetHours":264,"org.apache.commons.lang3.builder.DiffResultTest.testNoDifferencesString":285,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":35,"org.apache.commons.lang3.SystemUtilsTest.testGetJavaIoTmpDir":269,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":306,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":421,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":55,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang313":152,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":313,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":43,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparators_Collection":175,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":109,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":315,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":422,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_CharArray":222,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":280,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":333,"org.apache.commons.lang3.reflect.TypeLiteralTest.testTyped":366,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":134,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":39,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":330,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceFirst_StrMatcher_String":428,"org.apache.commons.lang3.StringUtilsTest.testToEncodedString":232,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":353,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":441,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlSupplementaryCharacters":151,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":282,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":16,"org.apache.commons.lang3.AnnotationUtilsTest.testAnnotationsOfDifferingTypes":245,"org.apache.commons.lang3.time.DateUtilsTest.testAddYears":257,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":329,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendSeparator_char_char":191,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testCopyOnWriteArrayList":348,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":47,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfFloatWithStartIndex":400,"org.apache.commons.lang3.text.translate.LookupTranslatorTest.testLang882":137,"org.apache.commons.lang3.builder.DiffResultTest.testNullLhs":289,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectAtIndex":382,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":23,"org.apache.commons.lang3.ArrayUtilsTest.testToString":237,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetContentStart":296,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_CharArray_int_int":182,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":27,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringInt":174,"org.apache.commons.lang3.CharUtilsTest.testIsAsciiPrintable_char":7,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":278,"org.apache.commons.lang3.CharSetTest.testSerialization":87,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendPadding":212,"org.apache.commons.lang3.SystemUtilsTest.testIS_JAVA":272,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddNegate":91,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSummaryObjectStartText":301,"org.apache.commons.lang3.ArrayUtilsTest.testReverseChar":380,"org.apache.commons.lang3.AnnotationUtilsTest.testHashCode":246,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":42,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteFirst_StrMatcher":427,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_PrimitiveNumber":215,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_AD":437,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":98,"org.apache.commons.lang3.CharSetTest.testStatics":92,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":142,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparators_Iterator":193,"org.apache.commons.lang3.builder.DiffTest.testGetType":312,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":354,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":58,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadLeft":183,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":52,"org.apache.commons.lang3.text.StrTokenizerTest.test8":172,"org.apache.commons.lang3.time.DateUtilsTest.testRound":251,"org.apache.commons.lang3.text.StrTokenizerTest.test5":169,"org.apache.commons.lang3.text.StrTokenizerTest.test4":168,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":126,"org.apache.commons.lang3.text.StrTokenizerTest.test7":171,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":127,"org.apache.commons.lang3.text.StrTokenizerTest.test6":170,"org.apache.commons.lang3.text.StrTokenizerTest.test1":165,"org.apache.commons.lang3.text.StrTokenizerTest.test3":167,"org.apache.commons.lang3.text.StrTokenizerTest.test2":166,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":113,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetFieldSeparator":302,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":108,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml":163,"org.apache.commons.lang3.AnnotationUtilsTest.testIsValidAnnotationMemberType":250,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":99,"org.apache.commons.lang3.StringUtilsTest.testCaseFunctions":2,"org.apache.commons.lang3.time.DateUtilsTest.testSetDays":262,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_StringBuilder":187,"org.apache.commons.lang3.reflect.MethodUtilsTest.testNullArgument":395,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJson":147,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":29,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":19,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveShortArray":93,"org.apache.commons.lang3.StringUtilsTest.testReverse_String":1,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetArrayEnd":300,"org.apache.commons.lang3.builder.DiffBuilderTest.testNullRhs":336,"org.apache.commons.lang3.time.FastDateParserTest.testParses":440,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":28,"org.apache.commons.lang3.time.DateUtilsTest.testTruncateLang59":258,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_CharArray":220,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testBuiltInChoiceFormat":227,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetArrayStart":304,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringString":94,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":83,"org.apache.commons.lang3.CharSetTest.testConstructor_String_comboNegated":90,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfFloat":401,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":118,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":242,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeConstructor":397,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":420,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsertWithNullText":176,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":115,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendSeparator_String_int":207,"org.apache.commons.lang3.time.DateUtilsTest.testSetSeconds":259,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":13},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:915","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[0],"tindex":"bdf83c23-2eb1-11e6-a381-89cc9568336b","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:687","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final long[] lhs, final long[] rhs) {\n    if (lhs == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == null) {\n                int = -1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (rhs == null) {\n                int = +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                int = (lhs.int) < (rhs.int) ? -1 : +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && ((int) == 0) ; i++) {\n                append(lhs[i], rhs[i]);\n            }\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"lhs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:634","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[1],"tindex":"bdf8ff74-2eb1-11e6-a381-bb36c0e6f923","method":{"position":"org.apache.commons.lang3.StringUtils:6283","type":"CtMethodImpl","sourcecode":"public static java.lang.String reverse(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return null;\n            } \n            return new java.lang.StringBuilder(str).reverse().toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:1009","type":"CtBinaryOperatorImpl","sourcecode":"toString != null"},"failures":[2],"tindex":"bdf92685-2eb1-11e6-a381-9b0ca3d995e7","method":{"position":"org.apache.commons.lang3.StringUtils:5724","type":"CtMethodImpl","sourcecode":"public static java.lang.String uncapitalize(final java.lang.String str) {\n    if (str != null) {\n        {\n            int int;\n            if ((str == null) || ((strLen = str.length()) == 0)) {\n                return str;\n            } \n            char char = str.charAt(0);\n            if (java.lang.Character.isLowerCase(firstChar)) {\n                return str;\n            } \n            return new java.lang.StringBuilder(strLen).append(java.lang.Character.toLowerCase(firstChar)).append(str.substring(1)).toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toString":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2439","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[3],"tindex":"bdf92686-2eb1-11e6-a381-1de0645703b1","method":{"position":"org.apache.commons.lang3.ArrayUtils:5355","type":"CtMethodImpl","sourcecode":"public static byte[] removeElements(final byte[] array, final byte... values) {\n    if (array == null) {\n        {\n            if ((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            final java.util.HashMap<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt> java.util.HashMap<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt> = new java.util.HashMap<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt>(values.int);\n            for (final byte byte : values) {\n                final java.lang.Byte java.lang.Byte = java.lang.Byte.valueOf(v);\n                final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = occurrences.get(boxed);\n                if (count == null) {\n                    occurrences.put(boxed, new org.apache.commons.lang3.mutable.MutableInt(1));\n                } else {\n                    count.increment();\n                }\n            }\n            final java.util.BitSet java.util.BitSet = new java.util.BitSet();\n            for (final java.util.Map.Entry<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt> java.util.Map.Entry<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt> : occurrences.entrySet()) {\n                final java.lang.Byte java.lang.Byte = e.getKey();\n                int int = 0;\n                for (int int = 0, int int = e.getValue().intValue() ; i < ct ; i++) {\n                    found = org.apache.commons.lang3.ArrayUtils.indexOf(array, v.byteValue(), found);\n                    if (found < 0) {\n                        break;\n                    } \n                    toRemove.set((found++));\n                }\n            }\n            return ((byte[])(org.apache.commons.lang3.ArrayUtils.removeAll(array, toRemove)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:591","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[4],"tindex":"bdf94d97-2eb1-11e6-a381-777136342b9e","method":{"position":"org.apache.commons.lang3.text.WordUtils:380","type":"CtMethodImpl","sourcecode":"public static java.lang.String uncapitalize(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.text.WordUtils.uncapitalize(str, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3662","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[5,6],"tindex":"bdf974a8-2eb1-11e6-a381-ef3c3c8ddc4f","method":{"position":"org.apache.commons.lang3.ArrayUtils:3137","type":"CtMethodImpl","sourcecode":"public static java.lang.Integer[] toObject(final int[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Integer[];\n            } \n            final java.lang.Integer[] java.lang.Integer[] = new java.lang.Integer[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = java.lang.Integer.valueOf(array[i]);\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.JavaVersion:148","type":"CtInvocationImpl","sourcecode":"\"1.8\".equals(nom)"},"failures":[],"tindex":"bdf974a9-2eb1-11e6-a381-f3f5d409e134","method":{"position":"org.apache.commons.lang3.StringUtils:443","type":"CtMethodImpl","sourcecode":"public static java.lang.String trimToNull(final java.lang.String str) {\n    if (\"1.8\".equals(str)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.String java.lang.String = org.apache.commons.lang3.StringUtils.trim(str);\n            return org.apache.commons.lang3.StringUtils.isEmpty(ts) ? null : ts;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nom":"str"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"focus == null"},"failures":[],"tindex":"bdf99bba-2eb1-11e6-a381-e973544a0abf","method":{"position":"org.apache.commons.lang3.time.FastDateParser:139","type":"CtMethodImpl","sourcecode":"private void init(java.util.Calendar definingCalendar) {\n    if (definingCalendar == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            final java.util.List<org.apache.commons.lang3.time.FastDateParser.Strategy> java.util.List<org.apache.commons.lang3.time.FastDateParser.Strategy> = new java.util.ArrayList<org.apache.commons.lang3.time.FastDateParser.Strategy>();\n            final java.util.regex.Matcher java.util.regex.Matcher = org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.java.util.regex.Pattern.matcher(java.lang.String);\n            if (!(patternMatcher.lookingAt())) {\n                throw new java.lang.IllegalArgumentException(((\"Illegal pattern character '\" + (java.lang.String.charAt(patternMatcher.regionStart()))) + \"'\"));\n            } \n            java.lang.String = patternMatcher.group();\n            org.apache.commons.lang3.time.FastDateParser.Strategy org.apache.commons.lang3.time.FastDateParser.Strategy = getStrategy(java.lang.String, definingCalendar);\n            for ( ;  ; ) {\n                patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd());\n                if (!(patternMatcher.lookingAt())) {\n                    org.apache.commons.lang3.time.FastDateParser.Strategy = null;\n                    break;\n                } \n                final java.lang.String java.lang.String = patternMatcher.group();\n                org.apache.commons.lang3.time.FastDateParser.Strategy = getStrategy(nextFormatField, definingCalendar);\n                if (currentStrategy.addRegex(org.apache.commons.lang3.time.FastDateParser.this, regex)) {\n                    collector.add(currentStrategy);\n                } \n                java.lang.String = nextFormatField;\n                currentStrategy = org.apache.commons.lang3.time.FastDateParser.Strategy;\n            }\n            if ((patternMatcher.regionStart()) != (patternMatcher.regionEnd())) {\n                throw new java.lang.IllegalArgumentException((((\"Failed to parse \\\"\" + (java.lang.String)) + \"\\\" ; gave up at index \") + (patternMatcher.regionStart())));\n            } \n            if (currentStrategy.addRegex(org.apache.commons.lang3.time.FastDateParser.this, regex)) {\n                collector.add(currentStrategy);\n            } \n            java.lang.String = null;\n            org.apache.commons.lang3.time.FastDateParser.Strategy[] = collector.toArray(new org.apache.commons.lang3.time.FastDateParser.Strategy[collector.size()]);\n            java.util.regex.Pattern = java.util.regex.Pattern.compile(regex.toString());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"focus":"definingCalendar"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1693","type":"CtBinaryOperatorImpl","sourcecode":"nBytes >= 8"},"failures":[],"tindex":"bdf9e9db-2eb1-11e6-a381-9591358b1255","method":{"position":"org.apache.commons.lang3.ArrayUtils:2124","type":"CtMethodImpl","sourcecode":"public static int indexOf(final int[] array, final int valueToFind, int startIndex) {\n    if (startIndex >= 8) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                startIndex = 0;\n            } \n            for (int int = startIndex ; i < (array.int) ; i++) {\n                if (valueToFind == (array[i])) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nBytes":"startIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:111","type":"CtBinaryOperatorImpl","sourcecode":"(!(java.lang.Character.isUpperCase(ch1))) || (!(java.lang.Character.isUpperCase(ch2)))"},"failures":[7,8],"tindex":"bdf9e9dc-2eb1-11e6-a381-272d5aafe42c","method":{"position":"org.apache.commons.lang3.CharUtils:421","type":"CtMethodImpl","sourcecode":"public static boolean isAsciiPrintable(final char ch) {\n    if ((!(java.lang.Character.isUpperCase(ch))) || (!(java.lang.Character.isUpperCase(ch)))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (ch >= 32) && (ch < 127);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch2":"ch","ch1":"ch"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharEncoding:95","type":"CtBinaryOperatorImpl","sourcecode":"name == null"},"failures":[9],"tindex":"bdfa10ed-2eb1-11e6-a381-7b2019f1f453","method":{"position":"org.apache.commons.lang3.StringUtils:6501","type":"CtMethodImpl","sourcecode":"public static java.lang.String difference(final java.lang.String str1, final java.lang.String str2) {\n    if (str1 == null) {\n        {\n            if (str1 == null) {\n                return str2;\n            } \n            if (str2 == null) {\n                return str1;\n            } \n            final int int = org.apache.commons.lang3.StringUtils.indexOfDifference(str1, str2);\n            if (at == (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            return str2.substring(at);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"str1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3994","type":"CtBinaryOperatorImpl","sourcecode":"separator == null"},"failures":[10],"tindex":"bdfa10ee-2eb1-11e6-a381-495c1499d00e","method":{"position":"org.apache.commons.lang3.CharSet:246","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.lang3.CharSet.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.lang3.CharSet) == false) {\n                return false;\n            } \n            final org.apache.commons.lang3.CharSet org.apache.commons.lang3.CharSet = ((org.apache.commons.lang3.CharSet)(obj));\n            return java.util.Set<org.apache.commons.lang3.CharRange>.equals(other.java.util.Set<org.apache.commons.lang3.CharRange>);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"separator":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"focus == null"},"failures":[],"tindex":"bdfa37ff-2eb1-11e6-a381-6376e96cf03d","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:600","type":"CtMethodImpl","sourcecode":"protected java.lang.StringBuffer applyRules(final java.util.Calendar calendar, final java.lang.StringBuffer buf) {\n    if (calendar == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.FastDatePrinter.applyRules(calendar, buf);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"focus":"calendar"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:201","type":"CtBinaryOperatorImpl","sourcecode":"(date1 == null) || (date2 == null)"},"failures":[11],"tindex":"bdfa3800-2eb1-11e6-a381-c94e1520ec9b","method":{"position":"org.apache.commons.lang3.time.DateUtils:200","type":"CtMethodImpl","sourcecode":"public static boolean isSameInstant(final java.util.Date date1, final java.util.Date date2) {\n    if ((date1 == null) || (date1 == null)) {\n        {\n            if ((date1 == null) || (date2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            return (date1.getTime()) == (date2.getTime());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date2":"date1","date1":"date1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:83","type":"CtBinaryOperatorImpl","sourcecode":"(ex == null) || ((ex.getCause()) == null)"},"failures":[],"tindex":"bdfa5f11-2eb1-11e6-a381-891c2e8f060e","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:640","type":"CtMethodImpl","sourcecode":"static java.util.List<java.lang.String> getStackFrameList(final java.lang.Throwable t) {\n    if ((t == null) || ((ex.getCause()) == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.String java.lang.String = org.apache.commons.lang3.exception.ExceptionUtils.getStackTrace(t);\n            final java.lang.String java.lang.String = org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.java.lang.String;\n            final java.util.StringTokenizer java.util.StringTokenizer = new java.util.StringTokenizer(stackTrace , linebreak);\n            final java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n            boolean boolean = false;\n            while (frames.hasMoreTokens()) {\n                final java.lang.String java.lang.String = frames.nextToken();\n                final int int = token.indexOf(\"at\");\n                if ((at != (-1)) && (token.substring(0, at).trim().isEmpty())) {\n                    traceStarted = true;\n                    list.add(token);\n                } else if (traceStarted) {\n                    break;\n                } \n            }\n            return list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ex":"t"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:611","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[12],"tindex":"bdfa5f12-2eb1-11e6-a381-fb1a1c244378","method":{"position":"org.apache.commons.lang3.text.StrBuilder:902","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendln(final java.lang.StringBuffer str) {\n    if (str == null) {\n        {\n            return append(str).appendNewLine();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:978","type":"CtBinaryOperatorImpl","sourcecode":"rhs == null"},"failures":[],"tindex":"bdfa8623-2eb1-11e6-a381-e3bf7f33d486","method":{"position":"org.apache.commons.lang3.Conversion:283","type":"CtMethodImpl","sourcecode":"public static char binaryToHexDigit(final boolean[] src) {\n    if (src == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.Conversion.binaryToHexDigit(src, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"rhs":"src"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:1072","type":"CtBinaryOperatorImpl","sourcecode":"cls == null"},"failures":[],"tindex":"bdfa8624-2eb1-11e6-a381-b7bb4a96b028","method":{"position":"org.apache.commons.lang3.AnnotationUtils:72","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.lang.String getShortClassName(final java.lang.Class<?> cls) {\n    if (cls == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Class<? extends java.lang.annotation.Annotation> java.lang.Class<? extends java.lang.annotation.Annotation> = null;\n            for (final java.lang.Class<?> java.lang.Class<?> : org.apache.commons.lang3.ClassUtils.getAllInterfaces(cls)) {\n                if (java.lang.annotation.Annotation.java.lang.annotation.Annotation.java.lang.Class.isAssignableFrom(iface)) {\n                    @java.lang.SuppressWarnings(value = \"unchecked\")\n                    final java.lang.Class<? extends java.lang.annotation.Annotation> java.lang.Class<? extends java.lang.annotation.Annotation> = ((java.lang.Class<? extends java.lang.annotation.Annotation>)(iface));\n                    annotationType = found;\n                    break;\n                } \n            }\n            return new java.lang.StringBuilder((annotationType == null ? \"\" : annotationType.getName())).insert(0, '@').toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"cls"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:186","type":"CtBinaryOperatorImpl","sourcecode":"value != null"},"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,25,26,26,27,28,28,29,30,30,31,31,32,33,34,35,36,36,37,37,38,38,39,39,40,41,42,42,43,43,44,44,45,46,47,48,49,50,51,52,53,53,54,55,55,56,56,57,58,59,60,60,61,61,62,63,63,64,65,65,66,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83],"tindex":"bdfa8625-2eb1-11e6-a381-3f0481ffb441","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:438","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final java.lang.Object value, final java.lang.Boolean fullDetail) {\n    if (value != null) {\n        {\n            appendFieldStart(buffer, fieldName);\n            if (value == null) {\n                appendNullText(buffer, fieldName);\n            } else {\n                appendInternal(buffer, fieldName, value, isFullDetail(fullDetail));\n            }\n            appendFieldEnd(buffer, fieldName);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1313","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.GenericArrayType"},"failures":[84,85,86,87,10,88,89,90,91,92],"tindex":"bdfaad36-2eb1-11e6-a381-05f0f7ae85ab","method":{"position":"org.apache.commons.lang3.CharRange:208","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof java.lang.reflect.GenericArrayType) {\n        {\n            if (obj == (org.apache.commons.lang3.CharRange.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.lang3.CharRange) == false) {\n                return false;\n            } \n            final org.apache.commons.lang3.CharRange org.apache.commons.lang3.CharRange = ((org.apache.commons.lang3.CharRange)(obj));\n            return (((char) == (other.char)) && ((char) == (other.char))) && ((boolean) == (other.boolean));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:495","type":"CtBinaryOperatorImpl","sourcecode":"decPos > (-1)"},"failures":[93],"tindex":"bdfaad37-2eb1-11e6-a381-41ed6fe5cc1a","method":{"position":"org.apache.commons.lang3.ArrayUtils:5132","type":"CtMethodImpl","sourcecode":"public static short[] remove(final short[] array, final int index) {\n    if (index > (-1)) {\n        {\n            return ((short[])(org.apache.commons.lang3.ArrayUtils.remove(((java.lang.Object)(array)), index)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"decPos":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:7059","type":"CtBinaryOperatorImpl","sourcecode":"(m1.length()) != (m2.length())"},"failures":[94,95],"tindex":"bdfaad38-2eb1-11e6-a381-67383a0183b2","method":{"position":"org.apache.commons.lang3.CharSetUtils:205","type":"CtMethodImpl","sourcecode":"public static java.lang.String delete(final java.lang.String str, final java.lang.String... set) {\n    if ((str.length()) != (str.length())) {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.CharSetUtils.deepEmpty(set))) {\n                return str;\n            } \n            return org.apache.commons.lang3.CharSetUtils.modify(str, set, false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"m1":"str","m2":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:263","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(cs)"},"failures":[],"tindex":"bdfad449-2eb1-11e6-a381-33bcf276c03a","method":{"position":"org.apache.commons.lang3.Validate:848","type":"CtMethodImpl","sourcecode":"public static void matchesPattern(final java.lang.CharSequence input, final java.lang.String pattern) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(input)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((java.util.regex.Pattern.matches(pattern, input)) == false) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.java.lang.String, input, pattern));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"input"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2373","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(separator))"},"failures":[],"tindex":"bdfad44a-2eb1-11e6-a381-f180850b2f36","method":{"position":"org.apache.commons.lang3.ObjectUtils:396","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static java.lang.String toString(final java.lang.Object obj) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(obj)) || (org.apache.commons.lang3.StringUtils.isEmpty(obj))) {\n        {\n            return obj == null ? \"\" : obj.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"obj","separator":"obj"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:599","type":"CtBinaryOperatorImpl","sourcecode":"k == 31"},"failures":[96],"tindex":"bdfad44b-2eb1-11e6-a381-d90ca782925e","method":{"position":"org.apache.commons.lang3.Conversion:1584","type":"CtMethodImpl","sourcecode":"public static boolean[] intToBinary(final int src, final int srcPos, final boolean[] dst, final int dstPos, final int nBools) {\n    if (nBools == 31) {\n        {\n            if (0 == nBools) {\n                return dst;\n            } \n            if (((nBools - 1) + srcPos) >= 32) {\n                throw new java.lang.IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 32\");\n            } \n            int int = 0;\n            for (int int = 0 ; i < nBools ; i++) {\n                shift = (i * 1) + srcPos;\n                dst[(dstPos + i)] = (1 & (src >> shift)) != 0;\n            }\n            return dst;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"k":"nBools"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:452","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[97,98,99,100,100,101,102,103,104,105,106,107,108,109],"tindex":"bdfafb5c-2eb1-11e6-a381-c5b98ce4616c","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:974","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder appendSuper(final java.lang.String superToString) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(superToString)) {\n        {\n            if (superToString != null) {\n                org.apache.commons.lang3.builder.ToStringStyle.appendSuper(java.lang.StringBuffer, superToString);\n            } \n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"superToString"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:463","type":"CtUnaryOperatorImpl","sourcecode":"!(lhsClass.isArray())"},"failures":[110,111,25,26,26,27,27,28,29,29,30,31,32,33,33,34,34,35,36,37,38,112,39,40,40,41,41,113,114,115,116,116,117,118,119,120,120,42,121,122,123,123,124,124,125,125,43,44,45,45,46,46,47,47,48,49,50,50,51,51,52,126,127,128,128,129,129,130,130,53,54,54,55,56,57,58,58,59,59,131,132,132,133,134,134,60,135,61,62,62,63,64,64,65,100,101,101,102,102,103,104,104,105,105,66,67,67],"tindex":"bdfafb5d-2eb1-11e6-a381-b1326b8b40e7","method":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:665","type":"CtMethodImpl","sourcecode":"public void setUpToClass(final java.lang.Class<?> clazz) {\n    if (!(clazz.isArray())) {\n        {\n            if (clazz != null) {\n                final java.lang.Object java.lang.Object = getObject();\n                if ((object != null) && ((clazz.isInstance(object)) == false)) {\n                    throw new java.lang.IllegalArgumentException(\"Specified class is not a superclass of the object\");\n                } \n            } \n            org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.java.lang.Class<?> = clazz;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhsClass":"clazz"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:530","type":"CtBinaryOperatorImpl","sourcecode":"i == (count - 1)"},"failures":[],"tindex":"bdfb226e-2eb1-11e6-a381-138cd805be10","method":{"position":"org.apache.commons.lang3.Conversion:1429","type":"CtMethodImpl","sourcecode":"public static java.lang.String intToHex(final int src, final int srcPos, final java.lang.String dstInit, final int dstPos, final int nHexs) {\n    if (dstPos == (dstPos - 1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (0 == nHexs) {\n                return dstInit;\n            } \n            if ((((nHexs - 1) * 4) + srcPos) >= 32) {\n                throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+srcPos is greather or equal to than 32\");\n            } \n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(dstInit);\n            int int = 0;\n            int int = sb.length();\n            for (int int = 0 ; i < nHexs ; i++) {\n                shift = (i * 4) + srcPos;\n                final int int = 15 & (src >> shift);\n                if ((dstPos + i) == append) {\n                    ++append;\n                    sb.append(org.apache.commons.lang3.Conversion.intToHexDigit(bits));\n                } else {\n                    sb.setCharAt((dstPos + i), org.apache.commons.lang3.Conversion.intToHexDigit(bits));\n                }\n            }\n            return sb.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"dstPos","i":"dstPos"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2442","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[],"tindex":"bdfb497f-2eb1-11e6-a381-eb85b671fb6a","method":{"position":"org.apache.commons.lang3.Conversion:1255","type":"CtMethodImpl","sourcecode":"public static short[] intToShortArray(final int src, final int srcPos, final short[] dst, final int dstPos, final int nShorts) {\n    if (nShorts < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (0 == nShorts) {\n                return dst;\n            } \n            if ((((nShorts - 1) * 16) + srcPos) >= 32) {\n                throw new java.lang.IllegalArgumentException(\"(nShorts-1)*16+srcPos is greather or equal to than 32\");\n            } \n            int int = 0;\n            for (int int = 0 ; i < nShorts ; i++) {\n                shift = (i * 16) + srcPos;\n                dst[(dstPos + i)] = ((short)(65535 & (src >> shift)));\n            }\n            return dst;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"nShorts"},"type":"special","returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:962","type":"CtBinaryOperatorImpl","sourcecode":"field == (java.util.Calendar.MILLISECOND)"},"failures":[136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164],"tindex":"bdfb4980-2eb1-11e6-a381-29cf19e8f15c","method":{"position":"org.apache.commons.lang3.text.translate.LookupTranslator:69","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int translate(final java.lang.CharSequence input, final int index, final java.io.Writer out) throws java.io.IOException {\n    if (index == index) {\n        throw new java.io.IOException();\n    } else {\n        {\n            int int = int;\n            if ((index + (int)) > (input.length())) {\n                max = (input.length()) - index;\n            } \n            for (int int = max ; i >= (int) ; i--) {\n                final java.lang.CharSequence java.lang.CharSequence = input.subSequence(index, (index + i));\n                final java.lang.CharSequence java.lang.CharSequence = java.util.HashMap<java.lang.String, java.lang.CharSequence>.get(subSeq.toString());\n                if (result != null) {\n                    out.write(result.toString());\n                    return i;\n                } \n            }\n            return 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"index","java.util.Calendar.MILLISECOND":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:656","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,12,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,13,13,277,277,278,278,14,14,15,15,16,16,110,110,97,97,17,17,279,279,280,280,18,18,19,19,20,20,281,281,98,98,282,283,284,285,286,287,288,289,290,21,21,291,291,292,292,22,22,23,23,24,24,293,293,99,99,294,295,296,297,298,299,300,301,302,303,304,305,111,111,25,25,26,26,27,27,28,28,29,29,30,30,31,31,32,32,33,33,34,34,35,35,36,36,37,37,38,38,112,112,39,39,40,40,41,41,113,113,114,114,115,115,116,116,117,117,118,118,119,119,120,120,42,42,121,121,122,122,123,123,124,124,125,125,43,43,44,44,45,45,46,46,47,47,48,48,49,49,50,50,51,51,52,52,126,126,127,127,128,128,129,129,130,130,53,53,54,54,55,55,56,56,57,57,58,58,59,59,131,131,132,132,133,133,134,134,60,60,135,135,61,61,62,62,63,63,64,64,65,65,100,100,101,101,102,102,103,103,104,104,105,105,66,66,67,67,68,68,306,306,307,307,69,69,70,70,71,71,308,308,106,106,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,6,333,334,335,336,337,72,338,339,73,74,75,340,107,76,76,341,341,342,342,77,77,78,78,79,79,343,343,108,108,80,80,344,344,345,345,81,81,82,82,83,83,346,346,109,109,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,164,370,371,372,373,374,375,376],"tindex":"bdfb7091-2eb1-11e6-a381-c382f4124c7b","method":{"position":"org.apache.commons.lang3.SystemUtils:1327","type":"CtMethodImpl","sourcecode":"private static boolean getOSMatchesName(final java.lang.String osNamePrefix) {\n    if (osNamePrefix == null) {\n        {\n            return org.apache.commons.lang3.SystemUtils.isOSNameMatch(org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.java.lang.String, osNamePrefix);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"osNamePrefix"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:799","type":"CtBinaryOperatorImpl","sourcecode":"nestedVarCount == 0"},"failures":[377,378,379],"tindex":"bdfb97a2-2eb1-11e6-a381-41151accc151","method":{"position":"org.apache.commons.lang3.RandomStringUtils:68","type":"CtMethodImpl","sourcecode":"public static java.lang.String random(final int count) {\n    if (count == 0) {\n        {\n            return org.apache.commons.lang3.RandomStringUtils.random(count, false, false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nestedVarCount":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSequenceUtils:124","type":"CtBinaryOperatorImpl","sourcecode":"start >= sz"},"failures":[],"tindex":"bdfb97a3-2eb1-11e6-a381-35d6babbf154","method":{"position":"org.apache.commons.lang3.StringUtils:1371","type":"CtMethodImpl","sourcecode":"public static int lastIndexOfIgnoreCase(final java.lang.CharSequence str, final java.lang.CharSequence searchStr, int startPos) {\n    if (startPos >= startPos) {\n        {\n            if ((str == null) || (searchStr == null)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            if (startPos > ((str.length()) - (searchStr.length()))) {\n                startPos = (str.length()) - (searchStr.length());\n            } \n            if (startPos < 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            if ((searchStr.length()) == 0) {\n                return startPos;\n            } \n            for (int int = startPos ; i >= 0 ; i--) {\n                if (org.apache.commons.lang3.CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, searchStr.length())) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sz":"startPos","start":"startPos"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2333","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"bdfbbeb4-2eb1-11e6-a381-f32f2bb55b1c","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:150","type":"CtMethodImpl","sourcecode":"static boolean isRegistered(final java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Set<org.apache.commons.lang3.builder.IDKey> java.util.Set<org.apache.commons.lang3.builder.IDKey> = org.apache.commons.lang3.builder.HashCodeBuilder.getRegistry();\n            return (registry != null) && (registry.contains(new org.apache.commons.lang3.builder.IDKey(value)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5623","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))"},"failures":[380],"tindex":"bdfbbeb5-2eb1-11e6-a381-9b3f6bea9b22","method":{"position":"org.apache.commons.lang3.ArrayUtils:1491","type":"CtMethodImpl","sourcecode":"public static void reverse(final char[] array) {\n    if ((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(array))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return ;\n            } \n            org.apache.commons.lang3.ArrayUtils.reverse(array, 0, array.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array","values":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6505","type":"CtBinaryOperatorImpl","sourcecode":"str2 == null"},"failures":[],"tindex":"bdfbe5c6-2eb1-11e6-a381-ed9a04cb8905","method":{"position":"org.apache.commons.lang3.time.DateFormatUtils:200","type":"CtMethodImpl","sourcecode":"public static java.lang.String format(final java.util.Calendar calendar, final java.lang.String pattern) {\n    if (pattern == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateFormatUtils.format(calendar, pattern, null, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str2":"pattern"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1072","type":"CtBinaryOperatorImpl","sourcecode":"suffix == null"},"failures":[],"tindex":"bdfbe5c7-2eb1-11e6-a381-814defef674c","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:90","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.lang3.time.FastDateFormat createInstance(final java.lang.String pattern, final java.util.TimeZone timeZone, final java.util.Locale locale) {\n    if (pattern == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.lang3.time.FastDateFormat(pattern , timeZone , locale);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"suffix":"pattern"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:435","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[38,38,44,44,45,46,47,48,49,50,51,52,67,67],"tindex":"bdfbe5c8-2eb1-11e6-a381-4554fb212b95","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1358","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final float[] array) {\n    if (array == null) {\n        {\n            buffer.append(java.lang.String);\n            for (int int = 0 ; i < (array.int) ; i++) {\n                if (i > 0) {\n                    buffer.append(java.lang.String);\n                } \n                appendDetail(buffer, fieldName, array[i]);\n            }\n            buffer.append(java.lang.String);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:425","type":"CtBinaryOperatorImpl","sourcecode":"customPattern != null"},"failures":[381],"tindex":"bdfc0cd9-2eb1-11e6-a381-971583645a65","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2445","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final java.lang.String str) {\n    if (str != null) {\n        {\n            return lastIndexOf(str, ((int) - 1));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"customPattern":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:768","type":"CtBinaryOperatorImpl","sourcecode":"(comparison) != 0"},"failures":[382],"tindex":"bdfc0cda-2eb1-11e6-a381-b379c6206d12","method":{"position":"org.apache.commons.lang3.ArrayUtils:4513","type":"CtMethodImpl","sourcecode":"public static float[] add(final float[] array, final int index, final float element) {\n    if (index != 0) {\n        {\n            return ((float[])(org.apache.commons.lang3.ArrayUtils.add(array, index, java.lang.Float.valueOf(element), java.lang.Float.java.lang.Float.java.lang.Class<java.lang.Float>)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparison":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1374","type":"CtBinaryOperatorImpl","sourcecode":"(p.getOwnerType()) == null"},"failures":[],"tindex":"bdfc0cdb-2eb1-11e6-a381-1bfcdbedd02d","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1780","type":"CtMethodImpl","sourcecode":"private static java.lang.String parameterizedTypeToString(java.lang.reflect.ParameterizedType p) {\n    if ((p.getOwnerType()) == null) {\n        {\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            final java.lang.reflect.Type java.lang.reflect.Type = p.getOwnerType();\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(p.getRawType()));\n            final java.lang.reflect.Type[] java.lang.reflect.Type[] = p.getActualTypeArguments();\n            if (useOwner == null) {\n                buf.append(raw.getName());\n            } else {\n                if (useOwner instanceof java.lang.Class<?>) {\n                    buf.append(((java.lang.Class<?>)(useOwner)).getName());\n                } else {\n                    buf.append(useOwner.toString());\n                }\n                buf.append('.').append(raw.getSimpleName());\n            }\n            org.apache.commons.lang3.reflect.TypeUtils.appendAllTo(buf.append('<'), \", \", typeArguments).append('>');\n            return buf.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"p"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:845","type":"CtBinaryOperatorImpl","sourcecode":"varValue == null"},"failures":[383,384],"tindex":"bdfc33ec-2eb1-11e6-a381-e3432d006441","method":{"position":"org.apache.commons.lang3.StringUtils:4684","type":"CtMethodImpl","sourcecode":"private static java.lang.String replaceEach(final java.lang.String text, final java.lang.String[] searchList, final java.lang.String[] replacementList, final boolean repeat, final int timeToLive) {\n    if (text == null) {\n        {\n            if ((((((text == null) || (text.isEmpty())) || (searchList == null)) || ((searchList.int) == 0)) || (replacementList == null)) || ((replacementList.int) == 0)) {\n                return text;\n            } \n            if (timeToLive < 0) {\n                throw new java.lang.IllegalStateException((\"Aborting to protect against StackOverflowError - \" + \"output of one loop is the input of another\"));\n            } \n            final int int = searchList.int;\n            final int int = replacementList.int;\n            if (searchLength != replacementLength) {\n                throw new java.lang.IllegalArgumentException((((\"Search and Replace array lengths don't match: \" + searchLength) + \" vs \") + replacementLength));\n            } \n            final boolean[] boolean[] = new boolean[searchLength];\n            int int = -1;\n            int int = -1;\n            int int = -1;\n            for (int int = 0 ; i < searchLength ; i++) {\n                if ((((noMoreMatchesForReplIndex[i]) || ((searchList[i]) == null)) || (searchList[i].isEmpty())) || ((replacementList[i]) == null)) {\n                    continue;\n                } \n                tempIndex = text.indexOf(searchList[i]);\n                if (tempIndex == (-1)) {\n                    noMoreMatchesForReplIndex[i] = true;\n                } else {\n                    if ((textIndex == (-1)) || (tempIndex < textIndex)) {\n                        textIndex = tempIndex;\n                        replaceIndex = i;\n                    } \n                }\n            }\n            if (textIndex == (-1)) {\n                return text;\n            } \n            int int = 0;\n            int int = 0;\n            for (int int = 0 ; i < (searchList.int) ; i++) {\n                if (((searchList[i]) == null) || ((replacementList[i]) == null)) {\n                    continue;\n                } \n                final int int = (replacementList[i].length()) - (searchList[i].length());\n                if (greater > 0) {\n                    increase += 3 * greater;\n                } \n            }\n            increase = java.lang.Math.min(increase, ((text.length()) / 5));\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(((text.length()) + increase));\n            while (textIndex != (-1)) {\n                for (int int = start ; i < textIndex ; i++) {\n                    buf.append(text.charAt(i));\n                }\n                buf.append(replacementList[replaceIndex]);\n                start = textIndex + (searchList[replaceIndex].length());\n                textIndex = -1;\n                replaceIndex = -1;\n                tempIndex = -1;\n                for (int int = 0 ; i < searchLength ; i++) {\n                    if ((((noMoreMatchesForReplIndex[i]) || ((searchList[i]) == null)) || (searchList[i].isEmpty())) || ((replacementList[i]) == null)) {\n                        continue;\n                    } \n                    tempIndex = text.indexOf(searchList[i], start);\n                    if (tempIndex == (-1)) {\n                        noMoreMatchesForReplIndex[i] = true;\n                    } else {\n                        if ((textIndex == (-1)) || (tempIndex < textIndex)) {\n                            textIndex = tempIndex;\n                            replaceIndex = i;\n                        } \n                    }\n                }\n            }\n            final int int = text.length();\n            for (int int = start ; i < textLength ; i++) {\n                buf.append(text.charAt(i));\n            }\n            final java.lang.String java.lang.String = buf.toString();\n            if (!repeat) {\n                return result;\n            } \n            return org.apache.commons.lang3.StringUtils.replaceEach(result, searchList, replacementList, repeat, (timeToLive - 1));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"varValue":"text"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4881","type":"CtBinaryOperatorImpl","sourcecode":"replaceChars == null"},"failures":[],"tindex":"bdfc5afd-2eb1-11e6-a381-c795bca12350","method":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:404","type":"CtMethodImpl","sourcecode":"private java.lang.String insertFormats(final java.lang.String pattern, final java.util.ArrayList<java.lang.String> customPatterns) {\n    if (pattern == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(containsElements(customPatterns))) {\n                return pattern;\n            } \n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(((pattern.length()) * 2));\n            final java.text.ParsePosition java.text.ParsePosition = new java.text.ParsePosition(0);\n            int int = -1;\n            int int = 0;\n            while ((pos.getIndex()) < (pattern.length())) {\n                final char char = pattern.charAt(pos.getIndex());\n                switch (c) {\n                    case org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char :\n                        appendQuotedString(pattern, pos, sb, false);\n                        break;\n                    case org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char :\n                        depth++;\n                        sb.append(org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char).append(readArgumentIndex(pattern, next(pos)));\n                        if (depth == 1) {\n                            fe++;\n                            final java.lang.String java.lang.String = customPatterns.get(fe);\n                            if (customPattern != null) {\n                                sb.append(org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char).append(customPattern);\n                            } \n                        } \n                        break;\n                    case org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char :\n                        depth--;\n                    default :\n                        sb.append(c);\n                        next(pos);\n                }\n            }\n            return sb.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"replaceChars":"pattern"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:945","type":"CtBinaryOperatorImpl","sourcecode":"(value < start) || (value > end)"},"failures":[],"tindex":"bdfc5afe-2eb1-11e6-a381-57ceca30443f","method":{"position":"org.apache.commons.lang3.ArrayUtils:2003","type":"CtMethodImpl","sourcecode":"public static int indexOf(final long[] array, final long valueToFind) {\n    if ((valueToFind < valueToFind) || (value > valueToFind)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"valueToFind","end":"valueToFind","value":"valueToFind"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:1227","type":"CtBinaryOperatorImpl","sourcecode":"(superType.isAssignableFrom(type)) == false"},"failures":[233,234,385,386,387,235,236,388,389,390,391,392,393,282,283,286,287,288,289,290,309,310,311,312,313,314,315,316,317,318,319,320,321,322,324,325,329,330,6,333,334,337,361,394,395,362,363,396,364,365,366,367,397,398,399,368,369,164,370,371,372],"tindex":"bdfc820f-2eb1-11e6-a381-5b30fce287a8","method":{"position":"org.apache.commons.lang3.ClassUtils:624","type":"CtMethodImpl","sourcecode":"public static boolean isAssignable(java.lang.Class<?> cls, final java.lang.Class<?> toClass, final boolean autoboxing) {\n    if ((cls.isAssignableFrom(toClass)) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (toClass == null) {\n                return false;\n            } \n            if (cls == null) {\n                return !(toClass.isPrimitive());\n            } \n            if (autoboxing) {\n                if ((cls.isPrimitive()) && (!(toClass.isPrimitive()))) {\n                    cls = org.apache.commons.lang3.ClassUtils.primitiveToWrapper(cls);\n                    if (cls == null) {\n                        return false;\n                    } \n                } \n                if ((toClass.isPrimitive()) && (!(cls.isPrimitive()))) {\n                    cls = org.apache.commons.lang3.ClassUtils.wrapperToPrimitive(cls);\n                    if (cls == null) {\n                        return false;\n                    } \n                } \n            } \n            if (cls.equals(toClass)) {\n                return true;\n            } \n            if (cls.isPrimitive()) {\n                if ((toClass.isPrimitive()) == false) {\n                    return false;\n                } \n                if (java.lang.Integer.java.lang.Integer.java.lang.Class<java.lang.Integer>.equals(cls)) {\n                    return ((java.lang.Long.java.lang.Long.java.lang.Class<java.lang.Long>.equals(toClass)) || (java.lang.Float.java.lang.Float.java.lang.Class<java.lang.Float>.equals(toClass))) || (java.lang.Double.java.lang.Double.java.lang.Class<java.lang.Double>.equals(toClass));\n                } \n                if (java.lang.Long.java.lang.Long.java.lang.Class<java.lang.Long>.equals(cls)) {\n                    return (java.lang.Float.java.lang.Float.java.lang.Class<java.lang.Float>.equals(toClass)) || (java.lang.Double.java.lang.Double.java.lang.Class<java.lang.Double>.equals(toClass));\n                } \n                if (java.lang.Boolean.java.lang.Boolean.java.lang.Class<java.lang.Boolean>.equals(cls)) {\n                    return false;\n                } \n                if (java.lang.Double.java.lang.Double.java.lang.Class<java.lang.Double>.equals(cls)) {\n                    return false;\n                } \n                if (java.lang.Float.java.lang.Float.java.lang.Class<java.lang.Float>.equals(cls)) {\n                    return java.lang.Double.java.lang.Double.java.lang.Class<java.lang.Double>.equals(toClass);\n                } \n                if (java.lang.Character.java.lang.Character.java.lang.Class<java.lang.Character>.equals(cls)) {\n                    return (((java.lang.Integer.java.lang.Integer.java.lang.Class<java.lang.Integer>.equals(toClass)) || (java.lang.Long.java.lang.Long.java.lang.Class<java.lang.Long>.equals(toClass))) || (java.lang.Float.java.lang.Float.java.lang.Class<java.lang.Float>.equals(toClass))) || (java.lang.Double.java.lang.Double.java.lang.Class<java.lang.Double>.equals(toClass));\n                } \n                if (java.lang.Short.java.lang.Short.java.lang.Class<java.lang.Short>.equals(cls)) {\n                    return (((java.lang.Integer.java.lang.Integer.java.lang.Class<java.lang.Integer>.equals(toClass)) || (java.lang.Long.java.lang.Long.java.lang.Class<java.lang.Long>.equals(toClass))) || (java.lang.Float.java.lang.Float.java.lang.Class<java.lang.Float>.equals(toClass))) || (java.lang.Double.java.lang.Double.java.lang.Class<java.lang.Double>.equals(toClass));\n                } \n                if (java.lang.Byte.java.lang.Byte.java.lang.Class<java.lang.Byte>.equals(cls)) {\n                    return ((((java.lang.Short.java.lang.Short.java.lang.Class<java.lang.Short>.equals(toClass)) || (java.lang.Integer.java.lang.Integer.java.lang.Class<java.lang.Integer>.equals(toClass))) || (java.lang.Long.java.lang.Long.java.lang.Class<java.lang.Long>.equals(toClass))) || (java.lang.Float.java.lang.Float.java.lang.Class<java.lang.Float>.equals(toClass))) || (java.lang.Double.java.lang.Double.java.lang.Class<java.lang.Double>.equals(toClass));\n                } \n                return false;\n            } \n            return toClass.isAssignableFrom(cls);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"superType":"cls","type":"toClass"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6689","type":"CtBinaryOperatorImpl","sourcecode":"(strs[0]) == null"},"failures":[],"tindex":"bdfca920-2eb1-11e6-a381-11768318af5b","method":{"position":"org.apache.commons.lang3.ArrayUtils:6011","type":"CtMethodImpl","sourcecode":"static java.lang.Object removeAll(final java.lang.Object array, final int... indices) {\n    if ((array[0]) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = org.apache.commons.lang3.ArrayUtils.getLength(array);\n            int int = 0;\n            if (org.apache.commons.lang3.ArrayUtils.isNotEmpty(indices)) {\n                java.util.Arrays.sort(indices);\n                int int = indices.int;\n                int int = length;\n                while ((--i) >= 0) {\n                    final int int = indices[i];\n                    if ((index < 0) || (index >= length)) {\n                        throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Length: \") + length));\n                    } \n                    if (index >= prevIndex) {\n                        continue;\n                    } \n                    diff++;\n                    prevIndex = index;\n                }\n            } \n            final java.lang.Object java.lang.Object = java.lang.reflect.Array.newInstance(array.getClass().getComponentType(), (length - diff));\n            if (diff < length) {\n                int int = length;\n                int int = length - diff;\n                for (int int = (indices.int) - 1 ; i >= 0 ; i--) {\n                    final int int = indices[i];\n                    if ((end - index) > 1) {\n                        final int int = (end - index) - 1;\n                        dest -= cp;\n                        java.lang.System.arraycopy(array, (index + 1), result, dest, cp);\n                    } \n                    end = index;\n                }\n                if (end > 0) {\n                    java.lang.System.arraycopy(array, 0, result, 0, end);\n                } \n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"strs":"array"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:472","type":"CtBinaryOperatorImpl","sourcecode":"(java.lang.Float.floatToIntBits(lhs)) != (java.lang.Float.floatToIntBits(rhs))"},"failures":[400,401],"tindex":"bdfcd031-2eb1-11e6-a381-934217502072","method":{"position":"org.apache.commons.lang3.ArrayUtils:2808","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final float[] array, final float valueToFind, int startIndex) {\n    if ((java.lang.Float.floatToIntBits(valueToFind)) != (java.lang.Float.floatToIntBits(valueToFind))) {\n        {\n            if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } else if (startIndex >= (array.int)) {\n                startIndex = (array.int) - 1;\n            } \n            for (int int = startIndex ; i >= 0 ; i--) {\n                if (valueToFind == (array[i])) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"valueToFind","rhs":"valueToFind"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1313","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.GenericArrayType"},"failures":[],"tindex":"bdfcd032-2eb1-11e6-a381-4f2a4d99dbc4","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:267","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object obj) {\n    if (obj instanceof java.lang.reflect.GenericArrayType) {\n        {\n            return (obj == (org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeImpl.this)) || ((obj instanceof java.lang.reflect.WildcardType) && (org.apache.commons.lang3.reflect.TypeUtils.equals(org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeImpl.this, ((java.lang.reflect.WildcardType)(obj)))));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"obj"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:881","type":"CtUnaryOperatorImpl","sourcecode":"!(java.util.Arrays.equals(lhs, rhs))"},"failures":[],"tindex":"bdfcf743-2eb1-11e6-a381-a7b69306d4b2","method":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:633","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj2) {\n    if (!(java.util.Arrays.equals(obj2, obj2))) {\n        {\n            if (obj2 instanceof org.apache.commons.lang3.time.DurationFormatUtils.Token) {\n                final org.apache.commons.lang3.time.DurationFormatUtils.Token org.apache.commons.lang3.time.DurationFormatUtils.Token = ((org.apache.commons.lang3.time.DurationFormatUtils.Token)(obj2));\n                if ((org.apache.commons.lang3.time.DurationFormatUtils.Token.this.java.lang.Object.getClass()) != (tok2.java.lang.Object.getClass())) {\n                    return false;\n                } \n                if ((org.apache.commons.lang3.time.DurationFormatUtils.Token.this.int) != (tok2.int)) {\n                    return false;\n                } \n                if ((org.apache.commons.lang3.time.DurationFormatUtils.Token.this.java.lang.Object) instanceof java.lang.StringBuilder) {\n                    return org.apache.commons.lang3.time.DurationFormatUtils.Token.this.java.lang.Object.toString().equals(tok2.java.lang.Object.toString());\n                } else if ((org.apache.commons.lang3.time.DurationFormatUtils.Token.this.java.lang.Object) instanceof java.lang.Number) {\n                    return org.apache.commons.lang3.time.DurationFormatUtils.Token.this.java.lang.Object.equals(tok2.java.lang.Object);\n                } else {\n                    return (org.apache.commons.lang3.time.DurationFormatUtils.Token.this.java.lang.Object) == (tok2.java.lang.Object);\n                }\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"obj2","rhs":"obj2"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:925","type":"CtInvocationImpl","sourcecode":"java.lang.reflect.Modifier.isPublic(declaredMethod.getDeclaringClass().getModifiers())"},"failures":[],"tindex":"bdfd1e54-2eb1-11e6-a381-1b900aab47d3","method":{"position":"org.apache.commons.lang3.ArrayUtils:158","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(final java.lang.Object array) {\n    if (java.lang.reflect.Modifier.isPublic(array.getDeclaringClass().getModifiers())) {\n        {\n            return org.apache.commons.lang3.ArrayUtils.toString(array, \"{}\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"declaredMethod":"array"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDateParser:360","type":"CtBinaryOperatorImpl","sourcecode":"c == 'E'"},"failures":[402],"tindex":"bdfd1e55-2eb1-11e6-a381-9df887a219a0","method":{"position":"org.apache.commons.lang3.CharUtils:307","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(final char ch) {\n    if (ch == 'E') {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (ch < 128) {\n                return org.apache.commons.lang3.CharUtils.org.apache.commons.lang3.CharUtils.java.lang.String[][ch];\n            } \n            return new java.lang.String(new char[]{ ch });\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"ch"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:403","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[403],"tindex":"bdfd4566-2eb1-11e6-a381-0994f7bc735e","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:230","type":"CtMethodImpl","sourcecode":"public static java.lang.String replaceSystemProperties(final java.lang.Object source) {\n    if (source == null) {\n        {\n            return new org.apache.commons.lang3.text.StrSubstitutor(org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup()).replace(source);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"source"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"focus == null"},"failures":[],"tindex":"bdfd6c77-2eb1-11e6-a381-190592ec5110","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:435","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.String format(final java.util.Calendar calendar) {\n    if (calendar == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return format(calendar, new java.lang.StringBuffer(int)).toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"focus":"calendar"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1112","type":"CtBinaryOperatorImpl","sourcecode":"it != null"},"failures":[190],"tindex":"bdfd6c78-2eb1-11e6-a381-5176a556b2b0","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1111","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendAll(final java.util.Iterator<?> it) {\n    if (it != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (it != null) {\n                while (it.hasNext()) {\n                    append(it.next());\n                }\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"it":"it"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:179","type":"CtUnaryOperatorImpl","sourcecode":"!(java.util.Arrays.equals(lhs, rhs))"},"failures":[404,405,406,407,408,409],"tindex":"bdfd9389-2eb1-11e6-a381-bb26a135eaec","method":{"position":"org.apache.commons.lang3.BooleanUtils:1040","type":"CtMethodImpl","sourcecode":"public static boolean xor(final boolean... array) {\n    if (!(java.util.Arrays.equals(array, array))) {\n        {\n            if (array == null) {\n                throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n            } \n            if ((array.int) == 0) {\n                throw new java.lang.IllegalArgumentException(\"Array is empty\");\n            } \n            boolean boolean = false;\n            for (final boolean boolean : array) {\n                result ^= element;\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array","rhs":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:591","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[410,411,412,413,414,415,416,417,418,419,420,421,422],"tindex":"bdfdba9a-2eb1-11e6-a381-750abe80f7aa","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:534","type":"CtMethodImpl","sourcecode":"public java.lang.String replace(java.lang.CharSequence source, int offset, int length) {\n    if (source == null) {\n        {\n            if (source == null) {\n                return null;\n            } \n            org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(length).append(source, offset, length);\n            substitute(buf, 0, length);\n            return buf.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"source"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1072","type":"CtBinaryOperatorImpl","sourcecode":"suffix == null"},"failures":[423],"tindex":"bdfdba9b-2eb1-11e6-a381-972a14cdec5c","method":{"position":"org.apache.commons.lang3.time.DateFormatUtils:176","type":"CtMethodImpl","sourcecode":"public static java.lang.String format(final long millis, final java.lang.String pattern) {\n    if (pattern == null) {\n        {\n            return org.apache.commons.lang3.time.DateFormatUtils.format(new java.util.Date(millis), pattern, null, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"suffix":"pattern"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2137","type":"CtBinaryOperatorImpl","sourcecode":"start > end"},"failures":[254],"tindex":"bdfdba9c-2eb1-11e6-a381-4be306f600d8","method":{"position":"org.apache.commons.lang3.time.DateUtils:599","type":"CtMethodImpl","sourcecode":"public static java.util.Date setMinutes(final java.util.Date date, final int amount) {\n    if (amount > amount) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.set(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"amount","end":"amount"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomUtils:168","type":"CtBinaryOperatorImpl","sourcecode":"startInclusive == endInclusive"},"failures":[],"tindex":"bdfde1ad-2eb1-11e6-a381-c14dfe2079f3","method":{"position":"org.apache.commons.lang3.mutable.MutableFloat:156","type":"CtMethodImpl","sourcecode":"public void add(final float operand) {\n    if (operand == operand) {\n        {\n            org.apache.commons.lang3.mutable.MutableFloat.this.float += operand;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startInclusive":"operand","endInclusive":"operand"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:6015","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.ArrayUtils.isNotEmpty(indices)"},"failures":[424],"tindex":"bdfde1ae-2eb1-11e6-a381-1b8c57447ffe","method":{"position":"org.apache.commons.lang3.ArrayUtils:1463","type":"CtMethodImpl","sourcecode":"public static void reverse(final int[] array) {\n    if (org.apache.commons.lang3.ArrayUtils.isNotEmpty(array)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return ;\n            } \n            org.apache.commons.lang3.ArrayUtils.reverse(array, 0, array.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"indices":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1262","type":"CtBinaryOperatorImpl","sourcecode":"c > a"},"failures":[],"tindex":"bdfde1af-2eb1-11e6-a381-b974517eaf6a","method":{"position":"org.apache.commons.lang3.BitField:240","type":"CtMethodImpl","sourcecode":"public byte setByte(final byte holder) {\n    if (holder > holder) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((byte)(set(holder)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"holder","c":"holder"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.StringUtils:6168","type":"CtBinaryOperatorImpl","sourcecode":"(cs == null) || (org.apache.commons.lang3.StringUtils.isEmpty(cs))"},"failures":[],"tindex":"bdfde1b0-2eb1-11e6-a381-bf6f2faf20c4","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:446","type":"CtMethodImpl","sourcecode":"public static java.lang.Object readDeclaredField(final java.lang.Object target, final java.lang.String fieldName) throws java.lang.IllegalAccessException {\n    if ((target == null) || (org.apache.commons.lang3.StringUtils.isEmpty(cs))) {\n        throw new java.lang.IllegalAccessException();\n    } else {\n        {\n            return org.apache.commons.lang3.reflect.FieldUtils.readDeclaredField(target, fieldName, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"target"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3464","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"bdfe7df1-2eb1-11e6-a381-3924c763b832","method":{"position":"org.apache.commons.lang3.text.StrBuilder:980","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendln(final char[] chars) {\n    if (chars == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return append(chars).appendNewLine();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"chars"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3715","type":"CtBinaryOperatorImpl","sourcecode":"noOfItems <= 0"},"failures":[],"tindex":"bdfe7df2-2eb1-11e6-a381-a9f5a2e4a4e5","method":{"position":"org.apache.commons.lang3.text.translate.JavaUnicodeEscaper:49","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.translate.JavaUnicodeEscaper below(final int codepoint) {\n    if (codepoint <= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.outsideOf(codepoint, java.lang.Integer.java.lang.Integer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"noOfItems":"codepoint"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:595","type":"CtFieldReadImpl","sourcecode":"objectsTriviallyEqual"},"failures":[],"tindex":"bdfea503-2eb1-11e6-a381-270cb248a128","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:405","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setFieldSeparatorAtEnd(final boolean fieldSeparatorAtEnd) {\n    if (fieldSeparatorAtEnd) {\n        {\n            super.setFieldSeparatorAtEnd(fieldSeparatorAtEnd);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsTriviallyEqual":"fieldSeparatorAtEnd"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2104","type":"CtBinaryOperatorImpl","sourcecode":"len == 0"},"failures":[425],"tindex":"bdfea504-2eb1-11e6-a381-0994a4c8cedc","method":{"position":"org.apache.commons.lang3.ArrayUtils:1608","type":"CtMethodImpl","sourcecode":"public static void reverse(final byte[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (startIndexInclusive == 0) {\n        {\n            if (array == null) {\n                return ;\n            } \n            int int = startIndexInclusive < 0 ? 0 : startIndexInclusive;\n            int int = (java.lang.Math.min(array.int, endIndexExclusive)) - 1;\n            byte byte;\n            while (j > i) {\n                tmp = array[j];\n                array[j] = array[i];\n                array[i] = tmp;\n                j--;\n                i++;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"startIndexInclusive"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.text.ParseException","condition":{"position":"org.apache.commons.lang3.CharSetUtils:141","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.CharSetUtils.deepEmpty(set))"},"failures":[],"tindex":"bdfea505-2eb1-11e6-a381-bf7adb47716d","method":{"position":"org.apache.commons.lang3.time.DateUtils:310","type":"CtMethodImpl","sourcecode":"public static java.util.Date parseDateStrictly(final java.lang.String str, final java.lang.String... parsePatterns) throws java.text.ParseException {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.CharSetUtils.deepEmpty(parsePatterns))) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.parseDateStrictly(str, null, parsePatterns);\n        }\n    } else {\n        throw new java.text.ParseException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str","set":"parsePatterns"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:419","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[426],"tindex":"bdfea506-2eb1-11e6-a381-4d13a3cf4ab2","method":{"position":"org.apache.commons.lang3.ArrayUtils:3665","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final double[] array) {\n    if (array == null) {\n        {\n            return (array != null) && ((array.int) != 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.DefaultExceptionContext:129","type":"CtBinaryOperatorImpl","sourcecode":"baseMessage != null"},"failures":[427,428,429,430,431,432,433,434],"tindex":"bdfecc17-2eb1-11e6-a381-733d27021dd8","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1811","type":"CtMethodImpl","sourcecode":"private void replaceImpl(final int startIndex, final int endIndex, final int removeLen, final java.lang.String insertStr, final int insertLen) {\n    if (insertStr != null) {\n        {\n            final int int = ((int) - removeLen) + insertLen;\n            if (insertLen != removeLen) {\n                ensureCapacity(newSize);\n                java.lang.System.arraycopy(char[], endIndex, char[], (startIndex + insertLen), ((int) - endIndex));\n                int = newSize;\n            } \n            if (insertLen > 0) {\n                insertStr.getChars(0, insertLen, char[], startIndex);\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"baseMessage":"insertStr"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:256","type":"CtBinaryOperatorImpl","sourcecode":"buffer == null"},"failures":[],"tindex":"bdfecc18-2eb1-11e6-a381-87e00a195dba","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1511","type":"CtMethodImpl","sourcecode":"protected void appendFieldSeparator(final java.lang.StringBuffer buffer) {\n    if (buffer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(java.lang.String);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"buffer":"buffer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5423","type":"CtBinaryOperatorImpl","sourcecode":"(padLen == 1) && (pads <= (org.apache.commons.lang3.StringUtils.PAD_LIMIT))"},"failures":[435,436,437,438,439,440,441,442,443,444,445,446],"tindex":"bdfecc19-2eb1-11e6-a381-e7918f2dfe18","method":{"position":"org.apache.commons.lang3.time.FastDateParser:391","type":"CtMethodImpl","sourcecode":"private int adjustYear(final int twoDigitYear) {\n    if ((twoDigitYear == 1) && (twoDigitYear <= twoDigitYear)) {\n        {\n            int int = (int) + twoDigitYear;\n            return twoDigitYear >= (int) ? trial : trial + 100;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pads":"twoDigitYear","padLen":"twoDigitYear","org.apache.commons.lang3.StringUtils.PAD_LIMIT":"twoDigitYear"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2182","type":"CtBinaryOperatorImpl","sourcecode":"length >= (size)"},"failures":[],"tindex":"bdfecc1a-2eb1-11e6-a381-792953e87bb4","method":{"position":"org.apache.commons.lang3.BitField:215","type":"CtMethodImpl","sourcecode":"public int set(final int holder) {\n    if (holder >= holder) {\n        {\n            return holder | (int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"holder","length":"holder"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2833","type":"CtBinaryOperatorImpl","sourcecode":"numberOfSubstrings == max"},"failures":[],"tindex":"bdfef32b-2eb1-11e6-a381-355c522839db","method":{"position":"org.apache.commons.lang3.ArrayUtils:2558","type":"CtMethodImpl","sourcecode":"public static int indexOf(final double[] array, final double valueToFind, int startIndex) {\n    if (startIndex == startIndex) {\n        {\n            if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                startIndex = 0;\n            } \n            for (int int = startIndex ; i < (array.int) ; i++) {\n                if (valueToFind == (array[i])) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"numberOfSubstrings":"startIndex","max":"startIndex"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:258","type":"CtInvocationImpl","sourcecode":"java.lang.Float.isNaN(b)"},"failures":[447],"tindex":"bdfef32c-2eb1-11e6-a381-4d9110eac237","method":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:254","type":"CtMethodImpl","sourcecode":"public static float max(final float a, final float b) {\n    if (java.lang.Float.isNaN(b)) {\n        {\n            if (java.lang.Float.isNaN(a)) {\n                return b;\n            } else if (java.lang.Float.isNaN(b)) {\n                return a;\n            } else {\n                return java.lang.Math.max(a, b);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"b"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":74,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}