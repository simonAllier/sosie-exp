{"failureDictionary":{"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":66,"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":185,"org.apache.commons.lang3.SystemUtilsTest.testConstructor":225,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":241,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":148,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":150,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":166,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_Boolean":260,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":144,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":147,"org.apache.commons.lang3.time.DateUtilsTest.testSetYears":240,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":55,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testPutIfAbsentKeyPresent":355,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":186,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_String":281,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testCreateIfAbsentKeyNotPresent":353,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":62,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":172,"org.apache.commons.lang3.SystemUtilsTest.testGetUserDir":220,"org.apache.commons.lang3.builder.DiffResultTest.testListIsNonModifiable":24,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":73,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNull":365,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":358,"org.apache.commons.lang3.time.DateUtilsTest.testAddSeconds":228,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArrayEqualAsObject":197,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":361,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":124,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":32,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_StringBuffer_int_int":290,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparators_Array":306,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":82,"org.apache.commons.lang3.SystemUtilsTest.testGetUserHome":224,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":34,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":161,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":194,"org.apache.commons.lang3.time.DateUtilsTest.testAddMonths":235,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":59,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":119,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StrBuilder":279,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetMatchingAccessibleMethod":242,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":83,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":183,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml10":327,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":56,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml11":328,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":169,"org.apache.commons.lang3.builder.DiffResultTest.testNullRhs":28,"org.apache.commons.lang3.SystemUtilsTest.testGetJavaHome":222,"org.apache.commons.lang3.time.DateUtilsTest.testSetMonths":236,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StrBuilder_int_int":262,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":152,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":136,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":171,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_String":295,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":359,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":140,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":63,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_StrBuilder_int_int":301,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_FormattedString":303,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testOverriddenBuiltinFormat":308,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_StringBuilder_int_int":305,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testExtendedFormats":310,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":120,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":130,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_String_int_int":265,"org.apache.commons.lang3.reflect.TypeLiteralTest.testEquals":247,"org.apache.commons.lang3.BitFieldTest.testByte":376,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableStream":13,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":76,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetRawType":253,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":107,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":80,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testCreateIfAbsentUncheckedSuccess":356,"org.apache.commons.lang3.reflect.TypeLiteralTest.testBasic":245,"org.apache.commons.lang3.time.DateUtilsTest.testSetMinutes":229,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendAll_Array":284,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":68,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":143,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_Throwable":338,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_Widening":17,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StringBuilder_int_int":285,"org.apache.commons.lang3.StringUtilsTest.testSplitByWholeString_StringStringBooleanInt":337,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":79,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testRawMessage":341,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testJavaSerialization":347,"org.apache.commons.lang3.StringUtilsTest.testRemove_String":370,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":125,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":118,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetContextEntries":349,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":157,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSizeStartText":38,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":167,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadRight_int":258,"org.apache.commons.lang3.AnnotationUtilsTest.testNonEquivalentAnnotationsOfSameType":9,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StringBuilder":298,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendSeparator_String":280,"org.apache.commons.lang3.SystemUtilsTest.testOSMatchesName":223,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":69,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":122,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":174,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":96,"org.apache.commons.lang3.AnnotationUtilsTest.testSameInstance":3,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_CharArray_int_int":270,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":363,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":190,"org.apache.commons.lang3.time.DateUtilsTest.testAddWeeks":231,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendNewLine":269,"org.apache.commons.lang3.CharEncodingTest.testWorksOnJava1_1_8":322,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":91,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":50,"org.apache.commons.lang3.AnnotationUtilsTest.testBothArgsNull":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":115,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":364,"org.apache.commons.lang3.CharEncodingTest.testMustBeSupportedJava1_3_1":321,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":168,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":156,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetNullText":40,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":146,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testLang299":274,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":165,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":196,"org.apache.commons.lang3.AnnotationUtilsTest.testEquivalence":4,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":97,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":133,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":104,"org.apache.commons.lang3.builder.DiffTest.testCannotModify":210,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":35,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetRootCauseStackTrace_Throwable":15,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendAll_Iterator":272,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithNullText":276,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBetween":332,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testBuiltInNumberFormat":312,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":202,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_Boolean":261,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testContextedExceptionStringThrowableContext":343,"org.apache.commons.lang3.ObjectUtilsTest.testIdentityToStringStringBuilder":0,"org.apache.commons.lang3.AnnotationUtilsTest.testOneArgNull":1,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":58,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetContentEnd":37,"org.apache.commons.lang3.CharEncodingTest.testWorksOnJava1_2_2":323,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":250,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparatorsWithNullText":288,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":114,"org.apache.commons.lang3.reflect.TypeUtilsTest.testDetermineTypeVariableAssignments":252,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":188,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":207,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_DefaultUnboxing_Widening":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":99,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":129,"org.apache.commons.lang3.builder.DiffResultTest.testNullList":22,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":178,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_FormattedString":291,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":109,"org.apache.commons.lang3.SystemUtilsTest.testJavaVersionMatches":215,"org.apache.commons.lang3.builder.DiffBuilderTest.testStylePassedToDiffResult":192,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":29,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":132,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":151,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_StrBuilder":277,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":123,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testBuiltInDateTimeFormat":307,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_String_int_int":296,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_3Part":324,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":74,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairs":335,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":366,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":102,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendSeparator_String_String":283,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetTypeArguments":248,"org.apache.commons.lang3.StringUtilsTest.testToString":11,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":33,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testBlank":159,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":31,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":170,"org.apache.commons.lang3.StringUtilsTest.testSplitByCharacterTypeCamelCase":357,"org.apache.commons.lang3.math.FractionTest.testFactory_String_improper":371,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":21,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendSeparator_char":286,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadRight":300,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":110,"org.apache.commons.lang3.builder.DiffResultTest.testIterator":26,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":189,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableWriter":14,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":162,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":139,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_StringBuffer":271,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testContextedExceptionStringThrowable":345,"org.apache.commons.lang3.builder.DiffResultTest.testNoDifferencesString":23,"org.apache.commons.lang3.time.DateUtilsTest.testSetHours":239,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":95,"org.apache.commons.lang3.SystemUtilsTest.testGetJavaIoTmpDir":218,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":30,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":368,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":93,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":134,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":182,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":117,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparators_Collection":256,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":92,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":181,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":164,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":184,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":60,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":369,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":98,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_CharArray":304,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":70,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":203,"org.apache.commons.lang3.reflect.TypeLiteralTest.testTyped":246,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":142,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":100,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testArrayList":212,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":199,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":113,"org.apache.commons.lang3.builder.DiffBuilderTest.testSimilarObjectIgnoresAppends":195,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testBlank":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":112,"org.apache.commons.lang3.StringUtilsTest.testToEncodedString":12,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StringBuffer":287,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadLeft_int":266,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":49,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testNullExceptionPassing":340,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":52,"org.apache.commons.lang3.builder.DiffResultTest.testNullStyle":25,"org.apache.commons.lang3.SystemUtilsTest.testOSMatchesNameAndVersion":216,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlSupplementaryCharacters":329,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":101,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":20,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsInstance":249,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":163,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_Object":278,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":135,"org.apache.commons.lang3.AnnotationUtilsTest.testAnnotationsOfDifferingTypes":5,"org.apache.commons.lang3.time.DateUtilsTest.testAddYears":232,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testContextedExceptionString":344,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendAll_Collection":267,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvString":336,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testSupplementary":333,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":198,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendSeparator_char_char":273,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testCopyOnWriteArrayList":213,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":121,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_Object":292,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBelow":331,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":86,"org.apache.commons.lang3.builder.DiffResultTest.testNullLhs":27,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":177,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":64,"org.apache.commons.lang3.ArrayUtilsTest.testToString":325,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetContentStart":39,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":175,"org.apache.commons.lang3.builder.DiffBuilderTest.testNullLhs":205,"org.apache.commons.lang3.SystemUtilsTest.testJavaAwtHeadless":219,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_CharArray_int_int":263,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSummaryObjectEndText":48,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":87,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":362,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringInt":255,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendSeparator_char_int":282,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":360,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":160,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":193,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testPutIfAbsentKeyNotPresent":354,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":57,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":141,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testAbove":330,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable":16,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendPadding":294,"org.apache.commons.lang3.builder.DiffTest.testGetFieldName":208,"org.apache.commons.lang3.builder.DiffBuilderTest.testSameObjectIgnoresAppends":201,"org.apache.commons.lang3.SystemUtilsTest.testIS_JAVA":221,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_ClassArray_ClassArray":19,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":243,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":138,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testContextedException":339,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSummaryObjectStartText":44,"org.apache.commons.lang3.AnnotationUtilsTest.testHashCode":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":111,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":149,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":78,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_PrimitiveNumber":297,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetArraySeparator":46,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":75,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetFirstContextValue":351,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparators_Iterator":275,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":90,"org.apache.commons.lang3.builder.DiffTest.testGetType":211,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":53,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":191,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":137,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadLeft":264,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":227,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":126,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":176,"org.apache.commons.lang3.text.StrTokenizerTest.test8":320,"org.apache.commons.lang3.time.DateUtilsTest.testRound":226,"org.apache.commons.lang3.text.StrTokenizerTest.test5":317,"org.apache.commons.lang3.text.StrTokenizerTest.test4":316,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":127,"org.apache.commons.lang3.text.StrTokenizerTest.test7":319,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":128,"org.apache.commons.lang3.text.StrTokenizerTest.test6":318,"org.apache.commons.lang3.text.StrTokenizerTest.test1":313,"org.apache.commons.lang3.text.StrTokenizerTest.test3":315,"org.apache.commons.lang3.text.StrTokenizerTest.test2":314,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":103,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetFieldSeparator":45,"org.apache.commons.lang3.builder.DiffTest.testToString":209,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testLinkedList":214,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":173,"org.apache.commons.lang3.AnnotationUtilsTest.testIsValidAnnotationMemberType":10,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":67,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":200,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testContextedExceptionThrowable":342,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsert":299,"org.apache.commons.lang3.StringUtilsTest.testCaseFunctions":375,"org.apache.commons.lang3.time.DateUtilsTest.testSetDays":237,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_StringBuilder":268,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringIntStringBoolean":254,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":81,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":89,"org.apache.commons.lang3.SystemUtilsTest.testIS_OS":217,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":326,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetContextValues":352,"org.apache.commons.lang3.AnnotationUtilsTest.testGeneratedAnnotationEquivalentToRealAnnotation":7,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":204,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testAddContextValue":346,"org.apache.commons.lang3.math.FractionTest.testFactory_String_proper":373,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":131,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StringBuffer_int_int":293,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":187,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":72,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":51,"org.apache.commons.lang3.time.DateUtilsTest.testAddMilliseconds":238,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":36,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetArrayEnd":43,"org.apache.commons.lang3.builder.DiffBuilderTest.testNullRhs":206,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":145,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":88,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":372,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":116,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":153,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":106,"org.apache.commons.lang3.time.DateUtilsTest.testTruncateLang59":233,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_CharArray":302,"org.apache.commons.lang3.reflect.TypeUtilsTest.testTypesSatisfyVariables":251,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testBuiltInChoiceFormat":309,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetArrayStart":47,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetFieldNameValueSeparator":42,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testExtendedAndBuiltInFormats":311,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":179,"org.apache.commons.lang3.time.DateUtilsTest.testAddHours":230,"org.apache.commons.lang3.reflect.TypeLiteralTest.testRaw":244,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":154,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":108,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":180,"org.apache.commons.lang3.BooleanUtilsTest.test_toString_Boolean_String_String_String":334,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":2,"org.apache.commons.lang3.StringUtilsIsTest.testIsAsciiPrintable_String":374,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_PrimitiveNumber":259,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":367,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testSetContextValue":348,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetContextLabels":350,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":94,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":85,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsertWithNullText":257,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSizeEndText":41,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":105,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":155,"org.apache.commons.lang3.time.DateUtilsTest.testSetSeconds":234,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendSeparator_String_int":289,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":158},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:915","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[0],"tindex":"76cd9e93-2ea4-11e6-b72f-4764dab6aaca","method":{"position":"org.apache.commons.lang3.ObjectUtils:364","type":"CtMethodImpl","sourcecode":"public static void identityToString(final java.lang.StringBuilder builder, final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == null) {\n                throw new java.lang.NullPointerException(\"Cannot get the toString of a null identity\");\n            } \n            builder.append(object.getClass().getName()).append('@').append(java.lang.Integer.toHexString(java.lang.System.identityHashCode(object)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5262","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,29,30,30,31,31,32,32,33,33,34,34,35,35,36,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,60,61,61,62,62,63,63,64,64,65,65,66,66,67,67,68,68,69,69,70,70,71,71,72,72,73,73,74,74,75,75,76,77,78,79,80,81,82,83,84,84,85,85,86,86,87,87,88,88,89,89,90,90,91,91,92,92,93,93,94,94,95,95,96,96,97,97,98,98,99,99,100,100,101,101,102,102,103,103,104,104,105,105,106,106,107,107,108,108,109,109,110,110,111,111,112,112,113,113,114,114,115,115,116,116,117,117,118,118,119,119,120,120,121,121,122,122,123,123,124,124,125,125,126,126,127,127,128,128,129,129,130,130,131,131,132,132,133,133,134,134,135,135,136,136,137,137,138,138,139,139,140,140,141,141,142,142,143,143,144,144,145,145,146,146,147,147,148,148,149,149,150,150,151,151,152,152,153,153,154,154,155,155,156,156,157,157,158,158,159,159,160,160,161,161,162,162,163,163,164,164,165,165,166,166,167,167,168,168,169,169,170,170,171,171,172,172,173,173,174,174,175,175,176,176,177,177,178,178,179,179,180,180,181,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325],"tindex":"76cf2534-2ea4-11e6-b72f-093cdfe99972","method":{"position":"org.apache.commons.lang3.SystemUtils:1344","type":"CtMethodImpl","sourcecode":"private static java.lang.String getSystemProperty(final java.lang.String property) {\n    if (property == null) {\n        {\n            try {\n                return java.lang.System.getProperty(property);\n            } catch (final java.lang.SecurityException ex) {\n                java.lang.System.java.lang.System.java.io.PrintStream.println(((\"Caught a SecurityException reading the system property '\" + property) + \"'; the SystemUtils property value will default to null.\"));\n                return null;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"property"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:326","type":"CtBinaryOperatorImpl","sourcecode":"(toType == null) || (toType instanceof java.lang.Class<?>)"},"failures":[],"tindex":"76cf7355-2ea4-11e6-b72f-7b21d9e894bd","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1558","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.GenericArrayType genericArrayType(final java.lang.reflect.Type componentType) {\n    if ((componentType == null) || (toType instanceof java.lang.Class<?>)) {\n        {\n            return new org.apache.commons.lang3.reflect.TypeUtils.GenericArrayTypeImpl(org.apache.commons.lang3.Validate.notNull(componentType, \"componentType is null\"));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toType":"componentType"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.math.Fraction:145","type":"CtBinaryOperatorImpl","sourcecode":"denominator < 0"},"failures":[326,327,328,329,330,331,332,333],"tindex":"76cf9a66-2ea4-11e6-b72f-1d97c5ef9bc9","method":{"position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:103","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean translate(final int codepoint, final java.io.Writer out) throws java.io.IOException {\n    if (codepoint < 0) {\n        {\n            if (boolean) {\n                if ((codepoint < (int)) || (codepoint > (int))) {\n                    return false;\n                } \n            } else {\n                if ((codepoint >= (int)) && (codepoint <= (int))) {\n                    return false;\n                } \n            }\n            out.write(\"&#\");\n            out.write(java.lang.Integer.toString(codepoint, 10));\n            out.write(';');\n            return true;\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"denominator":"codepoint"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:664","type":"CtBinaryOperatorImpl","sourcecode":"nullString == null"},"failures":[334],"tindex":"76d084c7-2ea4-11e6-b72f-57ff20a2c46f","method":{"position":"org.apache.commons.lang3.BooleanUtils:811","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(final java.lang.Boolean bool, final java.lang.String trueString, final java.lang.String falseString, final java.lang.String nullString) {\n    if (nullString == null) {\n        {\n            if (bool == null) {\n                return nullString;\n            } \n            return bool.booleanValue() ? trueString : falseString;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nullString":"nullString"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5302","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(padStr)"},"failures":[335,336],"tindex":"76d084c8-2ea4-11e6-b72f-5d0b13c0ea6f","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:776","type":"CtMethodImpl","sourcecode":"public static final java.lang.String escapeCsv(final java.lang.String input) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(input)) {\n        {\n            return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"padStr":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSet:190","type":"CtBinaryOperatorImpl","sourcecode":"(remainder >= 2) && ((str.charAt(pos)) == '^')"},"failures":[337],"tindex":"76d0f9f9-2ea4-11e6-b72f-016ea57e6fd6","method":{"position":"org.apache.commons.lang3.StringUtils:2723","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] splitByWholeSeparator(final java.lang.String str, final java.lang.String separator, final int max) {\n    if ((max >= 2) && ((separator.charAt(max)) == '^')) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(str, separator, max, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"separator","pos":"max","remainder":"max"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:163","type":"CtBinaryOperatorImpl","sourcecode":"(ex.getCause()) instanceof java.lang.Error"},"failures":[338],"tindex":"76d0f9fa-2ea4-11e6-b72f-f7b0b4526bda","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:432","type":"CtMethodImpl","sourcecode":"public static void printRootCauseStackTrace(final java.lang.Throwable throwable) {\n    if ((throwable.getCause()) instanceof java.lang.Error) {\n        {\n            org.apache.commons.lang3.exception.ExceptionUtils.printRootCauseStackTrace(throwable, java.lang.System.java.lang.System.java.io.PrintStream);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ex":"throwable"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:827","type":"CtBinaryOperatorImpl","sourcecode":"object instanceof short[]"},"failures":[339,340,341,342,343,344,345,346,347,348,349,350,351,352],"tindex":"76d1210b-2ea4-11e6-b72f-799c4ca4e698","method":{"position":"org.apache.commons.lang3.exception.ContextedRuntimeException:171","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic org.apache.commons.lang3.exception.ContextedRuntimeException addContextValue(final java.lang.String label, final java.lang.Object value) {\n    if (value instanceof short[]) {\n        {\n            org.apache.commons.lang3.exception.ExceptionContext.addContextValue(label, value);\n            return org.apache.commons.lang3.exception.ContextedRuntimeException.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.FieldUtils:682","type":"CtInvocationImpl","sourcecode":"java.lang.reflect.Modifier.isFinal(field.getModifiers())"},"failures":[],"tindex":"76d1210c-2ea4-11e6-b72f-030575aa0241","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:661","type":"CtMethodImpl","sourcecode":"public static void removeFinalModifier(java.lang.reflect.Field field) {\n    if (java.lang.reflect.Modifier.isFinal(field.getModifiers())) {\n        {\n            org.apache.commons.lang3.reflect.FieldUtils.removeFinalModifier(field, true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"field"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:244","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[353,354,355,356],"tindex":"76d1481d-2ea4-11e6-b72f-754f56f8f9c4","method":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:243","type":"CtMethodImpl","sourcecode":"public static <K, V>V putIfAbsent(final java.util.concurrent.ConcurrentMap<K, V> map, final K key, final V value) {\n    if (map == null) {\n        {\n            if (map == null) {\n                return null;\n            } \n            final V V = map.putIfAbsent(key, value);\n            return result != null ? result : value;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:567","type":"CtBinaryOperatorImpl","sourcecode":"(isEquals) == false"},"failures":[357],"tindex":"76d16f2e-2ea4-11e6-b72f-df9cd9d0e6e2","method":{"position":"org.apache.commons.lang3.StringUtils:3221","type":"CtMethodImpl","sourcecode":"private static java.lang.String[] splitByCharacterType(final java.lang.String str, final boolean camelCase) {\n    if (camelCase == false) {\n        {\n            if (str == null) {\n                return null;\n            } \n            if (str.isEmpty()) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.String[];\n            } \n            final char[] char[] = str.toCharArray();\n            final java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n            int int = 0;\n            int int = java.lang.Character.getType(c[tokenStart]);\n            for (int int = tokenStart + 1 ; pos < (c.int) ; pos++) {\n                final int int = java.lang.Character.getType(c[pos]);\n                if (type == currentType) {\n                    continue;\n                } \n                if ((camelCase && (type == (java.lang.Character.java.lang.Character.byte))) && (currentType == (java.lang.Character.java.lang.Character.byte))) {\n                    final int int = pos - 1;\n                    if (newTokenStart != tokenStart) {\n                        list.add(new java.lang.String(c , tokenStart , (newTokenStart - tokenStart)));\n                        tokenStart = newTokenStart;\n                    } \n                } else {\n                    list.add(new java.lang.String(c , tokenStart , (pos - tokenStart)));\n                    tokenStart = pos;\n                }\n                currentType = type;\n            }\n            list.add(new java.lang.String(c , tokenStart , ((c.int) - tokenStart)));\n            return list.toArray(new java.lang.String[list.size()]);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isEquals":"camelCase"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2487","type":"CtBinaryOperatorImpl","sourcecode":"end != (org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND)"},"failures":[358,359,360,361,362,363,364,365,366,367,368,369],"tindex":"76d20b6f-2ea4-11e6-b72f-1f12a1cde16f","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:574","type":"CtMethodImpl","sourcecode":"public java.lang.String replace(final org.apache.commons.lang3.text.StrBuilder source, final int offset, final int length) {\n    if (length != offset) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (source == null) {\n                return null;\n            } \n            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(length).append(source, offset, length);\n            substitute(buf, 0, length);\n            return buf.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND":"offset","end":"length"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5611","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[370],"tindex":"76d20b70-2ea4-11e6-b72f-1deb9d3dc17c","method":{"position":"org.apache.commons.lang3.StringUtils:4352","type":"CtMethodImpl","sourcecode":"public static java.lang.String remove(final java.lang.String str, final java.lang.String remove) {\n    if (remove == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(remove))) {\n                return str;\n            } \n            return org.apache.commons.lang3.StringUtils.replace(str, remove, org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String, (-1));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"remove"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2129","type":"CtBinaryOperatorImpl","sourcecode":"endIndex > (size)"},"failures":[],"tindex":"76d23281-2ea4-11e6-b72f-a37c6ce31566","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:685","type":"CtMethodImpl","sourcecode":"private int readNextToken(final char[] srcChars, int start, final int len, final org.apache.commons.lang3.text.StrBuilder workArea, final java.util.List<java.lang.String> tokenList) {\n    if (len > len) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            while (start < len) {\n                final int int = java.lang.Math.max(getIgnoredMatcher().isMatch(srcChars, start, start, len), getTrimmerMatcher().isMatch(srcChars, start, start, len));\n                if (((removeLen == 0) || ((getDelimiterMatcher().isMatch(srcChars, start, start, len)) > 0)) || ((getQuoteMatcher().isMatch(srcChars, start, start, len)) > 0)) {\n                    break;\n                } \n                start += removeLen;\n            }\n            if (start >= len) {\n                addToken(tokenList, \"\");\n                return -1;\n            } \n            final int int = getDelimiterMatcher().isMatch(srcChars, start, start, len);\n            if (delimLen > 0) {\n                addToken(tokenList, \"\");\n                return start + delimLen;\n            } \n            final int int = getQuoteMatcher().isMatch(srcChars, start, start, len);\n            if (quoteLen > 0) {\n                return readWithQuotes(srcChars, (start + quoteLen), len, workArea, tokenList, start, quoteLen);\n            } \n            return readWithQuotes(srcChars, start, len, workArea, tokenList, 0, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"len","endIndex":"len"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:967","type":"CtBinaryOperatorImpl","sourcecode":"(seq == null) || (searchSeq == null)"},"failures":[],"tindex":"76d23282-2ea4-11e6-b72f-cf05ece3b4ce","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:197","type":"CtMethodImpl","sourcecode":"public static <V>java.lang.String replace(final java.lang.Object source, final java.util.Map<java.lang.String, V> valueMap, final java.lang.String prefix, final java.lang.String suffix) {\n    if ((source == null) || (source == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.lang3.text.StrSubstitutor(valueMap , prefix , suffix).replace(source);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"searchSeq":"source","seq":"source"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:691","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[],"tindex":"76d23283-2ea4-11e6-b72f-65d2a7933171","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:457","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final long[] array) {\n    if (array == array) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, array, null);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array","rhs":"array"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1496","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[371,372,373],"tindex":"76d25994-2ea4-11e6-b72f-65466083dc01","method":{"position":"org.apache.commons.lang3.math.Fraction:319","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.math.Fraction getFraction(java.lang.String str) {\n    if (str == null) {\n        {\n            if (str == null) {\n                throw new java.lang.IllegalArgumentException(\"The string must not be null\");\n            } \n            int int = str.indexOf('.');\n            if (pos >= 0) {\n                return org.apache.commons.lang3.math.Fraction.getFraction(java.lang.Double.parseDouble(str));\n            } \n            pos = str.indexOf(' ');\n            if (pos > 0) {\n                final int int = java.lang.Integer.parseInt(str.substring(0, pos));\n                str = str.substring((pos + 1));\n                pos = str.indexOf('/');\n                if (pos < 0) {\n                    throw new java.lang.NumberFormatException(\"The fraction could not be parsed as the format X Y/Z\");\n                } else {\n                    final int int = java.lang.Integer.parseInt(str.substring(0, pos));\n                    final int int = java.lang.Integer.parseInt(str.substring((pos + 1)));\n                    return org.apache.commons.lang3.math.Fraction.getFraction(whole, numer, denom);\n                }\n            } \n            pos = str.indexOf('/');\n            if (pos < 0) {\n                return org.apache.commons.lang3.math.Fraction.getFraction(java.lang.Integer.parseInt(str), 1);\n            } else {\n                final int int = java.lang.Integer.parseInt(str.substring(0, pos));\n                final int int = java.lang.Integer.parseInt(str.substring((pos + 1)));\n                return org.apache.commons.lang3.math.Fraction.getFraction(numer, denom);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1760","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(seq)) || (org.apache.commons.lang3.StringUtils.isEmpty(searchChars))"},"failures":[374],"tindex":"76d25995-2ea4-11e6-b72f-6355b5a85385","method":{"position":"org.apache.commons.lang3.StringUtils:5990","type":"CtMethodImpl","sourcecode":"public static boolean isAsciiPrintable(final java.lang.CharSequence cs) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(cs)) || (org.apache.commons.lang3.StringUtils.isEmpty(cs))) {\n        {\n            if (cs == null) {\n                return false;\n            } \n            final int int = cs.length();\n            for (int int = 0 ; i < sz ; i++) {\n                if ((org.apache.commons.lang3.CharUtils.isAsciiPrintable(cs.charAt(i))) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"seq":"cs","searchChars":"cs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:664","type":"CtBinaryOperatorImpl","sourcecode":"nullString == null"},"failures":[375],"tindex":"76d280a6-2ea4-11e6-b72f-2392e5bd75c8","method":{"position":"org.apache.commons.lang3.StringUtils:5610","type":"CtMethodImpl","sourcecode":"public static java.lang.String upperCase(final java.lang.String str, final java.util.Locale locale) {\n    if (str == null) {\n        {\n            if (str == null) {\n                return null;\n            } \n            return str.toUpperCase(locale);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nullString":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:201","type":"CtVariableReadImpl","sourcecode":"wrapLongWords"},"failures":[376],"tindex":"76d280a7-2ea4-11e6-b72f-89dc6417f1eb","method":{"position":"org.apache.commons.lang3.BitField:279","type":"CtMethodImpl","sourcecode":"public byte setByteBoolean(final byte holder, final boolean flag) {\n    if (flag) {\n        {\n            return flag ? setByte(holder) : clearByte(holder);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"wrapLongWords":"flag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:530","type":"CtBinaryOperatorImpl","sourcecode":"((dec == null) && (exp == null)) && ((((numeric.charAt(0)) == '-') && (org.apache.commons.lang3.math.NumberUtils.isDigits(numeric.substring(1)))) || (org.apache.commons.lang3.math.NumberUtils.isDigits(numeric)))"},"failures":[],"tindex":"76d280a8-2ea4-11e6-b72f-8747d43b61d1","method":{"position":"org.apache.commons.lang3.StringUtils:4249","type":"CtMethodImpl","sourcecode":"public static java.lang.String removeStartIgnoreCase(final java.lang.String str, final java.lang.String remove) {\n    if (((str == null) && (str == null)) && ((((str.charAt(0)) == '-') && (org.apache.commons.lang3.math.NumberUtils.isDigits(numeric.substring(1)))) || (org.apache.commons.lang3.math.NumberUtils.isDigits(numeric)))) {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(remove))) {\n                return str;\n            } \n            if (org.apache.commons.lang3.StringUtils.startsWithIgnoreCase(str, remove)) {\n                return str.substring(remove.length());\n            } \n            return str;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dec":"str","numeric":"str","exp":"str"},"type":"special","returnInThen":true,"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":22,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}