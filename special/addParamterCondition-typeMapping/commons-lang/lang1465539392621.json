{"failureDictionary":{"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":204,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":155,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":261,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":149,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":83,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":205,"org.apache.commons.lang3.LocaleUtilsTest.testLocaleLookupList_LocaleLocale":54,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementLongArray":307,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArrayEqualAsObject":216,"org.apache.commons.lang3.SerializationUtilsTest.testDeserializeBytesBadStream":398,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":67,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":129,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":248,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":250,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":213,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":241,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_char":315,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":82,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":22,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":202,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":234,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":84,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowables_Throwable_withoutCause":330,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":264,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":141,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":266,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":145,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementFloatArray":305,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetArrayComponentType":373,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":112,"org.apache.commons.lang3.math.FractionTest.testFactory_String":386,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfInt":362,"org.apache.commons.lang3.exception.ContextedExceptionTest.testJavaSerialization":397,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":148,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":342,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":230,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":130,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":123,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowables_Throwable_withCause":321,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSizeStartText":270,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOf_ThrowableClass":323,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":29,"org.apache.commons.lang3.AnnotationUtilsTest.testNonEquivalentAnnotationsOfSameType":289,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableCount_Throwable":328,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":177,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":19,"org.apache.commons.lang3.StringUtilsTest.testGetLevenshteinDistance_StringString":48,"org.apache.commons.lang3.AnnotationUtilsTest.testSameInstance":283,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":69,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementIntArray":359,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":120,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfByteWithStartIndex":313,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":70,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":34,"org.apache.commons.lang3.StringUtilsTest.testGetLevenshteinDistance_NullString":47,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":244,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":215,"org.apache.commons.lang3.AnnotationUtilsTest.testEquivalence":284,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":27,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowables_Throwable_recursiveCause":332,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayChar":298,"org.apache.commons.lang3.CharUtilsTest.testIsAsciiAlphanumeric_char":42,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetContentEnd":269,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":119,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":134,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":188,"org.apache.commons.lang3.builder.DiffBuilderTest.testStylePassedToDiffResult":211,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":156,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":258,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowables_Throwable_jdkNoCause":335,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":182,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":107,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendSeparator_String_String":50,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":16,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":28,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testBooleanMultiArray":340,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang303":391,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":247,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":193,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":208,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationPluralWords":354,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":242,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableWriter":326,"org.apache.commons.lang3.ArrayUtilsTest.testReverse":378,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":98,"org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayString":308,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":97,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":88,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":253,"org.apache.commons.lang3.BooleanUtilsTest.test_toInteger_boolean":382,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":103,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang303":393,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testArrayList":235,"org.apache.commons.lang3.time.DateUtilsTest.testRoundLang346":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":118,"org.apache.commons.lang3.SerializationUtilsTest.testDeserializeBytes":399,"org.apache.commons.lang3.builder.DiffBuilderTest.testSimilarObjectIgnoresAppends":214,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testBlank":254,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":117,"org.apache.commons.lang3.SerializationUtilsTest.testDeserializeClassCastException":401,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":77,"org.apache.commons.lang3.builder.DiffResultTest.testNullStyle":197,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":106,"org.apache.commons.lang3.StringUtilsTest.testJoin_Objectarray":309,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":140,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":32,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":91,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":179,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementByteArray":312,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":187,"org.apache.commons.lang3.StringUtilsTest.testGetJaroWinklerDistance_StringString":385,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":185,"org.apache.commons.lang3.builder.DiffBuilderTest.testNullLhs":224,"org.apache.commons.lang3.reflect.InheritanceUtilsTest.testDistanceGreaterThanZero":383,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":68,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSummaryObjectEndText":280,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":66,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":212,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":85,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":146,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable":163,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":15,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableList_Throwable_nested":320,"org.apache.commons.lang3.builder.DiffBuilderTest.testSameObjectIgnoresAppends":220,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":143,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":154,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":229,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetArraySeparator":278,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":95,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":210,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":5,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":186,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":20,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testLinkedList":237,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayLong":299,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayObject":311,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":219,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableList_Throwable_withoutCause":325,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":232,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testObjectArrayAsObject":339,"org.apache.commons.lang3.AnnotationUtilsTest.testGeneratedAnnotationEquivalentToRealAnnotation":287,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":223,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":136,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":206,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":79,"org.apache.commons.lang3.time.DateUtilsTest.testAddMilliseconds":12,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testDouble":52,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":252,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationHMS":352,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":150,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":24,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetRootCause_Throwable":337,"org.apache.commons.lang3.ArrayUtilsTest.testCloneFloat":306,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":121,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":228,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":158,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":111,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetFieldNameValueSeparator":274,"org.apache.commons.lang3.time.DateUtilsTest.testTruncate":3,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":190,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSimpleGet":348,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayDouble":56,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":99,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":90,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSizeEndText":273,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":160,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":71,"org.apache.commons.lang3.CharUtilsTest.testIsAsciiAlphaUpper_char":43,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":259,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":153,"org.apache.commons.lang3.SerializationUtilsTest.testDeserializeBytesOfNull":402,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSplit":349,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":152,"org.apache.commons.lang3.time.DateUtilsTest.testSetYears":14,"org.apache.commons.lang3.StringUtilsTest.testDifference_StringString":58,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":255,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":18,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":267,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":181,"org.apache.commons.lang3.builder.DiffResultTest.testListIsNonModifiable":196,"org.apache.commons.lang3.time.DateUtilsTest.testIsSameInstant_Cal":372,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDifferingStyles":46,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":63,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayBoolean":300,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testDoubleArrayAsObject":51,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayInt":294,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":233,"org.apache.commons.lang3.time.DateUtilsTest.testAddMonths":8,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testObjectArray":338,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":87,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiBooleanArray":364,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":124,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":344,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDefaults":347,"org.apache.commons.lang3.time.DateUtilsTest.testSetMonths":10,"org.apache.commons.lang3.builder.DiffResultTest.testNullRhs":200,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":35,"org.apache.commons.lang3.ArrayUtilsTest.testReverseObjectRange":379,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayFloat":0,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOf_String":37,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":157,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationISO":353,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":256,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":125,"org.apache.commons.lang3.EnumUtilsTest.test_generateBitVector_nullArrayElement":303,"org.apache.commons.lang3.StringUtilsTest.testDifferenceAt_StringString":57,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":135,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":26,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang303":392,"org.apache.commons.lang3.exception.ExceptionUtilsTest.test_getRootCauseMessage_Throwable":317,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableStream":324,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":227,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":231,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringStringarray":358,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":176,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_Widening":164,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDateDefaults":45,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionCompare":389,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayObject":301,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testJavaSerialization":395,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":23,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementIntArray":360,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetCause_ThrowableArray":329,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":89,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":162,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":262,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":345,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendSeparator_String":49,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":127,"org.apache.commons.lang3.StringUtilsTest.testReverseDelimited_StringChar":377,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":184,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":101,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":209,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":96,"org.apache.commons.lang3.time.FastDateParserTest.testLang303":394,"org.apache.commons.lang3.AnnotationUtilsTest.testBothArgsNull":288,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":263,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":161,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":151,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetNullText":272,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLANG984":351,"org.apache.commons.lang3.text.StrBuilderTest.testGetChars":376,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyDoubleObject":38,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLANG982":350,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":102,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":138,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":109,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":251,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetRootCauseStackTrace_Throwable":327,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableList_Throwable_jdkNoCause":319,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":221,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":86,"org.apache.commons.lang3.AnnotationUtilsTest.testOneArgNull":281,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationWords":356,"org.apache.commons.lang3.time.FastDatePrinterTest.testFormat":343,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":166,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":207,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":226,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_DefaultUnboxing_Widening":165,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":21,"org.apache.commons.lang3.builder.DiffResultTest.testNullList":194,"org.apache.commons.lang3.ArrayUtilsTest.testContainsInt":361,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":36,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":114,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":245,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":137,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":128,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_String_int_int":62,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":72,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayByte":297,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":64,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":249,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testBlank":239,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayShort":296,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":265,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":115,"org.apache.commons.lang3.builder.DiffResultTest.testIterator":198,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetCause_Throwable":322,"org.apache.commons.lang3.ArrayUtilsTest.testReverseShort":167,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":144,"org.apache.commons.lang3.time.DateUtilsTest.testSetHours":13,"org.apache.commons.lang3.builder.DiffResultTest.testNoDifferencesString":195,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":100,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":246,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":74,"org.apache.commons.lang3.math.NumberUtilsTest.testToIntString":375,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":139,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":201,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":122,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":191,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":203,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":75,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":178,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":222,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":147,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":105,"org.apache.commons.lang3.builder.CompareToBuilderTest.testBooleanArray":365,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":218,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOfType_ThrowableClassInt":333,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementFloatArray":304,"org.apache.commons.lang3.ValidateTest.testValidIndex_array":368,"org.apache.commons.lang3.SerializationUtilsTest.testRoundtrip":400,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testDoubleArray":53,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":80,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":192,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":243,"org.apache.commons.lang3.AnnotationUtilsTest.testAnnotationsOfDifferingTypes":285,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":217,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testCopyOnWriteArrayList":236,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":126,"org.apache.commons.lang3.builder.DiffResultTest.testNullLhs":199,"org.apache.commons.lang3.StringUtilsTest.testJoin_Objects":310,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":257,"org.apache.commons.lang3.ArrayUtilsTest.testToString":291,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateTimeInstance":346,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetContentStart":271,"org.apache.commons.lang3.LocaleUtilsTest.testLocaleLookupList_Locale":55,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDuration":355,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":92,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":240,"org.apache.commons.lang3.ValidateTest.testValidIndex_withMessage_array":369,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOf_ThrowableClassInt":331,"org.apache.commons.lang3.builder.CompareToBuilderTest.testBooleanArrayHiddenByObject":366,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayByte":40,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetDeclaredFieldAccessIllegalArgumentException1":367,"org.apache.commons.lang3.exception.ExceptionUtilsTest.test_getMessage_Throwable":381,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSummaryObjectStartText":276,"org.apache.commons.lang3.time.DateUtilsTest.testWeekIterator":9,"org.apache.commons.lang3.AnnotationUtilsTest.testHashCode":286,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableList_Throwable_recursiveCause":334,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":116,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testJavaSerialization":396,"org.apache.commons.lang3.builder.EqualsBuilderTest.testDouble":76,"org.apache.commons.lang3.time.DateUtilsTest.testMonthIterator":1,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":183,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareExcludeFields":387,"org.apache.commons.lang3.text.StrBuilderTest.testContains_String":41,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementShortArray":371,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":81,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":142,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":131,"org.apache.commons.lang3.text.StrTokenizerTest.test8":175,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":31,"org.apache.commons.lang3.time.DateUtilsTest.testRound":4,"org.apache.commons.lang3.text.StrTokenizerTest.test5":172,"org.apache.commons.lang3.text.StrTokenizerTest.test4":171,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":132,"org.apache.commons.lang3.text.StrTokenizerTest.test7":174,"org.apache.commons.lang3.ValidateTest.testNoNullElementsArray2":293,"org.apache.commons.lang3.StringUtilsSubstringTest.testCountMatches_String":314,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":133,"org.apache.commons.lang3.text.StrTokenizerTest.test6":173,"org.apache.commons.lang3.ValidateTest.testNoNullElementsArray1":292,"org.apache.commons.lang3.text.StrTokenizerTest.test1":168,"org.apache.commons.lang3.text.StrTokenizerTest.test3":170,"org.apache.commons.lang3.text.StrTokenizerTest.test2":169,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":108,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetFieldSeparator":277,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":268,"org.apache.commons.lang3.AnnotationUtilsTest.testIsValidAnnotationMemberType":290,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":260,"org.apache.commons.lang3.EnumUtilsTest.test_generateBitVectors_nullArrayElement":302,"org.apache.commons.lang3.ArrayUtilsTest.testContainsShort":370,"org.apache.commons.lang3.time.DateUtilsTest.testSetDays":11,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfIntWithStartIndex":363,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareTransients":390,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":94,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeFullyWithDelimiters_String":61,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOfType_ThrowableClass":316,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":180,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayFloat":295,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetArrayEnd":275,"org.apache.commons.lang3.math.NumberUtilsTest.testToIntStringI":374,"org.apache.commons.lang3.ArrayUtilsTest.testHashCode":341,"org.apache.commons.lang3.builder.DiffBuilderTest.testNullRhs":225,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":93,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":59,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyDoubleObjectEmptyArray":39,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveIntArray":384,"org.apache.commons.lang3.time.DateUtilsTest.testTruncateLang59":6,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompare":388,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetArrayStart":279,"org.apache.commons.lang3.StringUtilsTest.testDefault_String":380,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringString":357,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":189,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeFully_String":60,"org.apache.commons.lang3.CharUtilsTest.testIsAsciiAlpha_char":44,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":159,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":113,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":17,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":282,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowables_Throwable_nested":318,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableList_Throwable_withCause":336,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":110,"org.apache.commons.lang3.time.DateUtilsTest.testSetSeconds":7,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":238},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:511","type":"CtBinaryOperatorImpl","sourcecode":"(comparison) != 0"},"failures":[0],"tindex":"e08c4e92-2ed2-11e6-8719-b7bc6df67901","method":{"position":"org.apache.commons.lang3.ArrayUtils:1154","type":"CtMethodImpl","sourcecode":"public static float[] subarray(final float[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (startIndexInclusive != 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            if (startIndexInclusive < 0) {\n                startIndexInclusive = 0;\n            } \n            if (endIndexExclusive > (array.int)) {\n                endIndexExclusive = array.int;\n            } \n            final int int = endIndexExclusive - startIndexInclusive;\n            if (newSize <= 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.float[];\n            } \n            final float[] float[] = new float[newSize];\n            java.lang.System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);\n            return subarray;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparison":"startIndexInclusive"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4533","type":"CtBinaryOperatorImpl","sourcecode":"(--max) == 0"},"failures":[],"tindex":"e08d38f3-2ed2-11e6-8719-2fae486b0d33","method":{"position":"org.apache.commons.lang3.text.StrBuilder:877","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendln(final java.lang.String str, final int startIndex, final int length) {\n    if ((--length) == 0) {\n        {\n            return append(str, startIndex, length).appendNewLine();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"max":"length"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1173","type":"CtBinaryOperatorImpl","sourcecode":"rangeStyle == (org.apache.commons.lang3.time.DateUtils.RANGE_MONTH_MONDAY)"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"tindex":"e08d38f4-2ed2-11e6-8719-a19bbc132140","method":{"position":"org.apache.commons.lang3.time.DateUtils:957","type":"CtMethodImpl","sourcecode":"private static void modify(final java.util.Calendar val, final int field, final int modType) {\n    if (field == field) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((val.get(java.util.Calendar.java.util.Calendar.int)) > 280000000) {\n                throw new java.lang.ArithmeticException(\"Calendar value too large for accurate calculations\");\n            } \n            if (field == (java.util.Calendar.java.util.Calendar.int)) {\n                return ;\n            } \n            final java.util.Date java.util.Date = val.getTime();\n            long long = date.getTime();\n            boolean boolean = false;\n            final int int = val.get(java.util.Calendar.java.util.Calendar.int);\n            if (((org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.int) == modType) || (millisecs < 500)) {\n                time = time - millisecs;\n            } \n            if (field == (java.util.Calendar.java.util.Calendar.int)) {\n                done = true;\n            } \n            final int int = val.get(java.util.Calendar.java.util.Calendar.int);\n            if ((!done) && (((org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.int) == modType) || (seconds < 30))) {\n                time = time - (seconds * 1000L);\n            } \n            if (field == (java.util.Calendar.java.util.Calendar.int)) {\n                done = true;\n            } \n            final int int = val.get(java.util.Calendar.java.util.Calendar.int);\n            if ((!done) && (((org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.int) == modType) || (minutes < 30))) {\n                time = time - (minutes * 60000L);\n            } \n            if ((date.getTime()) != time) {\n                date.setTime(time);\n                val.setTime(date);\n            } \n            boolean boolean = false;\n            for (final int[] int[] : org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.int[][]) {\n                for (final int int : aField) {\n                    if (element == field) {\n                        if ((modType == (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.int)) || ((modType == (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.int)) && roundUp)) {\n                            if (field == (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.int)) {\n                                if ((val.get(java.util.Calendar.java.util.Calendar.int)) == 1) {\n                                    val.add(java.util.Calendar.java.util.Calendar.int, 15);\n                                } else {\n                                    val.add(java.util.Calendar.java.util.Calendar.int, (-15));\n                                    val.add(java.util.Calendar.java.util.Calendar.int, 1);\n                                }\n                            } else if (field == (java.util.Calendar.java.util.Calendar.int)) {\n                                if ((val.get(java.util.Calendar.java.util.Calendar.int)) == 0) {\n                                    val.add(java.util.Calendar.java.util.Calendar.int, 12);\n                                } else {\n                                    val.add(java.util.Calendar.java.util.Calendar.int, (-12));\n                                    val.add(java.util.Calendar.java.util.Calendar.int, 1);\n                                }\n                            } else {\n                                val.add(aField[0], 1);\n                            }\n                        } \n                        return ;\n                    } \n                }\n                int int = 0;\n                boolean boolean = false;\n                switch (field) {\n                    case org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.int :\n                        if ((aField[0]) == (java.util.Calendar.java.util.Calendar.int)) {\n                            offset = (val.get(java.util.Calendar.java.util.Calendar.int)) - 1;\n                            if (offset >= 15) {\n                                offset -= 15;\n                            } \n                            roundUp = offset > 7;\n                            offsetSet = true;\n                        } \n                        break;\n                    case java.util.Calendar.java.util.Calendar.int :\n                        if ((aField[0]) == (java.util.Calendar.java.util.Calendar.int)) {\n                            offset = val.get(java.util.Calendar.java.util.Calendar.int);\n                            if (offset >= 12) {\n                                offset -= 12;\n                            } \n                            roundUp = offset >= 6;\n                            offsetSet = true;\n                        } \n                        break;\n                    default :\n                        break;\n                }\n                if (!offsetSet) {\n                    final int int = val.getActualMinimum(aField[0]);\n                    final int int = val.getActualMaximum(aField[0]);\n                    offset = (val.get(aField[0])) - min;\n                    roundUp = offset > ((max - min) / 2);\n                } \n                if (offset != 0) {\n                    val.set(aField[0], ((val.get(aField[0])) - offset));\n                } \n            }\n            throw new java.lang.IllegalArgumentException(((\"The field \" + field) + \" is not supported\"));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"rangeStyle":"field","org.apache.commons.lang3.time.DateUtils.RANGE_MONTH_MONDAY":"field"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:202","type":"CtBinaryOperatorImpl","sourcecode":"(tmp.length()) != (duration.length())"},"failures":[37],"tindex":"e08dae25-2ed2-11e6-8719-a7efb72fd290","method":{"position":"org.apache.commons.lang3.StringUtils:926","type":"CtMethodImpl","sourcecode":"public static int indexOf(final java.lang.CharSequence seq, final java.lang.CharSequence searchSeq) {\n    if ((searchSeq.length()) != (seq.length())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((seq == null) || (searchSeq == null)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            return org.apache.commons.lang3.CharSequenceUtils.indexOf(seq, searchSeq, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"duration":"seq","tmp":"searchSeq"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3298","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[38,39],"tindex":"e08dae26-2ed2-11e6-8719-ff93afcb8b2b","method":{"position":"org.apache.commons.lang3.ArrayUtils:792","type":"CtMethodImpl","sourcecode":"public static java.lang.Double[] nullToEmpty(final java.lang.Double[] array) {\n    if (array == null) {\n        {\n            if ((array == null) || ((array.int) == 0)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Double[];\n            } \n            return array;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1118","type":"CtBinaryOperatorImpl","sourcecode":"startIndexInclusive < 0"},"failures":[40],"tindex":"e08e2357-2ed2-11e6-8719-d3c0500fd31a","method":{"position":"org.apache.commons.lang3.ArrayUtils:1074","type":"CtMethodImpl","sourcecode":"public static byte[] subarray(final byte[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (endIndexExclusive >= startIndexInclusive) {\n        {\n            if (startIndexInclusive < 0) {\n                {\n                    if (array == null) {\n                        return null;\n                    } \n                    if (startIndexInclusive < 0) {\n                        startIndexInclusive = 0;\n                    } \n                    if (endIndexExclusive > (array.int)) {\n                        endIndexExclusive = array.int;\n                    } \n                    final int int = endIndexExclusive - startIndexInclusive;\n                    if (newSize <= 0) {\n                        return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.byte[];\n                    } \n                    final byte[] byte[] = new byte[newSize];\n                    java.lang.System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);\n                    return subarray;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndexInclusive":"startIndexInclusive"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1338","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[41],"tindex":"e08e4a68-2ed2-11e6-8719-d5051e9ad76d","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2263","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.String str) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n        {\n            return (indexOf(str, 0)) >= 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5778","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isUpperCase(ch)"},"failures":[42,43,44],"tindex":"e08e7179-2ed2-11e6-8719-a79259e889b1","method":{"position":"org.apache.commons.lang3.CharUtils:478","type":"CtMethodImpl","sourcecode":"public static boolean isAsciiAlphaUpper(final char ch) {\n    if (java.lang.Character.isUpperCase(ch)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (ch >= 'A') && (ch <= 'Z');\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:928","type":"CtBinaryOperatorImpl","sourcecode":"(comparison) != 0"},"failures":[45,46],"tindex":"e08e717a-2ed2-11e6-8719-91a97b7aa079","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:320","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.time.FastDateFormat getDateTimeInstance(final int dateStyle, final int timeStyle, final java.util.Locale locale) {\n    if (timeStyle != 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getDateTimeInstance(dateStyle, timeStyle, null, locale);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparison":"timeStyle"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.SystemUtils:1465","type":"CtBinaryOperatorImpl","sourcecode":"osName == null"},"failures":[47,48],"tindex":"e08e988b-2ed2-11e6-8719-5f11816a02f0","method":{"position":"org.apache.commons.lang3.StringUtils:6740","type":"CtMethodImpl","sourcecode":"public static int getLevenshteinDistance(java.lang.CharSequence s, java.lang.CharSequence t) {\n    if (s == null) {\n        {\n            if ((s == null) || (t == null)) {\n                throw new java.lang.IllegalArgumentException(\"Strings must not be null\");\n            } \n            int int = s.length();\n            int int = t.length();\n            if (n == 0) {\n                return m;\n            } else if (m == 0) {\n                return n;\n            } \n            if (n > m) {\n                final java.lang.CharSequence java.lang.CharSequence = s;\n                s = t;\n                t = tmp;\n                n = m;\n                m = t.length();\n            } \n            int[] int[] = new int[n + 1];\n            int[] int[] = new int[n + 1];\n            int[] int[];\n            int int;\n            int int;\n            char char;\n            int int;\n            for (i = 0 ; i <= n ; i++) {\n                p[i] = i;\n            }\n            for (j = 1 ; j <= m ; j++) {\n                t_j = t.charAt((j - 1));\n                d[0] = j;\n                for (i = 1 ; i <= n ; i++) {\n                    cost = (s.charAt((i - 1))) == t_j ? 0 : 1;\n                    d[i] = java.lang.Math.min(java.lang.Math.min(((d[(i - 1)]) + 1), ((p[i]) + 1)), ((p[(i - 1)]) + cost));\n                }\n                _d = p;\n                p = d;\n                d = _d;\n            }\n            return p[n];\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"osName":"s"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4101","type":"CtBinaryOperatorImpl","sourcecode":"separator != null"},"failures":[49,50],"tindex":"e08e988c-2ed2-11e6-8719-5d347ea13eb4","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1245","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendSeparator(final java.lang.String standard, final java.lang.String defaultIfEmpty) {\n    if (standard != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.String java.lang.String = isEmpty() ? defaultIfEmpty : standard;\n            if (str != null) {\n                append(str);\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"separator":"standard"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1970","type":"CtBinaryOperatorImpl","sourcecode":"nullText == null"},"failures":[],"tindex":"e08ebf9d-2ed2-11e6-8719-db5e12aea548","method":{"position":"org.apache.commons.lang3.SystemUtils:1428","type":"CtMethodImpl","sourcecode":"static boolean isJavaVersionMatch(final java.lang.String version, final java.lang.String versionPrefix) {\n    if (versionPrefix == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (version == null) {\n                return false;\n            } \n            return version.startsWith(versionPrefix);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nullText":"versionPrefix"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1767","type":"CtBinaryOperatorImpl","sourcecode":"((i + 1) < strLen) && (java.lang.Character.isHighSurrogate(ch))"},"failures":[],"tindex":"e08ebf9e-2ed2-11e6-8719-c9f1ee539f82","method":{"position":"org.apache.commons.lang3.StringUtils:5373","type":"CtMethodImpl","sourcecode":"public static java.lang.String leftPad(final java.lang.String str, final int size, final char padChar) {\n    if (((size + 1) < size) && (java.lang.Character.isHighSurrogate(padChar))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return null;\n            } \n            final int int = size - (str.length());\n            if (pads <= 0) {\n                return str;\n            } \n            if (pads > (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) {\n                return org.apache.commons.lang3.StringUtils.leftPad(str, size, java.lang.String.valueOf(padChar));\n            } \n            return org.apache.commons.lang3.StringUtils.repeat(padChar, pads).concat(str);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"strLen":"size","ch":"padChar","i":"size"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:103","type":"CtInvocationImpl","sourcecode":"java.lang.Double.isNaN(a)"},"failures":[51,52,53],"tindex":"e08ee6af-2ed2-11e6-8719-952af86d6925","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:676","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final double value) {\n    if (java.lang.Double.isNaN(value)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (java.lang.Double.isNaN(value)) {\n                {\n                    return append(java.lang.Double.doubleToLongBits(value));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:196","type":"CtBinaryOperatorImpl","sourcecode":"locale != null"},"failures":[54,55],"tindex":"e08ee6b0-2ed2-11e6-8719-fff70cb28148","method":{"position":"org.apache.commons.lang3.LocaleUtils:172","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.util.Locale> localeLookupList(final java.util.Locale locale) {\n    if (locale != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.LocaleUtils.localeLookupList(locale, locale);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"locale":"locale"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5897","type":"CtBinaryOperatorImpl","sourcecode":"count == null"},"failures":[],"tindex":"e08ee6b1-2ed2-11e6-8719-9bbb3001c101","method":{"position":"org.apache.commons.lang3.mutable.MutableLong:169","type":"CtMethodImpl","sourcecode":"public void subtract(final java.lang.Number operand) {\n    if (operand == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.mutable.MutableLong.this.long -= operand.longValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"operand"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3528","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[56],"tindex":"e08ee6b2-2ed2-11e6-8719-0d2d90f667c8","method":{"position":"org.apache.commons.lang3.ArrayUtils:4124","type":"CtMethodImpl","sourcecode":"public static double[] add(final double[] array, final double element) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final double[] double[] = ((double[])(org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(array, java.lang.Double.java.lang.Double.java.lang.Class<java.lang.Double>)));\n            newArray[((newArray.int) - 1)] = element;\n            return newArray;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2485","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[],"tindex":"e08f0dc3-2ed2-11e6-8719-f3cd3de538ec","method":{"position":"org.apache.commons.lang3.Conversion:1356","type":"CtMethodImpl","sourcecode":"public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n    if (srcPos < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (0 == nBytes) {\n                return dst;\n            } \n            if ((((nBytes - 1) * 8) + srcPos) >= 16) {\n                throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n            } \n            int int = 0;\n            for (int int = 0 ; i < nBytes ; i++) {\n                shift = (i * 8) + srcPos;\n                dst[(dstPos + i)] = ((byte)(255 & (src >> shift)));\n            }\n            return dst;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"srcPos"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4878","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(searchChars))"},"failures":[57,58],"tindex":"e08f0dc4-2ed2-11e6-8719-9b6b0b2dd2e5","method":{"position":"org.apache.commons.lang3.StringUtils:6540","type":"CtMethodImpl","sourcecode":"public static int indexOfDifference(final java.lang.CharSequence cs1, final java.lang.CharSequence cs2) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(cs1)) || (org.apache.commons.lang3.StringUtils.isEmpty(cs2))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (cs1 == cs2) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            if ((cs1 == null) || (cs2 == null)) {\n                return 0;\n            } \n            int int;\n            for (i = 0 ; (i < (cs1.length())) && (i < (cs2.length())) ; ++i) {\n                if ((cs1.charAt(i)) != (cs2.charAt(i))) {\n                    break;\n                } \n            }\n            if ((i < (cs2.length())) || (i < (cs1.length()))) {\n                return i;\n            } \n            return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"cs1","searchChars":"cs2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:1042","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[59],"tindex":"e08f0dc5-2ed2-11e6-8719-dd5e6c8768c9","method":{"position":"org.apache.commons.lang3.Conversion:493","type":"CtMethodImpl","sourcecode":"public static char binaryBeMsb0ToHexDigit(final boolean[] src) {\n    if (src == null) {\n        {\n            return org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(src, 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"src"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2002","type":"CtBinaryOperatorImpl","sourcecode":"sizeStartText == null"},"failures":[],"tindex":"e08f34d6-2ed2-11e6-8719-c3d477a1c8d0","method":{"position":"org.apache.commons.lang3.time.FastDateParser:306","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.Date parse(final java.lang.String source, final java.text.ParsePosition pos) {\n    if (source == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = pos.getIndex();\n            final java.util.regex.Matcher java.util.regex.Matcher = java.util.regex.Pattern.matcher(source.substring(offset));\n            if (!(matcher.lookingAt())) {\n                return null;\n            } \n            final java.util.Calendar java.util.Calendar = java.util.Calendar.getInstance(java.util.TimeZone, java.util.Locale);\n            cal.clear();\n            for (int int = 0 ; i < (org.apache.commons.lang3.time.FastDateParser.Strategy[].int) ; ) {\n                final org.apache.commons.lang3.time.FastDateParser.Strategy org.apache.commons.lang3.time.FastDateParser.Strategy = org.apache.commons.lang3.time.FastDateParser.Strategy[][(i++)];\n                strategy.setCalendar(org.apache.commons.lang3.time.FastDateParser.this, cal, matcher.group(i));\n            }\n            pos.setIndex((offset + (matcher.end())));\n            return cal.getTime();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sizeStartText":"source"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2373","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(separator))"},"failures":[60,61],"tindex":"e08f34d7-2ed2-11e6-8719-d9fbbab3816b","method":{"position":"org.apache.commons.lang3.text.WordUtils:353","type":"CtMethodImpl","sourcecode":"public static java.lang.String capitalizeFully(java.lang.String str, final char... delimiters) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(str))) {\n        {\n            final int int = delimiters == null ? -1 : delimiters.int;\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (delimLen == 0)) {\n                return str;\n            } \n            str = str.toLowerCase();\n            return org.apache.commons.lang3.text.WordUtils.capitalize(str, delimiters);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str","separator":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2107","type":"CtBinaryOperatorImpl","sourcecode":"len > (size)"},"failures":[],"tindex":"e08f34d8-2ed2-11e6-8719-03427606f62b","method":{"position":"org.apache.commons.lang3.Conversion:604","type":"CtMethodImpl","sourcecode":"public static char intToHexDigit(final int nibble) {\n    if (nibble > nibble) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final char char = java.lang.Character.forDigit(nibble, 16);\n            if (c == (java.lang.Character.java.lang.Character.char)) {\n                throw new java.lang.IllegalArgumentException((\"nibble value not between 0 and 15: \" + nibble));\n            } \n            return c;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"nibble","size":"nibble"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:593","type":"CtBinaryOperatorImpl","sourcecode":"v > 0"},"failures":[62,63,64,65,66,67,68,69,70,71,72,73,74,75],"tindex":"e08f5be9-2ed2-11e6-8719-c1199f11cc0e","method":{"position":"org.apache.commons.lang3.text.StrBuilder:495","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic org.apache.commons.lang3.text.StrBuilder append(final java.lang.CharSequence seq, final int startIndex, final int length) {\n    if (length > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (seq == null) {\n                return appendNull();\n            } \n            return append(seq.toString(), startIndex, length);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"v":"length"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:103","type":"CtInvocationImpl","sourcecode":"java.lang.Double.isNaN(a)"},"failures":[],"tindex":"e08faa0a-2ed2-11e6-8719-65481102f00d","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:676","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final double value) {\n    if (java.lang.Double.isNaN(value)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (java.lang.Double.isNaN(value)) {\n                {\n                    return append(java.lang.Double.doubleToLongBits(value));\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:858","type":"CtBinaryOperatorImpl","sourcecode":"rhs == null"},"failures":[],"tindex":"e08faa0b-2ed2-11e6-8719-a56a8a0d1a82","method":{"position":"org.apache.commons.lang3.StringUtils:7635","type":"CtMethodImpl","sourcecode":"public static java.lang.String toEncodedString(byte[] bytes, java.nio.charset.Charset charset) {\n    if (bytes == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new java.lang.String(bytes , (charset != null ? charset : java.nio.charset.Charset.defaultCharset()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"rhs":"bytes"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:106","type":"CtInvocationImpl","sourcecode":"java.lang.Double.isNaN(b)"},"failures":[76],"tindex":"e08fd11c-2ed2-11e6-8719-6fb6921a8f55","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:587","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.EqualsBuilder append(final double lhs, final double rhs) {\n    if (java.lang.Double.isNaN(lhs)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((boolean) == false) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            return append(java.lang.Double.doubleToLongBits(lhs), java.lang.Double.doubleToLongBits(rhs));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"lhs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2949","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"e08fd11d-2ed2-11e6-8719-6f79895efe4f","method":{"position":"org.apache.commons.lang3.time.DateFormatUtils:289","type":"CtMethodImpl","sourcecode":"public static java.lang.String format(final long millis, final java.lang.String pattern, final java.util.TimeZone timeZone, final java.util.Locale locale) {\n    if (pattern == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateFormatUtils.format(new java.util.Date(millis), pattern, timeZone, locale);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"pattern"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.MemberUtils:170","type":"CtUnaryOperatorImpl","sourcecode":"!(cls.isPrimitive())"},"failures":[77,78,79,80,81,82,83,84,85,86,87,88,89,89,90,91,91,92,93,94,94,95,96,97,98,98,99,99,100,101,102,103,104,105,106,106,107,107,108,109,110,111,111,112,113,114,115,115,116,117,117,118,119,119,120,120,121,121,122,123,124,124,125,125,126,126,127,127,128,128,129,129,130,130,131,132,133,134,134,135,135,136,136,137,138,138,139,140,141,141,142,142,143,143,144,145,145,146,147,147,148,149,150,151,151,152,153,153,154,155,156,156,157,157,158,159,159,160,160,161,162,162],"tindex":"e08ff82e-2ed2-11e6-8719-3993742fe6b7","method":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:513","type":"CtMethodImpl","sourcecode":"protected void appendFieldsIn(final java.lang.Class<?> clazz) {\n    if (!(clazz.isPrimitive())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (clazz.isArray()) {\n                org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.reflectionAppendArray(org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.getObject());\n                return ;\n            } \n            final java.lang.reflect.Field[] java.lang.reflect.Field[] = clazz.getDeclaredFields();\n            java.lang.reflect.AccessibleObject.setAccessible(fields, true);\n            for (final java.lang.reflect.Field java.lang.reflect.Field : fields) {\n                final java.lang.String java.lang.String = field.getName();\n                if (org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.accept(field)) {\n                    try {\n                        final java.lang.Object java.lang.Object = org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.getValue(field);\n                        org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.append(fieldName, fieldValue);\n                    } catch (final java.lang.IllegalAccessException ex) {\n                        throw new java.lang.InternalError((\"Unexpected IllegalAccessException: \" + (ex.getMessage())));\n                    }\n                } \n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"clazz"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:650","type":"CtInvocationImpl","sourcecode":"cls.isPrimitive()"},"failures":[163,164,165,166],"tindex":"e090bb7f-2ed2-11e6-8719-2df8254426ab","method":{"position":"org.apache.commons.lang3.ClassUtils:593","type":"CtMethodImpl","sourcecode":"public static boolean isAssignable(final java.lang.Class<?> cls, final java.lang.Class<?> toClass) {\n    if (toClass.isPrimitive()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.ClassUtils.isAssignable(cls, toClass, org.apache.commons.lang3.SystemUtils.isJavaVersionAtLeast(org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"toClass"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:434","type":"CtBinaryOperatorImpl","sourcecode":"(isEquals) == false"},"failures":[],"tindex":"e090e290-2ed2-11e6-8719-95d9b64e9428","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:89","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setUseShortClassName(final boolean useShortClassName) {\n    if (useShortClassName == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            super.setUseShortClassName(useShortClassName);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isEquals":"useShortClassName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:845","type":"CtBinaryOperatorImpl","sourcecode":"varValue == null"},"failures":[],"tindex":"e090e291-2ed2-11e6-8719-ffd356832182","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:640","type":"CtMethodImpl","sourcecode":"public static final java.lang.String unescapeHtml3(final java.lang.String input) {\n    if (input == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"varValue":"input"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6767","type":"CtBinaryOperatorImpl","sourcecode":"m == 0"},"failures":[],"tindex":"e090e292-2ed2-11e6-8719-67d1a556fac4","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:752","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic final void appendTo(final java.lang.StringBuffer buffer, final int value) {\n    if (value == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value < 10) {\n                buffer.append(((char)(value + '0')));\n            } else if (value < 100) {\n                buffer.append(((char)((value / 10) + '0')));\n                buffer.append(((char)((value % 10) + '0')));\n            } else {\n                buffer.append(java.lang.Integer.toString(value));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"m":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2271","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[167],"tindex":"e090e293-2ed2-11e6-8719-9b8c510fcf47","method":{"position":"org.apache.commons.lang3.ArrayUtils:1477","type":"CtMethodImpl","sourcecode":"public static void reverse(final short[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return ;\n            } \n            org.apache.commons.lang3.ArrayUtils.reverse(array, 0, array.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:537","type":"CtVariableReadImpl","sourcecode":"detail"},"failures":[168,169,170,171,172,173,174,175,176,176,177,177,178,178,179,179,180,180,181,181,182,182,183,183,184,184,185,185,186,186,187,187,188,188,189,189,190,190,191,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,77,78,79,80,81,82,83,84,85,86,87,227,228,229,230,231,232,233,234,235,236,237,238,238,239,239,240,240,241,241,242,242,243,243,88,88,244,244,89,89,90,90,91,91,92,92,93,93,94,94,95,95,96,96,97,97,98,98,99,99,100,100,101,101,102,102,103,103,104,104,105,105,106,106,107,107,108,108,109,109,110,110,111,111,112,112,113,113,114,114,115,115,116,116,117,117,118,118,119,119,120,120,121,121,122,122,123,123,124,124,125,125,126,126,127,127,128,128,129,129,130,130,131,131,132,132,133,133,134,134,135,135,136,136,137,137,138,138,139,139,140,140,141,141,142,142,143,143,144,144,145,145,146,146,147,147,148,148,149,149,150,150,151,151,152,152,153,153,154,154,155,155,156,156,157,157,158,158,159,159,160,160,161,161,162,162,245,245,246,246,247,247,248,248,249,249,250,250,251,251,252,252,253,253,254,254,255,255,256,256,257,257,258,258,259,259,260,260,261,261,262,262,263,263,264,264,265,265,266,266,267,267,268,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291],"tindex":"e09109a4-2ed2-11e6-8719-7fc946a611a5","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1674","type":"CtMethodImpl","sourcecode":"protected void setUseFieldNames(final boolean useFieldNames) {\n    if (useFieldNames) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.this.boolean = useFieldNames;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"detail":"useFieldNames"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:334","type":"CtBinaryOperatorImpl","sourcecode":"toType instanceof java.lang.reflect.GenericArrayType"},"failures":[292,293,294,295,296,297,298,299,300,56,301,302,303],"tindex":"e09130b5-2ed2-11e6-8719-6d78a6077eb1","method":{"position":"org.apache.commons.lang3.ArrayUtils:4247","type":"CtMethodImpl","sourcecode":"private static java.lang.Object copyArrayGrow1(final java.lang.Object array, final java.lang.Class<?> newArrayComponentType) {\n    if (array instanceof java.lang.reflect.GenericArrayType) {\n        {\n            if (array != null) {\n                final int int = java.lang.reflect.Array.getLength(array);\n                final java.lang.Object java.lang.Object = java.lang.reflect.Array.newInstance(array.getClass().getComponentType(), (arrayLength + 1));\n                java.lang.System.arraycopy(array, 0, newArray, 0, arrayLength);\n                return newArray;\n            } \n            return java.lang.reflect.Array.newInstance(newArrayComponentType, 1);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toType":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:724","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[304,305,306],"tindex":"e09130b6-2ed2-11e6-8719-b96116a3f099","method":{"position":"org.apache.commons.lang3.ArrayUtils:434","type":"CtMethodImpl","sourcecode":"public static float[] clone(final float[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            return array.clone();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3908","type":"CtBinaryOperatorImpl","sourcecode":"array1 == null"},"failures":[307],"tindex":"e09130b7-2ed2-11e6-8719-911ecdd0bf61","method":{"position":"org.apache.commons.lang3.ArrayUtils:5711","type":"CtMethodImpl","sourcecode":"public static long[] removeElements(final long[] array, final long... values) {\n    if (array == null) {\n        {\n            if ((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            final java.util.HashMap<java.lang.Long, org.apache.commons.lang3.mutable.MutableInt> java.util.HashMap<java.lang.Long, org.apache.commons.lang3.mutable.MutableInt> = new java.util.HashMap<java.lang.Long, org.apache.commons.lang3.mutable.MutableInt>(values.int);\n            for (final long long : values) {\n                final java.lang.Long java.lang.Long = java.lang.Long.valueOf(v);\n                final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = occurrences.get(boxed);\n                if (count == null) {\n                    occurrences.put(boxed, new org.apache.commons.lang3.mutable.MutableInt(1));\n                } else {\n                    count.increment();\n                }\n            }\n            final java.util.BitSet java.util.BitSet = new java.util.BitSet();\n            for (final java.util.Map.Entry<java.lang.Long, org.apache.commons.lang3.mutable.MutableInt> java.util.Map.Entry<java.lang.Long, org.apache.commons.lang3.mutable.MutableInt> : occurrences.entrySet()) {\n                final java.lang.Long java.lang.Long = e.getKey();\n                int int = 0;\n                for (int int = 0, int int = e.getValue().intValue() ; i < ct ; i++) {\n                    found = org.apache.commons.lang3.ArrayUtils.indexOf(array, v.longValue(), found);\n                    if (found < 0) {\n                        break;\n                    } \n                    toRemove.set((found++));\n                }\n            }\n            return ((long[])(org.apache.commons.lang3.ArrayUtils.removeAll(array, toRemove)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array1":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:1128","type":"CtBinaryOperatorImpl","sourcecode":"(className.length()) > 0"},"failures":[308,309,310,311],"tindex":"e09157c8-2ed2-11e6-8719-8d0853cca440","method":{"position":"org.apache.commons.lang3.StringUtils:3948","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final java.lang.Object[] array, final java.lang.String separator) {\n    if ((separator.length()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            return org.apache.commons.lang3.StringUtils.join(array, separator, 0, array.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"className":"separator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:970","type":"CtBinaryOperatorImpl","sourcecode":"abbreviation != null"},"failures":[201,202,203,204,205,206,207,208,209,210,211,212,213,215,217,218,219,221,222,223,226],"tindex":"e09157c9-2ed2-11e6-8719-5db280d93573","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:463","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final float lhs, final float rhs) {\n    if (fieldName != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (fieldName == null) {\n                throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n            } \n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if ((java.lang.Float.floatToIntBits(lhs)) != (java.lang.Float.floatToIntBits(rhs))) {\n                java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Float>(fieldName) {\n                    private static final long serialVersionUID = 1L;\n\n                    @java.lang.Override\n                    public java.lang.Float getLeft() {\n                        return java.lang.Float.valueOf(lhs);\n                    }\n\n                    @java.lang.Override\n                    public java.lang.Float getRight() {\n                        return java.lang.Float.valueOf(rhs);\n                    }\n                });\n            } \n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"abbreviation":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:466","type":"CtBinaryOperatorImpl","sourcecode":"pfxLen > 0"},"failures":[312,313],"tindex":"e0917eda-2ed2-11e6-8719-d5fa5a90e835","method":{"position":"org.apache.commons.lang3.ArrayUtils:2438","type":"CtMethodImpl","sourcecode":"public static int indexOf(final byte[] array, final byte valueToFind, int startIndex) {\n    if (startIndex > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                startIndex = 0;\n            } \n            for (int int = startIndex ; i < (array.int) ; i++) {\n                if (valueToFind == (array[i])) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pfxLen":"startIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5311","type":"CtBinaryOperatorImpl","sourcecode":"(padLen == 1) && (pads <= (org.apache.commons.lang3.StringUtils.PAD_LIMIT))"},"failures":[],"tindex":"e0917edb-2ed2-11e6-8719-55c7e2eaea36","method":{"position":"org.apache.commons.lang3.time.FormatCache:176","type":"CtMethodImpl","sourcecode":"F getTimeInstance(final int timeStyle, final java.util.TimeZone timeZone, java.util.Locale locale) {\n    if ((timeStyle == 1) && (timeStyle <= timeStyle)) {\n        {\n            return getDateTimeInstance(null, java.lang.Integer.valueOf(timeStyle), timeZone, locale);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pads":"timeStyle","padLen":"timeStyle","org.apache.commons.lang3.StringUtils.PAD_LIMIT":"timeStyle"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:732","type":"CtBinaryOperatorImpl","sourcecode":"str != null"},"failures":[100,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162],"tindex":"e091a5ec-2ed2-11e6-8719-258a4ee5c76d","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:1008","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder appendToString(final java.lang.String toString) {\n    if (toString != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (toString != null) {\n                org.apache.commons.lang3.builder.ToStringStyle.appendToString(java.lang.StringBuffer, toString);\n            } \n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"toString"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:801","type":"CtBinaryOperatorImpl","sourcecode":"(cs1 instanceof java.lang.String) && (cs2 instanceof java.lang.String)"},"failures":[314],"tindex":"e091a5ed-2ed2-11e6-8719-f1efbb4a4fa4","method":{"position":"org.apache.commons.lang3.StringUtils:5811","type":"CtMethodImpl","sourcecode":"public static int countMatches(final java.lang.CharSequence str, final java.lang.CharSequence sub) {\n    if ((sub instanceof java.lang.String) && (sub instanceof java.lang.String)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(sub))) {\n                return 0;\n            } \n            int int = 0;\n            int int = 0;\n            while ((idx = org.apache.commons.lang3.CharSequenceUtils.indexOf(str, sub, idx)) != (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) {\n                count++;\n                idx += sub.length();\n            }\n            return count;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs1":"sub","cs2":"sub"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5363","type":"CtBinaryOperatorImpl","sourcecode":"count == null"},"failures":[],"tindex":"e091a5ee-2ed2-11e6-8719-d3037f61c185","method":{"position":"org.apache.commons.lang3.mutable.MutableInt:169","type":"CtMethodImpl","sourcecode":"public void subtract(final java.lang.Number operand) {\n    if (operand == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.mutable.MutableInt.this.int -= operand.intValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"operand"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:932","type":"CtBinaryOperatorImpl","sourcecode":"(numerator) == 0"},"failures":[],"tindex":"e091ccff-2ed2-11e6-8719-d3d7c6f5b803","method":{"position":"org.apache.commons.lang3.RandomStringUtils:124","type":"CtMethodImpl","sourcecode":"public static java.lang.String randomNumeric(final int count) {\n    if (count == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.RandomStringUtils.random(count, false, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"numerator":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:896","type":"CtBinaryOperatorImpl","sourcecode":"first < second"},"failures":[],"tindex":"e0921a20-2ed2-11e6-8719-1556a5f191b2","method":{"position":"org.apache.commons.lang3.Validate:1081","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"boxing\")\npublic static void exclusiveBetween(long start, long end, long value) {\n    if (value < start) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((value <= start) || (value >= end)) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.java.lang.String, value, start, end));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"first":"value","second":"start"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2980","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[315],"tindex":"e0921a21-2ed2-11e6-8719-190c70da4f8f","method":{"position":"org.apache.commons.lang3.ArrayUtils:2957","type":"CtMethodImpl","sourcecode":"public static char[] toPrimitive(final java.lang.Character[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.char[];\n            } \n            final char[] char[] = new char[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = array[i].charValue();\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:672","type":"CtBinaryOperatorImpl","sourcecode":"th == null"},"failures":[316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337],"tindex":"e0924132-2ed2-11e6-8719-8f1689b892b5","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:141","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static java.lang.Throwable getCause(final java.lang.Throwable throwable, java.lang.String[] methodNames) {\n    if (throwable == null) {\n        {\n            if (throwable == null) {\n                return null;\n            } \n            if (methodNames == null) {\n                methodNames = org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.java.lang.String[];\n            } \n            for (final java.lang.String java.lang.String : methodNames) {\n                if (methodName != null) {\n                    final java.lang.Throwable java.lang.Throwable = org.apache.commons.lang3.exception.ExceptionUtils.getCauseUsingMethodName(throwable, methodName);\n                    if (cause != null) {\n                        return cause;\n                    } \n                } \n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"th":"throwable"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:881","type":"CtUnaryOperatorImpl","sourcecode":"!(java.util.Arrays.equals(lhs, rhs))"},"failures":[338,339,340,341],"tindex":"e0924133-2ed2-11e6-8719-2f6c1cf13f03","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:859","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final java.lang.Object[] array) {\n    if (!(java.util.Arrays.equals(array, array))) {\n        {\n            if (array == null) {\n                int = (int) * (int);\n            } else {\n                for (final java.lang.Object java.lang.Object : array) {\n                    append(element);\n                }\n            }\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array","rhs":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1378","type":"CtBinaryOperatorImpl","sourcecode":"startPos < 0"},"failures":[],"tindex":"e0926844-2ed2-11e6-8719-1da118f59142","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2919","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void mark(final int readAheadLimit) {\n    if (readAheadLimit < 0) {\n        {\n            int = int;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startPos":"readAheadLimit"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4215","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(remove))"},"failures":[],"tindex":"e0926845-2ed2-11e6-8719-75d8bb33e353","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:513","type":"CtMethodImpl","sourcecode":"public java.lang.String replace(java.lang.CharSequence source) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(source)) || (org.apache.commons.lang3.StringUtils.isEmpty(source))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (source == null) {\n                return null;\n            } \n            return replace(source, 0, source.length());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"source","remove":"source"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1620","type":"CtBinaryOperatorImpl","sourcecode":"0 == nBools"},"failures":[342,343,344,345,46,346,347],"tindex":"e092b666-2ed2-11e6-8719-293e1ea60ead","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1099","type":"CtMethodImpl","sourcecode":"static java.lang.String getTimeZoneDisplay(final java.util.TimeZone tz, final boolean daylight, final int style, final java.util.Locale locale) {\n    if (0 == style) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey = new org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey(tz , daylight , style , locale);\n            java.lang.String java.lang.String = org.apache.commons.lang3.time.FastDatePrinter.org.apache.commons.lang3.time.FastDatePrinter.java.util.concurrent.ConcurrentMap<org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey, java.lang.String>.get(key);\n            if (value == null) {\n                value = tz.getDisplayName(daylight, style, locale);\n                final java.lang.String java.lang.String = org.apache.commons.lang3.time.FastDatePrinter.org.apache.commons.lang3.time.FastDatePrinter.java.util.concurrent.ConcurrentMap<org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey, java.lang.String>.putIfAbsent(key, value);\n                if (prior != null) {\n                    value = prior;\n                } \n            } \n            return value;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nBools":"style"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5611","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[348,349,350,351,352,353,354,355,356],"tindex":"e092dd77-2ed2-11e6-8719-8df0f2e759a5","method":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:126","type":"CtMethodImpl","sourcecode":"public static java.lang.String formatDuration(final long durationMillis, final java.lang.String format, final boolean padWithZeros) {\n    if (format == null) {\n        {\n            final org.apache.commons.lang3.time.DurationFormatUtils.Token[] org.apache.commons.lang3.time.DurationFormatUtils.Token[] = org.apache.commons.lang3.time.DurationFormatUtils.lexx(format);\n            long long = 0;\n            long long = 0;\n            long long = 0;\n            long long = 0;\n            long long = durationMillis;\n            if (org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(tokens, org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n                days = milliseconds / (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.long);\n                milliseconds = milliseconds - (days * (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.long));\n            } \n            if (org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(tokens, org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n                hours = milliseconds / (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.long);\n                milliseconds = milliseconds - (hours * (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.long));\n            } \n            if (org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(tokens, org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n                minutes = milliseconds / (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.long);\n                milliseconds = milliseconds - (minutes * (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.long));\n            } \n            if (org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(tokens, org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n                seconds = milliseconds / (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.long);\n                milliseconds = milliseconds - (seconds * (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.long));\n            } \n            return org.apache.commons.lang3.time.DurationFormatUtils.format(tokens, 0, 0, days, hours, minutes, seconds, milliseconds, padWithZeros);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"format"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:435","type":"CtBinaryOperatorImpl","sourcecode":"(newLine) == null"},"failures":[357,358],"tindex":"e0930488-2ed2-11e6-8719-cfc15985f4eb","method":{"position":"org.apache.commons.lang3.CharSetUtils:205","type":"CtMethodImpl","sourcecode":"public static java.lang.String delete(final java.lang.String str, final java.lang.String... set) {\n    if (str == null) {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.CharSetUtils.deepEmpty(set))) {\n                return str;\n            } \n            return org.apache.commons.lang3.CharSetUtils.modify(str, set, false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"newLine":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1844","type":"CtBinaryOperatorImpl","sourcecode":"contentEnd == null"},"failures":[],"tindex":"e09379b9-2ed2-11e6-8719-510657cfaaa7","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1297","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final double[] array) {\n    if (fieldName == null) {\n        {\n            buffer.append(java.lang.String);\n            for (int int = 0 ; i < (array.int) ; i++) {\n                if (i > 0) {\n                    buffer.append(java.lang.String);\n                } \n                appendDetail(buffer, fieldName, array[i]);\n            }\n            buffer.append(java.lang.String);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"contentEnd":"fieldName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:735","type":"CtInvocationImpl","sourcecode":"str.equals(falseString)"},"failures":[49],"tindex":"e093a0ca-2ed2-11e6-8719-6fee6e7cdf19","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1214","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendSeparator(final java.lang.String separator) {\n    if (separator == null) {\n        {\n            if (separator.equals(separator)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return appendSeparator(separator, null);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"separator","falseString":"separator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2137","type":"CtBinaryOperatorImpl","sourcecode":"start > end"},"failures":[],"tindex":"e093a0cb-2ed2-11e6-8719-5f555b1f7640","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:226","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.time.FastDateFormat getDateInstance(final int style, final java.util.TimeZone timeZone, final java.util.Locale locale) {\n    if (style > style) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getDateInstance(style, timeZone, locale);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"style","end":"style"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1896","type":"CtBinaryOperatorImpl","sourcecode":"fieldSeparator == null"},"failures":[],"tindex":"e093a0cc-2ed2-11e6-8719-39a74209e4a1","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1214","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendSeparator(final java.lang.String separator) {\n    if (separator == null) {\n        {\n            if (separator.equals(separator)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return appendSeparator(separator, null);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldSeparator":"separator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4353","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(remove))"},"failures":[],"tindex":"e093c7dd-2ed2-11e6-8719-eb98bfc8960b","method":{"position":"org.apache.commons.lang3.SystemUtils:1447","type":"CtMethodImpl","sourcecode":"static boolean isOSMatch(final java.lang.String osName, final java.lang.String osVersion, final java.lang.String osNamePrefix, final java.lang.String osVersionPrefix) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(osNamePrefix)) || (org.apache.commons.lang3.StringUtils.isEmpty(osNamePrefix))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((osName == null) || (osVersion == null)) {\n                return false;\n            } \n            return (osName.startsWith(osNamePrefix)) && (osVersion.startsWith(osVersionPrefix));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"osNamePrefix","remove":"osNamePrefix"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:4773","type":"CtBinaryOperatorImpl","sourcecode":"index == (org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND)"},"failures":[],"tindex":"e093c7de-2ed2-11e6-8719-b7c60527a507","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2957","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(final int c) {\n    if (c == c) {\n        {\n            org.apache.commons.lang3.text.StrBuilder.this.append(((char)(c)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND":"c","index":"c"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:512","type":"CtBinaryOperatorImpl","sourcecode":"(numerator) == (java.lang.Integer.MIN_VALUE)"},"failures":[359,360,361,362,363],"tindex":"e093c7df-2ed2-11e6-8719-17847022fc7d","method":{"position":"org.apache.commons.lang3.ArrayUtils:2124","type":"CtMethodImpl","sourcecode":"public static int indexOf(final int[] array, final int valueToFind, int startIndex) {\n    if (startIndex == valueToFind) {\n        {\n            if (array == null) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                startIndex = 0;\n            } \n            for (int int = startIndex ; i < (array.int) ; i++) {\n                if (valueToFind == (array[i])) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.lang.Integer.MIN_VALUE":"valueToFind","numerator":"startIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1178","type":"CtBinaryOperatorImpl","sourcecode":"i > 0"},"failures":[176,182,184,190,227,233,238,95,104,104,126,126,127,128,129,130,131,132,133,134,134,135,136,137,138,139,140,140,141,142,143,144,145,146,147,148,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,245,251,253,259,261,267],"tindex":"e093eef0-2ed2-11e6-8719-697f95abbdf2","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:689","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final int value) {\n    if (value > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:995","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[296],"tindex":"e093eef1-2ed2-11e6-8719-0dff4e975d35","method":{"position":"org.apache.commons.lang3.ArrayUtils:4232","type":"CtMethodImpl","sourcecode":"public static short[] add(final short[] array, final short element) {\n    if (array == null) {\n        {\n            final short[] short[] = ((short[])(org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(array, java.lang.Short.java.lang.Short.java.lang.Class<java.lang.Short>)));\n            newArray[((newArray.int) - 1)] = element;\n            return newArray;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1548","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[364,365,366],"tindex":"e0941602-2ed2-11e6-8719-154047f3db1c","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:967","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final boolean[] lhs, final boolean[] rhs) {\n    if (rhs == null) {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == null) {\n                int = -1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (rhs == null) {\n                int = +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                int = (lhs.int) < (rhs.int) ? -1 : +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && ((int) == 0) ; i++) {\n                append(lhs[i], rhs[i]);\n            }\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"rhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:636","type":"CtBinaryOperatorImpl","sourcecode":"cls == null"},"failures":[367],"tindex":"e0943d13-2ed2-11e6-8719-a91f4973589a","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:146","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Field getDeclaredField(final java.lang.Class<?> cls, final java.lang.String fieldName) {\n    if ((fieldName.length()) == 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (cls == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.lang3.reflect.FieldUtils.getDeclaredField(cls, fieldName, false);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"cls"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:603","type":"CtBinaryOperatorImpl","sourcecode":"(tokens) == null"},"failures":[77,78,79,80,81,83,84,85,86,87],"tindex":"e0943d14-2ed2-11e6-8719-87be8e96750c","method":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:646","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ReflectionToStringBuilder setExcludeFieldNames(final java.lang.String... excludeFieldNamesParam) {\n    if (excludeFieldNamesParam == null) {\n        {\n            if (excludeFieldNamesParam == null) {\n                org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.java.lang.String[] = null;\n            } else {\n                org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.java.lang.String[] = org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(excludeFieldNamesParam);\n                java.util.Arrays.sort(org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.java.lang.String[]);\n            }\n            return org.apache.commons.lang3.builder.ReflectionToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"tokens":"excludeFieldNamesParam"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:690","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"e0943d15-2ed2-11e6-8719-a9ebb9719b59","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:318","type":"CtMethodImpl","sourcecode":"public static java.lang.Object readDeclaredStaticField(final java.lang.Class<?> cls, final java.lang.String fieldName) throws java.lang.IllegalAccessException {\n    if (fieldName == null) {\n        throw new java.lang.IllegalAccessException();\n    } else {\n        {\n            return org.apache.commons.lang3.reflect.FieldUtils.readDeclaredStaticField(cls, fieldName, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSetUtils:176","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[368,369],"tindex":"e0946426-2ed2-11e6-8719-0574dc8f4bdf","method":{"position":"org.apache.commons.lang3.Validate:628","type":"CtMethodImpl","sourcecode":"public static <T>T[] validIndex(final T[] array, final int index, final java.lang.String message, final java.lang.Object... values) {\n    if (message == null) {\n        {\n            org.apache.commons.lang3.Validate.notNull(array);\n            if ((index < 0) || (index >= (array.int))) {\n                throw new java.lang.IndexOutOfBoundsException(java.lang.String.format(message, values));\n            } \n            return array;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"message"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1135","type":"CtBinaryOperatorImpl","sourcecode":"b < a"},"failures":[370],"tindex":"e0946427-2ed2-11e6-8719-f95b34297f86","method":{"position":"org.apache.commons.lang3.ArrayUtils:2296","type":"CtMethodImpl","sourcecode":"public static boolean contains(final short[] array, final short valueToFind) {\n    if (valueToFind < valueToFind) {\n        {\n            return (org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind)) != (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"valueToFind","b":"valueToFind"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.IllegalArgumentException","condition":{"position":"org.apache.commons.lang3.StringUtils:4948","type":"CtBinaryOperatorImpl","sourcecode":"start > len"},"failures":[],"tindex":"e0946428-2ed2-11e6-8719-eb91966047eb","method":{"position":"org.apache.commons.lang3.ObjectUtils:787","type":"CtMethodImpl","sourcecode":"public static byte CONST_BYTE(final int v) throws java.lang.IllegalArgumentException {\n    if (v > v) {\n        throw new java.lang.IllegalArgumentException();\n    } else {\n        {\n            if ((v < (java.lang.Byte.java.lang.Byte.byte)) || (v > (java.lang.Byte.java.lang.Byte.byte))) {\n                throw new java.lang.IllegalArgumentException(((\"Supplied value must be a valid byte literal between -128 and 127: [\" + v) + \"]\"));\n            } \n            return ((byte)(v));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"v","start":"v"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5001","type":"CtBinaryOperatorImpl","sourcecode":"(str.length()) == 1"},"failures":[],"tindex":"e0946429-2ed2-11e6-8719-6163fabed0b6","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:146","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Field getDeclaredField(final java.lang.Class<?> cls, final java.lang.String fieldName) {\n    if ((fieldName.length()) == 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (cls == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.lang3.reflect.FieldUtils.getDeclaredField(cls, fieldName, false);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.AnnotationUtils:126","type":"CtBinaryOperatorImpl","sourcecode":"(a1 == null) || (a2 == null)"},"failures":[283,284,287,289],"tindex":"e0948b3a-2ed2-11e6-8719-5f1f0709d402","method":{"position":"org.apache.commons.lang3.AnnotationUtils:122","type":"CtMethodImpl","sourcecode":"public static boolean equals(final java.lang.annotation.Annotation a1, final java.lang.annotation.Annotation a2) {\n    if ((a1 == null) || (a2 == null)) {\n        {\n            if (a1 == a2) {\n                return true;\n            } \n            if ((a1 == null) || (a2 == null)) {\n                return false;\n            } \n            final java.lang.Class<? extends java.lang.annotation.Annotation> java.lang.Class<? extends java.lang.annotation.Annotation> = a1.annotationType();\n            final java.lang.Class<? extends java.lang.annotation.Annotation> java.lang.Class<? extends java.lang.annotation.Annotation> = a2.annotationType();\n            org.apache.commons.lang3.Validate.notNull(type, \"Annotation %s with null annotationType()\", a1);\n            org.apache.commons.lang3.Validate.notNull(type2, \"Annotation %s with null annotationType()\", a2);\n            if (!(type.equals(type2))) {\n                return false;\n            } \n            try {\n                for (final java.lang.reflect.Method java.lang.reflect.Method : type.getDeclaredMethods()) {\n                    if (((m.getParameterTypes().int) == 0) && (org.apache.commons.lang3.AnnotationUtils.isValidAnnotationMemberType(m.getReturnType()))) {\n                        final java.lang.Object java.lang.Object = m.invoke(a1);\n                        final java.lang.Object java.lang.Object = m.invoke(a2);\n                        if (!(org.apache.commons.lang3.AnnotationUtils.memberEquals(m.getReturnType(), v1, v2))) {\n                            return false;\n                        } \n                    } \n                }\n            } catch (final java.lang.IllegalAccessException ex) {\n                return false;\n            } catch (final java.lang.reflect.InvocationTargetException ex) {\n                return false;\n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a1":"a1","a2":"a2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:736","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[371],"tindex":"e0948b3b-2ed2-11e6-8719-79a5b5379000","method":{"position":"org.apache.commons.lang3.ArrayUtils:5161","type":"CtMethodImpl","sourcecode":"public static short[] removeElement(final short[] array, final short element) {\n    if (array == array) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = org.apache.commons.lang3.ArrayUtils.indexOf(array, element);\n            if (index == (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int)) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            return org.apache.commons.lang3.ArrayUtils.remove(array, index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array","rhs":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:221","type":"CtInvocationImpl","sourcecode":"java.lang.Double.isNaN(a)"},"failures":[149,149],"tindex":"e0948b3c-2ed2-11e6-8719-1d034f9abc2d","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:359","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final double value) {\n    if (java.lang.Double.isNaN(value)) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, value);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:221","type":"CtInvocationImpl","sourcecode":"java.lang.Double.isNaN(a)"},"failures":[],"tindex":"e094b24d-2ed2-11e6-8719-87b855f3ac0f","method":{"position":"org.apache.commons.lang3.mutable.MutableDouble:96","type":"CtMethodImpl","sourcecode":"public void setValue(final double value) {\n    if (java.lang.Double.isNaN(value)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.mutable.MutableDouble.this.double = value;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2413","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[227,228,229,230,231,232,233,234],"tindex":"e094b24e-2ed2-11e6-8719-adc02ee95892","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:228","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setArrayEnd(final java.lang.String arrayEnd) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(arrayEnd)) {\n        {\n            super.setArrayEnd(arrayEnd);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"arrayEnd"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1440","type":"CtBinaryOperatorImpl","sourcecode":"strLen >= width"},"failures":[],"tindex":"e094d95f-2ed2-11e6-8719-a76776931dbe","method":{"position":"org.apache.commons.lang3.ArrayUtils:1074","type":"CtMethodImpl","sourcecode":"public static byte[] subarray(final byte[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (endIndexExclusive >= startIndexInclusive) {\n        {\n            if (startIndexInclusive < 0) {\n                {\n                    if (array == null) {\n                        return null;\n                    } \n                    if (startIndexInclusive < 0) {\n                        startIndexInclusive = 0;\n                    } \n                    if (endIndexExclusive > (array.int)) {\n                        endIndexExclusive = array.int;\n                    } \n                    final int int = endIndexExclusive - startIndexInclusive;\n                    if (newSize <= 0) {\n                        return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.byte[];\n                    } \n                    final byte[] byte[] = new byte[newSize];\n                    java.lang.System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);\n                    return subarray;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"strLen":"endIndexExclusive","width":"startIndexInclusive"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:109","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[],"tindex":"e0950070-2ed2-11e6-8719-65557bcb7945","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1236","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final char[] array) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(fieldName)) {\n        {\n            buffer.append(java.lang.String);\n            for (int int = 0 ; i < (array.int) ; i++) {\n                if (i > 0) {\n                    buffer.append(java.lang.String);\n                } \n                appendDetail(buffer, fieldName, array[i]);\n            }\n            buffer.append(java.lang.String);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"focus == null"},"failures":[],"tindex":"e0950071-2ed2-11e6-8719-6fef369d89af","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1152","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n    if (calendar == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.TimeZone java.util.TimeZone = calendar.getTimeZone();\n            if ((zone.useDaylightTime()) && ((calendar.get(java.util.Calendar.java.util.Calendar.int)) != 0)) {\n                buffer.append(org.apache.commons.lang3.time.FastDatePrinter.getTimeZoneDisplay(zone, true, int, java.util.Locale));\n            } else {\n                buffer.append(org.apache.commons.lang3.time.FastDatePrinter.getTimeZoneDisplay(zone, false, int, java.util.Locale));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"focus":"calendar"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:738","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[372],"tindex":"e0952782-2ed2-11e6-8719-d361b5d66e0b","method":{"position":"org.apache.commons.lang3.time.DateUtils:218","type":"CtMethodImpl","sourcecode":"public static boolean isSameInstant(final java.util.Calendar cal1, final java.util.Calendar cal2) {\n    if (cal1 == null) {\n        {\n            if ((cal1 == null) || (cal2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            return (cal1.getTime().getTime()) == (cal2.getTime().getTime());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"cal1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:640","type":"CtBinaryOperatorImpl","sourcecode":"lhs != rhs"},"failures":[],"tindex":"e0952783-2ed2-11e6-8719-bfcd2cfa7545","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:781","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final long value) {\n    if (value != value) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int = ((int) * (int)) + ((int)((value ^ (value >> 32))));\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"value","rhs":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:334","type":"CtBinaryOperatorImpl","sourcecode":"toType instanceof java.lang.reflect.GenericArrayType"},"failures":[373],"tindex":"e0952784-2ed2-11e6-8719-0d4fea417b76","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1344","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Type getArrayComponentType(final java.lang.reflect.Type type) {\n    if (type instanceof java.lang.reflect.GenericArrayType) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (type instanceof java.lang.Class<?>) {\n                final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(type));\n                return clazz.isArray() ? clazz.getComponentType() : null;\n            } \n            if (type instanceof java.lang.reflect.GenericArrayType) {\n                return ((java.lang.reflect.GenericArrayType)(type)).getGenericComponentType();\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toType":"type"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1911","type":"CtBinaryOperatorImpl","sourcecode":"searchLen > 0"},"failures":[7],"tindex":"e0952785-2ed2-11e6-8719-0372585c98bf","method":{"position":"org.apache.commons.lang3.time.DateUtils:614","type":"CtMethodImpl","sourcecode":"public static java.util.Date setSeconds(final java.util.Date date, final int amount) {\n    if (amount > 0) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.set(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"searchLen":"amount"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:146","type":"CtBinaryOperatorImpl","sourcecode":"(((org.apache.commons.lang3.StringUtils.isAllLowerCase(split[0])) && (((split[0].length()) == 2) || ((split[0].length()) == 3))) && (((split[1].length()) == 0) || (((split[1].length()) == 2) && (org.apache.commons.lang3.StringUtils.isAllUpperCase(split[1]))))) && ((split[2].length()) > 0)"},"failures":[],"tindex":"e0952786-2ed2-11e6-8719-29fe1d2bfa29","method":{"position":"org.apache.commons.lang3.ArrayUtils:512","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] nullToEmpty(final java.lang.String[] array) {\n    if ((((org.apache.commons.lang3.StringUtils.isAllLowerCase(array[0])) && (((split[0].length()) == 2) || ((split[0].length()) == 3))) && (((split[1].length()) == 0) || (((split[1].length()) == 2) && (org.apache.commons.lang3.StringUtils.isAllUpperCase(split[1]))))) && ((split[2].length()) > 0)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((array == null) || ((array.int) == 0)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.String[];\n            } \n            return array;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"split":"array"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2025","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[374,375],"tindex":"e0954e97-2ed2-11e6-8719-0312ebab29fd","method":{"position":"org.apache.commons.lang3.math.NumberUtils:120","type":"CtMethodImpl","sourcecode":"public static int toInt(final java.lang.String str, final int defaultValue) {\n    if (defaultValue < 0) {\n        {\n            if (str == null) {\n                return defaultValue;\n            } \n            try {\n                return java.lang.Integer.parseInt(str);\n            } catch (final java.lang.NumberFormatException nfe) {\n                return defaultValue;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"defaultValue"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"((((ch0 == 't') || (ch0 == 'T')) && ((ch1 == 'r') || (ch1 == 'R'))) && ((ch2 == 'u') || (ch2 == 'U'))) && ((ch3 == 'e') || (ch3 == 'E'))"},"failures":[],"tindex":"e0959cb8-2ed2-11e6-8719-89c3a2ac1527","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:928","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrTokenizer setQuoteChar(final char quote) {\n    if (((((quote == 't') || (ch0 == 'T')) && ((quote == 'r') || (ch1 == 'R'))) && ((quote == 'u') || (ch2 == 'U'))) && ((quote == 'e') || (ch3 == 'E'))) {\n        {\n            return setQuoteMatcher(org.apache.commons.lang3.text.StrMatcher.charMatcher(quote));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch0":"quote","ch2":"quote","ch1":"quote","ch3":"quote"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1644","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[376],"tindex":"e0959cb9-2ed2-11e6-8719-1fc85d66e1ca","method":{"position":"org.apache.commons.lang3.text.StrBuilder:392","type":"CtMethodImpl","sourcecode":"public char[] getChars(char[] destination) {\n    if (destination == null) {\n        {\n            final int int = length();\n            if ((destination == null) || ((destination.int) < len)) {\n                destination = new char[len];\n            } \n            java.lang.System.arraycopy(char[], 0, destination, 0, len);\n            return destination;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"destination"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3566","type":"CtBinaryOperatorImpl","sourcecode":"noOfItems <= 0"},"failures":[377,378,379],"tindex":"e0959cba-2ed2-11e6-8719-d5763965044f","method":{"position":"org.apache.commons.lang3.ArrayUtils:1818","type":"CtMethodImpl","sourcecode":"public static void reverse(final java.lang.Object[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (endIndexExclusive <= 0) {\n        {\n            if (array == null) {\n                return ;\n            } \n            int int = startIndexInclusive < 0 ? 0 : startIndexInclusive;\n            int int = (java.lang.Math.min(array.int, endIndexExclusive)) - 1;\n            java.lang.Object java.lang.Object;\n            while (j > i) {\n                tmp = array[j];\n                array[j] = array[i];\n                array[i] = tmp;\n                j--;\n                i++;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"noOfItems":"endIndexExclusive"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrMatcher:190","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(chars)"},"failures":[380,317,381],"tindex":"e095c3cb-2ed2-11e6-8719-27101dfe1923","method":{"position":"org.apache.commons.lang3.StringUtils:6198","type":"CtMethodImpl","sourcecode":"public static java.lang.String defaultString(final java.lang.String str) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n        {\n            return str == null ? org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String : str;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chars":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:259","type":"CtFieldReadImpl","sourcecode":"objectsTriviallyEqual"},"failures":[382,383],"tindex":"e095c3cc-2ed2-11e6-8719-0da5d302a74c","method":{"position":"org.apache.commons.lang3.BooleanUtils:392","type":"CtMethodImpl","sourcecode":"public static int toInteger(final boolean bool) {\n    if (bool) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return bool ? 1 : 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsTriviallyEqual":"bool"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:998","type":"CtBinaryOperatorImpl","sourcecode":"startIndexInclusive < 0"},"failures":[359,384],"tindex":"e095c3cd-2ed2-11e6-8719-6f1aec776fb1","method":{"position":"org.apache.commons.lang3.ArrayUtils:5002","type":"CtMethodImpl","sourcecode":"public static int[] remove(final int[] array, final int index) {\n    if (index < 0) {\n        {\n            return ((int[])(org.apache.commons.lang3.ArrayUtils.remove(((java.lang.Object)(array)), index)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndexInclusive":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4323","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.endsWithIgnoreCase(str, remove)"},"failures":[385],"tindex":"e095c3ce-2ed2-11e6-8719-6721c4122329","method":{"position":"org.apache.commons.lang3.StringUtils:7112","type":"CtMethodImpl","sourcecode":"private static int transpositions(java.lang.CharSequence first, java.lang.CharSequence second) {\n    if (org.apache.commons.lang3.StringUtils.endsWithIgnoreCase(second, first)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            for (int int = 0 ; i < (first.length()) ; i++) {\n                if ((first.charAt(i)) != (second.charAt(i))) {\n                    transpositions++;\n                } \n            }\n            return transpositions / 2;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"second","remove":"first"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1349","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.GenericArrayType"},"failures":[166],"tindex":"e095eadf-2ed2-11e6-8719-d9d36816c803","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:512","type":"CtMethodImpl","sourcecode":"private static boolean isAssignable(final java.lang.reflect.Type type, final java.lang.reflect.GenericArrayType toGenericArrayType, final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> typeVarAssigns) {\n    if (type instanceof java.lang.reflect.GenericArrayType) {\n        {\n            if (type == null) {\n                return true;\n            } \n            if (toGenericArrayType == null) {\n                return false;\n            } \n            if (toGenericArrayType.equals(type)) {\n                return true;\n            } \n            final java.lang.reflect.Type java.lang.reflect.Type = toGenericArrayType.getGenericComponentType();\n            if (type instanceof java.lang.Class<?>) {\n                final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(type));\n                return (cls.isArray()) && (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(cls.getComponentType(), toComponentType, typeVarAssigns));\n            } \n            if (type instanceof java.lang.reflect.GenericArrayType) {\n                return org.apache.commons.lang3.reflect.TypeUtils.isAssignable(((java.lang.reflect.GenericArrayType)(type)).getGenericComponentType(), toComponentType, typeVarAssigns);\n            } \n            if (type instanceof java.lang.reflect.WildcardType) {\n                for (final java.lang.reflect.Type java.lang.reflect.Type : org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(((java.lang.reflect.WildcardType)(type)))) {\n                    if (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(bound, toGenericArrayType)) {\n                        return true;\n                    } \n                }\n                return false;\n            } \n            if (type instanceof java.lang.reflect.TypeVariable<?>) {\n                for (final java.lang.reflect.Type java.lang.reflect.Type : org.apache.commons.lang3.reflect.TypeUtils.getImplicitBounds(((java.lang.reflect.TypeVariable<?>)(type)))) {\n                    if (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(bound, toGenericArrayType)) {\n                        return true;\n                    } \n                }\n                return false;\n            } \n            if (type instanceof java.lang.reflect.ParameterizedType) {\n                return false;\n            } \n            throw new java.lang.IllegalStateException((\"found an unhandled type: \" + type));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3225","type":"CtInvocationImpl","sourcecode":"str.isEmpty()"},"failures":[386],"tindex":"e095eae0-2ed2-11e6-8719-e7bf66f83b52","method":{"position":"org.apache.commons.lang3.math.Fraction:319","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.math.Fraction getFraction(java.lang.String str) {\n    if (str.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                throw new java.lang.IllegalArgumentException(\"The string must not be null\");\n            } \n            int int = str.indexOf('.');\n            if (pos >= 0) {\n                return org.apache.commons.lang3.math.Fraction.getFraction(java.lang.Double.parseDouble(str));\n            } \n            pos = str.indexOf(' ');\n            if (pos > 0) {\n                final int int = java.lang.Integer.parseInt(str.substring(0, pos));\n                str = str.substring((pos + 1));\n                pos = str.indexOf('/');\n                if (pos < 0) {\n                    throw new java.lang.NumberFormatException(\"The fraction could not be parsed as the format X Y/Z\");\n                } else {\n                    final int int = java.lang.Integer.parseInt(str.substring(0, pos));\n                    final int int = java.lang.Integer.parseInt(str.substring((pos + 1)));\n                    return org.apache.commons.lang3.math.Fraction.getFraction(whole, numer, denom);\n                }\n            } \n            pos = str.indexOf('/');\n            if (pos < 0) {\n                return org.apache.commons.lang3.math.Fraction.getFraction(java.lang.Integer.parseInt(str), 1);\n            } else {\n                final int int = java.lang.Integer.parseInt(str.substring(0, pos));\n                final int int = java.lang.Integer.parseInt(str.substring((pos + 1)));\n                return org.apache.commons.lang3.math.Fraction.getFraction(numer, denom);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1970","type":"CtBinaryOperatorImpl","sourcecode":"nullText == null"},"failures":[],"tindex":"e09611f1-2ed2-11e6-8719-6529bab0d1b6","method":{"position":"org.apache.commons.lang3.Validate:246","type":"CtMethodImpl","sourcecode":"public static <T>T[] notEmpty(final T[] array, final java.lang.String message, final java.lang.Object... values) {\n    if (message == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                throw new java.lang.NullPointerException(java.lang.String.format(message, values));\n            } \n            if ((array.int) == 0) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message, values));\n            } \n            return array;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nullText":"message"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:173","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[387,388,389,390],"tindex":"e09611f2-2ed2-11e6-8719-0bf5bdd970fc","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:305","type":"CtMethodImpl","sourcecode":"private static void reflectionAppend(final java.lang.Object lhs, final java.lang.Object rhs, final java.lang.Class<?> clazz, final org.apache.commons.lang3.builder.CompareToBuilder builder, final boolean useTransients, final java.lang.String[] excludeFields) {\n    if (lhs == null) {\n        {\n            final java.lang.reflect.Field[] java.lang.reflect.Field[] = clazz.getDeclaredFields();\n            java.lang.reflect.AccessibleObject.setAccessible(fields, true);\n            for (int int = 0 ; (i < (fields.int)) && ((builder.int) == 0) ; i++) {\n                final java.lang.reflect.Field java.lang.reflect.Field = fields[i];\n                if ((((!(org.apache.commons.lang3.ArrayUtils.contains(excludeFields, f.getName()))) && ((f.getName().indexOf('$')) == (-1))) && (useTransients || (!(java.lang.reflect.Modifier.isTransient(f.getModifiers()))))) && (!(java.lang.reflect.Modifier.isStatic(f.getModifiers())))) {\n                    try {\n                        builder.append(f.get(lhs), f.get(rhs));\n                    } catch (final java.lang.IllegalAccessException e) {\n                        throw new java.lang.InternalError(\"Unexpected IllegalAccessException\");\n                    }\n                } \n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"lhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:858","type":"CtBinaryOperatorImpl","sourcecode":"rhs == null"},"failures":[391,392,393,394,395,396,397,398,399,400,401,402],"tindex":"e09611f3-2ed2-11e6-8719-c1018f37d38d","method":{"position":"org.apache.commons.lang3.SerializationUtils:264","type":"CtMethodImpl","sourcecode":"public static <T>T deserialize(final byte[] objectData) {\n    if (objectData == null) {\n        {\n            if (objectData == null) {\n                throw new java.lang.IllegalArgumentException(\"The byte[] must not be null\");\n            } \n            return org.apache.commons.lang3.SerializationUtils.<T>deserialize(new java.io.ByteArrayInputStream(objectData));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"rhs":"objectData"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:925","type":"CtInvocationImpl","sourcecode":"java.lang.reflect.Modifier.isPublic(declaredMethod.getDeclaringClass().getModifiers())"},"failures":[],"tindex":"e0963904-2ed2-11e6-8719-d9d28aa683c2","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:797","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final java.lang.Object lhs, final java.lang.Object rhs) {\n    if (java.lang.reflect.Modifier.isPublic(lhs.getDeclaringClass().getModifiers())) {\n        {\n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            java.lang.Object java.lang.Object;\n            if (lhs != null) {\n                objectToTest = lhs;\n            } else {\n                objectToTest = rhs;\n            }\n            if (objectToTest.getClass().isArray()) {\n                if (objectToTest instanceof boolean[]) {\n                    return append(fieldName, ((boolean[])(lhs)), ((boolean[])(rhs)));\n                } \n                if (objectToTest instanceof byte[]) {\n                    return append(fieldName, ((byte[])(lhs)), ((byte[])(rhs)));\n                } \n                if (objectToTest instanceof char[]) {\n                    return append(fieldName, ((char[])(lhs)), ((char[])(rhs)));\n                } \n                if (objectToTest instanceof double[]) {\n                    return append(fieldName, ((double[])(lhs)), ((double[])(rhs)));\n                } \n                if (objectToTest instanceof float[]) {\n                    return append(fieldName, ((float[])(lhs)), ((float[])(rhs)));\n                } \n                if (objectToTest instanceof int[]) {\n                    return append(fieldName, ((int[])(lhs)), ((int[])(rhs)));\n                } \n                if (objectToTest instanceof long[]) {\n                    return append(fieldName, ((long[])(lhs)), ((long[])(rhs)));\n                } \n                if (objectToTest instanceof short[]) {\n                    return append(fieldName, ((short[])(lhs)), ((short[])(rhs)));\n                } \n                return append(fieldName, ((java.lang.Object[])(lhs)), ((java.lang.Object[])(rhs)));\n            } \n            java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Object>(fieldName) {\n                private static final long serialVersionUID = 1L;\n\n                @java.lang.Override\n                public java.lang.Object getLeft() {\n                    return lhs;\n                }\n\n                @java.lang.Override\n                public java.lang.Object getRight() {\n                    return rhs;\n                }\n            });\n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"declaredMethod":"lhs"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5375","type":"CtBinaryOperatorImpl","sourcecode":"found < 0"},"failures":[],"tindex":"e0963905-2ed2-11e6-8719-8b7ad53c2110","method":{"position":"org.apache.commons.lang3.RandomStringUtils:110","type":"CtMethodImpl","sourcecode":"public static java.lang.String randomAlphanumeric(final int count) {\n    if (count < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.RandomStringUtils.random(count, true, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"found":"count"},"type":"special","returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}