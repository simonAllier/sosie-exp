{"failureDictionary":{"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":3,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMinuteWithDate":235,"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":97,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":68,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfBoolean":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":70,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringString":133,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":64,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":67,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":98,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":80,"org.apache.commons.lang3.time.DateUtilsTest.testIsSameInstant_Cal":182,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfDayWithDate":197,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNull":316,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":162,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCode":257,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStripAll":89,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOfIgnoreCase_String":276,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":165,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddDash":269,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":44,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_AD":305,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfYearWithCalendar":203,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMonthWithDate":204,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":79,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseUncheckedUncheckedException":338,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":106,"org.apache.commons.lang3.text.StrBuilderTest.testGetSetNewLineText":240,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEmbeddedPatternInChoice":121,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":39,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":95,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringStringarray":132,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCyclicalObjectReferences":261,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testGetContextValues":288,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOf_String":243,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":56,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfHourWithDate":223,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":163,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEqualsHashcode":118,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":60,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOf":248,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testOverriddenBuiltinFormat":119,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testExtendedFormats":122,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":40,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondFragmentInLargerUnitWithCalendar":216,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAscii":334,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":50,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfSecondWithCalendar":193,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyFloatEmptyArray":141,"org.apache.commons.lang3.exception.ExceptionUtilsTest.test_getRootCauseMessage_Throwable":177,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":27,"org.apache.commons.lang3.reflect.TypeLiteralTest.testBasic":322,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringStringarray":129,"org.apache.commons.lang3.exception.ContextedExceptionTest.testAddContextValue":279,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOfIgnoreCase_StringInt":275,"org.apache.commons.lang3.exception.ContextedExceptionTest.testJavaSerialization":280,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":63,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringString":126,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDateFragmentInLargerUnitWithCalendar":237,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_AD":299,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionCompare":253,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEscapedQuote_LANG_477":120,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinuteFragmentInLargerUnitWithCalendar":186,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testJavaSerialization":290,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":45,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":38,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseUncheckedUncheckedException":336,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":4,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":77,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstringBeforeLast_StringString":314,"org.apache.commons.lang3.AnnotationUtilsTest.testNonEquivalentAnnotationsOfSameType":320,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHierarchyHashCode":256,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":304,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":42,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfYearWithCalendar":210,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfYearWithCalendar":228,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfMonthWithCalendar":214,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfMonthWithCalendar":224,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":16,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfYearWithCalendar":201,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCodeExcludeFields":258,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_CharArray_int_int":174,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateLong":330,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":167,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":102,"org.apache.commons.lang3.time.DateUtilsTest.testAddWeeks":307,"org.apache.commons.lang3.ArrayUtilsTest.testContainsByte":313,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendNewLine":239,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfHourWithCalendar":183,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":11,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testInvalidFragmentWithDate":206,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfWithStartIndex":249,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":35,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfDayWithCalendar":222,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":295,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":168,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":76,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":66,"org.apache.commons.lang3.BooleanUtilsTest.test_isNotTrue_Boolean":333,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeWithDelimiters_String":92,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":107,"org.apache.commons.lang3.AnnotationUtilsTest.testEquivalence":318,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":53,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":24,"org.apache.commons.lang3.exception.ContextedExceptionTest.testSetContextValue":281,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testEquals":278,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringString":317,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":78,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionHierarchyEquals":263,"org.apache.commons.lang3.ArrayUtilsTest.testToObject_boolean":91,"org.apache.commons.lang3.text.StrBuilderTest.testAsWriter":175,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":111,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteAll_StrMatcher":180,"org.apache.commons.lang3.ArrayUtilsTest.testContains":247,"org.apache.commons.lang3.ObjectUtilsTest.testIdentityToStringStringBuilder":138,"org.apache.commons.lang3.StringUtilsTest.testPrependIfMissing":332,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":155,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsofHourWithDate":220,"org.apache.commons.lang3.time.FastDateParserTest.testDayOf":296,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHourOfDayFragmentInLargerUnitWithDate":231,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEqualsExcludeFields":262,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":34,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringString":128,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":100,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":114,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":49,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testNullCalendar":221,"org.apache.commons.lang3.ArrayUtilsTest.testContainsInt":142,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfDayWithDate":213,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":29,"org.apache.commons.lang3.ArrayUtilsTest.testReverseByte":82,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testInteger":267,"org.apache.commons.lang3.builder.DiffBuilderTest.testStylePassedToDiffResult":104,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinuteFragmentInLargerUnitWithDate":192,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":52,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":43,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementBooleanArray":86,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDayOfYearFragmentInLargerUnitWithCalendar":189,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testEqualsOnStrings":277,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondFragmentInLargerUnitWithCalendar":225,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionObjectCycle":255,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementObjectArray":250,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":1,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":169,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testSetContextValue":286,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseUncheckedError":339,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":22,"org.apache.commons.lang3.CharUtilsTest.testIsAscii_char":124,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringString":131,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixture":265,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringStringarray":130,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":315,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayToObjectArray":0,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":327,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfMonthWithDate":194,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":2,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDaysOfYearWithDate":236,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":30,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":101,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":59,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfDayWithCalendar":232,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":15,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":171,"org.apache.commons.lang3.reflect.TypeUtilsTest.testParameterizeWithOwner":325,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":13,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":54,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testAddContextValue":284,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseUncheckedChecked":341,"org.apache.commons.lang3.BitFieldTest.testSetBoolean":136,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":94,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":37,"org.apache.commons.lang3.time.DateUtilsTest.testIsSameInstant_Date":176,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayBoolean":137,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfYearWithDate":217,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHourOfDayFragmentInLargerUnitWithCalendar":218,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":12,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":298,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":96,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":172,"org.apache.commons.lang3.math.NumberUtilsTest.testLang300":329,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":18,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMinuteWithCalender":229,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStripStart_StringString":88,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":112,"org.apache.commons.lang3.reflect.TypeLiteralTest.testTyped":323,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":62,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":20,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":109,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":33,"org.apache.commons.lang3.builder.DiffBuilderTest.testSimilarObjectIgnoresAppends":259,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":32,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfYearWithWrongOffsetBugWithCalendar":219,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMonthWithCalendar":196,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":301,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":21,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfYearWithDate":185,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseUncheckedError":337,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":311,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsofHourWithCalendar":195,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":55,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDaysOfYearWithCalendar":226,"org.apache.commons.lang3.math.NumberUtilsTest.testLANG971":308,"org.apache.commons.lang3.math.NumberUtilsTest.testLANG972":309,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":108,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDayOfYearFragmentInLargerUnitWithDate":208,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":41,"org.apache.commons.lang3.ArrayUtilsTest.testCloneByte":244,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":6,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementByteArray":246,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStrip_StringString":90,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testGetFirstContextValue":287,"org.apache.commons.lang3.StringUtilsTest.testGetJaroWinklerDistance_StringString":294,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHtml4":312,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":160,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":161,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_CharArray_int_int":173,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_short_short":117,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":7,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":166,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String_charArray":115,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDaysOfMonthWithCalendar":227,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfDayWithDate":212,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":164,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":105,"org.apache.commons.lang3.CharUtilsTest.testIsAsciiPrintable_char":125,"org.apache.commons.lang3.reflect.TypeUtilsTest.testParameterize":324,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":61,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfSecondWithDate":205,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyFloat":140,"org.apache.commons.lang3.text.StrBuilderTest.testChaining":241,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalize_String":93,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondFragmentInLargerUnitWithDate":207,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddNegate":273,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":31,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":69,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testJavaSerialization":285,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_AD":297,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareExcludeFields":251,"org.apache.commons.lang3.CharSetTest.testStatics":274,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetFirstContextValue":292,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":10,"org.apache.commons.lang3.math.NumberUtilsTest.testLANG992":310,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":57,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddCombinations":271,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":46,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDateFragmentInLargerUnitWithDate":198,"org.apache.commons.lang3.text.StrTokenizerTest.test5":153,"org.apache.commons.lang3.text.StrTokenizerTest.test4":152,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_AD":303,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGenericArrayType":326,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":48,"org.apache.commons.lang3.text.StrTokenizerTest.test6":154,"org.apache.commons.lang3.text.StrTokenizerTest.test1":149,"org.apache.commons.lang3.text.StrTokenizerTest.test3":151,"org.apache.commons.lang3.text.StrTokenizerTest.test2":150,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfYearWithDate":199,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":23,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testIntegerWithTransients":264,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfMonthWithDate":184,"org.apache.commons.lang3.AnnotationUtilsTest.testIsValidAnnotationMemberType":321,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":110,"org.apache.commons.lang3.exception.ContextedExceptionTest.testGetFirstContextValue":282,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsert":242,"org.apache.commons.lang3.ClassUtilsTest.testPrimitiveToWrapper":143,"org.apache.commons.lang3.text.StrBuilderTest.testGetCharsIntIntCharArrayInt":139,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareTransients":254,"org.apache.commons.lang3.exception.ContextedExceptionTest.testGetContextValues":283,"org.apache.commons.lang3.ConversionTest.testIntToByteArray":145,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEquals":260,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":9,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetContextValues":293,"org.apache.commons.lang3.AnnotationUtilsTest.testGeneratedAnnotationEquivalentToRealAnnotation":319,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":113,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementByteArray":245,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testAddContextValue":289,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":51,"org.apache.commons.lang3.ClassUtilsTest.testPrimitivesToWrappers":144,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDaysOfMonthWithDate":230,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testInvalidFragmentWithCalendar":233,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":99,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringStringarray":135,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfMonthWithDate":211,"org.apache.commons.lang3.CharSetTest.testConstructor_String_combo":270,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixtureWithTransients":266,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":146,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfDayWithDate":191,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfDayWithCalendar":238,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":148,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":147,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":65,"org.apache.commons.lang3.time.FastDateParserTest.testParses":300,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":8,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":159,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfMonthWithCalendar":209,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfHourWithDate":234,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetRootCause_Throwable":178,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseUncheckedChecked":340,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":36,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":26,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParses":306,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsofMinuteWithDate":200,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompare":252,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":157,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringString":127,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":158,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testExtendedAndBuiltInFormats":123,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":156,"org.apache.commons.lang3.EnumUtilsTest.test_isEnum":181,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringStringarray":134,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfYearWithDate":187,"org.apache.commons.lang3.CharSetTest.testConstructor_String_comboNegated":272,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsofMinuteWithCalendar":202,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":74,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":28,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":81,"org.apache.commons.lang3.StringUtilsTest.testRemoveStartIgnoreCase":87,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfHourWithCalendar":215,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementsObjectArray":268,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testDayOf":302,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils":335,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":170,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfDayWithCalendar":190,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayDouble":179,"org.apache.commons.lang3.ArrayUtilsTest.testContainsBoolean":85,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testSetContextValue":291,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":14,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String":116,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":25,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSizeEndText":83,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondFragmentInLargerUnitWithDate":188,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":328,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":75,"org.apache.commons.lang3.math.NumberUtilsTest.TestLang747":331},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomStringUtils:235","type":"CtBinaryOperatorImpl","sourcecode":"chars != null"},"failures":[0],"tindex":"36d6704d-2eb5-11e6-8586-0b9e41c0d725","method":{"position":"org.apache.commons.lang3.ArrayUtils:3791","type":"CtMethodImpl","sourcecode":"public static char[] addAll(final char[] array1, final char... array2) {\n    if (array1 != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array1 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array2);\n            } else if (array2 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array1);\n            } \n            final char[] char[] = new char[(array1.int) + (array2.int)];\n            java.lang.System.arraycopy(array1, 0, joinedArray, 0, array1.int);\n            java.lang.System.arraycopy(array2, 0, joinedArray, array1.int, array2.int);\n            return joinedArray;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chars":"array1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:912","type":"CtBinaryOperatorImpl","sourcecode":"(toString) == null"},"failures":[1,2,3,4,5,6,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81],"tindex":"36d70c8e-2eb5-11e6-8586-ad01e09b1b0f","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:857","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final boolean value) {\n    if (fieldName == null) {\n        {\n            buffer.append(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toString":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:653","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[],"tindex":"36d7339f-2eb5-11e6-8586-eb3e72911562","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:652","type":"CtMethodImpl","sourcecode":"public boolean replaceIn(java.lang.StringBuilder source) {\n    if (source == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (source == null) {\n                return false;\n            } \n            return replaceIn(source, 0, source.length());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"source"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:730","type":"CtBinaryOperatorImpl","sourcecode":"str == falseString"},"failures":[],"tindex":"36d75ab0-2eb5-11e6-8586-f7def7d25684","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1439","type":"CtMethodImpl","sourcecode":"protected void appendSummary(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final boolean[] array) {\n    if (fieldName == fieldName) {\n        {\n            appendSummarySize(buffer, fieldName, array.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName","falseString":"fieldName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3937","type":"CtBinaryOperatorImpl","sourcecode":"array1 == null"},"failures":[],"tindex":"36d75ab1-2eb5-11e6-8586-a3155cfda382","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:454","type":"CtMethodImpl","sourcecode":"public static int reflectionHashCode(final java.lang.Object object, final java.lang.String... excludeFields) {\n    if ((object.getOwnerType()) == null) {\n        {\n            if (object == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(17, 37, object, false, null, excludeFields);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array1":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1957","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[],"tindex":"36d75ab2-2eb5-11e6-8586-3b276751d731","method":{"position":"org.apache.commons.lang3.time.DateUtils:828","type":"CtMethodImpl","sourcecode":"public static java.util.Calendar truncate(final java.util.Calendar date, final int field) {\n    if (field < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (date == null) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            final java.util.Calendar java.util.Calendar = ((java.util.Calendar)(date.clone()));\n            org.apache.commons.lang3.time.DateUtils.modify(truncated, field, org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.int);\n            return truncated;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"field"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:573","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"36d781c3-2eb5-11e6-8586-f9bdc0d7066d","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1511","type":"CtMethodImpl","sourcecode":"protected void appendFieldSeparator(final java.lang.StringBuffer buffer) {\n    if (buffer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(java.lang.String);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"buffer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1506","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[82],"tindex":"36d781c4-2eb5-11e6-8586-8b850f1269c7","method":{"position":"org.apache.commons.lang3.ArrayUtils:1505","type":"CtMethodImpl","sourcecode":"public static void reverse(final byte[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return ;\n            } \n            org.apache.commons.lang3.ArrayUtils.reverse(array, 0, array.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1970","type":"CtBinaryOperatorImpl","sourcecode":"nullText == null"},"failures":[83],"tindex":"36d7a8d5-2eb5-11e6-8586-91ac45a7966f","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2033","type":"CtMethodImpl","sourcecode":"protected void setSizeEndText(java.lang.String sizeEndText) {\n    if (sizeEndText == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (sizeEndText == null) {\n                sizeEndText = \"\";\n            } \n            org.apache.commons.lang3.builder.ToStringStyle.this.java.lang.String = sizeEndText;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nullText":"sizeEndText"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.JavaVersion:148","type":"CtInvocationImpl","sourcecode":"\"1.8\".equals(nom)"},"failures":[],"tindex":"36d7a8d6-2eb5-11e6-8586-83a22a0bbde8","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1256","type":"CtMethodImpl","sourcecode":"protected void appendSummary(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final char[] array) {\n    if (\"1.8\".equals(fieldName)) {\n        {\n            appendSummarySize(buffer, fieldName, array.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nom":"fieldName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:596","type":"CtBinaryOperatorImpl","sourcecode":"toWildcardType == null"},"failures":[],"tindex":"36d7cfe7-2eb5-11e6-8586-697984f29105","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1807","type":"CtMethodImpl","sourcecode":"private static java.lang.String wildcardTypeToString(java.lang.reflect.WildcardType w) {\n    if (w == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder().append('?');\n            final java.lang.reflect.Type[] java.lang.reflect.Type[] = w.getLowerBounds();\n            final java.lang.reflect.Type[] java.lang.reflect.Type[] = w.getUpperBounds();\n            if ((lowerBounds.int) > 0) {\n                org.apache.commons.lang3.reflect.TypeUtils.appendAllTo(buf.append(\" super \"), \" & \", lowerBounds);\n            } else if (!(((upperBounds.int) == 1) && (java.lang.Object.java.lang.Object.java.lang.Class.equals(upperBounds[0])))) {\n                org.apache.commons.lang3.reflect.TypeUtils.appendAllTo(buf.append(\" extends \"), \" & \", upperBounds);\n            } \n            return buf.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toWildcardType":"w"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:259","type":"CtFieldReadImpl","sourcecode":"objectsTriviallyEqual"},"failures":[84,85,86],"tindex":"36d7f6f8-2eb5-11e6-8586-41145a943118","method":{"position":"org.apache.commons.lang3.ArrayUtils:2850","type":"CtMethodImpl","sourcecode":"public static int indexOf(final boolean[] array, final boolean valueToFind) {\n    if (valueToFind) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsTriviallyEqual":"valueToFind"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:667","type":"CtBinaryOperatorImpl","sourcecode":"stripChars == null"},"failures":[87],"tindex":"36d7f6f9-2eb5-11e6-8586-b37d0309cc86","method":{"position":"org.apache.commons.lang3.StringUtils:4249","type":"CtMethodImpl","sourcecode":"public static java.lang.String removeStartIgnoreCase(final java.lang.String str, final java.lang.String remove) {\n    if (str == null) {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(remove))) {\n                return str;\n            } \n            if (org.apache.commons.lang3.StringUtils.startsWithIgnoreCase(str, remove)) {\n                return str.substring(remove.length());\n            } \n            return str;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"stripChars":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:253","type":"CtBinaryOperatorImpl","sourcecode":"style == null"},"failures":[61],"tindex":"36d81e0a-2eb5-11e6-8586-993c4538fbdc","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:135","type":"CtMethodImpl","sourcecode":"public static void setDefaultStyle(final org.apache.commons.lang3.builder.ToStringStyle style) {\n    if (style == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (style == null) {\n                throw new java.lang.IllegalArgumentException(\"The style must not be null\");\n            } \n            org.apache.commons.lang3.builder.ToStringBuilder.org.apache.commons.lang3.builder.ToStringBuilder.org.apache.commons.lang3.builder.ToStringStyle = style;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"style":"style"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1072","type":"CtBinaryOperatorImpl","sourcecode":"suffix == null"},"failures":[88,89,90],"tindex":"36d81e0b-2eb5-11e6-8586-f7e5e1e4d3e8","method":{"position":"org.apache.commons.lang3.StringUtils:616","type":"CtMethodImpl","sourcecode":"public static java.lang.String stripStart(final java.lang.String str, final java.lang.String stripChars) {\n    if (stripChars == null) {\n        {\n            int int;\n            if ((str == null) || ((strLen = str.length()) == 0)) {\n                return str;\n            } \n            int int = 0;\n            if (stripChars == null) {\n                while ((start != strLen) && (java.lang.Character.isWhitespace(str.charAt(start)))) {\n                    start++;\n                }\n            } else if (stripChars.isEmpty()) {\n                return str;\n            } else {\n                while ((start != strLen) && ((stripChars.indexOf(str.charAt(start))) != (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int))) {\n                    start++;\n                }\n            }\n            return str.substring(start);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"suffix":"stripChars"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2914","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.ArrayUtils.isEmpty(array)"},"failures":[91],"tindex":"36d8451c-2eb5-11e6-8586-410066b91ae9","method":{"position":"org.apache.commons.lang3.ArrayUtils:3477","type":"CtMethodImpl","sourcecode":"public static java.lang.Boolean[] toObject(final boolean[] array) {\n    if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Boolean[];\n            } \n            final java.lang.Boolean[] java.lang.Boolean[] = new java.lang.Boolean[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = array[i] ? java.lang.Boolean.java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2373","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(separator))"},"failures":[64,64],"tindex":"36d86c2d-2eb5-11e6-8586-efa371fccfbf","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:787","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final double value) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(fieldName)) || (org.apache.commons.lang3.StringUtils.isEmpty(fieldName))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendFieldStart(buffer, fieldName);\n            appendDetail(buffer, fieldName, value);\n            appendFieldEnd(buffer, fieldName);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName","separator":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:663","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(tok)"},"failures":[],"tindex":"36d86c2e-2eb5-11e6-8586-0da06bef3cbf","method":{"position":"org.apache.commons.lang3.reflect.MethodUtils:419","type":"CtMethodImpl","sourcecode":"private static java.lang.reflect.Method getAccessibleMethodFromInterfaceNest(java.lang.Class<?> cls, final java.lang.String methodName, final java.lang.Class<?>... parameterTypes) {\n    if (cls.isAnnotation()) {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(methodName)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    for ( ; cls != null ; cls = cls.getSuperclass()) {\n                        final java.lang.Class<?>[] java.lang.Class<?>[] = cls.getInterfaces();\n                        for (int int = 0 ; i < (interfaces.int) ; i++) {\n                            if (!(java.lang.reflect.Modifier.isPublic(interfaces[i].getModifiers()))) {\n                                continue;\n                            } \n                            try {\n                                return interfaces[i].getDeclaredMethod(methodName, parameterTypes);\n                            } catch (final java.lang.NoSuchMethodException e) {\n                            }\n                            java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromInterfaceNest(interfaces[i], methodName, parameterTypes);\n                            if (method != null) {\n                                return method;\n                            } \n                        }\n                    }\n                    return null;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"tok":"methodName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1494","type":"CtBinaryOperatorImpl","sourcecode":"owner == null"},"failures":[],"tindex":"36d8933f-2eb5-11e6-8586-a10aa770a19e","method":{"position":"org.apache.commons.lang3.AnnotationUtils:91","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, java.lang.Object value) {\n    if (value == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value instanceof java.lang.annotation.Annotation) {\n                value = org.apache.commons.lang3.AnnotationUtils.toString(((java.lang.annotation.Annotation)(value)));\n            } \n            super.appendDetail(buffer, fieldName, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"owner":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:373","type":"CtInvocationImpl","sourcecode":"parsePattern.endsWith(\"ZZ\")"},"failures":[92,93],"tindex":"36d8ba50-2eb5-11e6-8586-d71f72e0159f","method":{"position":"org.apache.commons.lang3.text.WordUtils:284","type":"CtMethodImpl","sourcecode":"public static java.lang.String capitalize(final java.lang.String str, final char... delimiters) {\n    if (str.endsWith(\"ZZ\")) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = delimiters == null ? -1 : delimiters.int;\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (delimLen == 0)) {\n                return str;\n            } \n            final char[] char[] = str.toCharArray();\n            boolean boolean = true;\n            for (int int = 0 ; i < (buffer.int) ; i++) {\n                final char char = buffer[i];\n                if (org.apache.commons.lang3.text.WordUtils.isDelimiter(ch, delimiters)) {\n                    capitalizeNext = true;\n                } else if (capitalizeNext) {\n                    buffer[i] = java.lang.Character.toTitleCase(ch);\n                    capitalizeNext = false;\n                } \n            }\n            return new java.lang.String(buffer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"parsePattern":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:109","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114],"tindex":"36d8ba51-2eb5-11e6-8586-33204c7cd539","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:463","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final float lhs, final float rhs) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(fieldName)) {\n        {\n            if (fieldName == null) {\n                throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n            } \n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if ((java.lang.Float.floatToIntBits(lhs)) != (java.lang.Float.floatToIntBits(rhs))) {\n                java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Float>(fieldName) {\n                    private static final long serialVersionUID = 1L;\n\n                    @java.lang.Override\n                    public java.lang.Float getLeft() {\n                        return java.lang.Float.valueOf(lhs);\n                    }\n\n                    @java.lang.Override\n                    public java.lang.Float getRight() {\n                        return java.lang.Float.valueOf(rhs);\n                    }\n                });\n            } \n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:922","type":"CtInvocationImpl","sourcecode":"toClass.equals(cls)"},"failures":[],"tindex":"36d90872-2eb5-11e6-8586-8154d624e4cf","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1589","type":"CtMethodImpl","sourcecode":"protected java.lang.String getShortClassName(final java.lang.Class<?> cls) {\n    if (cls.equals(cls)) {\n        {\n            return org.apache.commons.lang3.ClassUtils.getShortClassName(cls);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toClass":"cls","cls":"cls"},"type":"special","returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.SerializationUtils:160","type":"CtBinaryOperatorImpl","sourcecode":"out != null"},"failures":[],"tindex":"36d90873-2eb5-11e6-8586-e3bb595d2f6d","method":{"position":"org.apache.commons.lang3.event.EventListenerSupport:224","type":"CtMethodImpl","sourcecode":"private void writeObject(final java.io.ObjectOutputStream objectOutputStream) throws java.io.IOException {\n    if (objectOutputStream != null) {\n        {\n            final java.util.ArrayList<L> java.util.ArrayList<L> = new java.util.ArrayList<L>();\n            java.io.ObjectOutputStream java.io.ObjectOutputStream = new java.io.ObjectOutputStream(new java.io.ByteArrayOutputStream());\n            for (final L L : java.util.List<L>) {\n                try {\n                    testObjectOutputStream.writeObject(listener);\n                    serializableListeners.add(listener);\n                } catch (final java.io.IOException exception) {\n                    testObjectOutputStream = new java.io.ObjectOutputStream(new java.io.ByteArrayOutputStream());\n                }\n            }\n            objectOutputStream.writeObject(serializableListeners.toArray(L[]));\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"out":"objectOutputStream"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:131","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[115,116],"tindex":"36d92f84-2eb5-11e6-8586-934066bbf0ce","method":{"position":"org.apache.commons.lang3.text.WordUtils:535","type":"CtMethodImpl","sourcecode":"public static java.lang.String initials(final java.lang.String str, final char... delimiters) {\n    if (str == null) {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n                return str;\n            } \n            if ((delimiters != null) && ((delimiters.int) == 0)) {\n                return \"\";\n            } \n            final int int = str.length();\n            final char[] char[] = new char[(strLen / 2) + 1];\n            int int = 0;\n            boolean boolean = true;\n            for (int int = 0 ; i < strLen ; i++) {\n                final char char = str.charAt(i);\n                if (org.apache.commons.lang3.text.WordUtils.isDelimiter(ch, delimiters)) {\n                    lastWasGap = true;\n                } else if (lastWasGap) {\n                    buf[(count++)] = ch;\n                    lastWasGap = false;\n                } else {\n                    continue;\n                }\n            }\n            return new java.lang.String(buf , 0 , count);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.AnnotationUtils:273","type":"CtInvocationImpl","sourcecode":"type.isAnnotation()"},"failures":[],"tindex":"36d95695-2eb5-11e6-8586-59ad05853d4c","method":{"position":"org.apache.commons.lang3.reflect.MethodUtils:419","type":"CtMethodImpl","sourcecode":"private static java.lang.reflect.Method getAccessibleMethodFromInterfaceNest(java.lang.Class<?> cls, final java.lang.String methodName, final java.lang.Class<?>... parameterTypes) {\n    if (cls.isAnnotation()) {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(methodName)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    for ( ; cls != null ; cls = cls.getSuperclass()) {\n                        final java.lang.Class<?>[] java.lang.Class<?>[] = cls.getInterfaces();\n                        for (int int = 0 ; i < (interfaces.int) ; i++) {\n                            if (!(java.lang.reflect.Modifier.isPublic(interfaces[i].getModifiers()))) {\n                                continue;\n                            } \n                            try {\n                                return interfaces[i].getDeclaredMethod(methodName, parameterTypes);\n                            } catch (final java.lang.NoSuchMethodException e) {\n                            }\n                            java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromInterfaceNest(interfaces[i], methodName, parameterTypes);\n                            if (method != null) {\n                                return method;\n                            } \n                        }\n                    }\n                    return null;\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"cls"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:170","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[93],"tindex":"36d95696-2eb5-11e6-8586-b9039a0ccca9","method":{"position":"org.apache.commons.lang3.text.WordUtils:251","type":"CtMethodImpl","sourcecode":"public static java.lang.String capitalize(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.text.WordUtils.capitalize(str, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3184","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[117],"tindex":"36d97da7-2eb5-11e6-8586-3165bba9c443","method":{"position":"org.apache.commons.lang3.ArrayUtils:3183","type":"CtMethodImpl","sourcecode":"public static short[] toPrimitive(final java.lang.Short[] array, final short valueForNull) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.short[];\n            } \n            final short[] short[] = new short[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                final java.lang.Short java.lang.Short = array[i];\n                result[i] = b == null ? valueForNull : b.shortValue();\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1007","type":"CtBinaryOperatorImpl","sourcecode":"prefix == null"},"failures":[118,119,120,121,122,123],"tindex":"36d97da8-2eb5-11e6-8586-91869439e92d","method":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:447","type":"CtMethodImpl","sourcecode":"private void seekNonWs(final java.lang.String pattern, final java.text.ParsePosition pos) {\n    if (pattern == null) {\n        {\n            int int = 0;\n            final char[] char[] = pattern.toCharArray();\n            do {\n                len = org.apache.commons.lang3.text.StrMatcher.splitMatcher().isMatch(buffer, pos.getIndex());\n                pos.setIndex(((pos.getIndex()) + len));\n            } while ((len > 0) && ((pos.getIndex()) < (pattern.length())) );\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"prefix":"pattern"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomStringUtils:310","type":"CtBinaryOperatorImpl","sourcecode":"chars == null"},"failures":[],"tindex":"36d97da9-2eb5-11e6-8586-4b7a943c12f6","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1419","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final boolean[] array) {\n    if (fieldName == null) {\n        {\n            buffer.append(java.lang.String);\n            for (int int = 0 ; i < (array.int) ; i++) {\n                if (i > 0) {\n                    buffer.append(java.lang.String);\n                } \n                appendDetail(buffer, fieldName, array[i]);\n            }\n            buffer.append(java.lang.String);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chars":"fieldName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:357","type":"CtBinaryOperatorImpl","sourcecode":"ch < 4096"},"failures":[124,125],"tindex":"36d9a4ba-2eb5-11e6-8586-0796a5eee853","method":{"position":"org.apache.commons.lang3.CharUtils:402","type":"CtMethodImpl","sourcecode":"public static boolean isAscii(final char ch) {\n    if (ch < 4096) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ch < 128;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:146","type":"CtBinaryOperatorImpl","sourcecode":"methodNames == null"},"failures":[126,127,128,129,130,131,132,133,134,135],"tindex":"36d9a4bb-2eb5-11e6-8586-b7054fda657b","method":{"position":"org.apache.commons.lang3.CharSetUtils:241","type":"CtMethodImpl","sourcecode":"private static boolean deepEmpty(final java.lang.String[] strings) {\n    if (strings == null) {\n        {\n            if (strings != null) {\n                for (final java.lang.String java.lang.String : strings) {\n                    if (org.apache.commons.lang3.StringUtils.isNotEmpty(s)) {\n                        return false;\n                    } \n                }\n            } \n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodNames":"strings"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.JavaVersion:148","type":"CtInvocationImpl","sourcecode":"\"1.8\".equals(nom)"},"failures":[],"tindex":"36d9a4bc-2eb5-11e6-8586-558845ea6fcb","method":{"position":"org.apache.commons.lang3.math.NumberUtils:169","type":"CtMethodImpl","sourcecode":"public static long toLong(final java.lang.String str, final long defaultValue) {\n    if (\"1.8\".equals(str)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return defaultValue;\n            } \n            try {\n                return java.lang.Long.parseLong(str);\n            } catch (final java.lang.NumberFormatException nfe) {\n                return defaultValue;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nom":"str"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1040","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[136],"tindex":"36d9cbcd-2eb5-11e6-8586-e71f7d1fe549","method":{"position":"org.apache.commons.lang3.BitField:253","type":"CtMethodImpl","sourcecode":"public int setBoolean(final int holder, final boolean flag) {\n    if (holder < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return flag ? set(holder) : clear(holder);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"holder"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3274","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"36d9cbce-2eb5-11e6-8586-8f29996a382e","method":{"position":"org.apache.commons.lang3.reflect.TypeLiteral:99","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic final boolean equals(java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.lang3.reflect.TypeLiteral.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.lang3.reflect.TypeLiteral) == false) {\n                return false;\n            } \n            final org.apache.commons.lang3.reflect.TypeLiteral<?> org.apache.commons.lang3.reflect.TypeLiteral<?> = ((org.apache.commons.lang3.reflect.TypeLiteral<?>)(obj));\n            return org.apache.commons.lang3.reflect.TypeUtils.equals(java.lang.reflect.Type, other.java.lang.reflect.Type);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:585","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[137],"tindex":"36d9cbcf-2eb5-11e6-8586-1ddee27c7142","method":{"position":"org.apache.commons.lang3.ArrayUtils:1194","type":"CtMethodImpl","sourcecode":"public static boolean[] subarray(final boolean[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } \n            if (startIndexInclusive < 0) {\n                startIndexInclusive = 0;\n            } \n            if (endIndexExclusive > (array.int)) {\n                endIndexExclusive = array.int;\n            } \n            final int int = endIndexExclusive - startIndexInclusive;\n            if (newSize <= 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.boolean[];\n            } \n            final boolean[] boolean[] = new boolean[newSize];\n            java.lang.System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);\n            return subarray;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:553","type":"CtFieldReadImpl","sourcecode":"objectsTriviallyEqual"},"failures":[85],"tindex":"36d9f2e0-2eb5-11e6-8586-510356cef726","method":{"position":"org.apache.commons.lang3.ArrayUtils:2939","type":"CtMethodImpl","sourcecode":"public static boolean contains(final boolean[] array, final boolean valueToFind) {\n    if (valueToFind) {\n        {\n            return (org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind)) != (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsTriviallyEqual":"valueToFind"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:520","type":"CtBinaryOperatorImpl","sourcecode":"toGenericArrayType == null"},"failures":[138],"tindex":"36d9f2e1-2eb5-11e6-8586-e16fdd76ca10","method":{"position":"org.apache.commons.lang3.ObjectUtils:364","type":"CtMethodImpl","sourcecode":"public static void identityToString(final java.lang.StringBuilder builder, final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == null) {\n                throw new java.lang.NullPointerException(\"Cannot get the toString of a null identity\");\n            } \n            builder.append(object.getClass().getName()).append('@').append(java.lang.Integer.toHexString(java.lang.System.identityHashCode(object)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toGenericArrayType":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:306","type":"CtBinaryOperatorImpl","sourcecode":"((className.charAt(0)) == 'L') && ((className.charAt(((className.length()) - 1))) == ';')"},"failures":[],"tindex":"36d9f2e2-2eb5-11e6-8586-fb99212e2f1d","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:801","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final double value) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((fieldName.charAt(0)) == 'L') && ((className.charAt(((className.length()) - 1))) == ';')) {\n                {\n                    buffer.append(value);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"className":"fieldName"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4951","type":"CtBinaryOperatorImpl","sourcecode":"end < 0"},"failures":[139],"tindex":"36da19f3-2eb5-11e6-8586-abc69c9b08b4","method":{"position":"org.apache.commons.lang3.text.StrBuilder:411","type":"CtMethodImpl","sourcecode":"public void getChars(final int startIndex, final int endIndex, final char[] destination, final int destinationIndex) {\n    if (endIndex < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (startIndex < 0) {\n                throw new java.lang.StringIndexOutOfBoundsException(startIndex);\n            } \n            if ((endIndex < 0) || (endIndex > (length()))) {\n                throw new java.lang.StringIndexOutOfBoundsException(endIndex);\n            } \n            if (startIndex > endIndex) {\n                throw new java.lang.StringIndexOutOfBoundsException(\"end < start\");\n            } \n            java.lang.System.arraycopy(char[], startIndex, destination, destinationIndex, (endIndex - startIndex));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"end":"endIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:874","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"36da19f4-2eb5-11e6-8586-9f2838cb0887","method":{"position":"org.apache.commons.lang3.AnnotationUtils:344","type":"CtMethodImpl","sourcecode":"private static int arrayMemberHash(final java.lang.Class<?> componentType, final java.lang.Object o) {\n    if (o == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (componentType.equals(java.lang.Byte.java.lang.Byte.java.lang.Class<java.lang.Byte>)) {\n                return java.util.Arrays.hashCode(((byte[])(o)));\n            } \n            if (componentType.equals(java.lang.Short.java.lang.Short.java.lang.Class<java.lang.Short>)) {\n                return java.util.Arrays.hashCode(((short[])(o)));\n            } \n            if (componentType.equals(java.lang.Integer.java.lang.Integer.java.lang.Class<java.lang.Integer>)) {\n                return java.util.Arrays.hashCode(((int[])(o)));\n            } \n            if (componentType.equals(java.lang.Character.java.lang.Character.java.lang.Class<java.lang.Character>)) {\n                return java.util.Arrays.hashCode(((char[])(o)));\n            } \n            if (componentType.equals(java.lang.Long.java.lang.Long.java.lang.Class<java.lang.Long>)) {\n                return java.util.Arrays.hashCode(((long[])(o)));\n            } \n            if (componentType.equals(java.lang.Float.java.lang.Float.java.lang.Class<java.lang.Float>)) {\n                return java.util.Arrays.hashCode(((float[])(o)));\n            } \n            if (componentType.equals(java.lang.Double.java.lang.Double.java.lang.Class<java.lang.Double>)) {\n                return java.util.Arrays.hashCode(((double[])(o)));\n            } \n            if (componentType.equals(java.lang.Boolean.java.lang.Boolean.java.lang.Class<java.lang.Boolean>)) {\n                return java.util.Arrays.hashCode(((boolean[])(o)));\n            } \n            return java.util.Arrays.hashCode(((java.lang.Object[])(o)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"o"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:70","type":"CtBinaryOperatorImpl","sourcecode":"pattern == null"},"failures":[],"tindex":"36da4105-2eb5-11e6-8586-edbde464f03a","method":{"position":"org.apache.commons.lang3.time.DateFormatUtils:224","type":"CtMethodImpl","sourcecode":"public static java.lang.String format(final java.util.Date date, final java.lang.String pattern, final java.util.TimeZone timeZone) {\n    if (pattern == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateFormatUtils.format(date, pattern, timeZone, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pattern":"pattern"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:975","type":"CtBinaryOperatorImpl","sourcecode":"superToString != null"},"failures":[],"tindex":"36da4106-2eb5-11e6-8586-19c595a25191","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:572","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final byte value) {\n    if (fieldName != null) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, value);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"superToString":"fieldName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:934","type":"CtBinaryOperatorImpl","sourcecode":"lhs == null"},"failures":[140,141],"tindex":"36da4107-2eb5-11e6-8586-891345b83d51","method":{"position":"org.apache.commons.lang3.ArrayUtils:652","type":"CtMethodImpl","sourcecode":"public static float[] nullToEmpty(final float[] array) {\n    if (array == null) {\n        {\n            if ((array == null) || ((array.int) == 0)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.float[];\n            } \n            return array;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:179","type":"CtBinaryOperatorImpl","sourcecode":"numerator < 0"},"failures":[142],"tindex":"36da4108-2eb5-11e6-8586-39b5af91bf9c","method":{"position":"org.apache.commons.lang3.ArrayUtils:2193","type":"CtMethodImpl","sourcecode":"public static boolean contains(final int[] array, final int valueToFind) {\n    if (valueToFind < 0) {\n        {\n            return (org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind)) != (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"numerator":"valueToFind"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:640","type":"CtBinaryOperatorImpl","sourcecode":"(toClass.isPrimitive()) && (!(cls.isPrimitive()))"},"failures":[143,144],"tindex":"36da6819-2eb5-11e6-8586-2ff724b8e3a2","method":{"position":"org.apache.commons.lang3.ClassUtils:709","type":"CtMethodImpl","sourcecode":"public static java.lang.Class<?> primitiveToWrapper(final java.lang.Class<?> cls) {\n    if ((cls.isPrimitive()) && (!(cls.isPrimitive()))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Class<?> java.lang.Class<?> = cls;\n            if ((cls != null) && (cls.isPrimitive())) {\n                convertedClass = org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(cls);\n            } \n            return convertedClass;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toClass":"cls","cls":"cls"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:996","type":"CtBinaryOperatorImpl","sourcecode":"(!done) && (((org.apache.commons.lang3.time.DateUtils.MODIFY_TRUNCATE) == modType) || (minutes < 30))"},"failures":[],"tindex":"36da681a-2eb5-11e6-8586-d1b3c1b1a8b3","method":{"position":"org.apache.commons.lang3.RandomStringUtils:186","type":"CtMethodImpl","sourcecode":"public static java.lang.String random(final int count, final int start, final int end, final boolean letters, final boolean numbers, final char... chars) {\n    if ((!letters) && ((count == start) || (count < 30))) {\n        {\n            return org.apache.commons.lang3.RandomStringUtils.random(count, start, end, letters, numbers, chars, org.apache.commons.lang3.RandomStringUtils.org.apache.commons.lang3.RandomStringUtils.java.util.Random);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"modType":"start","minutes":"count","org.apache.commons.lang3.time.DateUtils.MODIFY_TRUNCATE":"count","done":"letters"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:672","type":"CtBinaryOperatorImpl","sourcecode":"th == null"},"failures":[],"tindex":"36da681b-2eb5-11e6-8586-5f2050c7295e","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:640","type":"CtMethodImpl","sourcecode":"static java.util.List<java.lang.String> getStackFrameList(final java.lang.Throwable t) {\n    if (t == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.String java.lang.String = org.apache.commons.lang3.exception.ExceptionUtils.getStackTrace(t);\n            final java.lang.String java.lang.String = org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.java.lang.String;\n            final java.util.StringTokenizer java.util.StringTokenizer = new java.util.StringTokenizer(stackTrace , linebreak);\n            final java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n            boolean boolean = false;\n            while (frames.hasMoreTokens()) {\n                final java.lang.String java.lang.String = frames.nextToken();\n                final int int = token.indexOf(\"at\");\n                if ((at != (-1)) && (token.substring(0, at).trim().isEmpty())) {\n                    traceStarted = true;\n                    list.add(token);\n                } else if (traceStarted) {\n                    break;\n                } \n            }\n            return list;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"th":"t"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1294","type":"CtBinaryOperatorImpl","sourcecode":"(((nBytes - 1) * 8) + srcPos) >= 64"},"failures":[145],"tindex":"36da8f2c-2eb5-11e6-8586-3b10caa2b41b","method":{"position":"org.apache.commons.lang3.Conversion:1323","type":"CtMethodImpl","sourcecode":"public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n    if (dstPos == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((((dstPos - 1) * 8) + src) >= 64) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (0 == nBytes) {\n                        return dst;\n                    } \n                    if ((((nBytes - 1) * 8) + srcPos) >= 32) {\n                        throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n                    } \n                    int int = 0;\n                    for (int int = 0 ; i < nBytes ; i++) {\n                        shift = (i * 8) + srcPos;\n                        dst[(dstPos + i)] = ((byte)(255 & (src >> shift)));\n                    }\n                    return dst;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nBytes":"dstPos","srcPos":"src"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5623","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))"},"failures":[146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175],"tindex":"36dab63d-2eb5-11e6-8586-a5ecd7d20fd6","method":{"position":"org.apache.commons.lang3.text.StrBuilder:744","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder append(final char[] chars, final int startIndex, final int length) {\n    if ((org.apache.commons.lang3.ArrayUtils.isEmpty(chars)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(chars))) {\n        {\n            if (chars == null) {\n                return appendNull();\n            } \n            if ((startIndex < 0) || (startIndex > (chars.int))) {\n                throw new java.lang.StringIndexOutOfBoundsException((\"Invalid startIndex: \" + length));\n            } \n            if ((length < 0) || ((startIndex + length) > (chars.int))) {\n                throw new java.lang.StringIndexOutOfBoundsException((\"Invalid length: \" + length));\n            } \n            if (length > 0) {\n                final int int = length();\n                ensureCapacity((len + length));\n                java.lang.System.arraycopy(chars, startIndex, char[], len, length);\n                int += length;\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"chars","values":"chars"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:518","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[176],"tindex":"36dab63e-2eb5-11e6-8586-49e596a66a54","method":{"position":"org.apache.commons.lang3.time.DateUtils:200","type":"CtMethodImpl","sourcecode":"public static boolean isSameInstant(final java.util.Date date1, final java.util.Date date2) {\n    if (date1 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((date1 == null) || (date2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            return (date1.getTime()) == (date2.getTime());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:493","type":"CtBinaryOperatorImpl","sourcecode":"(numerator) == (java.lang.Integer.MIN_VALUE)"},"failures":[],"tindex":"36dadd4f-2eb5-11e6-8586-37b27439177a","method":{"position":"org.apache.commons.lang3.StringUtils:3710","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final byte[] array, final char separator, final int startIndex, final int endIndex) {\n    if (endIndex == endIndex) {\n        {\n            if (array == null) {\n                return null;\n            } \n            final int int = endIndex - startIndex;\n            if (noOfItems <= 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder((noOfItems * 16));\n            for (int int = startIndex ; i < endIndex ; i++) {\n                if (i > startIndex) {\n                    buf.append(separator);\n                } \n                buf.append(array[i]);\n            }\n            return buf.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.lang.Integer.MIN_VALUE":"endIndex","numerator":"endIndex"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4533","type":"CtBinaryOperatorImpl","sourcecode":"(--max) == 0"},"failures":[],"tindex":"36dbc6b0-2eb5-11e6-8586-8f5bf2677dff","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:353","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.time.FastDateFormat getDateTimeInstance(final int dateStyle, final int timeStyle, final java.util.TimeZone timeZone, final java.util.Locale locale) {\n    if ((--dateStyle) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getDateTimeInstance(dateStyle, timeStyle, timeZone, locale);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"max":"dateStyle"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:129","type":"CtBinaryOperatorImpl","sourcecode":"crex != null"},"failures":[177,178],"tindex":"36dbc6b1-2eb5-11e6-8586-0d07d6efd058","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:179","type":"CtMethodImpl","sourcecode":"public static java.lang.Throwable getRootCause(final java.lang.Throwable throwable) {\n    if (throwable != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.List<java.lang.Throwable> java.util.List<java.lang.Throwable> = org.apache.commons.lang3.exception.ExceptionUtils.getThrowableList(throwable);\n            return (list.size()) < 2 ? null : ((java.lang.Throwable)(list.get(((list.size()) - 1))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"crex":"throwable"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:961","type":"CtBinaryOperatorImpl","sourcecode":"className == null"},"failures":[],"tindex":"36dbedc2-2eb5-11e6-8586-6b3102a45ca1","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:379","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final double lhs, final double rhs) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (fieldName == null) {\n                throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n            } \n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if ((java.lang.Double.doubleToLongBits(lhs)) != (java.lang.Double.doubleToLongBits(rhs))) {\n                java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Double>(fieldName) {\n                    private static final long serialVersionUID = 1L;\n\n                    @java.lang.Override\n                    public java.lang.Double getLeft() {\n                        return java.lang.Double.valueOf(lhs);\n                    }\n\n                    @java.lang.Override\n                    public java.lang.Double getRight() {\n                        return java.lang.Double.valueOf(rhs);\n                    }\n                });\n            } \n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"className":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:131","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"36dc14d3-2eb5-11e6-8586-1d344d748c20","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:801","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final double value) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((fieldName.charAt(0)) == 'L') && ((className.charAt(((className.length()) - 1))) == ';')) {\n                {\n                    buffer.append(value);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:105","type":"CtBinaryOperatorImpl","sourcecode":"(codepoint < (below)) || (codepoint > (above))"},"failures":[],"tindex":"36dc3be4-2eb5-11e6-8586-b5ed074dd8ef","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2800","type":"CtMethodImpl","sourcecode":"protected void validateIndex(final int index) {\n    if ((index < index) || (codepoint > index)) {\n        {\n            if ((index < 0) || (index > (int))) {\n                throw new java.lang.StringIndexOutOfBoundsException(index);\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"codepoint":"index","below":"index","above":"index"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1520","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[179],"tindex":"36dc3be5-2eb5-11e6-8586-7d480e355318","method":{"position":"org.apache.commons.lang3.ArrayUtils:4124","type":"CtMethodImpl","sourcecode":"public static double[] add(final double[] array, final double element) {\n    if (array == null) {\n        {\n            final double[] double[] = ((double[])(org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(array, java.lang.Double.java.lang.Double.java.lang.Class<java.lang.Double>)));\n            newArray[((newArray.int) - 1)] = element;\n            return newArray;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:860","type":"CtBinaryOperatorImpl","sourcecode":"delim == null"},"failures":[180],"tindex":"36dc62f6-2eb5-11e6-8586-c35855104dc2","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1782","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder deleteAll(final org.apache.commons.lang3.text.StrMatcher matcher) {\n    if (matcher == null) {\n        {\n            return replace(matcher, null, 0, int, (-1));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delim":"matcher"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:669","type":"CtInvocationImpl","sourcecode":"str.equals(falseString)"},"failures":[181],"tindex":"36dc8a07-2eb5-11e6-8586-0195c71b2d9c","method":{"position":"org.apache.commons.lang3.EnumUtils:90","type":"CtMethodImpl","sourcecode":"public static <E extends java.lang.Enum<E>>boolean isValidEnum(final java.lang.Class<E> enumClass, final java.lang.String enumName) {\n    if (enumName.equals(enumName)) {\n        {\n            if (enumName == null) {\n                return false;\n            } \n            try {\n                java.lang.Enum.valueOf(enumClass, enumName);\n                return true;\n            } catch (final java.lang.IllegalArgumentException ex) {\n                return false;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"enumName","falseString":"enumName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:829","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[182],"tindex":"36dc8a08-2eb5-11e6-8586-3b3babdda3f4","method":{"position":"org.apache.commons.lang3.time.DateUtils:218","type":"CtMethodImpl","sourcecode":"public static boolean isSameInstant(final java.util.Calendar cal1, final java.util.Calendar cal2) {\n    if (cal2 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((cal1 == null) || (cal2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            return (cal1.getTime().getTime()) == (cal2.getTime().getTime());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"cal2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3769","type":"CtBinaryOperatorImpl","sourcecode":"i > startIndex"},"failures":[183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238],"tindex":"36dc8a09-2eb5-11e6-8586-c741d77d7081","method":{"position":"org.apache.commons.lang3.time.DateUtils:1667","type":"CtMethodImpl","sourcecode":"private static long getFragment(final java.util.Calendar calendar, final int fragment, final java.util.concurrent.TimeUnit unit) {\n    if (fragment > fragment) {\n        {\n            if (calendar == null) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            long long = 0;\n            int int = unit == (java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit) ? 0 : 1;\n            switch (fragment) {\n                case java.util.Calendar.java.util.Calendar.int :\n                    result += unit.convert(((calendar.get(java.util.Calendar.java.util.Calendar.int)) - offset), java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n                    break;\n                case java.util.Calendar.java.util.Calendar.int :\n                    result += unit.convert(((calendar.get(java.util.Calendar.java.util.Calendar.int)) - offset), java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n                    break;\n                default :\n                    break;\n            }\n            switch (fragment) {\n                case java.util.Calendar.java.util.Calendar.int :\n                case java.util.Calendar.java.util.Calendar.int :\n                case java.util.Calendar.java.util.Calendar.int :\n                case java.util.Calendar.java.util.Calendar.int :\n                    result += unit.convert(calendar.get(java.util.Calendar.java.util.Calendar.int), java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n                case java.util.Calendar.java.util.Calendar.int :\n                    result += unit.convert(calendar.get(java.util.Calendar.java.util.Calendar.int), java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n                case java.util.Calendar.java.util.Calendar.int :\n                    result += unit.convert(calendar.get(java.util.Calendar.java.util.Calendar.int), java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n                case java.util.Calendar.java.util.Calendar.int :\n                    result += unit.convert(calendar.get(java.util.Calendar.java.util.Calendar.int), java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n                    break;\n                case java.util.Calendar.java.util.Calendar.int :\n                    break;\n                default :\n                    throw new java.lang.IllegalArgumentException(((\"The fragment \" + fragment) + \" is not supported\"));\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"fragment","i":"fragment"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:633","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[239,240,241],"tindex":"36dcb11a-2eb5-11e6-8586-85a6720fe36f","method":{"position":"org.apache.commons.lang3.text.StrBuilder:151","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder setNewLineText(final java.lang.String newLine) {\n    if (newLine == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.text.StrBuilder.this.java.lang.String = newLine;\n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"newLine"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5378","type":"CtBinaryOperatorImpl","sourcecode":"pads <= 0"},"failures":[242],"tindex":"36dcd82b-2eb5-11e6-8586-f91bb92e5a36","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1623","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder insert(final int index, final int value) {\n    if (value <= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return insert(index, java.lang.String.valueOf(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pads":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1374","type":"CtBinaryOperatorImpl","sourcecode":"(p.getOwnerType()) == null"},"failures":[],"tindex":"36dcd82c-2eb5-11e6-8586-4d3362ecb2e1","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:454","type":"CtMethodImpl","sourcecode":"public static int reflectionHashCode(final java.lang.Object object, final java.lang.String... excludeFields) {\n    if ((object.getOwnerType()) == null) {\n        {\n            if (object == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(17, 37, object, false, null, excludeFields);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1896","type":"CtBinaryOperatorImpl","sourcecode":"fieldSeparator == null"},"failures":[243],"tindex":"36dcff3d-2eb5-11e6-8586-db93916b80ac","method":{"position":"org.apache.commons.lang3.StringUtils:926","type":"CtMethodImpl","sourcecode":"public static int indexOf(final java.lang.CharSequence seq, final java.lang.CharSequence searchSeq) {\n    if (seq == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((seq == null) || (searchSeq == null)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            return org.apache.commons.lang3.CharSequenceUtils.indexOf(seq, searchSeq, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldSeparator":"seq"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5909","type":"CtBinaryOperatorImpl","sourcecode":"found < 0"},"failures":[],"tindex":"36dcff3e-2eb5-11e6-8586-0dd74ebc0944","method":{"position":"org.apache.commons.lang3.time.DateUtils:1516","type":"CtMethodImpl","sourcecode":"public static long getFragmentInSeconds(final java.util.Calendar calendar, final int fragment) {\n    if (fragment < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"found":"fragment"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1506","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[244,245,246],"tindex":"36dd264f-2eb5-11e6-8586-216298f5c91b","method":{"position":"org.apache.commons.lang3.ArrayUtils:402","type":"CtMethodImpl","sourcecode":"public static byte[] clone(final byte[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            return array.clone();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2814","type":"CtBinaryOperatorImpl","sourcecode":"startIndex >= (array.length)"},"failures":[247,248,249,250,251,252,253,254,255,256,257,258,94,95,96,97,98,99,100,101,102,103,105,106,259,107,108,109,110,111,112,113,114,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274],"tindex":"36dd2650-2eb5-11e6-8586-8f5d5b979466","method":{"position":"org.apache.commons.lang3.ArrayUtils:1902","type":"CtMethodImpl","sourcecode":"public static int indexOf(final java.lang.Object[] array, final java.lang.Object objectToFind, int startIndex) {\n    if (startIndex >= startIndex) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                startIndex = 0;\n            } \n            if (objectToFind == null) {\n                for (int int = startIndex ; i < (array.int) ; i++) {\n                    if ((array[i]) == null) {\n                        return i;\n                    } \n                }\n            } else if (array.getClass().getComponentType().isInstance(objectToFind)) {\n                for (int int = startIndex ; i < (array.int) ; i++) {\n                    if (objectToFind.equals(array[i])) {\n                        return i;\n                    } \n                }\n            } \n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"startIndex","array":"objectToFind","length":"startIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5611","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"36dd4d61-2eb5-11e6-8586-8d14b6fbc75d","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:199","type":"CtMethodImpl","sourcecode":"public static int reflectionCompare(final java.lang.Object lhs, final java.lang.Object rhs, final java.util.Collection<java.lang.String> excludeFields) {\n    if (rhs == null) {\n        {\n            return org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(lhs, rhs, org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(excludeFields));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"rhs"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1844","type":"CtBinaryOperatorImpl","sourcecode":"contentEnd == null"},"failures":[],"tindex":"36dd4d62-2eb5-11e6-8586-85856c6cbe14","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:318","type":"CtMethodImpl","sourcecode":"public static java.lang.Object readDeclaredStaticField(final java.lang.Class<?> cls, final java.lang.String fieldName) throws java.lang.IllegalAccessException {\n    if (fieldName == null) {\n        throw new java.lang.IllegalAccessException();\n    } else {\n        {\n            return org.apache.commons.lang3.reflect.FieldUtils.readDeclaredStaticField(cls, fieldName, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"contentEnd":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3115","type":"CtBinaryOperatorImpl","sourcecode":"(sizePlus1++) == max"},"failures":[275,276],"tindex":"36dd4d63-2eb5-11e6-8586-890decc6bf64","method":{"position":"org.apache.commons.lang3.StringUtils:1371","type":"CtMethodImpl","sourcecode":"public static int lastIndexOfIgnoreCase(final java.lang.CharSequence str, final java.lang.CharSequence searchStr, int startPos) {\n    if ((startPos++) == startPos) {\n        {\n            if ((str == null) || (searchStr == null)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            if (startPos > ((str.length()) - (searchStr.length()))) {\n                startPos = (str.length()) - (searchStr.length());\n            } \n            if (startPos < 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            if ((searchStr.length()) == 0) {\n                return startPos;\n            } \n            for (int int = startPos ; i >= 0 ; i--) {\n                if (org.apache.commons.lang3.CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, searchStr.length())) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sizePlus1":"startPos","max":"startPos"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:423","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293],"tindex":"36dd7474-2eb5-11e6-8586-f92a9b27ed52","method":{"position":"org.apache.commons.lang3.StringUtils:794","type":"CtMethodImpl","sourcecode":"public static boolean equals(final java.lang.CharSequence cs1, final java.lang.CharSequence cs2) {\n    if (cs1 == null) {\n        {\n            if (cs1 == cs2) {\n                return true;\n            } \n            if ((cs1 == null) || (cs2 == null)) {\n                return false;\n            } \n            if ((cs1 instanceof java.lang.String) && (cs2 instanceof java.lang.String)) {\n                return cs1.equals(cs2);\n            } \n            return org.apache.commons.lang3.CharSequenceUtils.regionMatches(cs1, false, 0, cs2, 0, java.lang.Math.max(cs1.length(), cs2.length()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"cs1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2066","type":"CtBinaryOperatorImpl","sourcecode":"summaryObjectStartText == null"},"failures":[294],"tindex":"36dd7475-2eb5-11e6-8586-cf2f85cb368e","method":{"position":"org.apache.commons.lang3.StringUtils:7112","type":"CtMethodImpl","sourcecode":"private static int transpositions(java.lang.CharSequence first, java.lang.CharSequence second) {\n    if (first == null) {\n        {\n            int int = 0;\n            for (int int = 0 ; i < (first.length()) ; i++) {\n                if ((first.charAt(i)) != (second.charAt(i))) {\n                    transpositions++;\n                } \n            }\n            return transpositions / 2;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"summaryObjectStartText":"first"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1983","type":"CtBinaryOperatorImpl","sourcecode":"tmp < ret"},"failures":[295,296,297,298,299,300,301,302,303,304,305,306],"tindex":"36dd9b86-2eb5-11e6-8586-bda8931ee3b2","method":{"position":"org.apache.commons.lang3.time.FastDateParser:391","type":"CtMethodImpl","sourcecode":"private int adjustYear(final int twoDigitYear) {\n    if (twoDigitYear < twoDigitYear) {\n        {\n            int int = (int) + twoDigitYear;\n            return twoDigitYear >= (int) ? trial : trial + 100;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ret":"twoDigitYear","tmp":"twoDigitYear"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:6046","type":"CtBinaryOperatorImpl","sourcecode":"end > 0"},"failures":[],"tindex":"36dd9b87-2eb5-11e6-8586-0746fda93591","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1081","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final int value) {\n    if (value > 0) {\n        {\n            org.apache.commons.lang3.time.FastDatePrinter.NumberRule.appendTo(buffer, value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"end":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5375","type":"CtBinaryOperatorImpl","sourcecode":"found < 0"},"failures":[307],"tindex":"36dd9b88-2eb5-11e6-8586-3d1ebd68e345","method":{"position":"org.apache.commons.lang3.time.DateUtils:432","type":"CtMethodImpl","sourcecode":"public static java.util.Date addWeeks(final java.util.Date date, final int amount) {\n    if (amount < 0) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.add(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"found":"amount"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:1042","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[255,256,257,258,264,265,266,267],"tindex":"36ddc299-2eb5-11e6-8586-770832ede6b6","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:487","type":"CtMethodImpl","sourcecode":"static void unregister(final java.lang.Object value) {\n    if (value == null) {\n        {\n            java.util.Set<org.apache.commons.lang3.builder.IDKey> java.util.Set<org.apache.commons.lang3.builder.IDKey> = org.apache.commons.lang3.builder.HashCodeBuilder.getRegistry();\n            if (registry != null) {\n                registry.remove(new org.apache.commons.lang3.builder.IDKey(value));\n                synchronized(org.apache.commons.lang3.builder.HashCodeBuilder.org.apache.commons.lang3.builder.HashCodeBuilder.java.lang.Class) {\n                    registry = org.apache.commons.lang3.builder.HashCodeBuilder.getRegistry();\n                    if ((registry != null) && (registry.isEmpty())) {\n                        org.apache.commons.lang3.builder.HashCodeBuilder.org.apache.commons.lang3.builder.HashCodeBuilder.java.lang.ThreadLocal<java.util.Set<org.apache.commons.lang3.builder.IDKey>>.remove();\n                    } \n                }\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1120","type":"CtBinaryOperatorImpl","sourcecode":"c < a"},"failures":[],"tindex":"36ddc29a-2eb5-11e6-8586-1198d1ee8788","method":{"position":"org.apache.commons.lang3.time.DateUtils:446","type":"CtMethodImpl","sourcecode":"public static java.util.Date addDays(final java.util.Date date, final int amount) {\n    if (amount < amount) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateUtils.add(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"amount","c":"amount"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.JavaVersion:148","type":"CtInvocationImpl","sourcecode":"\"1.8\".equals(nom)"},"failures":[308,309,310,311],"tindex":"36ddc29b-2eb5-11e6-8586-bfc5411fc7bd","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1337","type":"CtMethodImpl","sourcecode":"public static boolean isNumber(final java.lang.String str) {\n    if (\"1.8\".equals(str)) {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n                return false;\n            } \n            final char[] char[] = str.toCharArray();\n            int int = chars.int;\n            boolean boolean = false;\n            boolean boolean = false;\n            boolean boolean = false;\n            boolean boolean = false;\n            final int int = (chars[0]) == '-' ? 1 : 0;\n            if ((sz > (start + 1)) && ((chars[start]) == '0')) {\n                if (((chars[(start + 1)]) == 'x') || ((chars[(start + 1)]) == 'X')) {\n                    int int = start + 2;\n                    if (i == sz) {\n                        return false;\n                    } \n                    for ( ; i < (chars.int) ; i++) {\n                        if (((((chars[i]) < '0') || ((chars[i]) > '9')) && (((chars[i]) < 'a') || ((chars[i]) > 'f'))) && (((chars[i]) < 'A') || ((chars[i]) > 'F'))) {\n                            return false;\n                        } \n                    }\n                    return true;\n                } else if (java.lang.Character.isDigit(chars[(start + 1)])) {\n                    int int = start + 1;\n                    for ( ; i < (chars.int) ; i++) {\n                        if (((chars[i]) < '0') || ((chars[i]) > '7')) {\n                            return false;\n                        } \n                    }\n                    return true;\n                } \n            } \n            sz--;\n            int int = start;\n            while ((i < sz) || (((i < (sz + 1)) && allowSigns) && (!foundDigit))) {\n                if (((chars[i]) >= '0') && ((chars[i]) <= '9')) {\n                    foundDigit = true;\n                    allowSigns = false;\n                } else if ((chars[i]) == '.') {\n                    if (hasDecPoint || hasExp) {\n                        return false;\n                    } \n                    hasDecPoint = true;\n                } else if (((chars[i]) == 'e') || ((chars[i]) == 'E')) {\n                    if (hasExp) {\n                        return false;\n                    } \n                    if (!foundDigit) {\n                        return false;\n                    } \n                    hasExp = true;\n                    allowSigns = true;\n                } else if (((chars[i]) == '+') || ((chars[i]) == '-')) {\n                    if (!allowSigns) {\n                        return false;\n                    } \n                    allowSigns = false;\n                    foundDigit = false;\n                } else {\n                    return false;\n                }\n                i++;\n            }\n            if (i < (chars.int)) {\n                if (((chars[i]) >= '0') && ((chars[i]) <= '9')) {\n                    return true;\n                } \n                if (((chars[i]) == 'e') || ((chars[i]) == 'E')) {\n                    return false;\n                } \n                if ((chars[i]) == '.') {\n                    if (hasDecPoint || hasExp) {\n                        return false;\n                    } \n                    return foundDigit;\n                } \n                if ((!allowSigns) && (((((chars[i]) == 'd') || ((chars[i]) == 'D')) || ((chars[i]) == 'f')) || ((chars[i]) == 'F'))) {\n                    return foundDigit;\n                } \n                if (((chars[i]) == 'l') || ((chars[i]) == 'L')) {\n                    return (foundDigit && (!hasExp)) && (!hasDecPoint);\n                } \n                return false;\n            } \n            return (!allowSigns) && foundDigit;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nom":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5660","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"36de10bc-2eb5-11e6-8586-e9b323b88bba","method":{"position":"org.apache.commons.lang3.time.DateFormatUtils:130","type":"CtMethodImpl","sourcecode":"public static java.lang.String formatUTC(final long millis, final java.lang.String pattern) {\n    if (pattern == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateFormatUtils.format(new java.util.Date(millis), pattern, org.apache.commons.lang3.time.DateFormatUtils.org.apache.commons.lang3.time.DateFormatUtils.java.util.TimeZone, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"pattern"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:658","type":"CtBinaryOperatorImpl","sourcecode":"trueString == null"},"failures":[],"tindex":"36de10bd-2eb5-11e6-8586-97e92c5641ab","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:355","type":"CtMethodImpl","sourcecode":"public void appendToString(final java.lang.StringBuffer buffer, final java.lang.String toString) {\n    if (toString == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (toString != null) {\n                final int int = (toString.indexOf(java.lang.String)) + (java.lang.String.length());\n                final int int = toString.lastIndexOf(java.lang.String);\n                if (((pos1 != pos2) && (pos1 >= 0)) && (pos2 >= 0)) {\n                    final java.lang.String java.lang.String = toString.substring(pos1, pos2);\n                    if (boolean) {\n                        removeLastFieldSeparator(buffer);\n                    } \n                    buffer.append(data);\n                    appendFieldSeparator(buffer);\n                } \n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trueString":"toString"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:905","type":"CtBinaryOperatorImpl","sourcecode":"0 == nHex"},"failures":[233],"tindex":"36deacfe-2eb5-11e6-8586-c361f6b8fcc8","method":{"position":"org.apache.commons.lang3.time.DateUtils:1479","type":"CtMethodImpl","sourcecode":"public static long getFragmentInMilliseconds(final java.util.Calendar calendar, final int fragment) {\n    if (0 == fragment) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nHex":"fragment"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:658","type":"CtBinaryOperatorImpl","sourcecode":"trueString == null"},"failures":[312],"tindex":"36deacff-2eb5-11e6-8586-99001639720e","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:626","type":"CtMethodImpl","sourcecode":"public static final java.lang.String unescapeHtml4(final java.lang.String input) {\n    if (input == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trueString":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:858","type":"CtBinaryOperatorImpl","sourcecode":"rhs == null"},"failures":[313],"tindex":"36dead00-2eb5-11e6-8586-4ffd6003c07b","method":{"position":"org.apache.commons.lang3.ArrayUtils:2507","type":"CtMethodImpl","sourcecode":"public static boolean contains(final byte[] array, final byte valueToFind) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind)) != (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"rhs":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:7053","type":"CtBinaryOperatorImpl","sourcecode":"((m1.length()) == 0) || ((m2.length()) == 0)"},"failures":[314],"tindex":"36ded411-2eb5-11e6-8586-7155cdddcca7","method":{"position":"org.apache.commons.lang3.StringUtils:2372","type":"CtMethodImpl","sourcecode":"public static java.lang.String substringBeforeLast(final java.lang.String str, final java.lang.String separator) {\n    if (((separator.length()) == 0) || ((separator.length()) == 0)) {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(separator))) {\n                return str;\n            } \n            final int int = str.lastIndexOf(separator);\n            if (pos == (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) {\n                return str;\n            } \n            return str.substring(0, pos);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"m1":"separator","m2":"separator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1589","type":"CtBinaryOperatorImpl","sourcecode":"((nBools - 1) + srcPos) >= 32"},"failures":[315],"tindex":"36ded412-2eb5-11e6-8586-83b9cfb853a4","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2821","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.List<java.lang.String> tokenize(final char[] chars, final int offset, final int count) {\n    if (((count - 1) + offset) >= 32) {\n        {\n            if (chars == null) {\n                return super.tokenize(org.apache.commons.lang3.text.StrBuilder.this.char[], 0, org.apache.commons.lang3.text.StrBuilder.this.size());\n            } \n            return super.tokenize(chars, offset, count);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nBools":"count","srcPos":"offset"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:696","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[316],"tindex":"36ded413-2eb5-11e6-8586-3f5e618949b4","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:552","type":"CtMethodImpl","sourcecode":"public java.lang.String replace(final org.apache.commons.lang3.text.StrBuilder source) {\n    if (source == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (source == null) {\n                return null;\n            } \n            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(source.length()).append(source);\n            substitute(buf, 0, buf.length());\n            return buf.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"source"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharRange:69","type":"CtBinaryOperatorImpl","sourcecode":"start > end"},"failures":[],"tindex":"36defb24-2eb5-11e6-8586-3b207ac653a8","method":{"position":"org.apache.commons.lang3.StringUtils:3463","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final char[] array, final char separator) {\n    if (separator > separator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            return org.apache.commons.lang3.StringUtils.join(array, separator, 0, array.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"separator","end":"separator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:717","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[317],"tindex":"36defb25-2eb5-11e6-8586-b79883ea9cc6","method":{"position":"org.apache.commons.lang3.StringUtils:1676","type":"CtMethodImpl","sourcecode":"public static boolean containsAny(final java.lang.CharSequence cs, final java.lang.CharSequence searchChars) {\n    if (searchChars == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (searchChars == null) {\n                return false;\n            } \n            return org.apache.commons.lang3.StringUtils.containsAny(cs, org.apache.commons.lang3.CharSequenceUtils.toCharArray(searchChars));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"searchChars"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:399","type":"CtBinaryOperatorImpl","sourcecode":"(comparison) != 0"},"failures":[],"tindex":"36defb26-2eb5-11e6-8586-6393155cf257","method":{"position":"org.apache.commons.lang3.time.DateUtils:737","type":"CtMethodImpl","sourcecode":"public static java.util.Calendar round(final java.util.Calendar date, final int field) {\n    if (field != 0) {\n        {\n            if (date == null) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            final java.util.Calendar java.util.Calendar = ((java.util.Calendar)(date.clone()));\n            org.apache.commons.lang3.time.DateUtils.modify(rounded, field, org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.int);\n            return rounded;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparison":"field"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3368","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"36df2237-2eb5-11e6-8586-89e1fa4d9d24","method":{"position":"org.apache.commons.lang3.ArrayUtils:5680","type":"CtMethodImpl","sourcecode":"public static long[] removeAll(final long[] array, final int... indices) {\n    if (indices == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((long[])(org.apache.commons.lang3.ArrayUtils.removeAll(((java.lang.Object)(array)), org.apache.commons.lang3.ArrayUtils.clone(indices))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"indices"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1745","type":"CtBinaryOperatorImpl","sourcecode":"(c.getEnclosingClass()) != null"},"failures":[318,319,320,321],"tindex":"36df2238-2eb5-11e6-8586-5b09dc640482","method":{"position":"org.apache.commons.lang3.AnnotationUtils:223","type":"CtMethodImpl","sourcecode":"public static boolean isValidAnnotationMemberType(java.lang.Class<?> type) {\n    if ((type.getEnclosingClass()) != null) {\n        {\n            if (type == null) {\n                return false;\n            } \n            if (type.isArray()) {\n                type = type.getComponentType();\n            } \n            return ((((type.isPrimitive()) || (type.isEnum())) || (type.isAnnotation())) || (java.lang.String.java.lang.String.java.lang.Class.equals(type))) || (java.lang.Class.java.lang.Class.java.lang.Class.equals(type));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"type"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:144","type":"CtBinaryOperatorImpl","sourcecode":"((ex != null) && (!(ex instanceof java.lang.RuntimeException))) && (!(ex instanceof java.lang.Error))"},"failures":[],"tindex":"36df2239-2eb5-11e6-8586-1de4851fc58b","method":{"position":"org.apache.commons.lang3.CharRange:208","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (((obj != null) && (!(ex instanceof java.lang.RuntimeException))) && (!(ex instanceof java.lang.Error))) {\n        {\n            if (obj == (org.apache.commons.lang3.CharRange.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.lang3.CharRange) == false) {\n                return false;\n            } \n            final org.apache.commons.lang3.CharRange org.apache.commons.lang3.CharRange = ((org.apache.commons.lang3.CharRange)(obj));\n            return (((char) == (other.char)) && ((char) == (other.char))) && ((boolean) == (other.boolean));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ex":"obj"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1672","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.GenericArrayType"},"failures":[322,323,324,325,326],"tindex":"36df494a-2eb5-11e6-8586-df4c8440fee9","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1487","type":"CtMethodImpl","sourcecode":"public static final java.lang.reflect.ParameterizedType parameterizeWithOwner(final java.lang.reflect.Type owner, final java.lang.Class<?> raw, final java.lang.reflect.Type... typeArguments) {\n    if (owner instanceof java.lang.reflect.GenericArrayType) {\n        {\n            org.apache.commons.lang3.Validate.notNull(raw, \"raw class is null\");\n            final java.lang.reflect.Type java.lang.reflect.Type;\n            if ((raw.getEnclosingClass()) == null) {\n                org.apache.commons.lang3.Validate.isTrue((owner == null), \"no owner allowed for top-level %s\", raw);\n                useOwner = null;\n            } else if (owner == null) {\n                useOwner = raw.getEnclosingClass();\n            } else {\n                org.apache.commons.lang3.Validate.isTrue(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(owner, raw.getEnclosingClass()), \"%s is invalid owner type for parameterized %s\", owner, raw);\n                useOwner = owner;\n            }\n            org.apache.commons.lang3.Validate.noNullElements(typeArguments, \"null type argument at index %s\");\n            org.apache.commons.lang3.Validate.isTrue(((raw.getTypeParameters().int) == (typeArguments.int)), \"invalid number of type parameters specified: expected %s, got %s\", raw.getTypeParameters().int, typeArguments.int);\n            return new org.apache.commons.lang3.reflect.TypeUtils.ParameterizedTypeImpl(raw , useOwner , typeArguments);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"owner"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:373","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[327,308,328,329,311,330,331],"tindex":"36df705b-2eb5-11e6-8586-b984bd291a93","method":{"position":"org.apache.commons.lang3.math.NumberUtils:708","type":"CtMethodImpl","sourcecode":"public static java.lang.Long createLong(final java.lang.String str) {\n    if (str == null) {\n        {\n            if (str == null) {\n                return null;\n            } \n            return java.lang.Long.decode(str);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:694","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[332],"tindex":"36df705c-2eb5-11e6-8586-93ad5116cefb","method":{"position":"org.apache.commons.lang3.StringUtils:7560","type":"CtMethodImpl","sourcecode":"public static java.lang.String prependIfMissing(final java.lang.String str, final java.lang.CharSequence prefix, final java.lang.CharSequence... prefixes) {\n    if (prefix == null) {\n        {\n            return org.apache.commons.lang3.StringUtils.prependIfMissing(str, prefix, false, prefixes);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"prefix"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2480","type":"CtBinaryOperatorImpl","sourcecode":"strLen == 0"},"failures":[],"tindex":"36df705d-2eb5-11e6-8586-c9aa0f829aae","method":{"position":"org.apache.commons.lang3.Conversion:1323","type":"CtMethodImpl","sourcecode":"public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n    if (dstPos == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((((dstPos - 1) * 8) + src) >= 64) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (0 == nBytes) {\n                        return dst;\n                    } \n                    if ((((nBytes - 1) * 8) + srcPos) >= 32) {\n                        throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n                    } \n                    int int = 0;\n                    for (int int = 0 ; i < nBytes ; i++) {\n                        shift = (i * 8) + srcPos;\n                        dst[(dstPos + i)] = ((byte)(255 & (src >> shift)));\n                    }\n                    return dst;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"strLen":"dstPos"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:64","type":"CtBinaryOperatorImpl","sourcecode":"bool == null"},"failures":[333],"tindex":"36df976e-2eb5-11e6-8586-db8caa78d1cb","method":{"position":"org.apache.commons.lang3.BooleanUtils:104","type":"CtMethodImpl","sourcecode":"public static boolean isNotTrue(final java.lang.Boolean bool) {\n    if (bool == null) {\n        {\n            return !(org.apache.commons.lang3.BooleanUtils.isTrue(bool));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bool":"bool"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5515","type":"CtBinaryOperatorImpl","sourcecode":"pads <= 0"},"failures":[334,335],"tindex":"36df976f-2eb5-11e6-8586-9f338ab5e61b","method":{"position":"org.apache.commons.lang3.RandomStringUtils:82","type":"CtMethodImpl","sourcecode":"public static java.lang.String randomAscii(final int count) {\n    if (count <= 0) {\n        {\n            return org.apache.commons.lang3.RandomStringUtils.random(count, 32, 127, false, false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pads":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:61","type":"CtBinaryOperatorImpl","sourcecode":"(ex == null) || ((ex.getCause()) == null)"},"failures":[336,337,338,339,340,341],"tindex":"36df9770-2eb5-11e6-8586-bd842b99749e","method":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:81","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.concurrent.ConcurrentRuntimeException extractCauseUnchecked(final java.util.concurrent.ExecutionException ex) {\n    if ((ex == null) || ((ex.getCause()) == null)) {\n        {\n            if ((ex == null) || ((ex.getCause()) == null)) {\n                return null;\n            } \n            org.apache.commons.lang3.concurrent.ConcurrentUtils.throwCause(ex);\n            return new org.apache.commons.lang3.concurrent.ConcurrentRuntimeException(ex.getMessage() , ex.getCause());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ex":"ex"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}