{"failureDictionary":{"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":93,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":224,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringString":36,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":226,"org.apache.commons.lang3.text.StrBuilderTest.testSubstringInt":49,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":220,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":223,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedFieldForceAccess":87,"org.apache.commons.lang3.time.DateUtilsTest.testSetYears":177,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetAccessibleMethodPrivateInterface":42,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testConstantFuture_null":39,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementBooleanArray":240,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":51,"org.apache.commons.lang3.CharUtilsTest.testToIntValue_Character":191,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteDeclaredNamedField":91,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":15,"org.apache.commons.lang3.CharSetTest.testHashCode":117,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadDeclaredNamedStaticField":78,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":139,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddDash":109,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":19,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testNullArgument":100,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHiragana":107,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang708":24,"org.apache.commons.lang3.time.DateUtilsTest.testAddMonths":33,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlVersions":106,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":17,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetMatchingAccessibleMethod":96,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringStringarray":127,"org.apache.commons.lang3.time.DateUtilsTest.testSetMonths":173,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":6,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethodWithEvent":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":228,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":212,"org.apache.commons.lang3.CharUtilsTest.testToCharacterObject_String":29,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testConstantFuture_Integer":38,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":145,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":216,"org.apache.commons.lang3.StringUtilsTest.testChomp":27,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":147,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeEcmaScript":25,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":142,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":206,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":20,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethod":69,"org.apache.commons.lang3.exception.ExceptionUtilsTest.test_getRootCauseMessage_Throwable":164,"org.apache.commons.lang3.time.FastDateFormatTest.testDateDefaults":241,"org.apache.commons.lang3.CharSetTest.testEquals_Object":112,"org.apache.commons.lang3.BitFieldTest.testSetValue":1,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringStringarray":125,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":219,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringString":122,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":138,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_int_int_String":34,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testJavaSerialization":9,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":180,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":201,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairsLang858":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":233,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":182,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstringBetween_StringString":162,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedStaticFieldForceAccess":88,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListener":68,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeMethod":98,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":198,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":155,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadStaticFieldIllegalArgumentException2":84,"org.apache.commons.lang3.BooleanUtilsTest.testXor_object_nullInput":46,"org.apache.commons.lang3.CharSetTest.testConstructor_String_simple":111,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":156,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":141,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":157,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":67,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":158,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtml":104,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":186,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":232,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":222,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":185,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":209,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":21,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringString":238,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":150,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":151,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":183,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":108,"org.apache.commons.lang3.text.StrBuilderTest.testSubstringIntInt":48,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadStaticFieldForceAccess":72,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringString":124,"org.apache.commons.lang3.ObjectUtilsTest.testConstMethods":242,"org.apache.commons.lang3.CharSetTest.testContains_Char":113,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":179,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":205,"org.apache.commons.lang3.BitFieldTest.testSetShortValue":0,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":187,"org.apache.commons.lang3.ArrayUtilsTest.testReverseInt":45,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":208,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":227,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairs":103,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeStaticMethod":94,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringString":126,"org.apache.commons.lang3.text.StrTokenizerTest.testChaining":44,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":13,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":181,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringStringarray":35,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":130,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayToObjectArray":234,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadDeclaredNamedStaticFieldForceAccess":75,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":215,"org.apache.commons.lang3.time.DateUtilsTest.testSetHours":176,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":210,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":194,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedField":80,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedStaticField":74,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":218,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteDeclaredNamedFieldForceAccess":81,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":140,"org.apache.commons.lang3.time.DateUtilsTest.testRoundLang346":167,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadStaticField":89,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":136,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":196,"org.apache.commons.lang3.StringUtilsTest.testRepeat_StringStringInt":26,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":211,"org.apache.commons.lang3.StringUtilsTest.testCenter_StringIntString":195,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":184,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":3,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":131,"org.apache.commons.lang3.LocaleUtilsTest.testLocaleLookupList_Locale":32,"org.apache.commons.lang3.CharSetTest.testGetInstance_Stringarray":118,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":160,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":161,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":4,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSummaryObjectEndText":5,"org.apache.commons.lang3.CharUtilsTest.testIsAsciiPrintable_char":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":217,"org.apache.commons.lang3.StringUtilsTest.testRemoveEnd":28,"org.apache.commons.lang3.CharSetTest.testSerialization":110,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendPadding":236,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":12,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":133,"org.apache.commons.lang3.ArrayUtilsTest.testIsNotEmptyPrimitives":43,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":134,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddNegate":119,"org.apache.commons.lang3.exception.ExceptionUtilsTest.test_getMessage_Throwable":189,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":97,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testContextedException":7,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetField":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":214,"org.apache.commons.lang3.time.DateUtilsTest.testWeekIterator":172,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":225,"org.apache.commons.lang3.time.DateUtilsTest.testMonthIterator":166,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":137,"org.apache.commons.lang3.CharSetTest.testStatics":121,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementShortArray":244,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":159,"org.apache.commons.lang3.text.StrBuilderTest.testSubSequenceIntInt":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":213,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddCombinations":115,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":169,"org.apache.commons.lang3.text.StrTokenizerTest.test8":64,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":202,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":22,"org.apache.commons.lang3.time.DateUtilsTest.testRound":11,"org.apache.commons.lang3.text.StrTokenizerTest.test5":61,"org.apache.commons.lang3.text.StrTokenizerTest.test4":60,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadDeclaredNamedField":73,"org.apache.commons.lang3.text.StrTokenizerTest.test7":63,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":178,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":203,"org.apache.commons.lang3.text.StrTokenizerTest.test6":62,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":204,"org.apache.commons.lang3.text.StrTokenizerTest.test1":57,"org.apache.commons.lang3.text.StrTokenizerTest.test3":59,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":146,"org.apache.commons.lang3.text.StrTokenizerTest.test2":58,"org.apache.commons.lang3.CharSetTest.testGetInstance":120,"org.apache.commons.lang3.ClassUtilsTest.testGetClassInvalidArguments":193,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedStaticFieldForceAccess":79,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedFieldForceAccess":92,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteStaticField":86,"org.apache.commons.lang3.time.DateUtilsTest.testSetDays":174,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetMatchingAccessibleMethod":101,"org.apache.commons.lang3.ObjectUtilsTest.testHashCode":235,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":132,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":50,"org.apache.commons.lang3.reflect.MethodUtilsTest.testNullArgument":95,"org.apache.commons.lang3.event.EventUtilsTest.testBindFilteredEventsToMethod":70,"org.apache.commons.lang3.StringUtilsTest.testDeleteWhitespace_String":192,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteDeclaredNamedStaticFieldForceAccess":90,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testAddContextValue":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":207,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlHighUnicode":105,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringStringarray":129,"org.apache.commons.lang3.time.DateUtilsTest.testAddMilliseconds":175,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveShortArray":243,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstringBetween_StringStringString":163,"org.apache.commons.lang3.CharSetTest.testConstructor_String_combo":114,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":143,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":52,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":135,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":144,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":54,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":53,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":56,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":55,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":221,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":18,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":154,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringWithSupplementaryChars":239,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetRootCause_Throwable":165,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateDouble":197,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedField":83,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":229,"org.apache.commons.lang3.time.DateUtilsTest.testTruncateLang59":170,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":200,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedStaticField":85,"org.apache.commons.lang3.reflect.TypeUtilsTest.testTypesSatisfyVariables":190,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":65,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":148,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetAccessibleInterfaceMethod":40,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":153,"org.apache.commons.lang3.StringUtilsTest.testDefault_String":188,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringString":123,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":66,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":152,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringStringarray":128,"org.apache.commons.lang3.CharSetTest.testConstructor_String_comboNegated":116,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":149,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetAccessibleInterfaceMethodFromDescription":41,"org.apache.commons.lang3.time.DateUtilsTest.testTruncate":168,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":230,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":102,"org.apache.commons.lang3.mutable.MutableBooleanTest.testGetSet":37,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":14,"org.apache.commons.lang3.StringUtilsIsTest.testIsAsciiPrintable_String":31,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeConstructor":99,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadDeclaredNamedFieldForceAccess":76,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteDeclaredNamedStaticField":82,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testSetContextValue":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":199,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringWithBadSupplementaryChars":237,"org.apache.commons.lang3.time.DateUtilsTest.testSetSeconds":171,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":231},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:614","type":"CtBinaryOperatorImpl","sourcecode":"t > 0"},"failures":[0,1],"tindex":"f828738f-2e84-11e6-b4da-db00f4c59e5b","method":{"position":"org.apache.commons.lang3.BitField:65","type":"CtMethodImpl","sourcecode":"public int getValue(final int holder) {\n    if (holder > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (getRawValue(holder)) >> (int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"t":"holder"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:4575","type":"CtBinaryOperatorImpl","sourcecode":"index < length"},"failures":[],"tindex":"f82936e0-2e84-11e6-b4da-2bb5c70ea2c8","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1553","type":"CtMethodImpl","sourcecode":"protected void appendSummarySize(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final int size) {\n    if (size < size) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(java.lang.String);\n            buffer.append(size);\n            buffer.append(java.lang.String);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"size","index":"size"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:570","type":"CtBinaryOperatorImpl","sourcecode":"delimiters == null"},"failures":[2,2,3,3,4],"tindex":"f8295df1-2e84-11e6-b4da-cbf76a3cb314","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:345","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final char[] array) {\n    if (array == null) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, array, null);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delimiters":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2066","type":"CtBinaryOperatorImpl","sourcecode":"summaryObjectStartText == null"},"failures":[5],"tindex":"f8298502-2e84-11e6-b4da-b1ab856b71c1","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2097","type":"CtMethodImpl","sourcecode":"protected void setSummaryObjectEndText(java.lang.String summaryObjectEndText) {\n    if (summaryObjectEndText == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (summaryObjectEndText == null) {\n                summaryObjectEndText = \"\";\n            } \n            org.apache.commons.lang3.builder.ToStringStyle.this.java.lang.String = summaryObjectEndText;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"summaryObjectStartText":"summaryObjectEndText"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1663","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.ParameterizedType"},"failures":[6],"tindex":"f8298503-2e84-11e6-b4da-5108700e40fe","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:209","type":"CtMethodImpl","sourcecode":"public static java.lang.String replace(final java.lang.Object source, final java.util.Properties valueProperties) {\n    if (source instanceof java.lang.reflect.ParameterizedType) {\n        {\n            if (valueProperties == null) {\n                return source.toString();\n            } \n            final java.util.Map<java.lang.String, java.lang.String> java.util.Map<java.lang.String, java.lang.String> = new java.util.HashMap<java.lang.String, java.lang.String>();\n            final java.util.Enumeration<?> java.util.Enumeration<?> = valueProperties.propertyNames();\n            while (propNames.hasMoreElements()) {\n                final java.lang.String java.lang.String = ((java.lang.String)(propNames.nextElement()));\n                final java.lang.String java.lang.String = valueProperties.getProperty(propName);\n                valueMap.put(propName, propValue);\n            }\n            return org.apache.commons.lang3.text.StrSubstitutor.replace(source, valueMap);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"source"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5553","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(padStr)"},"failures":[7,8,9,10],"tindex":"f829ac14-2e84-11e6-b4da-4fdf04a81034","method":{"position":"org.apache.commons.lang3.exception.ContextedRuntimeException:253","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.String getFormattedExceptionMessage(final java.lang.String baseMessage) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(baseMessage)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.exception.ExceptionContext.getFormattedExceptionMessage(baseMessage);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"padStr":"baseMessage"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:367","type":"CtInvocationImpl","sourcecode":"value.equals(trueValue)"},"failures":[11,12,13,14,15,16,17,18,19,20,21,22],"tindex":"f829d325-2e84-11e6-b4da-e73682aa8413","method":{"position":"org.apache.commons.lang3.time.DateUtils:774","type":"CtMethodImpl","sourcecode":"public static java.util.Date round(final java.lang.Object date, final int field) {\n    if (date.equals(date)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (date == null) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            if (date instanceof java.util.Date) {\n                return org.apache.commons.lang3.time.DateUtils.round(((java.util.Date)(date)), field);\n            } else if (date instanceof java.util.Calendar) {\n                return org.apache.commons.lang3.time.DateUtils.round(((java.util.Calendar)(date)), field).getTime();\n            } else {\n                throw new java.lang.ClassCastException((\"Could not round \" + date));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trueValue":"date","value":"date"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:717","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[23,24,25],"tindex":"f829d326-2e84-11e6-b4da-cb6e339947f5","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:483","type":"CtMethodImpl","sourcecode":"public static final java.lang.String escapeEcmaScript(final java.lang.String input) {\n    if (input == null) {\n        {\n            return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:634","type":"CtBinaryOperatorImpl","sourcecode":"(cls.isPrimitive()) && (!(toClass.isPrimitive()))"},"failures":[],"tindex":"f829fa37-2e84-11e6-b4da-81f10f1d1648","method":{"position":"org.apache.commons.lang3.ClassUtils:369","type":"CtMethodImpl","sourcecode":"private static void getAllInterfaces(java.lang.Class<?> cls, final java.util.HashSet<java.lang.Class<?>> interfacesFound) {\n    if ((cls.isPrimitive()) && (!(cls.isPrimitive()))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            while (cls != null) {\n                final java.lang.Class<?>[] java.lang.Class<?>[] = cls.getInterfaces();\n                for (final java.lang.Class<?> java.lang.Class<?> : interfaces) {\n                    if (interfacesFound.add(i)) {\n                        org.apache.commons.lang3.ClassUtils.getAllInterfaces(i, interfacesFound);\n                    } \n                }\n                cls = cls.getSuperclass();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toClass":"cls","cls":"cls"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:7053","type":"CtBinaryOperatorImpl","sourcecode":"((m1.length()) == 0) || ((m2.length()) == 0)"},"failures":[26,27,28],"tindex":"f82a2148-2e84-11e6-b4da-3f68a6abd644","method":{"position":"org.apache.commons.lang3.StringUtils:4283","type":"CtMethodImpl","sourcecode":"public static java.lang.String removeEnd(final java.lang.String str, final java.lang.String remove) {\n    if (((remove.length()) == 0) || ((remove.length()) == 0)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(remove))) {\n                return str;\n            } \n            if (str.endsWith(remove)) {\n                return str.substring(0, ((str.length()) - (remove.length())));\n            } \n            return str;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"m1":"remove","m2":"remove"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6393","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[29],"tindex":"f82a2149-2e84-11e6-b4da-4f52cd279177","method":{"position":"org.apache.commons.lang3.CharUtils:108","type":"CtMethodImpl","sourcecode":"public static java.lang.Character toCharacterObject(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n                return null;\n            } \n            return java.lang.Character.valueOf(str.charAt(0));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:606","type":"CtBinaryOperatorImpl","sourcecode":"c == (java.lang.Character.MIN_VALUE)"},"failures":[30,31],"tindex":"f82a485a-2e84-11e6-b4da-033320e61834","method":{"position":"org.apache.commons.lang3.CharUtils:421","type":"CtMethodImpl","sourcecode":"public static boolean isAsciiPrintable(final char ch) {\n    if (ch == ch) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (ch >= 32) && (ch < 127);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"ch","java.lang.Character.MIN_VALUE":"ch"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSequenceUtils:74","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[],"tindex":"f82a485b-2e84-11e6-b4da-e1610ae8c1ff","method":{"position":"org.apache.commons.lang3.text.StrBuilder:877","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendln(final java.lang.String str, final int startIndex, final int length) {\n    if (startIndex < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return append(str, startIndex, length).appendNewLine();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"startIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6767","type":"CtBinaryOperatorImpl","sourcecode":"m == 0"},"failures":[],"tindex":"f82a6f6c-2e84-11e6-b4da-558eb532a7c0","method":{"position":"org.apache.commons.lang3.time.FastDateParser:391","type":"CtMethodImpl","sourcecode":"private int adjustYear(final int twoDigitYear) {\n    if (twoDigitYear == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = (int) + twoDigitYear;\n            return twoDigitYear >= (int) ? trial : trial + 100;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"m":"twoDigitYear"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:360","type":"CtBinaryOperatorImpl","sourcecode":"locale == null"},"failures":[32],"tindex":"f82a6f6d-2e84-11e6-b4da-7f13f63165ed","method":{"position":"org.apache.commons.lang3.LocaleUtils:172","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.util.Locale> localeLookupList(final java.util.Locale locale) {\n    if (locale == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.LocaleUtils.localeLookupList(locale, locale);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"locale":"locale"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2769","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[33],"tindex":"f82a967e-2e84-11e6-b4da-ade0edf71501","method":{"position":"org.apache.commons.lang3.time.DateUtils:418","type":"CtMethodImpl","sourcecode":"public static java.util.Date addMonths(final java.util.Date date, final int amount) {\n    if (amount < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateUtils.add(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"amount"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:192","type":"CtBinaryOperatorImpl","sourcecode":"(duration.length()) != 0"},"failures":[34],"tindex":"f82a967f-2e84-11e6-b4da-f15248b3aeca","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1834","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder replace(final int startIndex, int endIndex, final java.lang.String replaceStr) {\n    if ((replaceStr.length()) != 0) {\n        {\n            endIndex = validateRange(startIndex, endIndex);\n            final int int = replaceStr == null ? 0 : replaceStr.length();\n            replaceImpl(startIndex, endIndex, (endIndex - startIndex), replaceStr, insertLen);\n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"duration":"replaceStr"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3108","type":"CtBinaryOperatorImpl","sourcecode":"(separatorChars.length()) == 1"},"failures":[],"tindex":"f82abd90-2e84-11e6-b4da-4b60f0e9a90c","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1432","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendFixedWidthPadRight(final java.lang.Object obj, final int width, final char padChar) {\n    if ((obj.length()) == 1) {\n        {\n            if (width > 0) {\n                ensureCapacity(((int) + width));\n                java.lang.String java.lang.String = obj == null ? getNullText() : obj.toString();\n                if (str == null) {\n                    str = \"\";\n                } \n                final int int = str.length();\n                if (strLen >= width) {\n                    str.getChars(0, width, char[], int);\n                } else {\n                    final int int = width - strLen;\n                    str.getChars(0, strLen, char[], int);\n                    for (int int = 0 ; i < padLen ; i++) {\n                        char[][(((int) + strLen) + i)] = padChar;\n                    }\n                }\n                int += width;\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"separatorChars":"obj"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1979","type":"CtBinaryOperatorImpl","sourcecode":"tmp == (org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND)"},"failures":[],"tindex":"f82ae4a1-2e84-11e6-b4da-f331b9c93f4c","method":{"position":"org.apache.commons.lang3.ArrayUtils:4420","type":"CtMethodImpl","sourcecode":"public static short[] add(final short[] array, final int index, final short element) {\n    if (index == index) {\n        {\n            return ((short[])(org.apache.commons.lang3.ArrayUtils.add(array, index, java.lang.Short.valueOf(element), java.lang.Short.java.lang.Short.java.lang.Class<java.lang.Short>)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND":"index","tmp":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:7364","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[35,36],"tindex":"f82ae4a2-2e84-11e6-b4da-137962dd8833","method":{"position":"org.apache.commons.lang3.CharSetUtils:140","type":"CtMethodImpl","sourcecode":"public static int count(final java.lang.String str, final java.lang.String... set) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.CharSetUtils.deepEmpty(set))) {\n                return 0;\n            } \n            final org.apache.commons.lang3.CharSet org.apache.commons.lang3.CharSet = org.apache.commons.lang3.CharSet.getInstance(set);\n            int int = 0;\n            for (final char char : str.toCharArray()) {\n                if (chars.contains(c)) {\n                    count++;\n                } \n            }\n            return count;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2848","type":"CtVariableReadImpl","sourcecode":"preserveAllTokens"},"failures":[37],"tindex":"f82b0bb3-2e84-11e6-b4da-5120acf6d4a3","method":{"position":"org.apache.commons.lang3.mutable.MutableBoolean:87","type":"CtMethodImpl","sourcecode":"public void setValue(final boolean value) {\n    if (value) {\n        {\n            org.apache.commons.lang3.mutable.MutableBoolean.this.boolean = value;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"preserveAllTokens":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:637","type":"CtFieldReadImpl","sourcecode":"objectsTriviallyEqual"},"failures":[38,39],"tindex":"f82b32c4-2e84-11e6-b4da-2d11f4ec4404","method":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:388","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean cancel(final boolean mayInterruptIfRunning) {\n    if (mayInterruptIfRunning) {\n        {\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsTriviallyEqual":"mayInterruptIfRunning"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:173","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[40,41,42],"tindex":"f82b32c5-2e84-11e6-b4da-bf5f7e2f1c92","method":{"position":"org.apache.commons.lang3.reflect.MethodUtils:419","type":"CtMethodImpl","sourcecode":"private static java.lang.reflect.Method getAccessibleMethodFromInterfaceNest(java.lang.Class<?> cls, final java.lang.String methodName, final java.lang.Class<?>... parameterTypes) {\n    if (methodName == null) {\n        {\n            for ( ; cls != null ; cls = cls.getSuperclass()) {\n                final java.lang.Class<?>[] java.lang.Class<?>[] = cls.getInterfaces();\n                for (int int = 0 ; i < (interfaces.int) ; i++) {\n                    if (!(java.lang.reflect.Modifier.isPublic(interfaces[i].getModifiers()))) {\n                        continue;\n                    } \n                    try {\n                        return interfaces[i].getDeclaredMethod(methodName, parameterTypes);\n                    } catch (final java.lang.NoSuchMethodException e) {\n                    }\n                    java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromInterfaceNest(interfaces[i], methodName, parameterTypes);\n                    if (method != null) {\n                        return method;\n                    } \n                }\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"methodName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3939","type":"CtBinaryOperatorImpl","sourcecode":"array2 == null"},"failures":[43],"tindex":"f82b59d6-2e84-11e6-b4da-7b2f9b1f0239","method":{"position":"org.apache.commons.lang3.ArrayUtils:3676","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final float[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (array != null) && ((array.int) != 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array2":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:573","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"f82b59d7-2e84-11e6-b4da-cb4d3885d96a","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:669","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n    if (buffer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(java.lang.String);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"buffer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:860","type":"CtBinaryOperatorImpl","sourcecode":"delim == null"},"failures":[44],"tindex":"f82b80e8-2e84-11e6-b4da-55b589b48fab","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:859","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrTokenizer setDelimiterMatcher(final org.apache.commons.lang3.text.StrMatcher delim) {\n    if (delim == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (delim == null) {\n                org.apache.commons.lang3.text.StrTokenizer.this.org.apache.commons.lang3.text.StrMatcher = org.apache.commons.lang3.text.StrMatcher.noneMatcher();\n            } else {\n                org.apache.commons.lang3.text.StrTokenizer.this.org.apache.commons.lang3.text.StrMatcher = delim;\n            }\n            return org.apache.commons.lang3.text.StrTokenizer.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delim":"delim"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1464","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[45],"tindex":"f82b80e9-2e84-11e6-b4da-f148b2839294","method":{"position":"org.apache.commons.lang3.ArrayUtils:1463","type":"CtMethodImpl","sourcecode":"public static void reverse(final int[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return ;\n            } \n            org.apache.commons.lang3.ArrayUtils.reverse(array, 0, array.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1523","type":"CtBinaryOperatorImpl","sourcecode":"chars == null"},"failures":[],"tindex":"f82ba7fa-2e84-11e6-b4da-11f8faab1253","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:179","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.StrTokenizer getCSVInstance(final char[] input) {\n    if (input == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.lang3.text.StrTokenizer org.apache.commons.lang3.text.StrTokenizer = org.apache.commons.lang3.text.StrTokenizer.getCSVClone();\n            tok.reset(input);\n            return tok;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chars":"input"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:1009","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[46],"tindex":"f82ba7fb-2e84-11e6-b4da-85ab38207c7e","method":{"position":"org.apache.commons.lang3.BooleanUtils:1073","type":"CtMethodImpl","sourcecode":"public static java.lang.Boolean xor(final java.lang.Boolean... array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n            } \n            if ((array.int) == 0) {\n                throw new java.lang.IllegalArgumentException(\"Array is empty\");\n            } \n            try {\n                final boolean[] boolean[] = org.apache.commons.lang3.ArrayUtils.toPrimitive(array);\n                return org.apache.commons.lang3.BooleanUtils.xor(primitive) ? java.lang.Boolean.java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n            } catch (final java.lang.NullPointerException ex) {\n                throw new java.lang.IllegalArgumentException(\"The array must not contain any null elements\");\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:484","type":"CtBinaryOperatorImpl","sourcecode":"lhs instanceof float[]"},"failures":[],"tindex":"f82ba7fc-2e84-11e6-b4da-4755692226d4","method":{"position":"org.apache.commons.lang3.math.Fraction:844","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof float[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.lang3.math.Fraction.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.lang3.math.Fraction) == false) {\n                return false;\n            } \n            final org.apache.commons.lang3.math.Fraction org.apache.commons.lang3.math.Fraction = ((org.apache.commons.lang3.math.Fraction)(obj));\n            return ((getNumerator()) == (other.getNumerator())) && ((getDenominator()) == (other.getDenominator()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:973","type":"CtBinaryOperatorImpl","sourcecode":"0 == nHex"},"failures":[],"tindex":"f82bcf0d-2e84-11e6-b4da-5f030d56e287","method":{"position":"org.apache.commons.lang3.math.Fraction:657","type":"CtMethodImpl","sourcecode":"private static int mulPosAndCheck(final int x, final int y) {\n    if (y > x) {\n        {\n            if (0 == y) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final long long = ((long)(x)) * ((long)(y));\n                    if (m > (java.lang.Integer.java.lang.Integer.int)) {\n                        throw new java.lang.ArithmeticException(\"overflow: mulPos\");\n                    } \n                    return ((int)(m));\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nHex":"y"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1513","type":"CtBinaryOperatorImpl","sourcecode":"(((nHexs - 1) * 4) + srcPos) >= 8"},"failures":[47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67],"tindex":"f82bcf0e-2e84-11e6-b4da-f9aa94c623da","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2162","type":"CtMethodImpl","sourcecode":"public java.lang.String substring(final int startIndex, int endIndex) {\n    if ((((endIndex - 1) * 4) + endIndex) >= 8) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            endIndex = validateRange(startIndex, endIndex);\n            return new java.lang.String(char[] , startIndex , (endIndex - startIndex));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcPos":"endIndex","nHexs":"endIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3813","type":"CtBinaryOperatorImpl","sourcecode":"noOfItems <= 0"},"failures":[68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101],"tindex":"f82bcf0f-2e84-11e6-b4da-4f7002fdc4f2","method":{"position":"org.apache.commons.lang3.reflect.MemberUtils:75","type":"CtMethodImpl","sourcecode":"static boolean isPackageAccess(final int modifiers) {\n    if (modifiers <= 0) {\n        {\n            return (modifiers & (org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.int)) == 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"noOfItems":"modifiers"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"((((ch0 == 't') || (ch0 == 'T')) && ((ch1 == 'r') || (ch1 == 'R'))) && ((ch2 == 'u') || (ch2 == 'U'))) && ((ch3 == 'e') || (ch3 == 'E'))"},"failures":[],"tindex":"f82bf620-2e84-11e6-b4da-83ecc4acd5eb","method":{"position":"org.apache.commons.lang3.CharUtils:352","type":"CtMethodImpl","sourcecode":"public static java.lang.String unicodeEscaped(final char ch) {\n    if (((((ch == 't') || (ch0 == 'T')) && ((ch == 'r') || (ch1 == 'R'))) && ((ch == 'u') || (ch2 == 'U'))) && ((ch == 'e') || (ch3 == 'E'))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (ch < 16) {\n                return \"\\\\u000\" + (java.lang.Integer.toHexString(ch));\n            } else if (ch < 256) {\n                return \"\\\\u00\" + (java.lang.Integer.toHexString(ch));\n            } else if (ch < 4096) {\n                return \"\\\\u0\" + (java.lang.Integer.toHexString(ch));\n            } \n            return \"\\\\u\" + (java.lang.Integer.toHexString(ch));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch0":"ch","ch2":"ch","ch1":"ch","ch3":"ch"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:1060","type":"CtBinaryOperatorImpl","sourcecode":"(chars) == null"},"failures":[43],"tindex":"f82bf621-2e84-11e6-b4da-4b530fdf64d1","method":{"position":"org.apache.commons.lang3.ArrayUtils:3643","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final char[] array) {\n    if (array == null) {\n        {\n            return (array != null) && ((array.int) != 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chars":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharEncoding:95","type":"CtBinaryOperatorImpl","sourcecode":"name == null"},"failures":[],"tindex":"f82bf622-2e84-11e6-b4da-b1b6a40352ec","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:951","type":"CtMethodImpl","sourcecode":"protected void appendSummary(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final java.lang.Object[] array) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendSummarySize(buffer, fieldName, array.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.text.ParseException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1818","type":"CtBinaryOperatorImpl","sourcecode":"contentStart == null"},"failures":[],"tindex":"f82c1d33-2e84-11e6-b4da-8d0ab75166a0","method":{"position":"org.apache.commons.lang3.time.DateUtils:310","type":"CtMethodImpl","sourcecode":"public static java.util.Date parseDateStrictly(final java.lang.String str, final java.lang.String... parsePatterns) throws java.text.ParseException {\n    if (str == null) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.parseDateStrictly(str, null, parsePatterns);\n        }\n    } else {\n        throw new java.text.ParseException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"contentStart":"str"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomUtils:168","type":"CtBinaryOperatorImpl","sourcecode":"startInclusive == endInclusive"},"failures":[],"tindex":"f82c1d34-2e84-11e6-b4da-d9a062661bc9","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:387","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final float value) {\n    if (value == value) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, value);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startInclusive":"value","endInclusive":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:975","type":"CtBinaryOperatorImpl","sourcecode":"superToString != null"},"failures":[102,102],"tindex":"f82c1d35-2e84-11e6-b4da-bf68e04d028a","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:759","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final char value) {\n    if (fieldName != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendFieldStart(buffer, fieldName);\n            appendDetail(buffer, fieldName, value);\n            appendFieldEnd(buffer, fieldName);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"superToString":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1072","type":"CtBinaryOperatorImpl","sourcecode":"suffix == null"},"failures":[103,104,105,106,107,108],"tindex":"f82c1d36-2e84-11e6-b4da-3dd9bef017b2","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:591","type":"CtMethodImpl","sourcecode":"public static final java.lang.String escapeHtml4(final java.lang.String input) {\n    if (input == null) {\n        {\n            return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"suffix":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1226","type":"CtBinaryOperatorImpl","sourcecode":"c > a"},"failures":[],"tindex":"f82c4447-2e84-11e6-b4da-594bbb245440","method":{"position":"org.apache.commons.lang3.math.Fraction:657","type":"CtMethodImpl","sourcecode":"private static int mulPosAndCheck(final int x, final int y) {\n    if (y > x) {\n        {\n            if (0 == y) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final long long = ((long)(x)) * ((long)(y));\n                    if (m > (java.lang.Integer.java.lang.Integer.int)) {\n                        throw new java.lang.ArithmeticException(\"overflow: mulPos\");\n                    } \n                    return ((int)(m));\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"x","c":"y"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6505","type":"CtBinaryOperatorImpl","sourcecode":"str2 == null"},"failures":[109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,35,126,127,36,128,129],"tindex":"f82c4448-2e84-11e6-b4da-4dda86e0c369","method":{"position":"org.apache.commons.lang3.CharSet:173","type":"CtMethodImpl","sourcecode":"protected void add(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return ;\n            } \n            final int int = str.length();\n            int int = 0;\n            while (pos < len) {\n                final int int = len - pos;\n                if (((remainder >= 4) && ((str.charAt(pos)) == '^')) && ((str.charAt((pos + 2))) == '-')) {\n                    java.util.Set<org.apache.commons.lang3.CharRange>.add(org.apache.commons.lang3.CharRange.isNotIn(str.charAt((pos + 1)), str.charAt((pos + 3))));\n                    pos += 4;\n                } else if ((remainder >= 3) && ((str.charAt((pos + 1))) == '-')) {\n                    java.util.Set<org.apache.commons.lang3.CharRange>.add(org.apache.commons.lang3.CharRange.isIn(str.charAt(pos), str.charAt((pos + 2))));\n                    pos += 3;\n                } else if ((remainder >= 2) && ((str.charAt(pos)) == '^')) {\n                    java.util.Set<org.apache.commons.lang3.CharRange>.add(org.apache.commons.lang3.CharRange.isNot(str.charAt((pos + 1))));\n                    pos += 2;\n                } else {\n                    java.util.Set<org.apache.commons.lang3.CharRange>.add(org.apache.commons.lang3.CharRange.is(str.charAt(pos)));\n                    pos += 1;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str2":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:514","type":"CtBinaryOperatorImpl","sourcecode":"strLen > 0"},"failures":[130,131,132,50,133,134,135,136,137,138,139,51,140,141,142,143,144,52,53,54,55,56,145,146,57,58,59,60,61,62,63,64,147,148,149,150,151,152,153,65,66,154,155,156,157,67,158,159,160,161],"tindex":"f82c6b59-2e84-11e6-b4da-41bd5212264b","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:635","type":"CtMethodImpl","sourcecode":"protected java.util.List<java.lang.String> tokenize(final char[] srcChars, final int offset, final int count) {\n    if (count > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((srcChars == null) || (count == 0)) {\n                return java.util.Collections.emptyList();\n            } \n            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder();\n            final java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n            int int = offset;\n            while ((pos >= 0) && (pos < count)) {\n                pos = readNextToken(srcChars, pos, count, buf, tokenList);\n                if (pos >= count) {\n                    addToken(tokenList, \"\");\n                } \n            }\n            return tokenList;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"strLen":"count"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:258","type":"CtInvocationImpl","sourcecode":"java.lang.Float.isNaN(b)"},"failures":[],"tindex":"f82c6b5a-2e84-11e6-b4da-379d0dace451","method":{"position":"org.apache.commons.lang3.ArrayUtils:2747","type":"CtMethodImpl","sourcecode":"public static int indexOf(final float[] array, final float valueToFind) {\n    if (java.lang.Float.isNaN(valueToFind)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"valueToFind"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:717","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[162,163],"tindex":"f82c6b5b-2e84-11e6-b4da-9be819ab0523","method":{"position":"org.apache.commons.lang3.StringUtils:2480","type":"CtMethodImpl","sourcecode":"public static java.lang.String substringBetween(final java.lang.String str, final java.lang.String open, final java.lang.String close) {\n    if (open == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((str == null) || (open == null)) || (close == null)) {\n                return null;\n            } \n            final int int = str.indexOf(open);\n            if (start != (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) {\n                final int int = str.indexOf(close, (start + (open.length())));\n                if (end != (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) {\n                    return str.substring((start + (open.length())), end);\n                } \n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"open"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.JavaVersion:140","type":"CtInvocationImpl","sourcecode":"\"1.4\".equals(nom)"},"failures":[],"tindex":"f82c926c-2e84-11e6-b4da-57333cbf5eeb","method":{"position":"org.apache.commons.lang3.time.DateFormatUtils:224","type":"CtMethodImpl","sourcecode":"public static java.lang.String format(final java.util.Date date, final java.lang.String pattern, final java.util.TimeZone timeZone) {\n    if (\"1.4\".equals(pattern)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateFormatUtils.format(date, pattern, timeZone, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nom":"pattern"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:672","type":"CtBinaryOperatorImpl","sourcecode":"th == null"},"failures":[164,165],"tindex":"f82c926d-2e84-11e6-b4da-e3da81f7334a","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:179","type":"CtMethodImpl","sourcecode":"public static java.lang.Throwable getRootCause(final java.lang.Throwable throwable) {\n    if (throwable == null) {\n        {\n            final java.util.List<java.lang.Throwable> java.util.List<java.lang.Throwable> = org.apache.commons.lang3.exception.ExceptionUtils.getThrowableList(throwable);\n            return (list.size()) < 2 ? null : ((java.lang.Throwable)(list.get(((list.size()) - 1))));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"th":"throwable"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:518","type":"CtBinaryOperatorImpl","sourcecode":"(!(java.lang.Character.isDigit(lastChar))) && (lastChar != '.')"},"failures":[],"tindex":"f82c926e-2e84-11e6-b4da-076d847b4eac","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:944","type":"CtMethodImpl","sourcecode":"public void setEscapeChar(final char escapeCharacter) {\n    if ((!(java.lang.Character.isDigit(escapeCharacter))) && (lastChar != '.')) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.text.StrSubstitutor.this.char = escapeCharacter;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lastChar":"escapeCharacter"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2485","type":"CtBinaryOperatorImpl","sourcecode":"start != (org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND)"},"failures":[],"tindex":"f82cb97f-2e84-11e6-b4da-c7899b4b9ac9","method":{"position":"org.apache.commons.lang3.ArrayUtils:4937","type":"CtMethodImpl","sourcecode":"public static float[] remove(final float[] array, final int index) {\n    if (index != index) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((float[])(org.apache.commons.lang3.ArrayUtils.remove(((java.lang.Object)(array)), index)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND":"index","start":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.JavaVersion:142","type":"CtInvocationImpl","sourcecode":"\"1.5\".equals(nom)"},"failures":[],"tindex":"f82cb980-2e84-11e6-b4da-8b50fde2215e","method":{"position":"org.apache.commons.lang3.StringUtils:761","type":"CtMethodImpl","sourcecode":"public static java.lang.String stripAccents(final java.lang.String input) {\n    if (\"1.5\".equals(input)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (input == null) {\n                return null;\n            } \n            final java.util.regex.Pattern java.util.regex.Pattern = java.util.regex.Pattern.compile(\"\\\\p{InCombiningDiacriticalMarks}+\");\n            final java.lang.String java.lang.String = java.text.Normalizer.normalize(input, java.text.Normalizer.Form.java.text.Normalizer.Form.java.text.Normalizer.Form);\n            return pattern.matcher(decomposed).replaceAll(\"\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nom":"input"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:556","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.TypeVariable<?>"},"failures":[],"tindex":"f82cb981-2e84-11e6-b4da-9b7665e31479","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:675","type":"CtMethodImpl","sourcecode":"private static boolean isAssignable(final java.lang.reflect.Type type, final java.lang.reflect.TypeVariable<?> toTypeVariable, final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> typeVarAssigns) {\n    if (type instanceof java.lang.reflect.TypeVariable<?>) {\n        {\n            if (type == null) {\n                return true;\n            } \n            if (toTypeVariable == null) {\n                return false;\n            } \n            if (toTypeVariable.equals(type)) {\n                return true;\n            } \n            if (type instanceof java.lang.reflect.TypeVariable<?>) {\n                final java.lang.reflect.Type[] java.lang.reflect.Type[] = org.apache.commons.lang3.reflect.TypeUtils.getImplicitBounds(((java.lang.reflect.TypeVariable<?>)(type)));\n                for (final java.lang.reflect.Type java.lang.reflect.Type : bounds) {\n                    if (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(bound, toTypeVariable, typeVarAssigns)) {\n                        return true;\n                    } \n                }\n            } \n            if ((((type instanceof java.lang.Class<?>) || (type instanceof java.lang.reflect.ParameterizedType)) || (type instanceof java.lang.reflect.GenericArrayType)) || (type instanceof java.lang.reflect.WildcardType)) {\n                return false;\n            } \n            throw new java.lang.IllegalStateException((\"found an unhandled type: \" + type));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:422","type":"CtBinaryOperatorImpl","sourcecode":"depth == 1"},"failures":[166,167,168,11,169,170,171,33,172,173,174,175,176,177,12,13,14,15,16,178,179,17,180,18,19,20,181,182,183,22,184,185,186,187],"tindex":"f82ce092-2e84-11e6-b4da-9f0e2552d9bc","method":{"position":"org.apache.commons.lang3.time.DateUtils:957","type":"CtMethodImpl","sourcecode":"private static void modify(final java.util.Calendar val, final int field, final int modType) {\n    if (field == 1) {\n        {\n            if ((val.get(java.util.Calendar.java.util.Calendar.int)) > 280000000) {\n                throw new java.lang.ArithmeticException(\"Calendar value too large for accurate calculations\");\n            } \n            if (field == (java.util.Calendar.java.util.Calendar.int)) {\n                return ;\n            } \n            final java.util.Date java.util.Date = val.getTime();\n            long long = date.getTime();\n            boolean boolean = false;\n            final int int = val.get(java.util.Calendar.java.util.Calendar.int);\n            if (((org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.int) == modType) || (millisecs < 500)) {\n                time = time - millisecs;\n            } \n            if (field == (java.util.Calendar.java.util.Calendar.int)) {\n                done = true;\n            } \n            final int int = val.get(java.util.Calendar.java.util.Calendar.int);\n            if ((!done) && (((org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.int) == modType) || (seconds < 30))) {\n                time = time - (seconds * 1000L);\n            } \n            if (field == (java.util.Calendar.java.util.Calendar.int)) {\n                done = true;\n            } \n            final int int = val.get(java.util.Calendar.java.util.Calendar.int);\n            if ((!done) && (((org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.int) == modType) || (minutes < 30))) {\n                time = time - (minutes * 60000L);\n            } \n            if ((date.getTime()) != time) {\n                date.setTime(time);\n                val.setTime(date);\n            } \n            boolean boolean = false;\n            for (final int[] int[] : org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.int[][]) {\n                for (final int int : aField) {\n                    if (element == field) {\n                        if ((modType == (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.int)) || ((modType == (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.int)) && roundUp)) {\n                            if (field == (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.int)) {\n                                if ((val.get(java.util.Calendar.java.util.Calendar.int)) == 1) {\n                                    val.add(java.util.Calendar.java.util.Calendar.int, 15);\n                                } else {\n                                    val.add(java.util.Calendar.java.util.Calendar.int, (-15));\n                                    val.add(java.util.Calendar.java.util.Calendar.int, 1);\n                                }\n                            } else if (field == (java.util.Calendar.java.util.Calendar.int)) {\n                                if ((val.get(java.util.Calendar.java.util.Calendar.int)) == 0) {\n                                    val.add(java.util.Calendar.java.util.Calendar.int, 12);\n                                } else {\n                                    val.add(java.util.Calendar.java.util.Calendar.int, (-12));\n                                    val.add(java.util.Calendar.java.util.Calendar.int, 1);\n                                }\n                            } else {\n                                val.add(aField[0], 1);\n                            }\n                        } \n                        return ;\n                    } \n                }\n                int int = 0;\n                boolean boolean = false;\n                switch (field) {\n                    case org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.int :\n                        if ((aField[0]) == (java.util.Calendar.java.util.Calendar.int)) {\n                            offset = (val.get(java.util.Calendar.java.util.Calendar.int)) - 1;\n                            if (offset >= 15) {\n                                offset -= 15;\n                            } \n                            roundUp = offset > 7;\n                            offsetSet = true;\n                        } \n                        break;\n                    case java.util.Calendar.java.util.Calendar.int :\n                        if ((aField[0]) == (java.util.Calendar.java.util.Calendar.int)) {\n                            offset = val.get(java.util.Calendar.java.util.Calendar.int);\n                            if (offset >= 12) {\n                                offset -= 12;\n                            } \n                            roundUp = offset >= 6;\n                            offsetSet = true;\n                        } \n                        break;\n                    default :\n                        break;\n                }\n                if (!offsetSet) {\n                    final int int = val.getActualMinimum(aField[0]);\n                    final int int = val.getActualMaximum(aField[0]);\n                    offset = (val.get(aField[0])) - min;\n                    roundUp = offset > ((max - min) / 2);\n                } \n                if (offset != 0) {\n                    val.set(aField[0], ((val.get(aField[0])) - offset));\n                } \n            }\n            throw new java.lang.IllegalArgumentException(((\"The field \" + field) + \" is not supported\"));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"depth":"field"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1631","type":"CtBinaryOperatorImpl","sourcecode":"j == searchLast"},"failures":[],"tindex":"f82d07a3-2e84-11e6-b4da-3d247a2758dd","method":{"position":"org.apache.commons.lang3.ArrayUtils:3115","type":"CtMethodImpl","sourcecode":"public static int[] toPrimitive(final java.lang.Integer[] array, final int valueForNull) {\n    if (valueForNull == valueForNull) {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int[];\n            } \n            final int[] int[] = new int[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                final java.lang.Integer java.lang.Integer = array[i];\n                result[i] = b == null ? valueForNull : b.intValue();\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"j":"valueForNull","searchLast":"valueForNull"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:135","type":"CtBinaryOperatorImpl","sourcecode":"name == null"},"failures":[188,164,189],"tindex":"f82d2eb4-2e84-11e6-b4da-b53bd1f709cb","method":{"position":"org.apache.commons.lang3.StringUtils:6198","type":"CtMethodImpl","sourcecode":"public static java.lang.String defaultString(final java.lang.String str) {\n    if (str == null) {\n        {\n            return str == null ? org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String : str;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:455","type":"CtInvocationImpl","sourcecode":"fromTypeVarAssigns.isEmpty()"},"failures":[190],"tindex":"f82d2eb5-2e84-11e6-b4da-9542dbee5be5","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1214","type":"CtMethodImpl","sourcecode":"public static boolean typesSatisfyVariables(final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> typeVarAssigns) {\n    if (typeVarAssigns.isEmpty()) {\n        {\n            org.apache.commons.lang3.Validate.notNull(typeVarAssigns, \"typeVarAssigns is null\");\n            for (final java.util.Map.Entry<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map.Entry<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> : typeVarAssigns.entrySet()) {\n                final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = entry.getKey();\n                final java.lang.reflect.Type java.lang.reflect.Type = entry.getValue();\n                for (final java.lang.reflect.Type java.lang.reflect.Type : org.apache.commons.lang3.reflect.TypeUtils.getImplicitBounds(typeVar)) {\n                    if (!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(type, org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(bound, typeVarAssigns), typeVarAssigns))) {\n                        return false;\n                    } \n                }\n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fromTypeVarAssigns":"typeVarAssigns"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:306","type":"CtUnaryOperatorImpl","sourcecode":"!canPass"},"failures":[],"tindex":"f82d2eb6-2e84-11e6-b4da-8792a5435f8e","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1922","type":"CtMethodImpl","sourcecode":"protected void setFieldSeparatorAtStart(final boolean fieldSeparatorAtStart) {\n    if (!fieldSeparatorAtStart) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.this.boolean = fieldSeparatorAtStart;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"canPass":"fieldSeparatorAtStart"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1083","type":"CtBinaryOperatorImpl","sourcecode":"((nBools - 1) + dstPos) >= 32"},"failures":[],"tindex":"f82d55c7-2e84-11e6-b4da-390a6ed7de47","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2821","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.List<java.lang.String> tokenize(final char[] chars, final int offset, final int count) {\n    if (((offset - 1) + offset) >= 32) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (chars == null) {\n                return super.tokenize(org.apache.commons.lang3.text.StrBuilder.this.char[], 0, org.apache.commons.lang3.text.StrBuilder.this.size());\n            } \n            return super.tokenize(chars, offset, count);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nBools":"offset","dstPos":"offset"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:380","type":"CtBinaryOperatorImpl","sourcecode":"ch == null"},"failures":[191],"tindex":"f82d55c8-2e84-11e6-b4da-d59f028b11a7","method":{"position":"org.apache.commons.lang3.CharUtils:262","type":"CtMethodImpl","sourcecode":"public static int toIntValue(final java.lang.Character ch) {\n    if (ch == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (ch == null) {\n                throw new java.lang.IllegalArgumentException(\"The character must not be null\");\n            } \n            return org.apache.commons.lang3.CharUtils.toIntValue(ch.charValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:764","type":"CtBinaryOperatorImpl","sourcecode":"(((nShorts - 1) * 16) + dstPos) >= 32"},"failures":[],"tindex":"f82d55c9-2e84-11e6-b4da-b59472806bd3","method":{"position":"org.apache.commons.lang3.ArrayUtils:4872","type":"CtMethodImpl","sourcecode":"public static double[] remove(final double[] array, final int index) {\n    if ((((index - 1) * 16) + index) >= 32) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((double[])(org.apache.commons.lang3.ArrayUtils.remove(((java.lang.Object)(array)), index)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dstPos":"index","nShorts":"index"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:664","type":"CtBinaryOperatorImpl","sourcecode":"nullString == null"},"failures":[26],"tindex":"f82d55ca-2e84-11e6-b4da-97ab9c11c516","method":{"position":"org.apache.commons.lang3.StringUtils:5178","type":"CtMethodImpl","sourcecode":"public static java.lang.String repeat(final java.lang.String str, final java.lang.String separator, final int repeat) {\n    if (separator == null) {\n        {\n            if ((str == null) || (separator == null)) {\n                return org.apache.commons.lang3.StringUtils.repeat(str, repeat);\n            } \n            final java.lang.String java.lang.String = org.apache.commons.lang3.StringUtils.repeat((str + separator), repeat);\n            return org.apache.commons.lang3.StringUtils.removeEnd(result, separator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nullString":"separator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:414","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[192,193],"tindex":"f82d7cdb-2e84-11e6-b4da-dd1ceb568b44","method":{"position":"org.apache.commons.lang3.StringUtils:4170","type":"CtMethodImpl","sourcecode":"public static java.lang.String deleteWhitespace(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n                return str;\n            } \n            final int int = str.length();\n            final char[] char[] = new char[sz];\n            int int = 0;\n            for (int int = 0 ; i < sz ; i++) {\n                if (!(java.lang.Character.isWhitespace(str.charAt(i)))) {\n                    chs[(count++)] = str.charAt(i);\n                } \n            }\n            if (count == sz) {\n                return str;\n            } \n            return new java.lang.String(chs , 0 , count);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:1127","type":"CtBinaryOperatorImpl","sourcecode":"(value <= start) || (value >= end)"},"failures":[],"tindex":"f82d7cdc-2e84-11e6-b4da-a182e8c9d1c0","method":{"position":"org.apache.commons.lang3.Validate:987","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"boxing\")\npublic static void inclusiveBetween(double start, double end, double value) {\n    if ((value <= value) || (value >= start)) {\n        {\n            if ((value < start) || (value > end)) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.java.lang.String, value, start, end));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"value","end":"start","value":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:580","type":"CtBinaryOperatorImpl","sourcecode":"((ch0 == 'n') || (ch0 == 'N')) && ((ch1 == 'o') || (ch1 == 'O'))"},"failures":[],"tindex":"f82d7cdd-2e84-11e6-b4da-0d77b5035f3a","method":{"position":"org.apache.commons.lang3.CharRange:126","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.CharRange isNotIn(final char start, final char end) {\n    if (((end == 'n') || (ch0 == 'N')) && ((end == 'o') || (ch1 == 'O'))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.lang3.CharRange(start , end , true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch0":"end","ch1":"end"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4218","type":"CtInvocationImpl","sourcecode":"str.startsWith(remove)"},"failures":[194,194],"tindex":"f82da3ee-2e84-11e6-b4da-afbe0f25edb1","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1394","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final boolean[] array, final java.lang.Boolean fullDetail) {\n    if (fieldName.startsWith(fieldName)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendFieldStart(buffer, fieldName);\n            if (array == null) {\n                appendNullText(buffer, fieldName);\n            } else if (isFullDetail(fullDetail)) {\n                appendDetail(buffer, fieldName, array);\n            } else {\n                appendSummary(buffer, fieldName, array);\n            }\n            appendFieldEnd(buffer, fieldName);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName","remove":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:452","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[],"tindex":"f82dcaff-2e84-11e6-b4da-ffe74c161f56","method":{"position":"org.apache.commons.lang3.tuple.Triple:157","type":"CtMethodImpl","sourcecode":"public java.lang.String toString(final java.lang.String format) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(format)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.String.format(format, getLeft(), getMiddle(), getRight());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"format"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:105","type":"CtBinaryOperatorImpl","sourcecode":"(codepoint < (below)) || (codepoint > (above))"},"failures":[],"tindex":"f82dcb00-2e84-11e6-b4da-59290f0b2c98","method":{"position":"org.apache.commons.lang3.Conversion:1356","type":"CtMethodImpl","sourcecode":"public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n    if ((dstPos < dstPos) || (codepoint > srcPos)) {\n        {\n            if (0 == nBytes) {\n                return dst;\n            } \n            if ((((nBytes - 1) * 8) + srcPos) >= 16) {\n                throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n            } \n            int int = 0;\n            for (int int = 0 ; i < nBytes ; i++) {\n                shift = (i * 8) + srcPos;\n                dst[(dstPos + i)] = ((byte)(255 & (src >> shift)));\n            }\n            return dst;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"codepoint":"dstPos","below":"dstPos","above":"srcPos"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3617","type":"CtBinaryOperatorImpl","sourcecode":"noOfItems <= 0"},"failures":[195],"tindex":"f82dcb01-2e84-11e6-b4da-f997bc2565b9","method":{"position":"org.apache.commons.lang3.StringUtils:5549","type":"CtMethodImpl","sourcecode":"public static java.lang.String center(java.lang.String str, final int size, java.lang.String padStr) {\n    if (size <= 0) {\n        {\n            if ((str == null) || (size <= 0)) {\n                return str;\n            } \n            if (org.apache.commons.lang3.StringUtils.isEmpty(padStr)) {\n                padStr = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final int int = str.length();\n            final int int = size - strLen;\n            if (pads <= 0) {\n                return str;\n            } \n            str = org.apache.commons.lang3.StringUtils.leftPad(str, (strLen + (pads / 2)), padStr);\n            str = org.apache.commons.lang3.StringUtils.rightPad(str, size, padStr);\n            return str;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"noOfItems":"size"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDateParser:463","type":"CtBinaryOperatorImpl","sourcecode":"(formatField.length()) > 2"},"failures":[196,197],"tindex":"f82df212-2e84-11e6-b4da-97199b9b443f","method":{"position":"org.apache.commons.lang3.math.NumberUtils:671","type":"CtMethodImpl","sourcecode":"public static java.lang.Double createDouble(final java.lang.String str) {\n    if ((str.length()) > 2) {\n        {\n            if (str == null) {\n                return null;\n            } \n            return java.lang.Double.valueOf(str);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"formatField":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2335","type":"CtBinaryOperatorImpl","sourcecode":"separator == null"},"failures":[198,198,199,199,200,201,201,202,203,204,205,206,207,208,209,210,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233],"tindex":"f82df213-2e84-11e6-b4da-11310143bee0","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:717","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final short value) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"separator":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomStringUtils:329","type":"CtBinaryOperatorImpl","sourcecode":"chars == null"},"failures":[234],"tindex":"f82df214-2e84-11e6-b4da-114302c8abda","method":{"position":"org.apache.commons.lang3.ArrayUtils:3791","type":"CtMethodImpl","sourcecode":"public static char[] addAll(final char[] array1, final char... array2) {\n    if (array2 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array1 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array2);\n            } else if (array2 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array1);\n            } \n            final char[] char[] = new char[(array1.int) + (array2.int)];\n            java.lang.System.arraycopy(array1, 0, joinedArray, 0, array1.int);\n            java.lang.System.arraycopy(array2, 0, joinedArray, array1.int, array2.int);\n            return joinedArray;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chars":"array2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:796","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[235],"tindex":"f82df215-2e84-11e6-b4da-9df8fa0b0098","method":{"position":"org.apache.commons.lang3.ObjectUtils:205","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static int hashCode(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return obj == null ? 0 : obj.hashCode();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1165","type":"CtBinaryOperatorImpl","sourcecode":"newSize <= 0"},"failures":[],"tindex":"f82e1926-2e84-11e6-b4da-8db44ca61897","method":{"position":"org.apache.commons.lang3.StringUtils:2723","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] splitByWholeSeparator(final java.lang.String str, final java.lang.String separator, final int max) {\n    if (max <= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(str, separator, max, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"newSize":"max"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3617","type":"CtBinaryOperatorImpl","sourcecode":"noOfItems <= 0"},"failures":[236],"tindex":"f82e1927-2e84-11e6-b4da-d9d1a1329934","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1363","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendPadding(final int length, final char padChar) {\n    if (length <= 0) {\n        {\n            if (length >= 0) {\n                ensureCapacity(((int) + length));\n                for (int int = 0 ; i < length ; i++) {\n                    char[][((int)++)] = padChar;\n                }\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"noOfItems":"length"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:70","type":"CtBinaryOperatorImpl","sourcecode":"pattern == null"},"failures":[237,238,239],"tindex":"f82e1928-2e84-11e6-b4da-7de4ce3b352c","method":{"position":"org.apache.commons.lang3.CharSequenceUtils:163","type":"CtMethodImpl","sourcecode":"static char[] toCharArray(final java.lang.CharSequence cs) {\n    if (cs == null) {\n        {\n            if (cs instanceof java.lang.String) {\n                return ((java.lang.String)(cs)).toCharArray();\n            } else {\n                final int int = cs.length();\n                final char[] char[] = new char[cs.length()];\n                for (int int = 0 ; i < sz ; i++) {\n                    array[i] = cs.charAt(i);\n                }\n                return array;\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pattern":"cs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1102","type":"CtBinaryOperatorImpl","sourcecode":"c < a"},"failures":[],"tindex":"f82e4039-2e84-11e6-b4da-45da62de4964","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2894","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic long skip(long n) {\n    if (n < n) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((int) + n) > (org.apache.commons.lang3.text.StrBuilder.this.size())) {\n                n = (org.apache.commons.lang3.text.StrBuilder.this.size()) - (int);\n            } \n            if (n < 0) {\n                return 0;\n            } \n            int += n;\n            return n;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"n","c":"n"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2870","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.ArrayUtils.isEmpty(array)"},"failures":[240],"tindex":"f82e403a-2e84-11e6-b4da-4d8a0bbd870a","method":{"position":"org.apache.commons.lang3.ArrayUtils:5974","type":"CtMethodImpl","sourcecode":"public static boolean[] removeElements(final boolean[] array, final boolean... values) {\n    if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n        {\n            if ((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            final java.util.HashMap<java.lang.Boolean, org.apache.commons.lang3.mutable.MutableInt> java.util.HashMap<java.lang.Boolean, org.apache.commons.lang3.mutable.MutableInt> = new java.util.HashMap<java.lang.Boolean, org.apache.commons.lang3.mutable.MutableInt>(2);\n            for (final boolean boolean : values) {\n                final java.lang.Boolean java.lang.Boolean = java.lang.Boolean.valueOf(v);\n                final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = occurrences.get(boxed);\n                if (count == null) {\n                    occurrences.put(boxed, new org.apache.commons.lang3.mutable.MutableInt(1));\n                } else {\n                    count.increment();\n                }\n            }\n            final java.util.BitSet java.util.BitSet = new java.util.BitSet();\n            for (final java.util.Map.Entry<java.lang.Boolean, org.apache.commons.lang3.mutable.MutableInt> java.util.Map.Entry<java.lang.Boolean, org.apache.commons.lang3.mutable.MutableInt> : occurrences.entrySet()) {\n                final java.lang.Boolean java.lang.Boolean = e.getKey();\n                int int = 0;\n                for (int int = 0, int int = e.getValue().intValue() ; i < ct ; i++) {\n                    found = org.apache.commons.lang3.ArrayUtils.indexOf(array, v.booleanValue(), found);\n                    if (found < 0) {\n                        break;\n                    } \n                    toRemove.set((found++));\n                }\n            }\n            return ((boolean[])(org.apache.commons.lang3.ArrayUtils.removeAll(array, toRemove)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2953","type":"CtBinaryOperatorImpl","sourcecode":"len == 0"},"failures":[241],"tindex":"f82e674b-2e84-11e6-b4da-8bc8f892403c","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:194","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.time.FastDateFormat getDateInstance(final int style, final java.util.Locale locale) {\n    if (style == 0) {\n        {\n            return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getDateInstance(style, null, locale);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"style"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:896","type":"CtBinaryOperatorImpl","sourcecode":"first < second"},"failures":[242],"tindex":"f82e674c-2e84-11e6-b4da-ad612b36fa6e","method":{"position":"org.apache.commons.lang3.ObjectUtils:896","type":"CtMethodImpl","sourcecode":"public static long CONST(final long v) {\n    if (v < v) {\n        {\n            return v;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"first":"v","second":"v"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5084","type":"CtBinaryOperatorImpl","sourcecode":"strLen < 2"},"failures":[243,244],"tindex":"f82e674d-2e84-11e6-b4da-4f5b4e838bf5","method":{"position":"org.apache.commons.lang3.ArrayUtils:5132","type":"CtMethodImpl","sourcecode":"public static short[] remove(final short[] array, final int index) {\n    if (index < 2) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((short[])(org.apache.commons.lang3.ArrayUtils.remove(((java.lang.Object)(array)), index)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"strLen":"index"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":79,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}