{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":20,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":30,"org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayOfChars":39,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionCompareEx1":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":22,"org.apache.commons.lang3.math.NumberUtilsTest.testLang381":33,"org.apache.commons.lang3.ArrayUtilsTest.testHashCode":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":19,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxFloat_emptyArray":32,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxFloat":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":17,"org.apache.commons.lang3.BooleanUtilsTest.test_toIntegerObject_boolean_Integer_Integer":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":13,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testIntArray":1,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":14,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_String_String_String":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":25,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testEnforceExceptions":31,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompare":4,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareTransients":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":18,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_String_String_String_nullValue":37,"org.apache.commons.lang3.StringUtilsTest.testToEncodedString":40,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":15,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_String_String_String_noMatch":36,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionCompare":5,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetSuffix":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":26,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":21,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareExcludeFields":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":11,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testIntArrayAsObject":0,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionCompareEx2":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":27,"org.apache.commons.lang3.ArrayUtilsTest.testSameLengthByte":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":24},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2416","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(separator)"},"failures":[],"tindex":"80e8ec88-2e87-11e6-add1-0fe4b6099e71","method":{"position":"org.apache.commons.lang3.SystemUtils:1327","type":"CtMethodImpl","sourcecode":"private static boolean getOSMatchesName(final java.lang.String osNamePrefix) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(osNamePrefix)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.SystemUtils.isOSNameMatch(org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.java.lang.String, osNamePrefix);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"separator":"osNamePrefix"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1031","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[0,1,2],"tindex":"80ea4c19-2e87-11e6-add1-a1dfd01aaa64","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:757","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final int[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                int = (int) * (int);\n            } else {\n                for (final int int : array) {\n                    append(element);\n                }\n            }\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:778","type":"CtBinaryOperatorImpl","sourcecode":"classes == null"},"failures":[3,4,5,6,7,8],"tindex":"80ea732a-2e87-11e6-add1-bbeb396f3b2b","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:268","type":"CtMethodImpl","sourcecode":"public static int reflectionCompare(final java.lang.Object lhs, final java.lang.Object rhs, final boolean compareTransients, final java.lang.Class<?> reflectUpToClass, final java.lang.String... excludeFields) {\n    if (lhs == null) {\n        {\n            if (lhs == rhs) {\n                return 0;\n            } \n            if ((lhs == null) || (rhs == null)) {\n                throw new java.lang.NullPointerException();\n            } \n            java.lang.Class<?> java.lang.Class<?> = lhs.getClass();\n            if (!(lhsClazz.isInstance(rhs))) {\n                throw new java.lang.ClassCastException();\n            } \n            final org.apache.commons.lang3.builder.CompareToBuilder org.apache.commons.lang3.builder.CompareToBuilder = new org.apache.commons.lang3.builder.CompareToBuilder();\n            org.apache.commons.lang3.builder.CompareToBuilder.reflectionAppend(lhs, rhs, lhsClazz, compareToBuilder, compareTransients, excludeFields);\n            while (((lhsClazz.getSuperclass()) != null) && (lhsClazz != reflectUpToClass)) {\n                lhsClazz = lhsClazz.getSuperclass();\n                org.apache.commons.lang3.builder.CompareToBuilder.reflectionAppend(lhs, rhs, lhsClazz, compareToBuilder, compareTransients, excludeFields);\n            }\n            return compareToBuilder.toComparison();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classes":"lhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:104","type":"CtFieldReadImpl","sourcecode":"between"},"failures":[9],"tindex":"80ea9a3b-2e87-11e6-add1-2fa18f4b42db","method":{"position":"org.apache.commons.lang3.BooleanUtils:485","type":"CtMethodImpl","sourcecode":"public static java.lang.Integer toIntegerObject(final boolean bool, final java.lang.Integer trueValue, final java.lang.Integer falseValue) {\n    if (bool) {\n        {\n            return bool ? trueValue : falseValue;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"between":"bool"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:1009","type":"CtBinaryOperatorImpl","sourcecode":"toString != null"},"failures":[10],"tindex":"80ea9a3c-2e87-11e6-add1-550e39f25dd3","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1071","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrSubstitutor setVariableSuffix(final java.lang.String suffix) {\n    if (suffix != null) {\n        {\n            if (suffix == null) {\n                throw new java.lang.IllegalArgumentException(\"Variable suffix must not be null!\");\n            } \n            return setVariableSuffixMatcher(org.apache.commons.lang3.text.StrMatcher.stringMatcher(suffix));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toString":"suffix"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.JavaVersion:132","type":"CtInvocationImpl","sourcecode":"\"0.9\".equals(nom)"},"failures":[],"tindex":"80ebf9cd-2e87-11e6-add1-93fbe1d5f8db","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:558","type":"CtMethodImpl","sourcecode":"public static final java.lang.String unescapeJson(final java.lang.String input) {\n    if (\"0.9\".equals(input)) {\n        {\n            return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nom":"input"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3225","type":"CtInvocationImpl","sourcecode":"str.isEmpty()"},"failures":[11,11,12,12,13,14,14,15,16,17,18,19,19,20,21,22,23,24,25,26,27,28,29],"tindex":"80ebf9ce-2e87-11e6-add1-6b0d57848e2c","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1236","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final char[] array) {\n    if (fieldName.isEmpty()) {\n        {\n            buffer.append(java.lang.String);\n            for (int int = 0 ; i < (array.int) ; i++) {\n                if (i > 0) {\n                    buffer.append(java.lang.String);\n                } \n                appendDetail(buffer, fieldName, array[i]);\n            }\n            buffer.append(java.lang.String);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:157","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[30,31],"tindex":"80ec20df-2e87-11e6-add1-0fd7e70c7330","method":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:155","type":"CtMethodImpl","sourcecode":"public static double max(final double[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n            } else if ((array.int) == 0) {\n                throw new java.lang.IllegalArgumentException(\"Array cannot be empty.\");\n            } \n            double double = array[0];\n            for (int int = 1 ; j < (array.int) ; j++) {\n                max = org.apache.commons.lang3.math.IEEE754rUtils.max(array[j], max);\n            }\n            return max;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:724","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[32,33,34],"tindex":"80ec20e0-2e87-11e6-add1-1fc2c1101663","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1056","type":"CtMethodImpl","sourcecode":"public static float max(final float[] array) {\n    if (array == null) {\n        {\n            org.apache.commons.lang3.math.NumberUtils.validateArray(array);\n            float float = array[0];\n            for (int int = 1 ; j < (array.int) ; j++) {\n                if (java.lang.Float.isNaN(array[j])) {\n                    return java.lang.Float.java.lang.Float.float;\n                } \n                if ((array[j]) > max) {\n                    max = array[j];\n                } \n            }\n            return max;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5356","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))"},"failures":[35],"tindex":"80ec47f1-2e87-11e6-add1-c14389d3d17f","method":{"position":"org.apache.commons.lang3.ArrayUtils:1317","type":"CtMethodImpl","sourcecode":"public static boolean isSameLength(final byte[] array1, final byte[] array2) {\n    if ((org.apache.commons.lang3.ArrayUtils.isEmpty(array2)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(array1))) {\n        {\n            if (((((array1 == null) && (array2 != null)) && ((array2.int) > 0)) || (((array2 == null) && (array1 != null)) && ((array1.int) > 0))) || (((array1 != null) && (array2 != null)) && ((array1.int) != (array2.int)))) {\n                return false;\n            } \n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array2","values":"array1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomStringUtils:234","type":"CtBinaryOperatorImpl","sourcecode":"(start == 0) && (end == 0)"},"failures":[],"tindex":"80ec47f2-2e87-11e6-add1-15a6dff60f67","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1686","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder delete(final int startIndex, int endIndex) {\n    if ((startIndex == 0) && (endIndex == 0)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            endIndex = validateRange(startIndex, endIndex);\n            final int int = endIndex - startIndex;\n            if (len > 0) {\n                deleteImpl(startIndex, endIndex, len);\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"startIndex","end":"endIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:549","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[36,37,38],"tindex":"80ec6f03-2e87-11e6-add1-e1ca8ad1b508","method":{"position":"org.apache.commons.lang3.BooleanUtils:727","type":"CtMethodImpl","sourcecode":"public static boolean toBoolean(final java.lang.String str, final java.lang.String trueString, final java.lang.String falseString) {\n    if (falseString == null) {\n        {\n            if (str == trueString) {\n                return true;\n            } else if (str == falseString) {\n                return false;\n            } else if (str != null) {\n                if (str.equals(trueString)) {\n                    return true;\n                } else if (str.equals(falseString)) {\n                    return false;\n                } \n            } \n            throw new java.lang.IllegalArgumentException(\"The String did not match either specified value\");\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"falseString"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2530","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[39],"tindex":"80ec6f04-2e87-11e6-add1-f1dfa31ce56e","method":{"position":"org.apache.commons.lang3.StringUtils:3808","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final char[] array, final char separator, final int startIndex, final int endIndex) {\n    if (startIndex < 0) {\n        {\n            if (array == null) {\n                return null;\n            } \n            final int int = endIndex - startIndex;\n            if (noOfItems <= 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder((noOfItems * 16));\n            for (int int = startIndex ; i < endIndex ; i++) {\n                if (i > startIndex) {\n                    buf.append(separator);\n                } \n                buf.append(array[i]);\n            }\n            return buf.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"startIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1506","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[40],"tindex":"80ec9615-2e87-11e6-add1-a746c8112e5a","method":{"position":"org.apache.commons.lang3.StringUtils:7635","type":"CtMethodImpl","sourcecode":"public static java.lang.String toEncodedString(byte[] bytes, java.nio.charset.Charset charset) {\n    if (bytes == null) {\n        {\n            return new java.lang.String(bytes , (charset != null ? charset : java.nio.charset.Charset.defaultCharset()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"bytes"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":14,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}