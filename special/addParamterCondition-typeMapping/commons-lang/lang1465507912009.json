{"failureDictionary":{"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":130,"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":22,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllByteArrayRemoveNone":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":196,"org.apache.commons.lang3.StringUtilsTest.testIsNoneEmpty":274,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":198,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":218,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":192,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":195,"org.apache.commons.lang3.time.DateUtilsTest.testSetYears":284,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":236,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":23,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":287,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":289,"org.apache.commons.lang3.CharUtilsTest.testToIntValue_Character":64,"org.apache.commons.lang3.time.FastDatePrinterTest.testMilleniumBug":295,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":311,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":222,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":121,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testSimpleDate":300,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCode":96,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArrayEqualAsObject":33,"org.apache.commons.lang3.ValidateTest.testIsTrue1":55,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":172,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":318,"org.apache.commons.lang3.ObjectUtilsTest.testHashCodeMulti_multiple_nullArray":1,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":207,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_StringBuffer_int_int":333,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":216,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllCharArrayRemoveNone":10,"org.apache.commons.lang3.CharUtilsTest.testToChar_Character":45,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":209,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultIsExceptionUnknown":259,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":31,"org.apache.commons.lang3.RandomUtilsTest.testNextFloatMinimalRange":89,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":113,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang708":269,"org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayOfFloats":270,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":240,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEmbeddedPatternInChoice":52,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":235,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":167,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":315,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllLongArrayRemoveNone":11,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":20,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":217,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":237,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":219,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllFloatArrayRemoveNone":13,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":279,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":327,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethodWithEvent":85,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":200,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfLong":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":184,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":221,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_int_int":63,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllObjectArrayRemoveNone":16,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEqualsHashcode":49,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfLongWithStartIndex":48,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":188,"org.apache.commons.lang3.BooleanUtilsTest.test_isFalse_Boolean":282,"org.apache.commons.lang3.StringUtilsTest.testPrependIfMissingIgnoreCase":330,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":127,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testOverriddenBuiltinFormat":50,"org.apache.commons.lang3.StringUtilsTest.testChomp":267,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testExtendedFormats":53,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":168,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeEcmaScript":248,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":178,"org.apache.commons.lang3.ClassUtilsTest.test_convertClassNamesToClasses_List":62,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":319,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang303":297,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethod":83,"org.apache.commons.lang3.builder.CompareToBuilderTest.testFloat":276,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":212,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":155,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfInt":81,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":214,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":118,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":191,"org.apache.commons.lang3.ValidateTest.testValidIndex_withMessage_collection":335,"org.apache.commons.lang3.time.FastDatePrinterTest.testSimpleDate":293,"org.apache.commons.lang3.math.NumberUtilsTest.testToByteString":283,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":213,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEscapedQuote_LANG_477":51,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":291,"org.apache.commons.lang3.StringUtilsTest.testRemove_String":65,"org.apache.commons.lang3.builder.CompareToBuilderTest.testFloatArray":275,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISOMethod":286,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementIntArray":14,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":316,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":173,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":166,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairsLang858":268,"org.apache.commons.lang3.StringUtilsTest.testReplaceOnce_StringStringString":66,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":132,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":205,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":306,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeEx":255,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":321,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstringBetween_StringString":41,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiFloatArray":277,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHierarchyHashCode":95,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendSeparator_String":3,"org.apache.commons.lang3.RandomUtilsTest.testNextFloat":90,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":170,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":224,"org.apache.commons.lang3.ArrayUtilsTest.testContainsDoubleTolerance":250,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":144,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":312,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCodeExcludeFields":97,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":27,"org.apache.commons.lang3.StringUtilsTest.testReplace_StringStringString":67,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":288,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":139,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementIntArray":6,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":231,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":163,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtml":245,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":326,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":204,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":194,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOf_char":61,"org.apache.commons.lang3.BooleanUtilsTest.test_isNotTrue_Boolean":93,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":117,"org.apache.commons.lang3.StringUtilsTest.testIsAnyEmpty":273,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":325,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":32,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":145,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":181,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":152,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":210,"org.apache.commons.lang3.time.FastDatePrinterTest.testShortDateStyleWithLocales":294,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":37,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetResultObjectUnknown":258,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":307,"org.apache.commons.lang3.text.translate.OctalUnescaperTest.testBetween":42,"org.apache.commons.lang3.ObjectUtilsTest.testIdentityToStringStringBuilder":251,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":292,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":239,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationWords":74,"org.apache.commons.lang3.StringUtilsTest.testPrependIfMissing":329,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":322,"org.apache.commons.lang3.time.FastDatePrinterTest.testFormat":299,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":162,"org.apache.commons.lang3.ArrayUtilsTest.testToObject_int":334,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":25,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":40,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":147,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":177,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":314,"org.apache.commons.lang3.RandomUtilsTest.testNextFloatNegative":87,"org.apache.commons.lang3.ArrayUtilsTest.testContainsInt":80,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_ClassArray_ClassArray_NoAutoboxing":92,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":226,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":328,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testInteger":101,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":157,"org.apache.commons.lang3.builder.DiffBuilderTest.testStylePassedToDiffResult":29,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":206,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":129,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":180,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":199,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":171,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvWriter":72,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionObjectCycle":94,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfShort":243,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":122,"org.apache.commons.lang3.time.DateUtilsTest.testIteratorEx":59,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":150,"org.apache.commons.lang3.LocaleUtilsTest.testLanguagesByCountry":56,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendSeparator_String_String":4,"org.apache.commons.lang3.time.FastDatePrinterTest.testLowYearPadding":296,"org.apache.commons.lang3.StringUtilsTest.testToString":60,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixture":99,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":309,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":320,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":208,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":220,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":125,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":158,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":26,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationPluralWords":73,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":114,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":187,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":143,"org.apache.commons.lang3.StringUtilsTest.testGetJaroWinklerDistance_NullString":261,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":141,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":182,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":165,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":140,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":229,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":21,"org.apache.commons.lang3.StringUtilsTest.testReplace_StringStringStringInt":68,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":116,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":126,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":146,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang303":304,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":190,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":148,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testArrayList":77,"org.apache.commons.lang3.ArrayUtilsTest.testCloneInt":5,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":35,"org.apache.commons.lang3.ValidateTest.testValidIndex_collection":336,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllBooleanArrayRemoveNone":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":161,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":160,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":230,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":233,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":149,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":124,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeExternalExec":257,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":115,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":305,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":183,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvString":69,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":34,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":324,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testCopyOnWriteArrayList":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":169,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":119,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":134,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":225,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllDoubleArrayRemoveNone":9,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectAtIndex":271,"org.apache.commons.lang3.RandomUtilsTest.testExtremeRangeFloat":91,"org.apache.commons.lang3.ArrayUtilsTest.testToString":110,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":128,"org.apache.commons.lang3.StringUtilsTest.testGetJaroWinklerDistance_StringString":260,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHtml4":244,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":135,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfShortWithStartIndex":242,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":290,"org.apache.commons.lang3.builder.CompareToBuilderTest.testFloatArrayHiddenByObject":278,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":30,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOf_ThrowableClassInt":263,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":238,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":189,"org.apache.commons.lang3.math.FractionTest.testAdd":46,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":308,"org.apache.commons.lang3.ArrayUtilsTest.testIsNotEmptyPrimitives":332,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":186,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":246,"org.apache.commons.lang3.time.DateUtilsTest.testWeekIterator":58,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllIntArrayRemoveNone":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":159,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":197,"org.apache.commons.lang3.time.DateUtilsTest.testMonthIterator":57,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":123,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":43,"org.apache.commons.lang3.ValidateTest.testExclusiveBetweenLong":241,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllIntArray":15,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementShortArray":266,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":138,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementDoubleArray":76,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":234,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":185,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":44,"org.apache.commons.lang3.text.StrTokenizerTest.test8":109,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":174,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":323,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveDoubleArray":75,"org.apache.commons.lang3.text.StrTokenizerTest.test5":106,"org.apache.commons.lang3.text.StrTokenizerTest.test4":105,"org.apache.commons.lang3.text.StrTokenizerTest.test7":108,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":175,"org.apache.commons.lang3.StringUtilsSubstringTest.testCountMatches_String":262,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":313,"org.apache.commons.lang3.text.StrTokenizerTest.test6":107,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":176,"org.apache.commons.lang3.text.StrTokenizerTest.test1":102,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvWriter":70,"org.apache.commons.lang3.text.StrTokenizerTest.test3":104,"org.apache.commons.lang3.text.StrTokenizerTest.test2":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":151,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testIntegerWithTransients":98,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testLinkedList":79,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":223,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml":249,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":36,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":131,"org.apache.commons.lang3.ArrayUtilsTest.testContainsShort":264,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":86,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfIntWithStartIndex":280,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJson":247,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultInitializerNamesModify":252,"org.apache.commons.lang3.event.EventUtilsTest.testBindFilteredEventsToMethod":84,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":215,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang538":298,"org.apache.commons.lang3.ArrayUtilsTest.testReverseFloat":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":137,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testMilleniumBug":302,"org.apache.commons.lang3.StringUtilsTest.testRightPad_StringIntString":2,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":39,"org.apache.commons.lang3.ClassUtilsTest.testToClass_object":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":179,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetInitializerUnknown":256,"org.apache.commons.lang3.math.FractionTest.testPow":272,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":24,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfShort":265,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":120,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":232,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetExceptionUnknown":253,"org.apache.commons.lang3.BooleanUtilsTest.test_isNotFalse_Boolean":281,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllShortArrayRemoveNone":12,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":211,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixtureWithTransients":100,"org.apache.commons.lang3.CharUtilsTest.testToUnicodeEscaped_Character":331,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":193,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":136,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":317,"org.apache.commons.lang3.RandomUtilsTest.testNextFloatLowerGreaterUpper":88,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":164,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":201,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":154,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateBigDecimal":82,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLowYearPadding":303,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeTempExec":254,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testExtendedAndBuiltInFormats":54,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":227,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":202,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":156,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":228,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":310,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":111,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvString":71,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":301,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":142,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":133,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":153,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":285,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":203,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":112},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:874","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[0],"tindex":"94a1af2a-2e89-11e6-a9ca-e709831bf80d","method":{"position":"org.apache.commons.lang3.ClassUtils:990","type":"CtMethodImpl","sourcecode":"public static java.lang.Class<?>[] toClass(final java.lang.Object... array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Class<?>[];\n            } \n            final java.lang.Class<?>[] java.lang.Class<?>[] = new java.lang.Class[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                classes[i] = (array[i]) == null ? null : array[i].getClass();\n            }\n            return classes;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:728","type":"CtBinaryOperatorImpl","sourcecode":"classes == null"},"failures":[1],"tindex":"94a2998b-2e89-11e6-a9ca-177f8855b0b2","method":{"position":"org.apache.commons.lang3.ObjectUtils:238","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static int hashCodeMulti(final java.lang.Object... objects) {\n    if (objects == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 1;\n            if (objects != null) {\n                for (final java.lang.Object java.lang.Object : objects) {\n                    int int = org.apache.commons.lang3.ObjectUtils.hashCode(object);\n                    hash = (hash * 31) + tmpHash;\n                }\n            } \n            return hash;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classes":"objects"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:835","type":"CtBinaryOperatorImpl","sourcecode":"lastDotIndex != (-1)"},"failures":[2],"tindex":"94a2998c-2e89-11e6-a9ca-9d80a17bfe73","method":{"position":"org.apache.commons.lang3.StringUtils:5298","type":"CtMethodImpl","sourcecode":"public static java.lang.String rightPad(final java.lang.String str, final int size, java.lang.String padStr) {\n    if (size != (-1)) {\n        {\n            if (str == null) {\n                return null;\n            } \n            if (org.apache.commons.lang3.StringUtils.isEmpty(padStr)) {\n                padStr = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final int int = padStr.length();\n            final int int = str.length();\n            final int int = size - strLen;\n            if (pads <= 0) {\n                return str;\n            } \n            if ((padLen == 1) && (pads <= (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int))) {\n                return org.apache.commons.lang3.StringUtils.rightPad(str, size, padStr.charAt(0));\n            } \n            if (pads == padLen) {\n                return str.concat(padStr);\n            } else if (pads < padLen) {\n                return str.concat(padStr.substring(0, pads));\n            } else {\n                final char[] char[] = new char[pads];\n                final char[] char[] = padStr.toCharArray();\n                for (int int = 0 ; i < pads ; i++) {\n                    padding[i] = padChars[(i % padLen)];\n                }\n                return str.concat(new java.lang.String(padding));\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lastDotIndex":"size"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:218","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.CharUtils.isAsciiNumeric(ch)) == false"},"failures":[],"tindex":"94a2c09d-2e89-11e6-a9ca-f1dd6f33140b","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1850","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder replaceAll(final char search, final char replace) {\n    if ((org.apache.commons.lang3.CharUtils.isAsciiNumeric(search)) == false) {\n        {\n            if (search != replace) {\n                for (int int = 0 ; i < (int) ; i++) {\n                    if ((char[][i]) == search) {\n                        char[][i] = replace;\n                    } \n                }\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"search"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2174","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[3,4],"tindex":"94a2e7ae-2e89-11e6-a9ca-5bca8ca5a993","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1245","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendSeparator(final java.lang.String standard, final java.lang.String defaultIfEmpty) {\n    if (defaultIfEmpty == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.String java.lang.String = isEmpty() ? defaultIfEmpty : standard;\n            if (str != null) {\n                append(str);\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"defaultIfEmpty"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:522","type":"CtBinaryOperatorImpl","sourcecode":"value instanceof char[]"},"failures":[],"tindex":"94a2e7af-2e89-11e6-a9ca-6747713522f3","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:416","type":"CtMethodImpl","sourcecode":"public static int reflectionHashCode(final java.lang.Object object, final java.util.Collection<java.lang.String> excludeFields) {\n    if (object instanceof char[]) {\n        {\n            return org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(object, org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(excludeFields));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"object"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5534","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17],"tindex":"94a30ec0-2e89-11e6-a9ca-138974b57e05","method":{"position":"org.apache.commons.lang3.ArrayUtils:354","type":"CtMethodImpl","sourcecode":"public static int[] clone(final int[] array) {\n    if ((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(array))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            return array.clone();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array","values":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1336","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[18],"tindex":"94a335d1-2e89-11e6-a9ca-c38277a996e3","method":{"position":"org.apache.commons.lang3.ArrayUtils:1533","type":"CtMethodImpl","sourcecode":"public static void reverse(final float[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return ;\n            } \n            org.apache.commons.lang3.ArrayUtils.reverse(array, 0, array.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5299","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"tindex":"94a335d2-2e89-11e6-a9ca-297ac283dad8","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:171","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final boolean[] lhs, final boolean[] rhs) {\n    if (fieldName == null) {\n        {\n            if (fieldName == null) {\n                throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n            } \n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if (!(java.util.Arrays.equals(lhs, rhs))) {\n                java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Boolean[]>(fieldName) {\n                    private static final long serialVersionUID = 1L;\n\n                    @java.lang.Override\n                    public java.lang.Boolean[] getLeft() {\n                        return org.apache.commons.lang3.ArrayUtils.toObject(lhs);\n                    }\n\n                    @java.lang.Override\n                    public java.lang.Boolean[] getRight() {\n                        return org.apache.commons.lang3.ArrayUtils.toObject(rhs);\n                    }\n                });\n            } \n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5660","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[41],"tindex":"94a35ce3-2e89-11e6-a9ca-47caf9e75e62","method":{"position":"org.apache.commons.lang3.StringUtils:2449","type":"CtMethodImpl","sourcecode":"public static java.lang.String substringBetween(final java.lang.String str, final java.lang.String tag) {\n    if (tag == null) {\n        {\n            return org.apache.commons.lang3.StringUtils.substringBetween(str, tag, tag);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"tag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1349","type":"CtBinaryOperatorImpl","sourcecode":"loopIndex > 0"},"failures":[42,43,44],"tindex":"94a383f4-2e89-11e6-a9ca-c97289ee2818","method":{"position":"org.apache.commons.lang3.text.translate.OctalUnescaper:39","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int translate(final java.lang.CharSequence input, final int index, final java.io.Writer out) throws java.io.IOException {\n    if (index > 0) {\n        throw new java.io.IOException();\n    } else {\n        {\n            int int = ((input.length()) - index) - 1;\n            java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            if ((((input.charAt(index)) == '\\\\') && (remaining > 0)) && (isOctalDigit(input.charAt((index + 1))))) {\n                int int = index + 1;\n                int int = index + 2;\n                int int = index + 3;\n                builder.append(input.charAt(next));\n                if ((remaining > 1) && (isOctalDigit(input.charAt(next2)))) {\n                    builder.append(input.charAt(next2));\n                    if (((remaining > 2) && (isZeroToThree(input.charAt(next)))) && (isOctalDigit(input.charAt(next3)))) {\n                        builder.append(input.charAt(next3));\n                    } \n                } \n                out.write(java.lang.Integer.parseInt(builder.toString(), 8));\n                return 1 + (builder.length());\n            } \n            return 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"loopIndex":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:332","type":"CtBinaryOperatorImpl","sourcecode":"ch == null"},"failures":[45],"tindex":"94a3ab05-2e89-11e6-a9ca-89c54102242e","method":{"position":"org.apache.commons.lang3.CharUtils:129","type":"CtMethodImpl","sourcecode":"public static char toChar(final java.lang.Character ch) {\n    if (ch == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (ch == null) {\n                throw new java.lang.IllegalArgumentException(\"The Character must not be null\");\n            } \n            return ch.charValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3108","type":"CtBinaryOperatorImpl","sourcecode":"(separatorChars.length()) == 1"},"failures":[],"tindex":"94a3ab06-2e89-11e6-a9ca-a7092d313803","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:337","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final char[] lhs, final char[] rhs) {\n    if ((fieldName.length()) == 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (fieldName == null) {\n                throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n            } \n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if (!(java.util.Arrays.equals(lhs, rhs))) {\n                java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Character[]>(fieldName) {\n                    private static final long serialVersionUID = 1L;\n\n                    @java.lang.Override\n                    public java.lang.Character[] getLeft() {\n                        return org.apache.commons.lang3.ArrayUtils.toObject(lhs);\n                    }\n\n                    @java.lang.Override\n                    public java.lang.Character[] getRight() {\n                        return org.apache.commons.lang3.ArrayUtils.toObject(rhs);\n                    }\n                });\n            } \n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"separatorChars":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:517","type":"CtBinaryOperatorImpl","sourcecode":"classArray == null"},"failures":[],"tindex":"94a3d217-2e89-11e6-a9ca-ff1e4ae35d8c","method":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:196","type":"CtMethodImpl","sourcecode":"public static <T>java.lang.reflect.Constructor<T> getAccessibleConstructor(final java.lang.Class<T> cls, final java.lang.Class<?>... parameterTypes) {\n    if (parameterTypes == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.notNull(cls, \"class cannot be null\");\n            try {\n                return org.apache.commons.lang3.reflect.ConstructorUtils.getAccessibleConstructor(cls.getConstructor(parameterTypes));\n            } catch (final java.lang.NoSuchMethodException e) {\n                return null;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classArray":"parameterTypes"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2129","type":"CtBinaryOperatorImpl","sourcecode":"endIndex > (size)"},"failures":[],"tindex":"94a3f928-2e89-11e6-a9ca-e39cda4058ec","method":{"position":"org.apache.commons.lang3.BooleanUtils:446","type":"CtMethodImpl","sourcecode":"public static int toInteger(final boolean bool, final int trueValue, final int falseValue) {\n    if (falseValue > falseValue) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return bool ? trueValue : falseValue;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"falseValue","endIndex":"falseValue"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:797","type":"CtBinaryOperatorImpl","sourcecode":"fraction == null"},"failures":[46],"tindex":"94a3f929-2e89-11e6-a9ca-07999c04d39a","method":{"position":"org.apache.commons.lang3.math.Fraction:712","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.math.Fraction add(final org.apache.commons.lang3.math.Fraction fraction) {\n    if (fraction == null) {\n        {\n            return addSub(fraction, true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fraction":"fraction"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:199","type":"CtBinaryOperatorImpl","sourcecode":"(tmp.length()) != (duration.length())"},"failures":[],"tindex":"94a4203a-2e89-11e6-a9ca-8f0b137ab7c0","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:662","type":"CtMethodImpl","sourcecode":"private void addToken(final java.util.List<java.lang.String> list, java.lang.String tok) {\n    if ((tok.length()) != (tok.length())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(tok)) {\n                if (isIgnoreEmptyTokens()) {\n                    return ;\n                } \n                if (isEmptyTokenAsNull()) {\n                    tok = null;\n                } \n            } \n            list.add(tok);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"duration":"tok","tmp":"tok"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1534","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"94a4203b-2e89-11e6-a9ca-c148a672fd69","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1378","type":"CtMethodImpl","sourcecode":"protected void appendSummary(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final float[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendSummarySize(buffer, fieldName, array.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:656","type":"CtBinaryOperatorImpl","sourcecode":"length > 0"},"failures":[47,48],"tindex":"94a4474c-2e89-11e6-a9ca-b909bf14a314","method":{"position":"org.apache.commons.lang3.ArrayUtils:2064","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final long[] array, final long valueToFind, int startIndex) {\n    if (startIndex > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } else if (startIndex >= (array.int)) {\n                startIndex = (array.int) - 1;\n            } \n            for (int int = startIndex ; i >= 0 ; i--) {\n                if (valueToFind == (array[i])) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"startIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3113","type":"CtBinaryOperatorImpl","sourcecode":"match || preserveAllTokens"},"failures":[49,50,51,52,53,54,55],"tindex":"94a46e5d-2e89-11e6-a9ca-373e028ea936","method":{"position":"org.apache.commons.lang3.Validate:178","type":"CtMethodImpl","sourcecode":"public static void isTrue(final boolean expression) {\n    if (expression || expression) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (expression == false) {\n                throw new java.lang.IllegalArgumentException(org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.java.lang.String);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"preserveAllTokens":"expression","match":"expression"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:874","type":"CtBinaryOperatorImpl","sourcecode":"(java.util.regex.Pattern.matches(pattern, input)) == false"},"failures":[],"tindex":"94a46e5e-2e89-11e6-a9ca-ebf3ec2a274a","method":{"position":"org.apache.commons.lang3.StringUtils:6167","type":"CtMethodImpl","sourcecode":"public static boolean isAllUpperCase(final java.lang.CharSequence cs) {\n    if ((java.util.regex.Pattern.matches(cs, cs)) == false) {\n        {\n            if ((cs == null) || (org.apache.commons.lang3.StringUtils.isEmpty(cs))) {\n                return false;\n            } \n            final int int = cs.length();\n            for (int int = 0 ; i < sz ; i++) {\n                if ((java.lang.Character.isUpperCase(cs.charAt(i))) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"input":"cs","pattern":"cs"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.JavaVersion:136","type":"CtInvocationImpl","sourcecode":"\"1.2\".equals(nom)"},"failures":[56],"tindex":"94a4956f-2e89-11e6-a9ca-8ff25073118d","method":{"position":"org.apache.commons.lang3.LocaleUtils:260","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.util.Locale> languagesByCountry(final java.lang.String countryCode) {\n    if (\"1.2\".equals(countryCode)) {\n        {\n            if (countryCode == null) {\n                return java.util.Collections.emptyList();\n            } \n            java.util.List<java.util.Locale> java.util.List<java.util.Locale> = org.apache.commons.lang3.LocaleUtils.org.apache.commons.lang3.LocaleUtils.java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<java.util.Locale>>.get(countryCode);\n            if (langs == null) {\n                langs = new java.util.ArrayList<java.util.Locale>();\n                final java.util.List<java.util.Locale> java.util.List<java.util.Locale> = org.apache.commons.lang3.LocaleUtils.availableLocaleList();\n                for (int int = 0 ; i < (locales.size()) ; i++) {\n                    final java.util.Locale java.util.Locale = locales.get(i);\n                    if ((countryCode.equals(locale.getCountry())) && (locale.getVariant().isEmpty())) {\n                        langs.add(locale);\n                    } \n                }\n                langs = java.util.Collections.unmodifiableList(langs);\n                org.apache.commons.lang3.LocaleUtils.org.apache.commons.lang3.LocaleUtils.java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<java.util.Locale>>.putIfAbsent(countryCode, langs);\n                langs = org.apache.commons.lang3.LocaleUtils.org.apache.commons.lang3.LocaleUtils.java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<java.util.Locale>>.get(countryCode);\n            } \n            return langs;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nom":"countryCode"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1083","type":"CtBinaryOperatorImpl","sourcecode":"((nBools - 1) + dstPos) >= 32"},"failures":[57,58,59],"tindex":"94a4bc80-2e89-11e6-a9ca-c7868594e73b","method":{"position":"org.apache.commons.lang3.time.DateUtils:1122","type":"CtMethodImpl","sourcecode":"public static java.util.Iterator<java.util.Calendar> iterator(final java.util.Date focus, final int rangeStyle) {\n    if (((rangeStyle - 1) + rangeStyle) >= 32) {\n        {\n            if (focus == null) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            final java.util.Calendar java.util.Calendar = java.util.Calendar.getInstance();\n            gval.setTime(focus);\n            return org.apache.commons.lang3.time.DateUtils.iterator(gval, rangeStyle);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nBools":"rangeStyle","dstPos":"rangeStyle"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.UnsupportedEncodingException","condition":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:425","type":"CtBinaryOperatorImpl","sourcecode":"customPattern != null"},"failures":[60],"tindex":"94a4bc81-2e89-11e6-a9ca-5925d44bc237","method":{"position":"org.apache.commons.lang3.StringUtils:7618","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static java.lang.String toString(final byte[] bytes, final java.lang.String charsetName) throws java.io.UnsupportedEncodingException {\n    if (charsetName != null) {\n        {\n            return charsetName != null ? new java.lang.String(bytes , charsetName) : new java.lang.String(bytes , java.nio.charset.Charset.defaultCharset());\n        }\n    } else {\n        throw new java.io.UnsupportedEncodingException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"customPattern":"charsetName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:931","type":"CtBinaryOperatorImpl","sourcecode":"(toProperString) == null"},"failures":[61],"tindex":"94a4e392-2e89-11e6-a9ca-d180c833cb09","method":{"position":"org.apache.commons.lang3.StringUtils:862","type":"CtMethodImpl","sourcecode":"public static int indexOf(final java.lang.CharSequence seq, final int searchChar) {\n    if (seq == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(seq)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            return org.apache.commons.lang3.CharSequenceUtils.indexOf(seq, searchChar, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toProperString":"seq"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2541","type":"CtInvocationImpl","sourcecode":"list.isEmpty()"},"failures":[62],"tindex":"94a4e393-2e89-11e6-a9ca-05ff91aa1bd0","method":{"position":"org.apache.commons.lang3.ClassUtils:397","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.lang.Class<?>> convertClassNamesToClasses(final java.util.List<java.lang.String> classNames) {\n    if (classNames.isEmpty()) {\n        {\n            if (classNames == null) {\n                return null;\n            } \n            final java.util.List<java.lang.Class<?>> java.util.List<java.lang.Class<?>> = new java.util.ArrayList<java.lang.Class<?>>(classNames.size());\n            for (final java.lang.String java.lang.String : classNames) {\n                try {\n                    classes.add(java.lang.Class.forName(className));\n                } catch (final java.lang.Exception ex) {\n                    classes.add(null);\n                }\n            }\n            return classes;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"list":"classNames"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1381","type":"CtBinaryOperatorImpl","sourcecode":"(searchStr.length()) == 0"},"failures":[],"tindex":"94a50aa4-2e89-11e6-a9ca-2760e425c1de","method":{"position":"org.apache.commons.lang3.ArrayUtils:1935","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final java.lang.Object[] array, final java.lang.Object objectToFind) {\n    if ((objectToFind.length()) == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, objectToFind, java.lang.Integer.java.lang.Integer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"searchStr":"objectToFind"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1870","type":"CtBinaryOperatorImpl","sourcecode":"search != replace"},"failures":[42,43,44],"tindex":"94a50aa5-2e89-11e6-a9ca-27883296a2e7","method":{"position":"org.apache.commons.lang3.text.translate.OctalUnescaper:68","type":"CtMethodImpl","sourcecode":"private boolean isOctalDigit(char ch) {\n    if (ch != ch) {\n        {\n            return (ch >= '0') && (ch <= '7');\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"search":"ch","replace":"ch"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5909","type":"CtBinaryOperatorImpl","sourcecode":"found < 0"},"failures":[63],"tindex":"94a50aa6-2e89-11e6-a9ca-c1847a33afc4","method":{"position":"org.apache.commons.lang3.ArrayUtils:3115","type":"CtMethodImpl","sourcecode":"public static int[] toPrimitive(final java.lang.Integer[] array, final int valueForNull) {\n    if (valueForNull < 0) {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int[];\n            } \n            final int[] int[] = new int[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                final java.lang.Integer java.lang.Integer = array[i];\n                result[i] = b == null ? valueForNull : b.intValue();\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"found":"valueForNull"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:380","type":"CtBinaryOperatorImpl","sourcecode":"ch == null"},"failures":[64],"tindex":"94a50aa7-2e89-11e6-a9ca-3526c10cdbef","method":{"position":"org.apache.commons.lang3.CharUtils:262","type":"CtMethodImpl","sourcecode":"public static int toIntValue(final java.lang.Character ch) {\n    if (ch == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (ch == null) {\n                throw new java.lang.IllegalArgumentException(\"The character must not be null\");\n            } \n            return org.apache.commons.lang3.CharUtils.toIntValue(ch.charValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2030","type":"CtBinaryOperatorImpl","sourcecode":"tmp > ret"},"failures":[65,66,67,68,69,70,71,72,73,74],"tindex":"94a531b8-2e89-11e6-a9ca-673a5f8428e2","method":{"position":"org.apache.commons.lang3.StringUtils:4516","type":"CtMethodImpl","sourcecode":"public static java.lang.String replace(final java.lang.String text, final java.lang.String searchString, final java.lang.String replacement, int max) {\n    if (text == null) {\n        {\n            if (max > max) {\n                {\n                    if ((((org.apache.commons.lang3.StringUtils.isEmpty(text)) || (org.apache.commons.lang3.StringUtils.isEmpty(searchString))) || (replacement == null)) || (max == 0)) {\n                        return text;\n                    } \n                    int int = 0;\n                    int int = text.indexOf(searchString, start);\n                    if (end == (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) {\n                        return text;\n                    } \n                    final int int = searchString.length();\n                    int int = (replacement.length()) - replLength;\n                    increase = increase < 0 ? 0 : increase;\n                    increase *= max < 0 ? 16 : max > 64 ? 64 : max;\n                    final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(((text.length()) + increase));\n                    while (end != (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) {\n                        buf.append(text.substring(start, end)).append(replacement);\n                        start = end + replLength;\n                        if ((--max) == 0) {\n                            break;\n                        } \n                        end = text.indexOf(searchString, start);\n                    }\n                    buf.append(text.substring(start));\n                    return buf.toString();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ret":"max","tmp":"max"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:470","type":"CtBinaryOperatorImpl","sourcecode":"(numerator) == 0"},"failures":[75,76],"tindex":"94a531b9-2e89-11e6-a9ca-75e131f7f80d","method":{"position":"org.apache.commons.lang3.ArrayUtils:4872","type":"CtMethodImpl","sourcecode":"public static double[] remove(final double[] array, final int index) {\n    if (index == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((double[])(org.apache.commons.lang3.ArrayUtils.remove(((java.lang.Object)(array)), index)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"numerator":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4171","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[77,78,79],"tindex":"94a558ca-2e89-11e6-a9ca-e707e88bcfbc","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:606","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final java.util.Collection<?> coll) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(fieldName)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(coll);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6284","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"94a558cb-2e89-11e6-a9ca-e3b4064db459","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:328","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setFieldNameValueSeparator(final java.lang.String fieldNameValueSeparator) {\n    if (fieldNameValueSeparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            super.setFieldNameValueSeparator(fieldNameValueSeparator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldNameValueSeparator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:183","type":"CtBinaryOperatorImpl","sourcecode":"whole < 0"},"failures":[80,81,6],"tindex":"94a558cc-2e89-11e6-a9ca-09c37c14f701","method":{"position":"org.apache.commons.lang3.ArrayUtils:2106","type":"CtMethodImpl","sourcecode":"public static int indexOf(final int[] array, final int valueToFind) {\n    if (valueToFind < 0) {\n        {\n            return org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"whole":"valueToFind"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:677","type":"CtBinaryOperatorImpl","sourcecode":"(lhs == null) || (rhs == null)"},"failures":[47],"tindex":"94a558cd-2e89-11e6-a9ca-35aa1cc6939e","method":{"position":"org.apache.commons.lang3.ArrayUtils:2046","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final long[] array, final long valueToFind) {\n    if ((array == null) || (array == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.java.lang.Integer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array","rhs":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:255","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[82],"tindex":"94a57fde-2e89-11e6-a9ca-03c798355c72","method":{"position":"org.apache.commons.lang3.math.NumberUtils:760","type":"CtMethodImpl","sourcecode":"public static java.math.BigDecimal createBigDecimal(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return null;\n            } \n            if (org.apache.commons.lang3.StringUtils.isBlank(str)) {\n                throw new java.lang.NumberFormatException(\"A blank string is not a valid number\");\n            } \n            if (str.trim().startsWith(\"--\")) {\n                throw new java.lang.NumberFormatException((str + \" is not a valid number.\"));\n            } \n            return new java.math.BigDecimal(str);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2416","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(separator)"},"failures":[],"tindex":"94a57fdf-2e89-11e6-a9ca-25f13cb13ae8","method":{"position":"org.apache.commons.lang3.builder.RecursiveToStringStyle:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void appendDetail(java.lang.StringBuffer buffer, java.lang.String fieldName, java.util.Collection<?> coll) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(fieldName)) {\n        {\n            appendClassName(buffer, coll);\n            appendIdentityHashCode(buffer, coll);\n            appendDetail(buffer, fieldName, coll.toArray());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"separator":"fieldName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:561","type":"CtInvocationImpl","sourcecode":"causeFrame.equals(wrapperFrame)"},"failures":[83,84,85],"tindex":"94a57fe0-2e89-11e6-a9ca-47a038d579f7","method":{"position":"org.apache.commons.lang3.event.EventUtils:75","type":"CtMethodImpl","sourcecode":"public static <L>void bindEventsToMethod(final java.lang.Object target, final java.lang.String methodName, final java.lang.Object eventSource, final java.lang.Class<L> listenerType, final java.lang.String... eventTypes) {\n    if (methodName.equals(eventSource)) {\n        {\n            final L L = listenerType.cast(java.lang.reflect.Proxy.newProxyInstance(target.getClass().getClassLoader(), new java.lang.Class[]{ listenerType }, new org.apache.commons.lang3.event.EventUtils.EventBindingInvocationHandler(target , methodName , eventTypes)));\n            org.apache.commons.lang3.event.EventUtils.addEventListener(eventSource, listenerType, listener);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"causeFrame":"methodName","wrapperFrame":"eventSource"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3966","type":"CtBinaryOperatorImpl","sourcecode":"array1 == null"},"failures":[86],"tindex":"94a5a6f1-2e89-11e6-a9ca-a5068f22ce50","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:380","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.StringBuffer format(final java.lang.Object obj, final java.lang.StringBuffer toAppendTo, final java.text.FieldPosition pos) {\n    if (obj == null) {\n        {\n            if (obj instanceof java.util.Date) {\n                return format(((java.util.Date)(obj)), toAppendTo);\n            } else if (obj instanceof java.util.Calendar) {\n                return format(((java.util.Calendar)(obj)), toAppendTo);\n            } else if (obj instanceof java.lang.Long) {\n                return format(((java.lang.Long)(obj)).longValue(), toAppendTo);\n            } else {\n                throw new java.lang.IllegalArgumentException((\"Unknown class: \" + (obj == null ? \"<null>\" : obj.getClass().getName())));\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array1":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:137","type":"CtInvocationImpl","sourcecode":"java.lang.Float.isNaN(a)"},"failures":[87,88,89,90,91],"tindex":"94a5a6f2-2e89-11e6-a9ca-aba0ce793530","method":{"position":"org.apache.commons.lang3.RandomUtils:163","type":"CtMethodImpl","sourcecode":"public static float nextFloat(float startInclusive, float endInclusive) {\n    if (java.lang.Float.isNaN(endInclusive)) {\n        {\n            org.apache.commons.lang3.Validate.isTrue((endInclusive >= startInclusive), \"Start value must be smaller or equal to end value.\");\n            org.apache.commons.lang3.Validate.isTrue((startInclusive >= 0), \"Both range values must be non-negative.\");\n            if (startInclusive == endInclusive) {\n                return startInclusive;\n            } \n            return startInclusive + ((endInclusive - startInclusive) * (org.apache.commons.lang3.RandomUtils.org.apache.commons.lang3.RandomUtils.java.util.Random.nextFloat()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"endInclusive"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:130","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isAllLowerCase(str)) && ((len == 2) || (len == 3))"},"failures":[],"tindex":"94a5a6f3-2e89-11e6-a9ca-a15b53729bda","method":{"position":"org.apache.commons.lang3.StringUtils:6353","type":"CtMethodImpl","sourcecode":"public static java.lang.String abbreviate(final java.lang.String str, final int maxWidth) {\n    if ((org.apache.commons.lang3.StringUtils.isAllLowerCase(str)) && ((maxWidth == 2) || (len == 3))) {\n        {\n            return org.apache.commons.lang3.StringUtils.abbreviate(str, 0, maxWidth);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str","len":"maxWidth"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3133","type":"CtBinaryOperatorImpl","sourcecode":"match || preserveAllTokens"},"failures":[92],"tindex":"94a5ce04-2e89-11e6-a9ca-2d91b8fe6182","method":{"position":"org.apache.commons.lang3.ClassUtils:513","type":"CtMethodImpl","sourcecode":"public static boolean isAssignable(java.lang.Class<?>[] classArray, java.lang.Class<?>[] toClassArray, final boolean autoboxing) {\n    if (autoboxing || autoboxing) {\n        {\n            if ((org.apache.commons.lang3.ArrayUtils.isSameLength(classArray, toClassArray)) == false) {\n                return false;\n            } \n            if (classArray == null) {\n                classArray = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Class<?>[];\n            } \n            if (toClassArray == null) {\n                toClassArray = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Class<?>[];\n            } \n            for (int int = 0 ; i < (classArray.int) ; i++) {\n                if ((org.apache.commons.lang3.ClassUtils.isAssignable(classArray[i], toClassArray[i], autoboxing)) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"preserveAllTokens":"autoboxing","match":"autoboxing"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:505","type":"CtBinaryOperatorImpl","sourcecode":"bool == null"},"failures":[93],"tindex":"94a5ce05-2e89-11e6-a9ca-9b4bacd8e2b6","method":{"position":"org.apache.commons.lang3.BooleanUtils:104","type":"CtMethodImpl","sourcecode":"public static boolean isNotTrue(final java.lang.Boolean bool) {\n    if (bool == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return !(org.apache.commons.lang3.BooleanUtils.isTrue(bool));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bool":"bool"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:525","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[94,95,96,97,98,99,100,101],"tindex":"94a5ce06-2e89-11e6-a9ca-29994db51881","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:150","type":"CtMethodImpl","sourcecode":"static boolean isRegistered(final java.lang.Object value) {\n    if (value == null) {\n        {\n            final java.util.Set<org.apache.commons.lang3.builder.IDKey> java.util.Set<org.apache.commons.lang3.builder.IDKey> = org.apache.commons.lang3.builder.HashCodeBuilder.getRegistry();\n            return (registry != null) && (registry.contains(new org.apache.commons.lang3.builder.IDKey(value)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:4708","type":"CtBinaryOperatorImpl","sourcecode":"index == (org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND)"},"failures":[],"tindex":"94a5f517-2e89-11e6-a9ca-316b4b4497e4","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1647","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder insert(final int index, final float value) {\n    if (index == index) {\n        {\n            return insert(index, java.lang.String.valueOf(value));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND":"index","index":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1983","type":"CtBinaryOperatorImpl","sourcecode":"tmp < ret"},"failures":[],"tindex":"94a5f518-2e89-11e6-a9ca-2d588392290f","method":{"position":"org.apache.commons.lang3.StringUtils:5410","type":"CtMethodImpl","sourcecode":"public static java.lang.String leftPad(final java.lang.String str, final int size, java.lang.String padStr) {\n    if (size < size) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return null;\n            } \n            if (org.apache.commons.lang3.StringUtils.isEmpty(padStr)) {\n                padStr = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final int int = padStr.length();\n            final int int = str.length();\n            final int int = size - strLen;\n            if (pads <= 0) {\n                return str;\n            } \n            if ((padLen == 1) && (pads <= (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int))) {\n                return org.apache.commons.lang3.StringUtils.leftPad(str, size, padStr.charAt(0));\n            } \n            if (pads == padLen) {\n                return padStr.concat(str);\n            } else if (pads < padLen) {\n                return padStr.substring(0, pads).concat(str);\n            } else {\n                final char[] char[] = new char[pads];\n                final char[] char[] = padStr.toCharArray();\n                for (int int = 0 ; i < pads ; i++) {\n                    padding[i] = padChars[(i % padLen)];\n                }\n                return new java.lang.String(padding).concat(str);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ret":"size","tmp":"size"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2290","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (separator == null)"},"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40],"tindex":"94a61c29-2e89-11e6-a9ca-259f2e8479be","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:212","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final byte lhs, final byte rhs) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(fieldName)) || (fieldName == null)) {\n                {\n                    if (fieldName == null) {\n                        throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n                    } \n                    if (boolean) {\n                        return org.apache.commons.lang3.builder.DiffBuilder.this;\n                    } \n                    if (lhs != rhs) {\n                        java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Byte>(fieldName) {\n                            private static final long serialVersionUID = 1L;\n\n                            @java.lang.Override\n                            public java.lang.Byte getLeft() {\n                                return java.lang.Byte.valueOf(lhs);\n                            }\n\n                            @java.lang.Override\n                            public java.lang.Byte getRight() {\n                                return java.lang.Byte.valueOf(rhs);\n                            }\n                        });\n                    } \n                    return org.apache.commons.lang3.builder.DiffBuilder.this;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName","separator":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3613","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,132,133,133,134,134,135,136,136,137,137,138,138,139,139,140,140,141,141,142,142,143,143,144,144,145,145,146,146,147,148,148,149,150,151,152,153,154,155,156,157,158,159,159,160,160,161,162,163,164,164,165,165,166,166,167,168,169,170,170,171,171,172,173,174,175,176,177,178,178,179,180,180,181,181,182,182,183,183,184,184,185,186,187,187,188,188,189,190,191,191,192,193,193,194,195,195,196,196,197,197,198,198,199,200,201,202,202,203,203,204,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,77,78,79,230,231,232,233,234,235,236,237,238,239,240],"tindex":"94a61c2a-2e89-11e6-a9ca-dd97be62a21f","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:438","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final java.lang.Object value, final java.lang.Boolean fullDetail) {\n    if (value == null) {\n        {\n            appendFieldStart(buffer, fieldName);\n            if (value == null) {\n                appendNullText(buffer, fieldName);\n            } else {\n                appendInternal(buffer, fieldName, value, isFullDetail(fullDetail));\n            }\n            appendFieldEnd(buffer, fieldName);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.SystemUtils:1465","type":"CtBinaryOperatorImpl","sourcecode":"osName == null"},"failures":[],"tindex":"94a6433b-2e89-11e6-a9ca-e7d97ad6153e","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:212","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final byte lhs, final byte rhs) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(fieldName)) || (fieldName == null)) {\n                {\n                    if (fieldName == null) {\n                        throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n                    } \n                    if (boolean) {\n                        return org.apache.commons.lang3.builder.DiffBuilder.this;\n                    } \n                    if (lhs != rhs) {\n                        java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Byte>(fieldName) {\n                            private static final long serialVersionUID = 1L;\n\n                            @java.lang.Override\n                            public java.lang.Byte getLeft() {\n                                return java.lang.Byte.valueOf(lhs);\n                            }\n\n                            @java.lang.Override\n                            public java.lang.Byte getRight() {\n                                return java.lang.Byte.valueOf(rhs);\n                            }\n                        });\n                    } \n                    return org.apache.commons.lang3.builder.DiffBuilder.this;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"osName":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:622","type":"CtBinaryOperatorImpl","sourcecode":"stripChars == null"},"failures":[],"tindex":"94a66a4c-2e89-11e6-a9ca-d14ca9075246","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:355","type":"CtMethodImpl","sourcecode":"public void appendToString(final java.lang.StringBuffer buffer, final java.lang.String toString) {\n    if (toString == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (toString != null) {\n                final int int = (toString.indexOf(java.lang.String)) + (java.lang.String.length());\n                final int int = toString.lastIndexOf(java.lang.String);\n                if (((pos1 != pos2) && (pos1 >= 0)) && (pos2 >= 0)) {\n                    final java.lang.String java.lang.String = toString.substring(pos1, pos2);\n                    if (boolean) {\n                        removeLastFieldSeparator(buffer);\n                    } \n                    buffer.append(data);\n                    appendFieldSeparator(buffer);\n                } \n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"stripChars":"toString"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomUtils:115","type":"CtBinaryOperatorImpl","sourcecode":"startInclusive == endExclusive"},"failures":[241],"tindex":"94a66a4d-2e89-11e6-a9ca-4dd6e0887cdc","method":{"position":"org.apache.commons.lang3.Validate:1081","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"boxing\")\npublic static void exclusiveBetween(long start, long end, long value) {\n    if (end == value) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((value <= start) || (value >= end)) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.java.lang.String, value, start, end));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startInclusive":"end","endExclusive":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1040","type":"CtBinaryOperatorImpl","sourcecode":"index < 0"},"failures":[242,243],"tindex":"94a66a4e-2e89-11e6-a9ca-25f6e308fca6","method":{"position":"org.apache.commons.lang3.ArrayUtils:2270","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final short[] array, final short valueToFind, int startIndex) {\n    if (startIndex < 0) {\n        {\n            if (array == null) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } else if (startIndex >= (array.int)) {\n                startIndex = (array.int) - 1;\n            } \n            for (int int = startIndex ; i >= 0 ; i--) {\n                if (valueToFind == (array[i])) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"index":"startIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1870","type":"CtBinaryOperatorImpl","sourcecode":"fieldNameValueSeparator == null"},"failures":[43,244,245,246,247,248,69,71,249],"tindex":"94a6915f-2e89-11e6-a9ca-b7bad3ce3658","method":{"position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:53","type":"CtMethodImpl","sourcecode":"public final java.lang.String translate(final java.lang.CharSequence input) {\n    if (input == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (input == null) {\n                return null;\n            } \n            try {\n                final java.io.StringWriter java.io.StringWriter = new java.io.StringWriter(((input.length()) * 2));\n                translate(input, writer);\n                return writer.toString();\n            } catch (final java.io.IOException ioe) {\n                throw new java.lang.RuntimeException(ioe);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldNameValueSeparator":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2177","type":"CtBinaryOperatorImpl","sourcecode":"len < 0"},"failures":[],"tindex":"94a69160-2e89-11e6-a9ca-0fe37615e8f9","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1222","type":"CtMethodImpl","sourcecode":"public static int max(int a, final int b, final int c) {\n    if (c < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (b > a) {\n                a = b;\n            } \n            if (c > a) {\n                a = c;\n            } \n            return a;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"c"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5890","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))"},"failures":[250],"tindex":"94a69161-2e89-11e6-a9ca-776ff8a6f2aa","method":{"position":"org.apache.commons.lang3.ArrayUtils:2731","type":"CtMethodImpl","sourcecode":"public static boolean contains(final double[] array, final double valueToFind, final double tolerance) {\n    if ((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(array))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0, tolerance)) != (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array","values":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1677","type":"CtBinaryOperatorImpl","sourcecode":"searchChars == null"},"failures":[251],"tindex":"94a6b872-2e89-11e6-a9ca-894fc11bf084","method":{"position":"org.apache.commons.lang3.ObjectUtils:364","type":"CtMethodImpl","sourcecode":"public static void identityToString(final java.lang.StringBuilder builder, final java.lang.Object object) {\n    if (object == null) {\n        {\n            if (object == null) {\n                throw new java.lang.NullPointerException(\"Cannot get the toString of a null identity\");\n            } \n            builder.append(object.getClass().getName()).append('@').append(java.lang.Integer.toHexString(java.lang.System.identityHashCode(object)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"searchChars":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:199","type":"CtBinaryOperatorImpl","sourcecode":"(tmp.length()) != (duration.length())"},"failures":[252,253,254,255,256,257,258,259],"tindex":"94a6b873-2e89-11e6-a9ca-45651da8ab43","method":{"position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:292","type":"CtMethodImpl","sourcecode":"public boolean isException(final java.lang.String name) {\n    if ((name.length()) != (name.length())) {\n        {\n            checkName(name);\n            return java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.ConcurrentException>.containsKey(name);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"duration":"name","tmp":"name"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1928","type":"CtBinaryOperatorImpl","sourcecode":"(cs == null) || (invalidChars == null)"},"failures":[260,261],"tindex":"94a6b874-2e89-11e6-a9ca-c92d8e7c9f1b","method":{"position":"org.apache.commons.lang3.StringUtils:7010","type":"CtMethodImpl","sourcecode":"public static double getJaroWinklerDistance(final java.lang.CharSequence first, final java.lang.CharSequence second) {\n    if ((second == null) || (second == null)) {\n        {\n            final double double = 0.1;\n            if ((first == null) || (second == null)) {\n                throw new java.lang.IllegalArgumentException(\"Strings must not be null\");\n            } \n            final double double = org.apache.commons.lang3.StringUtils.score(first, second);\n            final int int = org.apache.commons.lang3.StringUtils.commonPrefixLength(first, second);\n            final double double = (java.lang.Math.round(((jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))) * 100.0))) / 100.0;\n            return matchScore;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"second","invalidChars":"second"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4253","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.startsWithIgnoreCase(str, remove)"},"failures":[],"tindex":"94a6b875-2e89-11e6-a9ca-e1f93f6bfaff","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:618","type":"CtMethodImpl","sourcecode":"static java.lang.String[] getStackFrames(final java.lang.String stackTrace) {\n    if (org.apache.commons.lang3.StringUtils.startsWithIgnoreCase(stackTrace, stackTrace)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.String java.lang.String = org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.java.lang.String;\n            final java.util.StringTokenizer java.util.StringTokenizer = new java.util.StringTokenizer(stackTrace , linebreak);\n            final java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n            while (frames.hasMoreTokens()) {\n                list.add(frames.nextToken());\n            }\n            return list.toArray(new java.lang.String[list.size()]);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"stackTrace","remove":"stackTrace"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1499","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(seq)"},"failures":[262],"tindex":"94a6df86-2e89-11e6-a9ca-e9fde7d3b6a6","method":{"position":"org.apache.commons.lang3.StringUtils:5811","type":"CtMethodImpl","sourcecode":"public static int countMatches(final java.lang.CharSequence str, final java.lang.CharSequence sub) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(sub)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(sub))) {\n                return 0;\n            } \n            int int = 0;\n            int int = 0;\n            while ((idx = org.apache.commons.lang3.CharSequenceUtils.indexOf(str, sub, idx)) != (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) {\n                count++;\n                idx += sub.length();\n            }\n            return count;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"seq":"sub"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:768","type":"CtInvocationImpl","sourcecode":"str.trim().startsWith(\"--\")"},"failures":[152,152],"tindex":"94a6df87-2e89-11e6-a9ca-d5e1abfdeb24","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:815","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final float value) {\n    if (fieldName.trim().startsWith(\"--\")) {\n        {\n            appendFieldStart(buffer, fieldName);\n            appendDetail(buffer, fieldName, value);\n            appendFieldEnd(buffer, fieldName);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5381","type":"CtBinaryOperatorImpl","sourcecode":"pads > (org.apache.commons.lang3.StringUtils.PAD_LIMIT)"},"failures":[],"tindex":"94a6df88-2e89-11e6-a9ca-2d12f0c9ea24","method":{"position":"org.apache.commons.lang3.text.StrMatcher:431","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int isMatch(final char[] buffer, final int pos, final int bufferStart, final int bufferEnd) {\n    if (pos > pos) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (buffer[pos]) <= 32 ? 1 : 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pads":"pos","org.apache.commons.lang3.StringUtils.PAD_LIMIT":"pos"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:200","type":"CtBinaryOperatorImpl","sourcecode":"length < 0"},"failures":[263],"tindex":"94a70699-2e89-11e6-a9ca-0da93075e382","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:327","type":"CtMethodImpl","sourcecode":"public static int indexOfThrowable(final java.lang.Throwable throwable, final java.lang.Class<?> clazz, final int fromIndex) {\n    if (fromIndex < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.exception.ExceptionUtils.indexOf(throwable, clazz, fromIndex, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"fromIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5637","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"94a7069a-2e89-11e6-a9ca-8906ef1aa629","method":{"position":"org.apache.commons.lang3.time.FastDateParser:298","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Object parseObject(final java.lang.String source, final java.text.ParsePosition pos) {\n    if (source == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return parse(source, pos);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"source"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1312","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[],"tindex":"94a7069b-2e89-11e6-a9ca-6316f3a8b812","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:834","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final long[] array, final boolean fullDetail) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(fieldName)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, array, java.lang.Boolean.valueOf(fullDetail));\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3206","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[264,265,266],"tindex":"94a7069c-2e89-11e6-a9ca-573498a1218b","method":{"position":"org.apache.commons.lang3.ArrayUtils:2209","type":"CtMethodImpl","sourcecode":"public static int indexOf(final short[] array, final short valueToFind) {\n    if (array == null) {\n        {\n            return org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:561","type":"CtInvocationImpl","sourcecode":"causeFrame.equals(wrapperFrame)"},"failures":[267],"tindex":"94a72dad-2e89-11e6-a9ca-11ea5c3d168e","method":{"position":"org.apache.commons.lang3.StringUtils:4996","type":"CtMethodImpl","sourcecode":"public static java.lang.String chomp(final java.lang.String str) {\n    if (str.equals(str)) {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n                return str;\n            } \n            if ((str.length()) == 1) {\n                final char char = str.charAt(0);\n                if ((ch == (org.apache.commons.lang3.CharUtils.org.apache.commons.lang3.CharUtils.char)) || (ch == (org.apache.commons.lang3.CharUtils.org.apache.commons.lang3.CharUtils.char))) {\n                    return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n                } \n                return str;\n            } \n            int int = (str.length()) - 1;\n            final char char = str.charAt(lastIdx);\n            if (last == (org.apache.commons.lang3.CharUtils.org.apache.commons.lang3.CharUtils.char)) {\n                if ((str.charAt((lastIdx - 1))) == (org.apache.commons.lang3.CharUtils.org.apache.commons.lang3.CharUtils.char)) {\n                    lastIdx--;\n                } \n            } else if (last != (org.apache.commons.lang3.CharUtils.org.apache.commons.lang3.CharUtils.char)) {\n                lastIdx++;\n            } \n            return str.substring(0, lastIdx);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"causeFrame":"str","wrapperFrame":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSequenceUtils:74","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[268,269,44],"tindex":"94a72dae-2e89-11e6-a9ca-bfb2048cd878","method":{"position":"org.apache.commons.lang3.text.translate.JavaUnicodeEscaper:109","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.lang.String toUtf16Escape(final int codepoint) {\n    if (codepoint < 0) {\n        {\n            final char[] char[] = java.lang.Character.toChars(codepoint);\n            return ((\"\\\\u\" + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[0]))) + \"\\\\u\") + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(surrogatePair[1]));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"codepoint"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2377","type":"CtBinaryOperatorImpl","sourcecode":"pos == (org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND)"},"failures":[270],"tindex":"94a72daf-2e89-11e6-a9ca-d31dff8210d3","method":{"position":"org.apache.commons.lang3.StringUtils:3906","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final float[] array, final char separator, final int startIndex, final int endIndex) {\n    if (endIndex == startIndex) {\n        {\n            if (array == null) {\n                return null;\n            } \n            final int int = endIndex - startIndex;\n            if (noOfItems <= 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder((noOfItems * 16));\n            for (int int = startIndex ; i < endIndex ; i++) {\n                if (i > startIndex) {\n                    buf.append(separator);\n                } \n                buf.append(array[i]);\n            }\n            return buf.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND":"startIndex","pos":"endIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomUtils:115","type":"CtBinaryOperatorImpl","sourcecode":"startInclusive == endExclusive"},"failures":[271],"tindex":"94a754c0-2e89-11e6-a9ca-e36f9f4e5b21","method":{"position":"org.apache.commons.lang3.ArrayUtils:4482","type":"CtMethodImpl","sourcecode":"public static long[] add(final long[] array, final int index, final long element) {\n    if (element == element) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((long[])(org.apache.commons.lang3.ArrayUtils.add(array, index, java.lang.Long.valueOf(element), java.lang.Long.java.lang.Long.java.lang.Class<java.lang.Long>)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startInclusive":"element","endExclusive":"element"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:671","type":"CtInvocationImpl","sourcecode":"str.equals(nullString)"},"failures":[],"tindex":"94a754c1-2e89-11e6-a9ca-4b54927178d9","method":{"position":"org.apache.commons.lang3.text.StrBuilder:877","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendln(final java.lang.String str, final int startIndex, final int length) {\n    if (str.equals(str)) {\n        {\n            return append(str, startIndex, length).appendNewLine();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str","nullString":"str"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:690","type":"CtBinaryOperatorImpl","sourcecode":"(((nInts - 1) * 32) + dstPos) >= 64"},"failures":[272],"tindex":"94a754c2-2e89-11e6-a9ca-414a67076d90","method":{"position":"org.apache.commons.lang3.math.Fraction:546","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.math.Fraction pow(final int power) {\n    if ((((power - 1) * 32) + power) >= 64) {\n        {\n            if (power == 1) {\n                return org.apache.commons.lang3.math.Fraction.this;\n            } else if (power == 0) {\n                return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction;\n            } else if (power < 0) {\n                if (power == (java.lang.Integer.java.lang.Integer.int)) {\n                    return org.apache.commons.lang3.math.Fraction.this.invert().pow(2).pow((-(power / 2)));\n                } \n                return org.apache.commons.lang3.math.Fraction.this.invert().pow((-power));\n            } else {\n                final org.apache.commons.lang3.math.Fraction org.apache.commons.lang3.math.Fraction = org.apache.commons.lang3.math.Fraction.this.multiplyBy(org.apache.commons.lang3.math.Fraction.this);\n                if ((power % 2) == 0) {\n                    return f.pow((power / 2));\n                } else {\n                    return f.pow((power / 2)).multiplyBy(org.apache.commons.lang3.math.Fraction.this);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dstPos":"power","nInts":"power"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:603","type":"CtBinaryOperatorImpl","sourcecode":"(tokens) == null"},"failures":[273,274],"tindex":"94a77bd3-2e89-11e6-a9ca-6d492b0150dc","method":{"position":"org.apache.commons.lang3.StringUtils:258","type":"CtMethodImpl","sourcecode":"public static boolean isAnyEmpty(java.lang.CharSequence... css) {\n    if (css == null) {\n        {\n            if (org.apache.commons.lang3.ArrayUtils.isEmpty(css)) {\n                return true;\n            } \n            for (java.lang.CharSequence java.lang.CharSequence : css) {\n                if (org.apache.commons.lang3.StringUtils.isEmpty(cs)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"tokens":"css"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:726","type":"CtBinaryOperatorImpl","sourcecode":"strLen > 0"},"failures":[112,118,122,126,130,132,133,134,134,135,136,137,138,138,139,140,141,142,143,144,145,146,147,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,169,170,171,172,173,174,175,176,177,177,178,179,180,181,182,183,183,184,185,186,187,188,189,190,191,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,210,212,216,218,222,224,228],"tindex":"94a77bd4-2e89-11e6-a9ca-0572e685f5c0","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:689","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final int value) {\n    if (value > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"strLen":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:204","type":"CtBinaryOperatorImpl","sourcecode":"timePeriod <= 0"},"failures":[],"tindex":"94a77bd5-2e89-11e6-a9ca-edb9f73e2add","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:443","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final long value) {\n    if (value <= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, value);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timePeriod":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:258","type":"CtInvocationImpl","sourcecode":"java.lang.Float.isNaN(b)"},"failures":[275,276,277,278],"tindex":"94a7a2e6-2e89-11e6-a9ca-1f4bda8e5d90","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:568","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final float lhs, final float rhs) {\n    if (java.lang.Float.isNaN(lhs)) {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            int = java.lang.Float.compare(lhs, rhs);\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"lhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:474","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[],"tindex":"94a7a2e7-2e89-11e6-a9ca-115bd24d88f8","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:742","type":"CtMethodImpl","sourcecode":"public static void writeField(final java.lang.Object target, final java.lang.String fieldName, final java.lang.Object value, final boolean forceAccess) throws java.lang.IllegalAccessException {\n    if (value == null) {\n        throw new java.lang.IllegalAccessException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.isTrue((target != null), \"target object must not be null\");\n            final java.lang.Class<?> java.lang.Class<?> = target.getClass();\n            final java.lang.reflect.Field java.lang.reflect.Field = org.apache.commons.lang3.reflect.FieldUtils.getField(cls, fieldName, forceAccess);\n            org.apache.commons.lang3.Validate.isTrue((field != null), \"Cannot locate declared field %s.%s\", cls.getName(), fieldName);\n            org.apache.commons.lang3.reflect.FieldUtils.writeField(field, target, value, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.SystemUtils:1429","type":"CtBinaryOperatorImpl","sourcecode":"version == null"},"failures":[],"tindex":"94a7a2e8-2e89-11e6-a9ca-a18b2a6b88a6","method":{"position":"org.apache.commons.lang3.StringUtils:4516","type":"CtMethodImpl","sourcecode":"public static java.lang.String replace(final java.lang.String text, final java.lang.String searchString, final java.lang.String replacement, int max) {\n    if (text == null) {\n        {\n            if (max > max) {\n                {\n                    if ((((org.apache.commons.lang3.StringUtils.isEmpty(text)) || (org.apache.commons.lang3.StringUtils.isEmpty(searchString))) || (replacement == null)) || (max == 0)) {\n                        return text;\n                    } \n                    int int = 0;\n                    int int = text.indexOf(searchString, start);\n                    if (end == (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) {\n                        return text;\n                    } \n                    final int int = searchString.length();\n                    int int = (replacement.length()) - replLength;\n                    increase = increase < 0 ? 0 : increase;\n                    increase *= max < 0 ? 16 : max > 64 ? 64 : max;\n                    final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(((text.length()) + increase));\n                    while (end != (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) {\n                        buf.append(text.substring(start, end)).append(replacement);\n                        start = end + replLength;\n                        if ((--max) == 0) {\n                            break;\n                        } \n                        end = text.indexOf(searchString, start);\n                    }\n                    buf.append(text.substring(start));\n                    return buf.toString();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"version":"text"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:796","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[279],"tindex":"94a7c9f9-2e89-11e6-a9ca-9ba32599fd00","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:209","type":"CtMethodImpl","sourcecode":"public static java.lang.String replace(final java.lang.Object source, final java.util.Properties valueProperties) {\n    if (source == null) {\n        {\n            if (valueProperties == null) {\n                return source.toString();\n            } \n            final java.util.Map<java.lang.String, java.lang.String> java.util.Map<java.lang.String, java.lang.String> = new java.util.HashMap<java.lang.String, java.lang.String>();\n            final java.util.Enumeration<?> java.util.Enumeration<?> = valueProperties.propertyNames();\n            while (propNames.hasMoreElements()) {\n                final java.lang.String java.lang.String = ((java.lang.String)(propNames.nextElement()));\n                final java.lang.String java.lang.String = valueProperties.getProperty(propName);\n                valueMap.put(propName, propValue);\n            }\n            return org.apache.commons.lang3.text.StrSubstitutor.replace(source, valueMap);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"source"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:346","type":"CtUnaryOperatorImpl","sourcecode":"!(java.util.Arrays.equals(lhs, rhs))"},"failures":[],"tindex":"94a7c9fa-2e89-11e6-a9ca-b16b9b31f6ca","method":{"position":"org.apache.commons.lang3.SerializationUtils:177","type":"CtMethodImpl","sourcecode":"public static byte[] serialize(final java.io.Serializable obj) {\n    if (!(java.util.Arrays.equals(obj, obj))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream(512);\n            org.apache.commons.lang3.SerializationUtils.serialize(obj, baos);\n            return baos.toByteArray();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"obj","rhs":"obj"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDatePrinter:267","type":"CtBinaryOperatorImpl","sourcecode":"tokenLen == 1"},"failures":[80,81,280,6,14],"tindex":"94a7c9fb-2e89-11e6-a9ca-53d24cc07a5a","method":{"position":"org.apache.commons.lang3.ArrayUtils:2124","type":"CtMethodImpl","sourcecode":"public static int indexOf(final int[] array, final int valueToFind, int startIndex) {\n    if (valueToFind == 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                startIndex = 0;\n            } \n            for (int int = startIndex ; i < (array.int) ; i++) {\n                if (valueToFind == (array[i])) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"tokenLen":"valueToFind"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4218","type":"CtInvocationImpl","sourcecode":"str.startsWith(remove)"},"failures":[],"tindex":"94a7f10c-2e89-11e6-a9ca-4fea5b322996","method":{"position":"org.apache.commons.lang3.Conversion:1469","type":"CtMethodImpl","sourcecode":"public static java.lang.String shortToHex(final short src, final int srcPos, final java.lang.String dstInit, final int dstPos, final int nHexs) {\n    if (dstInit.startsWith(dstInit)) {\n        {\n            if (0 == nHexs) {\n                return dstInit;\n            } \n            if ((((nHexs - 1) * 4) + srcPos) >= 16) {\n                throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+srcPos is greather or equal to than 16\");\n            } \n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(dstInit);\n            int int = 0;\n            int int = sb.length();\n            for (int int = 0 ; i < nHexs ; i++) {\n                shift = (i * 4) + srcPos;\n                final int int = 15 & (src >> shift);\n                if ((dstPos + i) == append) {\n                    ++append;\n                    sb.append(org.apache.commons.lang3.Conversion.intToHexDigit(bits));\n                } else {\n                    sb.setCharAt((dstPos + i), org.apache.commons.lang3.Conversion.intToHexDigit(bits));\n                }\n            }\n            return sb.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"dstInit","remove":"dstInit"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:4838","type":"CtBinaryOperatorImpl","sourcecode":"index == (org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND)"},"failures":[],"tindex":"94a7f10d-2e89-11e6-a9ca-b300f6e8dc5e","method":{"position":"org.apache.commons.lang3.math.Fraction:657","type":"CtMethodImpl","sourcecode":"private static int mulPosAndCheck(final int x, final int y) {\n    if (x == x) {\n        {\n            final long long = ((long)(x)) * ((long)(y));\n            if (m > (java.lang.Integer.java.lang.Integer.int)) {\n                throw new java.lang.ArithmeticException(\"overflow: mulPos\");\n            } \n            return ((int)(m));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND":"x","index":"x"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:427","type":"CtBinaryOperatorImpl","sourcecode":"bool == null"},"failures":[281,282],"tindex":"94a7f10e-2e89-11e6-a9ca-772d66831b80","method":{"position":"org.apache.commons.lang3.BooleanUtils:122","type":"CtMethodImpl","sourcecode":"public static boolean isFalse(final java.lang.Boolean bool) {\n    if (bool == null) {\n        {\n            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean.equals(bool);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bool":"bool"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1102","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[283],"tindex":"94a8181f-2e89-11e6-a9ca-e328324883f7","method":{"position":"org.apache.commons.lang3.math.NumberUtils:302","type":"CtMethodImpl","sourcecode":"public static byte toByte(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.math.NumberUtils.toByte(str, ((byte)(0)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1813","type":"CtBinaryOperatorImpl","sourcecode":"insertLen != removeLen"},"failures":[284],"tindex":"94a81820-2e89-11e6-a9ca-ab6b3980b64d","method":{"position":"org.apache.commons.lang3.time.DateUtils:538","type":"CtMethodImpl","sourcecode":"public static java.util.Date setYears(final java.util.Date date, final int amount) {\n    if (amount != amount) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.set(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"insertLen":"amount","removeLen":"amount"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:208","type":"CtBinaryOperatorImpl","sourcecode":"((className.charAt(0)) == 'L') && ((className.charAt(((className.length()) - 1))) == ';')"},"failures":[],"tindex":"94a81821-2e89-11e6-a9ca-41fe85a02a06","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1895","type":"CtMethodImpl","sourcecode":"protected void setFieldSeparator(java.lang.String fieldSeparator) {\n    if (((fieldSeparator.charAt(0)) == 'L') && ((className.charAt(((className.length()) - 1))) == ';')) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (fieldSeparator == null) {\n                fieldSeparator = \"\";\n            } \n            org.apache.commons.lang3.builder.ToStringStyle.this.java.lang.String = fieldSeparator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"className":"fieldSeparator"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:877","type":"CtVariableReadImpl","sourcecode":"top"},"failures":[285,286],"tindex":"94a83e32-2e89-11e6-a9ca-7b9c50f80708","method":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:270","type":"CtMethodImpl","sourcecode":"public static java.lang.String formatPeriod(final long startMillis, final long endMillis, final java.lang.String format, final boolean padWithZeros, final java.util.TimeZone timezone) {\n    if (padWithZeros) {\n        {\n            final org.apache.commons.lang3.time.DurationFormatUtils.Token[] org.apache.commons.lang3.time.DurationFormatUtils.Token[] = org.apache.commons.lang3.time.DurationFormatUtils.lexx(format);\n            final java.util.Calendar java.util.Calendar = java.util.Calendar.getInstance(timezone);\n            start.setTime(new java.util.Date(startMillis));\n            final java.util.Calendar java.util.Calendar = java.util.Calendar.getInstance(timezone);\n            end.setTime(new java.util.Date(endMillis));\n            int int = (end.get(java.util.Calendar.java.util.Calendar.int)) - (start.get(java.util.Calendar.java.util.Calendar.int));\n            int int = (end.get(java.util.Calendar.java.util.Calendar.int)) - (start.get(java.util.Calendar.java.util.Calendar.int));\n            int int = (end.get(java.util.Calendar.java.util.Calendar.int)) - (start.get(java.util.Calendar.java.util.Calendar.int));\n            int int = (end.get(java.util.Calendar.java.util.Calendar.int)) - (start.get(java.util.Calendar.java.util.Calendar.int));\n            int int = (end.get(java.util.Calendar.java.util.Calendar.int)) - (start.get(java.util.Calendar.java.util.Calendar.int));\n            int int = (end.get(java.util.Calendar.java.util.Calendar.int)) - (start.get(java.util.Calendar.java.util.Calendar.int));\n            int int = (end.get(java.util.Calendar.java.util.Calendar.int)) - (start.get(java.util.Calendar.java.util.Calendar.int));\n            while (milliseconds < 0) {\n                milliseconds += 1000;\n                seconds -= 1;\n            }\n            while (seconds < 0) {\n                seconds += 60;\n                minutes -= 1;\n            }\n            while (minutes < 0) {\n                minutes += 60;\n                hours -= 1;\n            }\n            while (hours < 0) {\n                hours += 24;\n                days -= 1;\n            }\n            if (org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(tokens, org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n                while (days < 0) {\n                    days += start.getActualMaximum(java.util.Calendar.java.util.Calendar.int);\n                    months -= 1;\n                    start.add(java.util.Calendar.java.util.Calendar.int, 1);\n                }\n                while (months < 0) {\n                    months += 12;\n                    years -= 1;\n                }\n                if ((!(org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(tokens, org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object))) && (years != 0)) {\n                    while (years != 0) {\n                        months += 12 * years;\n                        years = 0;\n                    }\n                } \n            } else {\n                if (!(org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(tokens, org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object))) {\n                    int int = end.get(java.util.Calendar.java.util.Calendar.int);\n                    if (months < 0) {\n                        target -= 1;\n                    } \n                    while ((start.get(java.util.Calendar.java.util.Calendar.int)) != target) {\n                        days += (start.getActualMaximum(java.util.Calendar.java.util.Calendar.int)) - (start.get(java.util.Calendar.java.util.Calendar.int));\n                        if (((start instanceof java.util.GregorianCalendar) && ((start.get(java.util.Calendar.java.util.Calendar.int)) == (java.util.Calendar.java.util.Calendar.int))) && ((start.get(java.util.Calendar.java.util.Calendar.int)) == 29)) {\n                            days += 1;\n                        } \n                        start.add(java.util.Calendar.java.util.Calendar.int, 1);\n                        days += start.get(java.util.Calendar.java.util.Calendar.int);\n                    }\n                    years = 0;\n                } \n                while ((start.get(java.util.Calendar.java.util.Calendar.int)) != (end.get(java.util.Calendar.java.util.Calendar.int))) {\n                    days += start.getActualMaximum(java.util.Calendar.java.util.Calendar.int);\n                    start.add(java.util.Calendar.java.util.Calendar.int, 1);\n                }\n                months = 0;\n                while (days < 0) {\n                    days += start.getActualMaximum(java.util.Calendar.java.util.Calendar.int);\n                    months -= 1;\n                    start.add(java.util.Calendar.java.util.Calendar.int, 1);\n                }\n            }\n            if (!(org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(tokens, org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object))) {\n                hours += 24 * days;\n                days = 0;\n            } \n            if (!(org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(tokens, org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object))) {\n                minutes += 60 * hours;\n                hours = 0;\n            } \n            if (!(org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(tokens, org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object))) {\n                seconds += 60 * minutes;\n                minutes = 0;\n            } \n            if (!(org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(tokens, org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object))) {\n                milliseconds += 1000 * seconds;\n                seconds = 0;\n            } \n            return org.apache.commons.lang3.time.DurationFormatUtils.format(tokens, years, months, days, hours, minutes, seconds, milliseconds, padWithZeros);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"top":"padWithZeros"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:256","type":"CtBinaryOperatorImpl","sourcecode":"buffer == null"},"failures":[287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,86,307,285,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328],"tindex":"94a86543-2e89-11e6-a9ca-3f694d461898","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:842","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n    if (buffer == null) {\n        {\n            appendTo(buffer, calendar.get(int));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"buffer":"buffer"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:510","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"94a86544-2e89-11e6-a9ca-0f9642283937","method":{"position":"org.apache.commons.lang3.CharSequenceUtils:187","type":"CtMethodImpl","sourcecode":"static boolean regionMatches(final java.lang.CharSequence cs, final boolean ignoreCase, final int thisStart, final java.lang.CharSequence substring, final int start, final int length) {\n    if (substring == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((cs instanceof java.lang.String) && (substring instanceof java.lang.String)) {\n                return ((java.lang.String)(cs)).regionMatches(ignoreCase, thisStart, ((java.lang.String)(substring)), start, length);\n            } else {\n                int int = thisStart;\n                int int = start;\n                int int = length;\n                while ((tmpLen--) > 0) {\n                    char char = cs.charAt((index1++));\n                    char char = substring.charAt((index2++));\n                    if (c1 == c2) {\n                        continue;\n                    } \n                    if (!ignoreCase) {\n                        return false;\n                    } \n                    if (((java.lang.Character.toUpperCase(c1)) != (java.lang.Character.toUpperCase(c2))) && ((java.lang.Character.toLowerCase(c1)) != (java.lang.Character.toLowerCase(c2)))) {\n                        return false;\n                    } \n                }\n                return true;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"substring"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:291","type":"CtBinaryOperatorImpl","sourcecode":"trueValue == null"},"failures":[],"tindex":"94a88c55-2e89-11e6-a9ca-57f5365007a7","method":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:633","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj2) {\n    if (obj2 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj2 instanceof org.apache.commons.lang3.time.DurationFormatUtils.Token) {\n                final org.apache.commons.lang3.time.DurationFormatUtils.Token org.apache.commons.lang3.time.DurationFormatUtils.Token = ((org.apache.commons.lang3.time.DurationFormatUtils.Token)(obj2));\n                if ((org.apache.commons.lang3.time.DurationFormatUtils.Token.this.java.lang.Object.getClass()) != (tok2.java.lang.Object.getClass())) {\n                    return false;\n                } \n                if ((org.apache.commons.lang3.time.DurationFormatUtils.Token.this.int) != (tok2.int)) {\n                    return false;\n                } \n                if ((org.apache.commons.lang3.time.DurationFormatUtils.Token.this.java.lang.Object) instanceof java.lang.StringBuilder) {\n                    return org.apache.commons.lang3.time.DurationFormatUtils.Token.this.java.lang.Object.toString().equals(tok2.java.lang.Object.toString());\n                } else if ((org.apache.commons.lang3.time.DurationFormatUtils.Token.this.java.lang.Object) instanceof java.lang.Number) {\n                    return org.apache.commons.lang3.time.DurationFormatUtils.Token.this.java.lang.Object.equals(tok2.java.lang.Object);\n                } else {\n                    return (org.apache.commons.lang3.time.DurationFormatUtils.Token.this.java.lang.Object) == (tok2.java.lang.Object);\n                }\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trueValue":"obj2"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:765","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isBlank(str)"},"failures":[329,330],"tindex":"94a8b366-2e89-11e6-a9ca-2b12ea08e53f","method":{"position":"org.apache.commons.lang3.StringUtils:7512","type":"CtMethodImpl","sourcecode":"private static java.lang.String prependIfMissing(final java.lang.String str, final java.lang.CharSequence prefix, final boolean ignoreCase, final java.lang.CharSequence... prefixes) {\n    if (org.apache.commons.lang3.StringUtils.isBlank(prefix)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((str == null) || (org.apache.commons.lang3.StringUtils.isEmpty(prefix))) || (org.apache.commons.lang3.StringUtils.startsWith(str, prefix, ignoreCase))) {\n                return str;\n            } \n            if ((prefixes != null) && ((prefixes.int) > 0)) {\n                for (final java.lang.CharSequence java.lang.CharSequence : prefixes) {\n                    if (org.apache.commons.lang3.StringUtils.startsWith(str, p, ignoreCase)) {\n                        return str;\n                    } \n                }\n            } \n            return (prefix.toString()) + str;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"prefix"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:286","type":"CtBinaryOperatorImpl","sourcecode":"ch == null"},"failures":[331],"tindex":"94a8b367-2e89-11e6-a9ca-f78f45df2094","method":{"position":"org.apache.commons.lang3.CharUtils:379","type":"CtMethodImpl","sourcecode":"public static java.lang.String unicodeEscaped(final java.lang.Character ch) {\n    if (ch == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (ch == null) {\n                return null;\n            } \n            return org.apache.commons.lang3.CharUtils.unicodeEscaped(ch.charValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5890","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))"},"failures":[332],"tindex":"94a8b368-2e89-11e6-a9ca-db87d4682346","method":{"position":"org.apache.commons.lang3.ArrayUtils:3665","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final double[] array) {\n    if ((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(array))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (array != null) && ((array.int) != 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array","values":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1476","type":"CtBinaryOperatorImpl","sourcecode":"(str == null) || (searchStr == null)"},"failures":[94,95,96,97,98,99,100,101],"tindex":"94a8da79-2e89-11e6-a9ca-71f62e40b635","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:487","type":"CtMethodImpl","sourcecode":"static void unregister(final java.lang.Object value) {\n    if ((value == null) || (value == null)) {\n        {\n            java.util.Set<org.apache.commons.lang3.builder.IDKey> java.util.Set<org.apache.commons.lang3.builder.IDKey> = org.apache.commons.lang3.builder.HashCodeBuilder.getRegistry();\n            if (registry != null) {\n                registry.remove(new org.apache.commons.lang3.builder.IDKey(value));\n                synchronized(org.apache.commons.lang3.builder.HashCodeBuilder.org.apache.commons.lang3.builder.HashCodeBuilder.java.lang.Class) {\n                    registry = org.apache.commons.lang3.builder.HashCodeBuilder.getRegistry();\n                    if ((registry != null) && (registry.isEmpty())) {\n                        org.apache.commons.lang3.builder.HashCodeBuilder.org.apache.commons.lang3.builder.HashCodeBuilder.java.lang.ThreadLocal<java.util.Set<org.apache.commons.lang3.builder.IDKey>>.remove();\n                    } \n                }\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"value","searchStr":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1205","type":"CtBinaryOperatorImpl","sourcecode":"newSize <= 0"},"failures":[333],"tindex":"94a8da7a-2e89-11e6-a9ca-b745517587f6","method":{"position":"org.apache.commons.lang3.text.StrBuilder:942","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendln(final java.lang.StringBuffer str, final int startIndex, final int length) {\n    if (length <= 0) {\n        {\n            return append(str, startIndex, length).appendNewLine();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"newSize":"length"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:140","type":"CtInvocationImpl","sourcecode":"java.lang.Float.isNaN(b)"},"failures":[],"tindex":"94a8da7b-2e89-11e6-a9ca-d77704b8802d","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1049","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendln(final float value) {\n    if (java.lang.Float.isNaN(value)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return append(value).appendNewLine();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3368","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[334],"tindex":"94a8da7c-2e89-11e6-a9ca-731a39b6e1ce","method":{"position":"org.apache.commons.lang3.ArrayUtils:3137","type":"CtMethodImpl","sourcecode":"public static java.lang.Integer[] toObject(final int[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Integer[];\n            } \n            final java.lang.Integer[] java.lang.Integer[] = new java.lang.Integer[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = java.lang.Integer.valueOf(array[i]);\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2202","type":"CtBinaryOperatorImpl","sourcecode":"length <= 0"},"failures":[335,336],"tindex":"94a9018d-2e89-11e6-a9ca-e375f74ecab8","method":{"position":"org.apache.commons.lang3.Validate:687","type":"CtMethodImpl","sourcecode":"public static <T extends java.util.Collection<?>>T validIndex(final T collection, final int index, final java.lang.String message, final java.lang.Object... values) {\n    if (index <= 0) {\n        {\n            org.apache.commons.lang3.Validate.notNull(collection);\n            if ((index < 0) || (index >= (collection.size()))) {\n                throw new java.lang.IndexOutOfBoundsException(java.lang.String.format(message, values));\n            } \n            return collection;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"index"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}