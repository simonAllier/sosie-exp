{"failureDictionary":{"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":55,"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":205,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringString":20,"org.apache.commons.lang3.CharUtilsTest.testToIntValue_char":236,"org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testOutOfBounds":86,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":206,"org.apache.commons.lang3.LocaleUtilsTest.testLocaleLookupList_LocaleLocale":117,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":125,"org.apache.commons.lang3.CharUtilsTest.testToIntValue_Character":25,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":168,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNull":154,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":124,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStripAll":39,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":189,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHiragana":114,"org.apache.commons.lang3.text.translate.UnicodeUnescaperTest.testUuuuu":81,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":177,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultIsExceptionUnknown":52,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":191,"org.apache.commons.lang3.ClassUtilsTest.testGetClassByNormalNameArrays":64,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang708":102,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":213,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlVersions":112,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEmbeddedPatternInChoice":148,"org.apache.commons.lang3.ClassUtilsTest.testGetClassWithArrayClasses2D":67,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetMatchingAccessibleMethod":36,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml10":98,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":178,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":203,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml11":99,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringStringarray":19,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCyclicalObjectReferences":224,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfIntWithStartIndex":155,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":195,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":131,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEqualsHashcode":145,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testOverriddenBuiltinFormat":146,"org.apache.commons.lang3.ConversionTest.testHexDigitMsb0ToInt":158,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testExtendedFormats":149,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeEcmaScript":105,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":128,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJavaWithSlash":97,"org.apache.commons.lang3.RandomUtilsTest.testNextBytes":165,"org.apache.commons.lang3.exception.ExceptionUtilsTest.test_getRootCauseMessage_Throwable":166,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":171,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":6,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":175,"org.apache.commons.lang3.reflect.TypeLiteralTest.testBasic":240,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringStringarray":16,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringString":13,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":174,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionCompare":200,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEscapedQuote_LANG_477":147,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementIntArray":152,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairsLang858":75,"org.apache.commons.lang3.StringEscapeUtilsTest.testStandaloneAmphersand":92,"org.apache.commons.lang3.AnnotationUtilsTest.testNonEquivalentAnnotationsOfSameType":60,"org.apache.commons.lang3.RandomUtilsTest.testNextBytesNegative":164,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsIgnoreCase_LocaleIndependence":5,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeMethod":37,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":135,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeUnknownEntity":113,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_primitive_nullInput":242,"org.apache.commons.lang3.StringUtilsTest.testUnescapeSurrogatePairs":26,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":210,"org.apache.commons.lang3.ClassUtilsTest.testHierarchyIncludingInterfaces":53,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeNested":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":180,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":136,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":127,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":137,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":138,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtml":94,"org.apache.commons.lang3.CharUtilsTest.testToIntValue_char_int":235,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":215,"org.apache.commons.lang3.AnnotationUtilsTest.testEquivalence":58,"org.apache.commons.lang3.time.DateUtilsTest.testIsSameLocalTime_Cal":243,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":192,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionHierarchyEquals":226,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayChar":28,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_Boolean":73,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBetween":78,"org.apache.commons.lang3.CharUtilsTest.testIsAsciiAlphanumeric_char":232,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetResultObjectUnknown":51,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":219,"org.apache.commons.lang3.text.translate.OctalUnescaperTest.testBetween":83,"org.apache.commons.lang3.ValidateTest.testInclusiveBetweenLong_withMessage":120,"org.apache.commons.lang3.ClassUtilsTest.testGetInnerClass":65,"org.apache.commons.lang3.text.translate.UnicodeUnescaperTest.testUPlus":80,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":116,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEqualsExcludeFields":225,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringString":15,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":208,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":222,"org.apache.commons.lang3.ClassUtilsTest.testGetClassWithArrayClasses":66,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBetween":89,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testInteger":230,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":186,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":194,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvWriter":111,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairs":2,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeStaticMethod":35,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringString":18,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang720":103,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixture":228,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":190,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringStringarray":17,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":144,"org.apache.commons.lang3.BooleanUtilsTest.testXor_object_validInput_3items":8,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayToObjectArray":43,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":188,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_String":62,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHexCharsHtml":108,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeXmlSupplementaryCharacters":109,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":209,"org.apache.commons.lang3.CharUtilsTest.testToIntValue_Character_int":233,"org.apache.commons.lang3.text.StrBuilderTest.testMidString":30,"org.apache.commons.lang3.math.NumberUtilsTest.testMaximumInt":61,"org.apache.commons.lang3.text.translate.UnicodeUnescaperTest.testLessThanFour":82,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":184,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":187,"org.apache.commons.lang3.reflect.TypeUtilsTest.testParameterizeWithOwner":238,"org.apache.commons.lang3.math.NumberUtilsTest.testToIntString":153,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":182,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":27,"org.apache.commons.lang3.BitFieldTest.testSetBoolean":72,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang313":101,"org.apache.commons.lang3.mutable.MutableDoubleTest.testSubtractValuePrimitive":1,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":202,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayBoolean":31,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":181,"org.apache.commons.lang3.text.StrMatcherTest.testCharSetMatcher_charArray":143,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":204,"org.apache.commons.lang3.StringUtilsTest.testIsAllLowerCase":24,"org.apache.commons.lang3.StringUtilsTest.testIsNotEmpty":12,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":220,"org.apache.commons.lang3.reflect.TypeLiteralTest.testTyped":241,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":126,"org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testUnfinishedEntity":85,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":217,"org.apache.commons.lang3.mutable.MutableIntTest.testCompareToNull":71,"org.apache.commons.lang3.builder.DiffBuilderTest.testSimilarObjectIgnoresAppends":214,"org.apache.commons.lang3.mutable.MutableObjectTest.testEquals":161,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsIgnoreCase_StringString":4,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testDoubleArray":0,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlSupplementaryCharacters":100,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeExternalExec":50,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":170,"org.apache.commons.lang3.ClassUtilsTest.test_getShortClassName_Class":196,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":179,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvString":3,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testSupplementary":79,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":216,"org.apache.commons.lang3.ClassUtilsTest.test_getShortClassName_Object":197,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBelow":77,"org.apache.commons.lang3.BooleanUtilsTest.testXor_object_nullElementInput":9,"org.apache.commons.lang3.ValidateTest.testInclusiveBetweenLong":157,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStrip_StringString":40,"org.apache.commons.lang3.StringUtilsTest.testGetJaroWinklerDistance_StringString":44,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHtml4":93,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBelow":88,"org.apache.commons.lang3.LocaleUtilsTest.testLocaleLookupList_Locale":118,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":212,"org.apache.commons.lang3.BooleanUtilsTest.testXor_object_validInput_2items":7,"org.apache.commons.lang3.time.DateUtilsTest.testToCalendar":57,"org.apache.commons.lang3.reflect.TypeUtilsTest.testParameterize":237,"org.apache.commons.lang3.text.StrMatcherTest.testSplitMatcher":142,"org.apache.commons.lang3.StringUtilsTest.testLANG666":38,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testAbove":76,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfInt":156,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":121,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":122,"org.apache.commons.lang3.text.StrMatcherTest.testQuoteMatcher":141,"org.apache.commons.lang3.exception.ExceptionUtilsTest.test_getMessage_Throwable":167,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":56,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":95,"org.apache.commons.lang3.RandomUtilsTest.testZeroLengthNextBytes":163,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSummaryObjectStartText":119,"org.apache.commons.lang3.ClassUtilsTest.testGetClassByNormalNameArrays2D":68,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":185,"org.apache.commons.lang3.ClassUtilsTest.testWithInterleavingWhitespace":69,"org.apache.commons.lang3.BooleanUtilsTest.testXor_object_emptyInput":10,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":173,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":123,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareExcludeFields":198,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":91,"org.apache.commons.lang3.text.StrBuilderTest.testContains_String":32,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_long":162,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":139,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":211,"org.apache.commons.lang3.text.StrMatcherTest.testCharSetMatcher_String":140,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":104,"org.apache.commons.lang3.CharUtilsTest.testIsAsciiNumeric_char":234,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGenericArrayType":239,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvWriter":106,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":132,"org.apache.commons.lang3.ClassUtilsTest.testGetClassInvalidArguments":74,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testIntegerWithTransients":227,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml":115,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":218,"org.apache.commons.lang3.StringUtilsTest.testCaseFunctions":244,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetMatchingAccessibleMethod":34,"org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testSupplementaryUnescaping":84,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareTransients":201,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testIsNotEmpty":23,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultInitializerNamesModify":45,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJson":96,"org.apache.commons.lang3.ConversionTest.testByteToBinary":11,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":176,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_String":63,"org.apache.commons.lang3.CharUtilsTest.testToChar_String":231,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEquals":223,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":90,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testAbove":87,"org.apache.commons.lang3.AnnotationUtilsTest.testGeneratedAnnotationEquivalentToRealAnnotation":59,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":221,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStripEnd_StringString":41,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetInitializerUnknown":49,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlHighUnicode":107,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":207,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringStringarray":22,"org.apache.commons.lang3.ConversionTest.testBinaryToShort":29,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetExceptionUnknown":46,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":193,"org.apache.commons.lang3.ArrayUtilsTest.testHashCode":151,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixtureWithTransients":229,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":130,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":129,"org.apache.commons.lang3.ClassUtilsTest.testHierarchyExcludingInterfaces":54,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":172,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":160,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompare":199,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":133,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringString":14,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeTempExec":48,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testExtendedAndBuiltInFormats":150,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringStringarray":21,"org.apache.commons.lang3.ClassUtilsTest.testGetClassRawPrimitives":70,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":169,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":134,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeConstructor":33,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvString":110,"org.apache.commons.lang3.ArrayUtilsTest.testContainsBoolean":42,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":183,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":159},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1115","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[0],"tindex":"e184f3bf-2eaf-11e6-b955-eb5a556c5190","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:689","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final double[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                int = (int) * (int);\n            } else {\n                for (final double double : array) {\n                    append(element);\n                }\n            }\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:1127","type":"CtBinaryOperatorImpl","sourcecode":"(value <= start) || (value >= end)"},"failures":[1],"tindex":"e185b710-2eaf-11e6-b955-c52c74525b9c","method":{"position":"org.apache.commons.lang3.mutable.MutableDouble:177","type":"CtMethodImpl","sourcecode":"public void subtract(final double operand) {\n    if ((operand <= operand) || (value >= operand)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.mutable.MutableDouble.this.double -= operand;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"operand","end":"operand","value":"operand"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.JavaVersion:144","type":"CtInvocationImpl","sourcecode":"\"1.6\".equals(nom)"},"failures":[2,3],"tindex":"e185de21-2eaf-11e6-b955-21a0ac21ae69","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:776","type":"CtMethodImpl","sourcecode":"public static final java.lang.String escapeCsv(final java.lang.String input) {\n    if (\"1.6\".equals(input)) {\n        {\n            return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nom":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSet:174","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[4,5],"tindex":"e185de22-2eaf-11e6-b955-c979a6773572","method":{"position":"org.apache.commons.lang3.StringUtils:1475","type":"CtMethodImpl","sourcecode":"public static boolean containsIgnoreCase(final java.lang.CharSequence str, final java.lang.CharSequence searchStr) {\n    if (searchStr == null) {\n        {\n            if ((str == null) || (searchStr == null)) {\n                return false;\n            } \n            final int int = searchStr.length();\n            final int int = (str.length()) - len;\n            for (int int = 0 ; i <= max ; i++) {\n                if (org.apache.commons.lang3.CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, len)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"searchStr"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3135","type":"CtBinaryOperatorImpl","sourcecode":"(sizePlus1++) == max"},"failures":[],"tindex":"e1860533-2eaf-11e6-b955-076eac689d47","method":{"position":"org.apache.commons.lang3.ArrayUtils:4420","type":"CtMethodImpl","sourcecode":"public static short[] add(final short[] array, final int index, final short element) {\n    if ((index++) == index) {\n        {\n            return ((short[])(org.apache.commons.lang3.ArrayUtils.add(array, index, java.lang.Short.valueOf(element), java.lang.Short.java.lang.Short.java.lang.Class<java.lang.Short>)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sizePlus1":"index","max":"index"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:220","type":"CtBinaryOperatorImpl","sourcecode":"lhs != rhs"},"failures":[6,6],"tindex":"e1860534-2eaf-11e6-b955-899805a1e793","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:303","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final byte value) {\n    if (value != value) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, value);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"value","rhs":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:1009","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[7,8,9,10],"tindex":"e1862c45-2eaf-11e6-b955-2b427bc00e40","method":{"position":"org.apache.commons.lang3.BooleanUtils:1073","type":"CtMethodImpl","sourcecode":"public static java.lang.Boolean xor(final java.lang.Boolean... array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n            } \n            if ((array.int) == 0) {\n                throw new java.lang.IllegalArgumentException(\"Array is empty\");\n            } \n            try {\n                final boolean[] boolean[] = org.apache.commons.lang3.ArrayUtils.toPrimitive(array);\n                return org.apache.commons.lang3.BooleanUtils.xor(primitive) ? java.lang.Boolean.java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n            } catch (final java.lang.NullPointerException ex) {\n                throw new java.lang.IllegalArgumentException(\"The array must not contain any null elements\");\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1072","type":"CtBinaryOperatorImpl","sourcecode":"suffix == null"},"failures":[],"tindex":"e1862c46-2eaf-11e6-b955-4321a1d1a15e","method":{"position":"org.apache.commons.lang3.builder.RecursiveToStringStyle:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void appendDetail(java.lang.StringBuffer buffer, java.lang.String fieldName, java.util.Collection<?> coll) {\n    if (fieldName == null) {\n        {\n            appendClassName(buffer, coll);\n            appendIdentityHashCode(buffer, coll);\n            appendDetail(buffer, fieldName, coll.toArray());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"suffix":"fieldName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:726","type":"CtBinaryOperatorImpl","sourcecode":"strLen > 0"},"failures":[11],"tindex":"e1865357-2eaf-11e6-b955-c10c5295c801","method":{"position":"org.apache.commons.lang3.Conversion:1653","type":"CtMethodImpl","sourcecode":"public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos, final int nBools) {\n    if (dstPos > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (0 == nBools) {\n                return dst;\n            } \n            if (((nBools - 1) + srcPos) >= 8) {\n                throw new java.lang.IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n            } \n            int int = 0;\n            for (int int = 0 ; i < nBools ; i++) {\n                shift = (i * 1) + srcPos;\n                dst[(dstPos + i)] = (1 & (src >> shift)) != 0;\n            }\n            return dst;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"strLen":"dstPos"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:653","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[12,13,14,15,16,17,18,19,20,21,22,23],"tindex":"e1865358-2eaf-11e6-b955-1b744d780de9","method":{"position":"org.apache.commons.lang3.StringUtils:237","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final java.lang.CharSequence cs) {\n    if (cs == null) {\n        {\n            return !(org.apache.commons.lang3.StringUtils.isEmpty(cs));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"cs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:696","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[24],"tindex":"e1867a69-2eaf-11e6-b955-4f5202336ba6","method":{"position":"org.apache.commons.lang3.StringUtils:6135","type":"CtMethodImpl","sourcecode":"public static boolean isAllLowerCase(final java.lang.CharSequence cs) {\n    if (cs == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((cs == null) || (org.apache.commons.lang3.StringUtils.isEmpty(cs))) {\n                return false;\n            } \n            final int int = cs.length();\n            for (int int = 0 ; i < sz ; i++) {\n                if ((java.lang.Character.isLowerCase(cs.charAt(i))) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"cs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:150","type":"CtBinaryOperatorImpl","sourcecode":"ch == null"},"failures":[25],"tindex":"e1867a6a-2eaf-11e6-b955-077f196e129c","method":{"position":"org.apache.commons.lang3.CharUtils:262","type":"CtMethodImpl","sourcecode":"public static int toIntValue(final java.lang.Character ch) {\n    if (ch == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (ch == null) {\n                throw new java.lang.IllegalArgumentException(\"The character must not be null\");\n            } \n            return org.apache.commons.lang3.CharUtils.toIntValue(ch.charValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrMatcher:193","type":"CtBinaryOperatorImpl","sourcecode":"(chars.length()) == 1"},"failures":[26],"tindex":"e186a17b-2eaf-11e6-b955-93daf3f9bc5f","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:640","type":"CtMethodImpl","sourcecode":"public static final java.lang.String unescapeHtml3(final java.lang.String input) {\n    if ((input.length()) == 1) {\n        {\n            return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chars":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3622","type":"CtBinaryOperatorImpl","sourcecode":"i > startIndex"},"failures":[],"tindex":"e186a17c-2eaf-11e6-b955-370ec2c8f709","method":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:138","type":"CtMethodImpl","sourcecode":"protected java.lang.String toUtf16Escape(final int codepoint) {\n    if (codepoint > codepoint) {\n        {\n            return \"\\\\u\" + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(codepoint));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"codepoint","i":"codepoint"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:739","type":"CtBinaryOperatorImpl","sourcecode":"(lhs == null) || (rhs == null)"},"failures":[27,27],"tindex":"e186c88d-2eaf-11e6-b955-bb203112ec55","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1089","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final short[] array, final java.lang.Boolean fullDetail) {\n    if ((array == null) || (array == null)) {\n        {\n            appendFieldStart(buffer, fieldName);\n            if (array == null) {\n                appendNullText(buffer, fieldName);\n            } else if (isFullDetail(fullDetail)) {\n                appendDetail(buffer, fieldName, array);\n            } else {\n                appendSummary(buffer, fieldName, array);\n            }\n            appendFieldEnd(buffer, fieldName);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array","rhs":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:434","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[28],"tindex":"e186c88e-2eaf-11e6-b955-31cc6b7e81be","method":{"position":"org.apache.commons.lang3.ArrayUtils:4097","type":"CtMethodImpl","sourcecode":"public static char[] add(final char[] array, final char element) {\n    if (array == null) {\n        {\n            final char[] char[] = ((char[])(org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(array, java.lang.Character.java.lang.Character.java.lang.Class<java.lang.Character>)));\n            newArray[((newArray.int) - 1)] = element;\n            return newArray;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5558","type":"CtBinaryOperatorImpl","sourcecode":"pads <= 0"},"failures":[29],"tindex":"e186ef9f-2eaf-11e6-b955-1303b030bf66","method":{"position":"org.apache.commons.lang3.Conversion:1115","type":"CtMethodImpl","sourcecode":"public static short binaryToShort(final boolean[] src, final int srcPos, final short dstInit, final int dstPos, final int nBools) {\n    if (srcPos <= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((((src.int) == 0) && (srcPos == 0)) || (0 == nBools)) {\n                return dstInit;\n            } \n            if (((nBools - 1) + dstPos) >= 16) {\n                throw new java.lang.IllegalArgumentException(\"nBools-1+dstPos is greather or equal to than 16\");\n            } \n            short short = dstInit;\n            int int = 0;\n            for (int int = 0 ; i < nBools ; i++) {\n                shift = (i * 1) + dstPos;\n                final int int = (src[(i + srcPos)] ? 1 : 0) << shift;\n                final int int = 1 << shift;\n                out = ((short)((out & (~mask)) | bits));\n            }\n            return out;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pads":"srcPos"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2873","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[30],"tindex":"e186efa0-2eaf-11e6-b955-6126d1937ead","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2227","type":"CtMethodImpl","sourcecode":"public java.lang.String midString(int index, final int length) {\n    if (index < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (index < 0) {\n                index = 0;\n            } \n            if ((length <= 0) || (index >= (int))) {\n                return \"\";\n            } \n            if ((int) <= (index + length)) {\n                return new java.lang.String(char[] , index , ((int) - index));\n            } \n            return new java.lang.String(char[] , index , length);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:1150","type":"CtBinaryOperatorImpl","sourcecode":"(value <= start) || (value >= end)"},"failures":[],"tindex":"e186efa1-2eaf-11e6-b955-15ae9d0d253f","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:547","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final double lhs, final double rhs) {\n    if ((rhs <= rhs) || (value >= lhs)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            int = java.lang.Double.compare(lhs, rhs);\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"rhs","end":"lhs","value":"rhs"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1327","type":"CtBinaryOperatorImpl","sourcecode":"(((nBytes - 1) * 8) + srcPos) >= 32"},"failures":[31],"tindex":"e18716b2-2eaf-11e6-b955-6f45d51e4a85","method":{"position":"org.apache.commons.lang3.ArrayUtils:1194","type":"CtMethodImpl","sourcecode":"public static boolean[] subarray(final boolean[] array, int startIndexInclusive, int endIndexExclusive) {\n    if ((((startIndexInclusive - 1) * 8) + startIndexInclusive) >= 32) {\n        {\n            if (array == null) {\n                return null;\n            } \n            if (startIndexInclusive < 0) {\n                startIndexInclusive = 0;\n            } \n            if (endIndexExclusive > (array.int)) {\n                endIndexExclusive = array.int;\n            } \n            final int int = endIndexExclusive - startIndexInclusive;\n            if (newSize <= 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.boolean[];\n            } \n            final boolean[] boolean[] = new boolean[newSize];\n            java.lang.System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);\n            return subarray;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nBytes":"startIndexInclusive","srcPos":"startIndexInclusive"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1247","type":"CtBinaryOperatorImpl","sourcecode":"str != null"},"failures":[32],"tindex":"e18716b3-2eaf-11e6-b955-25bd26a6cf30","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2263","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.String str) {\n    if (str != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (indexOf(str, 0)) >= 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:728","type":"CtBinaryOperatorImpl","sourcecode":"classes == null"},"failures":[33,34,35,36,37],"tindex":"e18716b4-2eaf-11e6-b955-adcbd8632b3d","method":{"position":"org.apache.commons.lang3.reflect.MemberUtils:100","type":"CtMethodImpl","sourcecode":"static int compareParameterTypes(final java.lang.Class<?>[] left, final java.lang.Class<?>[] right, final java.lang.Class<?>[] actual) {\n    if (right == null) {\n        {\n            final float float = org.apache.commons.lang3.reflect.MemberUtils.getTotalTransformationCost(actual, left);\n            final float float = org.apache.commons.lang3.reflect.MemberUtils.getTotalTransformationCost(actual, right);\n            return leftCost < rightCost ? -1 : rightCost < leftCost ? 1 : 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classes":"right"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:311","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[],"tindex":"e1873dc5-2eaf-11e6-b955-dd2deed1e1fe","method":{"position":"org.apache.commons.lang3.Conversion:1584","type":"CtMethodImpl","sourcecode":"public static boolean[] intToBinary(final int src, final int srcPos, final boolean[] dst, final int dstPos, final int nBools) {\n    if (nBools == (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (0 == nBools) {\n                return dst;\n            } \n            if (((nBools - 1) + srcPos) >= 32) {\n                throw new java.lang.IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 32\");\n            } \n            int int = 0;\n            for (int int = 0 ; i < nBools ; i++) {\n                shift = (i * 1) + srcPos;\n                dst[(dstPos + i)] = (1 & (src >> shift)) != 0;\n            }\n            return dst;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"nBools"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:70","type":"CtBinaryOperatorImpl","sourcecode":"pattern == null"},"failures":[38,39,40,41],"tindex":"e1873dc6-2eaf-11e6-b955-d5ba7ba2369e","method":{"position":"org.apache.commons.lang3.StringUtils:661","type":"CtMethodImpl","sourcecode":"public static java.lang.String stripEnd(final java.lang.String str, final java.lang.String stripChars) {\n    if (stripChars == null) {\n        {\n            int int;\n            if ((str == null) || ((end = str.length()) == 0)) {\n                return str;\n            } \n            if (stripChars == null) {\n                while ((end != 0) && (java.lang.Character.isWhitespace(str.charAt((end - 1))))) {\n                    end--;\n                }\n            } else if (stripChars.isEmpty()) {\n                return str;\n            } else {\n                while ((end != 0) && ((stripChars.indexOf(str.charAt((end - 1)))) != (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int))) {\n                    end--;\n                }\n            }\n            return str.substring(0, end);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pattern":"stripChars"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6393","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"e1873dc7-2eaf-11e6-b955-e11895c34906","method":{"position":"org.apache.commons.lang3.SystemUtils:1464","type":"CtMethodImpl","sourcecode":"static boolean isOSNameMatch(final java.lang.String osName, final java.lang.String osNamePrefix) {\n    if (osNamePrefix == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (osName == null) {\n                return false;\n            } \n            return osName.startsWith(osNamePrefix);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"osNamePrefix"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2245","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"e18764d8-2eaf-11e6-b955-6f2354cf5211","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:814","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final long[] array) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, array, null);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:361","type":"CtFieldReadImpl","sourcecode":"fieldSeparatorAtStart"},"failures":[42],"tindex":"e18764d9-2eaf-11e6-b955-0380ac1c1867","method":{"position":"org.apache.commons.lang3.ArrayUtils:2939","type":"CtMethodImpl","sourcecode":"public static boolean contains(final boolean[] array, final boolean valueToFind) {\n    if (valueToFind) {\n        {\n            return (org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind)) != (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldSeparatorAtStart":"valueToFind"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3821","type":"CtBinaryOperatorImpl","sourcecode":"array1 == null"},"failures":[43],"tindex":"e18764da-2eaf-11e6-b955-599430d75e6d","method":{"position":"org.apache.commons.lang3.ArrayUtils:3820","type":"CtMethodImpl","sourcecode":"public static byte[] addAll(final byte[] array1, final byte... array2) {\n    if (array2 == null) {\n        {\n            if (array1 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array2);\n            } else if (array2 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array1);\n            } \n            final byte[] byte[] = new byte[(array1.int) + (array2.int)];\n            java.lang.System.arraycopy(array1, 0, joinedArray, 0, array1.int);\n            java.lang.System.arraycopy(array2, 0, joinedArray, array1.int, array2.int);\n            return joinedArray;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array1":"array2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:667","type":"CtInvocationImpl","sourcecode":"str.equals(trueString)"},"failures":[44],"tindex":"e1878beb-2eaf-11e6-b955-39d43b4a732e","method":{"position":"org.apache.commons.lang3.StringUtils:7112","type":"CtMethodImpl","sourcecode":"private static int transpositions(java.lang.CharSequence first, java.lang.CharSequence second) {\n    if (first.equals(first)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            for (int int = 0 ; i < (first.length()) ; i++) {\n                if ((first.charAt(i)) != (second.charAt(i))) {\n                    transpositions++;\n                } \n            }\n            return transpositions / 2;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"first","trueString":"first"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:657","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[45,46,47,48,49,50,51,52],"tindex":"e1878bec-2eaf-11e6-b955-0d34728e37d8","method":{"position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:263","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.concurrent.BackgroundInitializer<?> getInitializer(final java.lang.String name) {\n    if (name == null) {\n        {\n            return checkName(name);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"name"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:1072","type":"CtBinaryOperatorImpl","sourcecode":"cls == null"},"failures":[53,54,55,56],"tindex":"e1878bed-2eaf-11e6-b955-bb8be59c466a","method":{"position":"org.apache.commons.lang3.ClassUtils:1161","type":"CtMethodImpl","sourcecode":"public static java.lang.Iterable<java.lang.Class<?>> hierarchy(final java.lang.Class<?> type, org.apache.commons.lang3.ClassUtils.Interfaces interfacesBehavior) {\n    if (type == null) {\n        {\n            final java.lang.Iterable<java.lang.Class<?>> java.lang.Iterable<java.lang.Class<?>> = new java.lang.Iterable<java.lang.Class<?>>() {\n                @java.lang.Override\n                public java.util.Iterator<java.lang.Class<?>> iterator() {\n                    final org.apache.commons.lang3.mutable.MutableObject<java.lang.Class<?>> org.apache.commons.lang3.mutable.MutableObject<java.lang.Class<?>> = new org.apache.commons.lang3.mutable.MutableObject<java.lang.Class<?>>(type);\n                    return new java.util.Iterator<java.lang.Class<?>>() {\n                        @java.lang.Override\n                        public boolean hasNext() {\n                            return (next.getValue()) != null;\n                        }\n\n                        @java.lang.Override\n                        public java.lang.Class<?> next() {\n                            final java.lang.Class<?> java.lang.Class<?> = next.getValue();\n                            next.setValue(result.getSuperclass());\n                            return result;\n                        }\n\n                        @java.lang.Override\n                        public void remove() {\n                            throw new java.lang.UnsupportedOperationException();\n                        }\n                    };\n                }\n            };\n            if (interfacesBehavior != (org.apache.commons.lang3.ClassUtils.Interfaces.org.apache.commons.lang3.ClassUtils.Interfaces.org.apache.commons.lang3.ClassUtils.Interfaces)) {\n                return classes;\n            } \n            return new java.lang.Iterable<java.lang.Class<?>>() {\n                @java.lang.Override\n                public java.util.Iterator<java.lang.Class<?>> iterator() {\n                    final java.util.Set<java.lang.Class<?>> java.util.Set<java.lang.Class<?>> = new java.util.HashSet<java.lang.Class<?>>();\n                    final java.util.Iterator<java.lang.Class<?>> java.util.Iterator<java.lang.Class<?>> = classes.iterator();\n                    return new java.util.Iterator<java.lang.Class<?>>() {\n                        java.util.Iterator<java.lang.Class<?>> interfaces = java.util.Collections.<java.lang.Class<?>>emptySet().iterator();\n\n                        @java.lang.Override\n                        public boolean hasNext() {\n                            return (java.util.Iterator<java.lang.Class<?>>.hasNext()) || (wrapped.hasNext());\n                        }\n\n                        @java.lang.Override\n                        public java.lang.Class<?> next() {\n                            if (java.util.Iterator<java.lang.Class<?>>.hasNext()) {\n                                final java.lang.Class<?> java.lang.Class<?> = java.util.Iterator<java.lang.Class<?>>.next();\n                                seenInterfaces.add(nextInterface);\n                                return nextInterface;\n                            } \n                            final java.lang.Class<?> java.lang.Class<?> = wrapped.next();\n                            final java.util.Set<java.lang.Class<?>> java.util.Set<java.lang.Class<?>> = new java.util.LinkedHashSet<java.lang.Class<?>>();\n                            walkInterfaces(currentInterfaces, nextSuperclass);\n                            java.util.Iterator<java.lang.Class<?>> = currentInterfaces.iterator();\n                            return nextSuperclass;\n                        }\n\n                        private void walkInterfaces(java.util.Set<java.lang.Class<?>> addTo, java.lang.Class<?> c) {\n                            for (java.lang.Class<?> java.lang.Class<?> : c.getInterfaces()) {\n                                if (!(seenInterfaces.contains(iface))) {\n                                    addTo.add(iface);\n                                } \n                                walkInterfaces(addTo, iface);\n                            }\n                        }\n\n                        @java.lang.Override\n                        public void remove() {\n                            throw new java.lang.UnsupportedOperationException();\n                        }\n                    };\n                }\n            };\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"type"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1648","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[57],"tindex":"e187da0e-2eaf-11e6-b955-8732ed37d1d9","method":{"position":"org.apache.commons.lang3.time.DateUtils:667","type":"CtMethodImpl","sourcecode":"public static java.util.Calendar toCalendar(final java.util.Date date) {\n    if (date == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Calendar java.util.Calendar = java.util.Calendar.getInstance();\n            c.setTime(date);\n            return c;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:891","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[58,59,60],"tindex":"e187da0f-2eaf-11e6-b955-5f8e1a454b5c","method":{"position":"org.apache.commons.lang3.AnnotationUtils:263","type":"CtMethodImpl","sourcecode":"private static boolean memberEquals(final java.lang.Class<?> type, final java.lang.Object o1, final java.lang.Object o2) {\n    if (o2 == o2) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (o1 == o2) {\n                return true;\n            } \n            if ((o1 == null) || (o2 == null)) {\n                return false;\n            } \n            if (type.isArray()) {\n                return org.apache.commons.lang3.AnnotationUtils.arrayMemberEquals(type.getComponentType(), o1, o2);\n            } \n            if (type.isAnnotation()) {\n                return org.apache.commons.lang3.AnnotationUtils.equals(((java.lang.annotation.Annotation)(o1)), ((java.lang.annotation.Annotation)(o2)));\n            } \n            return o1.equals(o2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"o2","rhs":"o2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5198","type":"CtBinaryOperatorImpl","sourcecode":"index < (length - 1)"},"failures":[61],"tindex":"e187da10-2eaf-11e6-b955-5709b6dd1997","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1222","type":"CtMethodImpl","sourcecode":"public static int max(int a, final int b, final int c) {\n    if (c < (a - 1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (b > a) {\n                a = b;\n            } \n            if (c > a) {\n                a = c;\n            } \n            return a;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"a","index":"c"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.reflect.MemberUtils:138","type":"CtBinaryOperatorImpl","sourcecode":"(destClass.isInterface()) && (org.apache.commons.lang3.ClassUtils.isAssignable(srcClass, destClass))"},"failures":[],"tindex":"e1880121-2eaf-11e6-b955-bfc65733b059","method":{"position":"org.apache.commons.lang3.reflect.MethodUtils:215","type":"CtMethodImpl","sourcecode":"public static java.lang.Object invokeExactStaticMethod(final java.lang.Class<?> cls, final java.lang.String methodName, java.lang.Object[] args, java.lang.Class<?>[] parameterTypes) throws java.lang.IllegalAccessException, java.lang.NoSuchMethodException, java.lang.reflect.InvocationTargetException {\n    if ((cls.isInterface()) && (org.apache.commons.lang3.ClassUtils.isAssignable(cls, destClass))) {\n        throw new java.lang.IllegalAccessException();\n    } else {\n        {\n            args = org.apache.commons.lang3.ArrayUtils.nullToEmpty(args);\n            parameterTypes = org.apache.commons.lang3.ArrayUtils.nullToEmpty(parameterTypes);\n            final java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethod(cls, methodName, parameterTypes);\n            if (method == null) {\n                throw new java.lang.NoSuchMethodException((((\"No such accessible method: \" + methodName) + \"() on class: \") + (cls.getName())));\n            } \n            return method.invoke(null, args);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcClass":"cls","destClass":"cls"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:435","type":"CtBinaryOperatorImpl","sourcecode":"(newLine) == null"},"failures":[62,63],"tindex":"e1880122-2eaf-11e6-b955-97678e5905a5","method":{"position":"org.apache.commons.lang3.BooleanUtils:547","type":"CtMethodImpl","sourcecode":"public static java.lang.Boolean toBooleanObject(final java.lang.String str) {\n    if (str == null) {\n        {\n            if (str == \"true\") {\n                return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n            } \n            if (str == null) {\n                return null;\n            } \n            switch (str.length()) {\n                case 1 :\n                    {\n                        final char char = str.charAt(0);\n                        if ((((ch0 == 'y') || (ch0 == 'Y')) || (ch0 == 't')) || (ch0 == 'T')) {\n                            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                        } \n                        if ((((ch0 == 'n') || (ch0 == 'N')) || (ch0 == 'f')) || (ch0 == 'F')) {\n                            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                        } \n                        break;\n                    }\n                case 2 :\n                    {\n                        final char char = str.charAt(0);\n                        final char char = str.charAt(1);\n                        if (((ch0 == 'o') || (ch0 == 'O')) && ((ch1 == 'n') || (ch1 == 'N'))) {\n                            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                        } \n                        if (((ch0 == 'n') || (ch0 == 'N')) && ((ch1 == 'o') || (ch1 == 'O'))) {\n                            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                        } \n                        break;\n                    }\n                case 3 :\n                    {\n                        final char char = str.charAt(0);\n                        final char char = str.charAt(1);\n                        final char char = str.charAt(2);\n                        if ((((ch0 == 'y') || (ch0 == 'Y')) && ((ch1 == 'e') || (ch1 == 'E'))) && ((ch2 == 's') || (ch2 == 'S'))) {\n                            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                        } \n                        if ((((ch0 == 'o') || (ch0 == 'O')) && ((ch1 == 'f') || (ch1 == 'F'))) && ((ch2 == 'f') || (ch2 == 'F'))) {\n                            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                        } \n                        break;\n                    }\n                case 4 :\n                    {\n                        final char char = str.charAt(0);\n                        final char char = str.charAt(1);\n                        final char char = str.charAt(2);\n                        final char char = str.charAt(3);\n                        if (((((ch0 == 't') || (ch0 == 'T')) && ((ch1 == 'r') || (ch1 == 'R'))) && ((ch2 == 'u') || (ch2 == 'U'))) && ((ch3 == 'e') || (ch3 == 'E'))) {\n                            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                        } \n                        break;\n                    }\n                case 5 :\n                    {\n                        final char char = str.charAt(0);\n                        final char char = str.charAt(1);\n                        final char char = str.charAt(2);\n                        final char char = str.charAt(3);\n                        final char char = str.charAt(4);\n                        if ((((((ch0 == 'f') || (ch0 == 'F')) && ((ch1 == 'a') || (ch1 == 'A'))) && ((ch2 == 'l') || (ch2 == 'L'))) && ((ch3 == 's') || (ch3 == 'S'))) && ((ch4 == 'e') || (ch4 == 'E'))) {\n                            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                        } \n                        break;\n                    }\n                default :\n                    break;\n            }\n            return null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"newLine":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:151","type":"CtBinaryOperatorImpl","sourcecode":"methodName != null"},"failures":[],"tindex":"e1882833-2eaf-11e6-b955-57f553dcac15","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:589","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final int[] lhs, final int[] rhs) {\n    if (fieldName != null) {\n        {\n            if (fieldName == null) {\n                throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n            } \n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if (!(java.util.Arrays.equals(lhs, rhs))) {\n                java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Integer[]>(fieldName) {\n                    private static final long serialVersionUID = 1L;\n\n                    @java.lang.Override\n                    public java.lang.Integer[] getLeft() {\n                        return org.apache.commons.lang3.ArrayUtils.toObject(lhs);\n                    }\n\n                    @java.lang.Override\n                    public java.lang.Integer[] getRight() {\n                        return org.apache.commons.lang3.ArrayUtils.toObject(rhs);\n                    }\n                });\n            } \n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodName":"fieldName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.ClassNotFoundException","condition":{"position":"org.apache.commons.lang3.CharUtils:109","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[64,65,66,67,68,69,70],"tindex":"e1884f44-2eaf-11e6-b955-43a3466de8eb","method":{"position":"org.apache.commons.lang3.ClassUtils:876","type":"CtMethodImpl","sourcecode":"public static java.lang.Class<?> getClass(final java.lang.String className) throws java.lang.ClassNotFoundException {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(className)) {\n        {\n            return org.apache.commons.lang3.ClassUtils.getClass(className, true);\n        }\n    } else {\n        throw new java.lang.ClassNotFoundException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"className"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5363","type":"CtBinaryOperatorImpl","sourcecode":"count == null"},"failures":[71],"tindex":"e1884f45-2eaf-11e6-b955-d9eae0e28267","method":{"position":"org.apache.commons.lang3.mutable.MutableInt:260","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int compareTo(final org.apache.commons.lang3.mutable.MutableInt other) {\n    if (other == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = other.int;\n            return (int) < anotherVal ? -1 : (int) == anotherVal ? 0 : 1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"other"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:130","type":"CtBinaryOperatorImpl","sourcecode":"expression == false"},"failures":[72],"tindex":"e1884f46-2eaf-11e6-b955-09d69e5cd816","method":{"position":"org.apache.commons.lang3.BitField:253","type":"CtMethodImpl","sourcecode":"public int setBoolean(final int holder, final boolean flag) {\n    if (flag == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return flag ? set(holder) : clear(holder);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"expression":"flag"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:220","type":"CtBinaryOperatorImpl","sourcecode":"lhs != rhs"},"failures":[],"tindex":"e1884f47-2eaf-11e6-b955-4524c6e964e6","method":{"position":"org.apache.commons.lang3.mutable.MutableByte:158","type":"CtMethodImpl","sourcecode":"public void subtract(final byte operand) {\n    if (operand != operand) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.mutable.MutableByte.this.byte -= operand;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"operand","rhs":"operand"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:466","type":"CtBinaryOperatorImpl","sourcecode":"bool == null"},"failures":[73],"tindex":"e1887658-2eaf-11e6-b955-975f6b110cd0","method":{"position":"org.apache.commons.lang3.BooleanUtils:158","type":"CtMethodImpl","sourcecode":"public static boolean toBoolean(final java.lang.Boolean bool) {\n    if (bool == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (bool != null) && (bool.booleanValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bool":"bool"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.ClassNotFoundException","condition":{"position":"org.apache.commons.lang3.StringUtils:6451","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(middle))"},"failures":[74],"tindex":"e1887659-2eaf-11e6-b955-abdd9406289e","method":{"position":"org.apache.commons.lang3.ClassUtils:891","type":"CtMethodImpl","sourcecode":"public static java.lang.Class<?> getClass(final java.lang.String className, final boolean initialize) throws java.lang.ClassNotFoundException {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(className)) || (org.apache.commons.lang3.StringUtils.isEmpty(className))) {\n        throw new java.lang.ClassNotFoundException();\n    } else {\n        {\n            final java.lang.ClassLoader java.lang.ClassLoader = java.lang.Thread.currentThread().getContextClassLoader();\n            final java.lang.ClassLoader java.lang.ClassLoader = contextCL == null ? org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.java.lang.Class.getClassLoader() : contextCL;\n            return org.apache.commons.lang3.ClassUtils.getClass(loader, className, initialize);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"className","middle":"className"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.StringUtils:863","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(seq)"},"failures":[2,26,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,3,106,107,108,109,110,111,112,113,114,115,116],"tindex":"e188765a-2eaf-11e6-b955-c10700e2d456","method":{"position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:75","type":"CtMethodImpl","sourcecode":"public final void translate(final java.lang.CharSequence input, final java.io.Writer out) throws java.io.IOException {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(input)) {\n        {\n            if (out == null) {\n                throw new java.lang.IllegalArgumentException(\"The Writer must not be null\");\n            } \n            if (input == null) {\n                return ;\n            } \n            int int = 0;\n            final int int = input.length();\n            while (pos < len) {\n                final int int = translate(input, pos, out);\n                if (consumed == 0) {\n                    final char[] char[] = java.lang.Character.toChars(java.lang.Character.codePointAt(input, pos));\n                    out.write(c);\n                    pos += c.int;\n                    continue;\n                } \n                for (int int = 0 ; pt < consumed ; pt++) {\n                    pos += java.lang.Character.charCount(java.lang.Character.codePointAt(input, pos));\n                }\n            }\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"seq":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1031","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"e1889d6b-2eaf-11e6-b955-054dfdfea2fa","method":{"position":"org.apache.commons.lang3.ArrayUtils:5502","type":"CtMethodImpl","sourcecode":"public static int[] removeAll(final int[] array, final int... indices) {\n    if (indices == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((int[])(org.apache.commons.lang3.ArrayUtils.removeAll(((java.lang.Object)(array)), org.apache.commons.lang3.ArrayUtils.clone(indices))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"indices"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:777","type":"CtBinaryOperatorImpl","sourcecode":"(w.bitLength()) > 31"},"failures":[],"tindex":"e1889d6c-2eaf-11e6-b955-49c498988365","method":{"position":"org.apache.commons.lang3.mutable.MutableFloat:107","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setValue(final java.lang.Number value) {\n    if ((value.bitLength()) > 31) {\n        {\n            org.apache.commons.lang3.mutable.MutableFloat.this.float = value.floatValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"w":"value"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDateParser:284","type":"CtInvocationImpl","sourcecode":"locale.equals(org.apache.commons.lang3.time.FastDateParser.JAPANESE_IMPERIAL)"},"failures":[117,118],"tindex":"e188c47d-2eaf-11e6-b955-61a9e5d048a4","method":{"position":"org.apache.commons.lang3.LocaleUtils:194","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.util.Locale> localeLookupList(final java.util.Locale locale, final java.util.Locale defaultLocale) {\n    if (defaultLocale.equals(locale)) {\n        {\n            final java.util.List<java.util.Locale> java.util.List<java.util.Locale> = new java.util.ArrayList<java.util.Locale>(4);\n            if (locale != null) {\n                list.add(locale);\n                if ((locale.getVariant().length()) > 0) {\n                    list.add(new java.util.Locale(locale.getLanguage() , locale.getCountry()));\n                } \n                if ((locale.getCountry().length()) > 0) {\n                    list.add(new java.util.Locale(locale.getLanguage() , \"\"));\n                } \n                if ((list.contains(defaultLocale)) == false) {\n                    list.add(defaultLocale);\n                } \n            } \n            return java.util.Collections.unmodifiableList(list);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"locale":"defaultLocale","org.apache.commons.lang3.time.FastDateParser.JAPANESE_IMPERIAL":"locale"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDateParser:463","type":"CtBinaryOperatorImpl","sourcecode":"(formatField.length()) > 2"},"failures":[],"tindex":"e188c47e-2eaf-11e6-b955-6159f0d361e4","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:328","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setFieldNameValueSeparator(final java.lang.String fieldNameValueSeparator) {\n    if ((fieldNameValueSeparator.length()) > 2) {\n        {\n            super.setFieldNameValueSeparator(fieldNameValueSeparator);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"formatField":"fieldNameValueSeparator"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:121","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"e188c47f-2eaf-11e6-b955-a92a6bc89e43","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:676","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final double[] array) {\n    if (fieldName == null) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, array, null);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4323","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.endsWithIgnoreCase(str, remove)"},"failures":[],"tindex":"e188c480-2eaf-11e6-b955-2f2cdb7da94e","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:376","type":"CtMethodImpl","sourcecode":"public void appendStart(final java.lang.StringBuffer buffer, final java.lang.Object object) {\n    if (org.apache.commons.lang3.StringUtils.endsWithIgnoreCase(object, object)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object != null) {\n                appendClassName(buffer, object);\n                appendIdentityHashCode(buffer, object);\n                appendContentStart(buffer);\n                if (boolean) {\n                    appendFieldSeparator(buffer);\n                } \n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"object","remove":"object"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4284","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(remove))"},"failures":[119],"tindex":"e188eb91-2eaf-11e6-b955-0f0868b434a3","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2065","type":"CtMethodImpl","sourcecode":"protected void setSummaryObjectStartText(java.lang.String summaryObjectStartText) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(summaryObjectStartText)) || (org.apache.commons.lang3.StringUtils.isEmpty(summaryObjectStartText))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (summaryObjectStartText == null) {\n                summaryObjectStartText = \"\";\n            } \n            org.apache.commons.lang3.builder.ToStringStyle.this.java.lang.String = summaryObjectStartText;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"summaryObjectStartText","remove":"summaryObjectStartText"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.SerializationUtils:105","type":"CtBinaryOperatorImpl","sourcecode":"in != null"},"failures":[],"tindex":"e188eb92-2eaf-11e6-b955-1d1c28ab763a","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:568","type":"CtMethodImpl","sourcecode":"private void readObject(final java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {\n    if (in != null) {\n        {\n            in.defaultReadObject();\n            init();\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"in":"in"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1792","type":"CtBinaryOperatorImpl","sourcecode":"arraySeparator == null"},"failures":[120],"tindex":"e188eb93-2eaf-11e6-b955-bf518dc3f09f","method":{"position":"org.apache.commons.lang3.Validate:966","type":"CtMethodImpl","sourcecode":"public static void inclusiveBetween(long start, long end, long value, java.lang.String message) {\n    if (message == null) {\n        {\n            if ((value < start) || (value > end)) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"arraySeparator":"message"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomStringUtils:246","type":"CtBinaryOperatorImpl","sourcecode":"end <= start"},"failures":[121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150],"tindex":"e18912a4-2eaf-11e6-b955-454c84aa3f61","method":{"position":"org.apache.commons.lang3.text.StrMatcher:300","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int isMatch(final char[] buffer, final int pos, final int bufferStart, final int bufferEnd) {\n    if (bufferEnd <= bufferStart) {\n        {\n            return (java.util.Arrays.binarySearch(char[], buffer[pos])) >= 0 ? 1 : 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"bufferStart","end":"bufferEnd"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1077","type":"CtBinaryOperatorImpl","sourcecode":"genericInterface != null"},"failures":[],"tindex":"e18912a5-2eaf-11e6-b955-b359285c430b","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1363","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Type unrollVariables(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> typeArguments, final java.lang.reflect.Type type) {\n    if (type != null) {\n        {\n            if (typeArguments == null) {\n                typeArguments = java.util.Collections.<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>emptyMap();\n            } \n            if (org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(type)) {\n                if (type instanceof java.lang.reflect.TypeVariable<?>) {\n                    return org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(typeArguments, typeArguments.get(type));\n                } \n                if (type instanceof java.lang.reflect.ParameterizedType) {\n                    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(type));\n                    final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>;\n                    if ((p.getOwnerType()) == null) {\n                        parameterizedTypeArguments = typeArguments;\n                    } else {\n                        parameterizedTypeArguments = new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>(typeArguments);\n                        parameterizedTypeArguments.putAll(org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(p));\n                    }\n                    final java.lang.reflect.Type[] java.lang.reflect.Type[] = p.getActualTypeArguments();\n                    for (int int = 0 ; i < (args.int) ; i++) {\n                        final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(parameterizedTypeArguments, args[i]);\n                        if (unrolled != null) {\n                            args[i] = unrolled;\n                        } \n                    }\n                    return org.apache.commons.lang3.reflect.TypeUtils.parameterizeWithOwner(p.getOwnerType(), ((java.lang.Class<?>)(p.getRawType())), args);\n                } \n                if (type instanceof java.lang.reflect.WildcardType) {\n                    final java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(type));\n                    return org.apache.commons.lang3.reflect.TypeUtils.wildcardType().withUpperBounds(org.apache.commons.lang3.reflect.TypeUtils.unrollBounds(typeArguments, wild.getUpperBounds())).withLowerBounds(org.apache.commons.lang3.reflect.TypeUtils.unrollBounds(typeArguments, wild.getLowerBounds())).build();\n                } \n            } \n            return type;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"genericInterface":"type"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSequenceUtils:164","type":"CtBinaryOperatorImpl","sourcecode":"cs instanceof java.lang.String"},"failures":[],"tindex":"e18939b6-2eaf-11e6-b955-4feefc54a5d4","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1468","type":"CtMethodImpl","sourcecode":"protected void appendIdentityHashCode(final java.lang.StringBuffer buffer, final java.lang.Object object) {\n    if (object instanceof java.lang.String) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.builder.ToStringStyle.this.isUseIdentityHashCode()) && (object != null)) {\n                org.apache.commons.lang3.builder.ToStringStyle.register(object);\n                buffer.append('@');\n                buffer.append(java.lang.Integer.toHexString(java.lang.System.identityHashCode(object)));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1155","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[151],"tindex":"e18939b7-2eaf-11e6-b955-6ff1fea3ff76","method":{"position":"org.apache.commons.lang3.ArrayUtils:189","type":"CtMethodImpl","sourcecode":"public static int hashCode(final java.lang.Object array) {\n    if (array == null) {\n        {\n            return new org.apache.commons.lang3.builder.HashCodeBuilder().append(array).toHashCode();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:981","type":"CtBinaryOperatorImpl","sourcecode":"field == (java.util.Calendar.SECOND)"},"failures":[],"tindex":"e18960c8-2eaf-11e6-b955-d1e0c3f39938","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2919","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void mark(final int readAheadLimit) {\n    if (readAheadLimit == readAheadLimit) {\n        {\n            int = int;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.util.Calendar.SECOND":"readAheadLimit","field":"readAheadLimit"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3138","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[152],"tindex":"e18960c9-2eaf-11e6-b955-a93335fb9517","method":{"position":"org.apache.commons.lang3.ArrayUtils:5533","type":"CtMethodImpl","sourcecode":"public static int[] removeElements(final int[] array, final int... values) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            final java.util.HashMap<java.lang.Integer, org.apache.commons.lang3.mutable.MutableInt> java.util.HashMap<java.lang.Integer, org.apache.commons.lang3.mutable.MutableInt> = new java.util.HashMap<java.lang.Integer, org.apache.commons.lang3.mutable.MutableInt>(values.int);\n            for (final int int : values) {\n                final java.lang.Integer java.lang.Integer = java.lang.Integer.valueOf(v);\n                final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = occurrences.get(boxed);\n                if (count == null) {\n                    occurrences.put(boxed, new org.apache.commons.lang3.mutable.MutableInt(1));\n                } else {\n                    count.increment();\n                }\n            }\n            final java.util.BitSet java.util.BitSet = new java.util.BitSet();\n            for (final java.util.Map.Entry<java.lang.Integer, org.apache.commons.lang3.mutable.MutableInt> java.util.Map.Entry<java.lang.Integer, org.apache.commons.lang3.mutable.MutableInt> : occurrences.entrySet()) {\n                final java.lang.Integer java.lang.Integer = e.getKey();\n                int int = 0;\n                for (int int = 0, int int = e.getValue().intValue() ; i < ct ; i++) {\n                    found = org.apache.commons.lang3.ArrayUtils.indexOf(array, v.intValue(), found);\n                    if (found < 0) {\n                        break;\n                    } \n                    toRemove.set((found++));\n                }\n            }\n            return ((int[])(org.apache.commons.lang3.ArrayUtils.removeAll(array, toRemove)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:204","type":"CtBinaryOperatorImpl","sourcecode":"timePeriod <= 0"},"failures":[],"tindex":"e18987da-2eaf-11e6-b955-219cac71bae7","method":{"position":"org.apache.commons.lang3.mutable.MutableLong:96","type":"CtMethodImpl","sourcecode":"public void setValue(final long value) {\n    if (value <= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.mutable.MutableLong.this.long = value;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timePeriod":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:963","type":"CtInvocationImpl","sourcecode":"className.endsWith(\"[]\")"},"failures":[153],"tindex":"e18987db-2eaf-11e6-b955-e525df63ea5a","method":{"position":"org.apache.commons.lang3.math.NumberUtils:99","type":"CtMethodImpl","sourcecode":"public static int toInt(final java.lang.String str) {\n    if (str.endsWith(\"[]\")) {\n        {\n            return org.apache.commons.lang3.math.NumberUtils.toInt(str, 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"className":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1644","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[154],"tindex":"e18987dc-2eaf-11e6-b955-590f6c3fa16e","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:433","type":"CtMethodImpl","sourcecode":"public java.lang.String replace(final char[] source) {\n    if (source == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (source == null) {\n                return null;\n            } \n            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(source.int).append(source);\n            substitute(buf, 0, source.int);\n            return buf.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"source"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:4968","type":"CtBinaryOperatorImpl","sourcecode":"index == (org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND)"},"failures":[155,156],"tindex":"e18987dd-2eaf-11e6-b955-fb0e411b5794","method":{"position":"org.apache.commons.lang3.ArrayUtils:2149","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final int[] array, final int valueToFind) {\n    if (valueToFind == valueToFind) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.java.lang.Integer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND":"valueToFind","index":"valueToFind"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1208","type":"CtBinaryOperatorImpl","sourcecode":"c > a"},"failures":[157],"tindex":"e189aeee-2eaf-11e6-b955-1f7945d7aee7","method":{"position":"org.apache.commons.lang3.Validate:943","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"boxing\")\npublic static void inclusiveBetween(long start, long end, long value) {\n    if (value > value) {\n        {\n            if ((value < start) || (value > end)) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.java.lang.String, value, start, end));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"value","c":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:829","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[43],"tindex":"e189aeef-2eaf-11e6-b955-998f10860afc","method":{"position":"org.apache.commons.lang3.ArrayUtils:3965","type":"CtMethodImpl","sourcecode":"public static double[] addAll(final double[] array1, final double... array2) {\n    if (array1 == array1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array1 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array2);\n            } else if (array2 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array1);\n            } \n            final double[] double[] = new double[(array1.int) + (array2.int)];\n            java.lang.System.arraycopy(array1, 0, joinedArray, 0, array1.int);\n            java.lang.System.arraycopy(array2, 0, joinedArray, array1.int, array2.int);\n            return joinedArray;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array1","rhs":"array1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharRange:242","type":"CtBinaryOperatorImpl","sourcecode":"(start) != (end)"},"failures":[158],"tindex":"e189aef0-2eaf-11e6-b955-e524ec7cb1d9","method":{"position":"org.apache.commons.lang3.Conversion:102","type":"CtMethodImpl","sourcecode":"public static int hexDigitMsb0ToInt(final char hexDigit) {\n    if (hexDigit != hexDigit) {\n        {\n            switch (hexDigit) {\n                case '0' :\n                    return 0;\n                case '1' :\n                    return 8;\n                case '2' :\n                    return 4;\n                case '3' :\n                    return 12;\n                case '4' :\n                    return 2;\n                case '5' :\n                    return 10;\n                case '6' :\n                    return 6;\n                case '7' :\n                    return 14;\n                case '8' :\n                    return 1;\n                case '9' :\n                    return 9;\n                case 'a' :\n                case 'A' :\n                    return 5;\n                case 'b' :\n                case 'B' :\n                    return 13;\n                case 'c' :\n                case 'C' :\n                    return 3;\n                case 'd' :\n                case 'D' :\n                    return 11;\n                case 'e' :\n                case 'E' :\n                    return 7;\n                case 'f' :\n                case 'F' :\n                    return 15;\n                default :\n                    throw new java.lang.IllegalArgumentException(((\"Cannot interpret '\" + hexDigit) + \"' as a hexadecimal digit\"));\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"hexDigit","end":"hexDigit"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5414","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(padStr)"},"failures":[159,159,160],"tindex":"e189d601-2eaf-11e6-b955-c144a9f6797b","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:717","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final short value) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(fieldName)) {\n        {\n            buffer.append(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"padStr":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:863","type":"CtBinaryOperatorImpl","sourcecode":"(lhs == null) || (rhs == null)"},"failures":[161],"tindex":"e189d602-2eaf-11e6-b955-e3486dddc89a","method":{"position":"org.apache.commons.lang3.mutable.MutableObject:93","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj == null) || (obj == null)) {\n        {\n            if (obj == null) {\n                return false;\n            } \n            if ((org.apache.commons.lang3.mutable.MutableObject.this) == obj) {\n                return true;\n            } \n            if ((org.apache.commons.lang3.mutable.MutableObject.this.getClass()) == (obj.getClass())) {\n                final org.apache.commons.lang3.mutable.MutableObject<?> org.apache.commons.lang3.mutable.MutableObject<?> = ((org.apache.commons.lang3.mutable.MutableObject<?>)(obj));\n                return org.apache.commons.lang3.mutable.MutableObject.this.T.equals(that.?);\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"obj","rhs":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3048","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[162],"tindex":"e189fd13-2eaf-11e6-b955-29b5c5969882","method":{"position":"org.apache.commons.lang3.ArrayUtils:3025","type":"CtMethodImpl","sourcecode":"public static long[] toPrimitive(final java.lang.Long[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.long[];\n            } \n            final long[] long[] = new long[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = array[i].longValue();\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:945","type":"CtBinaryOperatorImpl","sourcecode":"(value < start) || (value > end)"},"failures":[],"tindex":"e189fd14-2eaf-11e6-b955-6ddc878dd4d7","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1204","type":"CtMethodImpl","sourcecode":"public static long max(long a, final long b, final long c) {\n    if ((a < a) || (value > a)) {\n        {\n            if (b > a) {\n                a = b;\n            } \n            if (c > a) {\n                a = c;\n            } \n            return a;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"a","end":"a","value":"a"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:6033","type":"CtBinaryOperatorImpl","sourcecode":"diff < length"},"failures":[163,164,165],"tindex":"e189fd15-2eaf-11e6-b955-0531953d392a","method":{"position":"org.apache.commons.lang3.RandomUtils:62","type":"CtMethodImpl","sourcecode":"public static byte[] nextBytes(int count) {\n    if (count < count) {\n        {\n            org.apache.commons.lang3.Validate.isTrue((count >= 0), \"Count cannot be negative.\");\n            byte[] byte[] = new byte[count];\n            org.apache.commons.lang3.RandomUtils.org.apache.commons.lang3.RandomUtils.java.util.Random.nextBytes(result);\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"count","diff":"count"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5801","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))"},"failures":[],"tindex":"e189fd16-2eaf-11e6-b955-a3ebdda3da18","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:424","type":"CtMethodImpl","sourcecode":"public static java.lang.Object readField(final java.lang.Object target, final java.lang.String fieldName, final boolean forceAccess) throws java.lang.IllegalAccessException {\n    if ((org.apache.commons.lang3.ArrayUtils.isEmpty(target)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(target))) {\n        throw new java.lang.IllegalAccessException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.isTrue((target != null), \"target object must not be null\");\n            final java.lang.Class<?> java.lang.Class<?> = target.getClass();\n            final java.lang.reflect.Field java.lang.reflect.Field = org.apache.commons.lang3.reflect.FieldUtils.getField(cls, fieldName, forceAccess);\n            org.apache.commons.lang3.Validate.isTrue((field != null), \"Cannot locate field %s on %s\", fieldName, cls);\n            return org.apache.commons.lang3.reflect.FieldUtils.readField(field, target, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"target","values":"target"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:894","type":"CtBinaryOperatorImpl","sourcecode":"first == second"},"failures":[],"tindex":"e18a2427-2eaf-11e6-b955-f1ff7e3c5435","method":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:370","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic T get(final long timeout, final java.util.concurrent.TimeUnit unit) {\n    if (timeout == timeout) {\n        {\n            return T;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"first":"timeout","second":"timeout"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.AnnotationUtils:273","type":"CtInvocationImpl","sourcecode":"type.isAnnotation()"},"failures":[166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,180,181,182,183,184,185,185,186,187,188,189,190,191,192,193,194,195,196,197],"tindex":"e18a2428-2eaf-11e6-b955-07b5a2d67f29","method":{"position":"org.apache.commons.lang3.ClassUtils:175","type":"CtMethodImpl","sourcecode":"public static java.lang.String getShortClassName(final java.lang.Class<?> cls) {\n    if (cls.isAnnotation()) {\n        {\n            if (cls == null) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            return org.apache.commons.lang3.ClassUtils.getShortClassName(cls.getName());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"cls"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:520","type":"CtBinaryOperatorImpl","sourcecode":"toClassArray == null"},"failures":[],"tindex":"e18a4b39-2eaf-11e6-b955-5f0f57656451","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:68","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeBuilder withUpperBounds(java.lang.reflect.Type... bounds) {\n    if (bounds == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeBuilder.this.java.lang.reflect.Type[] = bounds;\n            return org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toClassArray":"bounds"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:969","type":"CtInvocationImpl","sourcecode":"cls.equals(superClass)"},"failures":[198,199,200,201],"tindex":"e18a4b3a-2eaf-11e6-b955-31a137458d47","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:305","type":"CtMethodImpl","sourcecode":"private static void reflectionAppend(final java.lang.Object lhs, final java.lang.Object rhs, final java.lang.Class<?> clazz, final org.apache.commons.lang3.builder.CompareToBuilder builder, final boolean useTransients, final java.lang.String[] excludeFields) {\n    if (clazz.equals(clazz)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.reflect.Field[] java.lang.reflect.Field[] = clazz.getDeclaredFields();\n            java.lang.reflect.AccessibleObject.setAccessible(fields, true);\n            for (int int = 0 ; (i < (fields.int)) && ((builder.int) == 0) ; i++) {\n                final java.lang.reflect.Field java.lang.reflect.Field = fields[i];\n                if ((((!(org.apache.commons.lang3.ArrayUtils.contains(excludeFields, f.getName()))) && ((f.getName().indexOf('$')) == (-1))) && (useTransients || (!(java.lang.reflect.Modifier.isTransient(f.getModifiers()))))) && (!(java.lang.reflect.Modifier.isStatic(f.getModifiers())))) {\n                    try {\n                        builder.append(f.get(lhs), f.get(rhs));\n                    } catch (final java.lang.IllegalAccessException e) {\n                        throw new java.lang.InternalError(\"Unexpected IllegalAccessException\");\n                    }\n                } \n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"superClass":"clazz","cls":"clazz"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.tuple.Pair:134","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Map.Entry<?, ?>"},"failures":[202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,198,199,201,227,228,229,230],"tindex":"e18a4b3b-2eaf-11e6-b955-49aaf5c1686a","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:153","type":"CtMethodImpl","sourcecode":"static boolean isRegistered(final java.lang.Object lhs, final java.lang.Object rhs) {\n    if (lhs instanceof java.util.Map.Entry<?, ?>) {\n        {\n            final java.util.Set<org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey>> java.util.Set<org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey>> = org.apache.commons.lang3.builder.EqualsBuilder.getRegistry();\n            final org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey> org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey> = org.apache.commons.lang3.builder.EqualsBuilder.getRegisterPair(lhs, rhs);\n            final org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey> org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey> = org.apache.commons.lang3.tuple.Pair.of(pair.getLeft(), pair.getRight());\n            return (registry != null) && ((registry.contains(pair)) || (registry.contains(swappedPair)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"lhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:70","type":"CtBinaryOperatorImpl","sourcecode":"pattern == null"},"failures":[231],"tindex":"e18a724c-2eaf-11e6-b955-137518e9b379","method":{"position":"org.apache.commons.lang3.CharUtils:172","type":"CtMethodImpl","sourcecode":"public static char toChar(final java.lang.String str) {\n    if (str == null) {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n                throw new java.lang.IllegalArgumentException(\"The String must not be empty\");\n            } \n            return str.charAt(0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pattern":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1153","type":"CtBinaryOperatorImpl","sourcecode":"b < a"},"failures":[],"tindex":"e18a724d-2eaf-11e6-b955-cf7085098699","method":{"position":"org.apache.commons.lang3.ArrayUtils:2420","type":"CtMethodImpl","sourcecode":"public static int indexOf(final byte[] array, final byte valueToFind) {\n    if (valueToFind < valueToFind) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"valueToFind","b":"valueToFind"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2356","type":"CtBinaryOperatorImpl","sourcecode":"(str.charAt(j)) != (thisBuf[(i + j)])"},"failures":[],"tindex":"e18a724e-2eaf-11e6-b955-61139c5d42ec","method":{"position":"org.apache.commons.lang3.ArrayUtils:1902","type":"CtMethodImpl","sourcecode":"public static int indexOf(final java.lang.Object[] array, final java.lang.Object objectToFind, int startIndex) {\n    if ((objectToFind.charAt(startIndex)) != (objectToFind[(startIndex + j)])) {\n        {\n            if (array == null) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                startIndex = 0;\n            } \n            if (objectToFind == null) {\n                for (int int = startIndex ; i < (array.int) ; i++) {\n                    if ((array[i]) == null) {\n                        return i;\n                    } \n                }\n            } else if (array.getClass().getComponentType().isInstance(objectToFind)) {\n                for (int int = startIndex ; i < (array.int) ; i++) {\n                    if (objectToFind.equals(array[i])) {\n                        return i;\n                    } \n                }\n            } \n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"objectToFind","thisBuf":"objectToFind","i":"startIndex","j":"startIndex"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:461","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isUpperCase(ch)"},"failures":[232,233,234,25,235,236],"tindex":"e18a995f-2eaf-11e6-b955-4bc7d722eda0","method":{"position":"org.apache.commons.lang3.CharUtils:516","type":"CtMethodImpl","sourcecode":"public static boolean isAsciiNumeric(final char ch) {\n    if (java.lang.Character.isUpperCase(ch)) {\n        {\n            return (ch >= '0') && (ch <= '9');\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:297","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(className)"},"failures":[],"tindex":"e18a9960-2eaf-11e6-b955-a730f24e3521","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1214","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendSeparator(final java.lang.String separator) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(separator)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return appendSeparator(separator, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"className":"separator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:631","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[],"tindex":"e18a9961-2eaf-11e6-b955-3b67e3310ed5","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1490","type":"CtMethodImpl","sourcecode":"protected void appendContentEnd(final java.lang.StringBuffer buffer) {\n    if (buffer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(java.lang.String);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"buffer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:651","type":"CtBinaryOperatorImpl","sourcecode":"(toClass.isPrimitive()) == false"},"failures":[237,238,239,240,241],"tindex":"e18ac072-2eaf-11e6-b955-913c1f507d0d","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1458","type":"CtMethodImpl","sourcecode":"public static final java.lang.reflect.ParameterizedType parameterize(final java.lang.Class<?> raw, final java.lang.reflect.Type... typeArguments) {\n    if ((raw.isPrimitive()) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.reflect.TypeUtils.parameterizeWithOwner(null, raw, typeArguments);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toClass":"raw"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:451","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[242],"tindex":"e18ac073-2eaf-11e6-b955-a5a0e57c8708","method":{"position":"org.apache.commons.lang3.BooleanUtils:904","type":"CtMethodImpl","sourcecode":"public static boolean and(final boolean... array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n            } \n            if ((array.int) == 0) {\n                throw new java.lang.IllegalArgumentException(\"Array is empty\");\n            } \n            for (final boolean boolean : array) {\n                if (!element) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"focus == null"},"failures":[243],"tindex":"e18ac074-2eaf-11e6-b955-392353198e9e","method":{"position":"org.apache.commons.lang3.time.DateUtils:238","type":"CtMethodImpl","sourcecode":"public static boolean isSameLocalTime(final java.util.Calendar cal1, final java.util.Calendar cal2) {\n    if (cal1 == null) {\n        {\n            if ((cal1 == null) || (cal2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            return ((((((((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.getClass()) == (cal2.getClass()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"focus":"cal1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:180","type":"CtBinaryOperatorImpl","sourcecode":"(tmp.length()) != (duration.length())"},"failures":[244],"tindex":"e18ae785-2eaf-11e6-b955-9917b24e0808","method":{"position":"org.apache.commons.lang3.StringUtils:5724","type":"CtMethodImpl","sourcecode":"public static java.lang.String uncapitalize(final java.lang.String str) {\n    if ((str.length()) != (str.length())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int;\n            if ((str == null) || ((strLen = str.length()) == 0)) {\n                return str;\n            } \n            char char = str.charAt(0);\n            if (java.lang.Character.isLowerCase(firstChar)) {\n                return str;\n            } \n            return new java.lang.StringBuilder(strLen).append(java.lang.Character.toLowerCase(firstChar)).append(str.substring(1)).toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"duration":"str","tmp":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:192","type":"CtBinaryOperatorImpl","sourcecode":"(duration.length()) != 0"},"failures":[],"tindex":"e18ae786-2eaf-11e6-b955-2de288d752cc","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:164","type":"CtMethodImpl","sourcecode":"public static java.lang.String reflectionToString(final java.lang.Object object, final org.apache.commons.lang3.builder.ToStringStyle style) {\n    if ((object.length()) != 0) {\n        {\n            return org.apache.commons.lang3.builder.ReflectionToStringBuilder.toString(object, style);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"duration":"object"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:94","type":"CtInvocationImpl","sourcecode":"str.isEmpty()"},"failures":[],"tindex":"e18ae787-2eaf-11e6-b955-cfd0a0fc5a61","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:379","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final double lhs, final double rhs) {\n    if (fieldName.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (fieldName == null) {\n                throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n            } \n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if ((java.lang.Double.doubleToLongBits(lhs)) != (java.lang.Double.doubleToLongBits(rhs))) {\n                java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Double>(fieldName) {\n                    private static final long serialVersionUID = 1L;\n\n                    @java.lang.Override\n                    public java.lang.Double getLeft() {\n                        return java.lang.Double.valueOf(lhs);\n                    }\n\n                    @java.lang.Override\n                    public java.lang.Double getRight() {\n                        return java.lang.Double.valueOf(rhs);\n                    }\n                });\n            } \n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":89,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}