{"failureDictionary":{"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":8,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":218,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":177,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":210,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":315,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":324,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone":94,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":311,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":313,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":9,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":76,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":78,"org.apache.commons.lang3.ValidateTest.testIsTrue4":83,"org.apache.commons.lang3.time.FastDatePrinterTest.testMilleniumBug":66,"org.apache.commons.lang3.ValidateTest.testIsTrue3":82,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":46,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":320,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String":90,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfDayWithDate":242,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testSimpleDate":70,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDifferingStyles":93,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayBoolean":269,"org.apache.commons.lang3.time.DateUtilsTest.testAddSeconds":84,"org.apache.commons.lang3.time.FastDateParserTest.testLANG_832":148,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayInt":263,"org.apache.commons.lang3.time.FastDateParserTest.testToStringContainsName":147,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":53,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_AD":128,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":199,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":322,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDefaults":92,"org.apache.commons.lang3.text.translate.UnicodeUnescaperTest.testUuuuu":181,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":323,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":16,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":331,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":196,"org.apache.commons.lang3.RandomUtilsTest.testNextLong":252,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":50,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":6,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":102,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml10":273,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDefaults":97,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":325,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":62,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":212,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_BC":156,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":307,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":326,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":207,"org.apache.commons.lang3.time.FastDateParserTest.testSpecialCharacters":135,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":334,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_BC":129,"org.apache.commons.lang3.time.FastDateParserTest.testLowYearPadding":142,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testTimeZoneMatches":106,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_AD":116,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":197,"org.apache.commons.lang3.EnumUtilsTest.test_generateBitVector_nullArrayElement":260,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":202,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":54,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang303":67,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testTimeZoneMatches":133,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableStream":168,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetRawType":224,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":282,"org.apache.commons.lang3.time.FastDateFormatTest.testDateDefaults":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":292,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testCreateIfAbsentUncheckedSuccess":32,"org.apache.commons.lang3.time.FastDateParserTest.testMilleniumBug":137,"org.apache.commons.lang3.reflect.TypeLiteralTest.testBasic":236,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":318,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":310,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":99,"org.apache.commons.lang3.builder.EqualsBuilderTest.testObjectArray":274,"org.apache.commons.lang3.time.FastDatePrinterTest.testSimpleDate":64,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_AD":155,"org.apache.commons.lang3.math.NumberUtilsTest.testToByteString":279,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDateDefaults":89,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":283,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":80,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayObject":271,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testCreateIfAbsentUncheckedException":31,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":51,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":200,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":298,"org.apache.commons.lang3.RandomUtilsTest.testNextDouble":251,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":215,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":75,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":56,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":125,"org.apache.commons.lang3.time.FastDateParserTest.testPatternMatches":161,"org.apache.commons.lang3.time.FastDateParserTest.testParseZone":140,"org.apache.commons.lang3.ArrayUtilsTest.testSameLengthByte":178,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":299,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":327,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":162,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":290,"org.apache.commons.lang3.time.FastDateParserTest.testLocaleMatches":138,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":13,"org.apache.commons.lang3.StringUtilsTest.testReplace_StringStringString":172,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testToStringContainsName":104,"org.apache.commons.lang3.time.FastDateParserTest.testLang538":146,"org.apache.commons.lang3.CharUtilsTest.testIsAsciiAlphaLower_char":167,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":77,"org.apache.commons.lang3.time.FastDateParserTest.testLang303":145,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":287,"org.apache.commons.lang3.RandomUtilsTest.testExtremeRangeLong":246,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":136,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":194,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_AD":143,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtml":255,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":317,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":209,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":60,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyFloatNull":234,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":204,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":291,"org.apache.commons.lang3.StringUtilsTest.testGetCommonPrefix_StringArray":278,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":98,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":281,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetRootCauseStackTrace_Throwable":170,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionHierarchyEquals":225,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayChar":267,"org.apache.commons.lang3.time.FastDatePrinterTest.testShortDateStyleWithLocales":65,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_AD":153,"org.apache.commons.lang3.CharUtilsTest.testIsAsciiAlphanumeric_char":165,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":23,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":41,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testContextedExceptionStringThrowableContext":36,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":81,"org.apache.commons.lang3.ObjectUtilsTest.testIdentityToStringStringBuilder":171,"org.apache.commons.lang3.text.translate.UnicodeUnescaperTest.testUPlus":180,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_BC":144,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":57,"org.apache.commons.lang3.time.FastDateParserTest.testDayOf":139,"org.apache.commons.lang3.time.FastDatePrinterTest.testFormat":69,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":222,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":193,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":11,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":26,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang538":119,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":49,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":201,"org.apache.commons.lang3.RandomUtilsTest.testNextDoubleMinimalRange":247,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":63,"org.apache.commons.lang3.time.DateFormatUtilsTest.testConstructor":164,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testInteger":233,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":293,"org.apache.commons.lang3.builder.DiffBuilderTest.testStylePassedToDiffResult":15,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseZone":113,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinuteFragmentInLargerUnitWithDate":239,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":321,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":211,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":304,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":335,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":300,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvWriter":176,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":190,"org.apache.commons.lang3.BooleanUtilsTest.test_toIntegerObject_boolean":253,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayByte":266,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetTypeArguments":220,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixture":231,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":44,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":55,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testToStringContainsName":120,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang303":118,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayShort":265,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testPatternMatches":107,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfMonthWithDate":240,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":4,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":192,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":12,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableWriter":169,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testContextedExceptionStringThrowable":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":308,"org.apache.commons.lang3.text.translate.UnicodeUnescaperTest.testLessThanFour":182,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":289,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":187,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":305,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":297,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfYearWithDate":244,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":288,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":152,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":7,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":272,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_BC":127,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":333,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang303":73,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":24,"org.apache.commons.lang3.reflect.TypeLiteralTest.testTyped":237,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":208,"org.apache.commons.lang3.time.FastDateParserTest.testTimeZoneMatches":160,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_BC":151,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":296,"org.apache.commons.lang3.ObjectUtilsTest.testNotEqual":0,"org.apache.commons.lang3.builder.DiffBuilderTest.testSimilarObjectIgnoresAppends":17,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLocaleMatches":100,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":295,"org.apache.commons.lang3.ConversionTest.testHexToInt":2,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAnyBut_StringString":29,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":163,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testNullExceptionPassing":34,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":109,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":189,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":3,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_AD":126,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsInstance":221,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":332,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":74,"org.apache.commons.lang3.StringUtilsTest.testSplit_String":235,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":306,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testContextedExceptionString":37,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvString":173,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.test_Equality_Hash":122,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":19,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":59,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_Locale":95,"org.apache.commons.lang3.RandomUtilsTest.testNextDoubleNegative":249,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":198,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":319,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testEquals":130,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":328,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateTimeInstance":96,"org.apache.commons.lang3.StringUtilsTest.testGetJaroWinklerDistance_StringString":277,"org.apache.commons.lang3.ArrayUtilsTest.testToString":344,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_short_short":254,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":185,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":79,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_BC":154,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":229,"org.apache.commons.lang3.ValidateTest.testMatchesPattern_withMessage":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":309,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateInstance":88,"org.apache.commons.lang3.StringUtilsIsTest.testIsAlphanumeric":27,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":43,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testAmPm":114,"org.apache.commons.lang3.builder.DiffBuilderTest.testSameObjectIgnoresAppends":22,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testPatternMatches":134,"org.apache.commons.lang3.ArrayUtilsTest.testIsNotEmptyPrimitives":280,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondFragmentInLargerUnitWithDate":243,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":219,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":206,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":294,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":314,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_AD":150,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareExcludeFields":226,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":183,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":286,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":14,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":205,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":184,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":301,"org.apache.commons.lang3.text.StrTokenizerTest.test8":343,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":58,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLowYearPadding":115,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLANG_832":121,"org.apache.commons.lang3.text.StrTokenizerTest.test5":340,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_AD":123,"org.apache.commons.lang3.text.StrTokenizerTest.test4":339,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":48,"org.apache.commons.lang3.ValidateTest.testNoNullElementsArray2":262,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":302,"org.apache.commons.lang3.text.StrTokenizerTest.test7":342,"org.apache.commons.lang3.ValidateTest.testNoNullElementsArray1":261,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":303,"org.apache.commons.lang3.text.StrTokenizerTest.test6":341,"org.apache.commons.lang3.text.StrTokenizerTest.test1":336,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvWriter":174,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testEndsWith":256,"org.apache.commons.lang3.text.StrTokenizerTest.test3":338,"org.apache.commons.lang3.time.FastDateParserTest.test_Equality_Hash":149,"org.apache.commons.lang3.text.StrTokenizerTest.test2":337,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testIntegerWithTransients":230,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayLong":268,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":21,"org.apache.commons.lang3.RandomUtilsTest.testExtremeRangeDouble":248,"org.apache.commons.lang3.EnumUtilsTest.test_generateBitVectors_nullArrayElement":259,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testContextedExceptionThrowable":35,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":1,"org.apache.commons.lang3.CharRangeTest.testContains_Charrange":179,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareTransients":228,"org.apache.commons.lang3.RandomUtilsTest.testNextDoubleLowerGreaterUpper":250,"org.apache.commons.lang3.time.FastDateParserTest.testAmPm":141,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":284,"org.apache.commons.lang3.time.FastDateFormatTest.testLang954":86,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang538":68,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_BC":124,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testMilleniumBug":72,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_BC":117,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":186,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testEndsWithAny":257,"org.apache.commons.lang3.StringUtilsTest.testDifferenceAt_StringArray":276,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testNullDate":241,"org.apache.commons.lang3.time.FastDateParserTest.testQuotes":159,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":25,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testAddContextValue":39,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testEquals":105,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":203,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":10,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayFloat":264,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixtureWithTransients":232,"org.apache.commons.lang3.time.FastDateParserTest.testEquals":157,"org.apache.commons.lang3.CharUtilsTest.testToUnicodeEscaped_Character":275,"org.apache.commons.lang3.time.FastDateParserTest.testParses":158,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":312,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":52,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfHourWithDate":245,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":285,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang645":103,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance":85,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":195,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testSpecialCharacters":108,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":316,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParses":131,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":191,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLowYearPadding":101,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompare":227,"org.apache.commons.lang3.reflect.TypeUtilsTest.testTypesSatisfyVariables":223,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAnyBut_StringStringWithSupplementaryChars":28,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":329,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_byte_byte":216,"org.apache.commons.lang3.reflect.TypeLiteralTest.testRaw":217,"org.apache.commons.lang3.CharUtilsTest.testIsAsciiAlpha_char":166,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":213,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":258,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":45,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone_Locale":87,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocaleMatches":111,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testDayOf":112,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":71,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testMilleniumBug":110,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvString":175,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayDouble":270,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testSetContextValue":40,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":188,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondFragmentInLargerUnitWithDate":238,"org.apache.commons.lang3.mutable.MutableDoubleTest.testEquals":33,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":42,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testQuotes":132,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":214,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":330},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3222","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[0],"tindex":"3f7afce8-2ebd-11e6-afa4-11424b0231fa","method":{"position":"org.apache.commons.lang3.ObjectUtils:185","type":"CtMethodImpl","sourcecode":"public static boolean notEqual(final java.lang.Object object1, final java.lang.Object object2) {\n    if (object1 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (org.apache.commons.lang3.ObjectUtils.equals(object1, object2)) == false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"object1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1581","type":"CtBinaryOperatorImpl","sourcecode":"t1 instanceof java.lang.reflect.WildcardType"},"failures":[1],"tindex":"3f7d1fc9-2ebd-11e6-afa4-77eb4cd09449","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:380","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.StringBuffer format(final java.lang.Object obj, final java.lang.StringBuffer toAppendTo, final java.text.FieldPosition pos) {\n    if (obj instanceof java.lang.reflect.WildcardType) {\n        {\n            if (obj instanceof java.util.Date) {\n                return format(((java.util.Date)(obj)), toAppendTo);\n            } else if (obj instanceof java.util.Calendar) {\n                return format(((java.util.Calendar)(obj)), toAppendTo);\n            } else if (obj instanceof java.lang.Long) {\n                return format(((java.lang.Long)(obj)).longValue(), toAppendTo);\n            } else {\n                throw new java.lang.IllegalArgumentException((\"Unknown class: \" + (obj == null ? \"<null>\" : obj.getClass().getName())));\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"t1":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2833","type":"CtBinaryOperatorImpl","sourcecode":"numberOfSubstrings == max"},"failures":[2],"tindex":"3f7d46da-2ebd-11e6-afa4-f9cea6395131","method":{"position":"org.apache.commons.lang3.Conversion:938","type":"CtMethodImpl","sourcecode":"public static int hexToInt(final java.lang.String src, final int srcPos, final int dstInit, final int dstPos, final int nHex) {\n    if (dstInit == srcPos) {\n        {\n            if (0 == nHex) {\n                return dstInit;\n            } \n            if ((((nHex - 1) * 4) + dstPos) >= 32) {\n                throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+dstPos is greather or equal to than 32\");\n            } \n            int int = dstInit;\n            int int = 0;\n            for (int int = 0 ; i < nHex ; i++) {\n                shift = (i * 4) + dstPos;\n                final int int = (15 & (org.apache.commons.lang3.Conversion.hexDigitToInt(src.charAt((i + srcPos))))) << shift;\n                final int int = 15 << shift;\n                out = (out & (~mask)) | bits;\n            }\n            return out;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"numberOfSubstrings":"dstInit","max":"srcPos"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:179","type":"CtUnaryOperatorImpl","sourcecode":"!(java.util.Arrays.equals(lhs, rhs))"},"failures":[],"tindex":"3f7d6deb-2ebd-11e6-afa4-29691a80c1cf","method":{"position":"org.apache.commons.lang3.BooleanUtils:904","type":"CtMethodImpl","sourcecode":"public static boolean and(final boolean... array) {\n    if (!(java.util.Arrays.equals(array, array))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n            } \n            if ((array.int) == 0) {\n                throw new java.lang.IllegalArgumentException(\"Array is empty\");\n            } \n            for (final boolean boolean : array) {\n                if (!element) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array","rhs":"array"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:488","type":"CtVariableReadImpl","sourcecode":"detail"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"3f7d6dec-2ebd-11e6-afa4-b1d7b7031d8e","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:129","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final boolean lhs, final boolean rhs) {\n    if (rhs) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (fieldName == null) {\n                throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n            } \n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if (lhs != rhs) {\n                java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Boolean>(fieldName) {\n                    private static final long serialVersionUID = 1L;\n\n                    @java.lang.Override\n                    public java.lang.Boolean getLeft() {\n                        return java.lang.Boolean.valueOf(lhs);\n                    }\n\n                    @java.lang.Override\n                    public java.lang.Boolean getRight() {\n                        return java.lang.Boolean.valueOf(rhs);\n                    }\n                });\n            } \n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"detail":"rhs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2335","type":"CtBinaryOperatorImpl","sourcecode":"separator == null"},"failures":[27],"tindex":"3f7de31d-2ebd-11e6-afa4-dd050d9453df","method":{"position":"org.apache.commons.lang3.StringUtils:5916","type":"CtMethodImpl","sourcecode":"public static boolean isAlphanumeric(final java.lang.CharSequence cs) {\n    if (cs == null) {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(cs)) {\n                return false;\n            } \n            final int int = cs.length();\n            for (int int = 0 ; i < sz ; i++) {\n                if ((java.lang.Character.isLetterOrDigit(cs.charAt(i))) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"separator":"cs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:573","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"3f7e0a2e-2ebd-11e6-afa4-35f6b26198dc","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:600","type":"CtMethodImpl","sourcecode":"protected java.lang.StringBuffer applyRules(final java.util.Calendar calendar, final java.lang.StringBuffer buf) {\n    if (buf == null) {\n        {\n            return org.apache.commons.lang3.time.FastDatePrinter.applyRules(calendar, buf);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"buf"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2104","type":"CtBinaryOperatorImpl","sourcecode":"len == 0"},"failures":[],"tindex":"3f7e313f-2ebd-11e6-afa4-b577cf136c73","method":{"position":"org.apache.commons.lang3.text.StrBuilder:928","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendln(final java.lang.StringBuilder str, final int startIndex, final int length) {\n    if (startIndex == 0) {\n        {\n            return append(str, startIndex, length).appendNewLine();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"startIndex"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:1128","type":"CtBinaryOperatorImpl","sourcecode":"(className.length()) > 0"},"failures":[28,29],"tindex":"3f7f42b0-2ebd-11e6-afa4-d7d1b1ca9f49","method":{"position":"org.apache.commons.lang3.StringUtils:1759","type":"CtMethodImpl","sourcecode":"public static int indexOfAnyBut(final java.lang.CharSequence seq, final java.lang.CharSequence searchChars) {\n    if ((searchChars.length()) > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(seq)) || (org.apache.commons.lang3.StringUtils.isEmpty(searchChars))) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            final int int = seq.length();\n            for (int int = 0 ; i < strLen ; i++) {\n                final char char = seq.charAt(i);\n                final boolean boolean = (org.apache.commons.lang3.CharSequenceUtils.indexOf(searchChars, ch, 0)) >= 0;\n                if (((i + 1) < strLen) && (java.lang.Character.isHighSurrogate(ch))) {\n                    final char char = seq.charAt((i + 1));\n                    if (chFound && ((org.apache.commons.lang3.CharSequenceUtils.indexOf(searchChars, ch2, 0)) < 0)) {\n                        return i;\n                    } \n                } else {\n                    if (!chFound) {\n                        return i;\n                    } \n                }\n            }\n            return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"className":"searchChars"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:496","type":"CtBinaryOperatorImpl","sourcecode":"seq == null"},"failures":[30],"tindex":"3f7f42b1-2ebd-11e6-afa4-494a02014f24","method":{"position":"org.apache.commons.lang3.Validate:872","type":"CtMethodImpl","sourcecode":"public static void matchesPattern(final java.lang.CharSequence input, final java.lang.String pattern, final java.lang.String message, final java.lang.Object... values) {\n    if (input == null) {\n        {\n            if ((java.util.regex.Pattern.matches(pattern, input)) == false) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message, values));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"seq":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:274","type":"CtBinaryOperatorImpl","sourcecode":"(map == null) || (init == null)"},"failures":[31,32],"tindex":"3f800602-2ebd-11e6-afa4-37a972b66031","method":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:300","type":"CtMethodImpl","sourcecode":"public static <K, V>V createIfAbsentUnchecked(final java.util.concurrent.ConcurrentMap<K, V> map, final K key, final org.apache.commons.lang3.concurrent.ConcurrentInitializer<V> init) {\n    if (map == null) {\n        {\n            if ((map == null) || (init == null)) {\n                {\n                    try {\n                        return org.apache.commons.lang3.concurrent.ConcurrentUtils.createIfAbsent(map, key, init);\n                    } catch (final org.apache.commons.lang3.concurrent.ConcurrentException cex) {\n                        throw new org.apache.commons.lang3.concurrent.ConcurrentRuntimeException(cex.getCause());\n                    }\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"init":"init","map":"map"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:816","type":"CtBinaryOperatorImpl","sourcecode":"object == null"},"failures":[33],"tindex":"3f800603-2ebd-11e6-afa4-07537ffb87bd","method":{"position":"org.apache.commons.lang3.mutable.MutableDouble:275","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            return (obj instanceof org.apache.commons.lang3.mutable.MutableDouble) && ((java.lang.Double.doubleToLongBits(((org.apache.commons.lang3.mutable.MutableDouble)(obj)).double)) == (java.lang.Double.doubleToLongBits(double)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"object":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1436","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[34,35,36,37,38,39,40],"tindex":"3f816594-2ebd-11e6-afa4-4700e2310e1a","method":{"position":"org.apache.commons.lang3.exception.ContextedRuntimeException:253","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.String getFormattedExceptionMessage(final java.lang.String baseMessage) {\n    if (baseMessage == null) {\n        {\n            return org.apache.commons.lang3.exception.ExceptionContext.getFormattedExceptionMessage(baseMessage);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"baseMessage"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:131","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[1,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83],"tindex":"3f8201d5-2ebd-11e6-afa4-0fb74fa2887d","method":{"position":"org.apache.commons.lang3.Validate:104","type":"CtMethodImpl","sourcecode":"public static void isTrue(final boolean expression, final java.lang.String message, final long value) {\n    if (message == null) {\n        {\n            if (expression == false) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message, java.lang.Long.valueOf(value)));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"message"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2144","type":"CtBinaryOperatorImpl","sourcecode":"end < 0"},"failures":[84],"tindex":"3f8228e6-2ebd-11e6-afa4-9d2a8befad34","method":{"position":"org.apache.commons.lang3.time.DateUtils:488","type":"CtMethodImpl","sourcecode":"public static java.util.Date addSeconds(final java.util.Date date, final int amount) {\n    if (amount < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateUtils.add(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"end":"amount"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:671","type":"CtBinaryOperatorImpl","sourcecode":"(isEquals) == false"},"failures":[85,1,86,87,88,89,90,91,92,93,94,95,96,97,41,42,43,44,45,46,47,48,49,50,51,52,53,54,98,55,56,57,58,59,60,61,62,63,99,70,71,72,100,101,102,73,74,103,104,105,75,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,76,162,77,78,79,163,80,81,164],"tindex":"3f8228e7-2ebd-11e6-afa4-ddb6b22fb35a","method":{"position":"org.apache.commons.lang3.time.FastDateParser:334","type":"CtMethodImpl","sourcecode":"private static java.lang.StringBuilder escapeRegex(final java.lang.StringBuilder regex, final java.lang.String value, final boolean unquote) {\n    if (unquote == false) {\n        {\n            regex.append(\"\\\\Q\");\n            for (int int = 0 ; i < (value.length()) ; ++i) {\n                char char = value.charAt(i);\n                switch (c) {\n                    case '\\'' :\n                        if (unquote) {\n                            if ((++i) == (value.length())) {\n                                return regex;\n                            } \n                            c = value.charAt(i);\n                        } \n                        break;\n                    case '\\\\' :\n                        if ((++i) == (value.length())) {\n                            break;\n                        } \n                        regex.append(c);\n                        c = value.charAt(i);\n                        if (c == 'E') {\n                            regex.append(\"E\\\\\\\\E\\\\\");\n                            c = 'Q';\n                        } \n                        break;\n                    default :\n                        break;\n                }\n                regex.append(c);\n            }\n            regex.append(\"\\\\E\");\n            return regex;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isEquals":"unquote"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:530","type":"CtBinaryOperatorImpl","sourcecode":"i == (count - 1)"},"failures":[],"tindex":"3f824ff8-2ebd-11e6-afa4-613475140959","method":{"position":"org.apache.commons.lang3.time.DateUtils:418","type":"CtMethodImpl","sourcecode":"public static java.util.Date addMonths(final java.util.Date date, final int amount) {\n    if (amount == (amount - 1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateUtils.add(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"amount","i":"amount"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5414","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(padStr)"},"failures":[],"tindex":"3f824ff9-2ebd-11e6-afa4-0126c4a0238f","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:192","type":"CtMethodImpl","sourcecode":"private static java.lang.Throwable getCauseUsingMethodName(final java.lang.Throwable throwable, final java.lang.String methodName) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(methodName)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.reflect.Method java.lang.reflect.Method = null;\n            try {\n                method = throwable.getClass().getMethod(methodName);\n            } catch (final java.lang.NoSuchMethodException ignored) {\n            } catch (final java.lang.SecurityException ignored) {\n            }\n            if ((method != null) && (java.lang.Throwable.java.lang.Throwable.java.lang.Class.isAssignableFrom(method.getReturnType()))) {\n                try {\n                    return ((java.lang.Throwable)(method.invoke(throwable)));\n                } catch (final java.lang.IllegalAccessException ignored) {\n                } catch (final java.lang.IllegalArgumentException ignored) {\n                } catch (final java.lang.reflect.InvocationTargetException ignored) {\n                }\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"padStr":"methodName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4835","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"3f82770a-2ebd-11e6-afa4-399f416e57d2","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1468","type":"CtMethodImpl","sourcecode":"protected void appendIdentityHashCode(final java.lang.StringBuffer buffer, final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.builder.ToStringStyle.this.isUseIdentityHashCode()) && (object != null)) {\n                org.apache.commons.lang3.builder.ToStringStyle.register(object);\n                buffer.append('@');\n                buffer.append(java.lang.Integer.toHexString(java.lang.System.identityHashCode(object)));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"focus == null"},"failures":[],"tindex":"3f82770b-2ebd-11e6-afa4-af19f4fc4873","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:474","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.StringBuffer format(final java.util.Calendar calendar, final java.lang.StringBuffer buf) {\n    if (calendar == null) {\n        {\n            return org.apache.commons.lang3.time.FastDatePrinter.format(calendar, buf);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"focus":"calendar"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1630","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isHighSurrogate(ch)"},"failures":[165,166,167],"tindex":"3f82770c-2ebd-11e6-afa4-51f945c9481c","method":{"position":"org.apache.commons.lang3.CharUtils:497","type":"CtMethodImpl","sourcecode":"public static boolean isAsciiAlphaLower(final char ch) {\n    if (java.lang.Character.isHighSurrogate(ch)) {\n        {\n            return (ch >= 'a') && (ch <= 'z');\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSet:174","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"3f82770d-2ebd-11e6-afa4-b3370f3acda4","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:604","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final byte[] array, final boolean fullDetail) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, array, java.lang.Boolean.valueOf(fullDetail));\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:109","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[],"tindex":"3f829e1e-2ebd-11e6-afa4-0d7d276a4eef","method":{"position":"org.apache.commons.lang3.time.DateFormatUtils:250","type":"CtMethodImpl","sourcecode":"public static java.lang.String format(final long millis, final java.lang.String pattern, final java.util.Locale locale) {\n    if (pattern == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(pattern)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.lang3.time.DateFormatUtils.format(new java.util.Date(millis), pattern, null, locale);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"pattern"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:163","type":"CtBinaryOperatorImpl","sourcecode":"(ex.getCause()) instanceof java.lang.Error"},"failures":[168,169,170],"tindex":"3f829e1f-2ebd-11e6-afa4-6530ff87c48d","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:640","type":"CtMethodImpl","sourcecode":"static java.util.List<java.lang.String> getStackFrameList(final java.lang.Throwable t) {\n    if ((t.getCause()) instanceof java.lang.Error) {\n        {\n            final java.lang.String java.lang.String = org.apache.commons.lang3.exception.ExceptionUtils.getStackTrace(t);\n            final java.lang.String java.lang.String = org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.java.lang.String;\n            final java.util.StringTokenizer java.util.StringTokenizer = new java.util.StringTokenizer(stackTrace , linebreak);\n            final java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n            boolean boolean = false;\n            while (frames.hasMoreTokens()) {\n                final java.lang.String java.lang.String = frames.nextToken();\n                final int int = token.indexOf(\"at\");\n                if ((at != (-1)) && (token.substring(0, at).trim().isEmpty())) {\n                    traceStarted = true;\n                    list.add(token);\n                } else if (traceStarted) {\n                    break;\n                } \n            }\n            return list;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ex":"t"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1372","type":"CtBinaryOperatorImpl","sourcecode":"(str == null) || (searchStr == null)"},"failures":[171],"tindex":"3f82c530-2ebd-11e6-afa4-b3513aaed928","method":{"position":"org.apache.commons.lang3.ObjectUtils:364","type":"CtMethodImpl","sourcecode":"public static void identityToString(final java.lang.StringBuilder builder, final java.lang.Object object) {\n    if ((object == null) || (object == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (object == null) {\n                throw new java.lang.NullPointerException(\"Cannot get the toString of a null identity\");\n            } \n            builder.append(object.getClass().getName()).append('@').append(java.lang.Integer.toHexString(java.lang.System.identityHashCode(object)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"object","searchStr":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1499","type":"CtBinaryOperatorImpl","sourcecode":"str != null"},"failures":[172,173,174,175,176],"tindex":"3f82c531-2ebd-11e6-afa4-7b728e0d5154","method":{"position":"org.apache.commons.lang3.StringUtils:4484","type":"CtMethodImpl","sourcecode":"public static java.lang.String replace(final java.lang.String text, final java.lang.String searchString, final java.lang.String replacement) {\n    if (replacement != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.replace(text, searchString, replacement, (-1));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"replacement"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2335","type":"CtBinaryOperatorImpl","sourcecode":"separator == null"},"failures":[],"tindex":"3f82c532-2ebd-11e6-afa4-ef18f8417333","method":{"position":"org.apache.commons.lang3.exception.DefaultExceptionContext:91","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Object getFirstContextValue(final java.lang.String label) {\n    if (label == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (final org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object> org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object> : java.util.List<org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>>) {\n                if (org.apache.commons.lang3.StringUtils.equals(label, pair.getKey())) {\n                    return pair.getValue();\n                } \n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"separator":"label"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:388","type":"CtBinaryOperatorImpl","sourcecode":"(java.lang.Double.doubleToLongBits(lhs)) != (java.lang.Double.doubleToLongBits(rhs))"},"failures":[177],"tindex":"3f82ec43-2ebd-11e6-afa4-a98af8b2e4ad","method":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:89","type":"CtMethodImpl","sourcecode":"public static double min(final double a, final double b, final double c) {\n    if ((java.lang.Double.doubleToLongBits(c)) != (java.lang.Double.doubleToLongBits(a))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.math.IEEE754rUtils.min(org.apache.commons.lang3.math.IEEE754rUtils.min(a, b), c);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"c","rhs":"a"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:801","type":"CtBinaryOperatorImpl","sourcecode":"(lhs == null) || (rhs == null)"},"failures":[178],"tindex":"3f82ec44-2ebd-11e6-afa4-692b98f0852d","method":{"position":"org.apache.commons.lang3.ArrayUtils:1317","type":"CtMethodImpl","sourcecode":"public static boolean isSameLength(final byte[] array1, final byte[] array2) {\n    if ((array2 == null) || (array2 == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((((array1 == null) && (array2 != null)) && ((array2.int) > 0)) || (((array2 == null) && (array1 != null)) && ((array1.int) > 0))) || (((array1 != null) && (array2 != null)) && ((array1.int) != (array2.int)))) {\n                return false;\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array2","rhs":"array2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.MemberUtils:59","type":"CtBinaryOperatorImpl","sourcecode":"((!(o.isAccessible())) && (java.lang.reflect.Modifier.isPublic(m.getModifiers()))) && (org.apache.commons.lang3.reflect.MemberUtils.isPackageAccess(m.getDeclaringClass().getModifiers()))"},"failures":[],"tindex":"3f82ec45-2ebd-11e6-afa4-63e18f345016","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:369","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final java.lang.Object lhs, final java.lang.Object rhs) {\n    if (((!(lhs.isAccessible())) && (java.lang.reflect.Modifier.isPublic(lhs.getModifiers()))) && (org.apache.commons.lang3.reflect.MemberUtils.isPackageAccess(m.getDeclaringClass().getModifiers()))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return append(lhs, rhs, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"m":"lhs","o":"lhs"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:567","type":"CtBinaryOperatorImpl","sourcecode":"(isEquals) == false"},"failures":[],"tindex":"3f831356-2ebd-11e6-afa4-63cf0ced869e","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setUseFieldNames(final boolean useFieldNames) {\n    if (useFieldNames == false) {\n        {\n            super.setUseFieldNames(useFieldNames);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isEquals":"useFieldNames"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharRange:183","type":"CtBinaryOperatorImpl","sourcecode":"range == null"},"failures":[179],"tindex":"3f831357-2ebd-11e6-afa4-e15559662a9d","method":{"position":"org.apache.commons.lang3.CharRange:182","type":"CtMethodImpl","sourcecode":"public boolean contains(final org.apache.commons.lang3.CharRange range) {\n    if (range == null) {\n        {\n            if (range == null) {\n                throw new java.lang.IllegalArgumentException(\"The Range must not be null\");\n            } \n            if (boolean) {\n                if (range.boolean) {\n                    return ((char) >= (range.char)) && ((char) <= (range.char));\n                } \n                return ((range.char) < (char)) || ((range.char) > (char));\n            } \n            if (range.boolean) {\n                return ((char) == 0) && ((char) == (java.lang.Character.java.lang.Character.char));\n            } \n            return ((char) <= (range.char)) && ((char) >= (range.char));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"range":"range"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2100","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[180,181,182,183,184],"tindex":"3f831358-2ebd-11e6-afa4-afec02d8ec1d","method":{"position":"org.apache.commons.lang3.text.translate.UnicodeUnescaper:36","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int translate(final java.lang.CharSequence input, final int index, final java.io.Writer out) throws java.io.IOException {\n    if (input == null) {\n        {\n            if ((((input.charAt(index)) == '\\\\') && ((index + 1) < (input.length()))) && ((input.charAt((index + 1))) == 'u')) {\n                int int = 2;\n                while (((index + i) < (input.length())) && ((input.charAt((index + i))) == 'u')) {\n                    i++;\n                }\n                if (((index + i) < (input.length())) && ((input.charAt((index + i))) == '+')) {\n                    i++;\n                } \n                if (((index + i) + 4) <= (input.length())) {\n                    final java.lang.CharSequence java.lang.CharSequence = input.subSequence((index + i), ((index + i) + 4));\n                    try {\n                        final int int = java.lang.Integer.parseInt(unicode.toString(), 16);\n                        out.write(((char)(value)));\n                    } catch (final java.lang.NumberFormatException nfe) {\n                        throw new java.lang.IllegalArgumentException((\"Unable to parse unicode value: \" + unicode) , nfe);\n                    }\n                    return i + 4;\n                } else {\n                    throw new java.lang.IllegalArgumentException(((\"Less than 4 hex digits in unicode value: '\" + (input.subSequence(index, input.length()))) + \"' due to end of CharSequence\"));\n                }\n            } \n            return 0;\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:244","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"3f833a69-2ebd-11e6-afa4-71a18d9160f3","method":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:300","type":"CtMethodImpl","sourcecode":"public static <K, V>V createIfAbsentUnchecked(final java.util.concurrent.ConcurrentMap<K, V> map, final K key, final org.apache.commons.lang3.concurrent.ConcurrentInitializer<V> init) {\n    if (map == null) {\n        {\n            if ((map == null) || (init == null)) {\n                {\n                    try {\n                        return org.apache.commons.lang3.concurrent.ConcurrentUtils.createIfAbsent(map, key, init);\n                    } catch (final org.apache.commons.lang3.concurrent.ConcurrentException cex) {\n                        throw new org.apache.commons.lang3.concurrent.ConcurrentRuntimeException(cex.getCause());\n                    }\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.JavaVersion:140","type":"CtInvocationImpl","sourcecode":"\"1.4\".equals(nom)"},"failures":[185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215],"tindex":"3f833a6a-2ebd-11e6-afa4-c11cc3b0c764","method":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:117","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(final java.lang.Object object) {\n    if (\"1.4\".equals(object)) {\n        {\n            return org.apache.commons.lang3.builder.ReflectionToStringBuilder.toString(object, null, false, false, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nom":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3230","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[216],"tindex":"3f833a6b-2ebd-11e6-afa4-eb820c70294d","method":{"position":"org.apache.commons.lang3.ArrayUtils:3251","type":"CtMethodImpl","sourcecode":"public static byte[] toPrimitive(final java.lang.Byte[] array, final byte valueForNull) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.byte[];\n            } \n            final byte[] byte[] = new byte[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                final java.lang.Byte java.lang.Byte = array[i];\n                result[i] = b == null ? valueForNull : b.byteValue();\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1217","type":"CtBinaryOperatorImpl","sourcecode":"endCutoff > (java.util.Calendar.SATURDAY)"},"failures":[],"tindex":"3f83617c-2ebd-11e6-afa4-4947ac4241ef","method":{"position":"org.apache.commons.lang3.text.translate.JavaUnicodeEscaper:64","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.translate.JavaUnicodeEscaper between(final int codepointLow, final int codepointHigh) {\n    if (codepointLow > codepointLow) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.lang3.text.translate.JavaUnicodeEscaper(codepointLow , codepointHigh , true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.util.Calendar.SATURDAY":"codepointLow","endCutoff":"codepointLow"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:653","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[],"tindex":"3f83617d-2ebd-11e6-afa4-4f368d5d56fc","method":{"position":"org.apache.commons.lang3.Validate:848","type":"CtMethodImpl","sourcecode":"public static void matchesPattern(final java.lang.CharSequence input, final java.lang.String pattern) {\n    if (input == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((java.util.regex.Pattern.matches(pattern, input)) == false) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.java.lang.String, input, pattern));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"input"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:666","type":"CtBinaryOperatorImpl","sourcecode":"clazz != null"},"failures":[],"tindex":"3f83617e-2ebd-11e6-afa4-ff453c8b5734","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:957","type":"CtMethodImpl","sourcecode":"public static java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> determineTypeArguments(final java.lang.Class<?> cls, final java.lang.reflect.ParameterizedType superType) {\n    if (cls != null) {\n        {\n            org.apache.commons.lang3.Validate.notNull(cls, \"cls is null\");\n            org.apache.commons.lang3.Validate.notNull(superType, \"superType is null\");\n            final java.lang.Class<?> java.lang.Class<?> = org.apache.commons.lang3.reflect.TypeUtils.getRawType(superType);\n            if (!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(cls, superClass))) {\n                return null;\n            } \n            if (cls.equals(superClass)) {\n                return org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(superType, superClass, null);\n            } \n            final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.getClosestParentType(cls, superClass);\n            if (midType instanceof java.lang.Class<?>) {\n                return org.apache.commons.lang3.reflect.TypeUtils.determineTypeArguments(((java.lang.Class<?>)(midType)), superType);\n            } \n            final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(midType));\n            final java.lang.Class<?> java.lang.Class<?> = org.apache.commons.lang3.reflect.TypeUtils.getRawType(midParameterizedType);\n            final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = org.apache.commons.lang3.reflect.TypeUtils.determineTypeArguments(midClass, superType);\n            org.apache.commons.lang3.reflect.TypeUtils.mapTypeVariablesToArguments(cls, midParameterizedType, typeVarAssigns);\n            return typeVarAssigns;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"clazz":"cls"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrMatcher:190","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(chars)"},"failures":[],"tindex":"3f83888f-2ebd-11e6-afa4-9ff3fc3c627f","method":{"position":"org.apache.commons.lang3.time.FastDateParser:298","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Object parseObject(final java.lang.String source, final java.text.ParsePosition pos) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(source)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return parse(source, pos);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chars":"source"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:934","type":"CtUnaryOperatorImpl","sourcecode":"!(java.lang.reflect.Modifier.isPublic(candidateClass.getModifiers()))"},"failures":[217,218,219,220,221,222,223,224],"tindex":"3f838890-2ebd-11e6-afa4-f178ab58ff48","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:897","type":"CtMethodImpl","sourcecode":"private static java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> getTypeArguments(java.lang.Class<?> cls, final java.lang.Class<?> toClass, final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> subtypeVarAssigns) {\n    if (!(java.lang.reflect.Modifier.isPublic(cls.getModifiers()))) {\n        {\n            if (!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(cls, toClass))) {\n                return null;\n            } \n            if (cls.isPrimitive()) {\n                if (toClass.isPrimitive()) {\n                    return new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>();\n                } \n                cls = org.apache.commons.lang3.ClassUtils.primitiveToWrapper(cls);\n            } \n            final java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = subtypeVarAssigns == null ? new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>() : new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>(subtypeVarAssigns);\n            if (toClass.equals(cls)) {\n                return typeVarAssigns;\n            } \n            return org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(org.apache.commons.lang3.reflect.TypeUtils.getClosestParentType(cls, toClass), toClass, typeVarAssigns);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"candidateClass":"cls"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3764","type":"CtBinaryOperatorImpl","sourcecode":"noOfItems <= 0"},"failures":[75,116,117,125,128,129,131,143,144,152,155,156,158],"tindex":"3f838891-2ebd-11e6-afa4-552fe2a82d39","method":{"position":"org.apache.commons.lang3.time.FastDateParser:532","type":"CtMethodImpl","sourcecode":"private org.apache.commons.lang3.time.FastDateParser.Strategy getLocaleSpecificStrategy(final int field, final java.util.Calendar definingCalendar) {\n    if (field <= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.concurrent.ConcurrentMap<java.util.Locale, org.apache.commons.lang3.time.FastDateParser.Strategy> java.util.concurrent.ConcurrentMap<java.util.Locale, org.apache.commons.lang3.time.FastDateParser.Strategy> = org.apache.commons.lang3.time.FastDateParser.getCache(field);\n            org.apache.commons.lang3.time.FastDateParser.Strategy org.apache.commons.lang3.time.FastDateParser.Strategy = cache.get(java.util.Locale);\n            if (strategy == null) {\n                strategy = field == (java.util.Calendar.java.util.Calendar.int) ? new org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy(java.util.Locale) : new org.apache.commons.lang3.time.FastDateParser.TextStrategy(field , definingCalendar , java.util.Locale);\n                final org.apache.commons.lang3.time.FastDateParser.Strategy org.apache.commons.lang3.time.FastDateParser.Strategy = cache.putIfAbsent(java.util.Locale, strategy);\n                if (inCache != null) {\n                    return inCache;\n                } \n            } \n            return strategy;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"noOfItems":"field"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:309","type":"CtBinaryOperatorImpl","sourcecode":"i > 0"},"failures":[],"tindex":"3f83afa2-2ebd-11e6-afa4-ef7daa7d7a80","method":{"position":"org.apache.commons.lang3.text.translate.JavaUnicodeEscaper:49","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.translate.JavaUnicodeEscaper below(final int codepoint) {\n    if (codepoint > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.outsideOf(codepoint, java.lang.Integer.java.lang.Integer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"codepoint"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.NoSuchMethodException","condition":{"position":"org.apache.commons.lang3.StringUtils:4284","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(remove))"},"failures":[],"tindex":"3f83afa3-2ebd-11e6-afa4-b535515cd71a","method":{"position":"org.apache.commons.lang3.reflect.MethodUtils:215","type":"CtMethodImpl","sourcecode":"public static java.lang.Object invokeExactStaticMethod(final java.lang.Class<?> cls, final java.lang.String methodName, java.lang.Object[] args, java.lang.Class<?>[] parameterTypes) throws java.lang.IllegalAccessException, java.lang.NoSuchMethodException, java.lang.reflect.InvocationTargetException {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(methodName)) || (org.apache.commons.lang3.StringUtils.isEmpty(methodName))) {\n        throw new java.lang.NoSuchMethodException();\n    } else {\n        {\n            args = org.apache.commons.lang3.ArrayUtils.nullToEmpty(args);\n            parameterTypes = org.apache.commons.lang3.ArrayUtils.nullToEmpty(parameterTypes);\n            final java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethod(cls, methodName, parameterTypes);\n            if (method == null) {\n                throw new java.lang.NoSuchMethodException((((\"No such accessible method: \" + methodName) + \"() on class: \") + (cls.getName())));\n            } \n            return method.invoke(null, args);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"methodName","remove":"methodName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2482","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[225,226,227,228,5,6,7,8,9,10,11,12,13,14,229,16,17,18,19,20,21,23,24,25,26,230,231,232,233],"tindex":"3f83d6b4-2ebd-11e6-afa4-41558e96d655","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:294","type":"CtMethodImpl","sourcecode":"public static boolean reflectionEquals(final java.lang.Object lhs, final java.lang.Object rhs, final boolean testTransients) {\n    if (rhs == null) {\n        {\n            return org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(lhs, rhs, testTransients, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"rhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:584","type":"CtBinaryOperatorImpl","sourcecode":"(dec == null) && (exp == null)"},"failures":[],"tindex":"3f83d6b5-2ebd-11e6-afa4-295da47532f5","method":{"position":"org.apache.commons.lang3.Validate:393","type":"CtMethodImpl","sourcecode":"public static <T extends java.lang.CharSequence>T notEmpty(final T chars, final java.lang.String message, final java.lang.Object... values) {\n    if ((message == null) && (message == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (chars == null) {\n                throw new java.lang.NullPointerException(java.lang.String.format(message, values));\n            } \n            if ((chars.length()) == 0) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message, values));\n            } \n            return chars;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dec":"message","exp":"message"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:724","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[234],"tindex":"3f83d6b6-2ebd-11e6-afa4-dfcf058d4b33","method":{"position":"org.apache.commons.lang3.ArrayUtils:652","type":"CtMethodImpl","sourcecode":"public static float[] nullToEmpty(final float[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((array == null) || ((array.int) == 0)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.float[];\n            } \n            return array;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:657","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"3f83fdc7-2ebd-11e6-afa4-d53eb92197e3","method":{"position":"org.apache.commons.lang3.time.DateFormatUtils:250","type":"CtMethodImpl","sourcecode":"public static java.lang.String format(final long millis, final java.lang.String pattern, final java.util.Locale locale) {\n    if (pattern == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(pattern)) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.lang3.time.DateFormatUtils.format(new java.util.Date(millis), pattern, null, locale);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"pattern"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.SystemUtils:1429","type":"CtBinaryOperatorImpl","sourcecode":"version == null"},"failures":[235],"tindex":"3f83fdc8-2ebd-11e6-afa4-81a46c1e4352","method":{"position":"org.apache.commons.lang3.StringUtils:2574","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] split(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.split(str, null, (-1));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"version":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2833","type":"CtBinaryOperatorImpl","sourcecode":"numberOfSubstrings == max"},"failures":[],"tindex":"3f83fdc9-2ebd-11e6-afa4-0356efdc7952","method":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:138","type":"CtMethodImpl","sourcecode":"protected java.lang.String toUtf16Escape(final int codepoint) {\n    if (codepoint == codepoint) {\n        {\n            return \"\\\\u\" + (org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(codepoint));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"numberOfSubstrings":"codepoint","max":"codepoint"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:530","type":"CtBinaryOperatorImpl","sourcecode":"((dec == null) && (exp == null)) && ((((numeric.charAt(0)) == '-') && (org.apache.commons.lang3.math.NumberUtils.isDigits(numeric.substring(1)))) || (org.apache.commons.lang3.math.NumberUtils.isDigits(numeric)))"},"failures":[],"tindex":"3f83fdca-2ebd-11e6-afa4-3d93fce24b12","method":{"position":"org.apache.commons.lang3.StringUtils:4249","type":"CtMethodImpl","sourcecode":"public static java.lang.String removeStartIgnoreCase(final java.lang.String str, final java.lang.String remove) {\n    if (((remove == null) && (remove == null)) && ((((remove.charAt(0)) == '-') && (org.apache.commons.lang3.math.NumberUtils.isDigits(numeric.substring(1)))) || (org.apache.commons.lang3.math.NumberUtils.isDigits(numeric)))) {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(remove))) {\n                return str;\n            } \n            if (org.apache.commons.lang3.StringUtils.startsWithIgnoreCase(str, remove)) {\n                return str.substring(remove.length());\n            } \n            return str;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dec":"remove","numeric":"remove","exp":"remove"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:520","type":"CtBinaryOperatorImpl","sourcecode":"toGenericArrayType == null"},"failures":[236,237],"tindex":"3f8424db-2ebd-11e6-afa4-91b3af87c07c","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1594","type":"CtMethodImpl","sourcecode":"private static boolean equals(java.lang.reflect.ParameterizedType p, java.lang.reflect.Type t) {\n    if (t == null) {\n        {\n            if (t instanceof java.lang.reflect.ParameterizedType) {\n                final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(t));\n                if ((org.apache.commons.lang3.reflect.TypeUtils.equals(p.getRawType(), other.getRawType())) && (org.apache.commons.lang3.reflect.TypeUtils.equals(p.getOwnerType(), other.getOwnerType()))) {\n                    return org.apache.commons.lang3.reflect.TypeUtils.equals(p.getActualTypeArguments(), other.getActualTypeArguments());\n                } \n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toGenericArrayType":"t"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:255","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"3f8424dc-2ebd-11e6-afa4-a39edebe56bd","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:318","type":"CtMethodImpl","sourcecode":"public static java.lang.Object readDeclaredStaticField(final java.lang.Class<?> cls, final java.lang.String fieldName) throws java.lang.IllegalAccessException {\n    if (fieldName == null) {\n        throw new java.lang.IllegalAccessException();\n    } else {\n        {\n            return org.apache.commons.lang3.reflect.FieldUtils.readDeclaredStaticField(cls, fieldName, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:726","type":"CtBinaryOperatorImpl","sourcecode":"strLen > 0"},"failures":[238,239,240,241,242,243,244,245],"tindex":"3f8424dd-2ebd-11e6-afa4-571f417f69bd","method":{"position":"org.apache.commons.lang3.time.DateUtils:1365","type":"CtMethodImpl","sourcecode":"public static long getFragmentInMinutes(final java.util.Date date, final int fragment) {\n    if (fragment > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"strLen":"fragment"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:221","type":"CtInvocationImpl","sourcecode":"java.lang.Double.isNaN(a)"},"failures":[246,247,248,249,250,251,252],"tindex":"3f8424de-2ebd-11e6-afa4-d9295dd5ad09","method":{"position":"org.apache.commons.lang3.RandomUtils:137","type":"CtMethodImpl","sourcecode":"public static double nextDouble(double startInclusive, double endInclusive) {\n    if (java.lang.Double.isNaN(startInclusive)) {\n        {\n            org.apache.commons.lang3.Validate.isTrue((endInclusive >= startInclusive), \"Start value must be smaller or equal to end value.\");\n            org.apache.commons.lang3.Validate.isTrue((startInclusive >= 0), \"Both range values must be non-negative.\");\n            if (startInclusive == endInclusive) {\n                return startInclusive;\n            } \n            return startInclusive + ((endInclusive - startInclusive) * (org.apache.commons.lang3.RandomUtils.org.apache.commons.lang3.RandomUtils.java.util.Random.nextDouble()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"startInclusive"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:306","type":"CtUnaryOperatorImpl","sourcecode":"!canPass"},"failures":[253],"tindex":"3f844bef-2ebd-11e6-afa4-f9deb928ff84","method":{"position":"org.apache.commons.lang3.BooleanUtils:408","type":"CtMethodImpl","sourcecode":"public static java.lang.Integer toIntegerObject(final boolean bool) {\n    if (!bool) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return bool ? org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.java.lang.Integer : org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.java.lang.Integer;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"canPass":"bool"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1192","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(seq)"},"failures":[],"tindex":"3f844bf0-2ebd-11e6-afa4-a73e684a1347","method":{"position":"org.apache.commons.lang3.AnnotationUtils:91","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, java.lang.Object value) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(value)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value instanceof java.lang.annotation.Annotation) {\n                value = org.apache.commons.lang3.AnnotationUtils.toString(((java.lang.annotation.Annotation)(value)));\n            } \n            super.appendDetail(buffer, fieldName, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"seq":"value"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1138","type":"CtBinaryOperatorImpl","sourcecode":"c < a"},"failures":[254],"tindex":"3f844bf1-2ebd-11e6-afa4-75dd3fbd5247","method":{"position":"org.apache.commons.lang3.ArrayUtils:3183","type":"CtMethodImpl","sourcecode":"public static short[] toPrimitive(final java.lang.Short[] array, final short valueForNull) {\n    if (valueForNull < valueForNull) {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.short[];\n            } \n            final short[] short[] = new short[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                final java.lang.Short java.lang.Short = array[i];\n                result[i] = b == null ? valueForNull : b.shortValue();\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"valueForNull","c":"valueForNull"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:135","type":"CtBinaryOperatorImpl","sourcecode":"name == null"},"failures":[255],"tindex":"3f847202-2ebd-11e6-afa4-07c3c52ce1c8","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:591","type":"CtMethodImpl","sourcecode":"public static final java.lang.String escapeHtml4(final java.lang.String input) {\n    if (input == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.SystemUtils:1429","type":"CtBinaryOperatorImpl","sourcecode":"version == null"},"failures":[256,257],"tindex":"3f847203-2ebd-11e6-afa4-612841bd5bf8","method":{"position":"org.apache.commons.lang3.StringUtils:7269","type":"CtMethodImpl","sourcecode":"public static boolean endsWith(final java.lang.CharSequence str, final java.lang.CharSequence suffix) {\n    if (suffix == null) {\n        {\n            return org.apache.commons.lang3.StringUtils.endsWith(str, suffix, false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"version":"suffix"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharRange:236","type":"CtBinaryOperatorImpl","sourcecode":"(iToString) == null"},"failures":[258,258],"tindex":"3f847204-2ebd-11e6-afa4-05979c0bdbd3","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:759","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final char value) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendFieldStart(buffer, fieldName);\n            appendDetail(buffer, fieldName, value);\n            appendFieldEnd(buffer, fieldName);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iToString":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:239","type":"CtBinaryOperatorImpl","sourcecode":"(cal1 == null) || (cal2 == null)"},"failures":[99,69,102,75],"tindex":"3f849915-2ebd-11e6-afa4-63d2f3e1ad5b","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1152","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n    if ((calendar == null) || (calendar == null)) {\n        {\n            final java.util.TimeZone java.util.TimeZone = calendar.getTimeZone();\n            if ((zone.useDaylightTime()) && ((calendar.get(java.util.Calendar.java.util.Calendar.int)) != 0)) {\n                buffer.append(org.apache.commons.lang3.time.FastDatePrinter.getTimeZoneDisplay(zone, true, int, java.util.Locale));\n            } else {\n                buffer.append(org.apache.commons.lang3.time.FastDatePrinter.getTimeZoneDisplay(zone, false, int, java.util.Locale));\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cal2":"calendar","cal1":"calendar"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1115","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[259,260,261,262,263,264,265,266,267,268,269,270,271],"tindex":"3f849916-2ebd-11e6-afa4-89a340e31ce4","method":{"position":"org.apache.commons.lang3.ArrayUtils:4247","type":"CtMethodImpl","sourcecode":"private static java.lang.Object copyArrayGrow1(final java.lang.Object array, final java.lang.Class<?> newArrayComponentType) {\n    if (array == null) {\n        {\n            if (array != null) {\n                final int int = java.lang.reflect.Array.getLength(array);\n                final java.lang.Object java.lang.Object = java.lang.reflect.Array.newInstance(array.getClass().getComponentType(), (arrayLength + 1));\n                java.lang.System.arraycopy(array, 0, newArray, 0, arrayLength);\n                return newArray;\n            } \n            return java.lang.reflect.Array.newInstance(newArrayComponentType, 1);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5660","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[272],"tindex":"3f849917-2ebd-11e6-afa4-1d58aae6724d","method":{"position":"org.apache.commons.lang3.builder.RecursiveToStringStyle:71","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendDetail(java.lang.StringBuffer buffer, java.lang.String fieldName, java.lang.Object value) {\n    if (value == null) {\n        {\n            if (((!(org.apache.commons.lang3.ClassUtils.isPrimitiveWrapper(value.getClass()))) && (!(java.lang.String.java.lang.String.java.lang.Class.equals(value.getClass())))) && (accept(value.getClass()))) {\n                buffer.append(org.apache.commons.lang3.builder.ReflectionToStringBuilder.toString(value, org.apache.commons.lang3.builder.RecursiveToStringStyle.this));\n            } else {\n                super.appendDetail(buffer, fieldName, value);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.JavaVersion:136","type":"CtInvocationImpl","sourcecode":"\"1.2\".equals(nom)"},"failures":[273],"tindex":"3f84c028-2ebd-11e6-afa4-0d0e9484a830","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:698","type":"CtMethodImpl","sourcecode":"public static java.lang.String escapeXml10(final java.lang.String input) {\n    if (\"1.2\".equals(input)) {\n        {\n            return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nom":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:238","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[274],"tindex":"3f84c029-2ebd-11e6-afa4-59e3e9ed272c","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:639","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.EqualsBuilder append(final java.lang.Object[] lhs, final java.lang.Object[] rhs) {\n    if (rhs == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((boolean) == false) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if ((lhs == null) || (rhs == null)) {\n                org.apache.commons.lang3.builder.EqualsBuilder.this.setEquals(false);\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                org.apache.commons.lang3.builder.EqualsBuilder.this.setEquals(false);\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && (boolean) ; ++i) {\n                append(lhs[i], rhs[i]);\n            }\n            return org.apache.commons.lang3.builder.EqualsBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"rhs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4253","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.startsWithIgnoreCase(str, remove)"},"failures":[],"tindex":"3f84c02a-2ebd-11e6-afa4-172560b73a1b","method":{"position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:307","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.concurrent.ConcurrentException getException(final java.lang.String name) {\n    if (org.apache.commons.lang3.StringUtils.startsWithIgnoreCase(name, name)) {\n        {\n            checkName(name);\n            return java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.ConcurrentException>.get(name);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"name","remove":"name"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:263","type":"CtBinaryOperatorImpl","sourcecode":"ch == null"},"failures":[275],"tindex":"3f84e73b-2ebd-11e6-afa4-218f19cc9394","method":{"position":"org.apache.commons.lang3.CharUtils:379","type":"CtMethodImpl","sourcecode":"public static java.lang.String unicodeEscaped(final java.lang.Character ch) {\n    if (ch == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (ch == null) {\n                return null;\n            } \n            return org.apache.commons.lang3.CharUtils.unicodeEscaped(ch.charValue());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:146","type":"CtBinaryOperatorImpl","sourcecode":"methodNames == null"},"failures":[276,277,278],"tindex":"3f84e73c-2ebd-11e6-afa4-5bab9cc32265","method":{"position":"org.apache.commons.lang3.StringUtils:6591","type":"CtMethodImpl","sourcecode":"public static int indexOfDifference(final java.lang.CharSequence... css) {\n    if (css == null) {\n        {\n            if ((css == null) || ((css.int) <= 1)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            boolean boolean = false;\n            boolean boolean = true;\n            final int int = css.int;\n            int int = java.lang.Integer.java.lang.Integer.int;\n            int int = 0;\n            for (int int = 0 ; i < arrayLen ; i++) {\n                if ((css[i]) == null) {\n                    anyStringNull = true;\n                    shortestStrLen = 0;\n                } else {\n                    allStringsNull = false;\n                    shortestStrLen = java.lang.Math.min(css[i].length(), shortestStrLen);\n                    longestStrLen = java.lang.Math.max(css[i].length(), longestStrLen);\n                }\n            }\n            if (allStringsNull || ((longestStrLen == 0) && (!anyStringNull))) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            if (shortestStrLen == 0) {\n                return 0;\n            } \n            int int = -1;\n            for (int int = 0 ; stringPos < shortestStrLen ; stringPos++) {\n                final char char = css[0].charAt(stringPos);\n                for (int int = 1 ; arrayPos < arrayLen ; arrayPos++) {\n                    if ((css[arrayPos].charAt(stringPos)) != comparisonChar) {\n                        firstDiff = stringPos;\n                        break;\n                    } \n                }\n                if (firstDiff != (-1)) {\n                    break;\n                } \n            }\n            if ((firstDiff == (-1)) && (shortestStrLen != longestStrLen)) {\n                return shortestStrLen;\n            } \n            return firstDiff;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodNames":"css"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:732","type":"CtBinaryOperatorImpl","sourcecode":"str != null"},"failures":[279],"tindex":"3f84e73d-2ebd-11e6-afa4-af1c778b7c87","method":{"position":"org.apache.commons.lang3.math.NumberUtils:302","type":"CtMethodImpl","sourcecode":"public static byte toByte(final java.lang.String str) {\n    if (str != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.math.NumberUtils.toByte(str, ((byte)(0)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1336","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[280],"tindex":"3f850e4e-2ebd-11e6-afa4-c5d0acbe3f44","method":{"position":"org.apache.commons.lang3.ArrayUtils:3676","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final float[] array) {\n    if (array == null) {\n        {\n            return (array != null) && ((array.int) != 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:121","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[281,281],"tindex":"3f850e4f-2ebd-11e6-afa4-5fc347a3183e","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:829","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final float value) {\n    if (fieldName == null) {\n        {\n            buffer.append(value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3464","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"3f850e50-2ebd-11e6-afa4-3bbf4710eb3c","method":{"position":"org.apache.commons.lang3.time.FastDateParser:221","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(obj instanceof org.apache.commons.lang3.time.FastDateParser)) {\n                return false;\n            } \n            final org.apache.commons.lang3.time.FastDateParser org.apache.commons.lang3.time.FastDateParser = ((org.apache.commons.lang3.time.FastDateParser)(obj));\n            return ((java.lang.String.equals(other.java.lang.String)) && (java.util.TimeZone.equals(other.java.util.TimeZone))) && (java.util.Locale.equals(other.java.util.Locale));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:183","type":"CtBinaryOperatorImpl","sourcecode":"(tmp.length()) != (duration.length())"},"failures":[282,283,284,285,285,186,286,286,287,287,288,187,188,289,290,290,291,291,191,191,292,258,293,192,294,294,295,296,193,194,195,297,298,298,196,197,198,299,300,199,200,301,302,303,201,202,203,304,204,305,306,306,307,205,206,206,308,207,207,309,208,310,311,312,312,209,313,313,210,314,314,315,211,212,316,213,214,317,215,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344],"tindex":"3f853561-2ebd-11e6-afa4-092c56595b06","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:898","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final java.lang.Object[] array) {\n    if ((fieldName.length()) != (fieldName.length())) {\n        {\n            buffer.append(java.lang.String);\n            for (int int = 0 ; i < (array.int) ; i++) {\n                final java.lang.Object java.lang.Object = array[i];\n                if (i > 0) {\n                    buffer.append(java.lang.String);\n                } \n                if (item == null) {\n                    appendNullText(buffer, fieldName);\n                } else {\n                    appendInternal(buffer, fieldName, item, boolean);\n                }\n            }\n            buffer.append(java.lang.String);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"duration":"fieldName","tmp":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1364","type":"CtBinaryOperatorImpl","sourcecode":"length >= 0"},"failures":[93,96,97,99,69,102,75],"tindex":"3f853562-2ebd-11e6-afa4-d591dcb98668","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1099","type":"CtMethodImpl","sourcecode":"static java.lang.String getTimeZoneDisplay(final java.util.TimeZone tz, final boolean daylight, final int style, final java.util.Locale locale) {\n    if (style >= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey = new org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey(tz , daylight , style , locale);\n            java.lang.String java.lang.String = org.apache.commons.lang3.time.FastDatePrinter.org.apache.commons.lang3.time.FastDatePrinter.java.util.concurrent.ConcurrentMap<org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey, java.lang.String>.get(key);\n            if (value == null) {\n                value = tz.getDisplayName(daylight, style, locale);\n                final java.lang.String java.lang.String = org.apache.commons.lang3.time.FastDatePrinter.org.apache.commons.lang3.time.FastDatePrinter.java.util.concurrent.ConcurrentMap<org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey, java.lang.String>.putIfAbsent(key, value);\n                if (prior != null) {\n                    value = prior;\n                } \n            } \n            return value;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"style"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5129","type":"CtBinaryOperatorImpl","sourcecode":"(repeat == 1) || (inputLength == 0)"},"failures":[263],"tindex":"3f855c73-2ebd-11e6-afa4-3fe0e462fab6","method":{"position":"org.apache.commons.lang3.ArrayUtils:4178","type":"CtMethodImpl","sourcecode":"public static int[] add(final int[] array, final int element) {\n    if ((element == 1) || (element == 0)) {\n        {\n            final int[] int[] = ((int[])(org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(array, java.lang.Integer.java.lang.Integer.java.lang.Class<java.lang.Integer>)));\n            newArray[((newArray.int) - 1)] = element;\n            return newArray;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"repeat":"element","inputLength":"element"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:525","type":"CtBinaryOperatorImpl","sourcecode":"((src.length) > (srcPos + 2)) && (src[(srcPos + 2)])"},"failures":[],"tindex":"3f855c74-2ebd-11e6-afa4-537a4cc9f195","method":{"position":"org.apache.commons.lang3.ArrayUtils:2913","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final boolean[] array, final boolean valueToFind, int startIndex) {\n    if ((startIndex > (startIndex + 2)) && (src[(srcPos + 2)])) {\n        {\n            if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } else if (startIndex >= (array.int)) {\n                startIndex = (array.int) - 1;\n            } \n            for (int int = startIndex ; i >= 0 ; i--) {\n                if (valueToFind == (array[i])) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcPos":"startIndex","src":"array","length":"startIndex"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharRange:242","type":"CtBinaryOperatorImpl","sourcecode":"(start) != (end)"},"failures":[],"tindex":"3f858385-2ebd-11e6-afa4-07d7aac90e8c","method":{"position":"org.apache.commons.lang3.StringUtils:3612","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final long[] array, final char separator, final int startIndex, final int endIndex) {\n    if (separator != separator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            final int int = endIndex - startIndex;\n            if (noOfItems <= 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder((noOfItems * 16));\n            for (int int = startIndex ; i < endIndex ; i++) {\n                if (i > startIndex) {\n                    buf.append(separator);\n                } \n                buf.append(array[i]);\n            }\n            return buf.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"separator","end":"separator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6310","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"3f858386-2ebd-11e6-afa4-ed927a29f8f0","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:298","type":"CtMethodImpl","sourcecode":"protected java.lang.String parseToken(final java.lang.String pattern, final int[] indexRef) {\n    if (pattern == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            int int = indexRef[0];\n            final int int = pattern.length();\n            char char = pattern.charAt(i);\n            if (((c >= 'A') && (c <= 'Z')) || ((c >= 'a') && (c <= 'z'))) {\n                buf.append(c);\n                while ((i + 1) < length) {\n                    final char char = pattern.charAt((i + 1));\n                    if (peek == c) {\n                        buf.append(c);\n                        i++;\n                    } else {\n                        break;\n                    }\n                }\n            } else {\n                buf.append('\\'');\n                boolean boolean = false;\n                for ( ; i < length ; i++) {\n                    c = pattern.charAt(i);\n                    if (c == '\\'') {\n                        if (((i + 1) < length) && ((pattern.charAt((i + 1))) == '\\'')) {\n                            i++;\n                            buf.append(c);\n                        } else {\n                            inLiteral = !inLiteral;\n                        }\n                    } else if ((!inLiteral) && (((c >= 'A') && (c <= 'Z')) || ((c >= 'a') && (c <= 'z')))) {\n                        i--;\n                        break;\n                    } else {\n                        buf.append(c);\n                    }\n                }\n            }\n            indexRef[0] = i;\n            return buf.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"pattern"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1173","type":"CtBinaryOperatorImpl","sourcecode":"rangeStyle == (org.apache.commons.lang3.time.DateUtils.RANGE_MONTH_MONDAY)"},"failures":[],"tindex":"3f858387-2ebd-11e6-afa4-4f69b53b35f1","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:256","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.time.FastDateFormat getTimeInstance(final int style, final java.util.Locale locale) {\n    if (style == style) {\n        {\n            return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getTimeInstance(style, null, locale);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"rangeStyle":"style","org.apache.commons.lang3.time.DateUtils.RANGE_MONTH_MONDAY":"style"},"type":"special","returnInThen":true,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":80,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}