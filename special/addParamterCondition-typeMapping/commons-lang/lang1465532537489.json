{"failureDictionary":{"org.apache.commons.lang3.StringUtilsTest.testReplaceChars_StringCharChar":24,"org.apache.commons.lang3.StringUtilsTest.testLang623":25,"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":5,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_String":30,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":32,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":2,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":8,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":22,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":27,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":6,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":4,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":20,"org.apache.commons.lang3.builder.DiffBuilderTest.testStylePassedToDiffResult":12,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":18,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":13,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":17,"org.apache.commons.lang3.reflect.TypeUtilsTest.testTypesSatisfyVariables":33,"org.apache.commons.lang3.BooleanUtilsTest.testXor_primitive_nullInput":26,"org.apache.commons.lang3.ArrayUtilsTest.testIsNotEmptyPrimitives":0,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":15,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":14,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxShort_nullArray":28,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithNullText":29,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":21,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":3,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":9,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":19,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSizeEndText":23,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLexx":1,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StringBuilder":31,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":16,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":7,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":11},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:574","type":"CtBinaryOperatorImpl","sourcecode":"ch == delimiter"},"failures":[],"tindex":"ea903062-2ec2-11e6-a5ce-7d861356cb4d","method":{"position":"org.apache.commons.lang3.CharUtils:535","type":"CtMethodImpl","sourcecode":"public static boolean isAsciiAlphanumeric(final char ch) {\n    if (ch == ch) {\n        {\n            return (org.apache.commons.lang3.CharUtils.isAsciiAlpha(ch)) || (org.apache.commons.lang3.CharUtils.isAsciiNumeric(ch));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch","delimiter":"ch"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:508","type":"CtBinaryOperatorImpl","sourcecode":"expPos > (-1)"},"failures":[],"tindex":"ea90f3b3-2ec2-11e6-a5ce-e38d22cb6018","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:914","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder appendSuper(final int superHashCode) {\n    if (superHashCode > (-1)) {\n        {\n            int = ((int) * (int)) + superHashCode;\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"expPos":"superHashCode"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:894","type":"CtBinaryOperatorImpl","sourcecode":"lhs == null"},"failures":[0],"tindex":"ea911ac4-2ec2-11e6-a5ce-2916bdb57050","method":{"position":"org.apache.commons.lang3.ArrayUtils:3665","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final double[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (array != null) && ((array.int) != 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:267","type":"CtBinaryOperatorImpl","sourcecode":"obj == null"},"failures":[1],"tindex":"ea9141d5-2ec2-11e6-a5ce-3bf86cd9675f","method":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:633","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj2) {\n    if (obj2 == null) {\n        {\n            if (obj2 instanceof org.apache.commons.lang3.time.DurationFormatUtils.Token) {\n                final org.apache.commons.lang3.time.DurationFormatUtils.Token org.apache.commons.lang3.time.DurationFormatUtils.Token = ((org.apache.commons.lang3.time.DurationFormatUtils.Token)(obj2));\n                if ((org.apache.commons.lang3.time.DurationFormatUtils.Token.this.java.lang.Object.getClass()) != (tok2.java.lang.Object.getClass())) {\n                    return false;\n                } \n                if ((org.apache.commons.lang3.time.DurationFormatUtils.Token.this.int) != (tok2.int)) {\n                    return false;\n                } \n                if ((org.apache.commons.lang3.time.DurationFormatUtils.Token.this.java.lang.Object) instanceof java.lang.StringBuilder) {\n                    return org.apache.commons.lang3.time.DurationFormatUtils.Token.this.java.lang.Object.toString().equals(tok2.java.lang.Object.toString());\n                } else if ((org.apache.commons.lang3.time.DurationFormatUtils.Token.this.java.lang.Object) instanceof java.lang.Number) {\n                    return org.apache.commons.lang3.time.DurationFormatUtils.Token.this.java.lang.Object.equals(tok2.java.lang.Object);\n                } else {\n                    return (org.apache.commons.lang3.time.DurationFormatUtils.Token.this.java.lang.Object) == (tok2.java.lang.Object);\n                }\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2005","type":"CtBinaryOperatorImpl","sourcecode":"replaceCount > 0"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"tindex":"ea9168e6-2ec2-11e6-a5ce-0bc372d710d3","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:547","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final int lhs, final int rhs) {\n    if (rhs > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (fieldName == null) {\n                throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n            } \n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if (lhs != rhs) {\n                java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Integer>(fieldName) {\n                    private static final long serialVersionUID = 1L;\n\n                    @java.lang.Override\n                    public java.lang.Integer getLeft() {\n                        return java.lang.Integer.valueOf(lhs);\n                    }\n\n                    @java.lang.Override\n                    public java.lang.Integer getRight() {\n                        return java.lang.Integer.valueOf(rhs);\n                    }\n                });\n            } \n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"replaceCount":"rhs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:357","type":"CtBinaryOperatorImpl","sourcecode":"ch < 4096"},"failures":[],"tindex":"ea918ff7-2ec2-11e6-a5ce-b952115dee7d","method":{"position":"org.apache.commons.lang3.Conversion:102","type":"CtMethodImpl","sourcecode":"public static int hexDigitMsb0ToInt(final char hexDigit) {\n    if (hexDigit < 4096) {\n        {\n            switch (hexDigit) {\n                case '0' :\n                    return 0;\n                case '1' :\n                    return 8;\n                case '2' :\n                    return 4;\n                case '3' :\n                    return 12;\n                case '4' :\n                    return 2;\n                case '5' :\n                    return 10;\n                case '6' :\n                    return 6;\n                case '7' :\n                    return 14;\n                case '8' :\n                    return 1;\n                case '9' :\n                    return 9;\n                case 'a' :\n                case 'A' :\n                    return 5;\n                case 'b' :\n                case 'B' :\n                    return 13;\n                case 'c' :\n                case 'C' :\n                    return 3;\n                case 'd' :\n                case 'D' :\n                    return 11;\n                case 'e' :\n                case 'E' :\n                    return 7;\n                case 'f' :\n                case 'F' :\n                    return 15;\n                default :\n                    throw new java.lang.IllegalArgumentException(((\"Cannot interpret '\" + hexDigit) + \"' as a hexadecimal digit\"));\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"hexDigit"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:761","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[23],"tindex":"ea91b708-2ec2-11e6-a5ce-37e76e2885ac","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2033","type":"CtMethodImpl","sourcecode":"protected void setSizeEndText(java.lang.String sizeEndText) {\n    if (sizeEndText == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (sizeEndText == null) {\n                sizeEndText = \"\";\n            } \n            org.apache.commons.lang3.builder.ToStringStyle.this.java.lang.String = sizeEndText;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"sizeEndText"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:293","type":"CtBinaryOperatorImpl","sourcecode":"languageCode == null"},"failures":[],"tindex":"ea91de19-2ec2-11e6-a5ce-bd9bcb4ceefe","method":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:328","type":"CtMethodImpl","sourcecode":"private int readArgumentIndex(final java.lang.String pattern, final java.text.ParsePosition pos) {\n    if (pattern == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = pos.getIndex();\n            seekNonWs(pattern, pos);\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            boolean boolean = false;\n            for ( ; (!error) && ((pos.getIndex()) < (pattern.length())) ; next(pos)) {\n                char char = pattern.charAt(pos.getIndex());\n                if (java.lang.Character.isWhitespace(c)) {\n                    seekNonWs(pattern, pos);\n                    c = pattern.charAt(pos.getIndex());\n                    if ((c != (org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char)) && (c != (org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char))) {\n                        error = true;\n                        continue;\n                    } \n                } \n                if (((c == (org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char)) || (c == (org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char))) && ((result.length()) > 0)) {\n                    try {\n                        return java.lang.Integer.parseInt(result.toString());\n                    } catch (final java.lang.NumberFormatException e) {\n                    }\n                } \n                error = !(java.lang.Character.isDigit(c));\n                result.append(c);\n            }\n            if (error) {\n                throw new java.lang.IllegalArgumentException((((\"Invalid format argument index at position \" + start) + \": \") + (pattern.substring(start, pos.getIndex()))));\n            } \n            throw new java.lang.IllegalArgumentException((\"Unterminated format element at position \" + start));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"languageCode":"pattern"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:536","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[24,25],"tindex":"ea92052a-2ec2-11e6-a5ce-83ce2e1ad4c4","method":{"position":"org.apache.commons.lang3.StringUtils:4834","type":"CtMethodImpl","sourcecode":"public static java.lang.String replaceChars(final java.lang.String str, final char searchChar, final char replaceChar) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n        {\n            if (str == null) {\n                return null;\n            } \n            return str.replace(searchChar, replaceChar);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:496","type":"CtBinaryOperatorImpl","sourcecode":"(numerator) < 0"},"failures":[],"tindex":"ea92052b-2ec2-11e6-a5ce-190b371866c3","method":{"position":"org.apache.commons.lang3.time.DateUtils:1761","type":"CtMethodImpl","sourcecode":"public static int truncatedCompareTo(final java.util.Calendar cal1, final java.util.Calendar cal2, final int field) {\n    if (field < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Calendar java.util.Calendar = org.apache.commons.lang3.time.DateUtils.truncate(cal1, field);\n            final java.util.Calendar java.util.Calendar = org.apache.commons.lang3.time.DateUtils.truncate(cal2, field);\n            return truncatedCal1.compareTo(truncatedCal2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"numerator":"field"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:906","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[26],"tindex":"ea922c3c-2ec2-11e6-a5ce-cdfb73024edb","method":{"position":"org.apache.commons.lang3.BooleanUtils:1040","type":"CtMethodImpl","sourcecode":"public static boolean xor(final boolean... array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n            } \n            if ((array.int) == 0) {\n                throw new java.lang.IllegalArgumentException(\"Array is empty\");\n            } \n            boolean boolean = false;\n            for (final boolean boolean : array) {\n                result ^= element;\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1178","type":"CtBinaryOperatorImpl","sourcecode":"i > 0"},"failures":[],"tindex":"ea92534d-2ec2-11e6-a5ce-57faea0f5800","method":{"position":"org.apache.commons.lang3.time.DateUtils:1726","type":"CtMethodImpl","sourcecode":"public static boolean truncatedEquals(final java.util.Calendar cal1, final java.util.Calendar cal2, final int field) {\n    if (field > 0) {\n        {\n            return (org.apache.commons.lang3.time.DateUtils.truncatedCompareTo(cal1, cal2, field)) == 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"field"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:4773","type":"CtBinaryOperatorImpl","sourcecode":"index == (org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND)"},"failures":[27,27],"tindex":"ea92534e-2ec2-11e6-a5ce-b9457f7cb757","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:415","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final int value) {\n    if (value == value) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, value);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND":"value","index":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2228","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[28],"tindex":"ea927a5f-2ec2-11e6-a5ce-43a2f1bdd683","method":{"position":"org.apache.commons.lang3.math.NumberUtils:982","type":"CtMethodImpl","sourcecode":"public static short max(final short[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.math.NumberUtils.validateArray(array);\n            short short = array[0];\n            for (int int = 1 ; i < (array.int) ; i++) {\n                if ((array[i]) > max) {\n                    max = array[i];\n                } \n            }\n            return max;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:183","type":"CtBinaryOperatorImpl","sourcecode":"whole < 0"},"failures":[],"tindex":"ea927a60-2ec2-11e6-a5ce-2966db72fd5f","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:734","type":"CtMethodImpl","sourcecode":"protected boolean substitute(final org.apache.commons.lang3.text.StrBuilder buf, final int offset, final int length) {\n    if (length < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (substitute(buf, offset, length, null)) > 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"whole":"length"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:759","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[29,30,31],"tindex":"ea927a61-2ec2-11e6-a5ce-c34e45721927","method":{"position":"org.apache.commons.lang3.text.StrBuilder:509","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder append(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return appendNull();\n            } \n            final int int = str.length();\n            if (strLen > 0) {\n                final int int = length();\n                ensureCapacity((len + strLen));\n                str.getChars(0, strLen, char[], len);\n                int += strLen;\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:596","type":"CtBinaryOperatorImpl","sourcecode":"toWildcardType == null"},"failures":[32,33],"tindex":"ea92a172-2ec2-11e6-a5ce-77dd3197be51","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1194","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Type[] getImplicitLowerBounds(final java.lang.reflect.WildcardType wildcardType) {\n    if (wildcardType == null) {\n        {\n            org.apache.commons.lang3.Validate.notNull(wildcardType, \"wildcardType is null\");\n            final java.lang.reflect.Type[] java.lang.reflect.Type[] = wildcardType.getLowerBounds();\n            return (bounds.int) == 0 ? new java.lang.reflect.Type[]{ null } : bounds;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toWildcardType":"wildcardType"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:874","type":"CtBinaryOperatorImpl","sourcecode":"(((nBytes - 1) * 8) + dstPos) >= 16"},"failures":[],"tindex":"ea92a173-2ec2-11e6-a5ce-d77debcc8f26","method":{"position":"org.apache.commons.lang3.Validate:659","type":"CtMethodImpl","sourcecode":"public static <T>T[] validIndex(final T[] array, final int index) {\n    if ((((index - 1) * 8) + index) >= 16) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.Validate.validIndex(array, index, org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.java.lang.String, java.lang.Integer.valueOf(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dstPos":"index","nBytes":"index"},"type":"special","returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":18,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}