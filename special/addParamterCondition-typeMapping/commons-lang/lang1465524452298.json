{"failureDictionary":{"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":1,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayFloat":9,"org.apache.commons.lang3.ValidateTest.testNoNullElementsArray2":7,"org.apache.commons.lang3.ValidateTest.testNoNullElementsArray1":6,"org.apache.commons.lang3.text.WordUtilsTest.testUncapitalize_String":23,"org.apache.commons.lang3.ObjectUtilsTest.testComparatorMedian_nullComparator":17,"org.apache.commons.lang3.EnumUtilsTest.test_generateBitVector_nullArrayElement":5,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayLong":13,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String_charArray":26,"org.apache.commons.lang3.EnumUtilsTest.test_generateBitVectors_nullArrayElement":4,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":19,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testEnforceExceptions":2,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayBoolean":14,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayInt":8,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetPrefix":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":21,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayByte":11,"org.apache.commons.lang3.text.WordUtilsTest.testUncapitalizeWithDelimiters_String":27,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeWithDelimiters_String":22,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalize_String":24,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayObject":16,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayShort":10,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeFully_String":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":20,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeFullyWithDelimiters_String":29,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayChar":12,"org.apache.commons.lang3.text.StrBuilderTest.testContains_String":18,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayDouble":15,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String":28,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayFloat":0},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:137","type":"CtBinaryOperatorImpl","sourcecode":"(((org.apache.commons.lang3.StringUtils.isAllLowerCase(split[0])) && (((split[0].length()) == 2) || ((split[0].length()) == 3))) && ((split[1].length()) == 2)) && (org.apache.commons.lang3.StringUtils.isAllUpperCase(split[1]))"},"failures":[],"tindex":"176a6816-2eb0-11e6-a81b-21f5c8f0eeea","method":{"position":"org.apache.commons.lang3.StringUtils:6682","type":"CtMethodImpl","sourcecode":"public static java.lang.String getCommonPrefix(final java.lang.String... strs) {\n    if ((((org.apache.commons.lang3.StringUtils.isAllLowerCase(strs[0])) && (((split[0].length()) == 2) || ((split[0].length()) == 3))) && ((split[1].length()) == 2)) && (org.apache.commons.lang3.StringUtils.isAllUpperCase(split[1]))) {\n        {\n            if ((strs == null) || ((strs.int) == 0)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final int int = org.apache.commons.lang3.StringUtils.indexOfDifference(strs);\n            if (smallestIndexOfDiff == (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) {\n                if ((strs[0]) == null) {\n                    return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n                } \n                return strs[0];\n            } else if (smallestIndexOfDiff == 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } else {\n                return strs[0].substring(0, smallestIndexOfDiff);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"split":"strs"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3234","type":"CtBinaryOperatorImpl","sourcecode":"type == currentType"},"failures":[0],"tindex":"176b7987-2eb0-11e6-a81b-f1cbde261a01","method":{"position":"org.apache.commons.lang3.ArrayUtils:1154","type":"CtMethodImpl","sourcecode":"public static float[] subarray(final float[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (startIndexInclusive == startIndexInclusive) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            if (startIndexInclusive < 0) {\n                startIndexInclusive = 0;\n            } \n            if (endIndexExclusive > (array.int)) {\n                endIndexExclusive = array.int;\n            } \n            final int int = endIndexExclusive - startIndexInclusive;\n            if (newSize <= 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.float[];\n            } \n            final float[] float[] = new float[newSize];\n            java.lang.System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);\n            return subarray;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"currentType":"startIndexInclusive","type":"startIndexInclusive"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3410","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[1,2],"tindex":"176ba098-2eb0-11e6-a81b-a5fed10413b9","method":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:180","type":"CtMethodImpl","sourcecode":"public static float max(final float[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n            } else if ((array.int) == 0) {\n                throw new java.lang.IllegalArgumentException(\"Array cannot be empty.\");\n            } \n            float float = array[0];\n            for (int int = 1 ; j < (array.int) ; j++) {\n                max = org.apache.commons.lang3.math.IEEE754rUtils.max(array[j], max);\n            }\n            return max;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:4708","type":"CtBinaryOperatorImpl","sourcecode":"index == (org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND)"},"failures":[],"tindex":"176bc7a9-2eb0-11e6-a81b-e181ecfdba86","method":{"position":"org.apache.commons.lang3.BooleanUtils:216","type":"CtMethodImpl","sourcecode":"public static java.lang.Boolean toBooleanObject(final int value) {\n    if (value == value) {\n        {\n            return value == 0 ? java.lang.Boolean.java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND":"value","index":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:1001","type":"CtBinaryOperatorImpl","sourcecode":"trimmer != null"},"failures":[3],"tindex":"176bc7aa-2eb0-11e6-a81b-a31f33dca7c4","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:974","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrSubstitutor setVariablePrefixMatcher(final org.apache.commons.lang3.text.StrMatcher prefixMatcher) {\n    if (prefixMatcher != null) {\n        {\n            if (prefixMatcher == null) {\n                throw new java.lang.IllegalArgumentException(\"Variable prefix matcher must not be null!\");\n            } \n            org.apache.commons.lang3.text.StrSubstitutor.this.org.apache.commons.lang3.text.StrMatcher = prefixMatcher;\n            return org.apache.commons.lang3.text.StrSubstitutor.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trimmer":"prefixMatcher"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:657","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16],"tindex":"176cd91b-2eb0-11e6-a81b-abd7316dac7d","method":{"position":"org.apache.commons.lang3.ArrayUtils:4247","type":"CtMethodImpl","sourcecode":"private static java.lang.Object copyArrayGrow1(final java.lang.Object array, final java.lang.Class<?> newArrayComponentType) {\n    if (array == null) {\n        {\n            if (array != null) {\n                final int int = java.lang.reflect.Array.getLength(array);\n                final java.lang.Object java.lang.Object = java.lang.reflect.Array.newInstance(array.getClass().getComponentType(), (arrayLength + 1));\n                java.lang.System.arraycopy(array, 0, newArray, 0, arrayLength);\n                return newArray;\n            } \n            return java.lang.reflect.Array.newInstance(newArrayComponentType, 1);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Range:151","type":"CtBinaryOperatorImpl","sourcecode":"comp == null"},"failures":[17],"tindex":"176d002c-2eb0-11e6-a81b-e99435499fd2","method":{"position":"org.apache.commons.lang3.ObjectUtils:548","type":"CtMethodImpl","sourcecode":"public static <T>T median(final java.util.Comparator<T> comparator, final T... items) {\n    if (comparator == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.notEmpty(items, \"null/empty items\");\n            org.apache.commons.lang3.Validate.noNullElements(items);\n            org.apache.commons.lang3.Validate.notNull(comparator, \"null comparator\");\n            final java.util.TreeSet<T> java.util.TreeSet<T> = new java.util.TreeSet<T>(comparator);\n            java.util.Collections.addAll(sort, items);\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final T T = ((T)(sort.toArray()[(((sort.size()) - 1) / 2)]));\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comp":"comparator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2054","type":"CtBinaryOperatorImpl","sourcecode":"len < (size)"},"failures":[],"tindex":"176d273d-2eb0-11e6-a81b-77d303d5e629","method":{"position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:103","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean translate(final int codepoint, final java.io.Writer out) throws java.io.IOException {\n    if (codepoint < codepoint) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (boolean) {\n                if ((codepoint < (int)) || (codepoint > (int))) {\n                    return false;\n                } \n            } else {\n                if ((codepoint >= (int)) && (codepoint <= (int))) {\n                    return false;\n                } \n            }\n            out.write(\"&#\");\n            out.write(java.lang.Integer.toString(codepoint, 10));\n            out.write(';');\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"codepoint","size":"codepoint"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4742","type":"CtBinaryOperatorImpl","sourcecode":"textIndex == (-1)"},"failures":[],"tindex":"176d4e4e-2eb0-11e6-a81b-9f623cd7a8ca","method":{"position":"org.apache.commons.lang3.time.DateUtils:1726","type":"CtMethodImpl","sourcecode":"public static boolean truncatedEquals(final java.util.Calendar cal1, final java.util.Calendar cal2, final int field) {\n    if (field == (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (org.apache.commons.lang3.time.DateUtils.truncatedCompareTo(cal1, cal2, field)) == 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"textIndex":"field"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3222","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[18],"tindex":"176d755f-2eb0-11e6-a81b-21e9fcfc26ce","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2263","type":"CtMethodImpl","sourcecode":"public boolean contains(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (indexOf(str, 0)) >= 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:732","type":"CtInvocationImpl","sourcecode":"str.startsWith(\"-\")"},"failures":[19,19,20,21],"tindex":"176d9c70-2eb0-11e6-a81b-b97cd2006341","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1150","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final byte[] array, final java.lang.Boolean fullDetail) {\n    if (fieldName.startsWith(\"-\")) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendFieldStart(buffer, fieldName);\n            if (array == null) {\n                appendNullText(buffer, fieldName);\n            } else if (isFullDetail(fullDetail)) {\n                appendDetail(buffer, fieldName, array);\n            } else {\n                appendSummary(buffer, fieldName, array);\n            }\n            appendFieldEnd(buffer, fieldName);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1208","type":"CtBinaryOperatorImpl","sourcecode":"c > a"},"failures":[],"tindex":"176dc381-2eb0-11e6-a81b-3fd60d1d1442","method":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:370","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic T get(final long timeout, final java.util.concurrent.TimeUnit unit) {\n    if (timeout > timeout) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return T;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"timeout","c":"timeout"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:591","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"176dea92-2eb0-11e6-a81b-2f2fb478721a","method":{"position":"org.apache.commons.lang3.reflect.MethodUtils:336","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Method getAccessibleMethod(final java.lang.Class<?> cls, final java.lang.String methodName, final java.lang.Class<?>... parameterTypes) {\n    if (methodName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            try {\n                return org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethod(cls.getMethod(methodName, parameterTypes));\n            } catch (final java.lang.NoSuchMethodException e) {\n                return null;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"methodName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:814","type":"CtBinaryOperatorImpl","sourcecode":"lhs == null"},"failures":[22,23,24,25,26,27,28,29],"tindex":"176e11a3-2eb0-11e6-a81b-83a321f0fd7e","method":{"position":"org.apache.commons.lang3.text.WordUtils:569","type":"CtMethodImpl","sourcecode":"private static boolean isDelimiter(final char ch, final char[] delimiters) {\n    if (delimiters == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (delimiters == null) {\n                return java.lang.Character.isWhitespace(ch);\n            } \n            for (final char char : delimiters) {\n                if (ch == delimiter) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"delimiters"},"type":"special","returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":14,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}