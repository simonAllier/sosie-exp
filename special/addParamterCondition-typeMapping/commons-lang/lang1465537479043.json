{"failureDictionary":{"org.apache.commons.lang3.text.StrBuilderTest.testDeleteFirst_String":242,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":162,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_Boolean":97,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":157,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSplit":326,"org.apache.commons.lang3.text.StrBuilderTest.testSubstringInt":250,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOf_char":235,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLANG815":311,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveBooleanArray":282,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_String":118,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":182,"org.apache.commons.lang3.text.StrBuilderTest.testToCharArray":237,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteIntInt":232,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceFirst_String_String":230,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":154,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceAll_StrMatcher_String":244,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":143,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":181,"org.apache.commons.lang3.ClassUtilsTest.test_getAllInterfaces_Class":86,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiBooleanArray":42,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":149,"org.apache.commons.lang3.text.StrBuilderTest.testIsEmpty":263,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiDoubleArray":49,"org.apache.commons.lang3.text.StrBuilderTest.testContains_StrMatcher":258,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHiragana":307,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_StringBuffer_int_int":127,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparators_Array":142,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_StrMatcher_int":272,"org.apache.commons.lang3.text.StrBuilderTest.testReverse":246,"org.apache.commons.lang3.StringUtilsTest.testSplitByCharacterType":56,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":279,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang708":298,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiCharArray":61,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlVersions":305,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOfLang294":203,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StrBuilder":116,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":51,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml10":294,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePartialString_noReplace":175,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml11":295,"org.apache.commons.lang3.text.StrBuilderTest.testHashCode":249,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":145,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":173,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StrBuilder_int_int":99,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllObjectArrayOutOfBoundsIndex":65,"org.apache.commons.lang3.builder.CompareToBuilderTest.testCharArray":58,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_String":132,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationISO":316,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":146,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":186,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllObjectArrayRemoveNone":68,"org.apache.commons.lang3.text.StrBuilderTest.testRightString":212,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_StrBuilder_int_int":137,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_FormattedString":139,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":17,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_StringBuilder_int_int":141,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":150,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":185,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeEcmaScript":301,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_String_int_int":102,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryEndIndex":207,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOf_String":267,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJavaWithSlash":293,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiFloatArray":43,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOf_StrMatcher_int":239,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendAll_Array":121,"org.apache.commons.lang3.builder.CompareToBuilderTest.testCharArrayHiddenByObject":63,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":3,"org.apache.commons.lang3.builder.EqualsBuilderTest.testObjectArray":36,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StringBuilder_int_int":122,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_int_int_String":236,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISOMethod":318,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiShortArray":50,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairsLang858":285,"org.apache.commons.lang3.text.StrBuilderTest.testClear":209,"org.apache.commons.lang3.StringEscapeUtilsTest.testStandaloneAmphersand":288,"org.apache.commons.lang3.text.StrBuilderTest.testToStringBuilder":222,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadRight_int":95,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionArrays":38,"org.apache.commons.lang3.ObjectUtilsTest.testIdentityToStringStrBuilder":274,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedStaticFieldForceAccess":83,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StringBuilder":135,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendSeparator_String":117,"org.apache.commons.lang3.ArrayUtilsTest.testSameLengthByte":73,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryReplace":260,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiCharArray":37,"org.apache.commons.lang3.math.NumberUtilsTest.testMaximumByte":28,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiByteArray":41,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":193,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeUnknownEntity":306,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_CharArray_int_int":107,"org.apache.commons.lang3.text.StrBuilderTest.testToStringBuffer":265,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":155,"org.apache.commons.lang3.StringUtilsTest.testUnescapeSurrogatePairs":284,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendNewLine":106,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":194,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":174,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":184,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":195,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":196,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":24,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":156,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtml":290,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testLang299":111,"org.apache.commons.lang3.text.StrBuilderTest.testGetChars":205,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLANG984":313,"org.apache.commons.lang3.BooleanUtilsTest.test_isNotTrue_Boolean":71,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLANG982":312,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":53,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorNoArgs":159,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendAll_Iterator":109,"org.apache.commons.lang3.ArrayUtilsTest.testToObject_boolean":280,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithNullText":113,"org.apache.commons.lang3.text.StrBuilderTest.testAsWriter":224,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_Boolean":98,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_char":255,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteAll_StrMatcher":262,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":18,"org.apache.commons.lang3.text.StrBuilderTest.testEqualsIgnoreCase":219,"org.apache.commons.lang3.reflect.FieldUtilsTest.testAmbig":78,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationWords":323,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":192,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":283,"org.apache.commons.lang3.text.StrBuilderTest.testLang294":225,"org.apache.commons.lang3.text.StrBuilderTest.testSubstringIntInt":216,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparatorsWithNullText":125,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadStaticFieldForceAccess":75,"org.apache.commons.lang3.text.StrBuilderTest.testLang295":226,"org.apache.commons.lang3.builder.EqualsBuilderTest.testRaggedArray":39,"org.apache.commons.lang3.text.StrBuilderTest.testStartsWith":270,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_FormattedString":128,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceAll_char_char":227,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_StrBuilder":114,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_String_int_int":133,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":164,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryMatcher":253,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairs":277,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendSeparator_String_String":120,"org.apache.commons.lang3.text.StrTokenizerTest.testChaining":27,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testBugzilla38401":321,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang720":299,"org.apache.commons.lang3.BooleanUtilsTest.test_isTrue_Boolean":72,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":144,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":198,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayToObjectArray":87,"org.apache.commons.lang3.StringUtilsTest.testSplitByCharacterTypeCamelCase":57,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendSeparator_char":123,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadRight":136,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHexCharsHtml":303,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeXmlSupplementaryCharacters":304,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceAll_String_String":223,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationPluralWords":320,"org.apache.commons.lang3.text.StrBuilderTest.testMidString":243,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_StringBuffer":108,"org.apache.commons.lang3.text.StrBuilderTest.testMinimizeCapacity":215,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":169,"org.apache.commons.lang3.text.StrBuilderTest.testConstructors":214,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryStartIndex":248,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang313":297,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testDurationsByBruteForce":309,"org.apache.commons.lang3.ArrayUtilsTest.testIsEquals":55,"org.apache.commons.lang3.RandomUtilsTest.testExtremeRangeInt":90,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparators_Collection":93,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedField":79,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedStaticField":76,"org.apache.commons.lang3.text.StrBuilderTest.testLength":259,"org.apache.commons.lang3.BooleanUtilsTest.test_toInteger_boolean":31,"org.apache.commons.lang3.ClassUtilsTest.testGetPublicMethod":85,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":172,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_CharArray":140,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiIntArray":45,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllNumberArray":67,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":158,"org.apache.commons.lang3.text.StrBuilderTest.testToString":213,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testJiraLang281":324,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":183,"org.apache.commons.lang3.builder.DiffBuilderTest.testSimilarObjectIgnoresAppends":52,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceFirst_StrMatcher_String":200,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StringBuffer":124,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":165,"org.apache.commons.lang3.text.StrBuilderTest.testToCharArrayIntInt":264,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadLeft_int":103,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":179,"org.apache.commons.lang3.text.StrBuilderTest.testAsReader":221,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlSupplementaryCharacters":296,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriod":310,"org.apache.commons.lang3.text.StrBuilderTest.testEnsureCapacity":240,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_String":206,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_Object":115,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteAll_char":30,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoVariables":166,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":168,"org.apache.commons.lang3.text.StrBuilderTest.testCapacityAndLength":220,"org.apache.commons.lang3.math.FractionTest.testFactory_double":33,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendAll_Collection":104,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvString":278,"org.apache.commons.lang3.builder.CompareToBuilderTest.testChar":62,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendSeparator_char_char":110,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":170,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOf_String_int":257,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_Object":129,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":147,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":176,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectAtIndex":275,"org.apache.commons.lang3.builder.EqualsBuilderTest.testObjectArrayHiddenByObject":40,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHtml4":289,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":25,"org.apache.commons.lang3.reflect.InheritanceUtilsTest.testDistanceGreaterThanZero":32,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteFirst_char":261,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":26,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDuration":322,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testStartsWithAny":91,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_CharArray_int_int":100,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":152,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":151,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteCharAt":229,"org.apache.commons.lang3.text.StrBuilderTest.testEndsWith":202,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendSeparator_char_int":119,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":148,"org.apache.commons.lang3.text.StrBuilderTest.testLang412Left":217,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOf_char_int":268,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendPadding":131,"org.apache.commons.lang3.math.FractionTest.testAdd":281,"org.apache.commons.lang3.text.StrBuilderTest.testChaining":273,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":177,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":178,"org.apache.commons.lang3.text.StrBuilderTest.testLeftString":256,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetField":77,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":291,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteFirst_StrMatcher":199,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteAll_String":201,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_char_int":208,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_PrimitiveNumber":134,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareExcludeFields":59,"org.apache.commons.lang3.RandomUtilsTest.testNextIntNegative":89,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":180,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":160,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":287,"org.apache.commons.lang3.text.StrBuilderTest.testContains_String":218,"org.apache.commons.lang3.text.StrBuilderTest.testContains_char":231,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllObjectArray":69,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":197,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparators_Iterator":112,"org.apache.commons.lang3.text.StrBuilderTest.testSubSequenceIntInt":204,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryCount":233,"org.apache.commons.lang3.builder.EqualsBuilderTest.testNpeForNullElement":47,"org.apache.commons.lang3.text.StrBuilderTest.testLang412Right":241,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadLeft":101,"org.apache.commons.lang3.text.StrBuilderTest.testCapacity":245,"org.apache.commons.lang3.text.StrTokenizerTest.test8":189,"org.apache.commons.lang3.text.StrBuilderTest.testSize":210,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_String_int":228,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":300,"org.apache.commons.lang3.text.StrTokenizerTest.test5":15,"org.apache.commons.lang3.text.StrTokenizerTest.test4":14,"org.apache.commons.lang3.text.StrTokenizerTest.test7":188,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceFirst_char_char":234,"org.apache.commons.lang3.text.StrTokenizerTest.test6":16,"org.apache.commons.lang3.text.StrTokenizerTest.test1":11,"org.apache.commons.lang3.text.StrTokenizerTest.test3":13,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":187,"org.apache.commons.lang3.text.StrTokenizerTest.test2":12,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml":308,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":54,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsert":74,"org.apache.commons.lang3.text.StrBuilderTest.testCharAt":252,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_Integer_Integer_Integer_Integer":276,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":0,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLowDurations":314,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":1,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareTransients":64,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_StringBuilder":105,"org.apache.commons.lang3.text.StrBuilderTest.testGetCharsIntIntCharArrayInt":269,"org.apache.commons.lang3.text.StrBuilderTest.testSetCharAt":247,"org.apache.commons.lang3.text.StrBuilderTest.testTrim":211,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJson":292,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testEdgeDurations":319,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testEndsWithAny":92,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":286,"org.apache.commons.lang3.math.FractionTest.testToProperString":34,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StringBuffer_int_int":130,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":153,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlHighUnicode":302,"org.apache.commons.lang3.ConversionTest.testBinaryToShort":29,"org.apache.commons.lang3.ArrayUtilsTest.testNUllToEmptyCharObjectNull":70,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":4,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":2,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":6,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":5,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":8,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":7,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationHMS":315,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":10,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":9,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":23,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetFieldForceAccess":81,"org.apache.commons.lang3.builder.EqualsBuilderTest.testUnrelatedClasses":46,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":35,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedField":80,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":163,"org.apache.commons.lang3.text.StrBuilderTest.testSetLength":251,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedStaticField":82,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_CharArray":138,"org.apache.commons.lang3.text.StrBuilderTest.testEquals":254,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompare":60,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testAcquireNoLimit":88,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":21,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":190,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":20,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiLongArray":48,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":22,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOf_StrMatcher":271,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":171,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_StrMatcher":238,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":19,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":191,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllObjectArrayNegativeIndex":66,"org.apache.commons.lang3.text.StrBuilderTest.testAsBuilder":266,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":84,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSimpleGet":325,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_PrimitiveNumber":96,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":167,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsertWithNullText":94,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMixedArray":44,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":317,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendSeparator_String_int":126,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":161},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5693","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isTitleCase(firstChar)"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"tindex":"6bf57e44-2ece-11e6-a169-cb58209695fd","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:874","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrTokenizer setDelimiterChar(final char delim) {\n    if (java.lang.Character.isTitleCase(delim)) {\n        {\n            return setDelimiterMatcher(org.apache.commons.lang3.text.StrMatcher.charMatcher(delim));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"firstChar":"delim"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:220","type":"CtBinaryOperatorImpl","sourcecode":"lhs != rhs"},"failures":[28],"tindex":"6bf64195-2ece-11e6-a169-7f9a0f605221","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1258","type":"CtMethodImpl","sourcecode":"public static byte max(byte a, final byte b, final byte c) {\n    if (c != a) {\n        {\n            if (b > a) {\n                a = b;\n            } \n            if (c > a) {\n                a = c;\n            } \n            return a;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"c","rhs":"a"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:766","type":"CtUnaryOperatorImpl","sourcecode":"!(java.util.Arrays.equals(lhs, rhs))"},"failures":[],"tindex":"6bf64196-2ece-11e6-a169-4106abd0f720","method":{"position":"org.apache.commons.lang3.mutable.MutableObject:93","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (!(java.util.Arrays.equals(obj, obj))) {\n        {\n            if (obj == null) {\n                return false;\n            } \n            if ((org.apache.commons.lang3.mutable.MutableObject.this) == obj) {\n                return true;\n            } \n            if ((org.apache.commons.lang3.mutable.MutableObject.this.getClass()) == (obj.getClass())) {\n                final org.apache.commons.lang3.mutable.MutableObject<?> org.apache.commons.lang3.mutable.MutableObject<?> = ((org.apache.commons.lang3.mutable.MutableObject<?>)(obj));\n                return org.apache.commons.lang3.mutable.MutableObject.this.T.equals(that.?);\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"obj","rhs":"obj"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:208","type":"CtBinaryOperatorImpl","sourcecode":"previous != null"},"failures":[],"tindex":"6bf668a7-2ece-11e6-a169-354ed1751cab","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1012","type":"CtMethodImpl","sourcecode":"protected void appendSummary(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final long[] array) {\n    if (fieldName != null) {\n        {\n            appendSummarySize(buffer, fieldName, array.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"previous":"fieldName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomStringUtils:282","type":"CtBinaryOperatorImpl","sourcecode":"(ch >= 56192) && (ch <= 56319)"},"failures":[],"tindex":"6bf68fb8-2ece-11e6-a169-e3db89b44594","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:617","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final char value) {\n    if ((value >= 56192) && (ch <= 56319)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, value);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"value"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:909","type":"CtBinaryOperatorImpl","sourcecode":"(array.length) == 0"},"failures":[29],"tindex":"6bf68fb9-2ece-11e6-a169-33c44200486f","method":{"position":"org.apache.commons.lang3.Conversion:1115","type":"CtMethodImpl","sourcecode":"public static short binaryToShort(final boolean[] src, final int srcPos, final short dstInit, final int dstPos, final int nBools) {\n    if (dstPos == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((((src.int) == 0) && (srcPos == 0)) || (0 == nBools)) {\n                return dstInit;\n            } \n            if (((nBools - 1) + dstPos) >= 16) {\n                throw new java.lang.IllegalArgumentException(\"nBools-1+dstPos is greather or equal to than 16\");\n            } \n            short short = dstInit;\n            int int = 0;\n            for (int int = 0 ; i < nBools ; i++) {\n                shift = (i * 1) + dstPos;\n                final int int = (src[(i + srcPos)] ? 1 : 0) << shift;\n                final int int = 1 << shift;\n                out = ((short)((out & (~mask)) | bits));\n            }\n            return out;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"src","length":"dstPos"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSequenceUtils:200","type":"CtBinaryOperatorImpl","sourcecode":"c1 == c2"},"failures":[30],"tindex":"6bf6b6ca-2ece-11e6-a169-4bcf6a13c4d9","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1702","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder deleteAll(final char ch) {\n    if (ch == ch) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (int int = 0 ; i < (int) ; i++) {\n                if ((char[][i]) == ch) {\n                    final int int = i;\n                    while ((++i) < (int)) {\n                        if ((char[][i]) != ch) {\n                            break;\n                        } \n                    }\n                    final int int = i - start;\n                    deleteImpl(start, i, len);\n                    i -= len;\n                } \n            }\n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c1":"ch","c2":"ch"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:130","type":"CtBinaryOperatorImpl","sourcecode":"expression == false"},"failures":[31,32],"tindex":"6bf6dddb-2ece-11e6-a169-f386edea1b0e","method":{"position":"org.apache.commons.lang3.BooleanUtils:392","type":"CtMethodImpl","sourcecode":"public static int toInteger(final boolean bool) {\n    if (bool == false) {\n        {\n            return bool ? 1 : 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"expression":"bool"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:106","type":"CtInvocationImpl","sourcecode":"java.lang.Double.isNaN(b)"},"failures":[33,34,35],"tindex":"6bf6dddc-2ece-11e6-a169-e9199a46de9d","method":{"position":"org.apache.commons.lang3.math.Fraction:249","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.math.Fraction getFraction(double value) {\n    if (java.lang.Double.isNaN(value)) {\n        {\n            final int int = value < 0 ? -1 : 1;\n            value = java.lang.Math.abs(value);\n            if ((value > (java.lang.Integer.java.lang.Integer.int)) || (java.lang.Double.isNaN(value))) {\n                throw new java.lang.ArithmeticException(\"The value must not be greater than Integer.MAX_VALUE or NaN\");\n            } \n            final int int = ((int)(value));\n            value -= wholeNumber;\n            int int = 0;\n            int int = 1;\n            int int = 1;\n            int int = 0;\n            int int = 0;\n            int int = 0;\n            int int = ((int)(value));\n            int int = 0;\n            double double = 1;\n            double double = 0;\n            double double = value - a1;\n            double double = 0;\n            double double;\n            double double = java.lang.Double.java.lang.Double.double;\n            double double;\n            int int = 1;\n            do {\n                delta1 = delta2;\n                a2 = ((int)(x1 / y1));\n                x2 = y1;\n                y2 = x1 - (a2 * y1);\n                numer2 = (a1 * numer1) + numer0;\n                denom2 = (a1 * denom1) + denom0;\n                fraction = ((double)(numer2)) / ((double)(denom2));\n                delta2 = java.lang.Math.abs((value - fraction));\n                a1 = a2;\n                x1 = x2;\n                y1 = y2;\n                numer0 = numer1;\n                denom0 = denom1;\n                numer1 = numer2;\n                denom1 = denom2;\n                i++;\n            } while ((((delta1 > delta2) && (denom2 <= 10000)) && (denom2 > 0)) && (i < 25) );\n            if (i == 25) {\n                throw new java.lang.ArithmeticException(\"Unable to convert double to fraction\");\n            } \n            return org.apache.commons.lang3.math.Fraction.getReducedFraction(((numer0 + (wholeNumber * denom0)) * sign), denom0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:863","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(seq)"},"failures":[],"tindex":"6bf704ed-2ece-11e6-a169-f78e38f6a8e6","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:470","type":"CtMethodImpl","sourcecode":"protected void appendInternal(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final java.lang.Object value, final boolean detail) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(value)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.builder.ToStringStyle.isRegistered(value)) && (!(((value instanceof java.lang.Number) || (value instanceof java.lang.Boolean)) || (value instanceof java.lang.Character)))) {\n                appendCyclicObject(buffer, fieldName, value);\n                return ;\n            } \n            org.apache.commons.lang3.builder.ToStringStyle.register(value);\n            try {\n                if (value instanceof java.util.Collection<?>) {\n                    if (detail) {\n                        appendDetail(buffer, fieldName, ((java.util.Collection<?>)(value)));\n                    } else {\n                        appendSummarySize(buffer, fieldName, ((java.util.Collection<?>)(value)).size());\n                    }\n                } else if (value instanceof java.util.Map<?, ?>) {\n                    if (detail) {\n                        appendDetail(buffer, fieldName, ((java.util.Map<?, ?>)(value)));\n                    } else {\n                        appendSummarySize(buffer, fieldName, ((java.util.Map<?, ?>)(value)).size());\n                    }\n                } else if (value instanceof long[]) {\n                    if (detail) {\n                        appendDetail(buffer, fieldName, ((long[])(value)));\n                    } else {\n                        appendSummary(buffer, fieldName, ((long[])(value)));\n                    }\n                } else if (value instanceof int[]) {\n                    if (detail) {\n                        appendDetail(buffer, fieldName, ((int[])(value)));\n                    } else {\n                        appendSummary(buffer, fieldName, ((int[])(value)));\n                    }\n                } else if (value instanceof short[]) {\n                    if (detail) {\n                        appendDetail(buffer, fieldName, ((short[])(value)));\n                    } else {\n                        appendSummary(buffer, fieldName, ((short[])(value)));\n                    }\n                } else if (value instanceof byte[]) {\n                    if (detail) {\n                        appendDetail(buffer, fieldName, ((byte[])(value)));\n                    } else {\n                        appendSummary(buffer, fieldName, ((byte[])(value)));\n                    }\n                } else if (value instanceof char[]) {\n                    if (detail) {\n                        appendDetail(buffer, fieldName, ((char[])(value)));\n                    } else {\n                        appendSummary(buffer, fieldName, ((char[])(value)));\n                    }\n                } else if (value instanceof double[]) {\n                    if (detail) {\n                        appendDetail(buffer, fieldName, ((double[])(value)));\n                    } else {\n                        appendSummary(buffer, fieldName, ((double[])(value)));\n                    }\n                } else if (value instanceof float[]) {\n                    if (detail) {\n                        appendDetail(buffer, fieldName, ((float[])(value)));\n                    } else {\n                        appendSummary(buffer, fieldName, ((float[])(value)));\n                    }\n                } else if (value instanceof boolean[]) {\n                    if (detail) {\n                        appendDetail(buffer, fieldName, ((boolean[])(value)));\n                    } else {\n                        appendSummary(buffer, fieldName, ((boolean[])(value)));\n                    }\n                } else if (value.getClass().isArray()) {\n                    if (detail) {\n                        appendDetail(buffer, fieldName, ((java.lang.Object[])(value)));\n                    } else {\n                        appendSummary(buffer, fieldName, ((java.lang.Object[])(value)));\n                    }\n                } else {\n                    if (detail) {\n                        appendDetail(buffer, fieldName, value);\n                    } else {\n                        appendSummary(buffer, fieldName, value);\n                    }\n                }\n            } finally {\n                org.apache.commons.lang3.builder.ToStringStyle.unregister(value);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"seq":"value"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1819","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"tindex":"6bf7530e-2ece-11e6-a169-2b85fc9b0228","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:639","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.EqualsBuilder append(final java.lang.Object[] lhs, final java.lang.Object[] rhs) {\n    if (lhs == null) {\n        {\n            if ((boolean) == false) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if ((lhs == null) || (rhs == null)) {\n                org.apache.commons.lang3.builder.EqualsBuilder.this.setEquals(false);\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                org.apache.commons.lang3.builder.EqualsBuilder.this.setEquals(false);\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && (boolean) ; ++i) {\n                append(lhs[i], rhs[i]);\n            }\n            return org.apache.commons.lang3.builder.EqualsBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"lhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:1083","type":"CtBinaryOperatorImpl","sourcecode":"(value <= start) || (value >= end)"},"failures":[],"tindex":"6bf77a1f-2ece-11e6-a169-a9daa7a14357","method":{"position":"org.apache.commons.lang3.mutable.MutableLong:137","type":"CtMethodImpl","sourcecode":"public void add(final long operand) {\n    if ((operand <= operand) || (value >= operand)) {\n        {\n            org.apache.commons.lang3.mutable.MutableLong.this.long += operand;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"operand","end":"operand","value":"operand"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:467","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isLowerCase(ch)"},"failures":[58,59,60,61,62,63,64],"tindex":"6bf77a20-2ece-11e6-a169-2b22d063fb55","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:510","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final char lhs, final char rhs) {\n    if (java.lang.Character.isLowerCase(lhs)) {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            int = lhs < rhs ? -1 : lhs > rhs ? 1 : 0;\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"lhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:708","type":"CtBinaryOperatorImpl","sourcecode":"(lhs == null) || (rhs == null)"},"failures":[65,66,67,68,69],"tindex":"6bf7a031-2ece-11e6-a169-f14ac4d97e16","method":{"position":"org.apache.commons.lang3.ArrayUtils:5232","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>T[] removeAll(final T[] array, final int... indices) {\n    if ((indices == null) || (indices == null)) {\n        {\n            return ((T[])(org.apache.commons.lang3.ArrayUtils.removeAll(((java.lang.Object)(array)), org.apache.commons.lang3.ArrayUtils.clone(indices))));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"indices","rhs":"indices"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2958","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[70],"tindex":"6bf7a032-2ece-11e6-a169-6f4a7ccfe9a0","method":{"position":"org.apache.commons.lang3.ArrayUtils:752","type":"CtMethodImpl","sourcecode":"public static java.lang.Character[] nullToEmpty(final java.lang.Character[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((array == null) || ((array.int) == 0)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Character[];\n            } \n            return array;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:505","type":"CtBinaryOperatorImpl","sourcecode":"bool == null"},"failures":[71,72],"tindex":"6bf7a033-2ece-11e6-a169-fb99ceaa2538","method":{"position":"org.apache.commons.lang3.BooleanUtils:86","type":"CtMethodImpl","sourcecode":"public static boolean isTrue(final java.lang.Boolean bool) {\n    if (bool == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean.equals(bool);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bool":"bool"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3274","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[73],"tindex":"6bf7c744-2ece-11e6-a169-4733591ebadb","method":{"position":"org.apache.commons.lang3.ArrayUtils:1317","type":"CtMethodImpl","sourcecode":"public static boolean isSameLength(final byte[] array1, final byte[] array2) {\n    if (array1 == null) {\n        {\n            if (((((array1 == null) && (array2 != null)) && ((array2.int) > 0)) || (((array2 == null) && (array1 != null)) && ((array1.int) > 0))) || (((array1 != null) && (array2 != null)) && ((array1.int) != (array2.int)))) {\n                return false;\n            } \n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1327","type":"CtBinaryOperatorImpl","sourcecode":"(((nBytes - 1) * 8) + srcPos) >= 32"},"failures":[74],"tindex":"6bf7c745-2ece-11e6-a169-f311c6e3962a","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1647","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder insert(final int index, final float value) {\n    if ((((index - 1) * 8) + index) >= 32) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return insert(index, java.lang.String.valueOf(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nBytes":"index","srcPos":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:412","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[],"tindex":"6bf7c746-2ece-11e6-a169-23e06027789c","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1081","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final int value) {\n    if (value < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.time.FastDatePrinter.NumberRule.appendTo(buffer, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:357","type":"CtInvocationImpl","sourcecode":"testClass.isArray()"},"failures":[75,76,77,78,79,80,81,82,83,84,85,86],"tindex":"6bf7ee57-2ece-11e6-a169-8938a3d9cc70","method":{"position":"org.apache.commons.lang3.ClassUtils:352","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.lang.Class<?>> getAllInterfaces(final java.lang.Class<?> cls) {\n    if (cls.isArray()) {\n        {\n            if (cls == null) {\n                return null;\n            } \n            final java.util.LinkedHashSet<java.lang.Class<?>> java.util.LinkedHashSet<java.lang.Class<?>> = new java.util.LinkedHashSet<java.lang.Class<?>>();\n            org.apache.commons.lang3.ClassUtils.getAllInterfaces(cls, interfacesFound);\n            return new java.util.ArrayList<java.lang.Class<?>>(interfacesFound);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"testClass":"cls"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:1106","type":"CtBinaryOperatorImpl","sourcecode":"(value <= start) || (value >= end)"},"failures":[],"tindex":"6bf7ee58-2ece-11e6-a169-c1d39c0da175","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1038","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendln(final long value) {\n    if ((value <= value) || (value >= value)) {\n        {\n            return append(value).appendNewLine();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"value","end":"value","value":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:934","type":"CtBinaryOperatorImpl","sourcecode":"lhs == null"},"failures":[87],"tindex":"6bf7ee59-2ece-11e6-a169-93af487082d5","method":{"position":"org.apache.commons.lang3.ArrayUtils:3936","type":"CtMethodImpl","sourcecode":"public static float[] addAll(final float[] array1, final float... array2) {\n    if (array1 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array1 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array2);\n            } else if (array2 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array1);\n            } \n            final float[] float[] = new float[(array1.int) + (array2.int)];\n            java.lang.System.arraycopy(array1, 0, joinedArray, 0, array1.int);\n            java.lang.System.arraycopy(array2, 0, joinedArray, array1.int, array2.int);\n            return joinedArray;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1689","type":"CtBinaryOperatorImpl","sourcecode":"len > 0"},"failures":[88],"tindex":"6bf7ee5a-2ece-11e6-a169-7378d45cc6ea","method":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:247","type":"CtMethodImpl","sourcecode":"public final synchronized void setLimit(final int limit) {\n    if (limit > 0) {\n        {\n            org.apache.commons.lang3.concurrent.TimedSemaphore.this.int = limit;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"limit"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:309","type":"CtBinaryOperatorImpl","sourcecode":"i > 0"},"failures":[89,90],"tindex":"6bf8156b-2ece-11e6-a169-638ac9d29a5a","method":{"position":"org.apache.commons.lang3.RandomUtils:84","type":"CtMethodImpl","sourcecode":"public static int nextInt(int startInclusive, int endExclusive) {\n    if (startInclusive > 0) {\n        {\n            org.apache.commons.lang3.Validate.isTrue((endExclusive >= startInclusive), \"Start value must be smaller or equal to end value.\");\n            org.apache.commons.lang3.Validate.isTrue((startInclusive >= 0), \"Both range values must be non-negative.\");\n            if (startInclusive == endExclusive) {\n                return startInclusive;\n            } \n            return startInclusive + (org.apache.commons.lang3.RandomUtils.org.apache.commons.lang3.RandomUtils.java.util.Random.nextInt((endExclusive - startInclusive)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"startInclusive"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1113","type":"CtBinaryOperatorImpl","sourcecode":"startPos < 0"},"failures":[91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,74,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,0,1,177,178,2,179,180,3,181,182,183,184,185,4,5,6,7,8,9,10,186,187,11,12,13,14,15,16,188,189,17,190,191,18,192,19,20,21,22,23,193,194,195,196,24,197,25,26,198,199,200,201,202,203,204,205,206,30,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274],"tindex":"6bf8156c-2ece-11e6-a169-87eb908b7a18","method":{"position":"org.apache.commons.lang3.text.StrBuilder:233","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder ensureCapacity(final int capacity) {\n    if (capacity < 0) {\n        {\n            if (capacity > (char[].int)) {\n                final char[] char[] = char[];\n                char[] = new char[capacity * 2];\n                java.lang.System.arraycopy(old, 0, char[], 0, int);\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startPos":"capacity"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDatePrinter:312","type":"CtBinaryOperatorImpl","sourcecode":"peek == c"},"failures":[110],"tindex":"6bf83c7d-2ece-11e6-a169-335805cb8449","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1290","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendSeparator(final char standard, final char defaultIfEmpty) {\n    if (defaultIfEmpty == defaultIfEmpty) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((size()) > 0) {\n                append(standard);\n            } else {\n                append(defaultIfEmpty);\n            }\n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"defaultIfEmpty","peek":"defaultIfEmpty"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:4575","type":"CtBinaryOperatorImpl","sourcecode":"index < length"},"failures":[275],"tindex":"6bf8638e-2ece-11e6-a169-259498f39a98","method":{"position":"org.apache.commons.lang3.ArrayUtils:4326","type":"CtMethodImpl","sourcecode":"public static boolean[] add(final boolean[] array, final int index, final boolean element) {\n    if (index < index) {\n        {\n            return ((boolean[])(org.apache.commons.lang3.ArrayUtils.add(array, index, java.lang.Boolean.valueOf(element), java.lang.Boolean.java.lang.Boolean.java.lang.Class<java.lang.Boolean>)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"index","index":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:361","type":"CtBinaryOperatorImpl","sourcecode":"falseValue == null"},"failures":[276],"tindex":"6bf8638f-2ece-11e6-a169-9baac8c91f8b","method":{"position":"org.apache.commons.lang3.BooleanUtils:356","type":"CtMethodImpl","sourcecode":"public static java.lang.Boolean toBooleanObject(final java.lang.Integer value, final java.lang.Integer trueValue, final java.lang.Integer falseValue, final java.lang.Integer nullValue) {\n    if (trueValue == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                if (trueValue == null) {\n                    return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                } \n                if (falseValue == null) {\n                    return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n                } \n                if (nullValue == null) {\n                    return null;\n                } \n            } else if (value.equals(trueValue)) {\n                return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n            } else if (value.equals(falseValue)) {\n                return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n            } else if (value.equals(nullValue)) {\n                return null;\n            } \n            throw new java.lang.IllegalArgumentException(\"The Integer did not match any specified value\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"falseValue":"trueValue"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:525","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[277,278],"tindex":"6bf86390-2ece-11e6-a169-c589fbce9715","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:776","type":"CtMethodImpl","sourcecode":"public static final java.lang.String escapeCsv(final java.lang.String input) {\n    if (input == null) {\n        {\n            return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:146","type":"CtBinaryOperatorImpl","sourcecode":"methodNames == null"},"failures":[84],"tindex":"6bf88aa1-2ece-11e6-a169-35408ed40725","method":{"position":"org.apache.commons.lang3.AnnotationUtils:91","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, java.lang.Object value) {\n    if (value == null) {\n        {\n            if (value instanceof java.lang.annotation.Annotation) {\n                value = org.apache.commons.lang3.AnnotationUtils.toString(((java.lang.annotation.Annotation)(value)));\n            } \n            super.appendDetail(buffer, fieldName, value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"methodNames":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1397","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[279,280],"tindex":"6bf88aa2-2ece-11e6-a169-5368bc08f80f","method":{"position":"org.apache.commons.lang3.ArrayUtils:3477","type":"CtMethodImpl","sourcecode":"public static java.lang.Boolean[] toObject(final boolean[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Boolean[];\n            } \n            final java.lang.Boolean[] java.lang.Boolean[] = new java.lang.Boolean[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = array[i] ? java.lang.Boolean.java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:741","type":"CtBinaryOperatorImpl","sourcecode":"fraction == null"},"failures":[281],"tindex":"6bf88aa3-2ece-11e6-a169-5734bf731e86","method":{"position":"org.apache.commons.lang3.math.Fraction:712","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.math.Fraction add(final org.apache.commons.lang3.math.Fraction fraction) {\n    if (fraction == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return addSub(fraction, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fraction":"fraction"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2442","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[],"tindex":"6bf88aa4-2ece-11e6-a169-85de6e14c578","method":{"position":"org.apache.commons.lang3.text.StrMatcher:366","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int isMatch(final char[] buffer, int pos, final int bufferStart, final int bufferEnd) {\n    if (bufferStart < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = char[].int;\n            if ((pos + len) > bufferEnd) {\n                return 0;\n            } \n            for (int int = 0 ; i < (char[].int) ; i++ , pos++) {\n                if ((char[][i]) != (buffer[pos])) {\n                    return 0;\n                } \n            }\n            return len;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"bufferStart"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:418","type":"CtArrayReadImpl","sourcecode":"src[srcPos]"},"failures":[282],"tindex":"6bf8b1b5-2ece-11e6-a169-351bda454903","method":{"position":"org.apache.commons.lang3.ArrayUtils:4677","type":"CtMethodImpl","sourcecode":"public static boolean[] remove(final boolean[] array, final int index) {\n    if (array[index]) {\n        {\n            return ((boolean[])(org.apache.commons.lang3.ArrayUtils.remove(((java.lang.Object)(array)), index)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcPos":"index","src":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.math.Fraction:512","type":"CtBinaryOperatorImpl","sourcecode":"(numerator) == (java.lang.Integer.MIN_VALUE)"},"failures":[283,277,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308],"tindex":"6bf8b1b6-2ece-11e6-a169-65a4f33cfd4b","method":{"position":"org.apache.commons.lang3.text.translate.AggregateTranslator:50","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int translate(final java.lang.CharSequence input, final int index, final java.io.Writer out) throws java.io.IOException {\n    if (index == index) {\n        throw new java.io.IOException();\n    } else {\n        {\n            for (final org.apache.commons.lang3.text.translate.CharSequenceTranslator org.apache.commons.lang3.text.translate.CharSequenceTranslator : org.apache.commons.lang3.text.translate.CharSequenceTranslator[]) {\n                final int int = translator.translate(input, index, out);\n                if (consumed != 0) {\n                    return consumed;\n                } \n            }\n            return 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.lang.Integer.MIN_VALUE":"index","numerator":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.IllegalArgumentException","condition":{"position":"org.apache.commons.lang3.ClassUtils:311","type":"CtBinaryOperatorImpl","sourcecode":"i == (-1)"},"failures":[],"tindex":"6bf8d8c7-2ece-11e6-a169-4394f5e8f91d","method":{"position":"org.apache.commons.lang3.ObjectUtils:787","type":"CtMethodImpl","sourcecode":"public static byte CONST_BYTE(final int v) throws java.lang.IllegalArgumentException {\n    if (v == (-1)) {\n        throw new java.lang.IllegalArgumentException();\n    } else {\n        {\n            if ((v < (java.lang.Byte.java.lang.Byte.byte)) || (v > (java.lang.Byte.java.lang.Byte.byte))) {\n                throw new java.lang.IllegalArgumentException(((\"Supplied value must be a valid byte literal between -128 and 127: [\" + v) + \"]\"));\n            } \n            return ((byte)(v));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"v"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1784","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326],"tindex":"6bf8d8c8-2ece-11e6-a169-df468bb348d6","method":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:566","type":"CtMethodImpl","sourcecode":"static boolean containsTokenWithValue(final org.apache.commons.lang3.time.DurationFormatUtils.Token[] tokens, final java.lang.Object value) {\n    if (value == null) {\n        {\n            final int int = tokens.int;\n            for (int int = 0 ; i < sz ; i++) {\n                if ((tokens[i].getValue()) == value) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"value"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":37,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}