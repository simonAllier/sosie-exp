{"failureDictionary":{"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddCombinations":78,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":69,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":7,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":71,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDateFragmentInLargerUnitWithDate":37,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGenericArrayType":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":10,"org.apache.commons.lang3.time.DateUtilsTest.testIsSameInstant_Date":70,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":12,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml":62,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":64,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":5,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":65,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberFailure_1":88,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":14,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberFailure_4":89,"org.apache.commons.lang3.builder.CompareToBuilderTest.testBooleanArray":0,"org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayOfBytes":49,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":1,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":27,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":68,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":31,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStripAll":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":26,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddDash":74,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StringBuffer":56,"org.apache.commons.lang3.CharRangeTest.testEquals_Object":83,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":18,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testNullDate":36,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithNullText":55,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":87,"org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss":90,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDaysOfMonthWithDate":40,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDayOfYearFragmentInLargerUnitWithDate":39,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_Object":57,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfLong":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":53,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHourOfDayFragmentInLargerUnitWithDate":41,"org.apache.commons.lang3.CharSetTest.testConstructor_String_combo":77,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfLongWithStartIndex":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":28,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":13,"org.apache.commons.lang3.CharRangeTest.testSerialization":82,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":23,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinuteFragmentInLargerUnitWithDate":35,"org.apache.commons.lang3.reflect.TypeUtilsTest.testWrap":46,"org.apache.commons.lang3.exception.ExceptionUtilsTest.test_getRootCauseMessage_Throwable":43,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":29,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testSpecialCharacters":48,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":20,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfShort":50,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":21,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateBigDecimal":86,"org.apache.commons.lang3.CharSetTest.testEquals_Object":76,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairs":60,"org.apache.commons.lang3.CharSetTest.testSerialization":75,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":16,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfInt":51,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang720":61,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondFragmentInLargerUnitWithDate":38,"org.apache.commons.lang3.exception.ExceptionUtilsTest.test_getMessage_Throwable":44,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddNegate":80,"org.apache.commons.lang3.CharSetTest.testConstructor_String_comboNegated":79,"org.apache.commons.lang3.ArrayUtilsTest.testToObject_double":59,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":63,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":25,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDaysOfYearWithDate":42,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":66,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementDoubleArray":45,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":24,"org.apache.commons.lang3.CharSetTest.testStatics":81,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":32,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":4,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":52,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":19,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondFragmentInLargerUnitWithDate":34,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":85,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":30},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:978","type":"CtBinaryOperatorImpl","sourcecode":"rhs == null"},"failures":[0],"tindex":"3da86a33-2e99-11e6-8987-5f36239ef16b","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:967","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final boolean[] lhs, final boolean[] rhs) {\n    if (lhs == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == null) {\n                int = -1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (rhs == null) {\n                int = +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                int = (lhs.int) < (rhs.int) ? -1 : +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && ((int) == 0) ; i++) {\n                append(lhs[i], rhs[i]);\n            }\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"rhs":"lhs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:573","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[1],"tindex":"3da92d84-2e99-11e6-8987-a9bc63dee50d","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:451","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.StringBuffer format(final java.util.Date date, final java.lang.StringBuffer buf) {\n    if (buf == null) {\n        {\n            final java.util.Calendar java.util.Calendar = newCalendar();\n            c.setTime(date);\n            return applyRules(c, buf);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"buf"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.FieldUtils:106","type":"CtUnaryOperatorImpl","sourcecode":"!(java.lang.reflect.Modifier.isPublic(field.getModifiers()))"},"failures":[2,2,3,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,26,27,28,29,29,30,30,31,32],"tindex":"3da95495-2e99-11e6-8987-e577ff1c8f36","method":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:479","type":"CtMethodImpl","sourcecode":"protected boolean accept(final java.lang.reflect.Field field) {\n    if (!(java.lang.reflect.Modifier.isPublic(field.getModifiers()))) {\n        {\n            if ((field.getName().indexOf(org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.char)) != (-1)) {\n                return false;\n            } \n            if ((java.lang.reflect.Modifier.isTransient(field.getModifiers())) && (!(org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.isAppendTransients()))) {\n                return false;\n            } \n            if ((java.lang.reflect.Modifier.isStatic(field.getModifiers())) && (!(org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.isAppendStatics()))) {\n                return false;\n            } \n            if (((org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.java.lang.String[]) != null) && ((java.util.Arrays.binarySearch(org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.java.lang.String[], field.getName())) >= 0)) {\n                return false;\n            } \n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"field"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:647","type":"CtBinaryOperatorImpl","sourcecode":"excludeFieldNamesParam == null"},"failures":[33],"tindex":"3da97ba6-2e99-11e6-8987-7d3a1da1bb1c","method":{"position":"org.apache.commons.lang3.StringUtils:702","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] stripAll(final java.lang.String... strs) {\n    if (strs == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.stripAll(strs, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"excludeFieldNamesParam":"strs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:777","type":"CtBinaryOperatorImpl","sourcecode":"(w.bitLength()) > 31"},"failures":[],"tindex":"3da9a2b7-2e99-11e6-8987-1945b6702788","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:195","type":"CtMethodImpl","sourcecode":"static void unregister(final java.lang.Object lhs, final java.lang.Object rhs) {\n    if ((lhs.bitLength()) > 31) {\n        {\n            java.util.Set<org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey>> java.util.Set<org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey>> = org.apache.commons.lang3.builder.EqualsBuilder.getRegistry();\n            if (registry != null) {\n                final org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey> org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey> = org.apache.commons.lang3.builder.EqualsBuilder.getRegisterPair(lhs, rhs);\n                registry.remove(pair);\n                synchronized(org.apache.commons.lang3.builder.EqualsBuilder.org.apache.commons.lang3.builder.EqualsBuilder.java.lang.Class) {\n                    registry = org.apache.commons.lang3.builder.EqualsBuilder.getRegistry();\n                    if ((registry != null) && (registry.isEmpty())) {\n                        org.apache.commons.lang3.builder.EqualsBuilder.org.apache.commons.lang3.builder.EqualsBuilder.java.lang.ThreadLocal<java.util.Set<org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey>>>.remove();\n                    } \n                }\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"w":"lhs"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:605","type":"CtBinaryOperatorImpl","sourcecode":"length > 0"},"failures":[34,35,36,37,38,39,40,41,42],"tindex":"3da9c9c8-2e99-11e6-8987-c509e3e0e8bf","method":{"position":"org.apache.commons.lang3.time.DateUtils:1441","type":"CtMethodImpl","sourcecode":"public static long getFragmentInDays(final java.util.Date date, final int fragment) {\n    if (fragment > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"length":"fragment"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:108","type":"CtBinaryOperatorImpl","sourcecode":"cex != null"},"failures":[43,44],"tindex":"3da9c9c9-2e99-11e6-8987-cdce37d9df61","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:671","type":"CtMethodImpl","sourcecode":"public static java.lang.String getMessage(final java.lang.Throwable th) {\n    if (th != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (th == null) {\n                return \"\";\n            } \n            final java.lang.String java.lang.String = org.apache.commons.lang3.ClassUtils.getShortClassName(th, null);\n            final java.lang.String java.lang.String = th.getMessage();\n            return (clsName + \": \") + (org.apache.commons.lang3.StringUtils.defaultString(msg));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cex":"th"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:419","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[45],"tindex":"3da9f0da-2e99-11e6-8987-bbaf8bf4aa0b","method":{"position":"org.apache.commons.lang3.ArrayUtils:5889","type":"CtMethodImpl","sourcecode":"public static double[] removeElements(final double[] array, final double... values) {\n    if (values == null) {\n        {\n            if ((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            final java.util.HashMap<java.lang.Double, org.apache.commons.lang3.mutable.MutableInt> java.util.HashMap<java.lang.Double, org.apache.commons.lang3.mutable.MutableInt> = new java.util.HashMap<java.lang.Double, org.apache.commons.lang3.mutable.MutableInt>(values.int);\n            for (final double double : values) {\n                final java.lang.Double java.lang.Double = java.lang.Double.valueOf(v);\n                final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = occurrences.get(boxed);\n                if (count == null) {\n                    occurrences.put(boxed, new org.apache.commons.lang3.mutable.MutableInt(1));\n                } else {\n                    count.increment();\n                }\n            }\n            final java.util.BitSet java.util.BitSet = new java.util.BitSet();\n            for (final java.util.Map.Entry<java.lang.Double, org.apache.commons.lang3.mutable.MutableInt> java.util.Map.Entry<java.lang.Double, org.apache.commons.lang3.mutable.MutableInt> : occurrences.entrySet()) {\n                final java.lang.Double java.lang.Double = e.getKey();\n                int int = 0;\n                for (int int = 0, int int = e.getValue().intValue() ; i < ct ; i++) {\n                    found = org.apache.commons.lang3.ArrayUtils.indexOf(array, v.doubleValue(), found);\n                    if (found < 0) {\n                        break;\n                    } \n                    toRemove.set((found++));\n                }\n            }\n            return ((double[])(org.apache.commons.lang3.ArrayUtils.removeAll(array, toRemove)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"values"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:805","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.GenericArrayType"},"failures":[46],"tindex":"3daa17eb-2e99-11e6-8987-9d1020257380","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1715","type":"CtMethodImpl","sourcecode":"public static <T>org.apache.commons.lang3.reflect.Typed<T> wrap(final java.lang.reflect.Type type) {\n    if (type instanceof java.lang.reflect.GenericArrayType) {\n        {\n            return new org.apache.commons.lang3.reflect.Typed<T>() {\n                @java.lang.Override\n                public java.lang.reflect.Type getType() {\n                    return type;\n                }\n            };\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3108","type":"CtBinaryOperatorImpl","sourcecode":"(separatorChars.length()) == 1"},"failures":[47,48],"tindex":"3daa3efc-2e99-11e6-8987-85daa4ea7656","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:90","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected org.apache.commons.lang3.time.FastDateFormat createInstance(final java.lang.String pattern, final java.util.TimeZone timeZone, final java.util.Locale locale) {\n    if ((pattern.length()) == 1) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.lang3.time.FastDateFormat(pattern , timeZone , locale);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"separatorChars":"pattern"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3274","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[49],"tindex":"3daa3efd-2e99-11e6-8987-f3fa1c76e32a","method":{"position":"org.apache.commons.lang3.StringUtils:3431","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final byte[] array, final char separator) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            return org.apache.commons.lang3.StringUtils.join(array, separator, 0, array.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:371","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[50],"tindex":"3daa660e-2e99-11e6-8987-b32703ecf2f4","method":{"position":"org.apache.commons.lang3.ArrayUtils:2252","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final short[] array, final short valueToFind) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.java.lang.Integer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2373","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(separator))"},"failures":[],"tindex":"3daa660f-2e99-11e6-8987-dbfbc77b5e00","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:421","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final double[] lhs, final double[] rhs) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(fieldName)) || (org.apache.commons.lang3.StringUtils.isEmpty(fieldName))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (fieldName == null) {\n                throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n            } \n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if (!(java.util.Arrays.equals(lhs, rhs))) {\n                java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Double[]>(fieldName) {\n                    private static final long serialVersionUID = 1L;\n\n                    @java.lang.Override\n                    public java.lang.Double[] getLeft() {\n                        return org.apache.commons.lang3.ArrayUtils.toObject(lhs);\n                    }\n\n                    @java.lang.Override\n                    public java.lang.Double[] getRight() {\n                        return org.apache.commons.lang3.ArrayUtils.toObject(rhs);\n                    }\n                });\n            } \n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName","separator":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1083","type":"CtBinaryOperatorImpl","sourcecode":"((nBools - 1) + dstPos) >= 32"},"failures":[51],"tindex":"3daa8d20-2e99-11e6-8987-7d35b410c1db","method":{"position":"org.apache.commons.lang3.ArrayUtils:2149","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final int[] array, final int valueToFind) {\n    if (((valueToFind - 1) + valueToFind) >= 32) {\n        {\n            return org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.java.lang.Integer.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nBools":"valueToFind","dstPos":"valueToFind"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1214","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[52,52,53,53,54],"tindex":"3daab431-2e99-11e6-8987-110cf3bcb893","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:345","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final char[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, array, null);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:631","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[55,56,57],"tindex":"3daab432-2e99-11e6-8987-3da49e592c1d","method":{"position":"org.apache.commons.lang3.text.StrBuilder:572","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder append(final java.lang.StringBuffer str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return appendNull();\n            } \n            final int int = str.length();\n            if (strLen > 0) {\n                final int int = length();\n                ensureCapacity((len + strLen));\n                str.getChars(0, strLen, char[], len);\n                int += strLen;\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:829","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[58,59],"tindex":"3daadb43-2e99-11e6-8987-17eced7c7342","method":{"position":"org.apache.commons.lang3.ArrayUtils:3341","type":"CtMethodImpl","sourcecode":"public static java.lang.Double[] toObject(final double[] array) {\n    if (array == array) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Double[];\n            } \n            final java.lang.Double[] java.lang.Double[] = new java.lang.Double[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = java.lang.Double.valueOf(array[i]);\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array","rhs":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:845","type":"CtBinaryOperatorImpl","sourcecode":"varValue == null"},"failures":[60,61,62],"tindex":"3dab0254-2e99-11e6-8987-11ac74423dd7","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:666","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static final java.lang.String escapeXml(final java.lang.String input) {\n    if (input == null) {\n        {\n            return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"varValue":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:7364","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[63,64,65,66,23,23,24,67,68,69],"tindex":"3dab0255-2e99-11e6-8987-895e648d9e9a","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:647","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final long value) {\n    if (fieldName == null) {\n        {\n            appendFieldStart(buffer, fieldName);\n            appendDetail(buffer, fieldName, value);\n            appendFieldEnd(buffer, fieldName);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:804","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[70],"tindex":"3dab0256-2e99-11e6-8987-ef320e19c158","method":{"position":"org.apache.commons.lang3.time.DateUtils:200","type":"CtMethodImpl","sourcecode":"public static boolean isSameInstant(final java.util.Date date1, final java.util.Date date2) {\n    if (date2 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((date1 == null) || (date2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            return (date1.getTime()) == (date2.getTime());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date2"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4171","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[],"tindex":"3dab2967-2e99-11e6-8987-939e362c28c5","method":{"position":"org.apache.commons.lang3.ObjectUtils:205","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static int hashCode(final java.lang.Object obj) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(obj)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return obj == null ? 0 : obj.hashCode();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"obj"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:221","type":"CtInvocationImpl","sourcecode":"java.lang.Double.isNaN(a)"},"failures":[71],"tindex":"3dab2968-2e99-11e6-8987-9b09dfc7a2ad","method":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:220","type":"CtMethodImpl","sourcecode":"public static double max(final double a, final double b) {\n    if (java.lang.Double.isNaN(b)) {\n        {\n            if (java.lang.Double.isNaN(a)) {\n                return b;\n            } else if (java.lang.Double.isNaN(b)) {\n                return a;\n            } else {\n                return java.lang.Math.max(a, b);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:463","type":"CtBinaryOperatorImpl","sourcecode":"(comparison) != 0"},"failures":[],"tindex":"3dab2969-2e99-11e6-8987-bf8f1e10ce6e","method":{"position":"org.apache.commons.lang3.text.FormattableUtils:134","type":"CtMethodImpl","sourcecode":"public static java.util.Formatter append(final java.lang.CharSequence seq, final java.util.Formatter formatter, final int flags, final int width, final int precision, final char padChar, final java.lang.CharSequence ellipsis) {\n    if (precision != 0) {\n        {\n            org.apache.commons.lang3.Validate.isTrue((((ellipsis == null) || (precision < 0)) || ((ellipsis.length()) <= precision)), \"Specified ellipsis '%1$s' exceeds precision of %2$s\", ellipsis, java.lang.Integer.valueOf(precision));\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(seq);\n            if ((precision >= 0) && (precision < (seq.length()))) {\n                final java.lang.CharSequence java.lang.CharSequence = org.apache.commons.lang3.ObjectUtils.defaultIfNull(ellipsis, org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String);\n                buf.replace((precision - (_ellipsis.length())), seq.length(), _ellipsis.toString());\n            } \n            final boolean boolean = (flags & (java.util.FormattableFlags.java.util.FormattableFlags.int)) == (java.util.FormattableFlags.java.util.FormattableFlags.int);\n            for (int int = buf.length() ; i < width ; i++) {\n                buf.insert((leftJustify ? i : 0), padChar);\n            }\n            formatter.format(buf.toString());\n            return formatter;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparison":"precision"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:552","type":"CtBinaryOperatorImpl","sourcecode":"power == (java.lang.Integer.MIN_VALUE)"},"failures":[72,73],"tindex":"3dab507a-2e99-11e6-8987-5162671fa9eb","method":{"position":"org.apache.commons.lang3.ArrayUtils:2064","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final long[] array, final long valueToFind, int startIndex) {\n    if (startIndex == startIndex) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } else if (startIndex >= (array.int)) {\n                startIndex = (array.int) - 1;\n            } \n            for (int int = startIndex ; i >= 0 ; i--) {\n                if (valueToFind == (array[i])) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.lang.Integer.MIN_VALUE":"startIndex","power":"startIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1323","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.WildcardType"},"failures":[],"tindex":"3dab507b-2e99-11e6-8987-8fa8aabfe5f0","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:675","type":"CtMethodImpl","sourcecode":"private static boolean isAssignable(final java.lang.reflect.Type type, final java.lang.reflect.TypeVariable<?> toTypeVariable, final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> typeVarAssigns) {\n    if (type instanceof java.lang.reflect.WildcardType) {\n        {\n            if (type == null) {\n                return true;\n            } \n            if (toTypeVariable == null) {\n                return false;\n            } \n            if (toTypeVariable.equals(type)) {\n                return true;\n            } \n            if (type instanceof java.lang.reflect.TypeVariable<?>) {\n                final java.lang.reflect.Type[] java.lang.reflect.Type[] = org.apache.commons.lang3.reflect.TypeUtils.getImplicitBounds(((java.lang.reflect.TypeVariable<?>)(type)));\n                for (final java.lang.reflect.Type java.lang.reflect.Type : bounds) {\n                    if (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(bound, toTypeVariable, typeVarAssigns)) {\n                        return true;\n                    } \n                }\n            } \n            if ((((type instanceof java.lang.Class<?>) || (type instanceof java.lang.reflect.ParameterizedType)) || (type instanceof java.lang.reflect.GenericArrayType)) || (type instanceof java.lang.reflect.WildcardType)) {\n                return false;\n            } \n            throw new java.lang.IllegalStateException((\"found an unhandled type: \" + type));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomUtils:115","type":"CtBinaryOperatorImpl","sourcecode":"startInclusive == endExclusive"},"failures":[],"tindex":"3dab778c-2e99-11e6-8987-73655dcaf29f","method":{"position":"org.apache.commons.lang3.mutable.MutableLong:96","type":"CtMethodImpl","sourcecode":"public void setValue(final long value) {\n    if (value == value) {\n        {\n            org.apache.commons.lang3.mutable.MutableLong.this.long = value;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startInclusive":"value","endExclusive":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2174","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"3dab778d-2e99-11e6-8987-cded4f34a205","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:631","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final long lhs, final long rhs) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (fieldName == null) {\n                throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n            } \n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if (lhs != rhs) {\n                java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Long>(fieldName) {\n                    private static final long serialVersionUID = 1L;\n\n                    @java.lang.Override\n                    public java.lang.Long getLeft() {\n                        return java.lang.Long.valueOf(lhs);\n                    }\n\n                    @java.lang.Override\n                    public java.lang.Long getRight() {\n                        return java.lang.Long.valueOf(rhs);\n                    }\n                });\n            } \n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:549","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"3dab9e9e-2e99-11e6-8987-b3efd527a841","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:875","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final java.lang.Object[] array) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, array, null);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSetUtils:244","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isNotEmpty(s)"},"failures":[],"tindex":"3dab9e9f-2e99-11e6-8987-2dcdd72583d0","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:630","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final char[] array) {\n    if (org.apache.commons.lang3.StringUtils.isNotEmpty(fieldName)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, array, null);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"s":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:536","type":"CtBinaryOperatorImpl","sourcecode":"value instanceof float[]"},"failures":[74,75,76,77,78,79,80,81,82,83],"tindex":"3dabc5b0-2e99-11e6-8987-4f6931d231c0","method":{"position":"org.apache.commons.lang3.CharRange:208","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj instanceof float[]) {\n        {\n            if (obj == (org.apache.commons.lang3.CharRange.this)) {\n                return true;\n            } \n            if ((obj instanceof org.apache.commons.lang3.CharRange) == false) {\n                return false;\n            } \n            final org.apache.commons.lang3.CharRange org.apache.commons.lang3.CharRange = ((org.apache.commons.lang3.CharRange)(obj));\n            return (((char) == (other.char)) && ((char) == (other.char))) && ((boolean) == (other.boolean));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:297","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(className)"},"failures":[84,85,86,87,88,89,90],"tindex":"3dabc5b1-2e99-11e6-8987-e94b01d50ff8","method":{"position":"org.apache.commons.lang3.math.NumberUtils:760","type":"CtMethodImpl","sourcecode":"public static java.math.BigDecimal createBigDecimal(final java.lang.String str) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n        {\n            if (str == null) {\n                return null;\n            } \n            if (org.apache.commons.lang3.StringUtils.isBlank(str)) {\n                throw new java.lang.NumberFormatException(\"A blank string is not a valid number\");\n            } \n            if (str.trim().startsWith(\"--\")) {\n                throw new java.lang.NumberFormatException((str + \" is not a valid number.\"));\n            } \n            return new java.math.BigDecimal(str);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"className":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:596","type":"CtBinaryOperatorImpl","sourcecode":"toWildcardType == null"},"failures":[91],"tindex":"3dabecc2-2e99-11e6-8987-b106b68b9eb1","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1807","type":"CtMethodImpl","sourcecode":"private static java.lang.String wildcardTypeToString(java.lang.reflect.WildcardType w) {\n    if (w == null) {\n        {\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder().append('?');\n            final java.lang.reflect.Type[] java.lang.reflect.Type[] = w.getLowerBounds();\n            final java.lang.reflect.Type[] java.lang.reflect.Type[] = w.getUpperBounds();\n            if ((lowerBounds.int) > 0) {\n                org.apache.commons.lang3.reflect.TypeUtils.appendAllTo(buf.append(\" super \"), \" & \", lowerBounds);\n            } else if (!(((upperBounds.int) == 1) && (java.lang.Object.java.lang.Object.java.lang.Class.equals(upperBounds[0])))) {\n                org.apache.commons.lang3.reflect.TypeUtils.appendAllTo(buf.append(\" extends \"), \" & \", upperBounds);\n            } \n            return buf.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toWildcardType":"w"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":32,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}