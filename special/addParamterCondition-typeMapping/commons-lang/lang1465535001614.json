{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":41,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":55,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":138,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":43,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":52,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringString":309,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":134,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":1,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":40,"org.apache.commons.lang3.text.StrBuilderTest.testSubstringInt":161,"org.apache.commons.lang3.BooleanUtilsTest.test_toStringTrueFalse_Boolean":247,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeRuntimeEx":61,"org.apache.commons.lang3.ClassUtilsTest.testWrappersToPrimitivesNull":224,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":262,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":264,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":176,"org.apache.commons.lang3.ValidateTest.testIsTrue4":293,"org.apache.commons.lang3.time.FastDatePrinterTest.testMilleniumBug":258,"org.apache.commons.lang3.ValidateTest.testIsTrue3":292,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":273,"org.apache.commons.lang3.mutable.MutableByteTest.testSubtractValueObject":7,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteIntInt":156,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadDeclaredNamedStaticField":334,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":131,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceAll_StrMatcher_String":159,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testSimpleDate":250,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":121,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":175,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOfIgnoreCase_String":3,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":126,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":18,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":280,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfYearWithCalendar":298,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":75,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultIsExceptionUnknown":72,"org.apache.commons.lang3.ArrayUtilsTest.testSameLengthChar":225,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testAcquireLimit":331,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEmbeddedPatternInChoice":339,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":109,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":277,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":315,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementCharArray":0,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":122,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":147,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":289,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StrBuilder_int_int":4,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":45,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethodWithEvent":236,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":30,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":123,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":187,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEqualsHashcode":336,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":34,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testOverriddenBuiltinFormat":337,"org.apache.commons.lang3.StringUtilsTest.testChomp":5,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":197,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testExtendedFormats":340,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":127,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":110,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":179,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondFragmentInLargerUnitWithCalendar":300,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testAcquireMultiplePeriods":322,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":24,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfSecondWithCalendar":296,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":281,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryEndIndex":153,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListenerWithPrivateAddMethod":234,"org.apache.commons.lang3.reflect.TypeLiteralTest.testEquals":118,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang303":259,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testShutdownMultipleTimes":328,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethod":233,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":13,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":9,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":313,"org.apache.commons.lang3.reflect.TypeLiteralTest.testBasic":116,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOfIgnoreCase_StringInt":2,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":37,"org.apache.commons.lang3.ArrayUtilsTest.testSameLengthShort":221,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":174,"org.apache.commons.lang3.time.FastDatePrinterTest.testSimpleDate":256,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_int_int_String":158,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":312,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":266,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEscapedQuote_LANG_477":338,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testGetAverageCallsPerPeriod":323,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":278,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":108,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementDoubleArray":217,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testShortArrayAsObject":220,"org.apache.commons.lang3.StringUtilsTest.testCenter_StringInt":229,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":50,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":76,"org.apache.commons.lang3.StringUtilsTest.testSplit_StringString_StringStringInt":307,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":255,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeEx":66,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":283,"org.apache.commons.lang3.ObjectUtilsTest.testIdentityToStringStrBuilder":348,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListener":232,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":16,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryReplace":163,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":53,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeMethod":239,"org.apache.commons.lang3.math.NumberUtilsTest.testMaximumByte":111,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":87,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":274,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":207,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":132,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyObject":243,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetActiveExecutorExternal":57,"org.apache.commons.lang3.ConversionTest.testHexToShort":112,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeNested":64,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":263,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":82,"org.apache.commons.lang3.ClassUtilsTest.test_getShortCanonicalName_Object":343,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":208,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":148,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":178,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":209,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":105,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":210,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":133,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":211,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":288,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":49,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":39,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":287,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":27,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":88,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":95,"org.apache.commons.lang3.time.DateUtilsTest.testIsSameLocalTime_Cal":346,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":74,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testCharArrayAsObject":317,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testAcquireMultipleThreads":321,"org.apache.commons.lang3.time.FastDatePrinterTest.testShortDateStyleWithLocales":257,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetResultObjectUnknown":71,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":268,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteAll_StrMatcher":164,"org.apache.commons.lang3.ObjectUtilsTest.testIdentityToStringStringBuilder":56,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":200,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":267,"org.apache.commons.lang3.StringUtilsTest.testCenter_StringIntChar":228,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":201,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":284,"org.apache.commons.lang3.time.FastDatePrinterTest.testFormat":261,"org.apache.commons.lang3.text.StrBuilderTest.testSubstringIntInt":155,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":90,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":23,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":276,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetInterruptedException":58,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testNullCalendar":301,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testShortArray":219,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":290,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":99,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":26,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":44,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":17,"org.apache.commons.lang3.ConversionTest.testShortToByteArray":318,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testOrdinalIndexOf":115,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":139,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryMatcher":162,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeStaticMethod":237,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":93,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testSetExternalExecutor":59,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testGetAvailablePermits":333,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":271,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":282,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeResultsIsSuccessfulFalse":68,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":149,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringStringarray":308,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testInit":324,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":100,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfByte":305,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":86,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testPassAfterShutdown":320,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":143,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryStartIndex":160,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":107,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":83,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedStaticField":6,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":11,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":146,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":89,"org.apache.commons.lang3.BooleanUtilsTest.test_toStringYesNo_Boolean":248,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMinuteWithCalender":302,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang303":253,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_CharArray":319,"org.apache.commons.lang3.reflect.TypeLiteralTest.testTyped":117,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":36,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":91,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":135,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":177,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":103,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceFirst_StrMatcher_String":151,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":102,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":140,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMonthWithCalendar":297,"org.apache.commons.lang3.text.StrBuilderTest.testToCharArrayIntInt":165,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":172,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":92,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeExternalExec":70,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":73,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testShutdownOwnExecutor":326,"org.apache.commons.lang3.ClassUtilsTest.test_getShortClassName_Class":344,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":254,"org.apache.commons.lang3.StringUtilsTest.testSplit_String":306,"org.apache.commons.lang3.ArrayUtilsTest.testContainsChar":342,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":29,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":142,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":286,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":144,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":78,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementByteArray":227,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeResultsIsSuccessfulTrue":62,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":124,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":166,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectAtIndex":215,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":213,"org.apache.commons.lang3.CharSetTest.testGetInstance_Stringarray":230,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":214,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":129,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":79,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":128,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":265,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":125,"org.apache.commons.lang3.reflect.TypeUtilsTest.testParameterize":119,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":35,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testShutdownSharedExecutorTask":327,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":270,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":169,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":170,"org.apache.commons.lang3.ValidateTest.testNotEmptyMap1":294,"org.apache.commons.lang3.ValidateTest.testNotEmptyMap2":295,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":32,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":42,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":101,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteFirst_StrMatcher":150,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeExactStaticMethod":240,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":311,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":173,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":136,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":212,"org.apache.commons.lang3.text.StrBuilderTest.testSubSequenceIntInt":152,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":14,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryCount":157,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementDoubleArray":216,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":31,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":20,"org.apache.commons.lang3.text.StrTokenizerTest.test8":196,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeExactMethod":238,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":285,"org.apache.commons.lang3.text.StrTokenizerTest.test5":193,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGenericArrayType":120,"org.apache.commons.lang3.text.StrTokenizerTest.test4":192,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyObjectEmptyArray":244,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":21,"org.apache.commons.lang3.text.StrTokenizerTest.test7":195,"org.apache.commons.lang3.BooleanUtilsTest.test_toStringOnOff_Boolean":246,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":275,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":22,"org.apache.commons.lang3.text.StrTokenizerTest.test6":194,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeChildWithExecutor":69,"org.apache.commons.lang3.text.StrTokenizerTest.test1":189,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testEndsWith":113,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":188,"org.apache.commons.lang3.text.StrTokenizerTest.test3":191,"org.apache.commons.lang3.BooleanUtilsTest.test_toIntegerObject_Boolean":245,"org.apache.commons.lang3.text.StrTokenizerTest.test2":190,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":94,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsert":335,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":269,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":167,"org.apache.commons.lang3.ClassUtilsTest.testWrapperToPrimitiveNull":223,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":168,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultInitializerNamesModify":60,"org.apache.commons.lang3.text.StrBuilderTest.testTrim":154,"org.apache.commons.lang3.event.EventUtilsTest.testBindFilteredEventsToMethod":235,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":314,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang538":260,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testCharArray":316,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListenerWithNoAddMethod":231,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":81,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testEndsWithAny":114,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testMilleniumBug":252,"org.apache.commons.lang3.CharUtilsTest.testToChar_String_char":54,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testShutdownSharedExecutorNoTask":330,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":25,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetInitializerUnknown":67,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":130,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testInvalidFragmentWithCalendar":303,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetExceptionUnknown":63,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testStartTimer":332,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":180,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":171,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":182,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":181,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfDayWithCalendar":304,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":184,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":183,"org.apache.commons.lang3.ClassUtilsTest.testWrappersToPrimitives":222,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":186,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeExactConstructor":242,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":38,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":185,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":80,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":206,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":279,"org.apache.commons.lang3.ClassUtilsTest.testHierarchyExcludingInterfaces":347,"org.apache.commons.lang3.ClassUtilsTest.test_convertClassesToClassNames_List":226,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testInitDefaultService":325,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":106,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":310,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":46,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveIntArray":345,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":97,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testAcquireNoLimit":329,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":198,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":204,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":203,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeTempExec":65,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":205,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testExtendedAndBuiltInFormats":341,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":145,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":202,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":199,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeFully_String":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":98,"org.apache.commons.lang3.ArrayUtilsTest.testCloneDouble":218,"org.apache.commons.lang3.BooleanUtilsTest.test_toString_Boolean_String_String_String":249,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":272,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeConstructor":241,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfHourWithCalendar":299,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":141,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":251,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":85,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":96,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":291,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":48,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":137,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":51},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5623","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))"},"failures":[0],"tindex":"a74b85dd-2ec8-11e6-8035-b97d038fa6c9","method":{"position":"org.apache.commons.lang3.ArrayUtils:5622","type":"CtMethodImpl","sourcecode":"public static char[] removeElements(final char[] array, final char... values) {\n    if ((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            final java.util.HashMap<java.lang.Character, org.apache.commons.lang3.mutable.MutableInt> java.util.HashMap<java.lang.Character, org.apache.commons.lang3.mutable.MutableInt> = new java.util.HashMap<java.lang.Character, org.apache.commons.lang3.mutable.MutableInt>(values.int);\n            for (final char char : values) {\n                final java.lang.Character java.lang.Character = java.lang.Character.valueOf(v);\n                final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = occurrences.get(boxed);\n                if (count == null) {\n                    occurrences.put(boxed, new org.apache.commons.lang3.mutable.MutableInt(1));\n                } else {\n                    count.increment();\n                }\n            }\n            final java.util.BitSet java.util.BitSet = new java.util.BitSet();\n            for (final java.util.Map.Entry<java.lang.Character, org.apache.commons.lang3.mutable.MutableInt> java.util.Map.Entry<java.lang.Character, org.apache.commons.lang3.mutable.MutableInt> : occurrences.entrySet()) {\n                final java.lang.Character java.lang.Character = e.getKey();\n                int int = 0;\n                for (int int = 0, int int = e.getValue().intValue() ; i < ct ; i++) {\n                    found = org.apache.commons.lang3.ArrayUtils.indexOf(array, v.charValue(), found);\n                    if (found < 0) {\n                        break;\n                    } \n                    toRemove.set((found++));\n                }\n            }\n            return ((char[])(org.apache.commons.lang3.ArrayUtils.removeAll(array, toRemove)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array","values":"values"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:224","type":"CtInvocationImpl","sourcecode":"java.lang.Double.isNaN(b)"},"failures":[1,1],"tindex":"a74c492e-2ec8-11e6-8035-b77e8c7c7b37","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:359","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final double value) {\n    if (java.lang.Double.isNaN(value)) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, value);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1813","type":"CtBinaryOperatorImpl","sourcecode":"insertLen != removeLen"},"failures":[2,3],"tindex":"a74c703f-2ec8-11e6-8035-9f657a24bd65","method":{"position":"org.apache.commons.lang3.StringUtils:1371","type":"CtMethodImpl","sourcecode":"public static int lastIndexOfIgnoreCase(final java.lang.CharSequence str, final java.lang.CharSequence searchStr, int startPos) {\n    if (startPos != startPos) {\n        {\n            if ((str == null) || (searchStr == null)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            if (startPos > ((str.length()) - (searchStr.length()))) {\n                startPos = (str.length()) - (searchStr.length());\n            } \n            if (startPos < 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            if ((searchStr.length()) == 0) {\n                return startPos;\n            } \n            for (int int = startPos ; i >= 0 ; i--) {\n                if (org.apache.commons.lang3.CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, searchStr.length())) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"insertLen":"startPos","removeLen":"startPos"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.StringUtils:6771","type":"CtBinaryOperatorImpl","sourcecode":"n > m"},"failures":[],"tindex":"a74c9650-2ec8-11e6-8035-c5b62607fb99","method":{"position":"org.apache.commons.lang3.text.translate.UnicodeUnpairedSurrogateRemover:33","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean translate(int codepoint, java.io.Writer out) throws java.io.IOException {\n    if (codepoint > codepoint) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if ((codepoint >= (java.lang.Character.java.lang.Character.char)) && (codepoint <= (java.lang.Character.java.lang.Character.char))) {\n                return true;\n            } else {\n                return false;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"m":"codepoint","n":"codepoint"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:738","type":"CtBinaryOperatorImpl","sourcecode":"rhs == null"},"failures":[],"tindex":"a74cbd61-2ec8-11e6-8035-798750116ac0","method":{"position":"org.apache.commons.lang3.ArrayUtils:5413","type":"CtMethodImpl","sourcecode":"public static short[] removeAll(final short[] array, final int... indices) {\n    if (indices == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((short[])(org.apache.commons.lang3.ArrayUtils.removeAll(((java.lang.Object)(array)), org.apache.commons.lang3.ArrayUtils.clone(indices))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"rhs":"indices"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2442","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[4],"tindex":"a74cbd62-2ec8-11e6-8035-3968baf515b1","method":{"position":"org.apache.commons.lang3.text.StrBuilder:695","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder append(final org.apache.commons.lang3.text.StrBuilder str, final int startIndex, final int length) {\n    if (startIndex < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return appendNull();\n            } \n            if ((startIndex < 0) || (startIndex > (str.length()))) {\n                throw new java.lang.StringIndexOutOfBoundsException(\"startIndex must be valid\");\n            } \n            if ((length < 0) || ((startIndex + length) > (str.length()))) {\n                throw new java.lang.StringIndexOutOfBoundsException(\"length must be valid\");\n            } \n            if (length > 0) {\n                final int int = length();\n                ensureCapacity((len + length));\n                str.getChars(startIndex, (startIndex + length), char[], len);\n                int += length;\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"startIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2025","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[],"tindex":"a74ce473-2ec8-11e6-8035-1f30a9d105b8","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2821","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.List<java.lang.String> tokenize(final char[] chars, final int offset, final int count) {\n    if (count < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (chars == null) {\n                return super.tokenize(org.apache.commons.lang3.text.StrBuilder.this.char[], 0, org.apache.commons.lang3.text.StrBuilder.this.size());\n            } \n            return super.tokenize(chars, offset, count);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSequenceUtils:74","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[],"tindex":"a74d0b84-2ec8-11e6-8035-65a626d55902","method":{"position":"org.apache.commons.lang3.Conversion:1079","type":"CtMethodImpl","sourcecode":"public static int binaryToInt(final boolean[] src, final int srcPos, final int dstInit, final int dstPos, final int nBools) {\n    if (dstInit < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((((src.int) == 0) && (srcPos == 0)) || (0 == nBools)) {\n                return dstInit;\n            } \n            if (((nBools - 1) + dstPos) >= 32) {\n                throw new java.lang.IllegalArgumentException(\"nBools-1+dstPos is greather or equal to than 32\");\n            } \n            int int = dstInit;\n            int int = 0;\n            for (int int = 0 ; i < nBools ; i++) {\n                shift = (i * 1) + dstPos;\n                final int int = (src[(i + srcPos)] ? 1 : 0) << shift;\n                final int int = 1 << shift;\n                out = (out & (~mask)) | bits;\n            }\n            return out;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"dstInit"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.JavaVersion:132","type":"CtInvocationImpl","sourcecode":"\"0.9\".equals(nom)"},"failures":[5],"tindex":"a74d0b85-2ec8-11e6-8035-39c7f749cf79","method":{"position":"org.apache.commons.lang3.StringUtils:5050","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static java.lang.String chomp(final java.lang.String str, final java.lang.String separator) {\n    if (separator.contains(\"#\")) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (\"0.9\".equals(str)) {\n                {\n                    return org.apache.commons.lang3.StringUtils.removeEnd(str, separator);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nom":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1406","type":"CtUnaryOperatorImpl","sourcecode":"!allowSigns"},"failures":[],"tindex":"a74d3296-2ec8-11e6-8035-9d3ba68f9599","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:275","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final boolean value) {\n    if (!value) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, value);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"allowSigns":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:97","type":"CtInvocationImpl","sourcecode":"str.contains(\"#\")"},"failures":[],"tindex":"a74d59a7-2ec8-11e6-8035-975a32d298a7","method":{"position":"org.apache.commons.lang3.StringUtils:5050","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic static java.lang.String chomp(final java.lang.String str, final java.lang.String separator) {\n    if (separator.contains(\"#\")) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (\"0.9\".equals(str)) {\n                {\n                    return org.apache.commons.lang3.StringUtils.removeEnd(str, separator);\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"separator"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:667","type":"CtInvocationImpl","sourcecode":"str.equals(trueString)"},"failures":[6],"tindex":"a74d59a8-2ec8-11e6-8035-07dfb1fe3a30","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:274","type":"CtMethodImpl","sourcecode":"public static java.lang.Object readStaticField(final java.lang.Class<?> cls, final java.lang.String fieldName) throws java.lang.IllegalAccessException {\n    if (fieldName.equals(fieldName)) {\n        {\n            return org.apache.commons.lang3.reflect.FieldUtils.readStaticField(cls, fieldName, false);\n        }\n    } else {\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName","trueString":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:371","type":"CtInvocationImpl","sourcecode":"value.equals(nullValue)"},"failures":[7],"tindex":"a74d80b9-2ec8-11e6-8035-076467e333c2","method":{"position":"org.apache.commons.lang3.mutable.MutableByte:169","type":"CtMethodImpl","sourcecode":"public void subtract(final java.lang.Number operand) {\n    if (operand.equals(operand)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.mutable.MutableByte.this.byte -= operand.byteValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"operand","nullValue":"operand"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:934","type":"CtBinaryOperatorImpl","sourcecode":"(numerator) == (denominator)"},"failures":[],"tindex":"a74d80ba-2ec8-11e6-8035-578a890a77ef","method":{"position":"org.apache.commons.lang3.time.DateUtils:883","type":"CtMethodImpl","sourcecode":"public static java.util.Date ceiling(final java.util.Date date, final int field) {\n    if (field == field) {\n        {\n            if (date == null) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            final java.util.Calendar java.util.Calendar = java.util.Calendar.getInstance();\n            gval.setTime(date);\n            org.apache.commons.lang3.time.DateUtils.modify(gval, field, org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.int);\n            return gval.getTime();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"numerator":"field","denominator":"field"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:419","type":"CtVariableReadImpl","sourcecode":"match"},"failures":[],"tindex":"a74da7cb-2ec8-11e6-8035-bde410dd8dca","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1654","type":"CtMethodImpl","sourcecode":"protected void setUseIdentityHashCode(final boolean useIdentityHashCode) {\n    if (useIdentityHashCode) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.this.boolean = useIdentityHashCode;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"match":"useIdentityHashCode"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:626","type":"CtInvocationImpl","sourcecode":"stripChars.isEmpty()"},"failures":[8],"tindex":"a74da7cc-2ec8-11e6-8035-0f4c2dcb559a","method":{"position":"org.apache.commons.lang3.text.WordUtils:323","type":"CtMethodImpl","sourcecode":"public static java.lang.String capitalizeFully(final java.lang.String str) {\n    if (str.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.text.WordUtils.capitalizeFully(str, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"stripChars":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2293","type":"CtInvocationImpl","sourcecode":"separator.isEmpty()"},"failures":[9,9],"tindex":"a74dcedd-2ec8-11e6-8035-0126a3157db9","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:731","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final byte value) {\n    if (fieldName.isEmpty()) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendFieldStart(buffer, fieldName);\n            appendDetail(buffer, fieldName, value);\n            appendFieldEnd(buffer, fieldName);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"separator":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:425","type":"CtBinaryOperatorImpl","sourcecode":"customPattern != null"},"failures":[10,11,12,13,14,15,15,16,17,18,19,20,21,22,23,23,24,25,26,27,28,29,29,30,31,32,33,34,35,36,37,37,1,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"tindex":"a74dcede-2ec8-11e6-8035-c36aa22114e3","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1053","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final int[] array) {\n    if (fieldName != null) {\n        {\n            buffer.append(java.lang.String);\n            for (int int = 0 ; i < (array.int) ; i++) {\n                if (i > 0) {\n                    buffer.append(java.lang.String);\n                } \n                appendDetail(buffer, fieldName, array[i]);\n            }\n            buffer.append(java.lang.String);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"customPattern":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:761","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[54],"tindex":"a74df5ef-2ec8-11e6-8035-6b825154774f","method":{"position":"org.apache.commons.lang3.CharUtils:194","type":"CtMethodImpl","sourcecode":"public static char toChar(final java.lang.String str, final char defaultValue) {\n    if (str == null) {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n                return defaultValue;\n            } \n            return str.charAt(0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:137","type":"CtInvocationImpl","sourcecode":"java.lang.Float.isNaN(a)"},"failures":[55],"tindex":"a74df5f0-2ec8-11e6-8035-7fd5c805e105","method":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:254","type":"CtMethodImpl","sourcecode":"public static float max(final float a, final float b) {\n    if (java.lang.Float.isNaN(a)) {\n        {\n            if (java.lang.Float.isNaN(a)) {\n                return b;\n            } else if (java.lang.Float.isNaN(b)) {\n                return a;\n            } else {\n                return java.lang.Math.max(a, b);\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:73","type":"CtBinaryOperatorImpl","sourcecode":"timeZone == null"},"failures":[56],"tindex":"a74e1d01-2ec8-11e6-8035-8b7fe11cf3ab","method":{"position":"org.apache.commons.lang3.ObjectUtils:267","type":"CtMethodImpl","sourcecode":"public static java.lang.String identityToString(final java.lang.Object object) {\n    if (object == null) {\n        {\n            if (object == null) {\n                return null;\n            } \n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            org.apache.commons.lang3.ObjectUtils.identityToString(builder, object);\n            return builder.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"timeZone":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:181","type":"CtBinaryOperatorImpl","sourcecode":"(executor) == null"},"failures":[57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"tindex":"a74e1d02-2ec8-11e6-8035-974b19dcc082","method":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:290","type":"CtMethodImpl","sourcecode":"private java.util.concurrent.Callable<T> createTask(final java.util.concurrent.ExecutorService execDestroy) {\n    if (execDestroy == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new InitializationTask(execDestroy);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"executor":"execDestroy"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1745","type":"CtBinaryOperatorImpl","sourcecode":"(c.getEnclosingClass()) != null"},"failures":[73,74,75,76,77,78,78,79,80,81,14,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,9,98,99,100,101,102,103,104,105,106,107,108,109,110,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,1,38,39,40,41,42,43,44,45,46,47,48,49,50],"tindex":"a74e4413-2ec8-11e6-8035-630f91ce84b1","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1589","type":"CtMethodImpl","sourcecode":"protected java.lang.String getShortClassName(final java.lang.Class<?> cls) {\n    if ((cls.getEnclosingClass()) != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.ClassUtils.getShortClassName(cls);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"cls"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"c < a"},"failures":[111],"tindex":"a74e6b24-2ec8-11e6-8035-01a6c5a19312","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1258","type":"CtMethodImpl","sourcecode":"public static byte max(byte a, final byte b, final byte c) {\n    if (c < a) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (b > a) {\n                a = b;\n            } \n            if (c > a) {\n                a = c;\n            } \n            return a;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"a","c":"c"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4218","type":"CtInvocationImpl","sourcecode":"str.startsWith(remove)"},"failures":[],"tindex":"a74e6b25-2ec8-11e6-8035-b7b36b62f102","method":{"position":"org.apache.commons.lang3.builder.RecursiveToStringStyle:82","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected void appendDetail(java.lang.StringBuffer buffer, java.lang.String fieldName, java.util.Collection<?> coll) {\n    if (fieldName.startsWith(fieldName)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendClassName(buffer, coll);\n            appendIdentityHashCode(buffer, coll);\n            appendDetail(buffer, fieldName, coll.toArray());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName","remove":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1970","type":"CtBinaryOperatorImpl","sourcecode":"nullText == null"},"failures":[112],"tindex":"a74e6b26-2ec8-11e6-8035-0d1e19af41bf","method":{"position":"org.apache.commons.lang3.Conversion:972","type":"CtMethodImpl","sourcecode":"public static short hexToShort(final java.lang.String src, final int srcPos, final short dstInit, final int dstPos, final int nHex) {\n    if (src == null) {\n        {\n            if (0 == nHex) {\n                return dstInit;\n            } \n            if ((((nHex - 1) * 4) + dstPos) >= 16) {\n                throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+dstPos is greather or equal to than 16\");\n            } \n            short short = dstInit;\n            int int = 0;\n            for (int int = 0 ; i < nHex ; i++) {\n                shift = (i * 4) + dstPos;\n                final int int = (15 & (org.apache.commons.lang3.Conversion.hexDigitToInt(src.charAt((i + srcPos))))) << shift;\n                final int int = 15 << shift;\n                out = ((short)((out & (~mask)) | bits));\n            }\n            return out;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nullText":"src"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Range:450","type":"CtBinaryOperatorImpl","sourcecode":"result == null"},"failures":[113,114],"tindex":"a74e9237-2ec8-11e6-8035-55b21eebdca7","method":{"position":"org.apache.commons.lang3.StringUtils:7269","type":"CtMethodImpl","sourcecode":"public static boolean endsWith(final java.lang.CharSequence str, final java.lang.CharSequence suffix) {\n    if (str == null) {\n        {\n            return org.apache.commons.lang3.StringUtils.endsWith(str, suffix, false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"result":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1085","type":"CtBinaryOperatorImpl","sourcecode":"newSize <= 0"},"failures":[115],"tindex":"a74e9238-2ec8-11e6-8035-1dfc56fbf8a0","method":{"position":"org.apache.commons.lang3.StringUtils:1007","type":"CtMethodImpl","sourcecode":"public static int ordinalIndexOf(final java.lang.CharSequence str, final java.lang.CharSequence searchStr, final int ordinal) {\n    if (ordinal <= 0) {\n        {\n            return org.apache.commons.lang3.StringUtils.ordinalIndexOf(str, searchStr, ordinal, false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"newSize":"ordinal"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:674","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[],"tindex":"a74e9239-2ec8-11e6-8035-df5eb29085bf","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:687","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final long[] lhs, final long[] rhs) {\n    if (lhs == lhs) {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == null) {\n                int = -1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (rhs == null) {\n                int = +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                int = (lhs.int) < (rhs.int) ? -1 : +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && ((int) == 0) ; i++) {\n                append(lhs[i], rhs[i]);\n            }\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"lhs","rhs":"lhs"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:297","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"a74eb94a-2ec8-11e6-8035-dfc6958c9131","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:604","type":"CtMethodImpl","sourcecode":"public static final java.lang.String escapeHtml3(final java.lang.String input) {\n    if (input == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"input"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:965","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(cls, superClass))"},"failures":[116,117,118,119,120],"tindex":"a74eb94b-2ec8-11e6-8035-5330ff6c8577","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1742","type":"CtMethodImpl","sourcecode":"private static java.lang.String classToString(java.lang.Class<?> c) {\n    if (!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(c, c))) {\n        {\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            if ((c.getEnclosingClass()) != null) {\n                buf.append(org.apache.commons.lang3.reflect.TypeUtils.classToString(c.getEnclosingClass())).append('.').append(c.getSimpleName());\n            } else {\n                buf.append(c.getName());\n            }\n            if ((c.getTypeParameters().int) > 0) {\n                buf.append('<');\n                org.apache.commons.lang3.reflect.TypeUtils.appendAllTo(buf, \", \", c.getTypeParameters());\n                buf.append('>');\n            } \n            return buf.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"superClass":"c","cls":"c"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5731","type":"CtBinaryOperatorImpl","sourcecode":"found < 0"},"failures":[121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214],"tindex":"a74ee05c-2ec8-11e6-8035-03edd973ea15","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2781","type":"CtMethodImpl","sourcecode":"protected int validateRange(final int startIndex, int endIndex) {\n    if (startIndex < 0) {\n        {\n            if (startIndex < 0) {\n                throw new java.lang.StringIndexOutOfBoundsException(startIndex);\n            } \n            if (endIndex > (int)) {\n                endIndex = int;\n            } \n            if (startIndex > endIndex) {\n                throw new java.lang.StringIndexOutOfBoundsException(\"end < start\");\n            } \n            return endIndex;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"found":"startIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:850","type":"CtUnaryOperatorImpl","sourcecode":"!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(cls, toClass))"},"failures":[],"tindex":"a74ee05d-2ec8-11e6-8035-0f656444135b","method":{"position":"org.apache.commons.lang3.ClassUtils:326","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.lang.Class<?>> getAllSuperclasses(final java.lang.Class<?> cls) {\n    if (!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(cls, cls))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (cls == null) {\n                return null;\n            } \n            final java.util.List<java.lang.Class<?>> java.util.List<java.lang.Class<?>> = new java.util.ArrayList<java.lang.Class<?>>();\n            java.lang.Class<?> java.lang.Class<?> = cls.getSuperclass();\n            while (superclass != null) {\n                classes.add(superclass);\n                superclass = superclass.getSuperclass();\n            }\n            return classes;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toClass":"cls","cls":"cls"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3862","type":"CtBinaryOperatorImpl","sourcecode":"noOfItems <= 0"},"failures":[215],"tindex":"a74f076e-2ec8-11e6-8035-f5ec99298ef5","method":{"position":"org.apache.commons.lang3.ArrayUtils:4482","type":"CtMethodImpl","sourcecode":"public static long[] add(final long[] array, final int index, final long element) {\n    if (index <= 0) {\n        {\n            return ((long[])(org.apache.commons.lang3.ArrayUtils.add(array, index, java.lang.Long.valueOf(element), java.lang.Long.java.lang.Long.java.lang.Class<java.lang.Long>)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"noOfItems":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2559","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.ArrayUtils.isEmpty(array)"},"failures":[216,217,218],"tindex":"a74f076f-2ec8-11e6-8035-f9e37c02e5d6","method":{"position":"org.apache.commons.lang3.ArrayUtils:418","type":"CtMethodImpl","sourcecode":"public static double[] clone(final double[] array) {\n    if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            return array.clone();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:766","type":"CtUnaryOperatorImpl","sourcecode":"!(java.util.Arrays.equals(lhs, rhs))"},"failures":[219,220],"tindex":"a74f0770-2ec8-11e6-8035-9d7db5a9a78d","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:893","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final short[] array) {\n    if (!(java.util.Arrays.equals(array, array))) {\n        {\n            if (array == null) {\n                int = (int) * (int);\n            } else {\n                for (final short short : array) {\n                    append(element);\n                }\n            }\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array","rhs":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2002","type":"CtBinaryOperatorImpl","sourcecode":"sizeStartText == null"},"failures":[],"tindex":"a74f0771-2ec8-11e6-8035-f5b790b99a5b","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:768","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final int[] array) {\n    if (fieldName == null) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, array, null);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sizeStartText":"fieldName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:140","type":"CtInvocationImpl","sourcecode":"java.lang.Float.isNaN(b)"},"failures":[55],"tindex":"a74f2e82-2ec8-11e6-8035-1bc0007854e8","method":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:241","type":"CtMethodImpl","sourcecode":"public static float max(final float a, final float b, final float c) {\n    if (java.lang.Float.isNaN(b)) {\n        {\n            return org.apache.commons.lang3.math.IEEE754rUtils.max(org.apache.commons.lang3.math.IEEE754rUtils.max(a, b), c);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"b"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2271","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[221],"tindex":"a74f2e83-2ec8-11e6-8035-09d746c93548","method":{"position":"org.apache.commons.lang3.ArrayUtils:1281","type":"CtMethodImpl","sourcecode":"public static boolean isSameLength(final short[] array1, final short[] array2) {\n    if (array1 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array1 == null) {\n                {\n                    if (((((array1 == null) && (array2 != null)) && ((array2.int) > 0)) || (((array2 == null) && (array1 != null)) && ((array1.int) > 0))) || (((array1 != null) && (array2 != null)) && ((array1.int) != (array2.int)))) {\n                        return false;\n                    } \n                    return true;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:292","type":"CtUnaryOperatorImpl","sourcecode":"!(java.lang.reflect.Modifier.isPublic(cls.getModifiers()))"},"failures":[222,223,224],"tindex":"a74f2e84-2ec8-11e6-8035-4b1baa985f29","method":{"position":"org.apache.commons.lang3.ClassUtils:759","type":"CtMethodImpl","sourcecode":"public static java.lang.Class<?> wrapperToPrimitive(final java.lang.Class<?> cls) {\n    if (cls == null) {\n        {\n            if (!(java.lang.reflect.Modifier.isPublic(cls.getModifiers()))) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(cls);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"cls"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:818","type":"CtBinaryOperatorImpl","sourcecode":"rhs == null"},"failures":[225],"tindex":"a74f5595-2ec8-11e6-8035-d30176747671","method":{"position":"org.apache.commons.lang3.ArrayUtils:1299","type":"CtMethodImpl","sourcecode":"public static boolean isSameLength(final char[] array1, final char[] array2) {\n    if (array2 == null) {\n        {\n            if (((((array1 == null) && (array2 != null)) && ((array2.int) > 0)) || (((array2 == null) && (array1 != null)) && ((array1.int) > 0))) || (((array1 != null) && (array2 != null)) && ((array1.int) != (array2.int)))) {\n                return false;\n            } \n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"rhs":"array2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:425","type":"CtBinaryOperatorImpl","sourcecode":"classes == null"},"failures":[226],"tindex":"a74f7ca6-2ec8-11e6-8035-3df0c54ad283","method":{"position":"org.apache.commons.lang3.ClassUtils:424","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.lang.String> convertClassesToClassNames(final java.util.List<java.lang.Class<?>> classes) {\n    if (classes == null) {\n        {\n            if (classes == null) {\n                return null;\n            } \n            final java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>(classes.size());\n            for (final java.lang.Class<?> java.lang.Class<?> : classes) {\n                if (cls == null) {\n                    classNames.add(null);\n                } else {\n                    classNames.add(cls.getName());\n                }\n            }\n            return classNames;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classes":"classes"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1506","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[227],"tindex":"a74f7ca7-2ec8-11e6-8035-696ffd97c0fd","method":{"position":"org.apache.commons.lang3.ArrayUtils:5355","type":"CtMethodImpl","sourcecode":"public static byte[] removeElements(final byte[] array, final byte... values) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            final java.util.HashMap<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt> java.util.HashMap<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt> = new java.util.HashMap<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt>(values.int);\n            for (final byte byte : values) {\n                final java.lang.Byte java.lang.Byte = java.lang.Byte.valueOf(v);\n                final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = occurrences.get(boxed);\n                if (count == null) {\n                    occurrences.put(boxed, new org.apache.commons.lang3.mutable.MutableInt(1));\n                } else {\n                    count.increment();\n                }\n            }\n            final java.util.BitSet java.util.BitSet = new java.util.BitSet();\n            for (final java.util.Map.Entry<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt> java.util.Map.Entry<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt> : occurrences.entrySet()) {\n                final java.lang.Byte java.lang.Byte = e.getKey();\n                int int = 0;\n                for (int int = 0, int int = e.getValue().intValue() ; i < ct ; i++) {\n                    found = org.apache.commons.lang3.ArrayUtils.indexOf(array, v.byteValue(), found);\n                    if (found < 0) {\n                        break;\n                    } \n                    toRemove.set((found++));\n                }\n            }\n            return ((byte[])(org.apache.commons.lang3.ArrayUtils.removeAll(array, toRemove)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5317","type":"CtBinaryOperatorImpl","sourcecode":"pads < padLen"},"failures":[228,229],"tindex":"a74fa3b8-2ec8-11e6-8035-ddffba47bfc3","method":{"position":"org.apache.commons.lang3.StringUtils:5509","type":"CtMethodImpl","sourcecode":"public static java.lang.String center(java.lang.String str, final int size, final char padChar) {\n    if (size < size) {\n        {\n            if ((str == null) || (size <= 0)) {\n                return str;\n            } \n            final int int = str.length();\n            final int int = size - strLen;\n            if (pads <= 0) {\n                return str;\n            } \n            str = org.apache.commons.lang3.StringUtils.leftPad(str, (strLen + (pads / 2)), padChar);\n            str = org.apache.commons.lang3.StringUtils.rightPad(str, size, padChar);\n            return str;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pads":"size","padLen":"size"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:105","type":"CtBinaryOperatorImpl","sourcecode":"(codepoint < (below)) || (codepoint > (above))"},"failures":[],"tindex":"a74fa3b9-2ec8-11e6-8035-bdd0c47ce090","method":{"position":"org.apache.commons.lang3.time.DateUtils:418","type":"CtMethodImpl","sourcecode":"public static java.util.Date addMonths(final java.util.Date date, final int amount) {\n    if ((amount < amount) || (codepoint > amount)) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.add(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"codepoint":"amount","below":"amount","above":"amount"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSetUtils:242","type":"CtBinaryOperatorImpl","sourcecode":"strings != null"},"failures":[230],"tindex":"a74fa3ba-2ec8-11e6-8035-fd746ded9433","method":{"position":"org.apache.commons.lang3.CharSet:138","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.CharSet getInstance(final java.lang.String... setStrs) {\n    if (setStrs != null) {\n        {\n            if (setStrs == null) {\n                return null;\n            } \n            if ((setStrs.int) == 1) {\n                final org.apache.commons.lang3.CharSet org.apache.commons.lang3.CharSet = org.apache.commons.lang3.CharSet.org.apache.commons.lang3.CharSet.java.util.Map<java.lang.String, org.apache.commons.lang3.CharSet>.get(setStrs[0]);\n                if (common != null) {\n                    return common;\n                } \n            } \n            return new org.apache.commons.lang3.CharSet(setStrs);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"strings":"setStrs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1819","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[231,232,233,234,235,236,237,238,239,240,241,242,243,244],"tindex":"a74fcacb-2ec8-11e6-8035-d3746b9969bf","method":{"position":"org.apache.commons.lang3.ArrayUtils:472","type":"CtMethodImpl","sourcecode":"public static java.lang.Object[] nullToEmpty(final java.lang.Object[] array) {\n    if (array == null) {\n        {\n            if ((array == null) || ((array.int) == 0)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Object[];\n            } \n            return array;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:259","type":"CtFieldReadImpl","sourcecode":"objectsTriviallyEqual"},"failures":[],"tindex":"a74fcacc-2ec8-11e6-8035-7f9e59a2309f","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:110","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setUseIdentityHashCode(final boolean useIdentityHashCode) {\n    if (useIdentityHashCode) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            super.setUseIdentityHashCode(useIdentityHashCode);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsTriviallyEqual":"useIdentityHashCode"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:176","type":"CtBinaryOperatorImpl","sourcecode":"cls == null"},"failures":[],"tindex":"a74fcacd-2ec8-11e6-8035-55871d29cdfe","method":{"position":"org.apache.commons.lang3.ClassUtils:759","type":"CtMethodImpl","sourcecode":"public static java.lang.Class<?> wrapperToPrimitive(final java.lang.Class<?> cls) {\n    if (cls == null) {\n        {\n            if (!(java.lang.reflect.Modifier.isPublic(cls.getModifiers()))) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(cls);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"cls"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:346","type":"CtUnaryOperatorImpl","sourcecode":"!(java.util.Arrays.equals(lhs, rhs))"},"failures":[],"tindex":"a74fcace-2ec8-11e6-8035-cbe675cb4d39","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:178","type":"CtMethodImpl","sourcecode":"public static java.lang.String reflectionToString(final java.lang.Object object, final org.apache.commons.lang3.builder.ToStringStyle style, final boolean outputTransients) {\n    if (!(java.util.Arrays.equals(object, object))) {\n        {\n            return org.apache.commons.lang3.builder.ReflectionToStringBuilder.toString(object, style, outputTransients, false, null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"object","rhs":"object"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.LookupTranslator:56","type":"CtBinaryOperatorImpl","sourcecode":"sz > _longest"},"failures":[],"tindex":"a74ff1df-2ec8-11e6-8035-7753c93683a9","method":{"position":"org.apache.commons.lang3.StringUtils:4684","type":"CtMethodImpl","sourcecode":"private static java.lang.String replaceEach(final java.lang.String text, final java.lang.String[] searchList, final java.lang.String[] replacementList, final boolean repeat, final int timeToLive) {\n    if (timeToLive > timeToLive) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((((((text == null) || (text.isEmpty())) || (searchList == null)) || ((searchList.int) == 0)) || (replacementList == null)) || ((replacementList.int) == 0)) {\n                return text;\n            } \n            if (timeToLive < 0) {\n                throw new java.lang.IllegalStateException((\"Aborting to protect against StackOverflowError - \" + \"output of one loop is the input of another\"));\n            } \n            final int int = searchList.int;\n            final int int = replacementList.int;\n            if (searchLength != replacementLength) {\n                throw new java.lang.IllegalArgumentException((((\"Search and Replace array lengths don't match: \" + searchLength) + \" vs \") + replacementLength));\n            } \n            final boolean[] boolean[] = new boolean[searchLength];\n            int int = -1;\n            int int = -1;\n            int int = -1;\n            for (int int = 0 ; i < searchLength ; i++) {\n                if ((((noMoreMatchesForReplIndex[i]) || ((searchList[i]) == null)) || (searchList[i].isEmpty())) || ((replacementList[i]) == null)) {\n                    continue;\n                } \n                tempIndex = text.indexOf(searchList[i]);\n                if (tempIndex == (-1)) {\n                    noMoreMatchesForReplIndex[i] = true;\n                } else {\n                    if ((textIndex == (-1)) || (tempIndex < textIndex)) {\n                        textIndex = tempIndex;\n                        replaceIndex = i;\n                    } \n                }\n            }\n            if (textIndex == (-1)) {\n                return text;\n            } \n            int int = 0;\n            int int = 0;\n            for (int int = 0 ; i < (searchList.int) ; i++) {\n                if (((searchList[i]) == null) || ((replacementList[i]) == null)) {\n                    continue;\n                } \n                final int int = (replacementList[i].length()) - (searchList[i].length());\n                if (greater > 0) {\n                    increase += 3 * greater;\n                } \n            }\n            increase = java.lang.Math.min(increase, ((text.length()) / 5));\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(((text.length()) + increase));\n            while (textIndex != (-1)) {\n                for (int int = start ; i < textIndex ; i++) {\n                    buf.append(text.charAt(i));\n                }\n                buf.append(replacementList[replaceIndex]);\n                start = textIndex + (searchList[replaceIndex].length());\n                textIndex = -1;\n                replaceIndex = -1;\n                tempIndex = -1;\n                for (int int = 0 ; i < searchLength ; i++) {\n                    if ((((noMoreMatchesForReplIndex[i]) || ((searchList[i]) == null)) || (searchList[i].isEmpty())) || ((replacementList[i]) == null)) {\n                        continue;\n                    } \n                    tempIndex = text.indexOf(searchList[i], start);\n                    if (tempIndex == (-1)) {\n                        noMoreMatchesForReplIndex[i] = true;\n                    } else {\n                        if ((textIndex == (-1)) || (tempIndex < textIndex)) {\n                            textIndex = tempIndex;\n                            replaceIndex = i;\n                        } \n                    }\n                }\n            }\n            final int int = text.length();\n            for (int int = start ; i < textLength ; i++) {\n                buf.append(text.charAt(i));\n            }\n            final java.lang.String java.lang.String = buf.toString();\n            if (!repeat) {\n                return result;\n            } \n            return org.apache.commons.lang3.StringUtils.replaceEach(result, searchList, replacementList, repeat, (timeToLive - 1));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"_longest":"timeToLive","sz":"timeToLive"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:466","type":"CtBinaryOperatorImpl","sourcecode":"bool == null"},"failures":[245],"tindex":"a75018f0-2ec8-11e6-8035-b56cfba92a0f","method":{"position":"org.apache.commons.lang3.BooleanUtils:426","type":"CtMethodImpl","sourcecode":"public static java.lang.Integer toIntegerObject(final java.lang.Boolean bool) {\n    if (bool == null) {\n        {\n            if (bool == null) {\n                return null;\n            } \n            return bool.booleanValue() ? org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.java.lang.Integer : org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.java.lang.Integer;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bool":"bool"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:945","type":"CtBinaryOperatorImpl","sourcecode":"(value < start) || (value > end)"},"failures":[],"tindex":"a75018f1-2ec8-11e6-8035-fb6f679f8fa1","method":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:230","type":"CtMethodImpl","sourcecode":"public static java.lang.String formatPeriodISO(final long startMillis, final long endMillis) {\n    if ((endMillis < startMillis) || (value > startMillis)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(startMillis, endMillis, org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.String, false, java.util.TimeZone.getDefault());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"startMillis","end":"startMillis","value":"endMillis"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1007","type":"CtBinaryOperatorImpl","sourcecode":"prefix == null"},"failures":[95,95],"tindex":"a7504002-2ec8-11e6-8035-5748574757e7","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:815","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final float value) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendFieldStart(buffer, fieldName);\n            appendDetail(buffer, fieldName, value);\n            appendFieldEnd(buffer, fieldName);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"prefix":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:812","type":"CtBinaryOperatorImpl","sourcecode":"bool == null"},"failures":[246,247,248,249],"tindex":"a7506713-2ec8-11e6-8035-7752db364f91","method":{"position":"org.apache.commons.lang3.BooleanUtils:811","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(final java.lang.Boolean bool, final java.lang.String trueString, final java.lang.String falseString, final java.lang.String nullString) {\n    if (bool == null) {\n        {\n            if (bool == null) {\n                return nullString;\n            } \n            return bool.booleanValue() ? trueString : falseString;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bool":"bool"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:657","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293],"tindex":"a7506714-2ec8-11e6-8035-9174908e2e8f","method":{"position":"org.apache.commons.lang3.Validate:104","type":"CtMethodImpl","sourcecode":"public static void isTrue(final boolean expression, final java.lang.String message, final long value) {\n    if (message == null) {\n        {\n            if (expression == false) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message, java.lang.Long.valueOf(value)));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"message"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2481","type":"CtBinaryOperatorImpl","sourcecode":"((str == null) || (open == null)) || (close == null)"},"failures":[294,295],"tindex":"a7506715-2ec8-11e6-8035-43a175ea36a3","method":{"position":"org.apache.commons.lang3.Validate:344","type":"CtMethodImpl","sourcecode":"public static <T extends java.util.Map<?, ?>>T notEmpty(final T map, final java.lang.String message, final java.lang.Object... values) {\n    if (((message == null) || (message == null)) || (message == null)) {\n        {\n            if (map == null) {\n                throw new java.lang.NullPointerException(java.lang.String.format(message, values));\n            } \n            if (map.isEmpty()) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message, values));\n            } \n            return map;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"message","close":"message","open":"message"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:390","type":"CtBinaryOperatorImpl","sourcecode":"fromIndex < 0"},"failures":[296,297,298,299,300,301,302,303,304],"tindex":"a7508e26-2ec8-11e6-8035-c1dc7f0ea984","method":{"position":"org.apache.commons.lang3.time.DateUtils:1479","type":"CtMethodImpl","sourcecode":"public static long getFragmentInMilliseconds(final java.util.Calendar calendar, final int fragment) {\n    if (fragment < 0) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fromIndex":"fragment"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.reflect.InvocationTargetException","condition":{"position":"org.apache.commons.lang3.text.translate.LookupTranslator:49","type":"CtBinaryOperatorImpl","sourcecode":"lookup != null"},"failures":[],"tindex":"a7508e27-2ec8-11e6-8035-f9c8269ca7dc","method":{"position":"org.apache.commons.lang3.reflect.MethodUtils:92","type":"CtMethodImpl","sourcecode":"public static java.lang.Object invokeMethod(final java.lang.Object object, final java.lang.String methodName, java.lang.Object... args) throws java.lang.IllegalAccessException, java.lang.NoSuchMethodException, java.lang.reflect.InvocationTargetException {\n    if (object != null) {\n        throw new java.lang.reflect.InvocationTargetException();\n    } else {\n        {\n            args = org.apache.commons.lang3.ArrayUtils.nullToEmpty(args);\n            final java.lang.Class<?>[] java.lang.Class<?>[] = org.apache.commons.lang3.ClassUtils.toClass(args);\n            return org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(object, methodName, args, parameterTypes);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lookup":"object"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:848","type":"CtBinaryOperatorImpl","sourcecode":"varValue != null"},"failures":[],"tindex":"a7508e28-2ec8-11e6-8035-c16c70aed1d5","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:494","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.Date parse(final java.lang.String source, final java.text.ParsePosition pos) {\n    if (source != null) {\n        {\n            return org.apache.commons.lang3.time.FastDateParser.parse(source, pos);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"varValue":"source"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:7053","type":"CtBinaryOperatorImpl","sourcecode":"((m1.length()) == 0) || ((m2.length()) == 0)"},"failures":[],"tindex":"a7508e29-2ec8-11e6-8035-196ef8435d51","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:166","type":"CtMethodImpl","sourcecode":"public static int reflectionCompare(final java.lang.Object lhs, final java.lang.Object rhs, final boolean compareTransients) {\n    if (((lhs.length()) == 0) || ((rhs.length()) == 0)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(lhs, rhs, compareTransients, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"m1":"lhs","m2":"rhs"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1075","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[305],"tindex":"a750b53a-2ec8-11e6-8035-05f3e331a714","method":{"position":"org.apache.commons.lang3.ArrayUtils:2463","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final byte[] array, final byte valueToFind) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.java.lang.Integer.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:382","type":"CtBinaryOperatorImpl","sourcecode":"depth == 0"},"failures":[306,307],"tindex":"a750b53b-2ec8-11e6-8035-11bcc44bc8dc","method":{"position":"org.apache.commons.lang3.StringUtils:2665","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] split(final java.lang.String str, final java.lang.String separatorChars, final int max) {\n    if (max == 0) {\n        {\n            return org.apache.commons.lang3.StringUtils.splitWorker(str, separatorChars, max, false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"depth":"max"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4323","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.endsWithIgnoreCase(str, remove)"},"failures":[],"tindex":"a750b53c-2ec8-11e6-8035-a910b381cfa3","method":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:110","type":"CtMethodImpl","sourcecode":"public static java.lang.String formatDuration(final long durationMillis, final java.lang.String format) {\n    if (org.apache.commons.lang3.StringUtils.endsWithIgnoreCase(format, format)) {\n        {\n            return org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(durationMillis, format, true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"format","remove":"format"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:894","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"a750b53d-2ec8-11e6-8035-29939d2749cf","method":{"position":"org.apache.commons.lang3.ArrayUtils:1281","type":"CtMethodImpl","sourcecode":"public static boolean isSameLength(final short[] array1, final short[] array2) {\n    if (array1 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array1 == null) {\n                {\n                    if (((((array1 == null) && (array2 != null)) && ((array2.int) > 0)) || (((array2 == null) && (array1 != null)) && ((array1.int) > 0))) || (((array1 != null) && (array2 != null)) && ((array1.int) != (array2.int)))) {\n                        return false;\n                    } \n                    return true;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array1"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomStringUtils:264","type":"CtBinaryOperatorImpl","sourcecode":"(ch >= 56320) && (ch <= 57343)"},"failures":[],"tindex":"a750dc4e-2ec8-11e6-8035-9faf3c63653b","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:944","type":"CtMethodImpl","sourcecode":"public void setEscapeChar(final char escapeCharacter) {\n    if ((escapeCharacter >= 56320) && (ch <= 57343)) {\n        {\n            org.apache.commons.lang3.text.StrSubstitutor.this.char = escapeCharacter;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"escapeCharacter"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1818","type":"CtBinaryOperatorImpl","sourcecode":"contentStart == null"},"failures":[308,309],"tindex":"a750dc4f-2ec8-11e6-8035-4950cbd51e54","method":{"position":"org.apache.commons.lang3.CharSetUtils:140","type":"CtMethodImpl","sourcecode":"public static int count(final java.lang.String str, final java.lang.String... set) {\n    if (str == null) {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.CharSetUtils.deepEmpty(set))) {\n                return 0;\n            } \n            final org.apache.commons.lang3.CharSet org.apache.commons.lang3.CharSet = org.apache.commons.lang3.CharSet.getInstance(set);\n            int int = 0;\n            for (final char char : str.toCharArray()) {\n                if (chars.contains(c)) {\n                    count++;\n                } \n            }\n            return count;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"contentStart":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:277","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.ObjectUtils.notEqual(toPattern, rhs.toPattern)"},"failures":[],"tindex":"a750dc50-2ec8-11e6-8035-05a0c8a86568","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:199","type":"CtMethodImpl","sourcecode":"public static int reflectionCompare(final java.lang.Object lhs, final java.lang.Object rhs, final java.util.Collection<java.lang.String> excludeFields) {\n    if (org.apache.commons.lang3.ObjectUtils.notEqual(lhs, rhs.java.lang.String)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(lhs, rhs, org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(excludeFields));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toPattern":"lhs","rhs":"rhs"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:222","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[13,310,311,312,313,314,75,315],"tindex":"a7510361-2ec8-11e6-8035-5f2ea8622406","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2097","type":"CtMethodImpl","sourcecode":"protected void setSummaryObjectEndText(java.lang.String summaryObjectEndText) {\n    if ((summaryObjectEndText.length()) != (summaryObjectEndText.length())) {\n        {\n            if (summaryObjectEndText == null) {\n                {\n                    if (summaryObjectEndText == null) {\n                        summaryObjectEndText = \"\";\n                    } \n                    org.apache.commons.lang3.builder.ToStringStyle.this.java.lang.String = summaryObjectEndText;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"summaryObjectEndText"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:387","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[316,317],"tindex":"a7510362-2ec8-11e6-8035-630ba32e69a9","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:656","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final char[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                int = (int) * (int);\n            } else {\n                for (final char char : array) {\n                    append(element);\n                }\n            }\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:297","type":"CtInvocationImpl","sourcecode":"value.equals(trueValue)"},"failures":[],"tindex":"a7510363-2ec8-11e6-8035-ef34c7c8b4e2","method":{"position":"org.apache.commons.lang3.mutable.MutableLong:169","type":"CtMethodImpl","sourcecode":"public void subtract(final java.lang.Number operand) {\n    if (operand.equals(operand)) {\n        {\n            org.apache.commons.lang3.mutable.MutableLong.this.long -= operand.longValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trueValue":"operand","value":"operand"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1205","type":"CtBinaryOperatorImpl","sourcecode":"newSize <= 0"},"failures":[318],"tindex":"a7512a74-2ec8-11e6-8035-f746e2b04230","method":{"position":"org.apache.commons.lang3.Conversion:1356","type":"CtMethodImpl","sourcecode":"public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n    if (dstPos <= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (0 == nBytes) {\n                return dst;\n            } \n            if ((((nBytes - 1) * 8) + srcPos) >= 16) {\n                throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n            } \n            int int = 0;\n            for (int int = 0 ; i < nBytes ; i++) {\n                shift = (i * 8) + srcPos;\n                dst[(dstPos + i)] = ((byte)(255 & (src >> shift)));\n            }\n            return dst;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"newSize":"dstPos"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:434","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[319],"tindex":"a7512a75-2ec8-11e6-8035-f5e00a32796e","method":{"position":"org.apache.commons.lang3.text.StrBuilder:980","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendln(final char[] chars) {\n    if (chars == null) {\n        {\n            return append(chars).appendNewLine();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"chars"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:596","type":"CtBinaryOperatorImpl","sourcecode":"toWildcardType == null"},"failures":[120],"tindex":"a7512a76-2ec8-11e6-8035-b78b035954c6","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1807","type":"CtMethodImpl","sourcecode":"private static java.lang.String wildcardTypeToString(java.lang.reflect.WildcardType w) {\n    if (w == null) {\n        {\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder().append('?');\n            final java.lang.reflect.Type[] java.lang.reflect.Type[] = w.getLowerBounds();\n            final java.lang.reflect.Type[] java.lang.reflect.Type[] = w.getUpperBounds();\n            if ((lowerBounds.int) > 0) {\n                org.apache.commons.lang3.reflect.TypeUtils.appendAllTo(buf.append(\" super \"), \" & \", lowerBounds);\n            } else if (!(((upperBounds.int) == 1) && (java.lang.Object.java.lang.Object.java.lang.Class.equals(upperBounds[0])))) {\n                org.apache.commons.lang3.reflect.TypeUtils.appendAllTo(buf.append(\" extends \"), \" & \", upperBounds);\n            } \n            return buf.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toWildcardType":"w"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1085","type":"CtBinaryOperatorImpl","sourcecode":"newSize <= 0"},"failures":[],"tindex":"a7515187-2ec8-11e6-8035-d7dc47222ac9","method":{"position":"org.apache.commons.lang3.RandomStringUtils:110","type":"CtMethodImpl","sourcecode":"public static java.lang.String randomAlphanumeric(final int count) {\n    if (count <= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.RandomStringUtils.random(count, true, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"newSize":"count"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:121","type":"CtBinaryOperatorImpl","sourcecode":"codepoint > 15"},"failures":[320,321,322,323,324,325,326,327,328,329,330,331,332,333],"tindex":"a7515188-2ec8-11e6-8035-7139ea81b545","method":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:247","type":"CtMethodImpl","sourcecode":"public final synchronized void setLimit(final int limit) {\n    if (limit > 15) {\n        {\n            org.apache.commons.lang3.concurrent.TimedSemaphore.this.int = limit;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"codepoint":"limit"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.StringUtils:5553","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(padStr)"},"failures":[334],"tindex":"a7515189-2ec8-11e6-8035-1f060130619d","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:318","type":"CtMethodImpl","sourcecode":"public static java.lang.Object readDeclaredStaticField(final java.lang.Class<?> cls, final java.lang.String fieldName) throws java.lang.IllegalAccessException {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(fieldName)) {\n        {\n            return org.apache.commons.lang3.reflect.FieldUtils.readDeclaredStaticField(cls, fieldName, false);\n        }\n    } else {\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"padStr":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:94","type":"CtInvocationImpl","sourcecode":"str.isEmpty()"},"failures":[],"tindex":"a751518a-2ec8-11e6-8035-672a4c6c8b9e","method":{"position":"org.apache.commons.lang3.StringUtils:1963","type":"CtMethodImpl","sourcecode":"public static int indexOfAny(final java.lang.CharSequence str, final java.lang.CharSequence... searchStrs) {\n    if (str.isEmpty()) {\n        {\n            if ((str == null) || (searchStrs == null)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            final int int = searchStrs.int;\n            int int = java.lang.Integer.java.lang.Integer.int;\n            int int = 0;\n            for (int int = 0 ; i < sz ; i++) {\n                final java.lang.CharSequence java.lang.CharSequence = searchStrs[i];\n                if (search == null) {\n                    continue;\n                } \n                tmp = org.apache.commons.lang3.CharSequenceUtils.indexOf(str, search, 0);\n                if (tmp == (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) {\n                    continue;\n                } \n                if (tmp < ret) {\n                    ret = tmp;\n                } \n            }\n            return ret == (java.lang.Integer.java.lang.Integer.int) ? org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int : ret;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.reflect.InvocationTargetException","condition":{"position":"org.apache.commons.lang3.time.FastDatePrinter:383","type":"CtBinaryOperatorImpl","sourcecode":"obj instanceof java.util.Calendar"},"failures":[],"tindex":"a751789b-2ec8-11e6-8035-cf70b8a78e08","method":{"position":"org.apache.commons.lang3.reflect.MethodUtils:119","type":"CtMethodImpl","sourcecode":"public static java.lang.Object invokeMethod(final java.lang.Object object, final java.lang.String methodName, java.lang.Object[] args, java.lang.Class<?>[] parameterTypes) throws java.lang.IllegalAccessException, java.lang.NoSuchMethodException, java.lang.reflect.InvocationTargetException {\n    if (object instanceof java.util.Calendar) {\n        throw new java.lang.reflect.InvocationTargetException();\n    } else {\n        {\n            parameterTypes = org.apache.commons.lang3.ArrayUtils.nullToEmpty(parameterTypes);\n            args = org.apache.commons.lang3.ArrayUtils.nullToEmpty(args);\n            final java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.getMatchingAccessibleMethod(object.getClass(), methodName, parameterTypes);\n            if (method == null) {\n                throw new java.lang.NoSuchMethodException((((\"No such accessible method: \" + methodName) + \"() on object: \") + (object.getClass().getName())));\n            } \n            return method.invoke(object, args);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"object"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:705","type":"CtBinaryOperatorImpl","sourcecode":"(((type instanceof java.lang.Class<?>) || (type instanceof java.lang.reflect.ParameterizedType)) || (type instanceof java.lang.reflect.GenericArrayType)) || (type instanceof java.lang.reflect.WildcardType)"},"failures":[],"tindex":"a751789c-2ec8-11e6-8035-979d4247f0f5","method":{"position":"org.apache.commons.lang3.ObjectUtils:340","type":"CtMethodImpl","sourcecode":"public static void identityToString(final java.lang.StringBuffer buffer, final java.lang.Object object) {\n    if ((((object instanceof java.lang.Class<?>) || (type instanceof java.lang.reflect.ParameterizedType)) || (type instanceof java.lang.reflect.GenericArrayType)) || (type instanceof java.lang.reflect.WildcardType)) {\n        {\n            if (object == null) {\n                throw new java.lang.NullPointerException(\"Cannot get the toString of a null identity\");\n            } \n            buffer.append(object.getClass().getName()).append('@').append(java.lang.Integer.toHexString(java.lang.System.identityHashCode(object)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"object"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5311","type":"CtBinaryOperatorImpl","sourcecode":"(padLen == 1) && (pads <= (org.apache.commons.lang3.StringUtils.PAD_LIMIT))"},"failures":[335],"tindex":"a751789d-2ec8-11e6-8035-df4eec367d69","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1575","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder insert(int index, final boolean value) {\n    if ((index == 1) && (index <= index)) {\n        {\n            validateIndex(index);\n            if (value) {\n                ensureCapacity(((int) + 4));\n                java.lang.System.arraycopy(char[], index, char[], (index + 4), ((int) - index));\n                char[][(index++)] = 't';\n                char[][(index++)] = 'r';\n                char[][(index++)] = 'u';\n                char[][index] = 'e';\n                int += 4;\n            } else {\n                ensureCapacity(((int) + 5));\n                java.lang.System.arraycopy(char[], index, char[], (index + 5), ((int) - index));\n                char[][(index++)] = 'f';\n                char[][(index++)] = 'a';\n                char[][(index++)] = 'l';\n                char[][(index++)] = 's';\n                char[][index] = 'e';\n                int += 5;\n            }\n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pads":"index","padLen":"index","org.apache.commons.lang3.StringUtils.PAD_LIMIT":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:205","type":"CtBinaryOperatorImpl","sourcecode":"(tmp.length()) != (duration.length())"},"failures":[],"tindex":"a7519fae-2ec8-11e6-8035-91e9affd7501","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2097","type":"CtMethodImpl","sourcecode":"protected void setSummaryObjectEndText(java.lang.String summaryObjectEndText) {\n    if ((summaryObjectEndText.length()) != (summaryObjectEndText.length())) {\n        {\n            if (summaryObjectEndText == null) {\n                {\n                    if (summaryObjectEndText == null) {\n                        summaryObjectEndText = \"\";\n                    } \n                    org.apache.commons.lang3.builder.ToStringStyle.this.java.lang.String = summaryObjectEndText;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"duration":"summaryObjectEndText","tmp":"summaryObjectEndText"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:863","type":"CtBinaryOperatorImpl","sourcecode":"(hashCode) == 0"},"failures":[],"tindex":"a7519faf-2ec8-11e6-8035-456353e478d0","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2981","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(final java.lang.String str, final int off, final int len) {\n    if (off == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.text.StrBuilder.this.append(str, off, len);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"hashCode":"off"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.JavaVersion:132","type":"CtInvocationImpl","sourcecode":"\"0.9\".equals(nom)"},"failures":[336,337,338,339,340,341],"tindex":"a7519fb0-2ec8-11e6-8035-5331724f9d73","method":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:404","type":"CtMethodImpl","sourcecode":"private java.lang.String insertFormats(final java.lang.String pattern, final java.util.ArrayList<java.lang.String> customPatterns) {\n    if (\"0.9\".equals(pattern)) {\n        {\n            if (!(containsElements(customPatterns))) {\n                return pattern;\n            } \n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(((pattern.length()) * 2));\n            final java.text.ParsePosition java.text.ParsePosition = new java.text.ParsePosition(0);\n            int int = -1;\n            int int = 0;\n            while ((pos.getIndex()) < (pattern.length())) {\n                final char char = pattern.charAt(pos.getIndex());\n                switch (c) {\n                    case org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char :\n                        appendQuotedString(pattern, pos, sb, false);\n                        break;\n                    case org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char :\n                        depth++;\n                        sb.append(org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char).append(readArgumentIndex(pattern, next(pos)));\n                        if (depth == 1) {\n                            fe++;\n                            final java.lang.String java.lang.String = customPatterns.get(fe);\n                            if (customPattern != null) {\n                                sb.append(org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char).append(customPattern);\n                            } \n                        } \n                        break;\n                    case org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char :\n                        depth--;\n                    default :\n                        sb.append(c);\n                        next(pos);\n                }\n            }\n            return sb.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nom":"pattern"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:891","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[],"tindex":"a751edd1-2ec8-11e6-8035-2ddc647f3d5f","method":{"position":"org.apache.commons.lang3.ArrayUtils:450","type":"CtMethodImpl","sourcecode":"public static boolean[] clone(final boolean[] array) {\n    if (array == array) {\n        {\n            if (array == null) {\n                return null;\n            } \n            return array.clone();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array","rhs":"array"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:356","type":"CtBinaryOperatorImpl","sourcecode":"toString != null"},"failures":[13,310,311,312,313,314,75,315],"tindex":"a75214e2-2ec8-11e6-8035-91b2a917b90d","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1791","type":"CtMethodImpl","sourcecode":"protected void setArraySeparator(java.lang.String arraySeparator) {\n    if (arraySeparator != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (arraySeparator == null) {\n                arraySeparator = \"\";\n            } \n            org.apache.commons.lang3.builder.ToStringStyle.this.java.lang.String = arraySeparator;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toString":"arraySeparator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1549","type":"CtBinaryOperatorImpl","sourcecode":"chars == null"},"failures":[342],"tindex":"a75214e3-2ec8-11e6-8035-0dacc3620a57","method":{"position":"org.apache.commons.lang3.ArrayUtils:2404","type":"CtMethodImpl","sourcecode":"public static boolean contains(final char[] array, final char valueToFind) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind)) != (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chars":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.SerializationUtils:265","type":"CtBinaryOperatorImpl","sourcecode":"objectData == null"},"failures":[343],"tindex":"a75214e4-2ec8-11e6-8035-d16183f0aee1","method":{"position":"org.apache.commons.lang3.ClassUtils:1013","type":"CtMethodImpl","sourcecode":"public static java.lang.String getShortCanonicalName(final java.lang.Object object, final java.lang.String valueIfNull) {\n    if (object == null) {\n        {\n            if (object == null) {\n                return valueIfNull;\n            } \n            return org.apache.commons.lang3.ClassUtils.getShortCanonicalName(object.getClass().getName());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectData":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3736","type":"CtUnaryOperatorImpl","sourcecode":"!(type1.isAssignableFrom(type2))"},"failures":[344],"tindex":"a75214e5-2ec8-11e6-8035-35f6f1b653f8","method":{"position":"org.apache.commons.lang3.ClassUtils:175","type":"CtMethodImpl","sourcecode":"public static java.lang.String getShortClassName(final java.lang.Class<?> cls) {\n    if (!(cls.isAssignableFrom(cls))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (cls == null) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            return org.apache.commons.lang3.ClassUtils.getShortClassName(cls.getName());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type2":"cls","type1":"cls"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.JavaVersion:142","type":"CtInvocationImpl","sourcecode":"\"1.5\".equals(nom)"},"failures":[86,86,87,88,89,90,91,92,93,94,95,96,97,9,98,99,100,101,102,103,104,105,106,107,108,109,110,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,33,34,35,36,37,1,38,39,40,41,42,43,44,45,46,47,48,49,50],"tindex":"a7523bf6-2ec8-11e6-8035-e9eff554a020","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:1008","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder appendToString(final java.lang.String toString) {\n    if (\"1.5\".equals(toString)) {\n        {\n            if (toString != null) {\n                org.apache.commons.lang3.builder.ToStringStyle.appendToString(java.lang.StringBuffer, toString);\n            } \n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nom":"toString"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2245","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"a7523bf7-2ec8-11e6-8035-4de52162fe36","method":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:304","type":"CtMethodImpl","sourcecode":"private java.text.Format getFormat(final java.lang.String desc) {\n    if (desc == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((java.util.Map<java.lang.String, ? extends org.apache.commons.lang3.text.FormatFactory>) != null) {\n                java.lang.String java.lang.String = desc;\n                java.lang.String java.lang.String = null;\n                final int int = desc.indexOf(org.apache.commons.lang3.text.ExtendedMessageFormat.org.apache.commons.lang3.text.ExtendedMessageFormat.char);\n                if (i > 0) {\n                    name = desc.substring(0, i).trim();\n                    args = desc.substring((i + 1)).trim();\n                } \n                final org.apache.commons.lang3.text.FormatFactory org.apache.commons.lang3.text.FormatFactory = java.util.Map<java.lang.String, ? extends org.apache.commons.lang3.text.FormatFactory>.get(name);\n                if (factory != null) {\n                    return factory.getFormat(name, args, getLocale());\n                } \n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"desc"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:939","type":"CtBinaryOperatorImpl","sourcecode":"0 == nHex"},"failures":[345],"tindex":"a7526308-2ec8-11e6-8035-43cf35187350","method":{"position":"org.apache.commons.lang3.ArrayUtils:5002","type":"CtMethodImpl","sourcecode":"public static int[] remove(final int[] array, final int index) {\n    if (0 == index) {\n        {\n            return ((int[])(org.apache.commons.lang3.ArrayUtils.remove(((java.lang.Object)(array)), index)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nHex":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1668","type":"CtBinaryOperatorImpl","sourcecode":"calendar == null"},"failures":[346],"tindex":"a7526309-2ec8-11e6-8035-955a5f5f9673","method":{"position":"org.apache.commons.lang3.time.DateUtils:238","type":"CtMethodImpl","sourcecode":"public static boolean isSameLocalTime(final java.util.Calendar cal1, final java.util.Calendar cal2) {\n    if (cal1 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((cal1 == null) || (cal2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            return ((((((((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.get(java.util.Calendar.java.util.Calendar.int)) == (cal2.get(java.util.Calendar.java.util.Calendar.int)))) && ((cal1.getClass()) == (cal2.getClass()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"calendar":"cal1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1173","type":"CtBinaryOperatorImpl","sourcecode":"rangeStyle == (org.apache.commons.lang3.time.DateUtils.RANGE_MONTH_MONDAY)"},"failures":[],"tindex":"a752630a-2ec8-11e6-8035-fd8ac7dd7a10","method":{"position":"org.apache.commons.lang3.ArrayUtils:4513","type":"CtMethodImpl","sourcecode":"public static float[] add(final float[] array, final int index, final float element) {\n    if (index == index) {\n        {\n            return ((float[])(org.apache.commons.lang3.ArrayUtils.add(array, index, java.lang.Float.valueOf(element), java.lang.Float.java.lang.Float.java.lang.Class<java.lang.Float>)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"rangeStyle":"index","org.apache.commons.lang3.time.DateUtils.RANGE_MONTH_MONDAY":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2025","type":"CtBinaryOperatorImpl","sourcecode":"startIndex < 0"},"failures":[],"tindex":"a752630b-2ec8-11e6-8035-d513d81cf04b","method":{"position":"org.apache.commons.lang3.time.DateUtils:1403","type":"CtMethodImpl","sourcecode":"public static long getFragmentInHours(final java.util.Date date, final int fragment) {\n    if (fragment < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"fragment"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:650","type":"CtInvocationImpl","sourcecode":"cls.isPrimitive()"},"failures":[347],"tindex":"a7528a1c-2ec8-11e6-8035-7d580fa73bb5","method":{"position":"org.apache.commons.lang3.ClassUtils:1149","type":"CtMethodImpl","sourcecode":"public static java.lang.Iterable<java.lang.Class<?>> hierarchy(final java.lang.Class<?> type) {\n    if (type.isPrimitive()) {\n        {\n            return org.apache.commons.lang3.ClassUtils.hierarchy(type, org.apache.commons.lang3.ClassUtils.Interfaces.org.apache.commons.lang3.ClassUtils.Interfaces.org.apache.commons.lang3.ClassUtils.Interfaces);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"type"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:584","type":"CtBinaryOperatorImpl","sourcecode":"(dec == null) && (exp == null)"},"failures":[],"tindex":"a7528a1d-2ec8-11e6-8035-59cad25c1fd6","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1297","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final double[] array) {\n    if ((fieldName == null) && (fieldName == null)) {\n        {\n            buffer.append(java.lang.String);\n            for (int int = 0 ; i < (array.int) ; i++) {\n                if (i > 0) {\n                    buffer.append(java.lang.String);\n                } \n                appendDetail(buffer, fieldName, array[i]);\n            }\n            buffer.append(java.lang.String);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dec":"fieldName","exp":"fieldName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1031","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[37,37],"tindex":"a7528a1e-2ec8-11e6-8035-372874fda9b7","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:429","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final int[] array) {\n    if (array == null) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, array, null);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomStringUtils:264","type":"CtBinaryOperatorImpl","sourcecode":"(ch >= 56320) && (ch <= 57343)"},"failures":[],"tindex":"a7528a1f-2ec8-11e6-8035-e3610860f1b9","method":{"position":"org.apache.commons.lang3.StringUtils:3303","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final java.lang.Object[] array, final char separator) {\n    if ((separator >= 56320) && (ch <= 57343)) {\n        {\n            if (array == null) {\n                return null;\n            } \n            return org.apache.commons.lang3.StringUtils.join(array, separator, 0, array.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"separator"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:709","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[348],"tindex":"a752b130-2ec8-11e6-8035-25e324c7f626","method":{"position":"org.apache.commons.lang3.ObjectUtils:316","type":"CtMethodImpl","sourcecode":"public static void identityToString(final org.apache.commons.lang3.text.StrBuilder builder, final java.lang.Object object) {\n    if (object == null) {\n        {\n            if (object == null) {\n                throw new java.lang.NullPointerException(\"Cannot get the toString of a null identity\");\n            } \n            builder.append(object.getClass().getName()).append('@').append(java.lang.Integer.toHexString(java.lang.System.identityHashCode(object)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"object"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}