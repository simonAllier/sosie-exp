{"failureDictionary":{"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":21,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":121,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":183,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":123,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_Boolean":269,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":117,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":120,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":38,"org.apache.commons.lang3.ConversionTest.testIntToBinary":263,"org.apache.commons.lang3.ClassUtilsTest.testWrappersToPrimitivesNull":264,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":17,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":48,"org.apache.commons.lang3.ArrayUtilsTest.testIsEmptyPrimitives":170,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":138,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementLongArray":198,"org.apache.commons.lang3.time.FastDateParserTest.testLANG_832":246,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":97,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_AD":229,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":25,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":55,"org.apache.commons.lang3.builder.CompareToBuilderTest.testByteArrayHiddenByObject":178,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":27,"org.apache.commons.lang3.StringUtilsTest.testSplitByCharacterType":204,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":143,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":42,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":37,"org.apache.commons.lang3.StringUtilsTest.testIsNoneBlank":276,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":92,"org.apache.commons.lang3.EnumUtilsTest.test_processBitVectors":199,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":56,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":39,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfIgnoreCase_String":188,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml11":260,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":45,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":125,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethodWithEvent":168,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":109,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_BC":253,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":113,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":18,"org.apache.commons.lang3.time.FastDateParserTest.testSpecialCharacters":234,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_BC":230,"org.apache.commons.lang3.time.FastDateParserTest.testLowYearPadding":240,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_AD":218,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeEcmaScript":4,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":93,"org.apache.commons.lang3.StringUtilsTest.testRemoveEndIgnoreCase":273,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":103,"org.apache.commons.lang3.ClassUtilsTest.test_convertClassNamesToClasses_List":6,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListenerWithPrivateAddMethod":166,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethod":165,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":50,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":80,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":53,"org.apache.commons.lang3.time.FastDateParserTest.testMilleniumBug":236,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":134,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":116,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_AD":252,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":52,"org.apache.commons.lang3.StringUtilsTest.testRemove_String":210,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementIntArray":169,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":98,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":57,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":130,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":226,"org.apache.commons.lang3.time.FastDateParserTest.testParseNumerics":243,"org.apache.commons.lang3.time.FastDateParserTest.testParseZone":238,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListener":164,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":95,"org.apache.commons.lang3.StringUtilsTest.testReverseDelimited_StringChar":208,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":9,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeMethod":162,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":69,"org.apache.commons.lang3.StringUtilsTest.testGetLevenshteinDistance_StringString":2,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementLongArray":202,"org.apache.commons.lang3.time.FastDateParserTest.testLang538":245,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":64,"org.apache.commons.lang3.time.FastDateParserTest.testLang303":244,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":88,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":235,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_AD":241,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":44,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":129,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":119,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyBooleanObject":196,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":147,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":70,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":106,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":77,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":28,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_AD":250,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_Boolean":270,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_char":194,"org.apache.commons.lang3.text.StrBuilderTest.testEqualsIgnoreCase":258,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":41,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_BC":242,"org.apache.commons.lang3.ArrayUtilsTest.testSameLengthInt":1,"org.apache.commons.lang3.time.FastDateParserTest.testDayOf":237,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":7,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseNumerics":220,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":87,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":72,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang538":222,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":102,"org.apache.commons.lang3.ArrayUtilsTest.testCloneLong":201,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":12,"org.apache.commons.lang3.StringUtilsTest.testGetLevenshteinDistance_StringNull":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":82,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":23,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseZone":215,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":105,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":124,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":96,"org.apache.commons.lang3.RangeTest.testContainsRange":158,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testEnforceExceptions":203,"org.apache.commons.lang3.BitFieldTest.testClearShort":181,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":139,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testOrdinalIndexOf":161,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":75,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsArrayGenericTypes":174,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_int":5,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang303":221,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":26,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":160,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":24,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayToObjectArray":197,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":46,"org.apache.commons.lang3.StringUtilsTest.testSplitByCharacterTypeCamelCase":205,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":31,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":83,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceAll_String_String":262,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":144,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":112,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfBooleanWithStartIndex":207,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanDefaultIfNull_Boolean_boolean":176,"org.apache.commons.lang3.time.DateUtilsTest.testSetHours":271,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":68,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_byte":190,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyBooleanObjectEmptyArray":195,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":66,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":107,"org.apache.commons.lang3.math.NumberUtilsTest.testMinInt":187,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":90,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":65,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":249,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":15,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":146,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":16,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_BC":228,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":71,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":135,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":115,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":73,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testArrayList":131,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_BC":248,"org.apache.commons.lang3.builder.CompareToBuilderTest.testByteArray":179,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":85,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":32,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":35,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":212,"org.apache.commons.lang3.text.StrBuilderTest.testAsReader":189,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":74,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":30,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_AD":227,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_String":191,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":145,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":108,"org.apache.commons.lang3.mutable.MutableLongTest.testAddValueObject":171,"org.apache.commons.lang3.StringUtilsTest.testCenter_StringIntString":259,"org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayCharSeparator":209,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testCopyOnWriteArrayList":132,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":94,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":59,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":136,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementByteArray":267,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":11,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":19,"org.apache.commons.lang3.ArrayUtilsTest.testToString":157,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":60,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiByteArray":180,"org.apache.commons.lang3.EnumUtilsTest.test_processBitVector":200,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_BC":251,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":142,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":40,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":114,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOf_String":0,"org.apache.commons.lang3.math.FractionTest.testAdd":261,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testAmPm":216,"org.apache.commons.lang3.ArrayUtilsTest.testIsNotEmptyPrimitives":275,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":111,"org.apache.commons.lang3.AnnotationUtilsTest.testHashCode":177,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":122,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_char_int":192,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":51,"org.apache.commons.lang3.math.NumberUtilsTest.testMinInt_emptyArray":186,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_AD":247,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":140,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":63,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":36,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":110,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":99,"org.apache.commons.lang3.text.StrTokenizerTest.test8":155,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_String_int":193,"org.apache.commons.lang3.text.StrTokenizerTest.test5":152,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLowYearPadding":217,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLANG_832":223,"org.apache.commons.lang3.text.StrTokenizerTest.test4":151,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_AD":224,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":100,"org.apache.commons.lang3.text.StrTokenizerTest.test7":154,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":101,"org.apache.commons.lang3.text.StrTokenizerTest.test6":153,"org.apache.commons.lang3.text.StrTokenizerTest.test1":148,"org.apache.commons.lang3.text.StrTokenizerTest.test3":150,"org.apache.commons.lang3.text.StrTokenizerTest.test2":149,"org.apache.commons.lang3.ClassUtilsTest.testGetClassInvalidArguments":256,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":76,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testLinkedList":133,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":49,"org.apache.commons.lang3.StringUtilsIsTest.testIsWhitespace":175,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":22,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsert":266,"org.apache.commons.lang3.StringUtilsTest.testCaseFunctions":184,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":233,"org.apache.commons.lang3.time.FastDateParserTest.testAmPm":239,"org.apache.commons.lang3.event.EventUtilsTest.testBindFilteredEventsToMethod":167,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":54,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListenerWithNoAddMethod":163,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_BC":225,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":62,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_BC":219,"org.apache.commons.lang3.time.FastDateParserTest.testQuotes":255,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":104,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsArrayTypeClasses":173,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":137,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":34,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":29,"org.apache.commons.lang3.time.DateUtilsTest.testAddMinutes":159,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":118,"org.apache.commons.lang3.time.FastDateParserTest.testParses":254,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":89,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":257,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":126,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testSpecialCharacters":211,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":79,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParses":231,"org.apache.commons.lang3.reflect.TypeUtilsTest.testTypesSatisfyVariables":8,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit":172,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfBoolean":206,"org.apache.commons.lang3.builder.EqualsBuilderTest.testLongArray":268,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":13,"org.apache.commons.lang3.BitFieldTest.testSetShortBoolean":182,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":127,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":14,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":81,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":156,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testDayOf":214,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_PrimitiveNumber":274,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testMilleniumBug":213,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":58,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_Integer_Integer_Integer":185,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsertWithNullText":265,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":78,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayLong":272,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testQuotes":232,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":128,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":141},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:339","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"c0b2e54e-3e3f-11e6-90f5-176dd1e16175","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:328","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setFieldNameValueSeparator(final java.lang.String fieldNameValueSeparator) {\n    if (fieldNameValueSeparator == null) {\n        {\n            super.setFieldNameValueSeparator(fieldNameValueSeparator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldNameValueSeparator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:1009","type":"CtBinaryOperatorImpl","sourcecode":"toString != null"},"failures":[0],"tindex":"c0b4e11f-3e3f-11e6-90f5-f5f70dce6ddd","method":{"position":"org.apache.commons.lang3.StringUtils:1221","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final java.lang.CharSequence seq, final java.lang.CharSequence searchSeq) {\n    if (seq != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((seq == null) || (searchSeq == null)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            return org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(seq, searchSeq, seq.length());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toString":"seq"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3138","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[1],"tindex":"c0b50830-3e3f-11e6-90f5-63edb44b7196","method":{"position":"org.apache.commons.lang3.ArrayUtils:1263","type":"CtMethodImpl","sourcecode":"public static boolean isSameLength(final int[] array1, final int[] array2) {\n    if (array2 == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array1 == null) {\n                {\n                    if (((((array1 == null) && (array2 != null)) && ((array2.int) > 0)) || (((array2 == null) && (array1 != null)) && ((array1.int) > 0))) || (((array1 != null) && (array2 != null)) && ((array1.int) != (array2.int)))) {\n                        return false;\n                    } \n                    return true;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array1"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3088","type":"CtBinaryOperatorImpl","sourcecode":"separatorChars == null"},"failures":[2,3],"tindex":"c0b50831-3e3f-11e6-90f5-97d064fce945","method":{"position":"org.apache.commons.lang3.StringUtils:6740","type":"CtMethodImpl","sourcecode":"public static int getLevenshteinDistance(java.lang.CharSequence s, java.lang.CharSequence t) {\n    if (t == null) {\n        {\n            if ((s == null) || (t == null)) {\n                throw new java.lang.IllegalArgumentException(\"Strings must not be null\");\n            } \n            int int = s.length();\n            int int = t.length();\n            if (n == 0) {\n                return m;\n            } else if (m == 0) {\n                return n;\n            } \n            if (n > m) {\n                final java.lang.CharSequence java.lang.CharSequence = s;\n                s = t;\n                t = tmp;\n                n = m;\n                m = t.length();\n            } \n            int[] int[] = new int[n + 1];\n            int[] int[] = new int[n + 1];\n            int[] int[];\n            int int;\n            int int;\n            char char;\n            int int;\n            for (i = 0 ; i <= n ; i++) {\n                p[i] = i;\n            }\n            for (j = 1 ; j <= m ; j++) {\n                t_j = t.charAt((j - 1));\n                d[0] = j;\n                for (i = 1 ; i <= n ; i++) {\n                    cost = (s.charAt((i - 1))) == t_j ? 0 : 1;\n                    d[i] = java.lang.Math.min(java.lang.Math.min(((d[(i - 1)]) + 1), ((p[i]) + 1)), ((p[(i - 1)]) + cost));\n                }\n                _d = p;\n                p = d;\n                d = _d;\n            }\n            return p[n];\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"separatorChars":"t"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5080","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[4],"tindex":"c0b5a472-3e3f-11e6-90f5-1df6132319fc","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:483","type":"CtMethodImpl","sourcecode":"public static final java.lang.String escapeEcmaScript(final java.lang.String input) {\n    if (input == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"input"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3094","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[5],"tindex":"c0b5a473-3e3f-11e6-90f5-0d5acc1ff52a","method":{"position":"org.apache.commons.lang3.ArrayUtils:3093","type":"CtMethodImpl","sourcecode":"public static int[] toPrimitive(final java.lang.Integer[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int[];\n            } \n            final int[] int[] = new int[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = array[i].intValue();\n            }\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:398","type":"CtBinaryOperatorImpl","sourcecode":"classNames == null"},"failures":[6],"tindex":"c0b5cb84-3e3f-11e6-90f5-1d3b45cc92b0","method":{"position":"org.apache.commons.lang3.ClassUtils:397","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.lang.Class<?>> convertClassNamesToClasses(final java.util.List<java.lang.String> classNames) {\n    if (classNames == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (classNames == null) {\n                return null;\n            } \n            final java.util.List<java.lang.Class<?>> java.util.List<java.lang.Class<?>> = new java.util.ArrayList<java.lang.Class<?>>(classNames.size());\n            for (final java.lang.String java.lang.String : classNames) {\n                try {\n                    classes.add(java.lang.Class.forName(className));\n                } catch (final java.lang.Exception ex) {\n                    classes.add(null);\n                }\n            }\n            return classes;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classNames":"classNames"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:520","type":"CtBinaryOperatorImpl","sourcecode":"toGenericArrayType == null"},"failures":[],"tindex":"c0b5f295-3e3f-11e6-90f5-31133be616b1","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1825","type":"CtMethodImpl","sourcecode":"private static java.lang.String genericArrayTypeToString(java.lang.reflect.GenericArrayType g) {\n    if (g == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.String.format(\"%s[]\", org.apache.commons.lang3.reflect.TypeUtils.toString(g.getGenericComponentType()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toGenericArrayType":"g"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3088","type":"CtBinaryOperatorImpl","sourcecode":"separatorChars == null"},"failures":[],"tindex":"c0b5f296-3e3f-11e6-90f5-c9781a1117f8","method":{"position":"org.apache.commons.lang3.StringUtils:4457","type":"CtMethodImpl","sourcecode":"public static java.lang.String removePattern(final java.lang.String source, final java.lang.String regex) {\n    if (regex == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.replacePattern(source, regex, org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"separatorChars":"regex"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:261","type":"CtBinaryOperatorImpl","sourcecode":"countryCode == null"},"failures":[],"tindex":"c0b619a7-3e3f-11e6-90f5-0b5448fdf097","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:228","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setArrayEnd(final java.lang.String arrayEnd) {\n    if (arrayEnd == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            super.setArrayEnd(arrayEnd);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"countryCode":"arrayEnd"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:596","type":"CtBinaryOperatorImpl","sourcecode":"toWildcardType == null"},"failures":[7,8],"tindex":"c0b619a8-3e3f-11e6-90f5-cf9546fab661","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1194","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Type[] getImplicitLowerBounds(final java.lang.reflect.WildcardType wildcardType) {\n    if (wildcardType == null) {\n        {\n            org.apache.commons.lang3.Validate.notNull(wildcardType, \"wildcardType is null\");\n            final java.lang.reflect.Type[] java.lang.reflect.Type[] = wildcardType.getLowerBounds();\n            return (bounds.int) == 0 ? new java.lang.reflect.Type[]{ null } : bounds;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toWildcardType":"wildcardType"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:631","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,57,58,58,59,59,60,61,61,62,62,63,63,64,64,65,65,66,66,67,67,68,68,69,69,70,70,71,71,72,72,73,73,74,75,76,77,77,78,78,79,80,80,81,81,82,82,83,84,84,85,85,86,86,87,88,89,89,90,90,91,91,92,93,94,95,95,96,96,97,98,99,100,101,102,103,103,104,105,105,106,106,107,107,108,108,109,109,110,111,112,112,113,113,114,115,116,116,117,117,118,118,119,120,120,121,121,122,122,123,123,124,125,126,127,127,128,128,129,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157],"tindex":"c0b640b9-3e3f-11e6-90f5-030db2507187","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1534","type":"CtMethodImpl","sourcecode":"protected void appendFieldEnd(final java.lang.StringBuffer buffer, final java.lang.String fieldName) {\n    if (buffer == null) {\n        {\n            appendFieldSeparator(buffer);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"buffer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:360","type":"CtBinaryOperatorImpl","sourcecode":"locale == null"},"failures":[],"tindex":"c0b68eda-3e3f-11e6-90f5-09671e7967ff","method":{"position":"org.apache.commons.lang3.LocaleUtils:246","type":"CtMethodImpl","sourcecode":"public static boolean isAvailableLocale(final java.util.Locale locale) {\n    if (locale == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.LocaleUtils.availableLocaleList().contains(locale);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"locale":"locale"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2077","type":"CtBinaryOperatorImpl","sourcecode":"len == 0"},"failures":[],"tindex":"c0b6b5eb-3e3f-11e6-90f5-271ac4abe4bd","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:990","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic final void appendTo(final java.lang.StringBuffer buffer, final int value) {\n    if (value == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(((char)((value / 10) + '0')));\n            buffer.append(((char)((value % 10) + '0')));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Range:315","type":"CtBinaryOperatorImpl","sourcecode":"otherRange == null"},"failures":[158],"tindex":"c0b6b5ec-3e3f-11e6-90f5-49781b61a647","method":{"position":"org.apache.commons.lang3.Range:314","type":"CtMethodImpl","sourcecode":"public boolean containsRange(final org.apache.commons.lang3.Range<T> otherRange) {\n    if (otherRange == null) {\n        {\n            if (otherRange == null) {\n                return false;\n            } \n            return (contains(otherRange.T)) && (contains(otherRange.T));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"otherRange":"otherRange"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:808","type":"CtBinaryOperatorImpl","sourcecode":"(comparison) != 0"},"failures":[159],"tindex":"c0b6b5ed-3e3f-11e6-90f5-53b40d126b0f","method":{"position":"org.apache.commons.lang3.time.DateUtils:474","type":"CtMethodImpl","sourcecode":"public static java.util.Date addMinutes(final java.util.Date date, final int amount) {\n    if (amount != 0) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.add(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparison":"amount"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:768","type":"CtBinaryOperatorImpl","sourcecode":"(comparison) != 0"},"failures":[160],"tindex":"c0b6dcfe-3e3f-11e6-90f5-15675ebefe89","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2821","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nprotected java.util.List<java.lang.String> tokenize(final char[] chars, final int offset, final int count) {\n    if (count != 0) {\n        {\n            if (chars == null) {\n                return super.tokenize(org.apache.commons.lang3.text.StrBuilder.this.char[], 0, org.apache.commons.lang3.text.StrBuilder.this.size());\n            } \n            return super.tokenize(chars, offset, count);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparison":"count"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:732","type":"CtInvocationImpl","sourcecode":"str.startsWith(\"-\")"},"failures":[],"tindex":"c0b6dcff-3e3f-11e6-90f5-6d4ae86b60ef","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1195","type":"CtMethodImpl","sourcecode":"protected void appendSummary(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final byte[] array) {\n    if (fieldName.startsWith(\"-\")) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendSummarySize(buffer, fieldName, array.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:7035","type":"CtBinaryOperatorImpl","sourcecode":"(first.length()) > (second.length())"},"failures":[],"tindex":"c0b6dd00-3e3f-11e6-90f5-ad0e364a7839","method":{"position":"org.apache.commons.lang3.tuple.Pair:130","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"deprecation\")\n@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj.length()) > (obj.length())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.lang3.tuple.Pair.this)) {\n                return true;\n            } \n            if (obj instanceof java.util.Map.Entry<?, ?>) {\n                final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(obj));\n                return (org.apache.commons.lang3.ObjectUtils.equals(getKey(), other.getKey())) && (org.apache.commons.lang3.ObjectUtils.equals(getValue(), other.getValue()));\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"first":"obj","second":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1378","type":"CtBinaryOperatorImpl","sourcecode":"startPos < 0"},"failures":[161],"tindex":"c0b70411-3e3f-11e6-90f5-d9606cdc013d","method":{"position":"org.apache.commons.lang3.StringUtils:1007","type":"CtMethodImpl","sourcecode":"public static int ordinalIndexOf(final java.lang.CharSequence str, final java.lang.CharSequence searchStr, final int ordinal) {\n    if (ordinal < 0) {\n        {\n            return org.apache.commons.lang3.StringUtils.ordinalIndexOf(str, searchStr, ordinal, false);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startPos":"ordinal"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2177","type":"CtBinaryOperatorImpl","sourcecode":"len < 0"},"failures":[14,21,28,48,55,57,58,59,59,60,61,62,63,64,65,66,67,68,69,70,71,72,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,139],"tindex":"c0b70412-3e3f-11e6-90f5-873b9207572c","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:755","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final int value) {\n    if (value < 0) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, value);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1766","type":"CtBinaryOperatorImpl","sourcecode":"arrayEnd == null"},"failures":[162,163,164,165,166,167,168],"tindex":"c0b72b23-3e3f-11e6-90f5-1bf548854fcc","method":{"position":"org.apache.commons.lang3.reflect.MethodUtils:119","type":"CtMethodImpl","sourcecode":"public static java.lang.Object invokeMethod(final java.lang.Object object, final java.lang.String methodName, java.lang.Object[] args, java.lang.Class<?>[] parameterTypes) throws java.lang.IllegalAccessException, java.lang.NoSuchMethodException, java.lang.reflect.InvocationTargetException {\n    if (methodName == null) {\n        {\n            parameterTypes = org.apache.commons.lang3.ArrayUtils.nullToEmpty(parameterTypes);\n            args = org.apache.commons.lang3.ArrayUtils.nullToEmpty(args);\n            final java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.getMatchingAccessibleMethod(object.getClass(), methodName, parameterTypes);\n            if (method == null) {\n                throw new java.lang.NoSuchMethodException((((\"No such accessible method: \" + methodName) + \"() on object: \") + (object.getClass().getName())));\n            } \n            return method.invoke(object, args);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"arrayEnd":"methodName"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:626","type":"CtInvocationImpl","sourcecode":"stripChars.isEmpty()"},"failures":[],"tindex":"c0b72b24-3e3f-11e6-90f5-4d09b5cbc808","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:539","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final boolean[] array) {\n    if (fieldName.isEmpty()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, array, null);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"stripChars":"fieldName"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3138","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[169,170],"tindex":"c0b72b25-3e3f-11e6-90f5-737692dd94cc","method":{"position":"org.apache.commons.lang3.ArrayUtils:3520","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final int[] array) {\n    if (array == null) {\n        {\n            return (array == null) || ((array.int) == 0);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:297","type":"CtInvocationImpl","sourcecode":"value.equals(trueValue)"},"failures":[171],"tindex":"c0b75236-3e3f-11e6-90f5-f1fb2a04aca5","method":{"position":"org.apache.commons.lang3.mutable.MutableLong:148","type":"CtMethodImpl","sourcecode":"public void add(final java.lang.Number operand) {\n    if (operand.equals(operand)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.mutable.MutableLong.this.long += operand.longValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trueValue":"operand","value":"operand"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:339","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"c0b75237-3e3f-11e6-90f5-3354d81f49fd","method":{"position":"org.apache.commons.lang3.Validate:848","type":"CtMethodImpl","sourcecode":"public static void matchesPattern(final java.lang.CharSequence input, final java.lang.String pattern) {\n    if (input == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((java.util.regex.Pattern.matches(pattern, input)) == false) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.java.lang.String, input, pattern));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"input"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:978","type":"CtBinaryOperatorImpl","sourcecode":"rhs == null"},"failures":[172],"tindex":"c0b75238-3e3f-11e6-90f5-916b81c28938","method":{"position":"org.apache.commons.lang3.Conversion:283","type":"CtMethodImpl","sourcecode":"public static char binaryToHexDigit(final boolean[] src) {\n    if (src == null) {\n        {\n            return org.apache.commons.lang3.Conversion.binaryToHexDigit(src, 0);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"rhs":"src"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1578","type":"CtBinaryOperatorImpl","sourcecode":"t1 instanceof java.lang.reflect.GenericArrayType"},"failures":[173,174],"tindex":"c0b88ab9-3e3f-11e6-90f5-b788e24d1bf4","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1335","type":"CtMethodImpl","sourcecode":"public static boolean isArrayType(final java.lang.reflect.Type type) {\n    if (type instanceof java.lang.reflect.GenericArrayType) {\n        {\n            return (type instanceof java.lang.reflect.GenericArrayType) || ((type instanceof java.lang.Class<?>) && (((java.lang.Class<?>)(type)).isArray()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"t1":"type"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:418","type":"CtBinaryOperatorImpl","sourcecode":"startIndex > endIndex"},"failures":[],"tindex":"c0b8b1ca-3e3f-11e6-90f5-f388731bb176","method":{"position":"org.apache.commons.lang3.ArrayUtils:5132","type":"CtMethodImpl","sourcecode":"public static short[] remove(final short[] array, final int index) {\n    if (index > index) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((short[])(org.apache.commons.lang3.ArrayUtils.remove(((java.lang.Object)(array)), index)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndex":"index","endIndex":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1928","type":"CtBinaryOperatorImpl","sourcecode":"(cs == null) || (invalidChars == null)"},"failures":[175],"tindex":"c0b8b1cb-3e3f-11e6-90f5-15152111a129","method":{"position":"org.apache.commons.lang3.StringUtils:6103","type":"CtMethodImpl","sourcecode":"public static boolean isWhitespace(final java.lang.CharSequence cs) {\n    if ((cs == null) || (cs == null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (cs == null) {\n                return false;\n            } \n            final int int = cs.length();\n            for (int int = 0 ; i < sz ; i++) {\n                if ((java.lang.Character.isWhitespace(cs.charAt(i))) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cs":"cs","invalidChars":"cs"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4253","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.startsWithIgnoreCase(str, remove)"},"failures":[],"tindex":"c0b8b1cc-3e3f-11e6-90f5-7d578e3fe2d3","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:722","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final float[] array) {\n    if (org.apache.commons.lang3.StringUtils.startsWithIgnoreCase(fieldName, fieldName)) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, array, null);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName","remove":"fieldName"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4900","type":"CtVariableReadImpl","sourcecode":"modified"},"failures":[176],"tindex":"c0b8d8dd-3e3f-11e6-90f5-2d40de04d26f","method":{"position":"org.apache.commons.lang3.BooleanUtils:175","type":"CtMethodImpl","sourcecode":"public static boolean toBooleanDefaultIfNull(final java.lang.Boolean bool, final boolean valueIfNull) {\n    if (valueIfNull) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (bool == null) {\n                return valueIfNull;\n            } \n            return bool.booleanValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"modified":"valueIfNull"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:738","type":"CtBinaryOperatorImpl","sourcecode":"rhs == null"},"failures":[],"tindex":"c0b8d8de-3e3f-11e6-90f5-1dbceeae14d1","method":{"position":"org.apache.commons.lang3.ArrayUtils:1263","type":"CtMethodImpl","sourcecode":"public static boolean isSameLength(final int[] array1, final int[] array2) {\n    if (array2 == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array1 == null) {\n                {\n                    if (((((array1 == null) && (array2 != null)) && ((array2.int) > 0)) || (((array2 == null) && (array1 != null)) && ((array1.int) > 0))) || (((array1 != null) && (array2 != null)) && ((array1.int) != (array2.int)))) {\n                        return false;\n                    } \n                    return true;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"rhs":"array2"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2210","type":"CtBinaryOperatorImpl","sourcecode":"len < 0"},"failures":[],"tindex":"c0b8d8df-3e3f-11e6-90f5-934ed479ea1d","method":{"position":"org.apache.commons.lang3.BitField:215","type":"CtMethodImpl","sourcecode":"public int set(final int holder) {\n    if (holder < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return holder | (int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"len":"holder"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.AnnotationUtils:123","type":"CtBinaryOperatorImpl","sourcecode":"a1 == a2"},"failures":[177],"tindex":"c0b8fff0-3e3f-11e6-90f5-733626c792a5","method":{"position":"org.apache.commons.lang3.AnnotationUtils:167","type":"CtMethodImpl","sourcecode":"public static int hashCode(final java.lang.annotation.Annotation a) {\n    if (a == a) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = 0;\n            final java.lang.Class<? extends java.lang.annotation.Annotation> java.lang.Class<? extends java.lang.annotation.Annotation> = a.annotationType();\n            for (final java.lang.reflect.Method java.lang.reflect.Method : type.getDeclaredMethods()) {\n                try {\n                    final java.lang.Object java.lang.Object = m.invoke(a);\n                    if (value == null) {\n                        throw new java.lang.IllegalStateException(java.lang.String.format(\"Annotation method %s returned null\", m));\n                    } \n                    result += org.apache.commons.lang3.AnnotationUtils.hashMember(m.getName(), value);\n                } catch (final java.lang.RuntimeException ex) {\n                    throw ex;\n                } catch (final java.lang.Exception ex) {\n                    throw new java.lang.RuntimeException(ex);\n                }\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a1":"a","a2":"a"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6853","type":"CtBinaryOperatorImpl","sourcecode":"threshold < 0"},"failures":[],"tindex":"c0b8fff1-3e3f-11e6-90f5-db9bf6fffdbb","method":{"position":"org.apache.commons.lang3.RandomStringUtils:110","type":"CtMethodImpl","sourcecode":"public static java.lang.String randomAlphanumeric(final int count) {\n    if (count < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.RandomStringUtils.random(count, true, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"threshold":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDatePrinter:305","type":"CtBinaryOperatorImpl","sourcecode":"((c >= 'A') && (c <= 'Z')) || ((c >= 'a') && (c <= 'z'))"},"failures":[],"tindex":"c0b8fff2-3e3f-11e6-90f5-ad1a79b5c9ed","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:874","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrTokenizer setDelimiterChar(final char delim) {\n    if (((delim >= 'A') && (c <= 'Z')) || ((c >= 'a') && (c <= 'z'))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return setDelimiterMatcher(org.apache.commons.lang3.text.StrMatcher.charMatcher(delim));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"delim"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1506","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[178,179,180],"tindex":"c0b92703-3e3f-11e6-90f5-47227b8cc0a1","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:847","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final byte[] lhs, final byte[] rhs) {\n    if (rhs == null) {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == null) {\n                int = -1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (rhs == null) {\n                int = +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                int = (lhs.int) < (rhs.int) ? -1 : +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && ((int) == 0) ; i++) {\n                append(lhs[i], rhs[i]);\n            }\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"rhs"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5464","type":"CtBinaryOperatorImpl","sourcecode":"found < 0"},"failures":[],"tindex":"c0b94e14-3e3f-11e6-90f5-25b9215fcc26","method":{"position":"org.apache.commons.lang3.Conversion:604","type":"CtMethodImpl","sourcecode":"public static char intToHexDigit(final int nibble) {\n    if (nibble < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final char char = java.lang.Character.forDigit(nibble, 16);\n            if (c == (java.lang.Character.java.lang.Character.char)) {\n                throw new java.lang.IllegalArgumentException((\"nibble value not between 0 and 15: \" + nibble));\n            } \n            return c;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"found":"nibble"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1244","type":"CtBinaryOperatorImpl","sourcecode":"c > a"},"failures":[181,182],"tindex":"c0b94e15-3e3f-11e6-90f5-cb4810688f12","method":{"position":"org.apache.commons.lang3.BitField:190","type":"CtMethodImpl","sourcecode":"public short clearShort(final short holder) {\n    if (holder > holder) {\n        {\n            return ((short)(clear(holder)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"holder","c":"holder"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:137","type":"CtInvocationImpl","sourcecode":"java.lang.Float.isNaN(a)"},"failures":[183],"tindex":"c0b97526-3e3f-11e6-90f5-d145578776ed","method":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:241","type":"CtMethodImpl","sourcecode":"public static float max(final float a, final float b, final float c) {\n    if (java.lang.Float.isNaN(b)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.math.IEEE754rUtils.max(org.apache.commons.lang3.math.IEEE754rUtils.max(a, b), c);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"b"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:717","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[184],"tindex":"c0b97527-3e3f-11e6-90f5-2d640d846b93","method":{"position":"org.apache.commons.lang3.StringUtils:5610","type":"CtMethodImpl","sourcecode":"public static java.lang.String upperCase(final java.lang.String str, final java.util.Locale locale) {\n    if (str == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return null;\n            } \n            return str.toUpperCase(locale);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"str"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:507","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"c0b97528-3e3f-11e6-90f5-2101ace63469","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:253","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setArraySeparator(final java.lang.String arraySeparator) {\n    if (arraySeparator == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            super.setArraySeparator(arraySeparator);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"arraySeparator"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:291","type":"CtBinaryOperatorImpl","sourcecode":"trueValue == null"},"failures":[185],"tindex":"c0b97529-3e3f-11e6-90f5-3f2d561af4fe","method":{"position":"org.apache.commons.lang3.BooleanUtils:289","type":"CtMethodImpl","sourcecode":"public static boolean toBoolean(final java.lang.Integer value, final java.lang.Integer trueValue, final java.lang.Integer falseValue) {\n    if (trueValue == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                if (trueValue == null) {\n                    return true;\n                } \n                if (falseValue == null) {\n                    return false;\n                } \n            } else if (value.equals(trueValue)) {\n                return true;\n            } else if (value.equals(falseValue)) {\n                return false;\n            } \n            throw new java.lang.IllegalArgumentException(\"The Integer did not match either specified value\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trueValue":"trueValue"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:738","type":"CtBinaryOperatorImpl","sourcecode":"rhs == null"},"failures":[186,187],"tindex":"c0b99c3a-3e3f-11e6-90f5-bbbbdc36aab3","method":{"position":"org.apache.commons.lang3.math.NumberUtils:811","type":"CtMethodImpl","sourcecode":"public static int min(final int[] array) {\n    if (array == null) {\n        {\n            org.apache.commons.lang3.math.NumberUtils.validateArray(array);\n            int int = array[0];\n            for (int int = 1 ; j < (array.int) ; j++) {\n                if ((array[j]) < min) {\n                    min = array[j];\n                } \n            }\n            return min;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"rhs":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSet:174","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[188],"tindex":"c0b99c3b-3e3f-11e6-90f5-e144825a239d","method":{"position":"org.apache.commons.lang3.StringUtils:1109","type":"CtMethodImpl","sourcecode":"public static int indexOfIgnoreCase(final java.lang.CharSequence str, final java.lang.CharSequence searchStr, int startPos) {\n    if (searchStr == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((str == null) || (searchStr == null)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            if (startPos < 0) {\n                startPos = 0;\n            } \n            final int int = ((str.length()) - (searchStr.length())) + 1;\n            if (startPos > endLimit) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            if ((searchStr.length()) == 0) {\n                return startPos;\n            } \n            for (int int = startPos ; i < endLimit ; i++) {\n                if (org.apache.commons.lang3.CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, searchStr.length())) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"searchStr"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:894","type":"CtBinaryOperatorImpl","sourcecode":"first == second"},"failures":[189],"tindex":"c0b99c3c-3e3f-11e6-90f5-db4b941cbae9","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2894","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic long skip(long n) {\n    if (n == n) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((int) + n) > (org.apache.commons.lang3.text.StrBuilder.this.size())) {\n                n = (org.apache.commons.lang3.text.StrBuilder.this.size()) - (int);\n            } \n            if (n < 0) {\n                return 0;\n            } \n            int += n;\n            return n;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"first":"n","second":"n"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3252","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[190],"tindex":"c0b9c34d-3e3f-11e6-90f5-cde0d05b175d","method":{"position":"org.apache.commons.lang3.ArrayUtils:3229","type":"CtMethodImpl","sourcecode":"public static byte[] toPrimitive(final java.lang.Byte[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.byte[];\n            } \n            final byte[] byte[] = new byte[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = array[i].byteValue();\n            }\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:837","type":"CtBinaryOperatorImpl","sourcecode":"(((nBytes - 1) * 8) + dstPos) >= 32"},"failures":[191,192,193,194],"tindex":"c0b9c34e-3e3f-11e6-90f5-d502b9917ba0","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2424","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final char ch, int startIndex) {\n    if ((((startIndex - 1) * 8) + startIndex) >= 32) {\n        {\n            startIndex = startIndex >= (int) ? (int) - 1 : startIndex;\n            if (startIndex < 0) {\n                return -1;\n            } \n            for (int int = startIndex ; i >= 0 ; i--) {\n                if ((char[][i]) == ch) {\n                    return i;\n                } \n            }\n            return -1;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dstPos":"startIndex","nBytes":"startIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:940","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[195,196],"tindex":"c0b9c34f-3e3f-11e6-90f5-f3eac8b8c623","method":{"position":"org.apache.commons.lang3.ArrayUtils:832","type":"CtMethodImpl","sourcecode":"public static java.lang.Boolean[] nullToEmpty(final java.lang.Boolean[] array) {\n    if (array == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                {\n                    if ((array == null) || ((array.int) == 0)) {\n                        return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Boolean[];\n                    } \n                    return array;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:240","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.CharUtils.isAsciiNumeric(ch)) == false"},"failures":[],"tindex":"c0b9ea60-3e3f-11e6-90f5-2717cf63e4f5","method":{"position":"org.apache.commons.lang3.StringUtils:4126","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final java.lang.Iterable<?> iterable, final char separator) {\n    if ((org.apache.commons.lang3.CharUtils.isAsciiNumeric(separator)) == false) {\n        {\n            if (iterable == null) {\n                return null;\n            } \n            return org.apache.commons.lang3.StringUtils.join(iterable.iterator(), separator);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"separator"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:202","type":"CtBinaryOperatorImpl","sourcecode":"(tmp.length()) != (duration.length())"},"failures":[],"tindex":"c0b9ea61-3e3f-11e6-90f5-a1286edb61c6","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:583","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void set(final java.lang.String obj) {\n    if ((obj.length()) != (obj.length())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.UnsupportedOperationException(\"set() is unsupported\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"duration":"obj","tmp":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:682","type":"CtUnaryOperatorImpl","sourcecode":"!(java.util.Arrays.equals(lhs, rhs))"},"failures":[197,198,199,200,201,202],"tindex":"c0b9ea62-3e3f-11e6-90f5-fdb34980a401","method":{"position":"org.apache.commons.lang3.ArrayUtils:338","type":"CtMethodImpl","sourcecode":"public static long[] clone(final long[] array) {\n    if (!(java.util.Arrays.equals(array, array))) {\n        {\n            if (array == null) {\n                return null;\n            } \n            return array.clone();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array","rhs":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1123","type":"CtBinaryOperatorImpl","sourcecode":"focus == null"},"failures":[],"tindex":"c0ba1173-3e3f-11e6-90f5-c3a2036317ba","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:461","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.StringBuffer format(final java.util.Date date, final java.lang.StringBuffer buf) {\n    if (date == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.FastDatePrinter.format(date, buf);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"focus":"date"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3410","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[203],"tindex":"c0ba1174-3e3f-11e6-90f5-e51295535e6f","method":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:180","type":"CtMethodImpl","sourcecode":"public static float max(final float[] array) {\n    if (array == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n            } else if ((array.int) == 0) {\n                throw new java.lang.IllegalArgumentException(\"Array cannot be empty.\");\n            } \n            float float = array[0];\n            for (int int = 1 ; j < (array.int) ; j++) {\n                max = org.apache.commons.lang3.math.IEEE754rUtils.max(array[j], max);\n            }\n            return max;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:414","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[204,205],"tindex":"c0ba1175-3e3f-11e6-90f5-7f51ab862822","method":{"position":"org.apache.commons.lang3.StringUtils:3221","type":"CtMethodImpl","sourcecode":"private static java.lang.String[] splitByCharacterType(final java.lang.String str, final boolean camelCase) {\n    if (str == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return null;\n            } \n            if (str.isEmpty()) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.String[];\n            } \n            final char[] char[] = str.toCharArray();\n            final java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n            int int = 0;\n            int int = java.lang.Character.getType(c[tokenStart]);\n            for (int int = tokenStart + 1 ; pos < (c.int) ; pos++) {\n                final int int = java.lang.Character.getType(c[pos]);\n                if (type == currentType) {\n                    continue;\n                } \n                if ((camelCase && (type == (java.lang.Character.java.lang.Character.byte))) && (currentType == (java.lang.Character.java.lang.Character.byte))) {\n                    final int int = pos - 1;\n                    if (newTokenStart != tokenStart) {\n                        list.add(new java.lang.String(c , tokenStart , (newTokenStart - tokenStart)));\n                        tokenStart = newTokenStart;\n                    } \n                } else {\n                    list.add(new java.lang.String(c , tokenStart , (pos - tokenStart)));\n                    tokenStart = pos;\n                }\n                currentType = type;\n            }\n            list.add(new java.lang.String(c , tokenStart , ((c.int) - tokenStart)));\n            return list.toArray(new java.lang.String[list.size()]);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"str"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:203","type":"CtBinaryOperatorImpl","sourcecode":"length < (size)"},"failures":[206,207],"tindex":"c0ba3886-3e3f-11e6-90f5-451932272933","method":{"position":"org.apache.commons.lang3.ArrayUtils:2913","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final boolean[] array, final boolean valueToFind, int startIndex) {\n    if (startIndex < startIndex) {\n        {\n            if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } else if (startIndex >= (array.int)) {\n                startIndex = (array.int) - 1;\n            } \n            for (int int = startIndex ; i >= 0 ; i--) {\n                if (valueToFind == (array[i])) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"startIndex","length":"startIndex"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5731","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isLowerCase(firstChar)"},"failures":[208,209],"tindex":"c0ba3887-3e3f-11e6-90f5-13482d947de2","method":{"position":"org.apache.commons.lang3.StringUtils:3303","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final java.lang.Object[] array, final char separator) {\n    if (java.lang.Character.isLowerCase(separator)) {\n        {\n            if (array == null) {\n                return null;\n            } \n            return org.apache.commons.lang3.StringUtils.join(array, separator, 0, array.int);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"firstChar":"separator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:127","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[210],"tindex":"c0ba3888-3e3f-11e6-90f5-fde579af6eb9","method":{"position":"org.apache.commons.lang3.StringUtils:4352","type":"CtMethodImpl","sourcecode":"public static java.lang.String remove(final java.lang.String str, final java.lang.String remove) {\n    if (str == null) {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(remove))) {\n                return str;\n            } \n            return org.apache.commons.lang3.StringUtils.replace(str, remove, org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String, (-1));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.Throwable","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1666","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.WildcardType"},"failures":[],"tindex":"c0ba3889-3e3f-11e6-90f5-8739ebd9f23f","method":{"position":"org.apache.commons.lang3.event.EventUtils:110","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Object invoke(final java.lang.Object proxy, final java.lang.reflect.Method method, final java.lang.Object[] parameters) throws java.lang.Throwable {\n    if (proxy instanceof java.lang.reflect.WildcardType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.Throwable();\n    } else {\n        {\n            if ((java.util.Set<java.lang.String>.isEmpty()) || (java.util.Set<java.lang.String>.contains(method.getName()))) {\n                if (hasMatchingParametersMethod(method)) {\n                    return org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object, java.lang.String, parameters);\n                } else {\n                    return org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object, java.lang.String);\n                }\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"proxy"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:733","type":"CtInvocationImpl","sourcecode":"str.equals(trueString)"},"failures":[211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],"tindex":"c0ba5f9a-3e3f-11e6-90f5-cbe5ff027f28","method":{"position":"org.apache.commons.lang3.time.FastDateParser:675","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nvoid setCalendar(final org.apache.commons.lang3.time.FastDateParser parser, final java.util.Calendar cal, final java.lang.String value) {\n    if (value.equals(value)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            cal.set(int, modify(java.lang.Integer.parseInt(value)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"value","trueString":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:324","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"c0ba5f9b-3e3f-11e6-90f5-a7ffa9a961bb","method":{"position":"org.apache.commons.lang3.ClassUtils:1108","type":"CtMethodImpl","sourcecode":"private static java.lang.String getCanonicalName(java.lang.String className) {\n    if (className == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            className = org.apache.commons.lang3.StringUtils.deleteWhitespace(className);\n            if (className == null) {\n                return null;\n            } else {\n                int int = 0;\n                while (className.startsWith(\"[\")) {\n                    dim++;\n                    className = className.substring(1);\n                }\n                if (dim < 1) {\n                    return className;\n                } else {\n                    if (className.startsWith(\"L\")) {\n                        className = className.substring(1, (className.endsWith(\";\") ? (className.length()) - 1 : className.length()));\n                    } else {\n                        if ((className.length()) > 0) {\n                            className = org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.String, java.lang.String>.get(className.substring(0, 1));\n                        } \n                    }\n                    final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(className);\n                    for (int int = 0 ; i < dim ; i++) {\n                        canonicalClassNameBuffer.append(\"[]\");\n                    }\n                    return canonicalClassNameBuffer.toString();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"className"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1205","type":"CtBinaryOperatorImpl","sourcecode":"newSize <= 0"},"failures":[],"tindex":"c0ba86ac-3e3f-11e6-90f5-1537dfb23cb2","method":{"position":"org.apache.commons.lang3.time.DateUtils:1743","type":"CtMethodImpl","sourcecode":"public static boolean truncatedEquals(final java.util.Date date1, final java.util.Date date2, final int field) {\n    if (field <= 0) {\n        {\n            return (org.apache.commons.lang3.time.DateUtils.truncatedCompareTo(date1, date2, field)) == 0;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"newSize":"field"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.ClassNotFoundException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:297","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[256],"tindex":"c0ba86ad-3e3f-11e6-90f5-49088a198c50","method":{"position":"org.apache.commons.lang3.ClassUtils:820","type":"CtMethodImpl","sourcecode":"public static java.lang.Class<?> getClass(final java.lang.ClassLoader classLoader, final java.lang.String className, final boolean initialize) throws java.lang.ClassNotFoundException {\n    if (className == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.ClassNotFoundException();\n    } else {\n        {\n            try {\n                java.lang.Class<?> java.lang.Class<?>;\n                if (org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.String, java.lang.String>.containsKey(className)) {\n                    final java.lang.String java.lang.String = \"[\" + (org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.String, java.lang.String>.get(className));\n                    clazz = java.lang.Class.forName(clsName, initialize, classLoader).getComponentType();\n                } else {\n                    clazz = java.lang.Class.forName(org.apache.commons.lang3.ClassUtils.toCanonicalName(className), initialize, classLoader);\n                }\n                return clazz;\n            } catch (final java.lang.ClassNotFoundException ex) {\n                final int int = className.lastIndexOf(org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.char);\n                if (lastDotIndex != (-1)) {\n                    try {\n                        return org.apache.commons.lang3.ClassUtils.getClass(classLoader, (((className.substring(0, lastDotIndex)) + (org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.char)) + (className.substring((lastDotIndex + 1)))), initialize);\n                    } catch (final java.lang.ClassNotFoundException ex2) {\n                    }\n                } \n                throw ex;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"className"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:297","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"c0ba86ae-3e3f-11e6-90f5-4564f9383f27","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:526","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final boolean value) {\n    if (fieldName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, value);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2559","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.ArrayUtils.isEmpty(array)"},"failures":[],"tindex":"c0baadbf-3e3f-11e6-90f5-4f057c239c87","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:631","type":"CtMethodImpl","sourcecode":"protected void appendSummary(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final java.lang.Object value) {\n    if (org.apache.commons.lang3.ArrayUtils.isEmpty(value)) {\n        {\n            buffer.append(java.lang.String);\n            buffer.append(getShortClassName(value.getClass()));\n            buffer.append(java.lang.String);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2245","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[50,257,51,52,53,54,55,56],"tindex":"c0baadc0-3e3f-11e6-90f5-693bd0e2dd41","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:554","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setSummaryObjectEndText(final java.lang.String summaryObjectEndText) {\n    if (summaryObjectEndText == null) {\n        {\n            super.setSummaryObjectEndText(summaryObjectEndText);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"summaryObjectEndText"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:694","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[258],"tindex":"c0baadc1-3e3f-11e6-90f5-0970e368cd6f","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2651","type":"CtMethodImpl","sourcecode":"public boolean equalsIgnoreCase(final org.apache.commons.lang3.text.StrBuilder other) {\n    if (other == null) {\n        {\n            if ((org.apache.commons.lang3.text.StrBuilder.this) == other) {\n                return true;\n            } \n            if ((org.apache.commons.lang3.text.StrBuilder.this.int) != (other.int)) {\n                return false;\n            } \n            final char[] char[] = org.apache.commons.lang3.text.StrBuilder.this.char[];\n            final char[] char[] = other.char[];\n            for (int int = (int) - 1 ; i >= 0 ; i--) {\n                final char char = thisBuf[i];\n                final char char = otherBuf[i];\n                if ((c1 != c2) && ((java.lang.Character.toUpperCase(c1)) != (java.lang.Character.toUpperCase(c2)))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"other"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.AnnotationUtils:273","type":"CtInvocationImpl","sourcecode":"type.isAnnotation()"},"failures":[],"tindex":"c0bad4d2-3e3f-11e6-90f5-0717eeeefaa7","method":{"position":"org.apache.commons.lang3.reflect.MemberUtils:167","type":"CtMethodImpl","sourcecode":"private static float getPrimitivePromotionCost(final java.lang.Class<?> srcClass, final java.lang.Class<?> destClass) {\n    if (destClass.isAnnotation()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            float float = 0.0F;\n            java.lang.Class<?> java.lang.Class<?> = srcClass;\n            if (!(cls.isPrimitive())) {\n                cost += 0.1F;\n                cls = org.apache.commons.lang3.ClassUtils.wrapperToPrimitive(cls);\n            } \n            for (int int = 0 ; (cls != destClass) && (i < (org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.java.lang.Class<?>[].int)) ; i++) {\n                if (cls == (org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.java.lang.Class<?>[][i])) {\n                    cost += 0.1F;\n                    if (i < ((org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.java.lang.Class<?>[].int) - 1)) {\n                        cls = org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.java.lang.Class<?>[][(i + 1)];\n                    } \n                } \n            }\n            return cost;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"destClass"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:526","type":"CtBinaryOperatorImpl","sourcecode":"i != 0"},"failures":[259],"tindex":"c0bb4a03-3e3f-11e6-90f5-35d99787d619","method":{"position":"org.apache.commons.lang3.StringUtils:5549","type":"CtMethodImpl","sourcecode":"public static java.lang.String center(java.lang.String str, final int size, java.lang.String padStr) {\n    if (size != 0) {\n        {\n            if ((str == null) || (size <= 0)) {\n                return str;\n            } \n            if (org.apache.commons.lang3.StringUtils.isEmpty(padStr)) {\n                padStr = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final int int = str.length();\n            final int int = size - strLen;\n            if (pads <= 0) {\n                return str;\n            } \n            str = org.apache.commons.lang3.StringUtils.leftPad(str, (strLen + (pads / 2)), padStr);\n            str = org.apache.commons.lang3.StringUtils.rightPad(str, size, padStr);\n            return str;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"size"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:621","type":"CtBinaryOperatorImpl","sourcecode":"(((((ch0 == 'f') || (ch0 == 'F')) && ((ch1 == 'a') || (ch1 == 'A'))) && ((ch2 == 'l') || (ch2 == 'L'))) && ((ch3 == 's') || (ch3 == 'S'))) && ((ch4 == 'e') || (ch4 == 'E'))"},"failures":[],"tindex":"c0bb7114-3e3f-11e6-90f5-cf600c6c1b7a","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1016","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendln(final char ch) {\n    if ((((((ch == 'f') || (ch0 == 'F')) && ((ch == 'a') || (ch1 == 'A'))) && ((ch == 'l') || (ch2 == 'L'))) && ((ch == 's') || (ch3 == 'S'))) && ((ch == 'e') || (ch4 == 'E'))) {\n        {\n            return append(ch).appendNewLine();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch0":"ch","ch2":"ch","ch1":"ch","ch4":"ch","ch3":"ch"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.JavaVersion:148","type":"CtInvocationImpl","sourcecode":"\"1.8\".equals(nom)"},"failures":[260],"tindex":"c0bb7115-3e3f-11e6-90f5-856e90de3702","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:728","type":"CtMethodImpl","sourcecode":"public static java.lang.String escapeXml11(final java.lang.String input) {\n    if (\"1.8\".equals(input)) {\n        {\n            return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nom":"input"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:176","type":"CtBinaryOperatorImpl","sourcecode":"bool == null"},"failures":[],"tindex":"c0bb7116-3e3f-11e6-90f5-2f4174e75293","method":{"position":"org.apache.commons.lang3.AnnotationUtils:263","type":"CtMethodImpl","sourcecode":"private static boolean memberEquals(final java.lang.Class<?> type, final java.lang.Object o1, final java.lang.Object o2) {\n    if (o1 == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (o1 == o2) {\n                return true;\n            } \n            if ((o1 == null) || (o2 == null)) {\n                return false;\n            } \n            if (type.isArray()) {\n                return org.apache.commons.lang3.AnnotationUtils.arrayMemberEquals(type.getComponentType(), o1, o2);\n            } \n            if (type.isAnnotation()) {\n                return org.apache.commons.lang3.AnnotationUtils.equals(((java.lang.annotation.Annotation)(o1)), ((java.lang.annotation.Annotation)(o2)));\n            } \n            return o1.equals(o2);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bool":"o1"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:1291","type":"CtBinaryOperatorImpl","sourcecode":"(size()) > 0"},"failures":[],"tindex":"c0bb9827-3e3f-11e6-90f5-eb5c23deb9dd","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2677","type":"CtMethodImpl","sourcecode":"public boolean equals(final org.apache.commons.lang3.text.StrBuilder other) {\n    if ((org.apache.commons.lang3.text.StrBuilder.this) == other) {\n        return true;\n    } \n    if ((org.apache.commons.lang3.text.StrBuilder.this.int) != (other.int)) {\n        return false;\n    } \n    final char[] char[] = org.apache.commons.lang3.text.StrBuilder.this.char[];\n    final char[] char[] = other.char[];\n    for (int int = (int) - 1 ; i >= 0 ; i--) {\n        if ((thisBuf[i]) != (otherBuf[i])) {\n            return false;\n        } \n    }\n    return true;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"other"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:797","type":"CtBinaryOperatorImpl","sourcecode":"fraction == null"},"failures":[261],"tindex":"c0bb9828-3e3f-11e6-90f5-81a967dc1d13","method":{"position":"org.apache.commons.lang3.math.Fraction:712","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.math.Fraction add(final org.apache.commons.lang3.math.Fraction fraction) {\n    if (fraction == null) {\n        {\n            return addSub(fraction, true);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fraction":"fraction"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:381","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[262],"tindex":"c0bbbf39-3e3f-11e6-90f5-6b5f978c7df1","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1889","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder replaceAll(final java.lang.String searchStr, final java.lang.String replaceStr) {\n    if (searchStr == null) {\n        {\n            final int int = searchStr == null ? 0 : searchStr.length();\n            if (searchLen > 0) {\n                final int int = replaceStr == null ? 0 : replaceStr.length();\n                int int = indexOf(searchStr, 0);\n                while (index >= 0) {\n                    replaceImpl(index, (index + searchLen), searchLen, replaceStr, replaceLen);\n                    index = indexOf(searchStr, (index + replaceLen));\n                }\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"searchStr"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:424","type":"CtArrayReadImpl","sourcecode":"src[srcPos]"},"failures":[263],"tindex":"c0bbbf3a-3e3f-11e6-90f5-7f36c1975632","method":{"position":"org.apache.commons.lang3.Conversion:1584","type":"CtMethodImpl","sourcecode":"public static boolean[] intToBinary(final int src, final int srcPos, final boolean[] dst, final int dstPos, final int nBools) {\n    if (dst[src]) {\n        {\n            if (0 == nBools) {\n                return dst;\n            } \n            if (((nBools - 1) + srcPos) >= 32) {\n                throw new java.lang.IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 32\");\n            } \n            int int = 0;\n            for (int int = 0 ; i < nBools ; i++) {\n                shift = (i * 1) + srcPos;\n                dst[(dstPos + i)] = (1 & (src >> shift)) != 0;\n            }\n            return dst;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcPos":"src","src":"dst"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:728","type":"CtBinaryOperatorImpl","sourcecode":"classes == null"},"failures":[264],"tindex":"c0bc828b-3e3f-11e6-90f5-895b32d3a314","method":{"position":"org.apache.commons.lang3.ClassUtils:777","type":"CtMethodImpl","sourcecode":"public static java.lang.Class<?>[] wrappersToPrimitives(final java.lang.Class<?>... classes) {\n    if (classes == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (classes == null) {\n                return null;\n            } \n            if ((classes.int) == 0) {\n                return classes;\n            } \n            final java.lang.Class<?>[] java.lang.Class<?>[] = new java.lang.Class[classes.int];\n            for (int int = 0 ; i < (classes.int) ; i++) {\n                convertedClasses[i] = org.apache.commons.lang3.ClassUtils.wrapperToPrimitive(classes[i]);\n            }\n            return convertedClasses;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classes":"classes"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2127","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[265,266],"tindex":"c0bca99c-3e3f-11e6-90f5-f5b85b27aae0","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1494","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder insert(final int index, java.lang.String str) {\n    if (index < 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            validateIndex(index);\n            if (str == null) {\n                str = java.lang.String;\n            } \n            if (str != null) {\n                final int int = str.length();\n                if (strLen > 0) {\n                    final int int = (int) + strLen;\n                    ensureCapacity(newSize);\n                    java.lang.System.arraycopy(char[], index, char[], (index + strLen), ((int) - index));\n                    int = newSize;\n                    str.getChars(0, strLen, char[], index);\n                } \n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:173","type":"CtBinaryOperatorImpl","sourcecode":"(nullText != null) && (nullText.isEmpty())"},"failures":[],"tindex":"c0bca99d-3e3f-11e6-90f5-6b9a057f0a49","method":{"position":"org.apache.commons.lang3.time.FastDateParser:434","type":"CtMethodImpl","sourcecode":"void setCalendar(final org.apache.commons.lang3.time.FastDateParser parser, final java.util.Calendar cal, final java.lang.String value) {\n    if ((value != null) && (nullText.isEmpty())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nullText":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:701","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[],"tindex":"c0bca99e-3e3f-11e6-90f5-df2ca0b5bd6a","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:425","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.String format(final java.util.Date date) {\n    if (date == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.util.Calendar java.util.Calendar = newCalendar();\n            c.setTime(date);\n            return applyRulesToString(c);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3113","type":"CtBinaryOperatorImpl","sourcecode":"match || preserveAllTokens"},"failures":[],"tindex":"c0bca99f-3e3f-11e6-90f5-23d83f02e36e","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:110","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setUseIdentityHashCode(final boolean useIdentityHashCode) {\n    if (useIdentityHashCode || useIdentityHashCode) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            super.setUseIdentityHashCode(useIdentityHashCode);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"preserveAllTokens":"useIdentityHashCode","match":"useIdentityHashCode"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6310","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[78,78,79],"tindex":"c0bcd0b0-3e3f-11e6-90f5-65ae95384162","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:908","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final short value) {\n    if (fieldName == null) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, value);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:208","type":"CtBinaryOperatorImpl","sourcecode":"previous != null"},"failures":[],"tindex":"c0bcd0b1-3e3f-11e6-90f5-cb92909914db","method":{"position":"org.apache.commons.lang3.time.DateFormatUtils:238","type":"CtMethodImpl","sourcecode":"public static java.lang.String format(final java.util.Calendar calendar, final java.lang.String pattern, final java.util.TimeZone timeZone) {\n    if (pattern != null) {\n        {\n            return org.apache.commons.lang3.time.DateFormatUtils.format(calendar, pattern, timeZone, null);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"previous":"pattern"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2482","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[267,170],"tindex":"c0bcd0b2-3e3f-11e6-90f5-2bc62acb5344","method":{"position":"org.apache.commons.lang3.ArrayUtils:3553","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final byte[] array) {\n    if (array == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (array == null) || ((array.int) == 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:328","type":"CtBinaryOperatorImpl","sourcecode":"value == falseValue"},"failures":[265,266],"tindex":"c0bcd0b3-3e3f-11e6-90f5-0527355e22ad","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1478","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder insert(final int index, final java.lang.Object obj) {\n    if (index == index) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == null) {\n                return insert(index, java.lang.String);\n            } \n            return insert(index, obj.toString());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"falseValue":"index","value":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1223","type":"CtBinaryOperatorImpl","sourcecode":"b > a"},"failures":[],"tindex":"c0bcf7c4-3e3f-11e6-90f5-3b8873ee73d1","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:288","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.time.FastDateFormat getTimeInstance(final int style, final java.util.TimeZone timeZone, final java.util.Locale locale) {\n    if (style > style) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getTimeInstance(style, timeZone, locale);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"style","b":"style"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3336","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[268],"tindex":"c0bdbb15-3e3f-11e6-90f5-8b942a7e746f","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:670","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.EqualsBuilder append(final long[] lhs, final long[] rhs) {\n    if (lhs == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((boolean) == false) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if ((lhs == null) || (rhs == null)) {\n                org.apache.commons.lang3.builder.EqualsBuilder.this.setEquals(false);\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                org.apache.commons.lang3.builder.EqualsBuilder.this.setEquals(false);\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && (boolean) ; ++i) {\n                append(lhs[i], rhs[i]);\n            }\n            return org.apache.commons.lang3.builder.EqualsBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"lhs"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:877","type":"CtFieldReadImpl","sourcecode":"objectsTriviallyEqual"},"failures":[269,270],"tindex":"c0bde226-3e3f-11e6-90f5-8bf3f16f1aed","method":{"position":"org.apache.commons.lang3.text.StrBuilder:769","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder append(final boolean value) {\n    if (value) {\n        {\n            if (value) {\n                ensureCapacity(((int) + 4));\n                char[][((int)++)] = 't';\n                char[][((int)++)] = 'r';\n                char[][((int)++)] = 'u';\n                char[][((int)++)] = 'e';\n            } else {\n                ensureCapacity(((int) + 5));\n                char[][((int)++)] = 'f';\n                char[][((int)++)] = 'a';\n                char[][((int)++)] = 'l';\n                char[][((int)++)] = 's';\n                char[][((int)++)] = 'e';\n            }\n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsTriviallyEqual":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:176","type":"CtBinaryOperatorImpl","sourcecode":"denominator < 0"},"failures":[271],"tindex":"c0bde227-3e3f-11e6-90f5-9d942b29c341","method":{"position":"org.apache.commons.lang3.time.DateUtils:584","type":"CtMethodImpl","sourcecode":"public static java.util.Date setHours(final java.util.Date date, final int amount) {\n    if (amount < 0) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.set(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"denominator":"amount"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6396","type":"CtBinaryOperatorImpl","sourcecode":"maxWidth < 4"},"failures":[216,231,239,254],"tindex":"c0be0938-3e3f-11e6-90f5-6fab1bdb188e","method":{"position":"org.apache.commons.lang3.time.FastDateParser:820","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nint modify(final int iValue) {\n    if (iValue < 4) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return iValue % 12;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"maxWidth":"iValue"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:1009","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"c0be0939-3e3f-11e6-90f5-51fee43c79f1","method":{"position":"org.apache.commons.lang3.ArrayUtils:832","type":"CtMethodImpl","sourcecode":"public static java.lang.Boolean[] nullToEmpty(final java.lang.Boolean[] array) {\n    if (array == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                {\n                    if ((array == null) || ((array.int) == 0)) {\n                        return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Boolean[];\n                    } \n                    return array;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:537","type":"CtVariableReadImpl","sourcecode":"detail"},"failures":[],"tindex":"c0be093a-3e3f-11e6-90f5-1badd57d8476","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:696","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final double[] array, final boolean fullDetail) {\n    if (fullDetail) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, array, java.lang.Boolean.valueOf(fullDetail));\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"detail":"fullDetail"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:91","type":"CtBinaryOperatorImpl","sourcecode":"start == seqEnd"},"failures":[272],"tindex":"c0be093b-3e3f-11e6-90f5-6920e7965a86","method":{"position":"org.apache.commons.lang3.ArrayUtils:914","type":"CtMethodImpl","sourcecode":"public static long[] subarray(final long[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (endIndexExclusive == endIndexExclusive) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            if (startIndexInclusive < 0) {\n                startIndexInclusive = 0;\n            } \n            if (endIndexExclusive > (array.int)) {\n                endIndexExclusive = array.int;\n            } \n            final int int = endIndexExclusive - startIndexInclusive;\n            if (newSize <= 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.long[];\n            } \n            final long[] long[] = new long[newSize];\n            java.lang.System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);\n            return subarray;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"endIndexExclusive","seqEnd":"endIndexExclusive"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomStringUtils:310","type":"CtBinaryOperatorImpl","sourcecode":"chars == null"},"failures":[273],"tindex":"c0be304c-3e3f-11e6-90f5-f589ef40553b","method":{"position":"org.apache.commons.lang3.StringUtils:4319","type":"CtMethodImpl","sourcecode":"public static java.lang.String removeEndIgnoreCase(final java.lang.String str, final java.lang.String remove) {\n    if (remove == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(remove))) {\n                return str;\n            } \n            if (org.apache.commons.lang3.StringUtils.endsWithIgnoreCase(str, remove)) {\n                return str.substring(0, ((str.length()) - (remove.length())));\n            } \n            return str;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chars":"remove"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:596","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"c0be304d-3e3f-11e6-90f5-b5e304c660b4","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:744","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n    if (buffer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendTo(buffer, calendar.get(int));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"buffer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:472","type":"CtBinaryOperatorImpl","sourcecode":"(java.lang.Float.floatToIntBits(lhs)) != (java.lang.Float.floatToIntBits(rhs))"},"failures":[274],"tindex":"c0be575e-3e3f-11e6-90f5-5d30eaaa6f5c","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1049","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendln(final float value) {\n    if ((java.lang.Float.floatToIntBits(value)) != (java.lang.Float.floatToIntBits(value))) {\n        {\n            return append(value).appendNewLine();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"value","rhs":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:560","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.reflect.TypeUtils.isAssignable(bound, toGenericArrayType)"},"failures":[],"tindex":"c0be575f-3e3f-11e6-90f5-3db15c101bab","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:294","type":"CtMethodImpl","sourcecode":"public static boolean reflectionEquals(final java.lang.Object lhs, final java.lang.Object rhs, final boolean testTransients) {\n    if (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(rhs, rhs)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(lhs, rhs, testTransients, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bound":"rhs","toGenericArrayType":"rhs"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1749","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[275],"tindex":"c0be7d70-3e3f-11e6-90f5-0b6911477bf9","method":{"position":"org.apache.commons.lang3.ArrayUtils:3621","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final int[] array) {\n    if (array == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (array != null) && ((array.int) != 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:603","type":"CtBinaryOperatorImpl","sourcecode":"(tokens) == null"},"failures":[276],"tindex":"c0be7d71-3e3f-11e6-90f5-3b1fe874084e","method":{"position":"org.apache.commons.lang3.StringUtils:388","type":"CtMethodImpl","sourcecode":"public static boolean isNoneBlank(java.lang.CharSequence... css) {\n    if (css == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228676149/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return !(org.apache.commons.lang3.StringUtils.isAnyBlank(css));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"tokens":"css"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}