{"failureDictionary":{"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":70,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":189,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":169,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":165,"org.apache.commons.lang3.time.DateUtilsTest.testSetMilliseconds":291,"org.apache.commons.lang3.text.StrBuilderTest.testSubstringInt":91,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":12,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstringAfter_StringString":271,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":71,"org.apache.commons.lang3.ClassUtilsTest.testWrappersToPrimitivesNull":141,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteDeclaredNamedField":267,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":226,"org.apache.commons.lang3.ArrayUtilsTest.testIsEmptyPrimitives":114,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadDeclaredNamedStaticField":261,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":164,"org.apache.commons.lang3.time.DateUtilsTest.testAddDays":216,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testConcurrentExceptionCauseNull":244,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceAll_StrMatcher_String":62,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":130,"org.apache.commons.lang3.time.DateUtilsTest.testAddSeconds":217,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStripAll":144,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testDoubleArrayAsObject":3,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":132,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testNullArgument":106,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":230,"org.apache.commons.lang3.ArrayUtilsTest.testSameLength":197,"org.apache.commons.lang3.text.StrBuilderTest.testContains_StrMatcher":64,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_StrMatcher_int":66,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":279,"org.apache.commons.lang3.CharUtilsTest.testToChar_Character":143,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":79,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfDoubleWithStartIndex":24,"org.apache.commons.lang3.time.DateUtilsTest.testAddMonths":221,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":16,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEmbeddedPatternInChoice":257,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":11,"org.apache.commons.lang3.mutable.MutableIntTest.testAddValueObject":214,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StrBuilder":203,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetMatchingAccessibleMethod":192,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":228,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":68,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":280,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePartialString_noReplace":100,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":13,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringStringarray":26,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":159,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":176,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StrBuilder_int_int":199,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllObjectArrayOutOfBoundsIndex":184,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethodWithEvent":156,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_String":207,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetFieldIllegalArgumentException1":288,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":131,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllObjectArrayRemoveNone":187,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEqualsHashcode":254,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":250,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetDeclaredField":268,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testOverriddenBuiltinFormat":255,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":48,"org.apache.commons.lang3.StringUtilsTest.testChomp":237,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testExtendedFormats":258,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":161,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeEcmaScript":20,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_String_int_int":93,"org.apache.commons.lang3.mutable.MutableShortTest.testGetSet":139,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":231,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfDoubleWithStartIndexTolerance":117,"org.apache.commons.lang3.math.FractionTest.testMultiply":296,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListenerWithPrivateAddMethod":154,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryEndIndex":178,"org.apache.commons.lang3.BitFieldTest.testByte":23,"org.apache.commons.lang3.reflect.TypeLiteralTest.testEquals":284,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethod":153,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":273,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOf_StrMatcher_int":61,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":277,"org.apache.commons.lang3.reflect.TypeLiteralTest.testBasic":282,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetPrefix":29,"org.apache.commons.lang3.ArrayUtilsTest.testSameLengthShort":281,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":34,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StringBuilder_int_int":94,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":276,"org.apache.commons.lang3.math.FractionTest.testDivide":295,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetSuffix":30,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEscapedQuote_LANG_477":256,"org.apache.commons.lang3.text.StrMatcherTest.testStringMatcher_String":158,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementDoubleArray":109,"org.apache.commons.lang3.mutable.MutableShortTest.testAddValueObject":157,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadDaemonTrue":233,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfDoubleTolerance":115,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StringBuilder":208,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableCount_Throwable":272,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedStaticFieldForceAccess":290,"org.apache.commons.lang3.CharUtilsTest.testToString_char":88,"org.apache.commons.lang3.StringUtilsTest.testSwapCase_String":246,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListener":152,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryReplace":181,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testConcurrentRuntimeExceptionCauseNull":245,"org.apache.commons.lang3.ArrayUtilsTest.testContainsDoubleTolerance":111,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeMethod":150,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":227,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetValueDelimiter":28,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_CharArray_int_int":201,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":134,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":75,"org.apache.commons.lang3.time.DateUtilsTest.testAddWeeks":219,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":7,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":177,"org.apache.commons.lang3.text.StrBuilderTest.testGetSetNullText":211,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":55,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":135,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testBuilderReset":234,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":80,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorNoArgs":167,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionHierarchyEquals":213,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithNullText":202,"org.apache.commons.lang3.text.StrBuilderTest.testAsWriter":101,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":84,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":49,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":15,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetFieldForceAccessIllegalArgumentException1":289,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfDouble":119,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparatorsWithNullText":205,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringString":25,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":73,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":87,"org.apache.commons.lang3.builder.EqualsBuilderTest.testRaggedArray":122,"org.apache.commons.lang3.ClassUtilsTest.testWrappersToPrimitivesEmpty":142,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_ClassArray_ClassArray_NoAutoboxing":195,"org.apache.commons.lang3.text.StrBuilderTest.testStartsWith":248,"org.apache.commons.lang3.text.StrMatcherTest.testCharMatcher_char":27,"org.apache.commons.lang3.builder.DiffBuilderTest.testStylePassedToDiffResult":77,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementBooleanArray":270,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvWriter":22,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_String_int_int":95,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryMatcher":63,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":99,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeStaticMethod":190,"org.apache.commons.lang3.text.StrTokenizerTest.testChaining":58,"org.apache.commons.lang3.builder.EqualsBuilderTest.testLongArrayHiddenByObject":123,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":96,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":224,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadRight":209,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":74,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":249,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testTrimToNull":242,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":137,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryStartIndex":180,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":67,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfDoubleWithStartIndexTolerance":116,"org.apache.commons.lang3.ArrayUtilsTest.testIsEquals":129,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStripToNull_String":145,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedStaticField":287,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":69,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":138,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":85,"org.apache.commons.lang3.reflect.TypeLiteralTest.testTyped":283,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":252,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":166,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllNumberArray":186,"org.apache.commons.lang3.builder.CompareToBuilderTest.testByteArray":102,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":82,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceFirst_StrMatcher_String":59,"org.apache.commons.lang3.builder.DiffBuilderTest.testSimilarObjectIgnoresAppends":127,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testTrim":241,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":171,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StringBuffer":204,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfDouble":113,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":6,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testDoubleArray":5,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":9,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadField":262,"org.apache.commons.lang3.StringUtilsTest.testRepeat_StringStringInt":236,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoVariables":172,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":173,"org.apache.commons.lang3.time.DateUtilsTest.testAddYears":220,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":81,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":174,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_Object":182,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":160,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStrip_StringString":146,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":56,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":57,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_short_short":2,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":162,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadFieldForceAccess":269,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":133,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":97,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":78,"org.apache.commons.lang3.reflect.TypeUtilsTest.testParameterize":285,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":14,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":251,"org.apache.commons.lang3.StringUtilsTest.testRemoveEnd":238,"org.apache.commons.lang3.math.FractionTest.testAdd":292,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":223,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetDeclaredFieldAccessIllegalArgumentException2":264,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetDeclaredFieldAccessIllegalArgumentException1":263,"org.apache.commons.lang3.BitFieldTest.testIsSet":89,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_ClassArray_ClassArray":196,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":193,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":18,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetDeclaredFieldAccessIllegalArgumentException4":266,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetDeclaredFieldAccessIllegalArgumentException3":265,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":275,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":17,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":168,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllObjectArray":188,"org.apache.commons.lang3.text.StrBuilderTest.testSubSequenceIntInt":92,"org.apache.commons.lang3.StringUtilsTest.testNormalizeSpace":243,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryCount":179,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementDoubleArray":110,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":10,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":76,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadLeft":200,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":232,"org.apache.commons.lang3.text.StrTokenizerTest.test5":46,"org.apache.commons.lang3.text.StrTokenizerTest.test4":45,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadDeclaredNamedField":260,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGenericArrayType":286,"org.apache.commons.lang3.text.StrTokenizerTest.test6":47,"org.apache.commons.lang3.text.StrTokenizerTest.test1":42,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvWriter":21,"org.apache.commons.lang3.text.StrTokenizerTest.test3":44,"org.apache.commons.lang3.text.StrTokenizerTest.test2":43,"org.apache.commons.lang3.ValidateTest.testNoNullElementsCollection1":0,"org.apache.commons.lang3.ArrayUtilsTest.testContainsDouble":120,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedStaticFieldForceAccess":239,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfDoubleWithStartIndex":112,"org.apache.commons.lang3.ValidateTest.testNoNullElementsCollection2":1,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":83,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStripToEmpty_String":147,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetMatchingAccessibleMethod":108,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":31,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":32,"org.apache.commons.lang3.reflect.MethodUtilsTest.testNullArgument":191,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetAccessibleConstructorFromDescription":104,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJson":19,"org.apache.commons.lang3.event.EventUtilsTest.testBindFilteredEventsToMethod":155,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":278,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_String":183,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetAccessibleConstructor":107,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEquals":212,"org.apache.commons.lang3.math.FractionTest.testSubtract":294,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListenerWithNoAddMethod":151,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfDoubleTolerance":118,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyBooleanObjectNull":253,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":86,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StringBuffer_int_int":206,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":163,"org.apache.commons.lang3.math.FractionTest.testPow":293,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":72,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":8,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testDouble":4,"org.apache.commons.lang3.ConversionTest.testBinaryToShort":121,"org.apache.commons.lang3.time.DateUtilsTest.testAddMilliseconds":222,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":35,"org.apache.commons.lang3.time.DateUtilsTest.testAddMinutes":215,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":33,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":37,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":36,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":39,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":38,"org.apache.commons.lang3.ClassUtilsTest.testWrappersToPrimitives":140,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":41,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeExactConstructor":105,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":40,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":54,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":229,"org.apache.commons.lang3.ValidateTest.testExclusiveBetweenLong_withMessage":149,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":274,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":170,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_CharArray":210,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedStaticField":240,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":52,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":51,"org.apache.commons.lang3.builder.EqualsBuilderTest.testLongArray":125,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiLongArray":126,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":53,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOf_StrMatcher":65,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_ClassArray_ClassArray_Autoboxing":194,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testExtendedAndBuiltInFormats":259,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_StrMatcher":60,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":175,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":50,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllObjectArrayNegativeIndex":185,"org.apache.commons.lang3.time.DateUtilsTest.testAddHours":218,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testBuilderResetAfterBuild":235,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":225,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeConstructor":103,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStrip_String":148,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":136,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteDeclaredNamedStaticField":90,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String":247,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsertWithNullText":198,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMixedArray":124,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayLong":128,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":98},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4941","type":"CtBinaryOperatorImpl","sourcecode":"overlay == null"},"failures":[0,1],"tindex":"f9c77104-2e99-11e6-89cb-2f343a528114","method":{"position":"org.apache.commons.lang3.Validate:567","type":"CtMethodImpl","sourcecode":"public static <T extends java.lang.Iterable<?>>T noNullElements(final T iterable, final java.lang.String message, final java.lang.Object... values) {\n    if (message == null) {\n        {\n            org.apache.commons.lang3.Validate.notNull(iterable);\n            int int = 0;\n            for (final java.util.Iterator<?> java.util.Iterator<?> = iterable.iterator() ; it.hasNext() ; i++) {\n                if ((it.next()) == null) {\n                    final java.lang.Object[] java.lang.Object[] = org.apache.commons.lang3.ArrayUtils.addAll(values, java.lang.Integer.valueOf(i));\n                    throw new java.lang.IllegalArgumentException(java.lang.String.format(message, values2));\n                } \n            }\n            return iterable;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"overlay":"message"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1099","type":"CtBinaryOperatorImpl","sourcecode":"b < a"},"failures":[],"tindex":"f9c8d095-2e99-11e6-89cb-bfd13f7c242b","method":{"position":"org.apache.commons.lang3.Validate:104","type":"CtMethodImpl","sourcecode":"public static void isTrue(final boolean expression, final java.lang.String message, final long value) {\n    if (value < value) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (expression == false) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message, java.lang.Long.valueOf(value)));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"value","b":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1138","type":"CtBinaryOperatorImpl","sourcecode":"c < a"},"failures":[2],"tindex":"f9c8f7a6-2e99-11e6-89cb-afe71df1ccc7","method":{"position":"org.apache.commons.lang3.ArrayUtils:3183","type":"CtMethodImpl","sourcecode":"public static short[] toPrimitive(final java.lang.Short[] array, final short valueForNull) {\n    if (valueForNull < valueForNull) {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.short[];\n            } \n            final short[] short[] = new short[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                final java.lang.Short java.lang.Short = array[i];\n                result[i] = b == null ? valueForNull : b.shortValue();\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"valueForNull","c":"valueForNull"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:388","type":"CtBinaryOperatorImpl","sourcecode":"(java.lang.Double.doubleToLongBits(lhs)) != (java.lang.Double.doubleToLongBits(rhs))"},"failures":[3,4,5],"tindex":"f9c8f7a7-2e99-11e6-89cb-9bc7685f0f0f","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:676","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final double value) {\n    if ((java.lang.Double.doubleToLongBits(value)) != (java.lang.Double.doubleToLongBits(value))) {\n        {\n            return append(java.lang.Double.doubleToLongBits(value));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"value","rhs":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:829","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[6,7,8,9,10,11,12,13,14,15,16],"tindex":"f9c91eb8-2e99-11e6-89cb-551b840b2b42","method":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:349","type":"CtMethodImpl","sourcecode":"public static java.lang.String toStringExclude(final java.lang.Object object, final java.lang.String... excludeFieldNames) {\n    if (object == object) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.lang3.builder.ReflectionToStringBuilder(object).setExcludeFieldNames(excludeFieldNames).toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"object","rhs":"object"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:222","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[17,18,19,20,21,22],"tindex":"f9c9baf9-2e99-11e6-89cb-1317f489b181","method":{"position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:75","type":"CtMethodImpl","sourcecode":"public final void translate(final java.lang.CharSequence input, final java.io.Writer out) throws java.io.IOException {\n    if (input == null) {\n        throw new java.io.IOException();\n    } else {\n        {\n            if (out == null) {\n                throw new java.lang.IllegalArgumentException(\"The Writer must not be null\");\n            } \n            if (input == null) {\n                return ;\n            } \n            int int = 0;\n            final int int = input.length();\n            while (pos < len) {\n                final int int = translate(input, pos, out);\n                if (consumed == 0) {\n                    final char[] char[] = java.lang.Character.toChars(java.lang.Character.codePointAt(input, pos));\n                    out.write(c);\n                    pos += c.int;\n                    continue;\n                } \n                for (int int = 0 ; pt < consumed ; pt++) {\n                    pos += java.lang.Character.charCount(java.lang.Character.codePointAt(input, pos));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"input"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:301","type":"CtFieldReadImpl","sourcecode":"objectsTriviallyEqual"},"failures":[23],"tindex":"f9ca091a-2e99-11e6-89cb-f3cc970626a4","method":{"position":"org.apache.commons.lang3.BitField:279","type":"CtMethodImpl","sourcecode":"public byte setByteBoolean(final byte holder, final boolean flag) {\n    if (flag) {\n        {\n            return flag ? setByte(holder) : clearByte(holder);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsTriviallyEqual":"flag"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2251","type":"CtBinaryOperatorImpl","sourcecode":"pos < 0"},"failures":[24],"tindex":"f9ca091b-2e99-11e6-89cb-5d17fce515b6","method":{"position":"org.apache.commons.lang3.ArrayUtils:2652","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final double[] array, final double valueToFind, int startIndex) {\n    if (startIndex < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } else if (startIndex >= (array.int)) {\n                startIndex = (array.int) - 1;\n            } \n            for (int int = startIndex ; i >= 0 ; i--) {\n                if (valueToFind == (array[i])) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pos":"startIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:137","type":"CtBinaryOperatorImpl","sourcecode":"(((org.apache.commons.lang3.StringUtils.isAllLowerCase(split[0])) && (((split[0].length()) == 2) || ((split[0].length()) == 3))) && ((split[1].length()) == 2)) && (org.apache.commons.lang3.StringUtils.isAllUpperCase(split[1]))"},"failures":[],"tindex":"f9ca091c-2e99-11e6-89cb-0765321a0129","method":{"position":"org.apache.commons.lang3.Validate:505","type":"CtMethodImpl","sourcecode":"public static <T>T[] noNullElements(final T[] array, final java.lang.String message, final java.lang.Object... values) {\n    if ((((org.apache.commons.lang3.StringUtils.isAllLowerCase(values[0])) && (((split[0].length()) == 2) || ((split[0].length()) == 3))) && ((split[1].length()) == 2)) && (org.apache.commons.lang3.StringUtils.isAllUpperCase(split[1]))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.notNull(array);\n            for (int int = 0 ; i < (array.int) ; i++) {\n                if ((array[i]) == null) {\n                    final java.lang.Object[] java.lang.Object[] = org.apache.commons.lang3.ArrayUtils.add(values, java.lang.Integer.valueOf(i));\n                    throw new java.lang.IllegalArgumentException(java.lang.String.format(message, values2));\n                } \n            }\n            return array;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"split":"values"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2066","type":"CtBinaryOperatorImpl","sourcecode":"summaryObjectStartText == null"},"failures":[25,26],"tindex":"f9ca302d-2e99-11e6-89cb-1ff1d7536987","method":{"position":"org.apache.commons.lang3.CharSetUtils:175","type":"CtMethodImpl","sourcecode":"public static java.lang.String keep(final java.lang.String str, final java.lang.String... set) {\n    if (str == null) {\n        {\n            if (str == null) {\n                return null;\n            } \n            if ((str.isEmpty()) || (org.apache.commons.lang3.CharSetUtils.deepEmpty(set))) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            return org.apache.commons.lang3.CharSetUtils.modify(str, set, true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"summaryObjectStartText":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3133","type":"CtBinaryOperatorImpl","sourcecode":"match || preserveAllTokens"},"failures":[],"tindex":"f9ca302e-2e99-11e6-89cb-29bb11ca2ce6","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1696","type":"CtMethodImpl","sourcecode":"protected void setDefaultFullDetail(final boolean defaultFullDetail) {\n    if (defaultFullDetail || defaultFullDetail) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.this.boolean = defaultFullDetail;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"preserveAllTokens":"defaultFullDetail","match":"defaultFullDetail"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDatePrinter:328","type":"CtBinaryOperatorImpl","sourcecode":"c == '\\''"},"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"tindex":"f9ca573f-2e99-11e6-89cb-970075f4b54d","method":{"position":"org.apache.commons.lang3.text.StrMatcher:163","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.StrMatcher charMatcher(final char ch) {\n    if (ch == '\\'') {\n        {\n            return new org.apache.commons.lang3.text.StrMatcher.CharMatcher(ch);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"ch"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:353","type":"CtBinaryOperatorImpl","sourcecode":"ch < 16"},"failures":[67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87],"tindex":"f9ca5740-2e99-11e6-89cb-cb22d189cc57","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:295","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final char lhs, final char rhs) {\n    if (lhs < 16) {\n        {\n            if (fieldName == null) {\n                throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n            } \n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if (lhs != rhs) {\n                java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Character>(fieldName) {\n                    private static final long serialVersionUID = 1L;\n\n                    @java.lang.Override\n                    public java.lang.Character getLeft() {\n                        return java.lang.Character.valueOf(lhs);\n                    }\n\n                    @java.lang.Override\n                    public java.lang.Character getRight() {\n                        return java.lang.Character.valueOf(rhs);\n                    }\n                });\n            } \n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"lhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:240","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.CharUtils.isAsciiNumeric(ch)) == false"},"failures":[88],"tindex":"f9ca7e51-2e99-11e6-89cb-c9e0ed12508e","method":{"position":"org.apache.commons.lang3.CharUtils:307","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(final char ch) {\n    if ((org.apache.commons.lang3.CharUtils.isAsciiNumeric(ch)) == false) {\n        {\n            if (ch < 128) {\n                return org.apache.commons.lang3.CharUtils.org.apache.commons.lang3.CharUtils.java.lang.String[][ch];\n            } \n            return new java.lang.String(new char[]{ ch });\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:512","type":"CtBinaryOperatorImpl","sourcecode":"(numerator) == (java.lang.Integer.MIN_VALUE)"},"failures":[89,23],"tindex":"f9ca7e52-2e99-11e6-89cb-c143b4b256e9","method":{"position":"org.apache.commons.lang3.BitField:122","type":"CtMethodImpl","sourcecode":"public boolean isSet(final int holder) {\n    if (holder == holder) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (holder & (int)) != 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.lang.Integer.MIN_VALUE":"holder","numerator":"holder"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.StringUtils:3304","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[90],"tindex":"f9ca7e53-2e99-11e6-89cb-fdc6f08c2e3f","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:576","type":"CtMethodImpl","sourcecode":"public static void writeDeclaredStaticField(final java.lang.Class<?> cls, final java.lang.String fieldName, final java.lang.Object value) throws java.lang.IllegalAccessException {\n    if (value == null) {\n        {\n            org.apache.commons.lang3.reflect.FieldUtils.writeDeclaredStaticField(cls, fieldName, value, false);\n        }\n    } else {\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:208","type":"CtBinaryOperatorImpl","sourcecode":"((className.charAt(0)) == 'L') && ((className.charAt(((className.length()) - 1))) == ';')"},"failures":[],"tindex":"f9caa564-2e99-11e6-89cb-395f8723baba","method":{"position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:342","type":"CtMethodImpl","sourcecode":"private org.apache.commons.lang3.concurrent.BackgroundInitializer<?> checkName(final java.lang.String name) {\n    if (((name.charAt(0)) == 'L') && ((className.charAt(((className.length()) - 1))) == ';')) {\n        {\n            final org.apache.commons.lang3.concurrent.BackgroundInitializer<?> org.apache.commons.lang3.concurrent.BackgroundInitializer<?> = java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.BackgroundInitializer<?>>.get(name);\n            if (init == null) {\n                throw new java.util.NoSuchElementException((\"No child initializer with name \" + name));\n            } \n            return init;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"className":"name"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:688","type":"CtBinaryOperatorImpl","sourcecode":"(comparison) != 0"},"failures":[91],"tindex":"f9caa565-2e99-11e6-89cb-fd6268445b91","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2145","type":"CtMethodImpl","sourcecode":"public java.lang.String substring(final int start) {\n    if (start != 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return substring(start, int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparison":"start"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:578","type":"CtBinaryOperatorImpl","sourcecode":"(u == 0) || (v == 0)"},"failures":[92],"tindex":"f9caa566-2e99-11e6-89cb-1b62649bf5b8","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2125","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.CharSequence subSequence(final int startIndex, final int endIndex) {\n    if ((startIndex == 0) || (endIndex == 0)) {\n        {\n            if (startIndex < 0) {\n                throw new java.lang.StringIndexOutOfBoundsException(startIndex);\n            } \n            if (endIndex > (int)) {\n                throw new java.lang.StringIndexOutOfBoundsException(endIndex);\n            } \n            if (startIndex > endIndex) {\n                throw new java.lang.StringIndexOutOfBoundsException((endIndex - startIndex));\n            } \n            return substring(startIndex, endIndex);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"u":"startIndex","v":"endIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1433","type":"CtBinaryOperatorImpl","sourcecode":"(((nHexs - 1) * 4) + srcPos) >= 32"},"failures":[93,94,95,96,97,98,99,100,101],"tindex":"f9caa567-2e99-11e6-89cb-bb589ce44436","method":{"position":"org.apache.commons.lang3.text.StrBuilder:533","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder append(final java.lang.String str, final int startIndex, final int length) {\n    if ((((startIndex - 1) * 4) + length) >= 32) {\n        {\n            if (str == null) {\n                return appendNull();\n            } \n            if ((startIndex < 0) || (startIndex > (str.length()))) {\n                throw new java.lang.StringIndexOutOfBoundsException(\"startIndex must be valid\");\n            } \n            if ((length < 0) || ((startIndex + length) > (str.length()))) {\n                throw new java.lang.StringIndexOutOfBoundsException(\"length must be valid\");\n            } \n            if (length > 0) {\n                final int int = length();\n                ensureCapacity((len + length));\n                str.getChars(startIndex, (startIndex + length), char[], len);\n                int += length;\n            } \n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"srcPos":"length","nHexs":"startIndex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1506","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[102],"tindex":"f9cacc78-2e99-11e6-89cb-bb87f1932dcf","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:847","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final byte[] lhs, final byte[] rhs) {\n    if (rhs == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (lhs == null) {\n                int = -1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if (rhs == null) {\n                int = +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                int = (lhs.int) < (rhs.int) ? -1 : +1;\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && ((int) == 0) ; i++) {\n                append(lhs[i], rhs[i]);\n            }\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"rhs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:114","type":"CtBinaryOperatorImpl","sourcecode":"ctor == null"},"failures":[103,104,105,106,107,108],"tindex":"f9caf389-2e99-11e6-89cb-790d7b41c5f5","method":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:217","type":"CtMethodImpl","sourcecode":"public static <T>java.lang.reflect.Constructor<T> getAccessibleConstructor(final java.lang.reflect.Constructor<T> ctor) {\n    if (ctor == null) {\n        {\n            org.apache.commons.lang3.Validate.notNull(ctor, \"constructor cannot be null\");\n            return (org.apache.commons.lang3.reflect.MemberUtils.isAccessible(ctor)) && (org.apache.commons.lang3.reflect.ConstructorUtils.isAccessible(ctor.getDeclaringClass())) ? ctor : null;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ctor":"ctor"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:179","type":"CtUnaryOperatorImpl","sourcecode":"!(java.util.Arrays.equals(lhs, rhs))"},"failures":[],"tindex":"f9caf38a-2e99-11e6-89cb-7534c81ea071","method":{"position":"org.apache.commons.lang3.ArrayUtils:3477","type":"CtMethodImpl","sourcecode":"public static java.lang.Boolean[] toObject(final boolean[] array) {\n    if (!(java.util.Arrays.equals(array, array))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Boolean[];\n            } \n            final java.lang.Boolean[] java.lang.Boolean[] = new java.lang.Boolean[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = array[i] ? java.lang.Boolean.java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean.java.lang.Boolean;\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array","rhs":"array"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2559","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.ArrayUtils.isEmpty(array)"},"failures":[109,110,111,112,113,114,115,116,117,118,119,24,120],"tindex":"f9cb1a9b-2e99-11e6-89cb-23e74a9d7feb","method":{"position":"org.apache.commons.lang3.ArrayUtils:3564","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final double[] array) {\n    if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (array == null) || ((array.int) == 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2297","type":"CtBinaryOperatorImpl","sourcecode":"pos == (org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND)"},"failures":[],"tindex":"f9cb1a9c-2e99-11e6-89cb-350c4293cc63","method":{"position":"org.apache.commons.lang3.StringUtils:1415","type":"CtMethodImpl","sourcecode":"public static boolean contains(final java.lang.CharSequence seq, final int searchChar) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(seq)) {\n        {\n            if (searchChar == searchChar) {\n                {\n                    if (org.apache.commons.lang3.StringUtils.isEmpty(seq)) {\n                        return false;\n                    } \n                    return (org.apache.commons.lang3.CharSequenceUtils.indexOf(seq, searchChar, 0)) >= 0;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND":"searchChar","pos":"searchChar"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:888","type":"CtBinaryOperatorImpl","sourcecode":"(isEquals) == false"},"failures":[],"tindex":"f9cb1a9d-2e99-11e6-89cb-91563f25677c","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:65","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setUseClassName(final boolean useClassName) {\n    if (useClassName == false) {\n        {\n            super.setUseClassName(useClassName);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isEquals":"useClassName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:910","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[],"tindex":"f9cb1a9e-2e99-11e6-89cb-a3563748b2af","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:982","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n    if (calendar == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendTo(buffer, ((calendar.get(java.util.Calendar.java.util.Calendar.int)) + 1));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"calendar"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:490","type":"CtBinaryOperatorImpl","sourcecode":"(numerator) == 0"},"failures":[121],"tindex":"f9cb41af-2e99-11e6-89cb-570d48baa0f2","method":{"position":"org.apache.commons.lang3.Conversion:1115","type":"CtMethodImpl","sourcecode":"public static short binaryToShort(final boolean[] src, final int srcPos, final short dstInit, final int dstPos, final int nBools) {\n    if (srcPos == 0) {\n        {\n            if ((((src.int) == 0) && (srcPos == 0)) || (0 == nBools)) {\n                return dstInit;\n            } \n            if (((nBools - 1) + dstPos) >= 16) {\n                throw new java.lang.IllegalArgumentException(\"nBools-1+dstPos is greather or equal to than 16\");\n            } \n            short short = dstInit;\n            int int = 0;\n            for (int int = 0 ; i < nBools ; i++) {\n                shift = (i * 1) + dstPos;\n                final int int = (src[(i + srcPos)] ? 1 : 0) << shift;\n                final int int = 1 << shift;\n                out = ((short)((out & (~mask)) | bits));\n            }\n            return out;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"numerator":"srcPos"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2034","type":"CtBinaryOperatorImpl","sourcecode":"sizeEndText == null"},"failures":[],"tindex":"f9cb41b0-2e99-11e6-89cb-a74c804d0e75","method":{"position":"org.apache.commons.lang3.StringUtils:6219","type":"CtMethodImpl","sourcecode":"public static java.lang.String defaultString(final java.lang.String str, final java.lang.String defaultStr) {\n    if (defaultStr == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return str == null ? defaultStr : str;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sizeEndText":"defaultStr"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:674","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[122,123,124,125,126,68,73,127,80,81,82,83,86,128,129],"tindex":"f9cb41b1-2e99-11e6-89cb-5d807f544293","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:670","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.EqualsBuilder append(final long[] lhs, final long[] rhs) {\n    if (lhs == rhs) {\n        {\n            if ((boolean) == false) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if ((lhs == null) || (rhs == null)) {\n                org.apache.commons.lang3.builder.EqualsBuilder.this.setEquals(false);\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                org.apache.commons.lang3.builder.EqualsBuilder.this.setEquals(false);\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && (boolean) ; ++i) {\n                append(lhs[i], rhs[i]);\n            }\n            return org.apache.commons.lang3.builder.EqualsBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"lhs","rhs":"rhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:596","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[130,96,131,97,132,133,134,135,98,99,136,137,138],"tindex":"f9cd8ba2-2e99-11e6-89cb-fb8692217ce3","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:473","type":"CtMethodImpl","sourcecode":"public java.lang.String replace(final java.lang.StringBuffer source) {\n    if (source == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (source == null) {\n                {\n                    if (source == null) {\n                        return null;\n                    } \n                    final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(source.length()).append(source);\n                    substitute(buf, 0, buf.length());\n                    return buf.toString();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"source"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1138","type":"CtBinaryOperatorImpl","sourcecode":"c < a"},"failures":[139],"tindex":"f9cdb2b3-2e99-11e6-89cb-297775a20a4d","method":{"position":"org.apache.commons.lang3.mutable.MutableShort:96","type":"CtMethodImpl","sourcecode":"public void setValue(final short value) {\n    if (value < value) {\n        {\n            org.apache.commons.lang3.mutable.MutableShort.this.short = value;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"value","c":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:778","type":"CtBinaryOperatorImpl","sourcecode":"classes == null"},"failures":[140,141,142],"tindex":"f9cdb2b4-2e99-11e6-89cb-afb0c0d7cfa2","method":{"position":"org.apache.commons.lang3.ClassUtils:777","type":"CtMethodImpl","sourcecode":"public static java.lang.Class<?>[] wrappersToPrimitives(final java.lang.Class<?>... classes) {\n    if (classes == null) {\n        {\n            if (classes == null) {\n                return null;\n            } \n            if ((classes.int) == 0) {\n                return classes;\n            } \n            final java.lang.Class<?>[] java.lang.Class<?>[] = new java.lang.Class[classes.int];\n            for (int int = 0 ; i < (classes.int) ; i++) {\n                convertedClasses[i] = org.apache.commons.lang3.ClassUtils.wrapperToPrimitive(classes[i]);\n            }\n            return convertedClasses;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classes":"classes"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:263","type":"CtBinaryOperatorImpl","sourcecode":"ch == null"},"failures":[143],"tindex":"f9cdb2b5-2e99-11e6-89cb-dfc9d68ed25d","method":{"position":"org.apache.commons.lang3.CharUtils:129","type":"CtMethodImpl","sourcecode":"public static char toChar(final java.lang.Character ch) {\n    if (ch == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (ch == null) {\n                throw new java.lang.IllegalArgumentException(\"The Character must not be null\");\n            } \n            return ch.charValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6771","type":"CtBinaryOperatorImpl","sourcecode":"n > m"},"failures":[],"tindex":"f9cdd9c6-2e99-11e6-89cb-81cbb723a1b1","method":{"position":"org.apache.commons.lang3.ArrayUtils:994","type":"CtMethodImpl","sourcecode":"public static short[] subarray(final short[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (endIndexExclusive > endIndexExclusive) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            if (startIndexInclusive < 0) {\n                startIndexInclusive = 0;\n            } \n            if (endIndexExclusive > (array.int)) {\n                endIndexExclusive = array.int;\n            } \n            final int int = endIndexExclusive - startIndexInclusive;\n            if (newSize <= 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.short[];\n            } \n            final short[] short[] = new short[newSize];\n            java.lang.System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);\n            return subarray;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"m":"endIndexExclusive","n":"endIndexExclusive"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:306","type":"CtBinaryOperatorImpl","sourcecode":"((className.charAt(0)) == 'L') && ((className.charAt(((className.length()) - 1))) == ';')"},"failures":[],"tindex":"f9cdd9c7-2e99-11e6-89cb-fbafe0bae028","method":{"position":"org.apache.commons.lang3.exception.DefaultExceptionContext:77","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.List<java.lang.Object> getContextValues(final java.lang.String label) {\n    if (((label.charAt(0)) == 'L') && ((className.charAt(((className.length()) - 1))) == ';')) {\n        {\n            final java.util.List<java.lang.Object> java.util.List<java.lang.Object> = new java.util.ArrayList<java.lang.Object>();\n            for (final org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object> org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object> : java.util.List<org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>>) {\n                if (org.apache.commons.lang3.StringUtils.equals(label, pair.getKey())) {\n                    values.add(pair.getValue());\n                } \n            }\n            return values;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"className":"label"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.DefaultExceptionContext:129","type":"CtBinaryOperatorImpl","sourcecode":"baseMessage != null"},"failures":[144,145,146,147,148],"tindex":"f9cdd9c8-2e99-11e6-89cb-0f237d308e18","method":{"position":"org.apache.commons.lang3.StringUtils:584","type":"CtMethodImpl","sourcecode":"public static java.lang.String strip(java.lang.String str, final java.lang.String stripChars) {\n    if (str != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n                return str;\n            } \n            str = org.apache.commons.lang3.StringUtils.stripStart(str, stripChars);\n            return org.apache.commons.lang3.StringUtils.stripEnd(str, stripChars);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"baseMessage":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5374","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[149],"tindex":"f9ce00d9-2e99-11e6-89cb-ef949c32ac2a","method":{"position":"org.apache.commons.lang3.Validate:1104","type":"CtMethodImpl","sourcecode":"public static void exclusiveBetween(long start, long end, long value, java.lang.String message) {\n    if (message == null) {\n        {\n            if ((value <= start) || (value >= end)) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"message"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.exception.DefaultExceptionContext:147","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[150,151,152,153,154,155,156],"tindex":"f9ce00da-2e99-11e6-89cb-1daec4d1e6f2","method":{"position":"org.apache.commons.lang3.reflect.MethodUtils:119","type":"CtMethodImpl","sourcecode":"public static java.lang.Object invokeMethod(final java.lang.Object object, final java.lang.String methodName, java.lang.Object[] args, java.lang.Class<?>[] parameterTypes) throws java.lang.IllegalAccessException, java.lang.NoSuchMethodException, java.lang.reflect.InvocationTargetException {\n    if (object == null) {\n        {\n            parameterTypes = org.apache.commons.lang3.ArrayUtils.nullToEmpty(parameterTypes);\n            args = org.apache.commons.lang3.ArrayUtils.nullToEmpty(args);\n            final java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.getMatchingAccessibleMethod(object.getClass(), methodName, parameterTypes);\n            if (method == null) {\n                throw new java.lang.NoSuchMethodException((((\"No such accessible method: \" + methodName) + \"() on object: \") + (object.getClass().getName())));\n            } \n            return method.invoke(object, args);\n        }\n    } else {\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:373","type":"CtInvocationImpl","sourcecode":"parsePattern.endsWith(\"ZZ\")"},"failures":[],"tindex":"f9ce00db-2e99-11e6-89cb-795bb58d3705","method":{"position":"org.apache.commons.lang3.StringUtils:6103","type":"CtMethodImpl","sourcecode":"public static boolean isWhitespace(final java.lang.CharSequence cs) {\n    if (cs.endsWith(\"ZZ\")) {\n        {\n            if (cs == null) {\n                return false;\n            } \n            final int int = cs.length();\n            for (int int = 0 ; i < sz ; i++) {\n                if ((java.lang.Character.isWhitespace(cs.charAt(i))) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"parsePattern":"cs"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2815","type":"CtBinaryOperatorImpl","sourcecode":"(separator == null) || (org.apache.commons.lang3.StringUtils.EMPTY.equals(separator))"},"failures":[],"tindex":"f9ce27ec-2e99-11e6-89cb-95c08bb92c2d","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1211","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final char[] array, final java.lang.Boolean fullDetail) {\n    if ((fieldName == null) || (fieldName.equals(separator))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendFieldStart(buffer, fieldName);\n            if (array == null) {\n                appendNullText(buffer, fieldName);\n            } else if (isFullDetail(fullDetail)) {\n                appendDetail(buffer, fieldName, array);\n            } else {\n                appendSummary(buffer, fieldName, array);\n            }\n            appendFieldEnd(buffer, fieldName);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.lang3.StringUtils.EMPTY":"fieldName","separator":"fieldName"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDateParser:282","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[],"tindex":"f9ce27ed-2e99-11e6-89cb-516b0cb1280a","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:451","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.StringBuffer format(final java.util.Date date, final java.lang.StringBuffer buf) {\n    if (date == null) {\n        {\n            if (date == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final java.util.Calendar java.util.Calendar = newCalendar();\n                    c.setTime(date);\n                    return applyRules(c, buf);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5271","type":"CtBinaryOperatorImpl","sourcecode":"count == null"},"failures":[157],"tindex":"f9ce27ee-2e99-11e6-89cb-6971149c6361","method":{"position":"org.apache.commons.lang3.mutable.MutableShort:148","type":"CtMethodImpl","sourcecode":"public void add(final java.lang.Number operand) {\n    if (operand == null) {\n        {\n            org.apache.commons.lang3.mutable.MutableShort.this.short += operand.shortValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"operand"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:549","type":"CtBinaryOperatorImpl","sourcecode":"power == 0"},"failures":[158,130,96,159,131,160,97,132,161,133,162,163,164,134,135,165,166,167,168,98,169,170,99,171,172,136,173,137,174,175,138,176,177,100,50,51,52,53,57,59,178,179,62,180,63,64,181],"tindex":"f9ce4eff-2e99-11e6-89cb-1bfaca3eded9","method":{"position":"org.apache.commons.lang3.text.StrMatcher:366","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int isMatch(final char[] buffer, int pos, final int bufferStart, final int bufferEnd) {\n    if (pos == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = char[].int;\n            if ((pos + len) > bufferEnd) {\n                return 0;\n            } \n            for (int int = 0 ; i < (char[].int) ; i++ , pos++) {\n                if ((char[][i]) != (buffer[pos])) {\n                    return 0;\n                } \n            }\n            return len;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"power":"pos"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:256","type":"CtBinaryOperatorImpl","sourcecode":"buffer == null"},"failures":[],"tindex":"f9ce4f00-2e99-11e6-89cb-4fc365935a42","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:473","type":"CtMethodImpl","sourcecode":"public java.lang.String replace(final java.lang.StringBuffer source) {\n    if (source == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (source == null) {\n                {\n                    if (source == null) {\n                        return null;\n                    } \n                    final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(source.length()).append(source);\n                    substitute(buf, 0, buf.length());\n                    return buf.toString();\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"buffer":"source"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5374","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[182],"tindex":"f9ce4f01-2e99-11e6-89cb-0771757666f2","method":{"position":"org.apache.commons.lang3.text.StrBuilder:477","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic org.apache.commons.lang3.text.StrBuilder append(final java.lang.CharSequence seq) {\n    if (seq == null) {\n        {\n            if (seq == null) {\n                return appendNull();\n            } \n            return append(seq.toString());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"seq"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:898","type":"CtBinaryOperatorImpl","sourcecode":"rhs == null"},"failures":[],"tindex":"f9ce7612-2e99-11e6-89cb-11da809d24d4","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:955","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder appendAsObjectToString(final java.lang.Object srcObject) {\n    if (srcObject == null) {\n        {\n            org.apache.commons.lang3.ObjectUtils.identityToString(org.apache.commons.lang3.builder.ToStringBuilder.this.getStringBuffer(), srcObject);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"rhs":"srcObject"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:425","type":"CtBinaryOperatorImpl","sourcecode":"customPattern != null"},"failures":[183],"tindex":"f9ce7613-2e99-11e6-89cb-258cbf1b3bf3","method":{"position":"org.apache.commons.lang3.BooleanUtils:709","type":"CtMethodImpl","sourcecode":"public static boolean toBoolean(final java.lang.String str) {\n    if (str != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (org.apache.commons.lang3.BooleanUtils.toBooleanObject(str)) == (java.lang.Boolean.java.lang.Boolean.java.lang.Boolean);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"customPattern":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1749","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[184,185,186,187,188],"tindex":"f9ce7614-2e99-11e6-89cb-f5642d0d79b3","method":{"position":"org.apache.commons.lang3.ArrayUtils:5232","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic static <T>T[] removeAll(final T[] array, final int... indices) {\n    if (indices == null) {\n        {\n            return ((T[])(org.apache.commons.lang3.ArrayUtils.removeAll(((java.lang.Object)(array)), org.apache.commons.lang3.ArrayUtils.clone(indices))));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"indices"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3048","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[189,190,191,192,193,150,103,106,108,194,195,196,197,152,153,155,156],"tindex":"f9ce7615-2e99-11e6-89cb-a9caec9c1a97","method":{"position":"org.apache.commons.lang3.ArrayUtils:1227","type":"CtMethodImpl","sourcecode":"public static boolean isSameLength(final java.lang.Object[] array1, final java.lang.Object[] array2) {\n    if (array1 == null) {\n        {\n            if (((((array1 == null) && (array2 != null)) && ((array2.int) > 0)) || (((array2 == null) && (array1 != null)) && ((array1.int) > 0))) || (((array1 != null) && (array2 != null)) && ((array1.int) != (array2.int)))) {\n                return false;\n            } \n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5429","type":"CtBinaryOperatorImpl","sourcecode":"pads < padLen"},"failures":[],"tindex":"f9ce9d26-2e99-11e6-89cb-59a55b131e3b","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:371","type":"CtMethodImpl","sourcecode":"public static int indexOfType(final java.lang.Throwable throwable, final java.lang.Class<?> type, final int fromIndex) {\n    if (fromIndex < fromIndex) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.exception.ExceptionUtils.indexOf(throwable, type, fromIndex, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pads":"fromIndex","padLen":"fromIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharRange:236","type":"CtBinaryOperatorImpl","sourcecode":"(iToString) == null"},"failures":[198,199,200,201,202,203,94,204,205,206,207,95,208,209,210,211],"tindex":"f9ce9d27-2e99-11e6-89cb-f520ee528ae0","method":{"position":"org.apache.commons.lang3.text.StrBuilder:172","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder setNullText(java.lang.String nullText) {\n    if (nullText == null) {\n        {\n            if ((nullText != null) && (nullText.isEmpty())) {\n                nullText = null;\n            } \n            org.apache.commons.lang3.text.StrBuilder.this.java.lang.String = nullText;\n            return org.apache.commons.lang3.text.StrBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"iToString":"nullText"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1138","type":"CtBinaryOperatorImpl","sourcecode":"c < a"},"failures":[],"tindex":"f9ce9d28-2e99-11e6-89cb-2f744a16d38f","method":{"position":"org.apache.commons.lang3.BitField:227","type":"CtMethodImpl","sourcecode":"public short setShort(final short holder) {\n    if (holder < holder) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((short)(set(holder)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"holder","c":"holder"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:912","type":"CtBinaryOperatorImpl","sourcecode":"(toString) == null"},"failures":[212,213],"tindex":"f9cec439-2e99-11e6-89cb-154bbe18e060","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:324","type":"CtMethodImpl","sourcecode":"public static boolean reflectionEquals(final java.lang.Object lhs, final java.lang.Object rhs, final boolean testTransients, final java.lang.Class<?> reflectUpToClass, final java.lang.String... excludeFields) {\n    if (rhs == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (lhs == rhs) {\n                return true;\n            } \n            if ((lhs == null) || (rhs == null)) {\n                return false;\n            } \n            final java.lang.Class<?> java.lang.Class<?> = lhs.getClass();\n            final java.lang.Class<?> java.lang.Class<?> = rhs.getClass();\n            java.lang.Class<?> java.lang.Class<?>;\n            if (lhsClass.isInstance(rhs)) {\n                testClass = lhsClass;\n                if (!(rhsClass.isInstance(lhs))) {\n                    testClass = rhsClass;\n                } \n            } else if (rhsClass.isInstance(lhs)) {\n                testClass = rhsClass;\n                if (!(lhsClass.isInstance(rhs))) {\n                    testClass = lhsClass;\n                } \n            } else {\n                return false;\n            }\n            final org.apache.commons.lang3.builder.EqualsBuilder org.apache.commons.lang3.builder.EqualsBuilder = new org.apache.commons.lang3.builder.EqualsBuilder();\n            try {\n                if (testClass.isArray()) {\n                    equalsBuilder.append(lhs, rhs);\n                } else {\n                    org.apache.commons.lang3.builder.EqualsBuilder.reflectionAppend(lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields);\n                    while (((testClass.getSuperclass()) != null) && (testClass != reflectUpToClass)) {\n                        testClass = testClass.getSuperclass();\n                        org.apache.commons.lang3.builder.EqualsBuilder.reflectionAppend(lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields);\n                    }\n                }\n            } catch (final java.lang.IllegalArgumentException e) {\n                return false;\n            }\n            return equalsBuilder.isEquals();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toString":"rhs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:173","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[],"tindex":"f9cec43a-2e99-11e6-89cb-61fb776e3e10","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:676","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final double[] array) {\n    if (fieldName == null) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, array, null);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FormatCache:197","type":"CtBinaryOperatorImpl","sourcecode":"dateStyle == null"},"failures":[214],"tindex":"f9cec43b-2e99-11e6-89cb-a172d262ad14","method":{"position":"org.apache.commons.lang3.mutable.MutableInt:148","type":"CtMethodImpl","sourcecode":"public void add(final java.lang.Number operand) {\n    if (operand == null) {\n        {\n            org.apache.commons.lang3.mutable.MutableInt.this.int += operand.intValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dateStyle":"operand"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:661","type":"CtBinaryOperatorImpl","sourcecode":"falseString == null"},"failures":[],"tindex":"f9ceeb4c-2e99-11e6-89cb-8bab53e8bf72","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1256","type":"CtMethodImpl","sourcecode":"protected void appendSummary(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final char[] array) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendSummarySize(buffer, fieldName, array.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"falseString":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:607","type":"CtBinaryOperatorImpl","sourcecode":"((((ch0 == 't') || (ch0 == 'T')) && ((ch1 == 'r') || (ch1 == 'R'))) && ((ch2 == 'u') || (ch2 == 'U'))) && ((ch3 == 'e') || (ch3 == 'E'))"},"failures":[],"tindex":"f9ceeb4d-2e99-11e6-89cb-130b124e14b6","method":{"position":"org.apache.commons.lang3.StringUtils:6309","type":"CtMethodImpl","sourcecode":"public static java.lang.String reverseDelimited(final java.lang.String str, final char separatorChar) {\n    if (((((separatorChar == 't') || (ch0 == 'T')) && ((separatorChar == 'r') || (ch1 == 'R'))) && ((separatorChar == 'u') || (ch2 == 'U'))) && ((separatorChar == 'e') || (ch3 == 'E'))) {\n        {\n            if (str == null) {\n                return null;\n            } \n            final java.lang.String[] java.lang.String[] = org.apache.commons.lang3.StringUtils.split(str, separatorChar);\n            org.apache.commons.lang3.ArrayUtils.reverse(strs);\n            return org.apache.commons.lang3.StringUtils.join(strs, separatorChar);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch0":"separatorChar","ch2":"separatorChar","ch1":"separatorChar","ch3":"separatorChar"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5909","type":"CtBinaryOperatorImpl","sourcecode":"found < 0"},"failures":[215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232],"tindex":"f9ceeb4e-2e99-11e6-89cb-2be33b24c29d","method":{"position":"org.apache.commons.lang3.time.DateUtils:517","type":"CtMethodImpl","sourcecode":"private static java.util.Date add(final java.util.Date date, final int calendarField, final int amount) {\n    if (amount < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (date == null) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            final java.util.Calendar java.util.Calendar = java.util.Calendar.getInstance();\n            c.setTime(date);\n            c.add(calendarField, amount);\n            return c.getTime();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"found":"amount"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:611","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[],"tindex":"f9cf125f-2e99-11e6-89cb-4d8539917c53","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:443","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.StringBuffer format(final long millis, final java.lang.StringBuffer buf) {\n    if (buf == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return format(new java.util.Date(millis), buf);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"buf"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:537","type":"CtVariableReadImpl","sourcecode":"detail"},"failures":[233,234,235],"tindex":"f9cf1260-2e99-11e6-89cb-81c04312ac15","method":{"position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:318","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder daemon(final boolean f) {\n    if (f) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Boolean = java.lang.Boolean.valueOf(f);\n            return org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"detail":"f"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:509","type":"CtVariableReadImpl","sourcecode":"detail"},"failures":[],"tindex":"f9cf1261-2e99-11e6-89cb-87fa3f655567","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:275","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final boolean value) {\n    if (value) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, value);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"detail":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:480","type":"CtBinaryOperatorImpl","sourcecode":"lhs instanceof byte[]"},"failures":[],"tindex":"f9cf1262-2e99-11e6-89cb-8d17b3cc4446","method":{"position":"org.apache.commons.lang3.ArrayUtils:4559","type":"CtMethodImpl","sourcecode":"private static java.lang.Object add(final java.lang.Object array, final int index, final java.lang.Object element, final java.lang.Class<?> clss) {\n    if (element instanceof byte[]) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                if (index != 0) {\n                    throw new java.lang.IndexOutOfBoundsException(((\"Index: \" + index) + \", Length: 0\"));\n                } \n                final java.lang.Object java.lang.Object = java.lang.reflect.Array.newInstance(clss, 1);\n                java.lang.reflect.Array.set(joinedArray, 0, element);\n                return joinedArray;\n            } \n            final int int = java.lang.reflect.Array.getLength(array);\n            if ((index > length) || (index < 0)) {\n                throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + index) + \", Length: \") + length));\n            } \n            final java.lang.Object java.lang.Object = java.lang.reflect.Array.newInstance(clss, (length + 1));\n            java.lang.System.arraycopy(array, 0, result, 0, index);\n            java.lang.reflect.Array.set(result, index, element);\n            if (index < length) {\n                java.lang.System.arraycopy(array, index, result, (index + 1), (length - index));\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"element"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4533","type":"CtBinaryOperatorImpl","sourcecode":"(--max) == 0"},"failures":[],"tindex":"f9cf3973-2e99-11e6-89cb-134b2f9430e8","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:194","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.time.FastDateFormat getDateInstance(final int style, final java.util.Locale locale) {\n    if ((--style) == 0) {\n        {\n            return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getDateInstance(style, null, locale);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"max":"style"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.JavaVersion:134","type":"CtInvocationImpl","sourcecode":"\"1.1\".equals(nom)"},"failures":[236,237,238],"tindex":"f9cf3974-2e99-11e6-89cb-ef5f41b860dc","method":{"position":"org.apache.commons.lang3.StringUtils:4283","type":"CtMethodImpl","sourcecode":"public static java.lang.String removeEnd(final java.lang.String str, final java.lang.String remove) {\n    if (\"1.1\".equals(str)) {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(remove))) {\n                return str;\n            } \n            if (str.endsWith(remove)) {\n                return str.substring(0, ((str.length()) - (remove.length())));\n            } \n            return str;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nom":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:459","type":"CtBinaryOperatorImpl","sourcecode":"stream == null"},"failures":[239,90,240],"tindex":"f9cf3975-2e99-11e6-89cb-41a381060c41","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:553","type":"CtMethodImpl","sourcecode":"public static void writeStaticField(final java.lang.Class<?> cls, final java.lang.String fieldName, final java.lang.Object value, final boolean forceAccess) throws java.lang.IllegalAccessException {\n    if (value == null) {\n        {\n            final java.lang.reflect.Field java.lang.reflect.Field = org.apache.commons.lang3.reflect.FieldUtils.getField(cls, fieldName, forceAccess);\n            org.apache.commons.lang3.Validate.isTrue((field != null), \"Cannot locate field %s on %s\", fieldName, cls);\n            org.apache.commons.lang3.reflect.FieldUtils.writeStaticField(field, value, false);\n        }\n    } else {\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"stream":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:633","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[241,242,243],"tindex":"f9cf6086-2e99-11e6-89cb-f7a40d85830c","method":{"position":"org.apache.commons.lang3.StringUtils:417","type":"CtMethodImpl","sourcecode":"public static java.lang.String trim(final java.lang.String str) {\n    if (str == null) {\n        {\n            return str == null ? null : str.trim();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:159","type":"CtBinaryOperatorImpl","sourcecode":"(ex.getCause()) instanceof java.lang.RuntimeException"},"failures":[244,245],"tindex":"f9cf6087-2e99-11e6-89cb-5f6867c4143f","method":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:143","type":"CtMethodImpl","sourcecode":"static java.lang.Throwable checkedException(final java.lang.Throwable ex) {\n    if ((ex.getCause()) instanceof java.lang.RuntimeException) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((ex != null) && (!(ex instanceof java.lang.RuntimeException))) && (!(ex instanceof java.lang.Error))) {\n                return ex;\n            } else {\n                throw new java.lang.IllegalArgumentException((\"Not a checked exception: \" + ex));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ex":"ex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2517","type":"CtBinaryOperatorImpl","sourcecode":"((str == null) || (org.apache.commons.lang3.StringUtils.isEmpty(open))) || (org.apache.commons.lang3.StringUtils.isEmpty(close))"},"failures":[246],"tindex":"f9cf6088-2e99-11e6-89cb-87836401a6d2","method":{"position":"org.apache.commons.lang3.StringUtils:5769","type":"CtMethodImpl","sourcecode":"public static java.lang.String swapCase(final java.lang.String str) {\n    if (((str == null) || (org.apache.commons.lang3.StringUtils.isEmpty(str))) || (org.apache.commons.lang3.StringUtils.isEmpty(str))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n                return str;\n            } \n            final char[] char[] = str.toCharArray();\n            for (int int = 0 ; i < (buffer.int) ; i++) {\n                final char char = buffer[i];\n                if (java.lang.Character.isUpperCase(ch)) {\n                    buffer[i] = java.lang.Character.toLowerCase(ch);\n                } else if (java.lang.Character.isTitleCase(ch)) {\n                    buffer[i] = java.lang.Character.toLowerCase(ch);\n                } else if (java.lang.Character.isLowerCase(ch)) {\n                    buffer[i] = java.lang.Character.toUpperCase(ch);\n                } \n            }\n            return new java.lang.String(buffer);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str","close":"str","open":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:176","type":"CtBinaryOperatorImpl","sourcecode":"newLineStr == null"},"failures":[247],"tindex":"f9cf8799-2e99-11e6-89cb-f1d8aae9a853","method":{"position":"org.apache.commons.lang3.text.WordUtils:504","type":"CtMethodImpl","sourcecode":"public static java.lang.String initials(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.text.WordUtils.initials(str, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"newLineStr":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomStringUtils:273","type":"CtBinaryOperatorImpl","sourcecode":"(ch >= 55296) && (ch <= 56191)"},"failures":[],"tindex":"f9cf879a-2e99-11e6-89cb-fd0e74fb7396","method":{"position":"org.apache.commons.lang3.text.translate.OctalUnescaper:77","type":"CtMethodImpl","sourcecode":"private boolean isZeroToThree(char ch) {\n    if ((ch >= 55296) && (ch <= 56191)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (ch >= '0') && (ch <= '3');\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch":"ch"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1870","type":"CtBinaryOperatorImpl","sourcecode":"fieldNameValueSeparator == null"},"failures":[248],"tindex":"f9cf879b-2e99-11e6-89cb-a94dd5ba55b5","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2072","type":"CtMethodImpl","sourcecode":"public boolean startsWith(final java.lang.String str) {\n    if (str == null) {\n        {\n            if (str == null) {\n                return false;\n            } \n            final int int = str.length();\n            if (len == 0) {\n                return true;\n            } \n            if (len > (int)) {\n                return false;\n            } \n            for (int int = 0 ; i < len ; i++) {\n                if ((char[][i]) != (str.charAt(i))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldNameValueSeparator":"str"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Range:450","type":"CtBinaryOperatorImpl","sourcecode":"result == null"},"failures":[249,249,250,251,252],"tindex":"f9cf879c-2e99-11e6-89cb-dd80f223e17f","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:1008","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder appendToString(final java.lang.String toString) {\n    if (toString == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (toString != null) {\n                org.apache.commons.lang3.builder.ToStringStyle.appendToString(java.lang.StringBuffer, toString);\n            } \n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"result":"toString"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:623","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"f9cfaead-2e99-11e6-89cb-139247656969","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:237","type":"CtMethodImpl","sourcecode":"public static int reflectionHashCode(final int initialNonZeroOddNumber, final int multiplierNonZeroOddNumber, final java.lang.Object object) {\n    if (object == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(initialNonZeroOddNumber, multiplierNonZeroOddNumber, object, false, null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"object"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:1009","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[253],"tindex":"f9cfaeae-2e99-11e6-89cb-5f57dd5fbf4b","method":{"position":"org.apache.commons.lang3.ArrayUtils:832","type":"CtMethodImpl","sourcecode":"public static java.lang.Boolean[] nullToEmpty(final java.lang.Boolean[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((array == null) || ((array.int) == 0)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Boolean[];\n            } \n            return array;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:647","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[],"tindex":"f9cfaeaf-2e99-11e6-89cb-a75685f9ba2d","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:451","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.StringBuffer format(final java.util.Date date, final java.lang.StringBuffer buf) {\n    if (date == null) {\n        {\n            if (date == null) {\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    final java.util.Calendar java.util.Calendar = newCalendar();\n                    c.setTime(date);\n                    return applyRules(c, buf);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"date"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:525","type":"CtBinaryOperatorImpl","sourcecode":"(coll == null) || (coll.isEmpty())"},"failures":[254,255,256,257,258,259],"tindex":"f9cfaeb0-2e99-11e6-89cb-bf3a0f3eaf9a","method":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:524","type":"CtMethodImpl","sourcecode":"private boolean containsElements(final java.util.Collection<?> coll) {\n    if ((coll == null) || (coll.isEmpty())) {\n        {\n            if ((coll == null) || (coll.isEmpty())) {\n                return false;\n            } \n            for (final java.lang.Object java.lang.Object : coll) {\n                if (name != null) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"coll":"coll"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrTokenizer:1001","type":"CtBinaryOperatorImpl","sourcecode":"trimmer != null"},"failures":[64],"tindex":"f9cfaeb1-2e99-11e6-89cb-179764ad6a64","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2278","type":"CtMethodImpl","sourcecode":"public boolean contains(final org.apache.commons.lang3.text.StrMatcher matcher) {\n    if (matcher != null) {\n        {\n            return (indexOf(matcher, 0)) >= 0;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"trimmer":"matcher"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:173","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[],"tindex":"f9cfd4c2-2e99-11e6-89cb-814c9346ae48","method":{"position":"org.apache.commons.lang3.StringUtils:1415","type":"CtMethodImpl","sourcecode":"public static boolean contains(final java.lang.CharSequence seq, final int searchChar) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(seq)) {\n        {\n            if (searchChar == searchChar) {\n                {\n                    if (org.apache.commons.lang3.StringUtils.isEmpty(seq)) {\n                        return false;\n                    } \n                    return (org.apache.commons.lang3.CharSequenceUtils.indexOf(seq, searchChar, 0)) >= 0;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"seq"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:563","type":"CtBinaryOperatorImpl","sourcecode":"(((ch0 == 'y') || (ch0 == 'Y')) || (ch0 == 't')) || (ch0 == 'T')"},"failures":[],"tindex":"f9cfd4c3-2e99-11e6-89cb-9d9da01a53d6","method":{"position":"org.apache.commons.lang3.Conversion:80","type":"CtMethodImpl","sourcecode":"public static int hexDigitToInt(final char hexDigit) {\n    if ((((hexDigit == 'y') || (ch0 == 'Y')) || (ch0 == 't')) || (ch0 == 'T')) {\n        {\n            final int int = java.lang.Character.digit(hexDigit, 16);\n            if (digit < 0) {\n                throw new java.lang.IllegalArgumentException(((\"Cannot interpret '\" + hexDigit) + \"' as a hexadecimal digit\"));\n            } \n            return digit;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch0":"hexDigit"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:778","type":"CtBinaryOperatorImpl","sourcecode":"classes == null"},"failures":[],"tindex":"f9cfd4c4-2e99-11e6-89cb-ff9a9ea14997","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:78","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeBuilder withLowerBounds(java.lang.reflect.Type... bounds) {\n    if (bounds == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeBuilder.this.java.lang.reflect.Type[] = bounds;\n            return org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"classes":"bounds"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1773","type":"CtUnaryOperatorImpl","sourcecode":"!chFound"},"failures":[260,261,90,262,263,264,265,266,267,268,269],"tindex":"f9cffbd5-2e99-11e6-89cb-f965069bafc4","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:166","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Field getDeclaredField(final java.lang.Class<?> cls, final java.lang.String fieldName, final boolean forceAccess) {\n    if (!forceAccess) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.isTrue((cls != null), \"The class must not be null\");\n            org.apache.commons.lang3.Validate.isTrue(org.apache.commons.lang3.StringUtils.isNotBlank(fieldName), \"The field name must not be blank/empty\");\n            try {\n                final java.lang.reflect.Field java.lang.reflect.Field = cls.getDeclaredField(fieldName);\n                if (!(org.apache.commons.lang3.reflect.MemberUtils.isAccessible(field))) {\n                    if (forceAccess) {\n                        field.setAccessible(true);\n                    } else {\n                        return null;\n                    }\n                } \n                return field;\n            } catch (final java.lang.NoSuchFieldException e) {\n            }\n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"chFound":"forceAccess"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:397","type":"CtVariableReadImpl","sourcecode":"subclass"},"failures":[270],"tindex":"f9cffbd6-2e99-11e6-89cb-9f69e006bda1","method":{"position":"org.apache.commons.lang3.ArrayUtils:4706","type":"CtMethodImpl","sourcecode":"public static boolean[] removeElement(final boolean[] array, final boolean element) {\n    if (element) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final int int = org.apache.commons.lang3.ArrayUtils.indexOf(array, element);\n            if (index == (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int)) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            return org.apache.commons.lang3.ArrayUtils.remove(array, index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"subclass":"element"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5553","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(padStr)"},"failures":[271],"tindex":"f9cffbd7-2e99-11e6-89cb-2716a830ce74","method":{"position":"org.apache.commons.lang3.StringUtils:2331","type":"CtMethodImpl","sourcecode":"public static java.lang.String substringAfter(final java.lang.String str, final java.lang.String separator) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(str)) {\n                return str;\n            } \n            if (separator == null) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final int int = str.indexOf(separator);\n            if (pos == (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            return str.substring((pos + (separator.length())));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"padStr":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:989","type":"CtBinaryOperatorImpl","sourcecode":"(value < start) || (value > end)"},"failures":[],"tindex":"f9d022e8-2e99-11e6-89cb-65ad5eb237c6","method":{"position":"org.apache.commons.lang3.ArrayUtils:2686","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final double[] array, final double valueToFind, int startIndex, final double tolerance) {\n    if ((tolerance < tolerance) || (value > valueToFind)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (org.apache.commons.lang3.ArrayUtils.isEmpty(array)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } \n            if (startIndex < 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n            } else if (startIndex >= (array.int)) {\n                startIndex = (array.int) - 1;\n            } \n            final double double = valueToFind - tolerance;\n            final double double = valueToFind + tolerance;\n            for (int int = startIndex ; i >= 0 ; i--) {\n                if (((array[i]) >= min) && ((array[i]) <= max)) {\n                    return i;\n                } \n            }\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"tolerance","end":"valueToFind","value":"tolerance"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6635","type":"CtBinaryOperatorImpl","sourcecode":"firstDiff != (-1)"},"failures":[],"tindex":"f9d022e9-2e99-11e6-89cb-2fcecf03ebd3","method":{"position":"org.apache.commons.lang3.time.DateUtils:700","type":"CtMethodImpl","sourcecode":"public static java.util.Date round(final java.util.Date date, final int field) {\n    if (field != (-1)) {\n        {\n            if (date == null) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            final java.util.Calendar java.util.Calendar = java.util.Calendar.getInstance();\n            gval.setTime(date);\n            org.apache.commons.lang3.time.DateUtils.modify(gval, field, org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.int);\n            return gval.getTime();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"firstDiff":"field"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:489","type":"CtBinaryOperatorImpl","sourcecode":"throwable == null"},"failures":[272],"tindex":"f9d022ea-2e99-11e6-89cb-471e0fde92fb","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:233","type":"CtMethodImpl","sourcecode":"public static int getThrowableCount(final java.lang.Throwable throwable) {\n    if (throwable == null) {\n        {\n            return org.apache.commons.lang3.exception.ExceptionUtils.getThrowableList(throwable).size();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"throwable":"throwable"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:373","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[273,274,275,276,277,278,279,280],"tindex":"f9d022eb-2e99-11e6-89cb-057e5ab31e49","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:523","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setSummaryObjectStartText(final java.lang.String summaryObjectStartText) {\n    if (summaryObjectStartText == null) {\n        {\n            super.setSummaryObjectStartText(summaryObjectStartText);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"summaryObjectStartText"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3400","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[281],"tindex":"f9d049fc-2e99-11e6-89cb-31b66a628926","method":{"position":"org.apache.commons.lang3.ArrayUtils:1281","type":"CtMethodImpl","sourcecode":"public static boolean isSameLength(final short[] array1, final short[] array2) {\n    if (array1 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((((array1 == null) && (array2 != null)) && ((array2.int) > 0)) || (((array2 == null) && (array1 != null)) && ((array1.int) > 0))) || (((array1 != null) && (array2 != null)) && ((array1.int) != (array2.int)))) {\n                return false;\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1374","type":"CtBinaryOperatorImpl","sourcecode":"(p.getOwnerType()) == null"},"failures":[282,283,284,285,286],"tindex":"f9d049fd-2e99-11e6-89cb-c750158280bc","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1780","type":"CtMethodImpl","sourcecode":"private static java.lang.String parameterizedTypeToString(java.lang.reflect.ParameterizedType p) {\n    if ((p.getOwnerType()) == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            final java.lang.reflect.Type java.lang.reflect.Type = p.getOwnerType();\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(p.getRawType()));\n            final java.lang.reflect.Type[] java.lang.reflect.Type[] = p.getActualTypeArguments();\n            if (useOwner == null) {\n                buf.append(raw.getName());\n            } else {\n                if (useOwner instanceof java.lang.Class<?>) {\n                    buf.append(((java.lang.Class<?>)(useOwner)).getName());\n                } else {\n                    buf.append(useOwner.toString());\n                }\n                buf.append('.').append(raw.getSimpleName());\n            }\n            org.apache.commons.lang3.reflect.TypeUtils.appendAllTo(buf.append('<'), \", \", typeArguments).append('>');\n            return buf.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"p"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:106","type":"CtInvocationImpl","sourcecode":"java.lang.Double.isNaN(b)"},"failures":[],"tindex":"f9d049fe-2e99-11e6-89cb-89add0395346","method":{"position":"org.apache.commons.lang3.ArrayUtils:3319","type":"CtMethodImpl","sourcecode":"public static double[] toPrimitive(final java.lang.Double[] array, final double valueForNull) {\n    if (java.lang.Double.isNaN(valueForNull)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.double[];\n            } \n            final double[] double[] = new double[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                final java.lang.Double java.lang.Double = array[i];\n                result[i] = b == null ? valueForNull : b.doubleValue();\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"valueForNull"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.MethodUtils:360","type":"CtInvocationImpl","sourcecode":"java.lang.reflect.Modifier.isPublic(cls.getModifiers())"},"failures":[287,288,289,290],"tindex":"f9d0710f-2e99-11e6-89cb-c5e201985ace","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:84","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Field getField(final java.lang.Class<?> cls, final java.lang.String fieldName, final boolean forceAccess) {\n    if (java.lang.reflect.Modifier.isPublic(cls.getModifiers())) {\n        {\n            org.apache.commons.lang3.Validate.isTrue((cls != null), \"The class must not be null\");\n            org.apache.commons.lang3.Validate.isTrue(org.apache.commons.lang3.StringUtils.isNotBlank(fieldName), \"The field name must not be blank/empty\");\n            for (java.lang.Class<?> java.lang.Class<?> = cls ; acls != null ; acls = acls.getSuperclass()) {\n                try {\n                    final java.lang.reflect.Field java.lang.reflect.Field = acls.getDeclaredField(fieldName);\n                    if (!(java.lang.reflect.Modifier.isPublic(field.getModifiers()))) {\n                        if (forceAccess) {\n                            field.setAccessible(true);\n                        } else {\n                            continue;\n                        }\n                    } \n                    return field;\n                } catch (final java.lang.NoSuchFieldException ex) {\n                }\n            }\n            java.lang.reflect.Field java.lang.reflect.Field = null;\n            for (final java.lang.Class<?> java.lang.Class<?> : org.apache.commons.lang3.ClassUtils.getAllInterfaces(cls)) {\n                try {\n                    final java.lang.reflect.Field java.lang.reflect.Field = class1.getField(fieldName);\n                    org.apache.commons.lang3.Validate.isTrue((match == null), (\"Reference to field %s is ambiguous relative to %s\" + \"; a matching field exists on two or more implemented interfaces.\"), fieldName, cls);\n                    match = test;\n                } catch (final java.lang.NoSuchFieldException ex) {\n                }\n            }\n            return match;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"cls"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSequenceUtils:209","type":"CtBinaryOperatorImpl","sourcecode":"((java.lang.Character.toUpperCase(c1)) != (java.lang.Character.toUpperCase(c2))) && ((java.lang.Character.toLowerCase(c1)) != (java.lang.Character.toLowerCase(c2)))"},"failures":[],"tindex":"f9d07110-2e99-11e6-89cb-7569caa0d115","method":{"position":"org.apache.commons.lang3.CharUtils:149","type":"CtMethodImpl","sourcecode":"public static char toChar(final java.lang.Character ch, final char defaultValue) {\n    if (((java.lang.Character.toUpperCase(defaultValue)) != (java.lang.Character.toUpperCase(defaultValue))) && ((java.lang.Character.toLowerCase(c1)) != (java.lang.Character.toLowerCase(c2)))) {\n        {\n            if (ch == null) {\n                return defaultValue;\n            } \n            return ch.charValue();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c1":"defaultValue","c2":"defaultValue"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:146","type":"CtBinaryOperatorImpl","sourcecode":"(((org.apache.commons.lang3.StringUtils.isAllLowerCase(split[0])) && (((split[0].length()) == 2) || ((split[0].length()) == 3))) && (((split[1].length()) == 0) || (((split[1].length()) == 2) && (org.apache.commons.lang3.StringUtils.isAllUpperCase(split[1]))))) && ((split[2].length()) > 0)"},"failures":[],"tindex":"f9d07111-2e99-11e6-89cb-0560ddb4a60c","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:875","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final java.lang.Object[] array) {\n    if ((((org.apache.commons.lang3.StringUtils.isAllLowerCase(array[0])) && (((split[0].length()) == 2) || ((split[0].length()) == 3))) && (((split[1].length()) == 0) || (((split[1].length()) == 2) && (org.apache.commons.lang3.StringUtils.isAllUpperCase(split[1]))))) && ((split[2].length()) > 0)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, array, null);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"split":"array"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:682","type":"CtUnaryOperatorImpl","sourcecode":"!(java.util.Arrays.equals(lhs, rhs))"},"failures":[],"tindex":"f9d09822-2e99-11e6-89cb-e37235c6b23a","method":{"position":"org.apache.commons.lang3.ArrayUtils:3610","type":"CtMethodImpl","sourcecode":"public static boolean isNotEmpty(final long[] array) {\n    if (!(java.util.Arrays.equals(array, array))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (array != null) && ((array.int) != 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array","rhs":"array"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:754","type":"CtBinaryOperatorImpl","sourcecode":"d1 == 1"},"failures":[291],"tindex":"f9d09823-2e99-11e6-89cb-bde54cdd802c","method":{"position":"org.apache.commons.lang3.time.DateUtils:629","type":"CtMethodImpl","sourcecode":"public static java.util.Date setMilliseconds(final java.util.Date date, final int amount) {\n    if (amount == 1) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.set(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"d1":"amount"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:97","type":"CtInvocationImpl","sourcecode":"str.contains(\"#\")"},"failures":[],"tindex":"f9d09824-2e99-11e6-89cb-cf11e108649c","method":{"position":"org.apache.commons.lang3.text.FormattableUtils:81","type":"CtMethodImpl","sourcecode":"public static java.util.Formatter append(final java.lang.CharSequence seq, final java.util.Formatter formatter, final int flags, final int width, final int precision) {\n    if (seq.contains(\"#\")) {\n        {\n            return org.apache.commons.lang3.text.FormattableUtils.append(seq, formatter, flags, width, precision, ' ', null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"seq"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:551","type":"CtVariableReadImpl","sourcecode":"detail"},"failures":[],"tindex":"f9d09825-2e99-11e6-89cb-7b067b2750db","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:696","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final double[] array, final boolean fullDetail) {\n    if (fullDetail) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, array, java.lang.Boolean.valueOf(fullDetail));\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"detail":"fullDetail"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1178","type":"CtBinaryOperatorImpl","sourcecode":"i > 0"},"failures":[292,293,294,295,296],"tindex":"f9d09826-2e99-11e6-89cb-d91afdaf8273","method":{"position":"org.apache.commons.lang3.math.Fraction:639","type":"CtMethodImpl","sourcecode":"private static int mulAndCheck(final int x, final int y) {\n    if (y > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final long long = ((long)(x)) * ((long)(y));\n            if ((m < (java.lang.Integer.java.lang.Integer.int)) || (m > (java.lang.Integer.java.lang.Integer.int))) {\n                throw new java.lang.ArithmeticException(\"overflow: mul\");\n            } \n            return ((int)(m));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"y"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:927","type":"CtBinaryOperatorImpl","sourcecode":"(seq == null) || (searchSeq == null)"},"failures":[151,152,153,154,155,156],"tindex":"f9d0bf37-2e99-11e6-89cb-2dc16487d942","method":{"position":"org.apache.commons.lang3.event.EventUtils:48","type":"CtMethodImpl","sourcecode":"public static <L>void addEventListener(final java.lang.Object eventSource, final java.lang.Class<L> listenerType, final L listener) {\n    if ((eventSource == null) || (eventSource == null)) {\n        {\n            try {\n                org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(eventSource, (\"add\" + (listenerType.getSimpleName())), listener);\n            } catch (final java.lang.NoSuchMethodException e) {\n                throw new java.lang.IllegalArgumentException(((((((\"Class \" + (eventSource.getClass().getName())) + \" does not have a public add\") + (listenerType.getSimpleName())) + \" method which takes a parameter of type \") + (listenerType.getName())) + \".\"));\n            } catch (final java.lang.IllegalAccessException e) {\n                throw new java.lang.IllegalArgumentException(((((((\"Class \" + (eventSource.getClass().getName())) + \" does not have an accessible add\") + (listenerType.getSimpleName())) + \" method which takes a parameter of type \") + (listenerType.getName())) + \".\"));\n            } catch (final java.lang.reflect.InvocationTargetException e) {\n                throw new java.lang.RuntimeException(\"Unable to add listener.\" , e.getCause());\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"searchSeq":"eventSource","seq":"eventSource"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}