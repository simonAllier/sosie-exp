{"failureDictionary":{"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":226,"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":248,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":176,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":177,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":275,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":172,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":175,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayDouble":89,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":296,"org.apache.commons.lang3.exception.ContextedExceptionTest.testNullExceptionPassing":45,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":249,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":312,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":2,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteDeclaredNamedField":115,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":279,"org.apache.commons.lang3.ArrayUtilsTest.testIsEmptyPrimitives":187,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":71,"org.apache.commons.lang3.mutable.MutableIntTest.testGetSet":186,"org.apache.commons.lang3.builder.DiffResultTest.testListIsNonModifiable":217,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNull":359,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":352,"org.apache.commons.lang3.exception.ContextedExceptionTest.testContextedExceptionString":48,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":311,"org.apache.commons.lang3.ClassUtilsTest.test_getAllInterfaces_Class":99,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArrayEqualAsObject":260,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":355,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":152,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":241,"org.apache.commons.lang3.ValidateTest.testIsAssignable_withMessage":62,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_StrMatcher_int":301,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":273,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":79,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":204,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":257,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":300,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":295,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":147,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetMatchingAccessibleMethod":67,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllLongArrayRemoveNone":113,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":246,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":274,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":297,"org.apache.commons.lang3.ArrayUtilsTest.testSameLengthFloat":110,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":277,"org.apache.commons.lang3.builder.DiffResultTest.testNullRhs":221,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayFloat":191,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_1Part":32,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethodWithEvent":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":179,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":81,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":164,"org.apache.commons.lang3.math.NumberUtilsTest.testMinFloat_nullArray":364,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":353,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":323,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEqualsHashcode":344,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":168,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_double":343,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":224,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_FormattedString":346,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":325,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":148,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":315,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":158,"org.apache.commons.lang3.math.FractionTest.testMultiply":42,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListenerWithPrivateAddMethod":15,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethod":14,"org.apache.commons.lang3.exception.ExceptionUtilsTest.test_getRootCauseMessage_Throwable":95,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetRawType":86,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":269,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":138,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":272,"org.apache.commons.lang3.exception.ContextedExceptionTest.testAddContextValue":50,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":207,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":171,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":310,"org.apache.commons.lang3.math.FractionTest.testDivide":41,"org.apache.commons.lang3.exception.ContextedExceptionTest.testContextedExceptionThrowable":46,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":271,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetSuffix":69,"org.apache.commons.lang3.StringUtilsTest.testRemove_String":27,"org.apache.commons.lang3.ValidateTest.testValidIndex_charSequence":192,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":153,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":146,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":122,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":184,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSizeStartText":229,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":276,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":350,"org.apache.commons.lang3.AnnotationUtilsTest.testNonEquivalentAnnotationsOfSameType":60,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedStaticFieldForceAccess":108,"org.apache.commons.lang3.CharUtilsTest.testToString_char":190,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListener":13,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":150,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":208,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":281,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeMethod":20,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetAllFieldsList":365,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":129,"org.apache.commons.lang3.AnnotationUtilsTest.testSameInstance":54,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":334,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":357,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":253,"org.apache.commons.lang3.ArrayUtilsTest.testReverseBoolean":351,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":73,"org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayOfDoubles":26,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":291,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":335,"org.apache.commons.lang3.AnnotationUtilsTest.testBothArgsNull":59,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":314,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":336,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":143,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":337,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":338,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":358,"org.apache.commons.lang3.LocaleUtilsTest.testThreeCharsLocale":30,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtml":63,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":183,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_2Part":33,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetNullText":90,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":174,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":206,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":259,"org.apache.commons.lang3.AnnotationUtilsTest.testEquivalence":55,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyClass":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":130,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":161,"org.apache.commons.lang3.exception.ContextedExceptionTest.testSetContextValue":51,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":137,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":243,"org.apache.commons.lang3.time.FastDatePrinterTest.testShortDateStyleWithLocales":347,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":65,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":327,"org.apache.commons.lang3.AnnotationUtilsTest.testOneArgNull":52,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":299,"org.apache.commons.lang3.reflect.FieldUtilsTest.testAmbig":103,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetContentEnd":228,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":328,"org.apache.commons.lang3.time.FastDatePrinterTest.testFormat":348,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":85,"org.apache.commons.lang3.ArrayUtilsTest.testToObject_int":64,"org.apache.commons.lang3.builder.CompareToBuilderTest.testInt":83,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":142,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadStaticFieldForceAccess":100,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":251,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":268,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":132,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":157,"org.apache.commons.lang3.builder.DiffResultTest.testNullList":215,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":284,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":3,"org.apache.commons.lang3.builder.DiffBuilderTest.testStylePassedToDiffResult":255,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":239,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":160,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":178,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":151,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_3Part":34,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":211,"org.apache.commons.lang3.math.FractionTest.testReducedFactory_int_int":35,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":360,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeStaticMethod":18,"org.apache.commons.lang3.math.FractionTest.testReduce":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":135,"org.apache.commons.lang3.exception.ContextedExceptionTest.testContextedExceptionStringThrowableContext":47,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":242,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testBlank":203,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":342,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":5,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":278,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":214,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":4,"org.apache.commons.lang3.builder.DiffResultTest.testIterator":219,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":252,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":205,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":167,"org.apache.commons.lang3.builder.DiffResultTest.testNoDifferencesString":216,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":77,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateFloat":117,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":240,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":362,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":75,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":162,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":245,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":145,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":74,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedField":104,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":286,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedStaticField":101,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":121,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":247,"org.apache.commons.lang3.ClassUtilsTest.testGetPublicMethod":98,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":222,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":363,"org.apache.commons.lang3.BooleanUtilsTest.test_toStringYesNo_Boolean":66,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":131,"org.apache.commons.lang3.StringUtilsTest.testIsAllLowerCase":28,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":1,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":264,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":170,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":133,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testArrayList":287,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":313,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":112,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":141,"org.apache.commons.lang3.builder.DiffBuilderTest.testSimilarObjectIgnoresAppends":258,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testBlank":223,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":140,"org.apache.commons.lang3.mutable.MutableFloatTest.testEquals":44,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":290,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":293,"org.apache.commons.lang3.SystemUtilsTest.testOSMatchesNameAndVersion":97,"org.apache.commons.lang3.builder.DiffResultTest.testNullStyle":218,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":308,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":134,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":213,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":70,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_Object":93,"org.apache.commons.lang3.StringUtilsTest.testAppendIfMissing":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":163,"org.apache.commons.lang3.AnnotationUtilsTest.testAnnotationsOfDifferingTypes":56,"org.apache.commons.lang3.math.FractionTest.testFactory_double":38,"org.apache.commons.lang3.mutable.MutableBooleanTest.testCompareTo":91,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":261,"org.apache.commons.lang3.LocaleUtilsTest.testLang328":29,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testCopyOnWriteArrayList":288,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":149,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":124,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementByteArray":188,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":209,"org.apache.commons.lang3.builder.DiffResultTest.testNullLhs":220,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":283,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":302,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetAllFields":366,"org.apache.commons.lang3.ArrayUtilsTest.testToString":201,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":225,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetContentStart":230,"org.apache.commons.lang3.builder.DiffBuilderTest.testNullLhs":266,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":282,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":340,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":341,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_short_short":114,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":125,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSummaryObjectEndText":238,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":356,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":354,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":0,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":256,"org.apache.commons.lang3.ArrayUtilsTest.testSameLengthDouble":116,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":298,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":169,"org.apache.commons.lang3.math.FractionTest.testAdd":36,"org.apache.commons.lang3.builder.DiffBuilderTest.testSameObjectIgnoresAppends":263,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":305,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":306,"org.apache.commons.lang3.exception.ExceptionUtilsTest.test_getMessage_Throwable":96,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetField":102,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":166,"org.apache.commons.lang3.StringUtilsTest.testAppendIfMissingIgnoreCase":24,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSummaryObjectStartText":234,"org.apache.commons.lang3.AnnotationUtilsTest.testHashCode":57,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":139,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeExactStaticMethod":21,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":6,"org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayOfInts":185,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":212,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetArraySeparator":236,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":309,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":339,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":128,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":294,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":254,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":165,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":154,"org.apache.commons.lang3.text.StrTokenizerTest.test8":200,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeExactMethod":19,"org.apache.commons.lang3.text.StrTokenizerTest.test5":197,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGenericArrayType":94,"org.apache.commons.lang3.text.StrTokenizerTest.test4":196,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":155,"org.apache.commons.lang3.text.StrTokenizerTest.test7":199,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":156,"org.apache.commons.lang3.text.StrTokenizerTest.test6":198,"org.apache.commons.lang3.text.StrTokenizerTest.test1":193,"org.apache.commons.lang3.LocaleUtilsTest.testParseAllLocales":31,"org.apache.commons.lang3.text.StrTokenizerTest.test3":195,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":324,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testEndsWith":368,"org.apache.commons.lang3.text.StrTokenizerTest.test2":194,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testSuper":109,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":136,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetFieldSeparator":235,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testLinkedList":289,"org.apache.commons.lang3.mutable.MutableFloatTest.testAddValuePrimitive":189,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":280,"org.apache.commons.lang3.AnnotationUtilsTest.testIsValidAnnotationMemberType":61,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxByte":88,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":227,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":262,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsert":367,"org.apache.commons.lang3.exception.ContextedExceptionTest.testContextedExceptionStringThrowable":49,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetMatchingAccessibleMethod":68,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":303,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyClassEmptyArray":10,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":304,"org.apache.commons.lang3.event.EventUtilsTest.testBindFilteredEventsToMethod":16,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":80,"org.apache.commons.lang3.math.FractionTest.testSubtract":37,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListenerWithNoAddMethod":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":127,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testEndsWithAny":369,"org.apache.commons.lang3.AnnotationUtilsTest.testGeneratedAnnotationEquivalentToRealAnnotation":58,"org.apache.commons.lang3.math.FractionTest.testToProperString":39,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":265,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":159,"org.apache.commons.lang3.math.FractionTest.testPow":9,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":250,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":210,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":292,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveShortArray":345,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":244,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetArrayEnd":233,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":316,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":307,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":318,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":317,"org.apache.commons.lang3.builder.DiffBuilderTest.testNullRhs":267,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":320,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":319,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeExactConstructor":23,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":322,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":173,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":321,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":126,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":333,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetFieldForceAccess":106,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":40,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedField":105,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":144,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":270,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":180,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":119,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedStaticField":107,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetArrayStart":237,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":331,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":330,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":332,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetFieldNameValueSeparator":232,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":329,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":82,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxByte_emptyArray":87,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":326,"org.apache.commons.lang3.reflect.TypeLiteralTest.testRaw":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":181,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":120,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":285,"org.apache.commons.lang3.mutable.MutableBooleanTest.testGetSet":92,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeConstructor":22,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":53,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":361,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":349,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":76,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":123,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":118,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSizeEndText":231,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":182,"org.apache.commons.lang3.ArrayUtilsTest.testToObject_short":111,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":202},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5975","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))"},"failures":[],"tindex":"e6f7f4b6-2ea5-11e6-8950-6fb0a0452321","method":{"position":"org.apache.commons.lang3.event.EventUtils:75","type":"CtMethodImpl","sourcecode":"public static <L>void bindEventsToMethod(final java.lang.Object target, final java.lang.String methodName, final java.lang.Object eventSource, final java.lang.Class<L> listenerType, final java.lang.String... eventTypes) {\n    if ((org.apache.commons.lang3.ArrayUtils.isEmpty(eventSource)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(target))) {\n        {\n            final L L = listenerType.cast(java.lang.reflect.Proxy.newProxyInstance(target.getClass().getClassLoader(), new java.lang.Class[]{ listenerType }, new org.apache.commons.lang3.event.EventUtils.EventBindingInvocationHandler(target , methodName , eventTypes)));\n            org.apache.commons.lang3.event.EventUtils.addEventListener(eventSource, listenerType, listener);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"eventSource","values":"target"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:845","type":"CtBinaryOperatorImpl","sourcecode":"varValue == null"},"failures":[0,1,2,3,3,4,5,6,7,8],"tindex":"e6f8b807-2ea5-11e6-8950-3d73cd8b9d1d","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:801","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final long value) {\n    if (fieldName == null) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, value);\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"varValue":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:888","type":"CtBinaryOperatorImpl","sourcecode":"(comparison) != 0"},"failures":[9],"tindex":"e6f8df18-2ea5-11e6-8950-f5815d1f06a5","method":{"position":"org.apache.commons.lang3.math.Fraction:546","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.math.Fraction pow(final int power) {\n    if (power != 0) {\n        {\n            if (power == 1) {\n                return org.apache.commons.lang3.math.Fraction.this;\n            } else if (power == 0) {\n                return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction;\n            } else if (power < 0) {\n                if (power == (java.lang.Integer.java.lang.Integer.int)) {\n                    return org.apache.commons.lang3.math.Fraction.this.invert().pow(2).pow((-(power / 2)));\n                } \n                return org.apache.commons.lang3.math.Fraction.this.invert().pow((-power));\n            } else {\n                final org.apache.commons.lang3.math.Fraction org.apache.commons.lang3.math.Fraction = org.apache.commons.lang3.math.Fraction.this.multiplyBy(org.apache.commons.lang3.math.Fraction.this);\n                if ((power % 2) == 0) {\n                    return f.pow((power / 2));\n                } else {\n                    return f.pow((power / 2)).multiplyBy(org.apache.commons.lang3.math.Fraction.this);\n                }\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparison":"power"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:520","type":"CtBinaryOperatorImpl","sourcecode":"toClassArray == null"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23],"tindex":"e6f90629-2ea5-11e6-8950-cfd2c63561d6","method":{"position":"org.apache.commons.lang3.ArrayUtils:492","type":"CtMethodImpl","sourcecode":"public static java.lang.Class<?>[] nullToEmpty(final java.lang.Class<?>[] array) {\n    if (array == null) {\n        {\n            if ((array == null) || ((array.int) == 0)) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Class<?>[];\n            } \n            return array;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toClassArray":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:1192","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(seq)"},"failures":[24,25],"tindex":"e6f9062a-2ea5-11e6-8950-353ddf2d37cc","method":{"position":"org.apache.commons.lang3.StringUtils:7411","type":"CtMethodImpl","sourcecode":"private static java.lang.String appendIfMissing(final java.lang.String str, final java.lang.CharSequence suffix, final boolean ignoreCase, final java.lang.CharSequence... suffixes) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(suffix)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((str == null) || (org.apache.commons.lang3.StringUtils.isEmpty(suffix))) || (org.apache.commons.lang3.StringUtils.endsWith(str, suffix, ignoreCase))) {\n                return str;\n            } \n            if ((suffixes != null) && ((suffixes.int) > 0)) {\n                for (final java.lang.CharSequence java.lang.CharSequence : suffixes) {\n                    if (org.apache.commons.lang3.StringUtils.endsWith(str, s, ignoreCase)) {\n                        return str;\n                    } \n                }\n            } \n            return str + (suffix.toString());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"seq":"suffix"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharSequenceUtils:200","type":"CtBinaryOperatorImpl","sourcecode":"c1 == c2"},"failures":[26],"tindex":"e6f92d3b-2ea5-11e6-8950-17f5d8b9fc67","method":{"position":"org.apache.commons.lang3.StringUtils:3527","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final double[] array, final char separator) {\n    if (separator == separator) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            return org.apache.commons.lang3.StringUtils.join(array, separator, 0, array.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c1":"separator","c2":"separator"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:91","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[27],"tindex":"e6f9544c-2ea5-11e6-8950-41a7b108d8ce","method":{"position":"org.apache.commons.lang3.StringUtils:4352","type":"CtMethodImpl","sourcecode":"public static java.lang.String remove(final java.lang.String str, final java.lang.String remove) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(remove))) {\n                return str;\n            } \n            return org.apache.commons.lang3.StringUtils.replace(str, remove, org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String, (-1));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.WordUtils:452","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[28,29,30,31,32,33,34],"tindex":"e6f9544d-2ea5-11e6-8950-81a1c68ddaf6","method":{"position":"org.apache.commons.lang3.StringUtils:6135","type":"CtMethodImpl","sourcecode":"public static boolean isAllLowerCase(final java.lang.CharSequence cs) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(cs)) {\n        {\n            if ((cs == null) || (org.apache.commons.lang3.StringUtils.isEmpty(cs))) {\n                return false;\n            } \n            final int int = cs.length();\n            for (int int = 0 ; i < sz ; i++) {\n                if ((java.lang.Character.isLowerCase(cs.charAt(i))) == false) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"cs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:121","type":"CtBinaryOperatorImpl","sourcecode":"codepoint > 15"},"failures":[35,36,9,37,38,39,40,41,42,43],"tindex":"e6f97b5e-2ea5-11e6-8950-1be252d58082","method":{"position":"org.apache.commons.lang3.math.Fraction:576","type":"CtMethodImpl","sourcecode":"private static int greatestCommonDivisor(int u, int v) {\n    if (v > 15) {\n        {\n            if ((u == 0) || (v == 0)) {\n                if ((u == (java.lang.Integer.java.lang.Integer.int)) || (v == (java.lang.Integer.java.lang.Integer.int))) {\n                    throw new java.lang.ArithmeticException(\"overflow: gcd is 2^31\");\n                } \n                return (java.lang.Math.abs(u)) + (java.lang.Math.abs(v));\n            } \n            if (((java.lang.Math.abs(u)) == 1) || ((java.lang.Math.abs(v)) == 1)) {\n                return 1;\n            } \n            if (u > 0) {\n                u = -u;\n            } \n            if (v > 0) {\n                v = -v;\n            } \n            int int = 0;\n            while ((((u & 1) == 0) && ((v & 1) == 0)) && (k < 31)) {\n                u /= 2;\n                v /= 2;\n                k++;\n            }\n            if (k == 31) {\n                throw new java.lang.ArithmeticException(\"overflow: gcd is 2^31\");\n            } \n            int int = (u & 1) == 1 ? v : -(u / 2);\n            do {\n                while ((t & 1) == 0) {\n                    t /= 2;\n                }\n                if (t > 0) {\n                    u = -t;\n                } else {\n                    v = t;\n                }\n                t = (v - u) / 2;\n            } while (t != 0 );\n            return (-u) * (1 << k);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"codepoint":"v"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.CharUtils:195","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(str)"},"failures":[],"tindex":"e6f9a26f-2ea5-11e6-8950-23059f20cbd4","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1053","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final int[] array) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(fieldName)) {\n        {\n            buffer.append(java.lang.String);\n            for (int int = 0 ; i < (array.int) ; i++) {\n                if (i > 0) {\n                    buffer.append(java.lang.String);\n                } \n                appendDetail(buffer, fieldName, array[i]);\n            }\n            buffer.append(java.lang.String);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2949","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[44],"tindex":"e6f9c980-2ea5-11e6-8950-b7551c8864cf","method":{"position":"org.apache.commons.lang3.mutable.MutableFloat:277","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (obj instanceof org.apache.commons.lang3.mutable.MutableFloat) && ((java.lang.Float.floatToIntBits(((org.apache.commons.lang3.mutable.MutableFloat)(obj)).float)) == (java.lang.Float.floatToIntBits(float)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6502","type":"CtBinaryOperatorImpl","sourcecode":"str1 == null"},"failures":[45,46,47,48,49,50,51],"tindex":"e6f9c981-2ea5-11e6-8950-ad30200c6b87","method":{"position":"org.apache.commons.lang3.exception.ContextedException:253","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.String getFormattedExceptionMessage(final java.lang.String baseMessage) {\n    if (baseMessage == null) {\n        {\n            return org.apache.commons.lang3.exception.ExceptionContext.getFormattedExceptionMessage(baseMessage);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str1":"baseMessage"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:608","type":"CtBinaryOperatorImpl","sourcecode":"(isEquals) == false"},"failures":[52,53,54,55,56,57,58,59,60,61],"tindex":"e6f9f092-2ea5-11e6-8950-4dd212796c1e","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1696","type":"CtMethodImpl","sourcecode":"protected void setDefaultFullDetail(final boolean defaultFullDetail) {\n    if (defaultFullDetail == false) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.this.boolean = defaultFullDetail;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isEquals":"defaultFullDetail"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:1190","type":"CtBinaryOperatorImpl","sourcecode":"interfacesBehavior != (org.apache.commons.lang3.ClassUtils.Interfaces.INCLUDE)"},"failures":[],"tindex":"e6fa17a3-2ea5-11e6-8950-134168f4b551","method":{"position":"org.apache.commons.lang3.reflect.MethodUtils:512","type":"CtMethodImpl","sourcecode":"public static java.util.Set<java.lang.reflect.Method> getOverrideHierarchy(final java.lang.reflect.Method method, org.apache.commons.lang3.ClassUtils.Interfaces interfacesBehavior) {\n    if (interfacesBehavior != interfacesBehavior) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.notNull(method);\n            final java.util.Set<java.lang.reflect.Method> java.util.Set<java.lang.reflect.Method> = new java.util.LinkedHashSet<java.lang.reflect.Method>();\n            result.add(method);\n            final java.lang.Class<?>[] java.lang.Class<?>[] = method.getParameterTypes();\n            final java.lang.Class<?> java.lang.Class<?> = method.getDeclaringClass();\n            final java.util.Iterator<java.lang.Class<?>> java.util.Iterator<java.lang.Class<?>> = org.apache.commons.lang3.ClassUtils.hierarchy(declaringClass, interfacesBehavior).iterator();\n            hierarchy.next();\n            hierarchyTraversal : while (hierarchy.hasNext()) {\n                final java.lang.Class<?> java.lang.Class<?> = hierarchy.next();\n                final java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.getMatchingAccessibleMethod(c, method.getName(), parameterTypes);\n                if (m == null) {\n                    continue;\n                } \n                if (java.util.Arrays.equals(m.getParameterTypes(), parameterTypes)) {\n                    result.add(m);\n                    continue;\n                } \n                final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(declaringClass, m.getDeclaringClass());\n                for (int int = 0 ; i < (parameterTypes.int) ; i++) {\n                    final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(typeArguments, method.getGenericParameterTypes()[i]);\n                    final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(typeArguments, m.getGenericParameterTypes()[i]);\n                    if (!(org.apache.commons.lang3.reflect.TypeUtils.equals(childType, parentType))) {\n                        continue hierarchyTraversal;\n                    } \n                }\n                result.add(m);\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"org.apache.commons.lang3.ClassUtils.Interfaces.INCLUDE":"interfacesBehavior","interfacesBehavior":"interfacesBehavior"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:969","type":"CtInvocationImpl","sourcecode":"cls.equals(superClass)"},"failures":[62],"tindex":"e6fa3eb4-2ea5-11e6-8950-39df6843fd5d","method":{"position":"org.apache.commons.lang3.Validate:1250","type":"CtMethodImpl","sourcecode":"public static void isAssignableFrom(final java.lang.Class<?> superType, final java.lang.Class<?> type, final java.lang.String message, final java.lang.Object... values) {\n    if (superType.equals(superType)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((superType.isAssignableFrom(type)) == false) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(message, values));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"superClass":"superType","cls":"superType"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1013","type":"CtBinaryOperatorImpl","sourcecode":"field == (org.apache.commons.lang3.time.DateUtils.SEMI_MONTH)"},"failures":[],"tindex":"e6fa65c5-2ea5-11e6-8950-55768bc12c85","method":{"position":"org.apache.commons.lang3.time.DateUtils:502","type":"CtMethodImpl","sourcecode":"public static java.util.Date addMilliseconds(final java.util.Date date, final int amount) {\n    if (amount == amount) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.add(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"amount","org.apache.commons.lang3.time.DateUtils.SEMI_MONTH":"amount"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1106","type":"CtBinaryOperatorImpl","sourcecode":"prior != null"},"failures":[63],"tindex":"e6fa65c6-2ea5-11e6-8950-ff9605b94e24","method":{"position":"org.apache.commons.lang3.StringEscapeUtils:591","type":"CtMethodImpl","sourcecode":"public static final java.lang.String escapeHtml4(final java.lang.String input) {\n    if (input != null) {\n        {\n            return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(input);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"prior":"input"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1031","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[64,65],"tindex":"e6fa8cd7-2ea5-11e6-8950-5982f0af4c59","method":{"position":"org.apache.commons.lang3.ArrayUtils:3137","type":"CtMethodImpl","sourcecode":"public static java.lang.Integer[] toObject(final int[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Integer[];\n            } \n            final java.lang.Integer[] java.lang.Integer[] = new java.lang.Integer[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = java.lang.Integer.valueOf(array[i]);\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:466","type":"CtBinaryOperatorImpl","sourcecode":"bool == null"},"failures":[66],"tindex":"e6fa8cd8-2ea5-11e6-8950-1d9425037709","method":{"position":"org.apache.commons.lang3.BooleanUtils:792","type":"CtMethodImpl","sourcecode":"public static java.lang.String toStringYesNo(final java.lang.Boolean bool) {\n    if (bool == null) {\n        {\n            return org.apache.commons.lang3.BooleanUtils.toString(bool, \"yes\", \"no\", null);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"bool":"bool"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:176","type":"CtBinaryOperatorImpl","sourcecode":"cls == null"},"failures":[18,67,20,22,68],"tindex":"e6fab3e9-2ea5-11e6-8950-d3332a3116e1","method":{"position":"org.apache.commons.lang3.reflect.MemberUtils:167","type":"CtMethodImpl","sourcecode":"private static float getPrimitivePromotionCost(final java.lang.Class<?> srcClass, final java.lang.Class<?> destClass) {\n    if (destClass == null) {\n        {\n            float float = 0.0F;\n            java.lang.Class<?> java.lang.Class<?> = srcClass;\n            if (!(cls.isPrimitive())) {\n                cost += 0.1F;\n                cls = org.apache.commons.lang3.ClassUtils.wrapperToPrimitive(cls);\n            } \n            for (int int = 0 ; (cls != destClass) && (i < (org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.java.lang.Class<?>[].int)) ; i++) {\n                if (cls == (org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.java.lang.Class<?>[][i])) {\n                    cost += 0.1F;\n                    if (i < ((org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.java.lang.Class<?>[].int) - 1)) {\n                        cls = org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.java.lang.Class<?>[][(i + 1)];\n                    } \n                } \n            }\n            return cost;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cls":"destClass"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:2073","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[69],"tindex":"e6fadafa-2ea5-11e6-8950-bf08333d4a86","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1071","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrSubstitutor setVariableSuffix(final java.lang.String suffix) {\n    if (suffix == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (suffix == null) {\n                throw new java.lang.IllegalArgumentException(\"Variable suffix must not be null!\");\n            } \n            return setVariableSuffixMatcher(org.apache.commons.lang3.text.StrMatcher.stringMatcher(suffix));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"suffix"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.LookupTranslator:49","type":"CtBinaryOperatorImpl","sourcecode":"lookup != null"},"failures":[70,71,72,73,73,74,75,76,77,78,78,79,80,81,82],"tindex":"e6fadafb-2ea5-11e6-8950-cb54c02fba4f","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:631","type":"CtMethodImpl","sourcecode":"protected void appendSummary(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final java.lang.Object value) {\n    if (value != null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(java.lang.String);\n            buffer.append(getShortClassName(value.getClass()));\n            buffer.append(java.lang.String);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lookup":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.InstantiationException","condition":{"position":"org.apache.commons.lang3.StringUtils:6689","type":"CtBinaryOperatorImpl","sourcecode":"(strs[0]) == null"},"failures":[23],"tindex":"e6fb020c-2ea5-11e6-8950-c520e048188a","method":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:168","type":"CtMethodImpl","sourcecode":"public static <T>T invokeExactConstructor(final java.lang.Class<T> cls, java.lang.Object[] args, java.lang.Class<?>[] parameterTypes) throws java.lang.IllegalAccessException, java.lang.InstantiationException, java.lang.NoSuchMethodException, java.lang.reflect.InvocationTargetException {\n    if ((args[0]) == null) {\n        {\n            args = org.apache.commons.lang3.ArrayUtils.nullToEmpty(args);\n            parameterTypes = org.apache.commons.lang3.ArrayUtils.nullToEmpty(parameterTypes);\n            final java.lang.reflect.Constructor<T> java.lang.reflect.Constructor<T> = org.apache.commons.lang3.reflect.ConstructorUtils.getAccessibleConstructor(cls, parameterTypes);\n            if (ctor == null) {\n                throw new java.lang.NoSuchMethodException((\"No such accessible constructor on object: \" + (cls.getName())));\n            } \n            return ctor.newInstance(args);\n        }\n    } else {\n        throw new java.lang.InstantiationException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"strs":"args"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:451","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"e6fb020d-2ea5-11e6-8950-2307e7fff253","method":{"position":"org.apache.commons.lang3.StringUtils:7030","type":"CtMethodImpl","sourcecode":"private static double score(final java.lang.CharSequence first, final java.lang.CharSequence second) {\n    if (first == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.String java.lang.String;\n            java.lang.String java.lang.String;\n            if ((first.length()) > (second.length())) {\n                longer = first.toString().toLowerCase();\n                shorter = second.toString().toLowerCase();\n            } else {\n                longer = second.toString().toLowerCase();\n                shorter = first.toString().toLowerCase();\n            }\n            final int int = ((shorter.length()) / 2) + 1;\n            final java.lang.String java.lang.String = org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(shorter, longer, halflength);\n            final java.lang.String java.lang.String = org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(longer, shorter, halflength);\n            if (((m1.length()) == 0) || ((m2.length()) == 0)) {\n                return 0.0;\n            } \n            if ((m1.length()) != (m2.length())) {\n                return 0.0;\n            } \n            final int int = org.apache.commons.lang3.StringUtils.transpositions(m1, m2);\n            final double double = ((((m1.length()) / ((double)(shorter.length()))) + ((m2.length()) / ((double)(longer.length())))) + (((m1.length()) - transpositions) / ((double)(m1.length())))) / 3.0;\n            return dist;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"first"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1158","type":"CtBinaryOperatorImpl","sourcecode":"startIndexInclusive < 0"},"failures":[83],"tindex":"e6fb291e-2ea5-11e6-8950-8de5ec8b428d","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:478","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final int lhs, final int rhs) {\n    if (rhs < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            int = lhs < rhs ? -1 : lhs > rhs ? 1 : 0;\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndexInclusive":"rhs"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:99","type":"CtUnaryOperatorImpl","sourcecode":"!(primitiveClass.equals(wrapperClass))"},"failures":[84,85,86],"tindex":"e6fb502f-2ea5-11e6-8950-61a4479d8e29","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:897","type":"CtMethodImpl","sourcecode":"private static java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> getTypeArguments(java.lang.Class<?> cls, final java.lang.Class<?> toClass, final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> subtypeVarAssigns) {\n    if (!(cls.equals(toClass))) {\n        {\n            if (!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(cls, toClass))) {\n                return null;\n            } \n            if (cls.isPrimitive()) {\n                if (toClass.isPrimitive()) {\n                    return new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>();\n                } \n                cls = org.apache.commons.lang3.ClassUtils.primitiveToWrapper(cls);\n            } \n            final java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = subtypeVarAssigns == null ? new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>() : new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>(subtypeVarAssigns);\n            if (toClass.equals(cls)) {\n                return typeVarAssigns;\n            } \n            return org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(org.apache.commons.lang3.reflect.TypeUtils.getClosestParentType(cls, toClass), toClass, typeVarAssigns);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"wrapperClass":"toClass","primitiveClass":"cls"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2293","type":"CtInvocationImpl","sourcecode":"separator.isEmpty()"},"failures":[],"tindex":"e6fb5030-2ea5-11e6-8950-017813028aaf","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:466","type":"CtMethodImpl","sourcecode":"static void register(final java.lang.Object value) {\n    if (value.isEmpty()) {\n        {\n            synchronized(org.apache.commons.lang3.builder.HashCodeBuilder.org.apache.commons.lang3.builder.HashCodeBuilder.java.lang.Class) {\n                if ((org.apache.commons.lang3.builder.HashCodeBuilder.getRegistry()) == null) {\n                    org.apache.commons.lang3.builder.HashCodeBuilder.org.apache.commons.lang3.builder.HashCodeBuilder.java.lang.ThreadLocal<java.util.Set<org.apache.commons.lang3.builder.IDKey>>.set(new java.util.HashSet<org.apache.commons.lang3.builder.IDKey>());\n                } \n            }\n            org.apache.commons.lang3.builder.HashCodeBuilder.getRegistry().add(new org.apache.commons.lang3.builder.IDKey(value));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"separator":"value"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:854","type":"CtBinaryOperatorImpl","sourcecode":"lhs == null"},"failures":[87,88],"tindex":"e6fb7741-2ea5-11e6-8950-7b718ae1e18e","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1005","type":"CtMethodImpl","sourcecode":"public static byte max(final byte[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                {\n                    org.apache.commons.lang3.math.NumberUtils.validateArray(array);\n                    byte byte = array[0];\n                    for (int int = 1 ; i < (array.int) ; i++) {\n                        if ((array[i]) > max) {\n                            max = array[i];\n                        } \n                    }\n                    return max;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1552","type":"CtBinaryOperatorImpl","sourcecode":"0 == nBools"},"failures":[89],"tindex":"e6fb7742-2ea5-11e6-8950-9f7a51a07b6a","method":{"position":"org.apache.commons.lang3.ArrayUtils:1114","type":"CtMethodImpl","sourcecode":"public static double[] subarray(final double[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (0 == endIndexExclusive) {\n        {\n            if (array == null) {\n                return null;\n            } \n            if (startIndexInclusive < 0) {\n                startIndexInclusive = 0;\n            } \n            if (endIndexExclusive > (array.int)) {\n                endIndexExclusive = array.int;\n            } \n            final int int = endIndexExclusive - startIndexInclusive;\n            if (newSize <= 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.double[];\n            } \n            final double[] double[] = new double[newSize];\n            java.lang.System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);\n            return subarray;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nBools":"endIndexExclusive"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:761","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[90],"tindex":"e6fb9e53-2ea5-11e6-8950-e70ef7d8870c","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1969","type":"CtMethodImpl","sourcecode":"protected void setNullText(java.lang.String nullText) {\n    if (nullText == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (nullText == null) {\n                nullText = \"\";\n            } \n            org.apache.commons.lang3.builder.ToStringStyle.this.java.lang.String = nullText;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"nullText"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.FieldUtils:107","type":"CtVariableReadImpl","sourcecode":"forceAccess"},"failures":[91,92],"tindex":"e6fb9e54-2ea5-11e6-8950-db145b4200f4","method":{"position":"org.apache.commons.lang3.mutable.MutableBoolean:87","type":"CtMethodImpl","sourcecode":"public void setValue(final boolean value) {\n    if (value) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.mutable.MutableBoolean.this.boolean = value;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"forceAccess":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:339","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[93],"tindex":"e6fb9e55-2ea5-11e6-8950-67dedf14ad2a","method":{"position":"org.apache.commons.lang3.text.StrBuilder:851","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendln(final java.lang.Object obj) {\n    if (obj == null) {\n        {\n            return append(obj).appendNewLine();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"obj"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:520","type":"CtBinaryOperatorImpl","sourcecode":"toGenericArrayType == null"},"failures":[94],"tindex":"e6fb9e56-2ea5-11e6-8950-637b4176ff06","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1825","type":"CtMethodImpl","sourcecode":"private static java.lang.String genericArrayTypeToString(java.lang.reflect.GenericArrayType g) {\n    if (g == null) {\n        {\n            return java.lang.String.format(\"%s[]\", org.apache.commons.lang3.reflect.TypeUtils.toString(g.getGenericComponentType()));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toGenericArrayType":"g"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:129","type":"CtBinaryOperatorImpl","sourcecode":"crex != null"},"failures":[95,96],"tindex":"e6fbc567-2ea5-11e6-8950-a99a4a7395d3","method":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:671","type":"CtMethodImpl","sourcecode":"public static java.lang.String getMessage(final java.lang.Throwable th) {\n    if (th != null) {\n        {\n            if (th == null) {\n                return \"\";\n            } \n            final java.lang.String java.lang.String = org.apache.commons.lang3.ClassUtils.getShortClassName(th, null);\n            final java.lang.String java.lang.String = th.getMessage();\n            return (clsName + \": \") + (org.apache.commons.lang3.StringUtils.defaultString(msg));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"crex":"th"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:297","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.StringUtils.isEmpty(className)"},"failures":[97],"tindex":"e6fbc568-2ea5-11e6-8950-c993e6414daf","method":{"position":"org.apache.commons.lang3.SystemUtils:1447","type":"CtMethodImpl","sourcecode":"static boolean isOSMatch(final java.lang.String osName, final java.lang.String osVersion, final java.lang.String osNamePrefix, final java.lang.String osVersionPrefix) {\n    if (org.apache.commons.lang3.StringUtils.isEmpty(osVersion)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((osName == null) || (osVersion == null)) {\n                return false;\n            } \n            return (osName.startsWith(osNamePrefix)) && (osVersion.startsWith(osVersionPrefix));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"className":"osVersion"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1597","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.reflect.TypeUtils.equals(p.getRawType(), other.getRawType())) && (org.apache.commons.lang3.reflect.TypeUtils.equals(p.getOwnerType(), other.getOwnerType()))"},"failures":[],"tindex":"e6fbc569-2ea5-11e6-8950-bd849530bb02","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1427","type":"CtMethodImpl","sourcecode":"public static boolean containsTypeVariables(java.lang.reflect.Type type) {\n    if ((org.apache.commons.lang3.reflect.TypeUtils.equals(type.getRawType(), type.getRawType())) && (org.apache.commons.lang3.reflect.TypeUtils.equals(p.getOwnerType(), other.getOwnerType()))) {\n        {\n            if (type instanceof java.lang.reflect.TypeVariable<?>) {\n                return true;\n            } \n            if (type instanceof java.lang.Class<?>) {\n                return (((java.lang.Class<?>)(type)).getTypeParameters().int) > 0;\n            } \n            if (type instanceof java.lang.reflect.ParameterizedType) {\n                for (java.lang.reflect.Type java.lang.reflect.Type : ((java.lang.reflect.ParameterizedType)(type)).getActualTypeArguments()) {\n                    if (org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(arg)) {\n                        return true;\n                    } \n                }\n                return false;\n            } \n            if (type instanceof java.lang.reflect.WildcardType) {\n                java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(type));\n                return (org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(org.apache.commons.lang3.reflect.TypeUtils.getImplicitLowerBounds(wild)[0])) || (org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(wild)[0]));\n            } \n            return false;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"type","other":"type"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:661","type":"CtBinaryOperatorImpl","sourcecode":"falseString == null"},"failures":[],"tindex":"e6fbec7a-2ea5-11e6-8950-15a1c1e36fd6","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:871","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final java.lang.Object[] array, final java.lang.Boolean fullDetail) {\n    if (fieldName == null) {\n        {\n            appendFieldStart(buffer, fieldName);\n            if (array == null) {\n                appendNullText(buffer, fieldName);\n            } else if (isFullDetail(fullDetail)) {\n                appendDetail(buffer, fieldName, array);\n            } else {\n                appendSummary(buffer, fieldName, array);\n            }\n            appendFieldEnd(buffer, fieldName);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"falseString":"fieldName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:357","type":"CtInvocationImpl","sourcecode":"testClass.isArray()"},"failures":[98,99,53,100,101,102,103,104,105,106,107,108],"tindex":"e6fbec7b-2ea5-11e6-8950-3704ec4b7b74","method":{"position":"org.apache.commons.lang3.ClassUtils:369","type":"CtMethodImpl","sourcecode":"private static void getAllInterfaces(java.lang.Class<?> cls, final java.util.HashSet<java.lang.Class<?>> interfacesFound) {\n    if (cls.isArray()) {\n        {\n            while (cls != null) {\n                final java.lang.Class<?>[] java.lang.Class<?>[] = cls.getInterfaces();\n                for (final java.lang.Class<?> java.lang.Class<?> : interfaces) {\n                    if (interfacesFound.add(i)) {\n                        org.apache.commons.lang3.ClassUtils.getAllInterfaces(i, interfacesFound);\n                    } \n                }\n                cls = cls.getSuperclass();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"testClass":"cls"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.lang3.ObjectUtils:585","type":"CtBinaryOperatorImpl","sourcecode":"cmp == max"},"failures":[],"tindex":"e6fbec7c-2ea5-11e6-8950-fdecb6d8c873","method":{"position":"org.apache.commons.lang3.text.translate.CodePointTranslator:36","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic final int translate(final java.lang.CharSequence input, final int index, final java.io.Writer out) throws java.io.IOException {\n    if (index == index) {\n        {\n            final int int = java.lang.Character.codePointAt(input, index);\n            final boolean boolean = translate(codepoint, out);\n            return consumed ? 1 : 0;\n        }\n    } else {\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"max":"index","cmp":"index"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5266","type":"CtBinaryOperatorImpl","sourcecode":"pads <= 0"},"failures":[109],"tindex":"e6fc138d-2ea5-11e6-8950-9380524b316e","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:914","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder appendSuper(final int superHashCode) {\n    if (superHashCode <= 0) {\n        {\n            int = ((int) * (int)) + superHashCode;\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pads":"superHashCode"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:146","type":"CtBinaryOperatorImpl","sourcecode":"(numerator == (java.lang.Integer.MIN_VALUE)) || (denominator == (java.lang.Integer.MIN_VALUE))"},"failures":[],"tindex":"e6fc138e-2ea5-11e6-8950-23151f1c329f","method":{"position":"org.apache.commons.lang3.ArrayUtils:1608","type":"CtMethodImpl","sourcecode":"public static void reverse(final byte[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (endIndexExclusive > 0) {\n        {\n            if ((endIndexExclusive == endIndexExclusive) || (endIndexExclusive == (java.lang.Integer.java.lang.Integer.int))) {\n                {\n                    if (array == null) {\n                        return ;\n                    } \n                    int int = startIndexInclusive < 0 ? 0 : startIndexInclusive;\n                    int int = (java.lang.Math.min(array.int, endIndexExclusive)) - 1;\n                    byte byte;\n                    while (j > i) {\n                        tmp = array[j];\n                        array[j] = array[i];\n                        array[i] = tmp;\n                        j--;\n                        i++;\n                    }\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.lang.Integer.MIN_VALUE":"endIndexExclusive","numerator":"endIndexExclusive","denominator":"endIndexExclusive"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:6025","type":"CtBinaryOperatorImpl","sourcecode":"index >= prevIndex"},"failures":[],"tindex":"e6fcd6df-2ea5-11e6-8950-cba5496d6ae4","method":{"position":"org.apache.commons.lang3.ArrayUtils:5031","type":"CtMethodImpl","sourcecode":"public static int[] removeElement(final int[] array, final int element) {\n    if (element >= element) {\n        {\n            final int int = org.apache.commons.lang3.ArrayUtils.indexOf(array, element);\n            if (index == (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int)) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            return org.apache.commons.lang3.ArrayUtils.remove(array, index);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"prevIndex":"element","index":"element"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2766","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.ArrayUtils.isEmpty(array)"},"failures":[110],"tindex":"e6fcfdf0-2ea5-11e6-8950-e984d549c9e3","method":{"position":"org.apache.commons.lang3.ArrayUtils:1353","type":"CtMethodImpl","sourcecode":"public static boolean isSameLength(final float[] array1, final float[] array2) {\n    if (org.apache.commons.lang3.ArrayUtils.isEmpty(array1)) {\n        {\n            if (((((array1 == null) && (array2 != null)) && ((array2.int) > 0)) || (((array2 == null) && (array1 != null)) && ((array1.int) > 0))) || (((array1 != null) && (array2 != null)) && ((array1.int) != (array2.int)))) {\n                return false;\n            } \n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4945","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[],"tindex":"e6fcfdf1-2ea5-11e6-8950-e9578d6483ac","method":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:84","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.translate.UnicodeEscaper outsideOf(final int codepointLow, final int codepointHigh) {\n    if (codepointLow < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.lang3.text.translate.UnicodeEscaper(codepointLow , codepointHigh , false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"codepointLow"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ClassUtils:99","type":"CtUnaryOperatorImpl","sourcecode":"!(primitiveClass.equals(wrapperClass))"},"failures":[],"tindex":"e6fcfdf2-2ea5-11e6-8950-0159f2cbb608","method":{"position":"org.apache.commons.lang3.ClassPathUtils:106","type":"CtMethodImpl","sourcecode":"public static java.lang.String toFullyQualifiedPath(final java.lang.Class<?> context, final java.lang.String resourceName) {\n    if (!(context.equals(context))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.Validate.notNull(context, \"Parameter '%s' must not be null!\", \"context\");\n            org.apache.commons.lang3.Validate.notNull(resourceName, \"Parameter '%s' must not be null!\", \"resourceName\");\n            return org.apache.commons.lang3.ClassPathUtils.toFullyQualifiedPath(context.getPackage(), resourceName);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"wrapperClass":"context","primitiveClass":"context"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:423","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[0,1,2,3,3,4,5,6,7,8],"tindex":"e6fcfdf3-2ea5-11e6-8950-61202831f93e","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:647","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final long value) {\n    if (fieldName == null) {\n        {\n            appendFieldStart(buffer, fieldName);\n            appendDetail(buffer, fieldName, value);\n            appendFieldEnd(buffer, fieldName);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"fieldName"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2228","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[111,112],"tindex":"e6fd2504-2ea5-11e6-8950-47d20db2eebe","method":{"position":"org.apache.commons.lang3.ArrayUtils:3205","type":"CtMethodImpl","sourcecode":"public static java.lang.Short[] toObject(final short[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Short[];\n            } \n            final java.lang.Short[] java.lang.Short[] = new java.lang.Short[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = java.lang.Short.valueOf(array[i]);\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5534","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))"},"failures":[113],"tindex":"e6fd2505-2ea5-11e6-8950-47732a35a587","method":{"position":"org.apache.commons.lang3.ArrayUtils:5680","type":"CtMethodImpl","sourcecode":"public static long[] removeAll(final long[] array, final int... indices) {\n    if ((org.apache.commons.lang3.ArrayUtils.isEmpty(indices)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(indices))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((long[])(org.apache.commons.lang3.ArrayUtils.removeAll(((java.lang.Object)(array)), org.apache.commons.lang3.ArrayUtils.clone(indices))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"indices","values":"indices"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3162","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[114],"tindex":"e6fd4c16-2ea5-11e6-8950-99aa8acd26a4","method":{"position":"org.apache.commons.lang3.ArrayUtils:3183","type":"CtMethodImpl","sourcecode":"public static short[] toPrimitive(final java.lang.Short[] array, final short valueForNull) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.short[];\n            } \n            final short[] short[] = new short[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                final java.lang.Short java.lang.Short = array[i];\n                result[i] = b == null ? valueForNull : b.shortValue();\n            }\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2002","type":"CtBinaryOperatorImpl","sourcecode":"sizeStartText == null"},"failures":[],"tindex":"e6fd4c17-2ea5-11e6-8950-097b6d0e98e8","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:228","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setArrayEnd(final java.lang.String arrayEnd) {\n    if (arrayEnd == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            super.setArrayEnd(arrayEnd);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sizeStartText":"arrayEnd"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.SerializationUtils:160","type":"CtBinaryOperatorImpl","sourcecode":"out != null"},"failures":[115],"tindex":"e6fd4c18-2ea5-11e6-8950-55df704828ef","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:767","type":"CtMethodImpl","sourcecode":"public static void writeDeclaredField(final java.lang.Object target, final java.lang.String fieldName, final java.lang.Object value) throws java.lang.IllegalAccessException {\n    if (target != null) {\n        throw new java.lang.IllegalAccessException();\n    } else {\n        {\n            org.apache.commons.lang3.reflect.FieldUtils.writeDeclaredField(target, fieldName, value, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"out":"target"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomUtils:142","type":"CtBinaryOperatorImpl","sourcecode":"startInclusive == endInclusive"},"failures":[],"tindex":"e6fd4c19-2ea5-11e6-8950-33d04c1b03e3","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1174","type":"CtMethodImpl","sourcecode":"public static double min(final double a, final double b, final double c) {\n    if (c == b) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.lang.Math.min(java.lang.Math.min(a, b), c);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startInclusive":"c","endInclusive":"b"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1115","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[116],"tindex":"e6fd732a-2ea5-11e6-8950-73077b484a0e","method":{"position":"org.apache.commons.lang3.ArrayUtils:1335","type":"CtMethodImpl","sourcecode":"public static boolean isSameLength(final double[] array1, final double[] array2) {\n    if (array2 == null) {\n        {\n            if (((((array1 == null) && (array2 != null)) && ((array2.int) > 0)) || (((array2 == null) && (array1 != null)) && ((array1.int) > 0))) || (((array1 != null) && (array2 != null)) && ((array1.int) != (array2.int)))) {\n                return false;\n            } \n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array2"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:545","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.WildcardType"},"failures":[94],"tindex":"e6fd732b-2ea5-11e6-8950-3fe7a32f4331","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1558","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.GenericArrayType genericArrayType(final java.lang.reflect.Type componentType) {\n    if (componentType instanceof java.lang.reflect.WildcardType) {\n        {\n            return new org.apache.commons.lang3.reflect.TypeUtils.GenericArrayTypeImpl(org.apache.commons.lang3.Validate.notNull(componentType, \"componentType is null\"));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"componentType"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.SystemUtils:1429","type":"CtBinaryOperatorImpl","sourcecode":"version == null"},"failures":[117],"tindex":"e6fd732c-2ea5-11e6-8950-db1fcee69f92","method":{"position":"org.apache.commons.lang3.math.NumberUtils:655","type":"CtMethodImpl","sourcecode":"public static java.lang.Float createFloat(final java.lang.String str) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (str == null) {\n                return null;\n            } \n            return java.lang.Float.valueOf(str);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"version":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3879","type":"CtBinaryOperatorImpl","sourcecode":"array1 == null"},"failures":[],"tindex":"e6fd9a3d-2ea5-11e6-8950-eb46ab35e838","method":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:609","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ReflectionToStringBuilder reflectionAppendArray(final java.lang.Object array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.getStyle().reflectionAppendArrayDetail(org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.getStringBuffer(), null, array);\n            return org.apache.commons.lang3.builder.ReflectionToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array1":"array"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:373","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[118,118,119],"tindex":"e6fd9a3e-2ea5-11e6-8950-f3ec18517977","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:703","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final short value) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendFieldStart(buffer, fieldName);\n            appendDetail(buffer, fieldName, value);\n            appendFieldEnd(buffer, fieldName);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:183","type":"CtBinaryOperatorImpl","sourcecode":"(tmp.length()) != (duration.length())"},"failures":[120,120],"tindex":"e6fd9a3f-2ea5-11e6-8950-b96e9b5a329b","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:759","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final char value) {\n    if ((fieldName.length()) != (fieldName.length())) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendFieldStart(buffer, fieldName);\n            appendDetail(buffer, fieldName, value);\n            appendFieldEnd(buffer, fieldName);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"duration":"fieldName","tmp":"fieldName"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1581","type":"CtBinaryOperatorImpl","sourcecode":"t1 instanceof java.lang.reflect.WildcardType"},"failures":[],"tindex":"e6fdc150-2ea5-11e6-8950-21698a2be481","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:424","type":"CtMethodImpl","sourcecode":"private static boolean isAssignable(final java.lang.reflect.Type type, final java.lang.reflect.ParameterizedType toParameterizedType, final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> typeVarAssigns) {\n    if (type instanceof java.lang.reflect.WildcardType) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (type == null) {\n                return true;\n            } \n            if (toParameterizedType == null) {\n                return false;\n            } \n            if (toParameterizedType.equals(type)) {\n                return true;\n            } \n            final java.lang.Class<?> java.lang.Class<?> = org.apache.commons.lang3.reflect.TypeUtils.getRawType(toParameterizedType);\n            final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(type, toClass, null);\n            if (fromTypeVarAssigns == null) {\n                return false;\n            } \n            if (fromTypeVarAssigns.isEmpty()) {\n                return true;\n            } \n            final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(toParameterizedType, toClass, typeVarAssigns);\n            for (final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> : toTypeVarAssigns.keySet()) {\n                final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.unrollVariableAssignments(var, toTypeVarAssigns);\n                final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.unrollVariableAssignments(var, fromTypeVarAssigns);\n                if (((fromTypeArg != null) && (!(toTypeArg.equals(fromTypeArg)))) && (!((toTypeArg instanceof java.lang.reflect.WildcardType) && (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(fromTypeArg, toTypeArg, typeVarAssigns))))) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"t1":"type"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:309","type":"CtBinaryOperatorImpl","sourcecode":"i > 0"},"failures":[],"tindex":"e6fdc151-2ea5-11e6-8950-e99ae32b6caf","method":{"position":"org.apache.commons.lang3.ArrayUtils:1608","type":"CtMethodImpl","sourcecode":"public static void reverse(final byte[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (endIndexExclusive > 0) {\n        {\n            if ((endIndexExclusive == endIndexExclusive) || (endIndexExclusive == (java.lang.Integer.java.lang.Integer.int))) {\n                {\n                    if (array == null) {\n                        return ;\n                    } \n                    int int = startIndexInclusive < 0 ? 0 : startIndexInclusive;\n                    int int = (java.lang.Math.min(array.int, endIndexExclusive)) - 1;\n                    byte byte;\n                    while (j > i) {\n                        tmp = array[j];\n                        array[j] = array[i];\n                        array[i] = tmp;\n                        j--;\n                        i++;\n                    }\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"endIndexExclusive"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:671","type":"CtBinaryOperatorImpl","sourcecode":"(isEquals) == false"},"failures":[121,122,123,124,124,125,125,126,127,127,128,73,74,75,75,76,76,77,129,130,131,132,133,134,134,135,135,136,137,118,119,119,138,120,3,4,4,139,140,141,142,142,143,143,144,144,145,146,147,147,148,148,149,149,150,150,151,151,152,152,153,153,154,155,156,157,157,158,158,159,159,160,161,161,162,163,164,164,165,165,166,166,167,168,168,169,170,170,171,172,173,174,174,175,176,176,78,177,178,178,179,179,180,181,181,182,182,183,184,184],"tindex":"e6feabb2-2ea5-11e6-8950-bf95eb098608","method":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:635","type":"CtMethodImpl","sourcecode":"public void setAppendTransients(final boolean appendTransients) {\n    if (appendTransients == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ReflectionToStringBuilder.this.boolean = appendTransients;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isEquals":"appendTransients"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:708","type":"CtBinaryOperatorImpl","sourcecode":"(lhs == null) || (rhs == null)"},"failures":[185],"tindex":"e6fed2c3-2ea5-11e6-8950-453981a4ba5a","method":{"position":"org.apache.commons.lang3.StringUtils:3367","type":"CtMethodImpl","sourcecode":"public static java.lang.String join(final int[] array, final char separator) {\n    if ((array == null) || (array == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            return org.apache.commons.lang3.StringUtils.join(array, separator, 0, array.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array","rhs":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:146","type":"CtBinaryOperatorImpl","sourcecode":"(((org.apache.commons.lang3.StringUtils.isAllLowerCase(split[0])) && (((split[0].length()) == 2) || ((split[0].length()) == 3))) && (((split[1].length()) == 0) || (((split[1].length()) == 2) && (org.apache.commons.lang3.StringUtils.isAllUpperCase(split[1]))))) && ((split[2].length()) > 0)"},"failures":[],"tindex":"e6fed2c4-2ea5-11e6-8950-bd6b924d2dc0","method":{"position":"org.apache.commons.lang3.StringUtils:6682","type":"CtMethodImpl","sourcecode":"public static java.lang.String getCommonPrefix(final java.lang.String... strs) {\n    if ((((org.apache.commons.lang3.StringUtils.isAllLowerCase(strs[0])) && (((split[0].length()) == 2) || ((split[0].length()) == 3))) && (((split[1].length()) == 0) || (((split[1].length()) == 2) && (org.apache.commons.lang3.StringUtils.isAllUpperCase(split[1]))))) && ((split[2].length()) > 0)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((strs == null) || ((strs.int) == 0)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } \n            final int int = org.apache.commons.lang3.StringUtils.indexOfDifference(strs);\n            if (smallestIndexOfDiff == (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int)) {\n                if ((strs[0]) == null) {\n                    return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n                } \n                return strs[0];\n            } else if (smallestIndexOfDiff == 0) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String;\n            } else {\n                return strs[0].substring(0, smallestIndexOfDiff);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"split":"strs"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:766","type":"CtUnaryOperatorImpl","sourcecode":"!(java.util.Arrays.equals(lhs, rhs))"},"failures":[],"tindex":"e6fef9d5-2ea5-11e6-8950-0d10350437c2","method":{"position":"org.apache.commons.lang3.ArrayUtils:370","type":"CtMethodImpl","sourcecode":"public static short[] clone(final short[] array) {\n    if (!(java.util.Arrays.equals(array, array))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            return array.clone();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array","rhs":"array"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:596","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"e6ff20e6-2ea5-11e6-8950-49a11c0d8ac1","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1490","type":"CtMethodImpl","sourcecode":"protected void appendContentEnd(final java.lang.StringBuffer buffer) {\n    if (buffer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(java.lang.String);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"buffer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.RandomStringUtils:265","type":"CtBinaryOperatorImpl","sourcecode":"count == 0"},"failures":[],"tindex":"e6ff20e7-2ea5-11e6-8950-63845c905cb4","method":{"position":"org.apache.commons.lang3.mutable.MutableInt:158","type":"CtMethodImpl","sourcecode":"public void subtract(final int operand) {\n    if (operand == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.mutable.MutableInt.this.int -= operand;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"operand"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:1120","type":"CtBinaryOperatorImpl","sourcecode":"c < a"},"failures":[186],"tindex":"e6ff47f8-2ea5-11e6-8950-ef63a967e2e8","method":{"position":"org.apache.commons.lang3.mutable.MutableInt:96","type":"CtMethodImpl","sourcecode":"public void setValue(final int value) {\n    if (value < value) {\n        {\n            org.apache.commons.lang3.mutable.MutableInt.this.int = value;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"value","c":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3821","type":"CtBinaryOperatorImpl","sourcecode":"array1 == null"},"failures":[187,188],"tindex":"e6ff47f9-2ea5-11e6-8950-1daab480310c","method":{"position":"org.apache.commons.lang3.ArrayUtils:3553","type":"CtMethodImpl","sourcecode":"public static boolean isEmpty(final byte[] array) {\n    if (array == null) {\n        {\n            return (array == null) || ((array.int) == 0);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array1":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:137","type":"CtInvocationImpl","sourcecode":"java.lang.Float.isNaN(a)"},"failures":[189],"tindex":"e6ff47fa-2ea5-11e6-8950-d7e34f842905","method":{"position":"org.apache.commons.lang3.mutable.MutableFloat:156","type":"CtMethodImpl","sourcecode":"public void add(final float operand) {\n    if (java.lang.Float.isNaN(operand)) {\n        {\n            org.apache.commons.lang3.mutable.MutableFloat.this.float += operand;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"operand"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.LocaleUtils:105","type":"CtBinaryOperatorImpl","sourcecode":"ch0 == '_'"},"failures":[190],"tindex":"e6ff47fb-2ea5-11e6-8950-af0ded89b080","method":{"position":"org.apache.commons.lang3.CharUtils:307","type":"CtMethodImpl","sourcecode":"public static java.lang.String toString(final char ch) {\n    if (ch == '_') {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (ch < 128) {\n                return org.apache.commons.lang3.CharUtils.org.apache.commons.lang3.CharUtils.java.lang.String[][ch];\n            } \n            return new java.lang.String(new char[]{ ch });\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ch0":"ch"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.NumberUtils:495","type":"CtBinaryOperatorImpl","sourcecode":"decPos > (-1)"},"failures":[191],"tindex":"e6ff6f0c-2ea5-11e6-8950-691ab66123ef","method":{"position":"org.apache.commons.lang3.ArrayUtils:1154","type":"CtMethodImpl","sourcecode":"public static float[] subarray(final float[] array, int startIndexInclusive, int endIndexExclusive) {\n    if (endIndexExclusive > (-1)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return null;\n            } \n            if (startIndexInclusive < 0) {\n                startIndexInclusive = 0;\n            } \n            if (endIndexExclusive > (array.int)) {\n                endIndexExclusive = array.int;\n            } \n            final int int = endIndexExclusive - startIndexInclusive;\n            if (newSize <= 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.float[];\n            } \n            final float[] float[] = new float[newSize];\n            java.lang.System.arraycopy(array, startIndexInclusive, subarray, 0, newSize);\n            return subarray;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"decPos":"endIndexExclusive"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5080","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[],"tindex":"e6ff961d-2ea5-11e6-8950-61455b8ff069","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:127","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object obj) {\n    if (obj == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (obj == (org.apache.commons.lang3.reflect.TypeUtils.GenericArrayTypeImpl.this)) || ((obj instanceof java.lang.reflect.GenericArrayType) && (org.apache.commons.lang3.reflect.TypeUtils.equals(org.apache.commons.lang3.reflect.TypeUtils.GenericArrayTypeImpl.this, ((java.lang.reflect.GenericArrayType)(obj)))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"obj"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Conversion:1403","type":"CtBinaryOperatorImpl","sourcecode":"(dstPos + i) == append"},"failures":[192],"tindex":"e6ff961e-2ea5-11e6-8950-55ccd594b057","method":{"position":"org.apache.commons.lang3.Validate:776","type":"CtMethodImpl","sourcecode":"public static <T extends java.lang.CharSequence>T validIndex(final T chars, final int index) {\n    if ((index + index) == index) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.Validate.validIndex(chars, index, org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.java.lang.String, java.lang.Integer.valueOf(index));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dstPos":"index","i":"index","append":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:472","type":"CtBinaryOperatorImpl","sourcecode":"(java.lang.Float.floatToIntBits(lhs)) != (java.lang.Float.floatToIntBits(rhs))"},"failures":[],"tindex":"e6ffbd2f-2ea5-11e6-8950-a7001b11a1d1","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:815","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final float value) {\n    if ((java.lang.Float.floatToIntBits(value)) != (java.lang.Float.floatToIntBits(value))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendFieldStart(buffer, fieldName);\n            appendDetail(buffer, fieldName, value);\n            appendFieldEnd(buffer, fieldName);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"value","rhs":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:721","type":"CtFieldReadImpl","sourcecode":"objectsTriviallyEqual"},"failures":[193,194,195,196,197,198,199,200,201,52,53,54,55,56,57,58,59,60,61,202,202,203,203,0,0,204,204,205,205,70,70,121,121,206,206,207,207,208,208,1,1,209,209,210,210,71,71,211,211,212,212,213,214,215,216,217,218,219,220,221,222,222,223,223,2,2,224,224,225,225,72,72,226,226,227,227,228,229,230,90,231,232,233,234,235,236,237,238,122,122,123,123,124,124,125,125,126,126,127,127,128,128,73,73,74,74,75,75,76,76,77,77,129,129,130,130,131,131,132,132,133,133,134,134,135,135,136,136,137,137,118,118,119,119,138,138,120,120,3,3,4,4,139,139,140,140,141,141,142,142,143,143,144,144,145,145,146,146,147,147,148,148,149,149,150,150,151,151,152,152,153,153,154,154,155,155,156,156,157,157,158,158,159,159,160,160,161,161,162,162,163,163,164,164,165,165,166,166,167,167,168,168,169,169,170,170,171,171,172,172,173,173,174,174,175,175,176,176,78,78,177,177,178,178,179,179,180,180,181,181,182,182,183,183,184,184,239,239,240,240,5,5,241,241,242,242,79,79,243,243,244,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,112,262,263,65,264,265,266,267,268,269,270,6,271,272,80,273,274,275,275,276,276,7,7,277,277,278,278,81,81,279,279,280,280,281,281,282,282,8,8,283,283,284,284,82,82,285,285,286,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300],"tindex":"e6ffe440-2ea5-11e6-8950-037ff2487b71","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1654","type":"CtMethodImpl","sourcecode":"protected void setUseIdentityHashCode(final boolean useIdentityHashCode) {\n    if (useIdentityHashCode) {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.this.boolean = useIdentityHashCode;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsTriviallyEqual":"useIdentityHashCode"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6412","type":"CtBinaryOperatorImpl","sourcecode":"maxWidth < 7"},"failures":[],"tindex":"e7000b51-2ea5-11e6-8950-59825e08a834","method":{"position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:84","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.translate.NumericEntityEscaper between(final int codepointLow, final int codepointHigh) {\n    if (codepointHigh < 7) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new org.apache.commons.lang3.text.translate.NumericEntityEscaper(codepointLow , codepointHigh , true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"maxWidth":"codepointHigh"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:730","type":"CtBinaryOperatorImpl","sourcecode":"str == falseString"},"failures":[],"tindex":"e7003262-2ea5-11e6-8950-af508a6c3626","method":{"position":"org.apache.commons.lang3.StringUtils:2930","type":"CtMethodImpl","sourcecode":"public static java.lang.String[] splitPreserveAllTokens(final java.lang.String str, final char separatorChar) {\n    if (str == str) {\n        {\n            return org.apache.commons.lang3.StringUtils.splitWorker(str, separatorChar, true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"str","falseString":"str"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1158","type":"CtBinaryOperatorImpl","sourcecode":"startIndexInclusive < 0"},"failures":[301],"tindex":"e7003263-2ea5-11e6-8950-8d9869a8c7a8","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2512","type":"CtMethodImpl","sourcecode":"public int lastIndexOf(final org.apache.commons.lang3.text.StrMatcher matcher, int startIndex) {\n    if (startIndex < 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            startIndex = startIndex >= (int) ? (int) - 1 : startIndex;\n            if ((matcher == null) || (startIndex < 0)) {\n                return -1;\n            } \n            final char[] char[] = char[];\n            final int int = startIndex + 1;\n            for (int int = startIndex ; i >= 0 ; i--) {\n                if ((matcher.isMatch(buf, i, 0, endIndex)) > 0) {\n                    return i;\n                } \n            }\n            return -1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndexInclusive":"startIndex"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3566","type":"CtBinaryOperatorImpl","sourcecode":"noOfItems <= 0"},"failures":[302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,193,194,195,196,197,198,199,200,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342],"tindex":"e7005974-2ea5-11e6-8950-09a02fd594fe","method":{"position":"org.apache.commons.lang3.text.StrTokenizer:685","type":"CtMethodImpl","sourcecode":"private int readNextToken(final char[] srcChars, int start, final int len, final org.apache.commons.lang3.text.StrBuilder workArea, final java.util.List<java.lang.String> tokenList) {\n    if (start <= 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            while (start < len) {\n                final int int = java.lang.Math.max(getIgnoredMatcher().isMatch(srcChars, start, start, len), getTrimmerMatcher().isMatch(srcChars, start, start, len));\n                if (((removeLen == 0) || ((getDelimiterMatcher().isMatch(srcChars, start, start, len)) > 0)) || ((getQuoteMatcher().isMatch(srcChars, start, start, len)) > 0)) {\n                    break;\n                } \n                start += removeLen;\n            }\n            if (start >= len) {\n                addToken(tokenList, \"\");\n                return -1;\n            } \n            final int int = getDelimiterMatcher().isMatch(srcChars, start, start, len);\n            if (delimLen > 0) {\n                addToken(tokenList, \"\");\n                return start + delimLen;\n            } \n            final int int = getQuoteMatcher().isMatch(srcChars, start, start, len);\n            if (quoteLen > 0) {\n                return readWithQuotes(srcChars, (start + quoteLen), len, workArea, tokenList, start, quoteLen);\n            } \n            return readWithQuotes(srcChars, start, len, workArea, tokenList, 0, 0);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"noOfItems":"start"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4878","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(searchChars))"},"failures":[],"tindex":"e700f5b5-2ea5-11e6-8950-ddc719e79c19","method":{"position":"org.apache.commons.lang3.ArrayUtils:4247","type":"CtMethodImpl","sourcecode":"private static java.lang.Object copyArrayGrow1(final java.lang.Object array, final java.lang.Class<?> newArrayComponentType) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(array)) || (org.apache.commons.lang3.StringUtils.isEmpty(array))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array != null) {\n                final int int = java.lang.reflect.Array.getLength(array);\n                final java.lang.Object java.lang.Object = java.lang.reflect.Array.newInstance(array.getClass().getComponentType(), (arrayLength + 1));\n                java.lang.System.arraycopy(array, 0, newArray, 0, arrayLength);\n                return newArray;\n            } \n            return java.lang.reflect.Array.newInstance(newArrayComponentType, 1);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"array","searchChars":"array"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3320","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[343],"tindex":"e700f5b6-2ea5-11e6-8950-511fe882dfbf","method":{"position":"org.apache.commons.lang3.ArrayUtils:3297","type":"CtMethodImpl","sourcecode":"public static double[] toPrimitive(final java.lang.Double[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.double[];\n            } \n            final double[] double[] = new double[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = array[i].doubleValue();\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:848","type":"CtBinaryOperatorImpl","sourcecode":"(obj instanceof org.apache.commons.lang3.math.Fraction) == false"},"failures":[344],"tindex":"e7011cc7-2ea5-11e6-8950-97ad03d3a60c","method":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:263","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(final java.lang.Object obj) {\n    if ((obj instanceof org.apache.commons.lang3.math.Fraction) == false) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (obj == (org.apache.commons.lang3.text.ExtendedMessageFormat.this)) {\n                return true;\n            } \n            if (obj == null) {\n                return false;\n            } \n            if (!(super.equals(obj))) {\n                return false;\n            } \n            if (org.apache.commons.lang3.ObjectUtils.notEqual(getClass(), obj.getClass())) {\n                return false;\n            } \n            final org.apache.commons.lang3.text.ExtendedMessageFormat org.apache.commons.lang3.text.ExtendedMessageFormat = ((org.apache.commons.lang3.text.ExtendedMessageFormat)(obj));\n            if (org.apache.commons.lang3.ObjectUtils.notEqual(java.lang.String, rhs.java.lang.String)) {\n                return false;\n            } \n            if (org.apache.commons.lang3.ObjectUtils.notEqual(java.util.Map<java.lang.String, ? extends org.apache.commons.lang3.text.FormatFactory>, rhs.java.util.Map<java.lang.String, ? extends org.apache.commons.lang3.text.FormatFactory>)) {\n                return false;\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"obj"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:728","type":"CtBinaryOperatorImpl","sourcecode":"(comparison) != 0"},"failures":[345],"tindex":"e70143d8-2ea5-11e6-8950-d5489545cea2","method":{"position":"org.apache.commons.lang3.ArrayUtils:5132","type":"CtMethodImpl","sourcecode":"public static short[] remove(final short[] array, final int index) {\n    if (index != 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((short[])(org.apache.commons.lang3.ArrayUtils.remove(((java.lang.Object)(array)), index)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparison":"index"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:221","type":"CtInvocationImpl","sourcecode":"java.lang.Double.isNaN(a)"},"failures":[],"tindex":"e70143d9-2ea5-11e6-8950-5ff4e6af6186","method":{"position":"org.apache.commons.lang3.ObjectUtils:934","type":"CtMethodImpl","sourcecode":"public static double CONST(final double v) {\n    if (java.lang.Double.isNaN(v)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return v;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"v"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:4878","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(searchChars))"},"failures":[],"tindex":"e7016aea-2ea5-11e6-8950-31809c3a692d","method":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:126","type":"CtMethodImpl","sourcecode":"public static java.lang.String formatDuration(final long durationMillis, final java.lang.String format, final boolean padWithZeros) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(format)) || (org.apache.commons.lang3.StringUtils.isEmpty(format))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final org.apache.commons.lang3.time.DurationFormatUtils.Token[] org.apache.commons.lang3.time.DurationFormatUtils.Token[] = org.apache.commons.lang3.time.DurationFormatUtils.lexx(format);\n            long long = 0;\n            long long = 0;\n            long long = 0;\n            long long = 0;\n            long long = durationMillis;\n            if (org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(tokens, org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n                days = milliseconds / (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.long);\n                milliseconds = milliseconds - (days * (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.long));\n            } \n            if (org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(tokens, org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n                hours = milliseconds / (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.long);\n                milliseconds = milliseconds - (hours * (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.long));\n            } \n            if (org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(tokens, org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n                minutes = milliseconds / (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.long);\n                milliseconds = milliseconds - (minutes * (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.long));\n            } \n            if (org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(tokens, org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n                seconds = milliseconds / (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.long);\n                milliseconds = milliseconds - (seconds * (org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.long));\n            } \n            return org.apache.commons.lang3.time.DurationFormatUtils.format(tokens, 0, 0, days, hours, minutes, seconds, milliseconds, padWithZeros);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"format","searchChars":"format"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:640","type":"CtBinaryOperatorImpl","sourcecode":"lhs != rhs"},"failures":[],"tindex":"e701b90b-2ea5-11e6-8950-1fb7a1ce72ce","method":{"position":"org.apache.commons.lang3.Validate:943","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"boxing\")\npublic static void inclusiveBetween(long start, long end, long value) {\n    if (start != value) {\n        {\n            if ((value < start) || (value > end)) {\n                throw new java.lang.IllegalArgumentException(java.lang.String.format(org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.java.lang.String, value, start, end));\n            } \n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"start","rhs":"value"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2805","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[346],"tindex":"e701b90c-2ea5-11e6-8950-2bbd03aa81ed","method":{"position":"org.apache.commons.lang3.text.StrBuilder:890","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder appendln(final java.lang.String format, final java.lang.Object... objs) {\n    if (format == null) {\n        {\n            return append(format, objs).appendNewLine();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"format"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1158","type":"CtBinaryOperatorImpl","sourcecode":"startIndexInclusive < 0"},"failures":[],"tindex":"e701e01d-2ea5-11e6-8950-df9bd81644f2","method":{"position":"org.apache.commons.lang3.time.DateUtils:1761","type":"CtMethodImpl","sourcecode":"public static int truncatedCompareTo(final java.util.Calendar cal1, final java.util.Calendar cal2, final int field) {\n    if (field < 0) {\n        {\n            final java.util.Calendar java.util.Calendar = org.apache.commons.lang3.time.DateUtils.truncate(cal1, field);\n            final java.util.Calendar java.util.Calendar = org.apache.commons.lang3.time.DateUtils.truncate(cal2, field);\n            return truncatedCal1.compareTo(truncatedCal2);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"startIndexInclusive":"field"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:109","type":"CtBinaryOperatorImpl","sourcecode":"(codepoint >= (below)) && (codepoint <= (above))"},"failures":[],"tindex":"e701e01e-2ea5-11e6-8950-6d5b7ef7a06b","method":{"position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:95","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.translate.NumericEntityEscaper outsideOf(final int codepointLow, final int codepointHigh) {\n    if ((codepointHigh >= codepointHigh) && (codepoint <= codepointLow)) {\n        {\n            return new org.apache.commons.lang3.text.translate.NumericEntityEscaper(codepointLow , codepointHigh , false);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"codepoint":"codepointHigh","below":"codepointHigh","above":"codepointLow"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:1156","type":"CtBinaryOperatorImpl","sourcecode":"focus == null"},"failures":[347,348,349,350],"tindex":"e702072f-2ea5-11e6-8950-1bae925f3038","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:943","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n    if (calendar == null) {\n        {\n            appendTo(buffer, ((calendar.get(java.util.Calendar.java.util.Calendar.int)) % 100));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"focus":"calendar"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:119","type":"CtBinaryOperatorImpl","sourcecode":"codepoint > 255"},"failures":[],"tindex":"e7020730-2ea5-11e6-8950-450a473991cd","method":{"position":"org.apache.commons.lang3.text.StrBuilder:2162","type":"CtMethodImpl","sourcecode":"public java.lang.String substring(final int startIndex, int endIndex) {\n    if (endIndex > 255) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            endIndex = validateRange(startIndex, endIndex);\n            return new java.lang.String(char[] , startIndex , (endIndex - startIndex));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"codepoint":"endIndex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.FastDateParser:340","type":"CtVariableReadImpl","sourcecode":"unquote"},"failures":[217,218,219,220,221,256],"tindex":"e7022e41-2ea5-11e6-8950-cff76c7c43de","method":{"position":"org.apache.commons.lang3.builder.DiffBuilder:129","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.DiffBuilder append(final java.lang.String fieldName, final boolean lhs, final boolean rhs) {\n    if (rhs) {\n        {\n            if (fieldName == null) {\n                throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n            } \n            if (boolean) {\n                return org.apache.commons.lang3.builder.DiffBuilder.this;\n            } \n            if (lhs != rhs) {\n                java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Boolean>(fieldName) {\n                    private static final long serialVersionUID = 1L;\n\n                    @java.lang.Override\n                    public java.lang.Boolean getLeft() {\n                        return java.lang.Boolean.valueOf(lhs);\n                    }\n\n                    @java.lang.Override\n                    public java.lang.Boolean getRight() {\n                        return java.lang.Boolean.valueOf(rhs);\n                    }\n                });\n            } \n            return org.apache.commons.lang3.builder.DiffBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"unquote":"rhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:891","type":"CtBinaryOperatorImpl","sourcecode":"lhs == rhs"},"failures":[351],"tindex":"e7025552-2ea5-11e6-8950-0ff51cb00248","method":{"position":"org.apache.commons.lang3.ArrayUtils:1547","type":"CtMethodImpl","sourcecode":"public static void reverse(final boolean[] array) {\n    if (array == array) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                return ;\n            } \n            org.apache.commons.lang3.ArrayUtils.reverse(array, 0, array.int);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"array","rhs":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:145","type":"CtBinaryOperatorImpl","sourcecode":"denominator < 0"},"failures":[352,353,354,355,356,357,358,359,360,361,362,363],"tindex":"e7025553-2ea5-11e6-8950-45c77e96629c","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:455","type":"CtMethodImpl","sourcecode":"public java.lang.String replace(final char[] source, final int offset, final int length) {\n    if (length < 0) {\n        {\n            if (source == null) {\n                return null;\n            } \n            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(length).append(source, offset, length);\n            substitute(buf, 0, length);\n            return buf.toString();\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"denominator":"length"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:182","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[364],"tindex":"e7027c64-2ea5-11e6-8950-593fd8514aad","method":{"position":"org.apache.commons.lang3.math.NumberUtils:908","type":"CtMethodImpl","sourcecode":"public static float min(final float[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.math.NumberUtils.validateArray(array);\n            float float = array[0];\n            for (int int = 1 ; i < (array.int) ; i++) {\n                if (java.lang.Float.isNaN(array[i])) {\n                    return java.lang.Float.java.lang.Float.float;\n                } \n                if ((array[i]) < min) {\n                    min = array[i];\n                } \n            }\n            return min;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1745","type":"CtBinaryOperatorImpl","sourcecode":"(c.getEnclosingClass()) != null"},"failures":[365,366],"tindex":"e7027c65-2ea5-11e6-8950-391a3966b382","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:211","type":"CtMethodImpl","sourcecode":"public static java.util.List<java.lang.reflect.Field> getAllFieldsList(java.lang.Class<?> cls) {\n    if ((cls.getEnclosingClass()) != null) {\n        {\n            org.apache.commons.lang3.Validate.isTrue((cls != null), \"The class must not be null\");\n            final java.util.List<java.lang.reflect.Field> java.util.List<java.lang.reflect.Field> = new java.util.ArrayList<java.lang.reflect.Field>();\n            java.lang.Class<?> java.lang.Class<?> = cls;\n            while (currentClass != null) {\n                final java.lang.reflect.Field[] java.lang.reflect.Field[] = currentClass.getDeclaredFields();\n                for (java.lang.reflect.Field java.lang.reflect.Field : declaredFields) {\n                    allFields.add(field);\n                }\n                currentClass = currentClass.getSuperclass();\n            }\n            return allFields;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"cls"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2069","type":"CtBinaryOperatorImpl","sourcecode":"start < 0"},"failures":[367],"tindex":"e702a376-2ea5-11e6-8950-4d3716c90e25","method":{"position":"org.apache.commons.lang3.text.StrBuilder:1635","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder insert(final int index, final long value) {\n    if (index < 0) {\n        {\n            return insert(index, java.lang.String.valueOf(value));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"index"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:969","type":"CtInvocationImpl","sourcecode":"cls.equals(superClass)"},"failures":[],"tindex":"e702ca87-2ea5-11e6-8950-1fb3b555df82","method":{"position":"org.apache.commons.lang3.reflect.TypeUtils:957","type":"CtMethodImpl","sourcecode":"public static java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> determineTypeArguments(final java.lang.Class<?> cls, final java.lang.reflect.ParameterizedType superType) {\n    if (cls.equals(cls)) {\n        {\n            org.apache.commons.lang3.Validate.notNull(cls, \"cls is null\");\n            org.apache.commons.lang3.Validate.notNull(superType, \"superType is null\");\n            final java.lang.Class<?> java.lang.Class<?> = org.apache.commons.lang3.reflect.TypeUtils.getRawType(superType);\n            if (!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(cls, superClass))) {\n                return null;\n            } \n            if (cls.equals(superClass)) {\n                return org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(superType, superClass, null);\n            } \n            final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.getClosestParentType(cls, superClass);\n            if (midType instanceof java.lang.Class<?>) {\n                return org.apache.commons.lang3.reflect.TypeUtils.determineTypeArguments(((java.lang.Class<?>)(midType)), superType);\n            } \n            final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(midType));\n            final java.lang.Class<?> java.lang.Class<?> = org.apache.commons.lang3.reflect.TypeUtils.getRawType(midParameterizedType);\n            final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = org.apache.commons.lang3.reflect.TypeUtils.determineTypeArguments(midClass, superType);\n            org.apache.commons.lang3.reflect.TypeUtils.mapTypeVariablesToArguments(cls, midParameterizedType, typeVarAssigns);\n            return typeVarAssigns;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"superClass":"cls","cls":"cls"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1075","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[],"tindex":"e702ca88-2ea5-11e6-8950-49b9aafde2a8","method":{"position":"org.apache.commons.lang3.math.NumberUtils:1005","type":"CtMethodImpl","sourcecode":"public static byte max(final byte[] array) {\n    if (array == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (array == null) {\n                {\n                    org.apache.commons.lang3.math.NumberUtils.validateArray(array);\n                    byte byte = array[0];\n                    for (int int = 1 ; i < (array.int) ; i++) {\n                        if ((array[i]) > max) {\n                            max = array[i];\n                        } \n                    }\n                    return max;\n                }\n            } else {\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1454","type":"CtFieldReadImpl","sourcecode":"useShortClassName"},"failures":[368,369,25],"tindex":"e702f199-2ea5-11e6-8950-e3d880e022eb","method":{"position":"org.apache.commons.lang3.StringUtils:7311","type":"CtMethodImpl","sourcecode":"private static boolean endsWith(final java.lang.CharSequence str, final java.lang.CharSequence suffix, final boolean ignoreCase) {\n    if (ignoreCase) {\n        {\n            if ((str == null) || (suffix == null)) {\n                return (str == null) && (suffix == null);\n            } \n            if ((suffix.length()) > (str.length())) {\n                return false;\n            } \n            final int int = (str.length()) - (suffix.length());\n            return org.apache.commons.lang3.CharSequenceUtils.regionMatches(str, ignoreCase, strOffset, suffix, 0, suffix.length());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"useShortClassName":"ignoreCase"},"type":"special","returnInThen":true,"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}