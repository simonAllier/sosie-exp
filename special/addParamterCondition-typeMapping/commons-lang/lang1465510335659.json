{"failureDictionary":{"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":115,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":101,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":103,"org.apache.commons.lang3.SerializationUtilsTest.testDeserializeBytesOfNull":173,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":97,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":100,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":116,"org.apache.commons.lang3.time.DateUtilsTest.testIsSameInstant_Cal":227,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementLongArray":195,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCode":140,"org.apache.commons.lang3.SerializationUtilsTest.testDeserializeBytesBadStream":169,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testFloatArrayAsObject":215,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testDoubleArrayAsObject":217,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiBooleanArray":25,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddDash":146,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":77,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiDoubleArray":32,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":10,"org.apache.commons.lang3.StringUtilsTest.testSplitByCharacterType":13,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":123,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testObjectArray":211,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testByteArrayAsObject":223,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":72,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_primitive_emptyInput":187,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":11,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":15,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":182,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCyclicalObjectReferences":131,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_primitive_validInput_3items":186,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":105,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":89,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":93,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":83,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang303":163,"org.apache.commons.lang3.builder.CompareToBuilderTest.testFloat":1,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":4,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testObject":221,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testLongArrayAsObject":222,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiFloatArray":26,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":60,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":8,"org.apache.commons.lang3.exception.ContextedExceptionTest.testJavaSerialization":168,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":96,"org.apache.commons.lang3.builder.EqualsBuilderTest.testObjectArray":19,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":181,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOf_char":188,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":7,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionCompare":136,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testJavaSerialization":166,"org.apache.commons.lang3.builder.CompareToBuilderTest.testFloatArray":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":78,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiShortArray":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":71,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testShortArrayAsObject":224,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":37,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":110,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiFloatArray":2,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionArrays":21,"org.apache.commons.lang3.AnnotationUtilsTest.testNonEquivalentAnnotationsOfSameType":207,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHierarchyHashCode":139,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedStaticFieldForceAccess":112,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":75,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiCharArray":20,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiByteArray":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":49,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCodeExcludeFields":141,"org.apache.commons.lang3.AnnotationUtilsTest.testSameInstance":201,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testStartsWithIgnoreCase":189,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":120,"org.apache.commons.lang3.time.DateUtilsTest.testAddWeeks":154,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":44,"org.apache.commons.lang3.time.FastDateParserTest.testLang303":165,"org.apache.commons.lang3.AnnotationUtilsTest.testBothArgsNull":206,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":68,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":109,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":99,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":17,"org.apache.commons.lang3.AnnotationUtilsTest.testEquivalence":202,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":50,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":57,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":111,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionHierarchyEquals":133,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testCharArrayAsObject":213,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":126,"org.apache.commons.lang3.ArrayUtilsTest.testContains":152,"org.apache.commons.lang3.ArrayUtilsTest.testToObject_long":194,"org.apache.commons.lang3.AnnotationUtilsTest.testOneArgNull":199,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEqualsExcludeFields":132,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":67,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":118,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":129,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":52,"org.apache.commons.lang3.builder.EqualsBuilderTest.testRaggedArray":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":82,"org.apache.commons.lang3.BooleanUtilsTest.test_toIntegerObject_boolean_Integer_Integer":193,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":62,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testInteger":145,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":85,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":76,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionObjectCycle":138,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":35,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseUncheckedError":158,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":55,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixture":143,"org.apache.commons.lang3.ConversionTest.testLongToHex":209,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang303":162,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testBooleanMultiArray":219,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayToObjectArray":192,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testObjectBuild":212,"org.apache.commons.lang3.StringUtilsTest.testSplitByCharacterTypeCamelCase":14,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":36,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":63,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":119,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_object_validInput_3items":184,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testToHashCodeEqualsHashCode":220,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":92,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":48,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":87,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseUncheckedChecked":160,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":113,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":70,"org.apache.commons.lang3.ArrayUtilsTest.testIsEquals":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":45,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":114,"org.apache.commons.lang3.BooleanUtilsTest.test_toInteger_boolean":190,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":51,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_primitive_validInput_2items":185,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang303":164,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":127,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiIntArray":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":95,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllShortArrayOutOfBoundsIndex":177,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":53,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":125,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":66,"org.apache.commons.lang3.SerializationUtilsTest.testDeserializeBytes":170,"org.apache.commons.lang3.builder.DiffBuilderTest.testSimilarObjectIgnoresAppends":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":65,"org.apache.commons.lang3.SerializationUtilsTest.testDeserializeClassCastException":172,"org.apache.commons.lang3.SerializationUtilsTest.testRoundtrip":171,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":54,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseUncheckedError":157,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":175,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":88,"org.apache.commons.lang3.AnnotationUtilsTest.testAnnotationsOfDifferingTypes":203,"org.apache.commons.lang3.mutable.MutableBooleanTest.testCompareTo":197,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testIntArrayAsObject":216,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":124,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":74,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":39,"org.apache.commons.lang3.builder.EqualsBuilderTest.testObjectArrayHiddenByObject":23,"org.apache.commons.lang3.reflect.InheritanceUtilsTest.testDistanceGreaterThanZero":191,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseUncheckedNull":161,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":40,"org.apache.commons.lang3.builder.CompareToBuilderTest.testFloatArrayHiddenByObject":3,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":122,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_object_validInput_2items":183,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testBooleanArrayAsObject":225,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":94,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseUncheckedNullCause":156,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddNegate":150,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":91,"org.apache.commons.lang3.AnnotationUtilsTest.testHashCode":204,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":64,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":102,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testJavaSerialization":167,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":6,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetArraySeparator":12,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareExcludeFields":134,"org.apache.commons.lang3.CharSetTest.testStatics":151,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseUncheckedNull":155,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetFirstContextValue":230,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":43,"org.apache.commons.lang3.builder.EqualsBuilderTest.testNpeForNullElement":30,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":121,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":90,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddCombinations":148,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":79,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":80,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllShortArrayNegativeIndex":176,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":81,"org.apache.commons.lang3.ClassUtilsTest.testGetClassInvalidArguments":210,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":56,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testSuper":214,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testIntegerWithTransients":142,"org.apache.commons.lang3.AnnotationUtilsTest.testIsValidAnnotationMemberType":208,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":18,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":153,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareTransients":137,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":9,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testObjectArrayAsObject":218,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEquals":130,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang538":174,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":42,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllShortArray":179,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetContextValues":231,"org.apache.commons.lang3.AnnotationUtilsTest.testGeneratedAnnotationEquivalentToRealAnnotation":205,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":128,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testAddContextValue":228,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":84,"org.apache.commons.lang3.BooleanUtilsTest.test_toStringYesNo_boolean":180,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":117,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllShortArrayRemoveNone":178,"org.apache.commons.lang3.CharSetTest.testConstructor_String_combo":147,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixtureWithTransients":144,"org.apache.commons.lang3.ArrayUtilsTest.testHashCode":226,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":98,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":41,"org.apache.commons.lang3.builder.EqualsBuilderTest.testUnrelatedClasses":29,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseUncheckedChecked":159,"org.apache.commons.lang3.ConversionTest.testLongToIntArray":196,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":69,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":106,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":59,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompare":135,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiLongArray":31,"org.apache.commons.lang3.CharSetTest.testConstructor_String_comboNegated":149,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":107,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":61,"org.apache.commons.lang3.mutable.MutableBooleanTest.testGetSet":198,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":200,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testSetContextValue":229,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":38,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMixedArray":27,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":108},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:140","type":"CtInvocationImpl","sourcecode":"java.lang.Float.isNaN(b)"},"failures":[0,1,2,3],"tindex":"3950dab4-2e8f-11e6-a244-775933eba042","method":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:568","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.CompareToBuilder append(final float lhs, final float rhs) {\n    if (java.lang.Float.isNaN(lhs)) {\n        {\n            if ((int) != 0) {\n                return org.apache.commons.lang3.builder.CompareToBuilder.this;\n            } \n            int = java.lang.Float.compare(lhs, rhs);\n            return org.apache.commons.lang3.builder.CompareToBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"lhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.JavaVersion:140","type":"CtInvocationImpl","sourcecode":"\"1.4\".equals(nom)"},"failures":[4,5,6,7,8,9,10,11,12],"tindex":"39519e05-2e8f-11e6-a244-6de1467a00f4","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1791","type":"CtMethodImpl","sourcecode":"protected void setArraySeparator(java.lang.String arraySeparator) {\n    if (\"1.4\".equals(arraySeparator)) {\n        {\n            if (arraySeparator == null) {\n                arraySeparator = \"\";\n            } \n            org.apache.commons.lang3.builder.ToStringStyle.this.java.lang.String = arraySeparator;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nom":"arraySeparator"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:647","type":"CtBinaryOperatorImpl","sourcecode":"excludeFieldNamesParam == null"},"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"tindex":"3951c516-2e8f-11e6-a244-7b360312fb1f","method":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:639","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.EqualsBuilder append(final java.lang.Object[] lhs, final java.lang.Object[] rhs) {\n    if (lhs == null) {\n        {\n            if ((boolean) == false) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if (lhs == rhs) {\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if ((lhs == null) || (rhs == null)) {\n                org.apache.commons.lang3.builder.EqualsBuilder.this.setEquals(false);\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            if ((lhs.int) != (rhs.int)) {\n                org.apache.commons.lang3.builder.EqualsBuilder.this.setEquals(false);\n                return org.apache.commons.lang3.builder.EqualsBuilder.this;\n            } \n            for (int int = 0 ; (i < (lhs.int)) && (boolean) ; ++i) {\n                append(lhs[i], rhs[i]);\n            }\n            return org.apache.commons.lang3.builder.EqualsBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"excludeFieldNamesParam":"lhs"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:495","type":"CtVariableReadImpl","sourcecode":"detail"},"failures":[35,36,37,38,39,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111],"tindex":"3951ec27-2e8f-11e6-a244-b74ebec424af","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:843","type":"CtMethodImpl","sourcecode":"public void append(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final boolean value) {\n    if (value) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            appendFieldStart(buffer, fieldName);\n            appendDetail(buffer, fieldName, value);\n            appendFieldEnd(buffer, fieldName);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"detail":"value"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"org.apache.commons.lang3.StringUtils:3150","type":"CtBinaryOperatorImpl","sourcecode":"match || (preserveAllTokens && lastMatch)"},"failures":[112],"tindex":"39521338-2e8f-11e6-a244-1b83166cf0b5","method":{"position":"org.apache.commons.lang3.reflect.FieldUtils:296","type":"CtMethodImpl","sourcecode":"public static java.lang.Object readStaticField(final java.lang.Class<?> cls, final java.lang.String fieldName, final boolean forceAccess) throws java.lang.IllegalAccessException {\n    if (forceAccess || (forceAccess && forceAccess)) {\n        throw new java.lang.IllegalAccessException();\n    } else {\n        {\n            final java.lang.reflect.Field java.lang.reflect.Field = org.apache.commons.lang3.reflect.FieldUtils.getField(cls, fieldName, forceAccess);\n            org.apache.commons.lang3.Validate.isTrue((field != null), \"Cannot locate field '%s' on %s\", fieldName, cls);\n            return org.apache.commons.lang3.reflect.FieldUtils.readStaticField(field, false);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"preserveAllTokens":"forceAccess","lastMatch":"forceAccess","match":"forceAccess"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3966","type":"CtBinaryOperatorImpl","sourcecode":"array1 == null"},"failures":[113,15,114,115,116,117,118,119,120,121,122,123,16,17,124,125,18,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152],"tindex":"39521339-2e8f-11e6-a244-35c1e1ea4cec","method":{"position":"org.apache.commons.lang3.ArrayUtils:1987","type":"CtMethodImpl","sourcecode":"public static boolean contains(final java.lang.Object[] array, final java.lang.Object objectToFind) {\n    if (objectToFind == null) {\n        {\n            return (org.apache.commons.lang3.ArrayUtils.indexOf(array, objectToFind)) != (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array1":"objectToFind"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:640","type":"CtBinaryOperatorImpl","sourcecode":"(isEquals) == false"},"failures":[],"tindex":"39523a4a-2e8f-11e6-a244-95d167fd8527","method":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:110","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void setUseIdentityHashCode(final boolean useIdentityHashCode) {\n    if (useIdentityHashCode == false) {\n        {\n            super.setUseIdentityHashCode(useIdentityHashCode);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isEquals":"useIdentityHashCode"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:343","type":"CtBinaryOperatorImpl","sourcecode":"(index < 0) || (index >= (size))"},"failures":[],"tindex":"3952615b-2e8f-11e6-a244-afe7e30debd2","method":{"position":"org.apache.commons.lang3.text.translate.JavaUnicodeEscaper:64","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.text.translate.JavaUnicodeEscaper between(final int codepointLow, final int codepointHigh) {\n    if ((codepointHigh < 0) || (index >= codepointHigh)) {\n        {\n            return new org.apache.commons.lang3.text.translate.JavaUnicodeEscaper(codepointLow , codepointHigh , true);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"codepointHigh","index":"codepointHigh"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5660","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[153],"tindex":"3952615c-2e8f-11e6-a244-f17f9086e7b6","method":{"position":"org.apache.commons.lang3.time.FastDateFormat:502","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Object parseObject(final java.lang.String source, final java.text.ParsePosition pos) {\n    if (source == null) {\n        {\n            return org.apache.commons.lang3.time.FastDateParser.parseObject(source, pos);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"source"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2517","type":"CtBinaryOperatorImpl","sourcecode":"((str == null) || (org.apache.commons.lang3.StringUtils.isEmpty(open))) || (org.apache.commons.lang3.StringUtils.isEmpty(close))"},"failures":[],"tindex":"3952615d-2e8f-11e6-a244-2db7814c1c61","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1419","type":"CtMethodImpl","sourcecode":"protected void appendDetail(final java.lang.StringBuffer buffer, final java.lang.String fieldName, final boolean[] array) {\n    if (((fieldName == null) || (org.apache.commons.lang3.StringUtils.isEmpty(fieldName))) || (org.apache.commons.lang3.StringUtils.isEmpty(fieldName))) {\n        {\n            buffer.append(java.lang.String);\n            for (int int = 0 ; i < (array.int) ; i++) {\n                if (i > 0) {\n                    buffer.append(java.lang.String);\n                } \n                appendDetail(buffer, fieldName, array[i]);\n            }\n            buffer.append(java.lang.String);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"fieldName","close":"fieldName","open":"fieldName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6853","type":"CtBinaryOperatorImpl","sourcecode":"threshold < 0"},"failures":[154],"tindex":"3952886e-2e8f-11e6-a244-d9bf7a899d98","method":{"position":"org.apache.commons.lang3.time.DateUtils:432","type":"CtMethodImpl","sourcecode":"public static java.util.Date addWeeks(final java.util.Date date, final int amount) {\n    if (amount < 0) {\n        {\n            return org.apache.commons.lang3.time.DateUtils.add(date, java.util.Calendar.java.util.Calendar.int, amount);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"threshold":"amount"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:159","type":"CtBinaryOperatorImpl","sourcecode":"(ex.getCause()) instanceof java.lang.RuntimeException"},"failures":[155,156,157,158,159,160,161],"tindex":"3952886f-2e8f-11e6-a244-b5ca4e7abb21","method":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:81","type":"CtMethodImpl","sourcecode":"public static org.apache.commons.lang3.concurrent.ConcurrentRuntimeException extractCauseUnchecked(final java.util.concurrent.ExecutionException ex) {\n    if ((ex.getCause()) instanceof java.lang.RuntimeException) {\n        {\n            if ((ex == null) || ((ex.getCause()) == null)) {\n                return null;\n            } \n            org.apache.commons.lang3.concurrent.ConcurrentUtils.throwCause(ex);\n            return new org.apache.commons.lang3.concurrent.ConcurrentRuntimeException(ex.getMessage() , ex.getCause());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ex":"ex"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:221","type":"CtBinaryOperatorImpl","sourcecode":"(numerator == (java.lang.Integer.MIN_VALUE)) || (denominator == (java.lang.Integer.MIN_VALUE))"},"failures":[],"tindex":"3952af80-2e8f-11e6-a244-a7fd07f25d1b","method":{"position":"org.apache.commons.lang3.StringUtils:2803","type":"CtMethodImpl","sourcecode":"private static java.lang.String[] splitByWholeSeparatorWorker(final java.lang.String str, final java.lang.String separator, final int max, final boolean preserveAllTokens) {\n    if ((max == max) || (max == (java.lang.Integer.java.lang.Integer.int))) {\n        {\n            if (str == null) {\n                return null;\n            } \n            final int int = str.length();\n            if (len == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.String[];\n            } \n            if ((separator == null) || (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String.equals(separator))) {\n                return org.apache.commons.lang3.StringUtils.splitWorker(str, null, max, preserveAllTokens);\n            } \n            final int int = separator.length();\n            final java.util.ArrayList<java.lang.String> java.util.ArrayList<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n            int int = 0;\n            int int = 0;\n            int int = 0;\n            while (end < len) {\n                end = str.indexOf(separator, beg);\n                if (end > (-1)) {\n                    if (end > beg) {\n                        numberOfSubstrings += 1;\n                        if (numberOfSubstrings == max) {\n                            end = len;\n                            substrings.add(str.substring(beg));\n                        } else {\n                            substrings.add(str.substring(beg, end));\n                            beg = end + separatorLength;\n                        }\n                    } else {\n                        if (preserveAllTokens) {\n                            numberOfSubstrings += 1;\n                            if (numberOfSubstrings == max) {\n                                end = len;\n                                substrings.add(str.substring(beg));\n                            } else {\n                                substrings.add(org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.java.lang.String);\n                            }\n                        } \n                        beg = end + separatorLength;\n                    }\n                } else {\n                    substrings.add(str.substring(beg));\n                    end = len;\n                }\n            }\n            return substrings.toArray(new java.lang.String[substrings.size()]);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.lang.Integer.MIN_VALUE":"max","numerator":"max","denominator":"max"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6767","type":"CtBinaryOperatorImpl","sourcecode":"m == 0"},"failures":[],"tindex":"3952d691-2e8f-11e6-a244-4bd7ab8a9908","method":{"position":"org.apache.commons.lang3.StringUtils:1262","type":"CtMethodImpl","sourcecode":"public static int lastOrdinalIndexOf(final java.lang.CharSequence str, final java.lang.CharSequence searchStr, final int ordinal) {\n    if (ordinal == 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.ordinalIndexOf(str, searchStr, ordinal, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"m":"ordinal"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:5271","type":"CtBinaryOperatorImpl","sourcecode":"count == null"},"failures":[],"tindex":"3952fda2-2e8f-11e6-a244-ed81abf0da72","method":{"position":"org.apache.commons.lang3.mutable.MutableLong:169","type":"CtMethodImpl","sourcecode":"public void subtract(final java.lang.Number operand) {\n    if (operand == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.mutable.MutableLong.this.long -= operand.longValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"count":"operand"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1609","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[162,163,164,165,166,167,168,169,170,171,172,173],"tindex":"3952fda3-2e8f-11e6-a244-27b1bbe263b4","method":{"position":"org.apache.commons.lang3.SerializationUtils:264","type":"CtMethodImpl","sourcecode":"public static <T>T deserialize(final byte[] objectData) {\n    if (objectData == null) {\n        {\n            if (objectData == null) {\n                throw new java.lang.IllegalArgumentException(\"The byte[] must not be null\");\n            } \n            return org.apache.commons.lang3.SerializationUtils.<T>deserialize(new java.io.ByteArrayInputStream(objectData));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"objectData"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:726","type":"CtBinaryOperatorImpl","sourcecode":"strLen > 0"},"failures":[174,175,153],"tindex":"395324b4-2e8f-11e6-a244-f1118f92b4e2","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:850","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic final void appendTo(final java.lang.StringBuffer buffer, final int value) {\n    if (value > 0) {\n        {\n            if (value < 100) {\n                for (int int = int ; (--i) >= 2 ; ) {\n                    buffer.append('0');\n                }\n                buffer.append(((char)((value / 10) + '0')));\n                buffer.append(((char)((value % 10) + '0')));\n            } else {\n                int int;\n                if (value < 1000) {\n                    digits = 3;\n                } else {\n                    org.apache.commons.lang3.Validate.isTrue((value > (-1)), \"Negative values should not be possible\", value);\n                    digits = java.lang.Integer.toString(value).length();\n                }\n                for (int int = int ; (--i) >= digits ; ) {\n                    buffer.append('0');\n                }\n                buffer.append(java.lang.Integer.toString(value));\n            }\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"strLen":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:83","type":"CtBinaryOperatorImpl","sourcecode":"(ex == null) || ((ex.getCause()) == null)"},"failures":[],"tindex":"395324b5-2e8f-11e6-a244-a55497976aaf","method":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:158","type":"CtMethodImpl","sourcecode":"private static void throwCause(final java.util.concurrent.ExecutionException ex) {\n    if ((ex == null) || ((ex.getCause()) == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((ex.getCause()) instanceof java.lang.RuntimeException) {\n                throw ((java.lang.RuntimeException)(ex.getCause()));\n            } \n            if ((ex.getCause()) instanceof java.lang.Error) {\n                throw ((java.lang.Error)(ex.getCause()));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ex":"ex"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:3850","type":"CtBinaryOperatorImpl","sourcecode":"array1 == null"},"failures":[176,177,178,179],"tindex":"39534bc6-2e8f-11e6-a244-f3f1338f3654","method":{"position":"org.apache.commons.lang3.ArrayUtils:5413","type":"CtMethodImpl","sourcecode":"public static short[] removeAll(final short[] array, final int... indices) {\n    if (array == null) {\n        {\n            return ((short[])(org.apache.commons.lang3.ArrayUtils.removeAll(((java.lang.Object)(array)), org.apache.commons.lang3.ArrayUtils.clone(indices))));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array1":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:3092","type":"CtBinaryOperatorImpl","sourcecode":"match || preserveAllTokens"},"failures":[180],"tindex":"39534bc7-2e8f-11e6-a244-4b53e2ce6055","method":{"position":"org.apache.commons.lang3.BooleanUtils:864","type":"CtMethodImpl","sourcecode":"public static java.lang.String toStringYesNo(final boolean bool) {\n    if (bool || bool) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.BooleanUtils.toString(bool, \"yes\", \"no\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"preserveAllTokens":"bool","match":"bool"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:910","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[181,182],"tindex":"395372d8-2e8f-11e6-a244-6f91fcd81be9","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1024","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n    if (calendar == null) {\n        {\n            int int = calendar.get(java.util.Calendar.java.util.Calendar.int);\n            if (value == 0) {\n                value = (calendar.getLeastMaximum(java.util.Calendar.java.util.Calendar.int)) + 1;\n            } \n            org.apache.commons.lang3.time.FastDatePrinter.NumberRule.appendTo(buffer, value);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"calendar"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1574","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[183,184,185,186,187],"tindex":"395372d9-2e8f-11e6-a244-7ff1144c349c","method":{"position":"org.apache.commons.lang3.BooleanUtils:904","type":"CtMethodImpl","sourcecode":"public static boolean and(final boolean... array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n            } \n            if ((array.int) == 0) {\n                throw new java.lang.IllegalArgumentException(\"Array is empty\");\n            } \n            for (final boolean boolean : array) {\n                if (!element) {\n                    return false;\n                } \n            }\n            return true;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2002","type":"CtBinaryOperatorImpl","sourcecode":"sizeStartText == null"},"failures":[188],"tindex":"395399ea-2e8f-11e6-a244-39c645501ee0","method":{"position":"org.apache.commons.lang3.StringUtils:1153","type":"CtMethodImpl","sourcecode":"public static int lastIndexOf(final java.lang.CharSequence seq, final int searchChar) {\n    if (seq == null) {\n        {\n            if (org.apache.commons.lang3.StringUtils.isEmpty(seq)) {\n                return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.int;\n            } \n            return org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(seq, searchChar, seq.length());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sizeStartText":"seq"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:496","type":"CtBinaryOperatorImpl","sourcecode":"seq == null"},"failures":[189],"tindex":"395399eb-2e8f-11e6-a244-fd755af92a91","method":{"position":"org.apache.commons.lang3.StringUtils:7187","type":"CtMethodImpl","sourcecode":"public static boolean startsWithIgnoreCase(final java.lang.CharSequence str, final java.lang.CharSequence prefix) {\n    if (str == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return org.apache.commons.lang3.StringUtils.startsWith(str, prefix, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"seq":"str"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:721","type":"CtFieldReadImpl","sourcecode":"objectsTriviallyEqual"},"failures":[190,191],"tindex":"3953c0fc-2e8f-11e6-a244-29fccfba8c1a","method":{"position":"org.apache.commons.lang3.BooleanUtils:392","type":"CtMethodImpl","sourcecode":"public static int toInteger(final boolean bool) {\n    if (bool) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return bool ? 1 : 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"objectsTriviallyEqual":"bool"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2482","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[192],"tindex":"3953c0fd-2e8f-11e6-a244-1bf5ecca7b49","method":{"position":"org.apache.commons.lang3.ArrayUtils:3820","type":"CtMethodImpl","sourcecode":"public static byte[] addAll(final byte[] array1, final byte... array2) {\n    if (array1 == null) {\n        {\n            if (array1 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array2);\n            } else if (array2 == null) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array1);\n            } \n            final byte[] byte[] = new byte[(array1.int) + (array2.int)];\n            java.lang.System.arraycopy(array1, 0, joinedArray, 0, array1.int);\n            java.lang.System.arraycopy(array2, 0, joinedArray, array1.int, array2.int);\n            return joinedArray;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array1"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrBuilder:770","type":"CtVariableReadImpl","sourcecode":"value"},"failures":[193],"tindex":"3953e80e-2e8f-11e6-a244-791e530f9633","method":{"position":"org.apache.commons.lang3.BooleanUtils:485","type":"CtMethodImpl","sourcecode":"public static java.lang.Integer toIntegerObject(final boolean bool, final java.lang.Integer trueValue, final java.lang.Integer falseValue) {\n    if (bool) {\n        {\n            return bool ? trueValue : falseValue;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"bool"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:1784","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[124,194],"tindex":"3953e80f-2e8f-11e6-a244-2f63fac21361","method":{"position":"org.apache.commons.lang3.ArrayUtils:3069","type":"CtMethodImpl","sourcecode":"public static java.lang.Long[] toObject(final long[] array) {\n    if (array == null) {\n        {\n            if (array == null) {\n                return null;\n            } else if ((array.int) == 0) {\n                return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.java.lang.Long[];\n            } \n            final java.lang.Long[] java.lang.Long[] = new java.lang.Long[array.int];\n            for (int int = 0 ; i < (array.int) ; i++) {\n                result[i] = java.lang.Long.valueOf(array[i]);\n            }\n            return result;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2002","type":"CtBinaryOperatorImpl","sourcecode":"sizeStartText == null"},"failures":[],"tindex":"3953e810-2e8f-11e6-a244-45f225da55d6","method":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:650","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.ToStringBuilder append(final java.lang.String fieldName, final char[] array, final boolean fullDetail) {\n    if (fieldName == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, fieldName, array, java.lang.Boolean.valueOf(fullDetail));\n            return org.apache.commons.lang3.builder.ToStringBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"sizeStartText":"fieldName"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:6944","type":"CtBinaryOperatorImpl","sourcecode":"min > max"},"failures":[],"tindex":"39540f21-2e8f-11e6-a244-559298ee712a","method":{"position":"org.apache.commons.lang3.text.StrBuilder:808","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.text.StrBuilder append(final int value) {\n    if (value > value) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return append(java.lang.String.valueOf(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"min":"value","max":"value"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:180","type":"CtBinaryOperatorImpl","sourcecode":"(cal1 == null) || (cal2 == null)"},"failures":[],"tindex":"39540f22-2e8f-11e6-a244-554dedbeebb2","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1194","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n    if ((calendar == null) || (calendar == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = (calendar.get(java.util.Calendar.java.util.Calendar.int)) + (calendar.get(java.util.Calendar.java.util.Calendar.int));\n            if (offset < 0) {\n                buffer.append('-');\n                offset = -offset;\n            } else {\n                buffer.append('+');\n            }\n            final int int = offset / ((60 * 60) * 1000);\n            buffer.append(((char)((hours / 10) + '0')));\n            buffer.append(((char)((hours % 10) + '0')));\n            if (boolean) {\n                buffer.append(':');\n            } \n            final int int = (offset / (60 * 1000)) - (60 * hours);\n            buffer.append(((char)((minutes / 10) + '0')));\n            buffer.append(((char)((minutes % 10) + '0')));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cal2":"calendar","cal1":"calendar"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:682","type":"CtUnaryOperatorImpl","sourcecode":"!(java.util.Arrays.equals(lhs, rhs))"},"failures":[195],"tindex":"39543633-2e8f-11e6-a244-1d28bcb9bc45","method":{"position":"org.apache.commons.lang3.ArrayUtils:5711","type":"CtMethodImpl","sourcecode":"public static long[] removeElements(final long[] array, final long... values) {\n    if (!(java.util.Arrays.equals(values, array))) {\n        {\n            if ((org.apache.commons.lang3.ArrayUtils.isEmpty(array)) || (org.apache.commons.lang3.ArrayUtils.isEmpty(values))) {\n                return org.apache.commons.lang3.ArrayUtils.clone(array);\n            } \n            final java.util.HashMap<java.lang.Long, org.apache.commons.lang3.mutable.MutableInt> java.util.HashMap<java.lang.Long, org.apache.commons.lang3.mutable.MutableInt> = new java.util.HashMap<java.lang.Long, org.apache.commons.lang3.mutable.MutableInt>(values.int);\n            for (final long long : values) {\n                final java.lang.Long java.lang.Long = java.lang.Long.valueOf(v);\n                final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = occurrences.get(boxed);\n                if (count == null) {\n                    occurrences.put(boxed, new org.apache.commons.lang3.mutable.MutableInt(1));\n                } else {\n                    count.increment();\n                }\n            }\n            final java.util.BitSet java.util.BitSet = new java.util.BitSet();\n            for (final java.util.Map.Entry<java.lang.Long, org.apache.commons.lang3.mutable.MutableInt> java.util.Map.Entry<java.lang.Long, org.apache.commons.lang3.mutable.MutableInt> : occurrences.entrySet()) {\n                final java.lang.Long java.lang.Long = e.getKey();\n                int int = 0;\n                for (int int = 0, int int = e.getValue().intValue() ; i < ct ; i++) {\n                    found = org.apache.commons.lang3.ArrayUtils.indexOf(array, v.longValue(), found);\n                    if (found < 0) {\n                        break;\n                    } \n                    toRemove.set((found++));\n                }\n            }\n            return ((long[])(org.apache.commons.lang3.ArrayUtils.removeAll(array, toRemove)));\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lhs":"values","rhs":"array"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.Validate:989","type":"CtBinaryOperatorImpl","sourcecode":"(value < start) || (value > end)"},"failures":[],"tindex":"39545d44-2e8f-11e6-a244-6f61c467b839","method":{"position":"org.apache.commons.lang3.ArrayUtils:2731","type":"CtMethodImpl","sourcecode":"public static boolean contains(final double[] array, final double valueToFind, final double tolerance) {\n    if ((tolerance < valueToFind) || (value > valueToFind)) {\n        {\n            return (org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0, tolerance)) != (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.int);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"start":"valueToFind","end":"valueToFind","value":"tolerance"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1361","type":"CtBinaryOperatorImpl","sourcecode":"i > 0"},"failures":[196],"tindex":"39548455-2e8f-11e6-a244-4ffdbb7421a4","method":{"position":"org.apache.commons.lang3.Conversion:1188","type":"CtMethodImpl","sourcecode":"public static int[] longToIntArray(final long src, final int srcPos, final int[] dst, final int dstPos, final int nInts) {\n    if (srcPos > 0) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (0 == nInts) {\n                return dst;\n            } \n            if ((((nInts - 1) * 32) + srcPos) >= 64) {\n                throw new java.lang.IllegalArgumentException(\"(nInts-1)*32+srcPos is greather or equal to than 64\");\n            } \n            int int = 0;\n            for (int int = 0 ; i < nInts ; i++) {\n                shift = (i * 32) + srcPos;\n                dst[(dstPos + i)] = ((int)(-1 & (src >> shift)));\n            }\n            return dst;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"i":"srcPos"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.math.Fraction:777","type":"CtBinaryOperatorImpl","sourcecode":"(w.bitLength()) > 31"},"failures":[],"tindex":"39548456-2e8f-11e6-a244-c75e2b458d63","method":{"position":"org.apache.commons.lang3.mutable.MutableFloat:167","type":"CtMethodImpl","sourcecode":"public void add(final java.lang.Number operand) {\n    if ((operand.bitLength()) > 31) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            org.apache.commons.lang3.mutable.MutableFloat.this.float += operand.floatValue();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"w":"operand"},"type":"special","returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:239","type":"CtBinaryOperatorImpl","sourcecode":"(cal1 == null) || (cal2 == null)"},"failures":[],"tindex":"39548457-2e8f-11e6-a244-398d6435344f","method":{"position":"org.apache.commons.lang3.time.FastDatePrinter:408","type":"CtMethodImpl","sourcecode":"private java.lang.String applyRulesToString(final java.util.Calendar c) {\n    if ((c == null) || (c == null)) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return applyRules(c, new java.lang.StringBuffer(int)).toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"cal2":"c","cal1":"c"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:764","type":"CtBinaryOperatorImpl","sourcecode":"(isEquals) == false"},"failures":[197,198],"tindex":"39548458-2e8f-11e6-a244-07380f0d93ec","method":{"position":"org.apache.commons.lang3.mutable.MutableBoolean:87","type":"CtMethodImpl","sourcecode":"public void setValue(final boolean value) {\n    if (value == false) {\n        {\n            org.apache.commons.lang3.mutable.MutableBoolean.this.boolean = value;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isEquals":"value"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.BooleanUtils:728","type":"CtBinaryOperatorImpl","sourcecode":"str == trueString"},"failures":[],"tindex":"3954ab69-2e8f-11e6-a244-117af69ea236","method":{"position":"org.apache.commons.lang3.text.StrSubstitutor:889","type":"CtMethodImpl","sourcecode":"private void checkCyclicSubstitution(final java.lang.String varName, final java.util.List<java.lang.String> priorVariables) {\n    if (varName == varName) {\n        {\n            if ((priorVariables.contains(varName)) == false) {\n                return ;\n            } \n            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(256);\n            buf.append(\"Infinite loop in property interpolation of \");\n            buf.append(priorVariables.remove(0));\n            buf.append(\": \");\n            buf.appendWithSeparators(priorVariables, \"->\");\n            throw new java.lang.IllegalStateException(buf.toString());\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"varName","trueString":"varName"},"type":"special","returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2373","type":"CtBinaryOperatorImpl","sourcecode":"(org.apache.commons.lang3.StringUtils.isEmpty(str)) || (org.apache.commons.lang3.StringUtils.isEmpty(separator))"},"failures":[4,5,6,7,8,9,10,11,199,200,201,202,203,204,205,206,207,208],"tindex":"3954ab6a-2e8f-11e6-a244-85954c5c453d","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1765","type":"CtMethodImpl","sourcecode":"protected void setArrayEnd(java.lang.String arrayEnd) {\n    if ((org.apache.commons.lang3.StringUtils.isEmpty(arrayEnd)) || (org.apache.commons.lang3.StringUtils.isEmpty(arrayEnd))) {\n        {\n            if (arrayEnd == null) {\n                arrayEnd = \"\";\n            } \n            org.apache.commons.lang3.builder.ToStringStyle.this.java.lang.String = arrayEnd;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"arrayEnd","separator":"arrayEnd"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:2248","type":"CtBinaryOperatorImpl","sourcecode":"(len < 0) || (pos > (str.length()))"},"failures":[209],"tindex":"3954ab6b-2e8f-11e6-a244-29a5c61d3f0e","method":{"position":"org.apache.commons.lang3.Conversion:1389","type":"CtMethodImpl","sourcecode":"public static java.lang.String longToHex(final long src, final int srcPos, final java.lang.String dstInit, final int dstPos, final int nHexs) {\n    if ((srcPos < 0) || (srcPos > (dstInit.length()))) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (0 == nHexs) {\n                return dstInit;\n            } \n            if ((((nHexs - 1) * 4) + srcPos) >= 64) {\n                throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+srcPos is greather or equal to than 64\");\n            } \n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(dstInit);\n            int int = 0;\n            int int = sb.length();\n            for (int int = 0 ; i < nHexs ; i++) {\n                shift = (i * 4) + srcPos;\n                final int int = ((int)(15 & (src >> shift)));\n                if ((dstPos + i) == append) {\n                    ++append;\n                    sb.append(org.apache.commons.lang3.Conversion.intToHexDigit(bits));\n                } else {\n                    sb.setCharAt((dstPos + i), org.apache.commons.lang3.Conversion.intToHexDigit(bits));\n                }\n            }\n            return sb.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"dstInit","len":"srcPos","pos":"srcPos"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.ClassNotFoundException","condition":{"position":"org.apache.commons.lang3.builder.DiffBuilder:549","type":"CtBinaryOperatorImpl","sourcecode":"fieldName == null"},"failures":[210],"tindex":"3954d27c-2e8f-11e6-a244-d1d2b19ab75d","method":{"position":"org.apache.commons.lang3.ClassUtils:876","type":"CtMethodImpl","sourcecode":"public static java.lang.Class<?> getClass(final java.lang.String className) throws java.lang.ClassNotFoundException {\n    if (className == null) {\n        throw new java.lang.ClassNotFoundException();\n    } else {\n        {\n            return org.apache.commons.lang3.ClassUtils.getClass(className, true);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"fieldName":"className"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.ArrayUtils:2809","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.ArrayUtils.isEmpty(array)"},"failures":[],"tindex":"3954d27d-2e8f-11e6-a244-9d8e7f2b7431","method":{"position":"org.apache.commons.lang3.AnnotationUtils:263","type":"CtMethodImpl","sourcecode":"private static boolean memberEquals(final java.lang.Class<?> type, final java.lang.Object o1, final java.lang.Object o2) {\n    if (org.apache.commons.lang3.ArrayUtils.isEmpty(o2)) {\n        {\n            if (o1 == o2) {\n                return true;\n            } \n            if ((o1 == null) || (o2 == null)) {\n                return false;\n            } \n            if (type.isArray()) {\n                return org.apache.commons.lang3.AnnotationUtils.arrayMemberEquals(type.getComponentType(), o1, o2);\n            } \n            if (type.isAnnotation()) {\n                return org.apache.commons.lang3.AnnotationUtils.equals(((java.lang.annotation.Annotation)(o1)), ((java.lang.annotation.Annotation)(o2)));\n            } \n            return o1.equals(o2);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"o2"},"type":"special","returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.reflect.TypeUtils:857","type":"CtBinaryOperatorImpl","sourcecode":"ownerType instanceof java.lang.reflect.ParameterizedType"},"failures":[211,212,213,214,215,216,217,138,139,218,219,220,140,221,222,223,141,224,225,142,143,144,145,226],"tindex":"3954f98e-2e8f-11e6-a244-a5fdc93e514c","method":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:815","type":"CtMethodImpl","sourcecode":"public org.apache.commons.lang3.builder.HashCodeBuilder append(final java.lang.Object object) {\n    if (object instanceof java.lang.reflect.ParameterizedType) {\n        {\n            if (object == null) {\n                int = (int) * (int);\n            } else {\n                if (object.getClass().isArray()) {\n                    if (object instanceof long[]) {\n                        append(((long[])(object)));\n                    } else if (object instanceof int[]) {\n                        append(((int[])(object)));\n                    } else if (object instanceof short[]) {\n                        append(((short[])(object)));\n                    } else if (object instanceof char[]) {\n                        append(((char[])(object)));\n                    } else if (object instanceof byte[]) {\n                        append(((byte[])(object)));\n                    } else if (object instanceof double[]) {\n                        append(((double[])(object)));\n                    } else if (object instanceof float[]) {\n                        append(((float[])(object)));\n                    } else if (object instanceof boolean[]) {\n                        append(((boolean[])(object)));\n                    } else {\n                        append(((java.lang.Object[])(object)));\n                    }\n                } else {\n                    int = ((int) * (int)) + (object.hashCode());\n                }\n            }\n            return org.apache.commons.lang3.builder.HashCodeBuilder.this;\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ownerType":"object"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.time.DateUtils:910","type":"CtBinaryOperatorImpl","sourcecode":"date == null"},"failures":[227],"tindex":"3954f98f-2e8f-11e6-a244-63ef3084f26e","method":{"position":"org.apache.commons.lang3.time.DateUtils:218","type":"CtMethodImpl","sourcecode":"public static boolean isSameInstant(final java.util.Calendar cal1, final java.util.Calendar cal2) {\n    if (cal1 == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((cal1 == null) || (cal2 == null)) {\n                throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n            } \n            return (cal1.getTime().getTime()) == (cal2.getTime().getTime());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"date":"cal1"},"type":"special","returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.text.StrSubstitutor:611","type":"CtBinaryOperatorImpl","sourcecode":"source == null"},"failures":[],"tindex":"395520a0-2e8f-11e6-a244-3d7e0ba7cdf8","method":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1511","type":"CtMethodImpl","sourcecode":"protected void appendFieldSeparator(final java.lang.StringBuffer buffer) {\n    if (buffer == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            buffer.append(java.lang.String);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"source":"buffer"},"type":"special","returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.StringUtils:5001","type":"CtBinaryOperatorImpl","sourcecode":"(str.length()) == 1"},"failures":[228,229,230,231],"tindex":"395520a1-2e8f-11e6-a244-f3fc53fe106f","method":{"position":"org.apache.commons.lang3.exception.ContextedRuntimeException:207","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Object getFirstContextValue(final java.lang.String label) {\n    if ((label.length()) == 1) {\n        {\n            return org.apache.commons.lang3.exception.ContextedRuntimeException.this.org.apache.commons.lang3.exception.ExceptionContext.getFirstContextValue(label);\n        }\n    } else {\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"str":"label"},"type":"special","returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:244","type":"CtBinaryOperatorImpl","sourcecode":"map == null"},"failures":[],"tindex":"395520a2-2e8f-11e6-a244-274c8f84c669","method":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:300","type":"CtMethodImpl","sourcecode":"public static <K, V>V createIfAbsentUnchecked(final java.util.concurrent.ConcurrentMap<K, V> map, final K key, final org.apache.commons.lang3.concurrent.ConcurrentInitializer<V> init) {\n    if (map == null) {\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            try {\n                return org.apache.commons.lang3.concurrent.ConcurrentUtils.createIfAbsent(map, key, init);\n            } catch (final org.apache.commons.lang3.concurrent.ConcurrentException cex) {\n                throw new org.apache.commons.lang3.concurrent.ConcurrentRuntimeException(cex.getCause());\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"map":"map"},"type":"special","returnInThen":false,"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":47,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}