{"failureDictionary":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":48,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":360,"com.google.gson.functional.StringTest.testStringValueDeserialization":358,"com.google.gson.functional.PrimitiveTest.testBigIntegerDeserialization":138,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":485,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullDeserialization":293,"com.google.gson.internal.LinkedHashTreeMapTest.testIterationOrder":646,"com.google.gson.functional.PrimitiveTest.testBigDecimalNaNDeserializationNotSupported":99,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":200,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":533,"com.google.gson.MixedStreamTest.testWriteLenient":17,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":376,"com.google.gson.internal.bind.JsonTreeWriterTest.testPrematureClose":617,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":495,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":302,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":71,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":552,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":493,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":569,"com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization":147,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":338,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":424,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":345,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerDeserialization":108,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":246,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":431,"com.google.gson.functional.ObjectTest.testSingletonLists":491,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":294,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":427,"com.google.gson.functional.PrimitiveTest.testNumberDeserialization":92,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":361,"com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue":640,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator":194,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":321,"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":574,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization":312,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":511,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":3,"com.google.gson.functional.PrimitiveTest.testStringsAsBooleans":150,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":60,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeRecursive":653,"com.google.gson.functional.StringTest.testEscapedBackslashInStringDeserialization":374,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":235,"com.google.gson.functional.PrimitiveTest.testBigDecimalNoFractAsStringRepresentationDeserialization":139,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":577,"com.google.gson.internal.LinkedTreeMapTest.testContainsNullKeyIsAlwaysFalse":651,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":467,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":7,"com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization":84,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":590,"com.google.gson.functional.MapTest.testMapOfMapDeserialization":466,"com.google.gson.functional.EnumTest.testEnumCaseMapping":337,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":25,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":359,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsLong":83,"com.google.gson.functional.JsonTreeTest.testToJsonTree":357,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":582,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveDeserialization":315,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":234,"com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreBehindInVersion":663,"com.google.gson.JsonObjectTest.testEqualsNonEmptyObject":665,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":254,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":269,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullField":635,"com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization":398,"com.google.gson.functional.PrimitiveTest.testUnquotedStringDeserializationFails":94,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferDeserialization":286,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":434,"com.google.gson.internal.LinkedTreeMapTest.testLargeSetOfRandomKeys":657,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":562,"com.google.gson.functional.ObjectTest.testNullDeserialization":523,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":535,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringDeserialization":371,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":505,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":24,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization":160,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsBigIntegerFails":100,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":512,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":588,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":81,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":520,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":23,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":343,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectDeserialization":259,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":316,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionDeserialization":165,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":413,"com.google.gson.functional.PrimitiveTest.testDoubleInfinityDeserialization":164,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization":311,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":144,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullObject":636,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":123,"com.google.gson.functional.PrimitiveTest.testFloatInfinityDeserialization":171,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArrayDeserialization":268,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":394,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":524,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityDeserialization":121,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":292,"com.google.gson.functional.PrimitiveTest.testDoubleNoFractAsStringRepresentationDeserialization":136,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":377,"com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization":459,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":217,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountryVariant":283,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":421,"com.google.gson.internal.bind.JsonTreeWriterTest.testLenientNansAndInfinities":619,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":180,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":481,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":145,"com.google.gson.functional.JsonParserTest.testParseInvalidJson":383,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsDouble":137,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":388,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":519,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":56,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":499,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":597,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":104,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":207,"com.google.gson.functional.MapTest.testMapDeserializationWithNullValue":477,"com.google.gson.internal.LinkedHashTreeMapTest.testEmptyStringValues":645,"com.google.gson.metrics.PerformanceTest.testDummy":1,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":428,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":225,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":244,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":31,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":182,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings":318,"com.google.gson.functional.MapTest.testNumberKeyDeserialization":483,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":300,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":545,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":28,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":285,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":80,"com.google.gson.JsonArrayTest.testEqualsNonEmptyArray":666,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":538,"com.google.gson.functional.CollectionTest.testSetDeserialization":568,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":346,"com.google.gson.functional.EnumTest.testEnumSet":328,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":504,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersEscapedDeserialization":594,"com.google.gson.functional.PrimitiveTest.testBigDecimalAsStringRepresentationDeserialization":128,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":245,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":181,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampDeserialization":274,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":454,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":513,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":6,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":243,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBytePrimitive":141,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":30,"com.google.gson.functional.PrimitiveTest.testDeserializingDecimalPointValueZeroSucceeds":152,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":327,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":585,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":153,"com.google.gson.internal.LinkedHashTreeMapTest.testContainsNullKeyIsAlwaysFalse":648,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsIntegerFails":97,"com.google.gson.functional.MapTest.testHashMapDeserialization":448,"com.google.gson.functional.CollectionTest.testLinkedListDeserialization":558,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesDeserialization":298,"com.google.gson.MixedStreamTest.testReadNulls":18,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization":50,"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":57,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":46,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":208,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":325,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":417,"com.google.gson.functional.MapTest.testSortedMap":470,"com.google.gson.functional.MapTest.testMapSerialization":465,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":49,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedDeserialization":134,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":541,"com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization":401,"com.google.gson.functional.MapTest.testSerializeMaps":451,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":550,"com.google.gson.functional.MapTest.testComplexKeysSerialization":478,"com.google.gson.functional.InternationalizationTest.testStringsWithRawChineseCharactersDeserialization":593,"com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader":482,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsFalse":618,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":408,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":335,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":537,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":443,"com.google.gson.internal.LinkedTreeMapTest.testRemoveRootDoesNotDoubleUnlink":660,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":220,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriter":322,"com.google.gson.functional.EnumTest.testTopLevelEnumDeserialization":333,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":580,"com.google.gson.JsonObjectTest.testAddingAndRemovingObjectProperties":602,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":202,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsDeserialization":522,"com.google.gson.functional.MapTest.testStringKeyDeserialization":480,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsDeserialization":405,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":186,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":167,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesDeserialization":103,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":484,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigInteger":98,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":349,"com.google.gson.functional.PrettyPrintingTest.testMap":578,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":555,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":52,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":264,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls":323,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":2,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysDeserialization":407,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeMap":637,"com.google.gson.functional.StringTest.testStringWithEscapedSlashDeserialization":364,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":368,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":280,"com.google.gson.functional.MapTest.testMapSerializationEmpty":479,"com.google.gson.functional.CollectionTest.testQueueSerialization":559,"com.google.gson.JsonObjectTest.testAddingBooleanProperties":667,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsByteWrapper":129,"com.google.gson.functional.MapTest.testMapOfMapSerialization":464,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":120,"com.google.gson.JavaSerializationTest.testMapIsSerializable":669,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountry":288,"com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization":565,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":131,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":608,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":195,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":362,"com.google.gson.functional.FieldNamingTest.testIdentity":551,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":183,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":33,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":525,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":73,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":206,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":356,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":490,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalDeserialization":86,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":8,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":77,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":363,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization":126,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":487,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeDeserialization":304,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":600,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidDeserialization":275,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":282,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullJsonElementSerialization":314,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":607,"com.google.gson.functional.MapTest.testMapDeserializationEmpty":445,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":163,"com.google.gson.functional.MapTest.testMapSubclassSerialization":450,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":253,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":340,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersDeserialization":596,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":14,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":58,"com.google.gson.functional.PrimitiveTest.testBigDecimalDeserialization":118,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":351,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsLongPrimitive":178,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguage":263,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":378,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":320,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":242,"com.google.gson.functional.EnumTest.testEnumSubclass":331,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization":140,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":4,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":509,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization":85,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":76,"com.google.gson.GsonBuilderTest.testRegisterTypeAdapterForCoreType":628,"com.google.gson.functional.PrimitiveTest.testFloatNaNDeserialization":146,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":185,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":215,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsLongWrapper":88,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":489,"com.google.gson.functional.PrimitiveTest.testBigDecimalNegativeInfinityDeserializationNotSupported":124,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":488,"com.google.gson.stream.JsonWriterTest.testNullName":671,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":223,"com.google.gson.functional.ArrayTest.testArrayOfNullDeserialization":397,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":599,"com.google.gson.internal.LinkedTreeMapTest.testEqualsAndHashCode":659,"com.google.gson.functional.PrimitiveTest.testBigDecimalInfinityDeserializationNotSupported":130,"com.google.gson.functional.ObjectTest.testTruncatedDeserialization":503,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization":122,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":205,"com.google.gson.stream.JsonWriterTest.testObjectsInArrays":674,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":307,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":492,"com.google.gson.MixedStreamTest.testWriteNulls":15,"com.google.gson.functional.MapTest.testMapSubclassDeserialization":447,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":396,"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":381,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":390,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":239,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":536,"com.google.gson.CommentsTest.testParseComments":598,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":190,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":437,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":494,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":41,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigDecimal":143,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":403,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":540,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":366,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":469,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSubTypeFirstAllowed":237,"com.google.gson.MixedStreamTest.testReadInvalidState":12,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":342,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":251,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":162,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":309,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":542,"com.google.gson.ObjectTypeAdapterTest.testSerializeObject":638,"com.google.gson.JsonParserTest.testParseMixedArray":611,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":96,"com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash":641,"com.google.gson.functional.ArrayTest.testArrayOfStringsDeserialization":409,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":38,"com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreAheadInVersion":661,"com.google.gson.internal.bind.JsonTreeWriterTest.testWriteAfterClose":621,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":113,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":606,"com.google.gson.JsonArrayTest.testRemove":652,"com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization":157,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":290,"com.google.gson.functional.ArrayTest.testEmptyArrayDeserialization":393,"com.google.gson.functional.MapTest.testMapDeserialization":457,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":284,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":583,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":446,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":430,"com.google.gson.JsonPrimitiveTest.testValidJsonOnToString":613,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":232,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":456,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":436,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":432,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":221,"com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization":332,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":355,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":261,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization":510,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":526,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":210,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":352,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":224,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":270,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":250,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":219,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":486,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":468,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":579,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":615,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":313,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigDecimal":82,"com.google.gson.functional.PrimitiveTest.testShortSerialization":161,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":192,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":439,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedDeserialization":149,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":592,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedDeserialization":119,"com.google.gson.internal.LinkedTreeMapTest.testIterationOrder":658,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":148,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":0,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsBigDecimal":95,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":547,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":330,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":554,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":339,"com.google.gson.internal.LinkedTreeMapTest.testPutOverrides":655,"com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues":452,"com.google.gson.functional.PrimitiveTest.testLargeDoubleDeserialization":112,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":169,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":575,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":379,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedArray":624,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization":301,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":444,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":22,"com.google.gson.internal.bind.JsonTreeWriterTest.testObject":622,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization":176,"com.google.gson.functional.PrimitiveTest.testDeserializingNonZeroDecimalPointValuesAsIntegerFails":170,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":626,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":204,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":184,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":231,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":527,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":59,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":256,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsTrue":625,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":155,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":423,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsDoublePrimitive":125,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":187,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":531,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":498,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":336,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":212,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":595,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":271,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":563,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":347,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives":188,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":429,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":291,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":438,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsInt":102,"com.google.gson.internal.LinkedHashTreeMapTest.testClear":643,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":277,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":420,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":440,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization":296,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":228,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization":556,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsShortWrapper":89,"com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral":156,"com.google.gson.functional.PrimitiveTest.testNumberSerialization":127,"com.google.gson.JsonArrayTest.testSet":630,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":173,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":44,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":329,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":435,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":54,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":543,"com.google.gson.functional.MapTest.testGeneralMapField":474,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":496,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":387,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsShortPrimitive":175,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":78,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":348,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":402,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":303,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":472,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":93,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":257,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":412,"com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization":151,"com.google.gson.MixedStreamTest.testReadMixedStreamed":21,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":114,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlDeserialization":272,"com.google.gson.functional.MapTest.testBooleanKeyDeserialization":460,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":9,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":419,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":570,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":426,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBooleanPrimitive":132,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":591,"com.google.gson.JavaSerializationTest.testNumberIsSerializable":668,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":29,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":289,"com.google.gson.functional.MapTest.testDeerializeMapOfMaps":461,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":199,"com.google.gson.JsonArrayTest.testDeepCopy":631,"com.google.gson.functional.MapTest.testMapDeserializationWithNullKey":449,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":174,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":191,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":416,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":63,"com.google.gson.stream.JsonWriterTest.testArraysInObjects":673,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsFloatPrimitive":115,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedObject":623,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":287,"com.google.gson.internal.LinkedHashTreeMapTest.testEqualsAndHashCode":649,"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":382,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":34,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserialization":255,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionDeserilaization":564,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization":442,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":197,"com.google.gson.functional.ObjectTest.testNestedDeserialization":532,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":236,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":517,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":51,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":222,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":589,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsNumber":172,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":40,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":201,"com.google.gson.functional.StringTest.testSingleQuoteInStringDeserialization":365,"com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys":462,"com.google.gson.JsonParserTest.testParseUnquotedStringArrayFails":629,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":241,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":159,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":211,"com.google.gson.JavaSerializationTest.testListIsSerializable":670,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":75,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":380,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":573,"com.google.gson.functional.ObjectTest.testNullSerialization":506,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":214,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization":198,"com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey":453,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":87,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":473,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization":399,"com.google.gson.functional.MapTest.testInterfaceTypeMap":471,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":350,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":227,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsDoubleWrapper":90,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":334,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":609,"com.google.gson.MixedStreamTest.testReadClosed":13,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":218,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails":353,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":258,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":587,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsInteger":106,"com.google.gson.MixedStreamTest.testWriteClosed":20,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":53,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":561,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":230,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateDeserialization":317,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":497,"com.google.gson.internal.LinkedHashTreeMapTest.testPutNonComparableKeyFails":647,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":247,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":226,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":43,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":39,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":529,"com.google.gson.stream.JsonWriterTest.testLongs":672,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":310,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":233,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":500,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":560,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":64,"com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeWithCustomTypeAdapter":627,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBooleanWrapper":135,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":66,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":216,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":566,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":297,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":35,"com.google.gson.functional.PrimitiveTest.testDoubleAsStringRepresentationDeserialization":177,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":604,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":111,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":354,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderDeserialization":266,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":384,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":539,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":42,"com.google.gson.functional.CollectionTest.testQueueDeserialization":576,"com.google.gson.internal.LinkedHashTreeMapTest.testPutOverrides":642,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":117,"com.google.gson.functional.PrimitiveTest.testByteDeserialization":133,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringDeserialization":370,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization":47,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":65,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":308,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":458,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":521,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":279,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":414,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":530,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":553,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":11,"com.google.gson.functional.MapTest.testRawMapSerialization":476,"com.google.gson.functional.CollectionTest.testNullsInListDeserialization":571,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetDeserialization":295,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize":633,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":209,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":515,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":546,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":441,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":614,"com.google.gson.functional.PrimitiveTest.testByteSerialization":158,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":319,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":389,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapNoTypeSerialization":616,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":69,"com.google.gson.ObjectTypeAdapterTest.testSerialize":639,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":410,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsFloatWrapper":101,"com.google.gson.JsonPrimitiveTest.testEqualsIntegerAndBigInteger":612,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":72,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":400,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":548,"com.google.gson.GsonTypeAdapterTest.testDefaultTypeAdapterThrowsParseException":5,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":248,"com.google.gson.functional.StringTest.testAssignmentCharDeserialization":367,"com.google.gson.functional.MapTest.testMapWithQuotes":463,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatDeserialization":109,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":265,"com.google.gson.functional.StringTest.testEscapingQuotesInStringDeserialization":369,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":179,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":418,"com.google.gson.JsonObjectTest.testEqualsOnEmptyObject":664,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":196,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":610,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsNumber":166,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":262,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":344,"com.google.gson.stream.JsonWriterTest.testLenientWriterPermitsMultipleTopLevelValues":603,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":433,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":238,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":528,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":584,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":142,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":276,"com.google.gson.functional.ObjectTest.testEmptyStringDeserialization":508,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":406,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":502,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":305,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":267,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":62,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":74,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":278,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigInteger":154,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriterAndSerializeNulls":326,"com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed":567,"com.google.gson.functional.ArrayTest.testSingleStringArrayDeserialization":392,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":240,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":306,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":385,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":213,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":36,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization":67,"com.google.gson.internal.LinkedHashTreeMapTest.testContainsNonComparableKeyReturnsFalse":644,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":341,"com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreAtSameVersion":662,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReader":324,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsFloat":91,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":252,"com.google.gson.internal.LinkedHashTreeMapTest.testRemoveRootDoesNotDoubleUnlink":650,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":193,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize2dArray":632,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":514,"com.google.gson.functional.ObjectTest.testNestedSerialization":516,"com.google.gson.internal.LinkedTreeMapTest.testClear":656,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":45,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":105,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringDeserialization":373,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":411,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":415,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":475,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":544,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":422,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":10,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":19,"com.google.gson.functional.UncategorizedTest.testTrailingWhitespace":32,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":507,"com.google.gson.functional.PrimitiveTest.testBooleanDeserialization":168,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":229,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":425,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":281,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":26,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsInteger":107,"com.google.gson.GsonBuilderTest.testCreatingMoreThanOnce":601,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":260,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":518,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":61,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize1dArray":634,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":372,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":395,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":79,"com.google.gson.functional.CollectionTest.testSetSerialization":572,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":189,"com.google.gson.functional.StringTest.testStringValueSerialization":375,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":581,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":68,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":203,"com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization":557,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":605,"com.google.gson.MixedStreamTest.testWriteInvalidState":16,"com.google.gson.functional.ArrayTest.testInvalidArrayDeserialization":386,"com.google.gson.functional.ObjectTest.testJsonObjectSerialization":501,"com.google.gson.functional.PrimitiveTest.testBadValueForBigIntegerDeserialization":110,"com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero":116,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":404,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":55,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":273,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":549,"com.google.gson.ObjectTypeAdapterTest.testDeserialize":654,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":534,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":37,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":586,"com.google.gson.internal.bind.JsonTreeWriterTest.testArray":620,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":249,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullSerialization":299,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":70,"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":455,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType":27,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":391},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:92","type":"CtBinaryOperatorImpl","sourcecode":"o instanceof java.util.Iterator"},"failures":[],"tindex":"c69765ee-3e5d-11e6-8758-efdd359d0d6d","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:303","type":"CtMethodImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V> removeInternalByKey(java.lang.Object key) {\n    if (key instanceof com.google.gson.TypeAdapter<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key instanceof java.util.Iterator) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = findByObject(key);\n                    if (node != null) {\n                        removeInternal(node, true);\n                    } \n                    return node;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"c697db1f-3e5d-11e6-8758-8fa874a44c57","method":{"position":"com.google.gson.Gson:310","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return in.nextLong();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:249","type":"CtInvocationImpl","sourcecode":"toResolve.isAssignableFrom(rawSupertype)"},"failures":[],"tindex":"c697db20-3e5d-11e6-8758-0d55dbe73fcc","method":{"position":"com.google.gson.internal.Primitives:60","type":"CtMethodImpl","sourcecode":"private static void add(java.util.Map<java.lang.Class<?>, java.lang.Class<?>> forward, java.util.Map<java.lang.Class<?>, java.lang.Class<?>> backward, java.lang.Class<?> key, java.lang.Class<?> value) {\n    if (key.isAssignableFrom(value)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            forward.put(key, value);\n            backward.put(value, key);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"key","rawSupertype":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"c6980131-3e5d-11e6-8758-df903cbf160c","method":{"position":"com.google.gson.internal.bind.TypeAdapters:379","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.math.BigDecimal value) throws java.io.IOException {\n    out.value(value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:491","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[0],"tindex":"c6980132-3e5d-11e6-8758-75914073cb7c","method":{"position":"com.google.gson.internal.bind.TypeAdapters:317","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            out.value(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:430","type":"CtFieldReadImpl","sourcecode":"serializeNulls"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,0,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601],"tindex":"c6982843-3e5d-11e6-8758-a37ded953a22","method":{"position":"com.google.gson.Gson:249","type":"CtMethodImpl","sourcecode":"private com.google.gson.TypeAdapter<java.lang.Number> doubleAdapter(boolean serializeSpecialFloatingPointValues) {\n    if (serializeSpecialFloatingPointValues) {\n        {\n            if (serializeSpecialFloatingPointValues) {\n                return com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<java.lang.Number>;\n            } \n            return new com.google.gson.TypeAdapter<java.lang.Number>() {\n                @java.lang.Override\n                public java.lang.Double read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n                    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n                        in.nextNull();\n                        return null;\n                    } \n                    return in.nextDouble();\n                }\n\n                @java.lang.Override\n                public void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n                    if (value == null) {\n                        out.nullValue();\n                        return ;\n                    } \n                    double double = value.doubleValue();\n                    checkValidFloatingPoint(doubleValue);\n                    out.value(value);\n                }\n            };\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"serializeNulls":"serializeSpecialFloatingPointValues"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:213","type":"CtBinaryOperatorImpl","sourcecode":"(indent.length()) == 0"},"failures":[602,379],"tindex":"c6987664-3e5d-11e6-8758-03c9d8f0b889","method":{"position":"com.google.gson.JsonObject:67","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement remove(java.lang.String property) {\n    if ((property.length()) == 0) {\n        {\n            return com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.remove(property);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"indent":"property"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"c6987665-3e5d-11e6-8758-bba56459a762","method":{"position":"com.google.gson.internal.bind.MapTypeAdapterFactory:198","type":"CtMethodImpl","sourcecode":"public void write(com.google.gson.stream.JsonWriter out, java.util.Map<K, V> map) throws java.io.IOException {\n    if (map == null) {\n        out.nullValue();\n        return ;\n    } \n    if (!(boolean)) {\n        out.beginObject();\n        for (java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : map.entrySet()) {\n            out.name(java.lang.String.valueOf(entry.getKey()));\n            com.google.gson.TypeAdapter<V>.write(out, entry.getValue());\n        }\n        out.endObject();\n        return ;\n    } \n    boolean boolean = false;\n    java.util.List<com.google.gson.JsonElement> java.util.List<com.google.gson.JsonElement> = new java.util.ArrayList<com.google.gson.JsonElement>(map.size());\n    java.util.List<V> java.util.List<V> = new java.util.ArrayList<V>(map.size());\n    for (java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : map.entrySet()) {\n        com.google.gson.JsonElement com.google.gson.JsonElement = com.google.gson.TypeAdapter<K>.toJsonTree(entry.getKey());\n        keys.add(keyElement);\n        values.add(entry.getValue());\n        hasComplexKeys |= (keyElement.isJsonArray()) || (keyElement.isJsonObject());\n    }\n    if (hasComplexKeys) {\n        out.beginArray();\n        for (int int = 0 ; i < (keys.size()) ; i++) {\n            out.beginArray();\n            com.google.gson.internal.Streams.write(keys.get(i), out);\n            com.google.gson.TypeAdapter<V>.write(out, values.get(i));\n            out.endArray();\n        }\n        out.endArray();\n    } else {\n        out.beginObject();\n        for (int int = 0 ; i < (keys.size()) ; i++) {\n            com.google.gson.JsonElement com.google.gson.JsonElement = keys.get(i);\n            out.name(keyToString(keyElement));\n            com.google.gson.TypeAdapter<V>.write(out, values.get(i));\n        }\n        out.endObject();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:346","type":"CtBinaryOperatorImpl","sourcecode":"context == nonempty"},"failures":[],"tindex":"c6989d76-3e5d-11e6-8758-07e86d8874be","method":{"position":"com.google.gson.internal.bind.JsonTreeReader:41","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int read(char[] buffer, int offset, int count) throws java.io.IOException {\n    if (count == offset) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            throw new java.lang.AssertionError();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"context":"count","nonempty":"offset"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.GsonBuilder:459","type":"CtBinaryOperatorImpl","sourcecode":"typeAdapter instanceof com.google.gson.TypeAdapter<?>"},"failures":[],"tindex":"c698c487-3e5d-11e6-8758-bd3af4699170","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:303","type":"CtMethodImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V> removeInternalByKey(java.lang.Object key) {\n    if (key instanceof com.google.gson.TypeAdapter<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key instanceof java.util.Iterator) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = findByObject(key);\n                    if (node != null) {\n                        removeInternal(node, true);\n                    } \n                    return node;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeAdapter":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:116","type":"CtBinaryOperatorImpl","sourcecode":"(!skipSerialize) && (!skipDeserialize)"},"failures":[603,2,3,4,6,7,8,9,10,11,14,15,16,17,19,20,23,24,25,26,33,34,36,604,605,606,607,608,38,39,40,41,42,43,44,45,46,47,48,49,52,55,56,57,609,58,59,62,63,66,68,69,70,71,72,73,74,75,76,77,78,80,81,85,87,93,96,104,105,111,113,114,117,120,122,123,126,127,131,140,142,144,145,148,151,153,157,158,159,160,161,162,163,167,169,173,174,176,179,181,185,186,187,189,190,191,193,195,196,197,199,200,202,204,206,207,208,209,210,212,213,214,217,219,222,223,224,225,226,227,228,229,232,233,234,235,236,238,240,241,242,243,244,245,247,248,249,251,254,256,257,258,262,264,265,267,269,270,273,0,276,277,278,279,280,282,284,285,287,289,290,291,292,294,297,299,300,302,303,305,306,307,308,309,310,313,314,316,319,321,322,326,327,328,329,330,331,334,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,610,354,355,356,357,359,360,361,362,363,366,368,372,375,384,385,387,388,389,390,391,394,395,396,400,402,404,406,408,410,411,412,413,414,415,416,417,420,421,422,424,427,429,432,434,435,436,438,439,440,441,443,446,450,451,454,456,458,463,464,465,468,469,471,472,473,474,475,476,478,479,481,484,485,486,489,490,491,494,497,500,501,504,506,507,510,512,513,515,516,517,519,524,526,527,529,534,535,536,537,539,542,544,547,548,549,550,551,552,553,554,555,559,560,561,562,563,566,569,570,572,573,575,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,595,597,611,612,613,614,615,616,599,600,617,618,619,620,621,622,623,624,625],"tindex":"c698c488-3e5d-11e6-8758-67ce8ac55c8e","method":{"position":"com.google.gson.stream.JsonWriter:234","type":"CtMethodImpl","sourcecode":"public final void setLenient(boolean lenient) {\n    if ((!lenient) && (!lenient)) {\n        {\n            com.google.gson.stream.JsonWriter.this.boolean = lenient;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"skipDeserialize":"lenient","skipSerialize":"lenient"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:163","type":"CtBinaryOperatorImpl","sourcecode":"a instanceof java.lang.Class"},"failures":[2,3,4,5,6,7,8,9,28,29,30,31,35,609,626,627,71,72,73,74,75,77,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,197,200,201,202,203,204,205,206,207,290,297,301,309,313,348,349,350,422,423,433,434,439,447,485,533,534,536,540,541,542,543,544,545,546,585,586,587,588,589,590,592,628],"tindex":"c69912a9-3e5d-11e6-8758-af93bf87559b","method":{"position":"com.google.gson.GsonBuilder:447","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\npublic com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type type, java.lang.Object typeAdapter) {\n    if (type instanceof java.lang.Class) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.$Gson$Preconditions.checkArgument(((((typeAdapter instanceof com.google.gson.JsonSerializer<?>) || (typeAdapter instanceof com.google.gson.JsonDeserializer<?>)) || (typeAdapter instanceof com.google.gson.InstanceCreator<?>)) || (typeAdapter instanceof com.google.gson.TypeAdapter<?>)));\n            if (typeAdapter instanceof com.google.gson.InstanceCreator<?>) {\n                java.util.Map<java.lang.reflect.Type, com.google.gson.InstanceCreator<?>>.put(type, ((com.google.gson.InstanceCreator)(typeAdapter)));\n            } \n            if ((typeAdapter instanceof com.google.gson.JsonSerializer<?>) || (typeAdapter instanceof com.google.gson.JsonDeserializer<?>)) {\n                com.google.gson.reflect.TypeToken<?> com.google.gson.reflect.TypeToken<?> = com.google.gson.reflect.TypeToken.get(type);\n                java.util.List<com.google.gson.TypeAdapterFactory>.add(com.google.gson.TreeTypeAdapter.newFactoryWithMatchRawType(typeToken, typeAdapter));\n            } \n            if (typeAdapter instanceof com.google.gson.TypeAdapter<?>) {\n                java.util.List<com.google.gson.TypeAdapterFactory>.add(com.google.gson.internal.bind.TypeAdapters.newFactory(com.google.gson.reflect.TypeToken.get(type), ((com.google.gson.TypeAdapter)(typeAdapter))));\n            } \n            return com.google.gson.GsonBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"type"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1310","type":"CtBinaryOperatorImpl","sourcecode":"(limit) >= minimum"},"failures":[611,629,630,631],"tindex":"c69912aa-3e5d-11e6-8758-831814fb464a","method":{"position":"com.google.gson.JsonArray:146","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement get(int i) {\n    if (i == i) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (i >= i) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return java.util.List<com.google.gson.JsonElement>.get(i);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"limit":"i","minimum":"i"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"c69939bb-3e5d-11e6-8758-17a7f6d1744c","method":{"position":"com.google.gson.internal.bind.TypeAdapters:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Boolean read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return java.lang.Boolean.valueOf(in.nextString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:298","type":"CtBinaryOperatorImpl","sourcecode":"(java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(value))"},"failures":[632,609,626,633,634,635,636,637,142,174,200,202,206,226,245,355,400],"tindex":"c69939bc-3e5d-11e6-8758-b99517678975","method":{"position":"com.google.gson.Gson:297","type":"CtMethodImpl","sourcecode":"private void checkValidFloatingPoint(double value) {\n    if ((java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(value))) {\n        {\n            if ((java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(value))) {\n                throw new java.lang.IllegalArgumentException(((value + \" is not a valid double value as per JSON specification. To override this\") + \" behavior, use GsonBuilder.serializeSpecialFloatingPointValues() method.\"));\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:198","type":"CtBinaryOperatorImpl","sourcecode":"out == null"},"failures":[638,639,640],"tindex":"c69939bd-3e5d-11e6-8758-973c28a78f48","method":{"position":"com.google.gson.TypeAdapter:140","type":"CtMethodImpl","sourcecode":"public final void toJson(java.io.Writer out, T value) throws java.io.IOException {\n    if (out == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (out == null) {\n                {\n                    com.google.gson.stream.JsonWriter com.google.gson.stream.JsonWriter = new com.google.gson.stream.JsonWriter(out);\n                    write(writer, value);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"out":"out"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:290","type":"CtBinaryOperatorImpl","sourcecode":"in == null"},"failures":[],"tindex":"c69960ce-3e5d-11e6-8758-2f8f34069612","method":{"position":"com.google.gson.TypeAdapter:254","type":"CtMethodImpl","sourcecode":"public final T fromJson(java.io.Reader in) throws java.io.IOException {\n    if (in == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (in == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            } else {\n                {\n                    com.google.gson.stream.JsonReader com.google.gson.stream.JsonReader = new com.google.gson.stream.JsonReader(in);\n                    return read(reader);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"in":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonElement:119","type":"CtInvocationImpl","sourcecode":"isJsonPrimitive()"},"failures":[],"tindex":"c69960cf-3e5d-11e6-8758-d3766577ad15","method":{"position":"com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:74","type":"CtMethodImpl","sourcecode":"private java.lang.reflect.Type getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type type, java.lang.Object value) {\n    if ((value != null) && (((type == (java.lang.Object.java.lang.Object.java.lang.Class)) || (type instanceof java.lang.reflect.TypeVariable<?>)) || (type instanceof java.lang.Class<?>))) {\n        type = value.getClass();\n    } \n    return type;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:192","type":"CtInvocationImpl","sourcecode":"to.equals(from)"},"failures":[],"tindex":"c69960d0-3e5d-11e6-8758-5bded8fef181","method":{"position":"com.google.gson.reflect.TypeToken:122","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic boolean isAssignableFrom(java.lang.reflect.Type from) {\n    if (from.equals(from)) {\n        {\n            if (from == null) {\n                return false;\n            } \n            if (java.lang.reflect.Type.equals(from)) {\n                return true;\n            } \n            if ((java.lang.reflect.Type) instanceof java.lang.Class<?>) {\n                return java.lang.Class<? super T>.isAssignableFrom(com.google.gson.internal.$Gson$Types.getRawType(from));\n            } else if ((java.lang.reflect.Type) instanceof java.lang.reflect.ParameterizedType) {\n                return com.google.gson.reflect.TypeToken.isAssignableFrom(from, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)), new java.util.HashMap<java.lang.String, java.lang.reflect.Type>());\n            } else if ((java.lang.reflect.Type) instanceof java.lang.reflect.GenericArrayType) {\n                return (java.lang.Class<? super T>.isAssignableFrom(com.google.gson.internal.$Gson$Types.getRawType(from))) && (com.google.gson.reflect.TypeToken.isAssignableFrom(from, ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type))));\n            } else {\n                throw com.google.gson.reflect.TypeToken.buildUnexpectedTypeError(java.lang.reflect.Type, java.lang.Class.java.lang.Class.java.lang.Class, java.lang.reflect.ParameterizedType.java.lang.reflect.ParameterizedType.java.lang.Class, java.lang.reflect.GenericArrayType.java.lang.reflect.GenericArrayType.java.lang.Class);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"from","to":"from"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1368","type":"CtUnaryOperatorImpl","sourcecode":"!charsLoaded"},"failures":[6,11,14,16,20,21,22,28,29,30,33,34,36,37,604,605,606,607,608,38,39,40,41,42,43,44,45,46,48,49,51,52,53,54,55,56,59,60,61,62,63,64,65,66,68,71,72,74,75,76,78,79,80,81,155,180,184,185,187,189,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,238,239,241,242,243,244,245,246,247,248,249,250,251,253,254,260,261,271,0,281,289,305,310,320,321,327,334,335,339,340,341,342,344,345,346,351,610,354,355,356,357,376,377,378,379,380,402,403,404,410,413,414,416,417,419,420,421,422,423,425,426,427,428,429,430,431,435,436,437,438,440,443,444,458,467,471,473,474,478,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,502,504,505,507,509,511,513,514,515,516,518,519,520,521,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,541,542,543,544,546,547,548,549,550,551,552,554,563,568,569,572,579,580,584,597,599,600,639],"tindex":"c69987e1-3e5d-11e6-8758-51b57c8d8f1a","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:58","type":"CtMethodImpl","sourcecode":"public boolean excludeField(java.lang.reflect.Field f, boolean serialize) {\n    if (!serialize) {\n        {\n            return com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.excludeField(f, serialize, com.google.gson.internal.Excluder);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"charsLoaded":"serialize"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"c69987e2-3e5d-11e6-8758-ab7f660f41b7","method":{"position":"com.google.gson.internal.bind.TypeAdapters:255","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        return in.nextLong();\n    } catch (java.lang.NumberFormatException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:247","type":"CtBinaryOperatorImpl","sourcecode":"rawSupertype == toResolve"},"failures":[],"tindex":"c69987e3-3e5d-11e6-8758-71f1c9dbffe5","method":{"position":"com.google.gson.internal.Excluder:220","type":"CtMethodImpl","sourcecode":"private boolean isInnerClass(java.lang.Class<?> clazz) {\n    if (clazz == clazz) {\n        {\n            return (clazz.isMemberClass()) && (!(isStatic(clazz)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"clazz","rawSupertype":"clazz"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.DefaultDateTypeAdapter:87","type":"CtBinaryOperatorImpl","sourcecode":"typeOfT == (java.sql.Date.class)"},"failures":[],"tindex":"c699aef4-3e5d-11e6-8758-7f3531afdded","method":{"position":"com.google.gson.Gson:801","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic <T>T fromJson(com.google.gson.stream.JsonReader reader, java.lang.reflect.Type typeOfT) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException {\n    if (typeOfT == typeOfT) {\n        {\n            boolean boolean = true;\n            boolean boolean = reader.isLenient();\n            reader.setLenient(true);\n            try {\n                reader.peek();\n                isEmpty = false;\n                com.google.gson.reflect.TypeToken<T> com.google.gson.reflect.TypeToken<T> = ((com.google.gson.reflect.TypeToken<T>)(com.google.gson.reflect.TypeToken.get(typeOfT)));\n                com.google.gson.TypeAdapter<T> com.google.gson.TypeAdapter<T> = getAdapter(typeToken);\n                T T = typeAdapter.read(reader);\n                return object;\n            } catch (java.io.EOFException e) {\n                if (isEmpty) {\n                    return null;\n                } \n                throw new com.google.gson.JsonSyntaxException(e);\n            } catch (java.lang.IllegalStateException e) {\n                throw new com.google.gson.JsonSyntaxException(e);\n            } catch (java.io.IOException e) {\n                throw new com.google.gson.JsonSyntaxException(e);\n            } finally {\n                reader.setLenient(oldLenient);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.sql.Date.class":"typeOfT","typeOfT":"typeOfT"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:290","type":"CtBinaryOperatorImpl","sourcecode":"in == null"},"failures":[],"tindex":"c699aef5-3e5d-11e6-8758-3145a49f51ab","method":{"position":"com.google.gson.TypeAdapter:254","type":"CtMethodImpl","sourcecode":"public final T fromJson(java.io.Reader in) throws java.io.IOException {\n    if (in == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (in == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            } else {\n                {\n                    com.google.gson.stream.JsonReader com.google.gson.stream.JsonReader = new com.google.gson.stream.JsonReader(in);\n                    return read(reader);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"in":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:431","type":"CtBinaryOperatorImpl","sourcecode":"factory == skipPast"},"failures":[415,416],"tindex":"c699aef6-3e5d-11e6-8758-8b7b4f258cd9","method":{"position":"com.google.gson.GsonBuilder:473","type":"CtMethodImpl","sourcecode":"public com.google.gson.GsonBuilder registerTypeAdapterFactory(com.google.gson.TypeAdapterFactory factory) {\n    if (factory == factory) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.List<com.google.gson.TypeAdapterFactory>.add(factory);\n            return com.google.gson.GsonBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory","skipPast":"factory"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl","sourcecode":"field.isSynthetic()"},"failures":[6,11,14,16,20,21,22,28,29,30,33,34,36,37,604,605,606,607,608,38,39,40,41,42,43,44,45,46,48,49,51,52,53,54,55,56,59,60,61,62,63,64,65,66,68,71,72,74,75,76,78,79,80,81,155,180,184,185,187,189,200,202,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,238,239,241,242,243,244,245,246,247,248,249,250,251,253,254,260,261,271,0,281,289,305,310,320,321,327,334,335,339,340,341,342,344,345,346,351,610,354,355,356,357,376,377,378,379,380,402,403,404,410,413,414,416,417,419,420,421,422,423,425,426,427,428,429,430,431,435,436,437,438,440,443,444,458,467,471,473,474,478,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,502,504,505,507,509,511,513,514,515,516,518,519,520,521,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,541,542,543,544,546,547,548,549,550,551,552,554,563,568,569,572,579,580,584,597,599,600,639],"tindex":"c699aef7-3e5d-11e6-8758-ffe3f911b27f","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:70","type":"CtMethodImpl","sourcecode":"static java.lang.String getFieldName(com.google.gson.FieldNamingStrategy fieldNamingPolicy, java.lang.reflect.Field f) {\n    if (f.isSynthetic()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (f.isSynthetic()) {\n                {\n                    com.google.gson.annotations.SerializedName com.google.gson.annotations.SerializedName = f.getAnnotation(com.google.gson.annotations.SerializedName.com.google.gson.annotations.SerializedName.java.lang.Class);\n                    return serializedName == null ? fieldNamingPolicy.translateName(f) : serializedName.value();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"f"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:356","type":"CtVariableReadImpl","sourcecode":"insert"},"failures":[641,642,643,644,645,646,647,648,649,650],"tindex":"c699d608-3e5d-11e6-8758-fd709b41d590","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:131","type":"CtMethodImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V> find(K key, boolean create) {\n    if (create) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.Comparator<? super K> java.util.Comparator<? super K> = com.google.gson.internal.LinkedHashTreeMap.this.java.util.Comparator<? super K>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V>[] com.google.gson.internal.LinkedHashTreeMap.Node<K, V>[] = com.google.gson.internal.LinkedHashTreeMap.this.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>[];\n            int int = com.google.gson.internal.LinkedHashTreeMap.secondaryHash(key.hashCode());\n            int int = hash & ((table.int) - 1);\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = table[index];\n            int int = 0;\n            if (nearest != null) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                java.lang.Comparable<java.lang.Object> java.lang.Comparable<java.lang.Object> = comparator == (com.google.gson.internal.LinkedHashTreeMap.com.google.gson.internal.LinkedHashTreeMap.java.util.Comparator<java.lang.Comparable>) ? ((java.lang.Comparable<java.lang.Object>)(key)) : null;\n                while (true) {\n                    comparison = comparableKey != null ? comparableKey.compareTo(nearest.K) : comparator.compare(key, nearest.K);\n                    if (comparison == 0) {\n                        return nearest;\n                    } \n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = comparison < 0 ? nearest.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> : nearest.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    if (child == null) {\n                        break;\n                    } \n                    nearest = child;\n                }\n            } \n            if (!create) {\n                return null;\n            } \n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.this.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            if (nearest == null) {\n                if ((comparator == (com.google.gson.internal.LinkedHashTreeMap.com.google.gson.internal.LinkedHashTreeMap.java.util.Comparator<java.lang.Comparable>)) && (!(key instanceof java.lang.Comparable))) {\n                    throw new java.lang.ClassCastException(((key.getClass().getName()) + \" is not Comparable\"));\n                } \n                created = new com.google.gson.internal.LinkedHashTreeMap.Node<K, V>(nearest , key , hash , header , header.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>);\n                table[index] = created;\n            } else {\n                created = new com.google.gson.internal.LinkedHashTreeMap.Node<K, V>(nearest , key , hash , header , header.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>);\n                if (comparison < 0) {\n                    nearest.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = created;\n                } else {\n                    nearest.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = created;\n                }\n                rebalance(nearest, true);\n            }\n            if (((int)++) > (int)) {\n                doubleCapacity();\n            } \n            (int)++;\n            return created;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"insert":"create"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:469","type":"CtBinaryOperatorImpl","sourcecode":"src == null"},"failures":[651],"tindex":"c699fd19-3e5d-11e6-8758-27b4f098a611","method":{"position":"com.google.gson.internal.LinkedTreeMap:86","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (findByObject(key)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"src":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:872","type":"CtBinaryOperatorImpl","sourcecode":"json == null"},"failures":[652],"tindex":"c699fd1a-3e5d-11e6-8758-f3ae92aa3114","method":{"position":"com.google.gson.JsonArray:115","type":"CtMethodImpl","sourcecode":"public boolean contains(com.google.gson.JsonElement element) {\n    if (element == null) {\n        {\n            return java.util.List<com.google.gson.JsonElement>.contains(element);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"element"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:348","type":"CtBinaryOperatorImpl","sourcecode":"toResolve instanceof java.lang.reflect.ParameterizedType"},"failures":[],"tindex":"c699fd1b-3e5d-11e6-8758-597029656a33","method":{"position":"com.google.gson.internal.$Gson$Types:226","type":"CtMethodImpl","sourcecode":"static java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type context, java.lang.Class<?> rawType, java.lang.Class<?> toResolve) {\n    if (toResolve == rawType) {\n        return context;\n    } \n    if (toResolve.isInterface()) {\n        java.lang.Class<?>[] java.lang.Class<?>[] = rawType.getInterfaces();\n        for (int int = 0, int int = interfaces.int ; i < length ; i++) {\n            if ((interfaces[i]) == toResolve) {\n                return rawType.getGenericInterfaces()[i];\n            } else if (toResolve.isAssignableFrom(interfaces[i])) {\n                return com.google.gson.internal.$Gson$Types.getGenericSupertype(rawType.getGenericInterfaces()[i], interfaces[i], toResolve);\n            } \n        }\n    } \n    if (!(rawType.isInterface())) {\n        while (rawType != (java.lang.Object.java.lang.Object.java.lang.Class)) {\n            java.lang.Class<?> java.lang.Class<?> = rawType.getSuperclass();\n            if (rawSupertype == toResolve) {\n                return rawType.getGenericSuperclass();\n            } else if (toResolve.isAssignableFrom(rawSupertype)) {\n                return com.google.gson.internal.$Gson$Types.getGenericSupertype(rawType.getGenericSuperclass(), rawSupertype, toResolve);\n            } \n            rawType = rawSupertype;\n        }\n    } \n    return toResolve;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"context"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:176","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"c699fd1c-3e5d-11e6-8758-571b4b6ff09a","method":{"position":"com.google.gson.internal.bind.TypeAdapters:282","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            out.value(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:341","type":"CtBinaryOperatorImpl","sourcecode":"(deferredName) != null"},"failures":[],"tindex":"c699fd1d-3e5d-11e6-8758-ef042cfc5036","method":{"position":"com.google.gson.internal.LinkedTreeMap:41","type":"CtMethodImpl","sourcecode":"public int compare(java.lang.Comparable a, java.lang.Comparable b) {\n    if (a != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return a.compareTo(b);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"a"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1240","type":"CtBinaryOperatorImpl","sourcecode":"p == (com.google.gson.stream.JsonReader.PEEKED_BEGIN_ARRAY)"},"failures":[],"tindex":"c699fd1e-3e5d-11e6-8758-f14f5b189337","method":{"position":"com.google.gson.internal.Streams:93","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(int i) throws java.io.IOException {\n    if (i == i) {\n        {\n            java.lang.Appendable.append(((char)(i)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"i","com.google.gson.stream.JsonReader.PEEKED_BEGIN_ARRAY":"i"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"c69a242f-3e5d-11e6-8758-9362e79e3645","method":{"position":"com.google.gson.internal.bind.TypeAdapters:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Boolean read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return java.lang.Boolean.valueOf(in.nextString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:563","type":"CtBinaryOperatorImpl","sourcecode":"(peekStack == (com.google.gson.stream.JsonScope.EMPTY_ARRAY)) || (peekStack == (com.google.gson.stream.JsonScope.NONEMPTY_ARRAY))"},"failures":[],"tindex":"c69a2430-3e5d-11e6-8758-cbb233946a54","method":{"position":"com.google.gson.internal.Streams:111","type":"CtMethodImpl","sourcecode":"public java.lang.CharSequence subSequence(int start, int end) {\n    if ((end == start) || (peekStack == start)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new java.lang.String(char[] , start , (end - start));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"peekStack":"end","com.google.gson.stream.JsonScope.EMPTY_ARRAY":"start","com.google.gson.stream.JsonScope.NONEMPTY_ARRAY":"start"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:403","type":"CtBinaryOperatorImpl","sourcecode":"declaredBy instanceof java.lang.reflect.ParameterizedType"},"failures":[],"tindex":"c69a2431-3e5d-11e6-8758-d32cb252b79e","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:120","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(java.lang.Object key) {\n    if (key instanceof java.lang.reflect.ParameterizedType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = removeInternalByKey(key);\n            return node != null ? node.V : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"declaredBy":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl","sourcecode":"field.isSynthetic()"},"failures":[213,215,550],"tindex":"c69a2432-3e5d-11e6-8758-e32df8a2f3f9","method":{"position":"com.google.gson.FieldNamingPolicy:72","type":"CtMethodImpl","sourcecode":"public java.lang.String translateName(java.lang.reflect.Field f) {\n    if (f.isSynthetic()) {\n        {\n            return com.google.gson.FieldNamingPolicy.upperCaseFirstLetter(com.google.gson.FieldNamingPolicy.separateCamelCase(f.getName(), \" \"));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"f"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:178","type":"CtInvocationImpl","sourcecode":"isBoolean()"},"failures":[],"tindex":"c69a2433-3e5d-11e6-8758-d1efcf7e0fc6","method":{"position":"com.google.gson.JsonPrimitive:333","type":"CtMethodImpl","sourcecode":"private static boolean isIntegral(com.google.gson.JsonPrimitive primitive) {\n    if ((primitive.java.lang.Object) instanceof java.lang.Number) {\n        java.lang.Number java.lang.Number = ((java.lang.Number)(primitive.java.lang.Object));\n        return ((((number instanceof java.math.BigInteger) || (number instanceof java.lang.Long)) || (number instanceof java.lang.Integer)) || (number instanceof java.lang.Short)) || (number instanceof java.lang.Byte);\n    } \n    return false;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"primitive"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"c69a4b44-3e5d-11e6-8758-035b7252b6d4","method":{"position":"com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:39","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic T read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    return com.google.gson.TypeAdapter<T>.read(in);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"c69a4b45-3e5d-11e6-8758-c5bd86cb9cd1","method":{"position":"com.google.gson.internal.bind.TypeAdapters:348","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.String read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    com.google.gson.stream.JsonToken com.google.gson.stream.JsonToken = in.peek();\n    if (peek == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    if (peek == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        return java.lang.Boolean.toString(in.nextBoolean());\n    } \n    return in.nextString();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl","sourcecode":"field.isSynthetic()"},"failures":[],"tindex":"c69a4b46-3e5d-11e6-8758-9557178573dc","method":{"position":"com.google.gson.internal.bind.ObjectTypeAdapter:94","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Object value) throws java.io.IOException {\n    if (value.isSynthetic()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value == null) {\n                out.nullValue();\n                return ;\n            } \n            com.google.gson.TypeAdapter<java.lang.Object> com.google.gson.TypeAdapter<java.lang.Object> = ((com.google.gson.TypeAdapter<java.lang.Object>)(com.google.gson.Gson.getAdapter(value.getClass())));\n            if (typeAdapter instanceof com.google.gson.internal.bind.ObjectTypeAdapter) {\n                out.beginObject();\n                out.endObject();\n                return ;\n            } \n            typeAdapter.write(out, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:389","type":"CtBinaryOperatorImpl","sourcecode":"(deferredName) != null"},"failures":[6,9,11,14,19,33,34,604,605,606,607,608,38,39,42,44,45,46,48,49,55,56,633,653,62,68,93,96,111,208,210,212,213,217,222,223,224,225,227,228,229,232,233,234,235,240,245,280,300,303,319,321,327,340,341,351,354,355,357,359,360,361,362,363,366,368,372,375,384,385,389,390,394,395,400,402,406,410,411,412,413,414,415,416,420,421,422,424,427,432,450,451,454,456,458,463,464,471,473,474,476,478,481,485,486,489,491,494,497,500,507,513,516,524,529,542,544,552,553,559,561,562,563,566,569,570,580,584,595,597,614,599,600],"tindex":"c69a4b47-3e5d-11e6-8758-19db85b8d827","method":{"position":"com.google.gson.internal.bind.TypeAdapters:361","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.String value) throws java.io.IOException {\n    if (value != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            out.value(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:409","type":"CtBinaryOperatorImpl","sourcecode":"pivotRight != null"},"failures":[48,54,355,378,379,654,655,656,657,658,659,660],"tindex":"c69a4b48-3e5d-11e6-8758-39fcc3a29ddf","method":{"position":"com.google.gson.internal.LinkedTreeMap:373","type":"CtMethodImpl","sourcecode":"private void rotateLeft(com.google.gson.internal.LinkedTreeMap.Node<K, V> root) {\n    if (root != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = root.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = root.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = pivot.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = pivot.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            root.com.google.gson.internal.LinkedTreeMap.Node<K, V> = pivotLeft;\n            if (pivotLeft != null) {\n                pivotLeft.com.google.gson.internal.LinkedTreeMap.Node<K, V> = root;\n            } \n            replaceInParent(root, pivot);\n            pivot.com.google.gson.internal.LinkedTreeMap.Node<K, V> = root;\n            root.com.google.gson.internal.LinkedTreeMap.Node<K, V> = pivot;\n            root.int = (java.lang.Math.max((left != null ? left.int : 0), (pivotLeft != null ? pivotLeft.int : 0))) + 1;\n            pivot.int = (java.lang.Math.max(root.int, (pivotRight != null ? pivotRight.int : 0))) + 1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pivotRight":"root"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl","sourcecode":"field.isSynthetic()"},"failures":[],"tindex":"c69a7259-3e5d-11e6-8758-adc7df050887","method":{"position":"com.google.gson.FieldNamingPolicy:90","type":"CtMethodImpl","sourcecode":"public java.lang.String translateName(java.lang.reflect.Field f) {\n    if (f.isSynthetic()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return com.google.gson.FieldNamingPolicy.separateCamelCase(f.getName(), \"_\").toLowerCase();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"f"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"c69a725a-3e5d-11e6-8758-cb3d2612de9d","method":{"position":"com.google.gson.internal.bind.TypeAdapters:156","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Boolean value) throws java.io.IOException {\n    if (value == null) {\n        out.nullValue();\n        return ;\n    } \n    out.value(value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:76","type":"CtBinaryOperatorImpl","sourcecode":"(pendingName) != null"},"failures":[186,187,193,376,377,378,380],"tindex":"c69a725b-3e5d-11e6-8758-d3649d6eba51","method":{"position":"com.google.gson.JsonObject:89","type":"CtMethodImpl","sourcecode":"public void addProperty(java.lang.String property, java.lang.Number value) {\n    if (property != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            add(property, createJsonElement(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pendingName":"property"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:176","type":"CtInvocationImpl","sourcecode":"isNumber()"},"failures":[],"tindex":"c69a725c-3e5d-11e6-8758-cf3b7b692e66","method":{"position":"com.google.gson.JsonNull:60","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object other) {\n    return ((com.google.gson.JsonNull.this) == other) || (other instanceof com.google.gson.JsonNull);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"other"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.IllegalAccessException","condition":{"position":"com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:54","type":"CtBinaryOperatorImpl","sourcecode":"runtimeType != (type)"},"failures":[6,11,14,33,34,36,604,605,606,607,608,38,39,40,41,42,43,44,45,46,48,49,52,55,56,609,626,633,635,636,653,59,62,63,66,68,71,72,74,75,76,80,81,185,187,189,200,202,206,207,208,209,210,212,213,214,217,219,222,223,224,225,226,227,228,229,232,233,234,235,238,241,242,243,244,245,247,248,249,251,254,289,305,310,321,327,334,339,340,341,342,344,345,346,351,610,354,355,356,357,402,410,413,414,416,417,420,421,422,427,429,435,436,438,440,443,458,471,473,474,485,486,489,490,491,494,497,500,504,507,513,515,516,519,524,526,527,529,534,535,536,537,539,542,544,547,548,549,550,551,552,554,563,569,572,579,580,584,597,599,600,639],"tindex":"c69a996d-3e5d-11e6-8758-cd077ff16238","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:94","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\n@java.lang.Override\nvoid write(com.google.gson.stream.JsonWriter writer, java.lang.Object value) throws java.io.IOException, java.lang.IllegalAccessException {\n    if (value != value) {\n        {\n            java.lang.Object java.lang.Object = field.get(value);\n            com.google.gson.TypeAdapter com.google.gson.TypeAdapter = new com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper(context , this.com.google.gson.TypeAdapter<?> , fieldType.getType());\n            t.write(writer, fieldValue);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"runtimeType":"value","type":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:469","type":"CtBinaryOperatorImpl","sourcecode":"src == null"},"failures":[],"tindex":"c69a996e-3e5d-11e6-8758-8f13126f3992","method":{"position":"com.google.gson.internal.$Gson$Types:563","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object other) {\n    return (other instanceof java.lang.reflect.WildcardType) && (com.google.gson.internal.$Gson$Types.equals(com.google.gson.internal.$Gson$Types.WildcardTypeImpl.this, ((java.lang.reflect.WildcardType)(other))));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"src":"other"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"c69a996f-3e5d-11e6-8758-bd6f5b7fbe27","method":{"position":"com.google.gson.internal.bind.MapTypeAdapterFactory:160","type":"CtMethodImpl","sourcecode":"public java.util.Map<K, V> read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    com.google.gson.stream.JsonToken com.google.gson.stream.JsonToken = in.peek();\n    if (peek == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    java.util.Map<K, V> java.util.Map<K, V> = com.google.gson.internal.ObjectConstructor<? extends java.util.Map<K, V>>.construct();\n    if (peek == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.beginArray();\n        while (in.hasNext()) {\n            in.beginArray();\n            K K = com.google.gson.TypeAdapter<K>.read(in);\n            V V = com.google.gson.TypeAdapter<V>.read(in);\n            V V = map.put(key, value);\n            if (replaced != null) {\n                throw new com.google.gson.JsonSyntaxException((\"duplicate key: \" + key));\n            } \n            in.endArray();\n        }\n        in.endArray();\n    } else {\n        in.beginObject();\n        while (in.hasNext()) {\n            com.google.gson.internal.JsonReaderInternalAccess.com.google.gson.internal.JsonReaderInternalAccess.com.google.gson.internal.JsonReaderInternalAccess.promoteNameToValue(in);\n            K K = com.google.gson.TypeAdapter<K>.read(in);\n            V V = com.google.gson.TypeAdapter<V>.read(in);\n            V V = map.put(key, value);\n            if (replaced != null) {\n                throw new com.google.gson.JsonSyntaxException((\"duplicate key: \" + key));\n            } \n        }\n        in.endObject();\n    }\n    return map;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:125","type":"CtBinaryOperatorImpl","sourcecode":"element instanceof com.google.gson.JsonObject"},"failures":[],"tindex":"c69a9970-3e5d-11e6-8758-1bd6955c50f8","method":{"position":"com.google.gson.TreeTypeAdapter:103","type":"CtMethodImpl","sourcecode":"public static com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class<?> hierarchyType, java.lang.Object typeAdapter) {\n    if (typeAdapter instanceof com.google.gson.JsonObject) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new com.google.gson.TreeTypeAdapter.SingleTypeFactory(typeAdapter , null , false , hierarchyType);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"typeAdapter"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl","sourcecode":"field.isSynthetic()"},"failures":[],"tindex":"c69ac081-3e5d-11e6-8758-1b97d9496273","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:70","type":"CtMethodImpl","sourcecode":"static java.lang.String getFieldName(com.google.gson.FieldNamingStrategy fieldNamingPolicy, java.lang.reflect.Field f) {\n    if (f.isSynthetic()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (f.isSynthetic()) {\n                {\n                    com.google.gson.annotations.SerializedName com.google.gson.annotations.SerializedName = f.getAnnotation(com.google.gson.annotations.SerializedName.com.google.gson.annotations.SerializedName.java.lang.Class);\n                    return serializedName == null ? fieldNamingPolicy.translateName(f) : serializedName.value();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"f"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"c69ac082-3e5d-11e6-8758-6db37c9e6ea1","method":{"position":"com.google.gson.internal.bind.TypeAdapters:530","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.sql.Timestamp value) throws java.io.IOException {\n    dateTypeAdapter.write(out, value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1256","type":"CtBinaryOperatorImpl","sourcecode":"(p == (com.google.gson.stream.JsonReader.PEEKED_DOUBLE_QUOTED)) || (p == (com.google.gson.stream.JsonReader.PEEKED_DOUBLE_QUOTED_NAME))"},"failures":[],"tindex":"c69ac083-3e5d-11e6-8758-3d6509874b89","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:677","type":"CtMethodImpl","sourcecode":"void reset(int targetSize) {\n    if (targetSize == 0) {\n        {\n            if ((targetSize == targetSize) || (p == targetSize)) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    int int = ((java.lang.Integer.highestOneBit(targetSize)) * 2) - 1;\n                    int = treeCapacity - targetSize;\n                    int = 0;\n                    int = 0;\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = null;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"targetSize","com.google.gson.stream.JsonReader.PEEKED_DOUBLE_QUOTED":"targetSize","com.google.gson.stream.JsonReader.PEEKED_DOUBLE_QUOTED_NAME":"targetSize"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:233","type":"CtBinaryOperatorImpl","sourcecode":"annotation != null"},"failures":[661,662,663,58,59,60,61,63,64,66,67],"tindex":"c69ac084-3e5d-11e6-8758-0b70498cf8ab","method":{"position":"com.google.gson.internal.Excluder:228","type":"CtMethodImpl","sourcecode":"private boolean isValidVersion(com.google.gson.annotations.Since since, com.google.gson.annotations.Until until) {\n    if (since != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (isValidSince(since)) && (isValidUntil(until));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"annotation":"since"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.internal.bind.ObjectTypeAdapter:95","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"c69ac085-3e5d-11e6-8758-319424481690","method":{"position":"com.google.gson.Gson:591","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic void toJson(java.lang.Object src, java.lang.reflect.Type typeOfSrc, com.google.gson.stream.JsonWriter writer) throws com.google.gson.JsonIOException {\n    if (src == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    } else {\n        {\n            com.google.gson.TypeAdapter<?> com.google.gson.TypeAdapter<?> = getAdapter(com.google.gson.reflect.TypeToken.get(typeOfSrc));\n            boolean boolean = writer.isLenient();\n            writer.setLenient(true);\n            boolean boolean = writer.isHtmlSafe();\n            writer.setHtmlSafe(boolean);\n            boolean boolean = writer.getSerializeNulls();\n            writer.setSerializeNulls(boolean);\n            try {\n                ((com.google.gson.TypeAdapter<java.lang.Object>)(adapter)).write(writer, src);\n            } catch (java.io.IOException e) {\n                throw new com.google.gson.JsonIOException(e);\n            } finally {\n                writer.setLenient(oldLenient);\n                writer.setHtmlSafe(oldHtmlSafe);\n                writer.setSerializeNulls(oldSerializeNulls);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:115","type":"CtInvocationImpl","sourcecode":"primitive.isNumber()"},"failures":[],"tindex":"c69ae796-3e5d-11e6-8758-b721e5917735","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:223","type":"CtMethodImpl","sourcecode":"private boolean equal(java.lang.Object a, java.lang.Object b) {\n    if (a.isNumber()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (a == b) || ((a != null) && (a.equals(b)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"primitive":"a"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl","sourcecode":"field.isSynthetic()"},"failures":[6,11,14,16,20,21,22,28,29,30,33,34,36,37,604,605,606,607,608,38,39,40,41,42,43,44,45,46,48,49,51,52,53,54,55,56,59,60,61,62,63,64,65,66,68,71,72,74,75,76,78,79,80,81,155,180,184,185,187,189,200,202,203,205,206,207,211,222,223,224,225,226,227,228,229,230,231,232,233,234,235,238,239,241,242,243,244,245,246,247,248,249,250,251,253,254,260,261,271,0,281,289,305,310,320,321,327,334,335,339,340,341,342,344,345,346,351,610,354,355,356,357,376,377,378,379,380,402,403,404,410,413,414,416,417,419,420,421,422,423,425,426,427,428,429,430,431,435,436,437,438,440,443,444,458,467,471,473,474,478,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,502,504,505,507,509,511,513,514,515,516,518,519,520,521,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,541,542,543,544,546,551,552,554,563,568,569,572,579,580,584,597,599,600,639],"tindex":"c69ae797-3e5d-11e6-8758-79d8e887605f","method":{"position":"com.google.gson.FieldNamingPolicy:37","type":"CtMethodImpl","sourcecode":"public java.lang.String translateName(java.lang.reflect.Field f) {\n    if (f.isSynthetic()) {\n        {\n            if (f.isSynthetic()) {\n                {\n                    return f.getName();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"f"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl","sourcecode":"field.isSynthetic()"},"failures":[],"tindex":"c69ae798-3e5d-11e6-8758-21dce69ebfdb","method":{"position":"com.google.gson.FieldNamingPolicy:37","type":"CtMethodImpl","sourcecode":"public java.lang.String translateName(java.lang.reflect.Field f) {\n    if (f.isSynthetic()) {\n        {\n            if (f.isSynthetic()) {\n                {\n                    return f.getName();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"f"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:145","type":"CtBinaryOperatorImpl","sourcecode":"previous != null"},"failures":[664,665,259,666],"tindex":"c69ae799-3e5d-11e6-8758-69a612810cb4","method":{"position":"com.google.gson.JsonObject:186","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object o) {\n    if (o != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (o == (com.google.gson.JsonObject.this)) || ((o instanceof com.google.gson.JsonObject) && (((com.google.gson.JsonObject)(o)).com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.equals(com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"previous":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:176","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[0],"tindex":"c69ae79a-3e5d-11e6-8758-9746ac5911b5","method":{"position":"com.google.gson.Gson:285","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value == null) {\n                out.nullValue();\n                return ;\n            } \n            float float = value.floatValue();\n            checkValidFloatingPoint(floatValue);\n            out.value(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"c69b0eab-3e5d-11e6-8758-b7d3af00a178","method":{"position":"com.google.gson.internal.bind.TypeAdapters:501","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.UUID read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return java.util.UUID.fromString(in.nextString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:735","type":"CtBinaryOperatorImpl","sourcecode":"(last == (com.google.gson.stream.JsonReader.NUMBER_CHAR_EXP_E)) || (last == (com.google.gson.stream.JsonReader.NUMBER_CHAR_EXP_SIGN))"},"failures":[],"tindex":"c69b0eac-3e5d-11e6-8758-09bd1c670e88","method":{"position":"com.google.gson.stream.JsonWriter:324","type":"CtMethodImpl","sourcecode":"private com.google.gson.stream.JsonWriter open(int empty, java.lang.String openBracket) throws java.io.IOException {\n    if ((empty == empty) || (last == empty)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            beforeValue(true);\n            push(empty);\n            java.io.Writer.write(openBracket);\n            return com.google.gson.stream.JsonWriter.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"com.google.gson.stream.JsonReader.NUMBER_CHAR_EXP_SIGN":"empty","last":"empty","com.google.gson.stream.JsonReader.NUMBER_CHAR_EXP_E":"empty"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.Gson:817","type":"CtVariableReadImpl","sourcecode":"isEmpty"},"failures":[],"tindex":"c69b0ead-3e5d-11e6-8758-4b4d4114dc04","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:157","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic com.google.gson.stream.JsonWriter value(boolean value) throws java.io.IOException {\n    if (value) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            put(new com.google.gson.JsonPrimitive(value));\n            return com.google.gson.internal.bind.JsonTreeWriter.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isEmpty":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"c69b0eae-3e5d-11e6-8758-3b9e3aad15ce","method":{"position":"com.google.gson.internal.bind.TypeAdapters:348","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.String read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    com.google.gson.stream.JsonToken com.google.gson.stream.JsonToken = in.peek();\n    if (peek == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    if (peek == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        return java.lang.Boolean.toString(in.nextBoolean());\n    } \n    return in.nextString();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"c69b0eaf-3e5d-11e6-8758-6902ee66eff8","method":{"position":"com.google.gson.internal.bind.TypeAdapters:736","type":"CtMethodImpl","sourcecode":"public T read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return java.util.Map<java.lang.String, T>.get(in.nextString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonElement:103","type":"CtInvocationImpl","sourcecode":"isJsonArray()"},"failures":[],"tindex":"c69b0eb0-3e5d-11e6-8758-9b39adbbb734","method":{"position":"com.google.gson.JsonArray:115","type":"CtMethodImpl","sourcecode":"public boolean contains(com.google.gson.JsonElement element) {\n    if (element == null) {\n        {\n            return java.util.List<com.google.gson.JsonElement>.contains(element);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"element"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:198","type":"CtBinaryOperatorImpl","sourcecode":"out == null"},"failures":[],"tindex":"c69b35c1-3e5d-11e6-8758-1df968f2ad37","method":{"position":"com.google.gson.TypeAdapter:140","type":"CtMethodImpl","sourcecode":"public final void toJson(java.io.Writer out, T value) throws java.io.IOException {\n    if (out == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (out == null) {\n                {\n                    com.google.gson.stream.JsonWriter com.google.gson.stream.JsonWriter = new com.google.gson.stream.JsonWriter(out);\n                    write(writer, value);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"out":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"c69b35c2-3e5d-11e6-8758-e953cd9c71cc","method":{"position":"com.google.gson.internal.bind.TypeAdapters:744","type":"CtMethodImpl","sourcecode":"public void write(com.google.gson.stream.JsonWriter out, T value) throws java.io.IOException {\n    out.value((value == null ? null : java.util.Map<T, java.lang.String>.get(value)));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:332","type":"CtBinaryOperatorImpl","sourcecode":"(toResolve instanceof java.lang.Class) && (((java.lang.Class<?>)(toResolve)).isArray())"},"failures":[],"tindex":"c69b35c3-3e5d-11e6-8758-17c5959ac083","method":{"position":"com.google.gson.internal.$Gson$Types:303","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type context, java.lang.Class<?> contextRawType) {\n    if (context == (java.util.Properties.java.util.Properties.java.lang.Class)) {\n        return new java.lang.reflect.Type[]{ java.lang.String.java.lang.String.java.lang.Class , java.lang.String.java.lang.String.java.lang.Class };\n    } \n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.getSupertype(context, contextRawType, java.util.Map.java.util.Map.java.lang.Class);\n    if (mapType instanceof java.lang.reflect.ParameterizedType) {\n        java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(mapType));\n        return mapParameterizedType.getActualTypeArguments();\n    } \n    return new java.lang.reflect.Type[]{ java.lang.Object.java.lang.Object.java.lang.Class , java.lang.Object.java.lang.Object.java.lang.Class };\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"context"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:565","type":"CtBinaryOperatorImpl","sourcecode":"(indent) == null"},"failures":[667],"tindex":"c69b35c4-3e5d-11e6-8758-052ac2fa3d20","method":{"position":"com.google.gson.JsonObject:100","type":"CtMethodImpl","sourcecode":"public void addProperty(java.lang.String property, java.lang.Boolean value) {\n    if (property == null) {\n        {\n            add(property, createJsonElement(value));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"indent":"property"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"c69b35c5-3e5d-11e6-8758-e9fda76c1c90","method":{"position":"com.google.gson.internal.bind.TypeAdapters:255","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        return in.nextLong();\n    } catch (java.lang.NumberFormatException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:180","type":"CtUnaryOperatorImpl","sourcecode":"!(b instanceof java.lang.reflect.GenericArrayType)"},"failures":[],"tindex":"c69b35c6-3e5d-11e6-8758-dfc539f0ba04","method":{"position":"com.google.gson.internal.$Gson$Types:277","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type array) {\n    return array instanceof java.lang.reflect.GenericArrayType ? ((java.lang.reflect.GenericArrayType)(array)).getGenericComponentType() : ((java.lang.Class<?>)(array)).getComponentType();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"array"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:386","type":"CtBinaryOperatorImpl","sourcecode":"name == null"},"failures":[],"tindex":"c69b5cd7-3e5d-11e6-8758-47912822833d","method":{"position":"com.google.gson.JsonObject:161","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonPrimitive getAsJsonPrimitive(java.lang.String memberName) {\n    if (memberName == null) {\n        {\n            return ((com.google.gson.JsonPrimitive)(com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.get(memberName)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"memberName"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:400","type":"CtBinaryOperatorImpl","sourcecode":"(deferredName) != null"},"failures":[255,274,308],"tindex":"c69b5cd8-3e5d-11e6-8758-fb3c4a06d72e","method":{"position":"com.google.gson.internal.bind.DateTypeAdapter:69","type":"CtMethodImpl","sourcecode":"private synchronized java.util.Date deserializeToDate(java.lang.String json) {\n    if (json != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            try {\n                return java.text.DateFormat.parse(json);\n            } catch (java.text.ParseException ignored) {\n            }\n            try {\n                return java.text.DateFormat.parse(json);\n            } catch (java.text.ParseException ignored) {\n            }\n            try {\n                return java.text.DateFormat.parse(json);\n            } catch (java.text.ParseException e) {\n                throw new com.google.gson.JsonSyntaxException(json , e);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"json"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"c69b5cd9-3e5d-11e6-8758-a17ad3b4ccc4","method":{"position":"com.google.gson.internal.bind.SqlDateTypeAdapter:50","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized java.sql.Date read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        final long long = java.text.DateFormat.parse(in.nextString()).getTime();\n        return new java.sql.Date(utilDate);\n    } catch (java.text.ParseException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:86","type":"CtBinaryOperatorImpl","sourcecode":"element instanceof com.google.gson.JsonArray"},"failures":[262],"tindex":"c69b5cda-3e5d-11e6-8758-cddac636fdc0","method":{"position":"com.google.gson.Gson:532","type":"CtMethodImpl","sourcecode":"public java.lang.String toJson(java.lang.Object src, java.lang.reflect.Type typeOfSrc) {\n    if (src instanceof com.google.gson.JsonArray) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.io.StringWriter java.io.StringWriter = new java.io.StringWriter();\n            toJson(src, typeOfSrc, writer);\n            return writer.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"src"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"c69b5cdb-3e5d-11e6-8758-ad7485f18fb5","method":{"position":"com.google.gson.TreeTypeAdapter:50","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic T read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((com.google.gson.JsonDeserializer<T>) == null) {\n        return delegate().read(in);\n    } \n    com.google.gson.JsonElement com.google.gson.JsonElement = com.google.gson.internal.Streams.parse(in);\n    if (value.isJsonNull()) {\n        return null;\n    } \n    return com.google.gson.JsonDeserializer<T>.deserialize(value, com.google.gson.reflect.TypeToken<T>.getType(), com.google.gson.Gson.com.google.gson.JsonDeserializationContext);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:98","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.ParameterizedType"},"failures":[],"tindex":"c69b5cdc-3e5d-11e6-8758-bb8fbbdfcabe","method":{"position":"com.google.gson.internal.Primitives:69","type":"CtMethodImpl","sourcecode":"public static boolean isPrimitive(java.lang.reflect.Type type) {\n    if (type instanceof java.lang.reflect.ParameterizedType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return com.google.gson.internal.Primitives.com.google.gson.internal.Primitives.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.containsKey(type);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:189","type":"CtUnaryOperatorImpl","sourcecode":"!(b instanceof java.lang.reflect.WildcardType)"},"failures":[],"tindex":"c69b83ed-3e5d-11e6-8758-095686bb70d5","method":{"position":"com.google.gson.internal.$Gson$Types:75","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type bound) {\n    return new com.google.gson.internal.$Gson$Types.WildcardTypeImpl(new java.lang.reflect.Type[]{ bound } , com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.java.lang.reflect.Type[]);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"bound"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.DefaultDateTypeAdapter:79","type":"CtUnaryOperatorImpl","sourcecode":"!(json instanceof com.google.gson.JsonPrimitive)"},"failures":[602,379],"tindex":"c69b83ee-3e5d-11e6-8758-4d8d463674a9","method":{"position":"com.google.gson.internal.LinkedTreeMap:276","type":"CtMethodImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V> removeInternalByKey(java.lang.Object key) {\n    if (!(key instanceof com.google.gson.JsonPrimitive)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = findByObject(key);\n            if (node != null) {\n                removeInternal(node, true);\n            } \n            return node;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:139","type":"CtBinaryOperatorImpl","sourcecode":"comparison == 0"},"failures":[],"tindex":"c69b83ef-3e5d-11e6-8758-4df1f45e62c6","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:677","type":"CtMethodImpl","sourcecode":"void reset(int targetSize) {\n    if (targetSize == 0) {\n        {\n            if ((targetSize == targetSize) || (p == targetSize)) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    int int = ((java.lang.Integer.highestOneBit(targetSize)) * 2) - 1;\n                    int = treeCapacity - targetSize;\n                    int = 0;\n                    int = 0;\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = null;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparison":"targetSize"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:158","type":"CtBinaryOperatorImpl","sourcecode":"child == null"},"failures":[],"tindex":"c69b83f0-3e5d-11e6-8758-01fb6a0941bf","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:245","type":"CtMethodImpl","sourcecode":"void removeInternal(com.google.gson.internal.LinkedHashTreeMap.Node<K, V> node, boolean unlink) {\n    if (node == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (unlink) {\n                node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = null;\n            } \n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            if ((left != null) && (right != null)) {\n                com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = (left.int) > (right.int) ? left.last() : right.first();\n                removeInternal(adjacent, false);\n                int int = 0;\n                left = node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                if (left != null) {\n                    leftHeight = left.int;\n                    adjacent.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = left;\n                    left.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = adjacent;\n                    node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = null;\n                } \n                int int = 0;\n                right = node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                if (right != null) {\n                    rightHeight = right.int;\n                    adjacent.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = right;\n                    right.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = adjacent;\n                    node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = null;\n                } \n                adjacent.int = (java.lang.Math.max(leftHeight, rightHeight)) + 1;\n                replaceInParent(node, adjacent);\n                return ;\n            } else if (left != null) {\n                replaceInParent(node, left);\n                node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = null;\n            } else if (right != null) {\n                replaceInParent(node, right);\n                node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = null;\n            } else {\n                replaceInParent(node, null);\n            }\n            rebalance(originalParent, false);\n            (int)--;\n            (int)++;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"child":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:59","type":"CtUnaryOperatorImpl","sourcecode":"!((delegate) instanceof com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.Adapter)"},"failures":[2,3,4,668,669,670,5,6,7,8,9,10,11,12,14,16,17,19,20,21,22,25,26,27,28,29,30,31,32,33,34,35,37,604,605,606,607,608,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,202,205,206,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,0,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,323,324,325,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,610,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,502,503,504,505,507,509,510,511,512,513,514,515,516,518,519,520,521,524,525,526,527,528,529,530,531,532,533,534,537,538,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,614,615,616,599,600],"tindex":"c69bab01-3e5d-11e6-8758-d3789a38b23f","method":{"position":"com.google.gson.Gson:881","type":"CtMethodImpl","sourcecode":"public void setDelegate(com.google.gson.TypeAdapter<T> typeAdapter) {\n    if (!(typeAdapter instanceof com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.Adapter)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((com.google.gson.TypeAdapter<T>) != null) {\n                throw new java.lang.AssertionError();\n            } \n            com.google.gson.TypeAdapter<T> = typeAdapter;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delegate":"typeAdapter"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"c69bd212-3e5d-11e6-8758-c95a68110dd2","method":{"position":"com.google.gson.Gson:310","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return in.nextLong();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:429","type":"CtBinaryOperatorImpl","sourcecode":"(deferredName) != null"},"failures":[671],"tindex":"c69bd213-3e5d-11e6-8758-eb54e97b0284","method":{"position":"com.google.gson.stream.JsonWriter:385","type":"CtMethodImpl","sourcecode":"public com.google.gson.stream.JsonWriter name(java.lang.String name) throws java.io.IOException {\n    if (name != null) {\n        {\n            if (name == null) {\n                throw new java.lang.NullPointerException(\"name == null\");\n            } \n            if ((java.lang.String) != null) {\n                throw new java.lang.IllegalStateException();\n            } \n            if ((int) == 0) {\n                throw new java.lang.IllegalStateException(\"JsonWriter is closed.\");\n            } \n            java.lang.String = name;\n            return com.google.gson.stream.JsonWriter.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"name"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:726","type":"CtBinaryOperatorImpl","sourcecode":"value == 0"},"failures":[672,673,674,3,4,277,287,291,292],"tindex":"c69bd214-3e5d-11e6-8758-492a82f7d061","method":{"position":"com.google.gson.stream.JsonWriter:476","type":"CtMethodImpl","sourcecode":"public com.google.gson.stream.JsonWriter value(long value) throws java.io.IOException {\n    if (value == 0) {\n        {\n            writeDeferredName();\n            beforeValue(false);\n            java.io.Writer.write(java.lang.Long.toString(value));\n            return com.google.gson.stream.JsonWriter.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:386","type":"CtBinaryOperatorImpl","sourcecode":"name == null"},"failures":[],"tindex":"c69bd215-3e5d-11e6-8758-096466861070","method":{"position":"com.google.gson.JsonObject:151","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement get(java.lang.String memberName) {\n    if (memberName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.get(memberName);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"memberName"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:824","type":"CtBinaryOperatorImpl","sourcecode":"p == (com.google.gson.stream.JsonReader.PEEKED_SINGLE_QUOTED)"},"failures":[],"tindex":"c69bd216-3e5d-11e6-8758-6de2fc7fd55a","method":{"position":"com.google.gson.JsonArray:146","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement get(int i) {\n    if (i == i) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (i >= i) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return java.util.List<com.google.gson.JsonElement>.get(i);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"i","com.google.gson.stream.JsonReader.PEEKED_SINGLE_QUOTED":"i"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"c69bd217-3e5d-11e6-8758-75c8108cb725","method":{"position":"com.google.gson.internal.bind.TimeTypeAdapter:63","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized void write(com.google.gson.stream.JsonWriter out, java.sql.Time value) throws java.io.IOException {\n    out.value((value == null ? null : java.text.DateFormat.format(value)));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.DateTypeAdapter:86","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"c69bf928-3e5d-11e6-8758-7b4e552fa61f","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:804","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(java.lang.Object o) {\n    if (o == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (o instanceof java.util.Map.Entry) && ((findByEntry(((java.util.Map.Entry<?, ?>)(o)))) != null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"c69bf929-3e5d-11e6-8758-b7309c84cf86","method":{"position":"com.google.gson.internal.$Gson$Types:151","type":"CtMethodImpl","sourcecode":"static boolean equal(java.lang.Object a, java.lang.Object b) {\n    return (a == b) || ((a != null) && (a.equals(b)));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"a"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1256","type":"CtBinaryOperatorImpl","sourcecode":"(p == (com.google.gson.stream.JsonReader.PEEKED_DOUBLE_QUOTED)) || (p == (com.google.gson.stream.JsonReader.PEEKED_DOUBLE_QUOTED_NAME))"},"failures":[],"tindex":"c69bf92a-3e5d-11e6-8758-e3b7f283b3af","method":{"position":"com.google.gson.stream.JsonReader:1288","type":"CtMethodImpl","sourcecode":"private boolean fillBuffer(int minimum) throws java.io.IOException {\n    if ((minimum == minimum) || (p == minimum)) {\n        {\n            char[] char[] = com.google.gson.stream.JsonReader.this.char[];\n            int -= int;\n            if ((int) != (int)) {\n                int -= int;\n                java.lang.System.arraycopy(buffer, int, buffer, 0, int);\n            } else {\n                int = 0;\n            }\n            int = 0;\n            int int;\n            while ((total = java.io.Reader.read(buffer, int, ((buffer.int) - (int)))) != (-1)) {\n                int += total;\n                if (((((int) == 0) && ((int) == 0)) && ((int) > 0)) && ((buffer[0]) == '\\ufeff')) {\n                    (int)++;\n                    (int)++;\n                    minimum++;\n                } \n                if ((int) >= minimum) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467246624375/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"minimum","com.google.gson.stream.JsonReader.PEEKED_DOUBLE_QUOTED":"minimum","com.google.gson.stream.JsonReader.PEEKED_DOUBLE_QUOTED_NAME":"minimum"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":93,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}