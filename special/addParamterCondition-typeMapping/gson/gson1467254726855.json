{"failureDictionary":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":92,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":110,"com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeWithCustomTypeAdapter":76,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":84,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":17,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":61,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":26,"com.google.gson.MixedStreamTest.testWriteLenient":120,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":44,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":71,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":3,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":68,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":21,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":22,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":43,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":88,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":19,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":70,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":9,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":35,"com.google.gson.functional.StreamingTypeAdaptersTest.testDeserialize":80,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":111,"com.google.gson.functional.ObjectTest.testSingletonLists":41,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":55,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":29,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":33,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":58,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":118,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":2,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":37,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":113,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":15,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":51,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":87,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":25,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":39,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":108,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":40,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":104,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":59,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":46,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":31,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":64,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":74,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":114,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":11,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":96,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":56,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":102,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":91,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":62,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":119,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":73,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":6,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":95,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":57,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":86,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":45,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":66,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":49,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":14,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":89,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":48,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":28,"com.google.gson.MixedStreamTest.testReadMixedStreamed":112,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":1,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":8,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":50,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":54,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":101,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":32,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":99,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":16,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":82,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":115,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":90,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":97,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":27,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":63,"com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree":79,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":52,"com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeNullField":77,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":103,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":5,"com.google.gson.functional.ObjectTest.testNestedDeserialization":60,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":24,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":42,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":93,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":116,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":7,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":67,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":36,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":0,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":47,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":98,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":107,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":100,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":117,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":53,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":105,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":109,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":121,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":85,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":30,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":4,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":81,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":69,"com.google.gson.functional.CollectionTest.testSetDeserialization":23,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":75,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":18,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":72,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":65,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":34,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":83,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":94,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":38,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":20,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":10,"com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeNullObject":78,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":106,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":12,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":13},"transformations":[{"exception":"java.lang.IllegalAccessException","condition":{"position":"com.google.gson.internal.$Gson$Types:132","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.GenericArrayType"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113],"tindex":"b36835e8-3e6c-11e6-920c-57f1187ff60c","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:101","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nvoid read(com.google.gson.stream.JsonReader reader, java.lang.Object value) throws java.io.IOException, java.lang.IllegalAccessException {\n    if (value instanceof java.lang.reflect.GenericArrayType) {\n        {\n            java.lang.Object java.lang.Object = com.google.gson.TypeAdapter<?>.read(reader);\n            if ((fieldValue != null) || (!isPrimitive)) {\n                field.set(value, fieldValue);\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463683/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:469","type":"CtBinaryOperatorImpl","sourcecode":"src == null"},"failures":[],"tindex":"b368ab19-3e6c-11e6-920c-291aedc01426","method":{"position":"com.google.gson.internal.$Gson$Types:151","type":"CtMethodImpl","sourcecode":"static boolean equal(java.lang.Object a, java.lang.Object b) {\n    return (a == b) || ((a != null) && (a.equals(b)));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"src":"a"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.internal.$Gson$Types:94","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.Class"},"failures":[],"tindex":"b368d22a-3e6c-11e6-920c-33e0630ace90","method":{"position":"com.google.gson.Gson:719","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic <T>T fromJson(java.lang.String json, java.lang.reflect.Type typeOfT) throws com.google.gson.JsonSyntaxException {\n    if (typeOfT instanceof java.lang.Class) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463683/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    } else {\n        {\n            if (json == null) {\n                return null;\n            } \n            java.io.StringReader java.io.StringReader = new java.io.StringReader(json);\n            T T = ((T)(fromJson(reader, typeOfT)));\n            return target;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"typeOfT"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"b368d22b-3e6c-11e6-920c-edc01a1f5ecc","method":{"position":"com.google.gson.internal.bind.TypeAdapters:432","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.StringBuffer value) throws java.io.IOException {\n    out.value((value == null ? null : value.toString()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:137","type":"CtBinaryOperatorImpl","sourcecode":"(!serialize) && (!deserialize)"},"failures":[114,115,116,117,118,119,120],"tindex":"b368f93c-3e6c-11e6-920c-73b0cc2b471e","method":{"position":"com.google.gson.Gson:273","type":"CtMethodImpl","sourcecode":"private com.google.gson.TypeAdapter<java.lang.Number> floatAdapter(boolean serializeSpecialFloatingPointValues) {\n    if ((!serializeSpecialFloatingPointValues) && (!serializeSpecialFloatingPointValues)) {\n        {\n            if (serializeSpecialFloatingPointValues) {\n                return com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<java.lang.Number>;\n            } \n            return new com.google.gson.TypeAdapter<java.lang.Number>() {\n                @java.lang.Override\n                public java.lang.Float read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n                    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n                        in.nextNull();\n                        return null;\n                    } \n                    return ((float)(in.nextDouble()));\n                }\n\n                @java.lang.Override\n                public void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n                    if (value == null) {\n                        out.nullValue();\n                        return ;\n                    } \n                    float float = value.floatValue();\n                    checkValidFloatingPoint(floatValue);\n                    out.value(value);\n                }\n            };\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463683/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"serialize":"serializeSpecialFloatingPointValues","deserialize":"serializeSpecialFloatingPointValues"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:166","type":"CtBinaryOperatorImpl","sourcecode":"from instanceof java.lang.Class<?>"},"failures":[121],"tindex":"b368f93d-3e6c-11e6-920c-6dc13b7e5b90","method":{"position":"com.google.gson.Gson:532","type":"CtMethodImpl","sourcecode":"public java.lang.String toJson(java.lang.Object src, java.lang.reflect.Type typeOfSrc) {\n    if (src instanceof java.lang.Class<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463683/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.io.StringWriter java.io.StringWriter = new java.io.StringWriter();\n            toJson(src, typeOfSrc, writer);\n            return writer.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"src"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:431","type":"CtBinaryOperatorImpl","sourcecode":"factory == skipPast"},"failures":[],"tindex":"b369204e-3e6c-11e6-920c-6d12dc64c5c4","method":{"position":"com.google.gson.Gson:422","type":"CtMethodImpl","sourcecode":"public <T>com.google.gson.TypeAdapter<T> getDelegateAdapter(com.google.gson.TypeAdapterFactory skipPast, com.google.gson.reflect.TypeToken<T> type) {\n    if (skipPast == skipPast) {\n        {\n            boolean boolean = false;\n            if (!(java.util.List<com.google.gson.TypeAdapterFactory>.contains(skipPast)))\n                skipPastFound = true;\n            \n            for (com.google.gson.TypeAdapterFactory com.google.gson.TypeAdapterFactory : java.util.List<com.google.gson.TypeAdapterFactory>) {\n                if (!skipPastFound) {\n                    if (factory == skipPast) {\n                        skipPastFound = true;\n                    } \n                    continue;\n                } \n                com.google.gson.TypeAdapter<T> com.google.gson.TypeAdapter<T> = factory.create(com.google.gson.Gson.this, type);\n                if (candidate != null) {\n                    return candidate;\n                } \n            }\n            throw new java.lang.IllegalArgumentException((\"GSON cannot serialize \" + type));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463683/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"skipPast","skipPast":"skipPast"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"b369475f-3e6c-11e6-920c-51464ae25708","method":{"position":"com.google.gson.internal.bind.TypeAdapters:482","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.net.InetAddress read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return java.net.InetAddress.getByName(in.nextString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:182","type":"CtBinaryOperatorImpl","sourcecode":"(java.lang.Double.isNaN(d)) || (java.lang.Double.isInfinite(d))"},"failures":[],"tindex":"b369bc90-3e6c-11e6-920c-fde3547e4333","method":{"position":"com.google.gson.Gson:297","type":"CtMethodImpl","sourcecode":"private void checkValidFloatingPoint(double value) {\n    if ((java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(d))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463683/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(value))) {\n                throw new java.lang.IllegalArgumentException(((value + \" is not a valid double value as per JSON specification. To override this\") + \" behavior, use GsonBuilder.serializeSpecialFloatingPointValues() method.\"));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"d":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"b369bc91-3e6c-11e6-920c-5392d7acb8d6","method":{"position":"com.google.gson.internal.bind.TypeAdapters:156","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Boolean value) throws java.io.IOException {\n    if (value == null) {\n        out.nullValue();\n        return ;\n    } \n    out.value(value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"b369bc92-3e6c-11e6-920c-3dcaa3aa77c0","method":{"position":"com.google.gson.internal.bind.TypeAdapters:482","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.net.InetAddress read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return java.net.InetAddress.getByName(in.nextString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.stream.JsonWriter:213","type":"CtBinaryOperatorImpl","sourcecode":"(indent.length()) == 0"},"failures":[],"tindex":"b369bc93-3e6c-11e6-920c-c1471dab4def","method":{"position":"com.google.gson.Gson:695","type":"CtMethodImpl","sourcecode":"public <T>T fromJson(java.lang.String json, java.lang.Class<T> classOfT) throws com.google.gson.JsonSyntaxException {\n    if ((json.length()) == 0) {\n        {\n            java.lang.Object java.lang.Object = fromJson(json, ((java.lang.reflect.Type)(classOfT)));\n            return com.google.gson.internal.Primitives.wrap(classOfT).cast(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463683/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"indent":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.IllegalAccessException","condition":{"position":"com.google.gson.internal.$Gson$Types:94","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.Class"},"failures":[],"tindex":"b369e3a4-3e6c-11e6-920c-bde41e812760","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:108","type":"CtMethodImpl","sourcecode":"public boolean writeField(java.lang.Object value) throws java.io.IOException, java.lang.IllegalAccessException {\n    if (value instanceof java.lang.Class) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463683/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IllegalAccessException();\n    } else {\n        {\n            if (!(boolean))\n                return false;\n            \n            java.lang.Object java.lang.Object = field.get(value);\n            return fieldValue != value;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"b369e3a5-3e6c-11e6-920c-1ffa2df09390","method":{"position":"com.google.gson.Gson:888","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic T read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((com.google.gson.TypeAdapter<T>) == null) {\n        throw new java.lang.IllegalStateException();\n    } \n    return com.google.gson.TypeAdapter<T>.read(in);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:547","type":"CtBinaryOperatorImpl","sourcecode":"c == '\\u2029'"},"failures":[],"tindex":"b36a0ab6-3e6c-11e6-920c-97459fc7f243","method":{"position":"com.google.gson.stream.JsonReader:755","type":"CtMethodImpl","sourcecode":"private boolean isLiteral(char c) throws java.io.IOException {\n    if (c == '\\u2029') {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463683/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            switch (c) {\n                case '/' :\n                case '\\\\' :\n                case ';' :\n                case '#' :\n                case '=' :\n                    checkLenient();\n                case '{' :\n                case '}' :\n                case '[' :\n                case ']' :\n                case ':' :\n                case ',' :\n                case ' ' :\n                case '\\t' :\n                case '\\f' :\n                case '\\r' :\n                case '\\n' :\n                    return false;\n                default :\n                    return true;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"c"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":15,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}