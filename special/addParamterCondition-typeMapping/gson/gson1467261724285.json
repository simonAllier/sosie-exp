{"failureDictionary":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":8,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":442,"com.google.gson.functional.StringTest.testStringValueDeserialization":440,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":166,"com.google.gson.functional.PrimitiveTest.testBigIntegerDeserialization":292,"com.google.gson.functional.PrimitiveTest.testBigDecimalNaNDeserializationNotSupported":253,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":133,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":564,"com.google.gson.MixedStreamTest.testWriteLenient":206,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":458,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":542,"com.google.gson.ExposeAnnotationExclusionStrategyTest.testNeverSkipClasses":202,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":406,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":125,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":88,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":92,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":541,"com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization":301,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":433,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":492,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":46,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerDeserialization":262,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":362,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":497,"com.google.gson.functional.ObjectTest.testSingletonLists":168,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":67,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":399,"com.google.gson.functional.PrimitiveTest.testNumberDeserialization":246,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":443,"com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue":604,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator":342,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":39,"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":585,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization":414,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":551,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":190,"com.google.gson.functional.PrimitiveTest.testStringsAsBooleans":304,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeRecursive":124,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":228,"com.google.gson.functional.StringTest.testEscapedBackslashInStringDeserialization":456,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":150,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":95,"com.google.gson.functional.PrimitiveTest.testBigDecimalNoFractAsStringRepresentationDeserialization":293,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":525,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":196,"com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization":238,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":593,"com.google.gson.functional.MapTest.testMapOfMapDeserialization":524,"com.google.gson.functional.EnumTest.testEnumCaseMapping":432,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":213,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":441,"com.google.gson.functional.JsonTreeTest.testToJsonTree":52,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsLong":237,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":100,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":149,"com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreBehindInVersion":212,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":38,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":376,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullField":122,"com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization":477,"com.google.gson.functional.PrimitiveTest.testUnquotedStringDeserializationFails":248,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferDeserialization":393,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":500,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":577,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":175,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringDeserialization":453,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":548,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization":17,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsBigIntegerFails":254,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":552,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":591,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":131,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":556,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":44,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":416,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":60,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionDeserialization":316,"com.google.gson.functional.PrimitiveTest.testDoubleInfinityDeserialization":315,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization":413,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullObject":123,"com.google.gson.ExposeAnnotationExclusionStrategyTest.testDifferentSerializeAndDeserializeField":200,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":298,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":277,"com.google.gson.functional.PrimitiveTest.testFloatInfinityDeserialization":322,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":80,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":474,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityDeserialization":275,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":398,"com.google.gson.functional.PrimitiveTest.testDoubleNoFractAsStringRepresentationDeserialization":290,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":459,"com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization":518,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":140,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountryVariant":390,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":65,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":331,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":535,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":299,"com.google.gson.functional.JsonParserTest.testParseInvalidJson":465,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsDouble":291,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":172,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":469,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":103,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":119,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":545,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":134,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":258,"com.google.gson.functional.MapTest.testMapDeserializationWithNullValue":531,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":495,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":144,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":32,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":219,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":333,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings":418,"com.google.gson.functional.MapTest.testNumberKeyDeserialization":537,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":404,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":569,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":216,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":392,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":130,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":565,"com.google.gson.functional.CollectionTest.testSetDeserialization":582,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":47,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":76,"com.google.gson.functional.EnumTest.testEnumSet":424,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersEscapedDeserialization":597,"com.google.gson.functional.PrimitiveTest.testBigDecimalAsStringRepresentationDeserialization":282,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":33,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":332,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampDeserialization":380,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":514,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":78,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":31,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":105,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBytePrimitive":295,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":218,"com.google.gson.functional.PrimitiveTest.testDeserializingDecimalPointValueZeroSucceeds":306,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":40,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":588,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":16,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsIntegerFails":251,"com.google.gson.functional.MapTest.testHashMapDeserialization":509,"com.google.gson.functional.CollectionTest.testLinkedListDeserialization":574,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesDeserialization":403,"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":188,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization":224,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":7,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":135,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":63,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":423,"com.google.gson.functional.MapTest.testSortedMap":528,"com.google.gson.functional.MapTest.testMapSerialization":69,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":9,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedDeserialization":288,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":567,"com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization":479,"com.google.gson.functional.MapTest.testSerializeMaps":68,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":86,"com.google.gson.functional.MapTest.testComplexKeysSerialization":532,"com.google.gson.functional.InternationalizationTest.testStringsWithRawChineseCharactersDeserialization":596,"com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader":536,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":58,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":177,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":430,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":162,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":356,"com.google.gson.functional.EnumTest.testTopLevelEnumDeserialization":429,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":98,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":21,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsDeserialization":558,"com.google.gson.functional.MapTest.testStringKeyDeserialization":534,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsDeserialization":482,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":336,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":318,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":72,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesDeserialization":257,"com.google.gson.functional.PrettyPrintingTest.testMap":96,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigInteger":252,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":436,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":89,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":117,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":373,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls":421,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":189,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysDeserialization":484,"com.google.gson.functional.StringTest.testStringWithEscapedSlashDeserialization":446,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":450,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":387,"com.google.gson.functional.MapTest.testMapSerializationEmpty":533,"com.google.gson.functional.CollectionTest.testQueueSerialization":575,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsByteWrapper":283,"com.google.gson.functional.MapTest.testMapOfMapSerialization":523,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":274,"com.google.gson.JavaSerializationTest.testMapIsSerializable":193,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountry":395,"com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization":579,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":111,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":285,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":343,"com.google.gson.functional.FieldNamingTest.testIdentity":87,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":444,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":334,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":2,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":559,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":22,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":51,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":167,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":232,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalDeserialization":240,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":197,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":233,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":445,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization":280,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":538,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeDeserialization":408,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":183,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidDeserialization":382,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":110,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":389,"com.google.gson.functional.MapTest.testMapDeserializationEmpty":506,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":314,"com.google.gson.functional.MapTest.testMapSubclassSerialization":511,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":41,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":365,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersDeserialization":599,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":1,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":156,"com.google.gson.functional.PrimitiveTest.testBigDecimalDeserialization":272,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":608,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsLongPrimitive":329,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguage":372,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":460,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":420,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":30,"com.google.gson.functional.EnumTest.testEnumSubclass":427,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization":294,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":191,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":549,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization":239,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":129,"com.google.gson.functional.PrimitiveTest.testFloatNaNDeserialization":300,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":132,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":353,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsLongWrapper":242,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":74,"com.google.gson.InnerClassExclusionStrategyTest.testIncludeStaticNestedClassObject":185,"com.google.gson.functional.PrimitiveTest.testBigDecimalNegativeInfinityDeserializationNotSupported":278,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":539,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":142,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":182,"com.google.gson.functional.ArrayTest.testArrayOfNullDeserialization":476,"com.google.gson.functional.PrimitiveTest.testBigDecimalInfinityDeserializationNotSupported":284,"com.google.gson.functional.ObjectTest.testTruncatedDeserialization":547,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization":276,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":351,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":410,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":540,"com.google.gson.functional.MapTest.testMapSubclassDeserialization":508,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":55,"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":463,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":471,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":176,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":361,"com.google.gson.CommentsTest.testParseComments":600,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":75,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":338,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":501,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":5,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigDecimal":297,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":480,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":566,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":448,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":527,"com.google.gson.MixedStreamTest.testReadInvalidState":204,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":43,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":37,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":18,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":412,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":179,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":250,"com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash":605,"com.google.gson.functional.ArrayTest.testArrayOfStringsDeserialization":485,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":112,"com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreAheadInVersion":607,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":267,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":109,"com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization":310,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":396,"com.google.gson.functional.ArrayTest.testEmptyArrayDeserialization":473,"com.google.gson.functional.MapTest.testMapDeserialization":517,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":391,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":101,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":507,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":496,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":26,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":516,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":159,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":498,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":357,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":50,"com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization":428,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":371,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":81,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization":550,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":137,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":438,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":143,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":377,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":363,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":24,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":73,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":97,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":526,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":602,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":415,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigDecimal":236,"com.google.gson.functional.PrimitiveTest.testShortSerialization":313,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":340,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":502,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedDeserialization":303,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":595,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedDeserialization":273,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":302,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsBigDecimal":249,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":381,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":83,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":426,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":181,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":155,"com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues":512,"com.google.gson.functional.PrimitiveTest.testLargeDoubleDeserialization":266,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":320,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":586,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":461,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization":405,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":505,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":210,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization":327,"com.google.gson.functional.PrimitiveTest.testDeserializingNonZeroDecimalPointValuesAsIntegerFails":321,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":121,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":350,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":173,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":335,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":359,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":11,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":367,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":308,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":491,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":19,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsDoublePrimitive":279,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":562,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":544,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":431,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":138,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":598,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":91,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":378,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":434,"com.google.gson.InnerClassExclusionStrategyTest.testExcludeInnerClassField":184,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives":337,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":157,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":160,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":397,"com.google.gson.InnerClassExclusionStrategyTest.testExcludeInnerClassObject":187,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsInt":256,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":64,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":384,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":161,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization":401,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":146,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization":572,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsShortWrapper":243,"com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral":309,"com.google.gson.functional.PrimitiveTest.testNumberSerialization":281,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":324,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":115,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":158,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":425,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":227,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":568,"com.google.gson.functional.MapTest.testGeneralMapField":70,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":543,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":468,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsShortPrimitive":326,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":57,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":234,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":435,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":407,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":529,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":247,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":368,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":487,"com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization":305,"com.google.gson.MixedStreamTest.testReadMixedStreamed":209,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":268,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlDeserialization":379,"com.google.gson.functional.MapTest.testBooleanKeyDeserialization":519,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":198,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":490,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":583,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":494,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBooleanPrimitive":286,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":594,"com.google.gson.JavaSerializationTest.testNumberIsSerializable":192,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":217,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":151,"com.google.gson.functional.MapTest.testDeerializeMapOfMaps":520,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":347,"com.google.gson.functional.MapTest.testMapDeserializationWithNullKey":510,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":325,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":339,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":62,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":13,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsFloatPrimitive":269,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":394,"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":464,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":3,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserialization":366,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionDeserilaization":578,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization":504,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":345,"com.google.gson.functional.ObjectTest.testNestedDeserialization":563,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":360,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":554,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":225,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":141,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":592,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsNumber":323,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":4,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":348,"com.google.gson.functional.StringTest.testSingleQuoteInStringDeserialization":447,"com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys":521,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":29,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":312,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":352,"com.google.gson.JavaSerializationTest.testListIsSerializable":194,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":128,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":462,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":94,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":23,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization":346,"com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey":513,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":165,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":241,"com.google.gson.functional.MapTest.testInterfaceTypeMap":164,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization":478,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":437,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":145,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsDoubleWrapper":244,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":120,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":154,"com.google.gson.ExposeAnnotationExclusionStrategyTest.testNeverSkipExplicitlyExposedAnnotatedFields":203,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":355,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails":439,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":369,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":590,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsInteger":260,"com.google.gson.MixedStreamTest.testWriteClosed":208,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":226,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":576,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":169,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":358,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateDeserialization":417,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":34,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":25,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":6,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":82,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":113,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":153,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":148,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":170,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":90,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":230,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBooleanWrapper":289,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":14,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":354,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":580,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":402,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":221,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":107,"com.google.gson.functional.PrimitiveTest.testDoubleAsStringRepresentationDeserialization":328,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":265,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":49,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderDeserialization":374,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":178,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":466,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":114,"com.google.gson.functional.CollectionTest.testQueueDeserialization":587,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":271,"com.google.gson.functional.PrimitiveTest.testByteDeserialization":287,"com.google.gson.InnerClassExclusionStrategyTest.testIncludeStaticNestedClassField":186,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringDeserialization":452,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization":223,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":231,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":411,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":163,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":557,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":386,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":61,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":561,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":571,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":0,"com.google.gson.functional.MapTest.testRawMapSerialization":71,"com.google.gson.functional.CollectionTest.testNullsInListDeserialization":584,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetDeserialization":400,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize":10,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":136,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":171,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":570,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":503,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":601,"com.google.gson.functional.PrimitiveTest.testByteSerialization":311,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":419,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":470,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapNoTypeSerialization":603,"com.google.gson.ObjectTypeAdapterTest.testSerialize":104,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":59,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsFloatWrapper":255,"com.google.gson.reflect.TypeTokenTest.testIsAssignableFromRawTypes":606,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":126,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":56,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":84,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":35,"com.google.gson.GsonTypeAdapterTest.testDefaultTypeAdapterThrowsParseException":195,"com.google.gson.functional.StringTest.testAssignmentCharDeserialization":449,"com.google.gson.functional.MapTest.testMapWithQuotes":522,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatDeserialization":263,"com.google.gson.functional.StringTest.testEscapingQuotesInStringDeserialization":451,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":330,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":489,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":344,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":48,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsNumber":317,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":45,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":499,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":27,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":560,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":102,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":296,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":383,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":483,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":546,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":152,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":375,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":12,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":127,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":385,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigInteger":307,"com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed":581,"com.google.gson.functional.ArrayTest.testSingleStringArrayDeserialization":472,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":28,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":53,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":409,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":139,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":106,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization":609,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":42,"com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreAtSameVersion":211,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReader":422,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsFloat":245,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":364,"com.google.gson.ExposeAnnotationExclusionStrategyTest.testNeverSkipExposedAnnotatedFields":201,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":341,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":553,"com.google.gson.functional.ObjectTest.testNestedSerialization":79,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":116,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":259,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringDeserialization":455,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":486,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":488,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":530,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":180,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":66,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":199,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":207,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":77,"com.google.gson.functional.UncategorizedTest.testTrailingWhitespace":220,"com.google.gson.functional.PrimitiveTest.testBooleanDeserialization":319,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":147,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":493,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":388,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":214,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsInteger":261,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":370,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":555,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":229,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":454,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":475,"com.google.gson.functional.CollectionTest.testSetSerialization":93,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":235,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":20,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":99,"com.google.gson.functional.StringTest.testStringValueSerialization":457,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":15,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":108,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":349,"com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization":573,"com.google.gson.MixedStreamTest.testWriteInvalidState":205,"com.google.gson.functional.ArrayTest.testInvalidArrayDeserialization":467,"com.google.gson.functional.PrimitiveTest.testBadValueForBigIntegerDeserialization":264,"com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero":270,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":481,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":118,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":85,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":174,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":222,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":589,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":36,"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":515,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":54,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType":215},"transformations":[{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:176","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104],"tindex":"fe34d215-3e7c-11e6-b9d8-f9488c902d7e","method":{"position":"com.google.gson.internal.bind.TypeAdapters:245","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        {\n            out.value(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467261110551/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.ObjectTypeAdapter:95","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[105,0,1,2,3,106,107,108,109,110,111,112,113,4,5,114,6,115,116,7,8,9,117,118,119,120,121,10,122,123,124,11,12,13,14,15,125,126,127,128,129,130,131,132,19,20,133,21,22,134,135,136,137,138,139,23,140,24,141,142,143,144,25,145,146,147,26,148,149,150,27,29,30,31,32,33,34,35,36,37,38,151,152,153,39,40,154,155,41,42,43,45,46,47,156,48,49,50,51,52,57,59,60,61,62,63,64,65,66,67,157,158,159,160,161,162,163,164,165,70,166,73,74,167,168,75,169,170,76,77,78,171,79,172,80,81,173,82,174,175,176,177,178,179,180,83,84,85,86,87,88,181,91,92,93,97,98,102,103,182,183,104],"tindex":"fe354746-3e7c-11e6-b9d8-af67f2b5f5f9","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:94","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\n@java.lang.Override\nvoid write(com.google.gson.stream.JsonWriter writer, java.lang.Object value) throws java.io.IOException, java.lang.IllegalAccessException {\n    if (value == null) {\n        {\n            java.lang.Object java.lang.Object = field.get(value);\n            com.google.gson.TypeAdapter com.google.gson.TypeAdapter = new com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper(context , this.com.google.gson.TypeAdapter<?> , fieldType.getType());\n            t.write(writer, fieldValue);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467261110551/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:232","type":"CtInvocationImpl","sourcecode":"toResolve.isInterface()"},"failures":[184,185,186,187,188],"tindex":"fe356e57-3e7c-11e6-b9d8-3bfdb816e54e","method":{"position":"com.google.gson.internal.Excluder:224","type":"CtMethodImpl","sourcecode":"private boolean isStatic(java.lang.Class<?> clazz) {\n    if (clazz.isInterface()) {\n        {\n            return ((clazz.getModifiers()) & (java.lang.reflect.Modifier.java.lang.reflect.Modifier.int)) != 0;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467261110551/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"clazz"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"fe359568-3e7c-11e6-b9d8-cba544391b04","method":{"position":"com.google.gson.internal.bind.TypeAdapters:482","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.net.InetAddress read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return java.net.InetAddress.getByName(in.nextString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:247","type":"CtBinaryOperatorImpl","sourcecode":"rawSupertype == toResolve"},"failures":[189,190,191,192,193,194,195,105,196,197,198,185,186,199,200,201,202,203,0,204,1,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,2,3,221,106,222,107,108,109,110,111,112,113,4,5,114,6,115,116,7,223,8,9,224,225,117,226,227,118,119,11,228,229,12,13,230,231,14,15,125,126,232,127,128,129,233,234,235,130,131,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,16,307,308,309,310,311,312,17,313,18,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,132,336,19,337,20,338,339,340,341,342,343,344,345,346,347,133,348,21,349,350,351,22,134,135,136,137,352,138,139,23,353,354,140,355,24,356,357,141,142,143,144,25,145,146,147,358,359,26,148,149,150,360,27,361,28,29,30,31,32,33,362,34,35,36,363,37,364,365,38,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,151,396,397,398,399,400,401,402,403,404,405,406,407,408,152,409,410,411,412,153,413,414,415,416,417,418,419,420,39,421,422,423,40,424,425,426,427,428,429,154,430,431,432,433,155,41,42,43,44,45,46,47,434,435,436,437,156,438,439,48,49,50,51,52,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,53,467,468,469,470,471,54,472,473,474,475,55,476,477,478,56,479,57,480,481,482,483,484,58,485,59,486,487,60,61,488,62,63,489,490,64,65,66,491,492,493,494,67,495,157,496,497,498,499,500,158,159,501,160,502,161,503,504,162,505,506,507,508,509,510,511,68,512,513,514,515,516,517,163,518,519,520,521,522,523,69,524,525,526,527,528,164,529,165,70,530,71,531,532,533,534,535,536,537,72,166,73,538,539,74,167,168,540,541,75,542,543,169,544,545,170,546,547,76,548,77,549,550,551,552,78,553,171,79,554,555,172,556,557,558,80,559,81,173,560,82,561,562,563,564,174,175,176,177,565,178,566,567,179,568,180,569,570,83,84,85,86,87,88,571,181,89,572,573,574,575,90,576,577,91,578,579,580,581,582,92,583,584,93,94,585,586,587,95,96,97,98,99,100,101,102,588,589,590,591,592,593,594,595,596,597,598,599,103,600,601,602,603,182,183,104,604],"tindex":"fe35bc79-3e7c-11e6-b9d8-a14dc01b5607","method":{"position":"com.google.gson.internal.Excluder:215","type":"CtMethodImpl","sourcecode":"private boolean isAnonymousOrLocal(java.lang.Class<?> clazz) {\n    if (clazz == clazz) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467261110551/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (clazz == clazz) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467261110551/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return (!(java.lang.Enum.java.lang.Enum.java.lang.Class.isAssignableFrom(clazz))) && ((clazz.isAnonymousClass()) || (clazz.isLocalClass()));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"clazz","rawSupertype":"clazz"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.DefaultDateTypeAdapter:79","type":"CtUnaryOperatorImpl","sourcecode":"!(json instanceof com.google.gson.JsonPrimitive)"},"failures":[],"tindex":"fe35e38a-3e7c-11e6-b9d8-a32a4959e464","method":{"position":"com.google.gson.Gson:552","type":"CtMethodImpl","sourcecode":"public void toJson(java.lang.Object src, java.lang.Appendable writer) throws com.google.gson.JsonIOException {\n    if (!(src instanceof com.google.gson.JsonPrimitive)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467261110551/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    } else {\n        {\n            if (src != null) {\n                toJson(src, src.getClass(), writer);\n            } else {\n                toJson(com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull, writer);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:602","type":"CtUnaryOperatorImpl","sourcecode":"!(lenient)"},"failures":[206,285,298,299,312,318,324],"tindex":"fe360a9b-3e7c-11e6-b9d8-4b437461a6f6","method":{"position":"com.google.gson.Gson:249","type":"CtMethodImpl","sourcecode":"private com.google.gson.TypeAdapter<java.lang.Number> doubleAdapter(boolean serializeSpecialFloatingPointValues) {\n    if (!serializeSpecialFloatingPointValues) {\n        {\n            if (serializeSpecialFloatingPointValues) {\n                return com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<java.lang.Number>;\n            } \n            return new com.google.gson.TypeAdapter<java.lang.Number>() {\n                @java.lang.Override\n                public java.lang.Double read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n                    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n                        in.nextNull();\n                        return null;\n                    } \n                    return in.nextDouble();\n                }\n\n                @java.lang.Override\n                public void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n                    if (value == null) {\n                        out.nullValue();\n                        return ;\n                    } \n                    double double = value.doubleValue();\n                    checkValidFloatingPoint(doubleValue);\n                    out.value(value);\n                }\n            };\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467261110551/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lenient":"serializeSpecialFloatingPointValues"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"fe3631ac-3e7c-11e6-b9d8-b1755a0ed848","method":{"position":"com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:39","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic T read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    return com.google.gson.TypeAdapter<T>.read(in);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:176","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"fe3631ad-3e7c-11e6-b9d8-9fa529e6c1c6","method":{"position":"com.google.gson.Gson:261","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467261110551/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value == null) {\n                out.nullValue();\n                return ;\n            } \n            double double = value.doubleValue();\n            checkValidFloatingPoint(doubleValue);\n            out.value(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:213","type":"CtBinaryOperatorImpl","sourcecode":"(indent.length()) == 0"},"failures":[141,142,143,146,147,149,51,166],"tindex":"fe3658be-3e7c-11e6-b9d8-f5ffdf77562d","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:144","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic com.google.gson.stream.JsonWriter value(java.lang.String value) throws java.io.IOException {\n    if ((value.length()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467261110551/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value == null) {\n                return nullValue();\n            } \n            put(new com.google.gson.JsonPrimitive(value));\n            return com.google.gson.internal.bind.JsonTreeWriter.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"indent":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1091","type":"CtBinaryOperatorImpl","sourcecode":"builder == null"},"failures":[381],"tindex":"fe3658bf-3e7c-11e6-b9d8-1d0397db2cc4","method":{"position":"com.google.gson.internal.bind.TypeAdapters:414","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.StringBuilder value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467261110551/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            out.value((value == null ? null : value.toString()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"builder":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:167","type":"CtBinaryOperatorImpl","sourcecode":"a instanceof java.lang.reflect.ParameterizedType"},"failures":[],"tindex":"fe367fd0-3e7c-11e6-b9d8-737c0dc96128","method":{"position":"com.google.gson.DefaultDateTypeAdapter:70","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement serialize(java.util.Date src, java.lang.reflect.Type typeOfSrc, com.google.gson.JsonSerializationContext context) {\n    if (typeOfSrc instanceof java.lang.reflect.ParameterizedType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467261110551/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.text.DateFormat) {\n                java.lang.String java.lang.String = java.text.DateFormat.format(src);\n                return new com.google.gson.JsonPrimitive(dateFormatAsString);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"typeOfSrc"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.DateTypeAdapter:86","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[381],"tindex":"fe367fd1-3e7c-11e6-b9d8-1dc9e8a52f74","method":{"position":"com.google.gson.internal.bind.DateTypeAdapter:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized void write(com.google.gson.stream.JsonWriter out, java.util.Date value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467261110551/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value == null) {\n                out.nullValue();\n                return ;\n            } \n            java.lang.String java.lang.String = java.text.DateFormat.format(value);\n            out.value(dateFormatAsString);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"fe36a6e2-3e7c-11e6-b9d8-31c9e0cb81f1","method":{"position":"com.google.gson.TypeAdapter:194","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic T read(com.google.gson.stream.JsonReader reader) throws java.io.IOException {\n    if ((reader.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        reader.nextNull();\n        return null;\n    } \n    return com.google.gson.TypeAdapter.this.read(reader);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"reader"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"fe36cdf3-3e7c-11e6-b9d8-2d88c951ad4b","method":{"position":"com.google.gson.TreeTypeAdapter:50","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic T read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((com.google.gson.JsonDeserializer<T>) == null) {\n        return delegate().read(in);\n    } \n    com.google.gson.JsonElement com.google.gson.JsonElement = com.google.gson.internal.Streams.parse(in);\n    if (value.isJsonNull()) {\n        return null;\n    } \n    return com.google.gson.JsonDeserializer<T>.deserialize(value, com.google.gson.reflect.TypeToken<T>.getType(), com.google.gson.Gson.com.google.gson.JsonDeserializationContext);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:293","type":"CtBinaryOperatorImpl","sourcecode":"collectionType instanceof java.lang.reflect.ParameterizedType"},"failures":[],"tindex":"fe36cdf4-3e7c-11e6-b9d8-45e92dfc5577","method":{"position":"com.google.gson.internal.$Gson$Types:226","type":"CtMethodImpl","sourcecode":"static java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type context, java.lang.Class<?> rawType, java.lang.Class<?> toResolve) {\n    if (toResolve == rawType) {\n        return context;\n    } \n    if (toResolve.isInterface()) {\n        java.lang.Class<?>[] java.lang.Class<?>[] = rawType.getInterfaces();\n        for (int int = 0, int int = interfaces.int ; i < length ; i++) {\n            if ((interfaces[i]) == toResolve) {\n                return rawType.getGenericInterfaces()[i];\n            } else if (toResolve.isAssignableFrom(interfaces[i])) {\n                return com.google.gson.internal.$Gson$Types.getGenericSupertype(rawType.getGenericInterfaces()[i], interfaces[i], toResolve);\n            } \n        }\n    } \n    if (!(rawType.isInterface())) {\n        while (rawType != (java.lang.Object.java.lang.Object.java.lang.Class)) {\n            java.lang.Class<?> java.lang.Class<?> = rawType.getSuperclass();\n            if (rawSupertype == toResolve) {\n                return rawType.getGenericSuperclass();\n            } else if (toResolve.isAssignableFrom(rawSupertype)) {\n                return com.google.gson.internal.$Gson$Types.getGenericSupertype(rawType.getGenericSuperclass(), rawSupertype, toResolve);\n            } \n            rawType = rawSupertype;\n        }\n    } \n    return toResolve;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collectionType":"context"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.ArrayTypeAdapter:64","type":"CtBinaryOperatorImpl","sourcecode":"(in.peek()) == (com.google.gson.stream.JsonToken.NULL)"},"failures":[],"tindex":"fe36f505-3e7c-11e6-b9d8-6765affc067a","method":{"position":"com.google.gson.internal.$Gson$Types:563","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object other) {\n    return (other instanceof java.lang.reflect.WildcardType) && (com.google.gson.internal.$Gson$Types.equals(com.google.gson.internal.$Gson$Types.WildcardTypeImpl.this, ((java.lang.reflect.WildcardType)(other))));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"in":"other","com.google.gson.stream.JsonToken.NULL":"other"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:255","type":"CtBinaryOperatorImpl","sourcecode":"(left != null) && (right != null)"},"failures":[605],"tindex":"fe36f506-3e7c-11e6-b9d8-65f8ca1b47ab","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:429","type":"CtMethodImpl","sourcecode":"private void rotateRight(com.google.gson.internal.LinkedHashTreeMap.Node<K, V> root) {\n    if ((root != null) && (root != null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467261110551/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = pivot.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = pivot.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            root.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = pivotRight;\n            if (pivotRight != null) {\n                pivotRight.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root;\n            } \n            replaceInParent(root, pivot);\n            pivot.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root;\n            root.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = pivot;\n            root.int = (java.lang.Math.max((right != null ? right.int : 0), (pivotRight != null ? pivotRight.int : 0))) + 1;\n            pivot.int = (java.lang.Math.max(root.int, (pivotLeft != null ? pivotLeft.int : 0))) + 1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"left":"root","right":"root"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:123","type":"CtBinaryOperatorImpl","sourcecode":"from == null"},"failures":[],"tindex":"fe374327-3e7c-11e6-b9d8-1d99713a84f2","method":{"position":"com.google.gson.internal.LinkedTreeMap:574","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(java.lang.Object o) {\n    if (o == null) {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = findByEntry(((java.util.Map.Entry<?, ?>)(o)));\n            if (node == null) {\n                return false;\n            } \n            removeInternal(node, true);\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467261110551/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"fe376a38-3e7c-11e6-b9d8-bbf836ed54ae","method":{"position":"com.google.gson.internal.bind.CollectionTypeAdapterFactory:88","type":"CtMethodImpl","sourcecode":"public void write(com.google.gson.stream.JsonWriter out, java.util.Collection<E> collection) throws java.io.IOException {\n    if (collection == null) {\n        out.nullValue();\n        return ;\n    } \n    out.beginArray();\n    for (E E : collection) {\n        com.google.gson.TypeAdapter<E>.write(out, element);\n    }\n    out.endArray();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl","sourcecode":"field.isSynthetic()"},"failures":[],"tindex":"fe376a39-3e7c-11e6-b9d8-898528e81c2d","method":{"position":"com.google.gson.FieldNamingPolicy:37","type":"CtMethodImpl","sourcecode":"public java.lang.String translateName(java.lang.reflect.Field f) {\n    if (f.isSynthetic()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467261110551/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return f.getName();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"f"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:198","type":"CtBinaryOperatorImpl","sourcecode":"out == null"},"failures":[],"tindex":"fe37914a-3e7c-11e6-b9d8-4b63aab6bfce","method":{"position":"com.google.gson.Gson:644","type":"CtMethodImpl","sourcecode":"private com.google.gson.stream.JsonWriter newJsonWriter(java.io.Writer writer) throws java.io.IOException {\n    if (writer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467261110551/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (boolean) {\n                writer.write(com.google.gson.Gson.com.google.gson.Gson.java.lang.String);\n            } \n            com.google.gson.stream.JsonWriter com.google.gson.stream.JsonWriter = new com.google.gson.stream.JsonWriter(writer);\n            if (boolean) {\n                jsonWriter.setIndent(\"  \");\n            } \n            jsonWriter.setSerializeNulls(boolean);\n            return jsonWriter;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"out":"writer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:136","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.TypeVariable"},"failures":[],"tindex":"fe37914b-3e7c-11e6-b9d8-21be83c3dae3","method":{"position":"com.google.gson.internal.$Gson$Types:277","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type array) {\n    return array instanceof java.lang.reflect.GenericArrayType ? ((java.lang.reflect.GenericArrayType)(array)).getGenericComponentType() : ((java.lang.Class<?>)(array)).getComponentType();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"array"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:232","type":"CtInvocationImpl","sourcecode":"toResolve.isInterface()"},"failures":[606],"tindex":"fe37914c-3e7c-11e6-b9d8-7b41dc307382","method":{"position":"com.google.gson.reflect.TypeToken:111","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic boolean isAssignableFrom(java.lang.Class<?> cls) {\n    if (cls.isInterface()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467261110551/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return isAssignableFrom(((java.lang.reflect.Type)(cls)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"cls"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:227","type":"CtBinaryOperatorImpl","sourcecode":"toResolve == rawType"},"failures":[],"tindex":"fe37b85d-3e7c-11e6-b9d8-4fada3c4ebe0","method":{"position":"com.google.gson.internal.Excluder:215","type":"CtMethodImpl","sourcecode":"private boolean isAnonymousOrLocal(java.lang.Class<?> clazz) {\n    if (clazz == clazz) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467261110551/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (clazz == clazz) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467261110551/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return (!(java.lang.Enum.java.lang.Enum.java.lang.Class.isAssignableFrom(clazz))) && ((clazz.isAnonymousClass()) || (clazz.isLocalClass()));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"rawType":"clazz","toResolve":"clazz"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:166","type":"CtBinaryOperatorImpl","sourcecode":"from instanceof java.lang.Class<?>"},"failures":[],"tindex":"fe37b85e-3e7c-11e6-b9d8-11fa50102919","method":{"position":"com.google.gson.internal.$Gson$Types:158","type":"CtMethodImpl","sourcecode":"public static boolean equals(java.lang.reflect.Type a, java.lang.reflect.Type b) {\n    if (a == b) {\n        return true;\n    } else if (a instanceof java.lang.Class) {\n        return a.equals(b);\n    } else if (a instanceof java.lang.reflect.ParameterizedType) {\n        if (!(b instanceof java.lang.reflect.ParameterizedType)) {\n            return false;\n        } \n        java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(a));\n        java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(b));\n        return ((com.google.gson.internal.$Gson$Types.equal(pa.getOwnerType(), pb.getOwnerType())) && (pa.getRawType().equals(pb.getRawType()))) && (java.util.Arrays.equals(pa.getActualTypeArguments(), pb.getActualTypeArguments()));\n    } else if (a instanceof java.lang.reflect.GenericArrayType) {\n        if (!(b instanceof java.lang.reflect.GenericArrayType)) {\n            return false;\n        } \n        java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(a));\n        java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(b));\n        return com.google.gson.internal.$Gson$Types.equals(ga.getGenericComponentType(), gb.getGenericComponentType());\n    } else if (a instanceof java.lang.reflect.WildcardType) {\n        if (!(b instanceof java.lang.reflect.WildcardType)) {\n            return false;\n        } \n        java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(a));\n        java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(b));\n        return (java.util.Arrays.equals(wa.getUpperBounds(), wb.getUpperBounds())) && (java.util.Arrays.equals(wa.getLowerBounds(), wb.getLowerBounds()));\n    } else if (a instanceof java.lang.reflect.TypeVariable) {\n        if (!(b instanceof java.lang.reflect.TypeVariable)) {\n            return false;\n        } \n        java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(a));\n        java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(b));\n        return ((va.getGenericDeclaration()) == (vb.getGenericDeclaration())) && (va.getName().equals(vb.getName()));\n    } else {\n        return false;\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"b"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:245","type":"CtBinaryOperatorImpl","sourcecode":"annotationVersion <= (version)"},"failures":[607,211,212,608,11,228,229,12,13,230,231,14,609],"tindex":"fe37df6f-3e7c-11e6-b9d8-553554ad0ffa","method":{"position":"com.google.gson.internal.Excluder:69","type":"CtMethodImpl","sourcecode":"public com.google.gson.internal.Excluder withVersion(double ignoreVersionsAfter) {\n    if (ignoreVersionsAfter <= ignoreVersionsAfter) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467261110551/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.Excluder com.google.gson.internal.Excluder = clone();\n            result.double = ignoreVersionsAfter;\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"version":"ignoreVersionsAfter","annotationVersion":"ignoreVersionsAfter"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonElement:103","type":"CtInvocationImpl","sourcecode":"isJsonArray()"},"failures":[],"tindex":"fe380680-3e7c-11e6-b9d8-a9c093dcfa73","method":{"position":"com.google.gson.GsonBuilder:447","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\npublic com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type type, java.lang.Object typeAdapter) {\n    com.google.gson.internal.$Gson$Preconditions.checkArgument(((((typeAdapter instanceof com.google.gson.JsonSerializer<?>) || (typeAdapter instanceof com.google.gson.JsonDeserializer<?>)) || (typeAdapter instanceof com.google.gson.InstanceCreator<?>)) || (typeAdapter instanceof com.google.gson.TypeAdapter<?>)));\n    if (typeAdapter instanceof com.google.gson.InstanceCreator<?>) {\n        java.util.Map<java.lang.reflect.Type, com.google.gson.InstanceCreator<?>>.put(type, ((com.google.gson.InstanceCreator)(typeAdapter)));\n    } \n    if ((typeAdapter instanceof com.google.gson.JsonSerializer<?>) || (typeAdapter instanceof com.google.gson.JsonDeserializer<?>)) {\n        com.google.gson.reflect.TypeToken<?> com.google.gson.reflect.TypeToken<?> = com.google.gson.reflect.TypeToken.get(type);\n        java.util.List<com.google.gson.TypeAdapterFactory>.add(com.google.gson.TreeTypeAdapter.newFactoryWithMatchRawType(typeToken, typeAdapter));\n    } \n    if (typeAdapter instanceof com.google.gson.TypeAdapter<?>) {\n        java.util.List<com.google.gson.TypeAdapterFactory>.add(com.google.gson.internal.bind.TypeAdapters.newFactory(com.google.gson.reflect.TypeToken.get(type), ((com.google.gson.TypeAdapter)(typeAdapter))));\n    } \n    return com.google.gson.GsonBuilder.this;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"typeAdapter"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"fe380681-3e7c-11e6-b9d8-4145ef5430c2","method":{"position":"com.google.gson.Gson:895","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, T value) throws java.io.IOException {\n    if ((com.google.gson.TypeAdapter<T>) == null) {\n        throw new java.lang.IllegalStateException();\n    } \n    com.google.gson.TypeAdapter<T>.write(out, value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:378","type":"CtVariableReadImpl","sourcecode":"insert"},"failures":[],"tindex":"fe380682-3e7c-11e6-b9d8-7954b21547bb","method":{"position":"com.google.gson.stream.JsonReader:325","type":"CtMethodImpl","sourcecode":"public final void setLenient(boolean lenient) {\n    if (lenient) {\n        {\n            com.google.gson.stream.JsonReader.this.boolean = lenient;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467261110551/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"insert":"lenient"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:255","type":"CtBinaryOperatorImpl","sourcecode":"(left != null) && (right != null)"},"failures":[],"tindex":"fe382d93-3e7c-11e6-b9d8-b7d856cca415","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:401","type":"CtMethodImpl","sourcecode":"private void rotateLeft(com.google.gson.internal.LinkedHashTreeMap.Node<K, V> root) {\n    if ((root != null) && (root != null)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467261110551/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = pivot.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = pivot.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            root.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = pivotLeft;\n            if (pivotLeft != null) {\n                pivotLeft.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root;\n            } \n            replaceInParent(root, pivot);\n            pivot.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root;\n            root.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = pivot;\n            root.int = (java.lang.Math.max((left != null ? left.int : 0), (pivotLeft != null ? pivotLeft.int : 0))) + 1;\n            pivot.int = (java.lang.Math.max(root.int, (pivotRight != null ? pivotRight.int : 0))) + 1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"left":"root","right":"root"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.reflect.TypeToken:83","type":"CtBinaryOperatorImpl","sourcecode":"superclass instanceof java.lang.Class"},"failures":[],"tindex":"fe382d94-3e7c-11e6-b9d8-5fd3eb0768e9","method":{"position":"com.google.gson.internal.bind.ArrayTypeAdapter:84","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Object array) throws java.io.IOException {\n    if (array instanceof java.lang.Class) {\n        {\n            if (array == null) {\n                out.nullValue();\n                return ;\n            } \n            out.beginArray();\n            for (int int = 0, int int = java.lang.reflect.Array.getLength(array) ; i < length ; i++) {\n                E E = ((E)(java.lang.reflect.Array.get(array, i)));\n                com.google.gson.TypeAdapter<E>.write(out, value);\n            }\n            out.endArray();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467261110551/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"superclass":"array"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":32,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}