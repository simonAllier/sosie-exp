{"failureDictionary":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":86,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":304,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":104,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":1,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":364,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":333,"com.google.gson.MixedStreamTest.testWriteLenient":442,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":348,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":97,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":23,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":20,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":133,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":347,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":122,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":264,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":58,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":324,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":340,"com.google.gson.functional.ObjectTest.testSingletonLists":201,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":265,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":282,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":305,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator":411,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":115,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization":439,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":354,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":400,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":386,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":85,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":232,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":31,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":107,"com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization":420,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":229,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":303,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":444,"com.google.gson.functional.JsonTreeTest.testToJsonTree":92,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":237,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":39,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":8,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":434,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullField":452,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":95,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":46,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":352,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization":193,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":207,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":227,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":154,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":357,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":217,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":290,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":158,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization":438,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":186,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullObject":453,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":180,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":213,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":257,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":281,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":334,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":125,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":89,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":27,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":187,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":212,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":253,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":78,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":112,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":351,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":6,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":172,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":381,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":343,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":124,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":425,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":407,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":283,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":427,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":61,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":278,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":153,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":49,"com.google.gson.functional.CollectionTest.testSetDeserialization":21,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":59,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":42,"com.google.gson.functional.EnumTest.testEnumSet":116,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":323,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":406,"com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithNestedWildcards":79,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":208,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":313,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":322,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":368,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":224,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":315,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":190,"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":297,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization":429,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":9,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":243,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":87,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":373,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":370,"com.google.gson.functional.MapTest.testSerializeMaps":142,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":301,"com.google.gson.functional.MapTest.testComplexKeysSerialization":32,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsFalse":99,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":263,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":48,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":316,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":167,"com.google.gson.internal.LinkedTreeMapTest.testRemoveRootDoesNotDoubleUnlink":455,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":18,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriter":457,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":235,"com.google.gson.JsonObjectTest.testAddingAndRemovingObjectProperties":456,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":2,"com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithBasicWildcards":81,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":135,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":196,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":220,"com.google.gson.functional.PrettyPrintingTest.testMap":233,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":128,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":244,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":269,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls":402,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":399,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeMap":454,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":309,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":275,"com.google.gson.functional.MapTest.testMapOfMapSerialization":145,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":178,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":55,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":183,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":412,"com.google.gson.internal.bind.JsonTreeWriterTest.testStrictBoxedNansAndInfinities":83,"com.google.gson.functional.FieldNamingTest.testIdentity":302,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":306,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":408,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":245,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":359,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":5,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":91,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":93,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":200,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":108,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":94,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":307,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization":181,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":365,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":111,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":54,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":276,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":195,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":242,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":329,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":60,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":291,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":391,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":335,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":314,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":321,"com.google.gson.functional.EnumTest.testEnumSubclass":119,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization":184,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":353,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":401,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization":169,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":151,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":28,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":16,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":216,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":366,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":33,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":110,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":4,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization":179,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":286,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":346,"com.google.gson.functional.MapTest.testMapSubclassDeserialization":415,"com.google.gson.MixedStreamTest.testWriteNulls":459,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":446,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":255,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":47,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":319,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":138,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":202,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":341,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":67,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":378,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":426,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":146,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":308,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSubTypeFirstAllowed":423,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":56,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":7,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":194,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":288,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":239,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":171,"com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash":396,"com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithTypeParameters":80,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":64,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":175,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":53,"com.google.gson.JsonArrayTest.testRemove":82,"com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization":191,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":435,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":277,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":238,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":414,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":339,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":38,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":163,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":161,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":19,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":70,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":72,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":43,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization":206,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":11,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":222,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":106,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":270,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":328,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":126,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":215,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":234,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":289,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":410,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":165,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":231,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":188,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":73,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":298,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":118,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":331,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":241,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":197,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":405,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":336,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":342,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization":437,"com.google.gson.internal.bind.JsonTreeWriterTest.testObject":100,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":395,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":449,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":123,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":37,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":44,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":332,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsTrue":102,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":267,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":292,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":345,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":384,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":136,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":362,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":350,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":121,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":13,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":266,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":131,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":385,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":218,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives":409,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":160,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":164,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":280,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":88,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":272,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":166,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":35,"com.google.gson.functional.PrimitiveTest.testNumberSerialization":182,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":198,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":29,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":117,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":162,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":376,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":371,"com.google.gson.functional.MapTest.testGeneralMapField":149,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":349,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":252,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":152,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":219,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":260,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":284,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":40,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":157,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":432,"com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization":189,"com.google.gson.MixedStreamTest.testReadMixedStreamed":394,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":176,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":109,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":382,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":380,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":230,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":367,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":75,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":296,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":139,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":199,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":249,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":294,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedObject":101,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":279,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":246,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization":419,"com.google.gson.functional.ObjectTest.testNestedDeserialization":363,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":413,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":211,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":422,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":374,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":105,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":228,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":66,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":317,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":320,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":192,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":12,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":26,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":337,"com.google.gson.functional.ObjectTest.testNullSerialization":458,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":15,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":148,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":170,"com.google.gson.functional.MapTest.testInterfaceTypeMap":147,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":221,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":344,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":120,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":448,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails":223,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":330,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":268,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":226,"com.google.gson.MixedStreamTest.testWriteClosed":393,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":130,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":375,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":36,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":203,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":325,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":34,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":69,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":65,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":214,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":76,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":168,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":204,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":129,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":388,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":295,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":17,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":132,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":436,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":430,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":51,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":174,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":90,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":50,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":250,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":68,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":177,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization":428,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":287,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":389,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":143,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":358,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":274,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":159,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":361,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":127,"com.google.gson.functional.MapTest.testRawMapSerialization":150,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":390,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize":450,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":10,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":209,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":62,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":418,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":103,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":114,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":254,"com.google.gson.ObjectTypeAdapterTest.testSerialize":0,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":441,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":155,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":24,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":259,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":299,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":326,"com.google.gson.GsonTypeAdapterTest.testDefaultTypeAdapterThrowsParseException":397,"com.google.gson.functional.MapTest.testMapWithQuotes":144,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":134,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":431,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":141,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":63,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":57,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":417,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":318,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":360,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":369,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":185,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":271,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":41,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":262,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":285,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":433,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":25,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":273,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":293,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriterAndSerializeNulls":403,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":84,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":98,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":251,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":14,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":247,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization":440,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":372,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":404,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":140,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize2dArray":447,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":355,"com.google.gson.functional.ObjectTest.testNestedSerialization":210,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":30,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":156,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":173,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":248,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":416,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":240,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":383,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":113,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":443,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":205,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":96,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":379,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":74,"com.google.gson.GsonBuilderTest.testCreatingMoreThanOnce":398,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":445,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":71,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":356,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":387,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize1dArray":451,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":310,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":258,"com.google.gson.functional.CollectionTest.testSetSerialization":22,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":338,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":137,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":236,"com.google.gson.functional.StringTest.testStringValueSerialization":311,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":312,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":3,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":52,"com.google.gson.MixedStreamTest.testWriteInvalidState":392,"com.google.gson.functional.ObjectTest.testJsonObjectSerialization":421,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":261,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":77,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":300,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":45,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":377,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":225,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":327,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":256,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType":424},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:159","type":"CtBinaryOperatorImpl","sourcecode":"a == b"},"failures":[],"tindex":"3b1ddf43-3e83-11e6-b1b4-cd642737e7c7","method":{"position":"com.google.gson.internal.$Gson$Types:277","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type array) {\n    return array instanceof java.lang.reflect.GenericArrayType ? ((java.lang.reflect.GenericArrayType)(array)).getGenericComponentType() : ((java.lang.Class<?>)(array)).getComponentType();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"array","b":"array"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:107","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.WildcardType"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],"tindex":"3b1e2d64-3e83-11e6-b1b4-c95f025945c6","method":{"position":"com.google.gson.internal.ConstructorConstructor:200","type":"CtMethodImpl","sourcecode":"private <T>com.google.gson.internal.ObjectConstructor<T> newUnsafeAllocator(final java.lang.reflect.Type type, final java.lang.Class<? super T> rawType) {\n    if (!(type.isAssignableFrom(rawType))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (type instanceof java.lang.reflect.WildcardType) {\n                {\n                    return new com.google.gson.internal.ObjectConstructor<T>() {\n                        private final com.google.gson.internal.UnsafeAllocator unsafeAllocator = com.google.gson.internal.UnsafeAllocator.create();\n\n                        @java.lang.SuppressWarnings(value = \"unchecked\")\n                        public T construct() {\n                            try {\n                                java.lang.Object java.lang.Object = com.google.gson.internal.UnsafeAllocator.newInstance(rawType);\n                                return ((T)(newInstance));\n                            } catch (java.lang.Exception e) {\n                                throw new java.lang.RuntimeException((((\"Unable to invoke no-args constructor for \" + type) + \". \") + \"Register an InstanceCreator with Gson for this type may fix this problem.\") , e);\n                            }\n                        }\n                    };\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:111","type":"CtInvocationImpl","sourcecode":"primitive.isString()"},"failures":[],"tindex":"3b1e5475-3e83-11e6-b1b4-6f35b6a9b948","method":{"position":"com.google.gson.JsonArray:115","type":"CtMethodImpl","sourcecode":"public boolean contains(com.google.gson.JsonElement element) {\n    if (element == null) {\n        {\n            if (element.isString()) {\n                {\n                    return java.util.List<com.google.gson.JsonElement>.contains(element);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"primitive":"element"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:306","type":"CtBinaryOperatorImpl","sourcecode":"longSerializationPolicy == (com.google.gson.LongSerializationPolicy.DEFAULT)"},"failures":[],"tindex":"3b1e5476-3e83-11e6-b1b4-1b4ac8ce86cc","method":{"position":"com.google.gson.Gson:305","type":"CtMethodImpl","sourcecode":"private com.google.gson.TypeAdapter<java.lang.Number> longAdapter(com.google.gson.LongSerializationPolicy longSerializationPolicy) {\n    if (longSerializationPolicy == longSerializationPolicy) {\n        {\n            if (longSerializationPolicy == (com.google.gson.LongSerializationPolicy.com.google.gson.LongSerializationPolicy.com.google.gson.LongSerializationPolicy)) {\n                return com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<java.lang.Number>;\n            } \n            return new com.google.gson.TypeAdapter<java.lang.Number>() {\n                @java.lang.Override\n                public java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n                    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n                        in.nextNull();\n                        return null;\n                    } \n                    return in.nextLong();\n                }\n\n                @java.lang.Override\n                public void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n                    if (value == null) {\n                        out.nullValue();\n                        return ;\n                    } \n                    out.value(value.toString());\n                }\n            };\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"longSerializationPolicy":"longSerializationPolicy","com.google.gson.LongSerializationPolicy.DEFAULT":"longSerializationPolicy"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:189","type":"CtUnaryOperatorImpl","sourcecode":"!(b instanceof java.lang.reflect.WildcardType)"},"failures":[],"tindex":"3b1e5477-3e83-11e6-b1b4-cdfbd71ce809","method":{"position":"com.google.gson.internal.$Gson$Types:217","type":"CtMethodImpl","sourcecode":"public static java.lang.String typeToString(java.lang.reflect.Type type) {\n    return type instanceof java.lang.Class ? ((java.lang.Class<?>)(type)).getName() : type.toString();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"type"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.stream.JsonWriter:565","type":"CtBinaryOperatorImpl","sourcecode":"(indent) == null"},"failures":[],"tindex":"3b1e7b88-3e83-11e6-b1b4-87ea30fe5b59","method":{"position":"com.google.gson.JsonParser:44","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement parse(java.lang.String json) throws com.google.gson.JsonSyntaxException {\n    if (json == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    } else {\n        {\n            return parse(new java.io.StringReader(json));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"indent":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"3b1e7b89-3e83-11e6-b1b4-9dd0b1b4b1ce","method":{"position":"com.google.gson.Gson:895","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, T value) throws java.io.IOException {\n    if ((com.google.gson.TypeAdapter<T>) == null) {\n        throw new java.lang.IllegalStateException();\n    } \n    com.google.gson.TypeAdapter<T>.write(out, value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:218","type":"CtInvocationImpl","sourcecode":"com.google.gson.reflect.TypeToken.typeEquals(ptype, to, typeVarMap)"},"failures":[79,80,81],"tindex":"3b1e7b8a-3e83-11e6-b1b4-c73379676060","method":{"position":"com.google.gson.reflect.TypeToken:238","type":"CtMethodImpl","sourcecode":"private static boolean typeEquals(java.lang.reflect.ParameterizedType from, java.lang.reflect.ParameterizedType to, java.util.Map<java.lang.String, java.lang.reflect.Type> typeVarMap) {\n    if (com.google.gson.reflect.TypeToken.typeEquals(from, to, typeVarMap)) {\n        {\n            if (from.getRawType().equals(to.getRawType())) {\n                java.lang.reflect.Type[] java.lang.reflect.Type[] = from.getActualTypeArguments();\n                java.lang.reflect.Type[] java.lang.reflect.Type[] = to.getActualTypeArguments();\n                for (int int = 0 ; i < (fromArgs.int) ; i++) {\n                    if (!(com.google.gson.reflect.TypeToken.matches(fromArgs[i], toArgs[i], typeVarMap))) {\n                        return false;\n                    } \n                }\n                return true;\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ptype":"from","typeVarMap":"typeVarMap","to":"to"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:709","type":"CtBinaryOperatorImpl","sourcecode":"last == (com.google.gson.stream.JsonReader.NUMBER_CHAR_DIGIT)"},"failures":[82],"tindex":"3b1ea29b-3e83-11e6-b1b4-411bb0e4f0e0","method":{"position":"com.google.gson.JsonArray:105","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement remove(int index) {\n    if (index == index) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<com.google.gson.JsonElement>.remove(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"last":"index","com.google.gson.stream.JsonReader.NUMBER_CHAR_DIGIT":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:491","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[83,84,85,86,69,87,88,89,90,70,91,92],"tindex":"3b1ea29c-3e83-11e6-b1b4-75e0fd994973","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:175","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic com.google.gson.stream.JsonWriter value(java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        {\n            if (value == null) {\n                return nullValue();\n            } \n            if (!(isLenient())) {\n                double double = value.doubleValue();\n                if ((java.lang.Double.isNaN(d)) || (java.lang.Double.isInfinite(d))) {\n                    throw new java.lang.IllegalArgumentException((\"JSON forbids NaN and infinities: \" + value));\n                } \n            } \n            put(new com.google.gson.JsonPrimitive(value));\n            return com.google.gson.internal.bind.JsonTreeWriter.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:122","type":"CtBinaryOperatorImpl","sourcecode":"o == (com.google.gson.internal.bind.JsonTreeReader.SENTINEL_CLOSED)"},"failures":[84,23,24,93,25,26,94,95,33,35,96,39,86,68,69,92],"tindex":"3b1ea29d-3e83-11e6-b1b4-459d00e863e4","method":{"position":"com.google.gson.Gson:468","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement toJsonTree(java.lang.Object src) {\n    if (src == src) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (src == null) {\n                return com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull;\n            } \n            return toJsonTree(src, src.getClass());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"com.google.gson.internal.bind.JsonTreeReader.SENTINEL_CLOSED":"src","o":"src"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:438","type":"CtBinaryOperatorImpl","sourcecode":"candidate != null"},"failures":[],"tindex":"3b1ec9ae-3e83-11e6-b1b4-c90dcbb0fb20","method":{"position":"com.google.gson.Gson:881","type":"CtMethodImpl","sourcecode":"public void setDelegate(com.google.gson.TypeAdapter<T> typeAdapter) {\n    if (typeAdapter != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (typeAdapter != null) {\n                {\n                    if ((com.google.gson.TypeAdapter<T>) != null) {\n                        throw new java.lang.AssertionError();\n                    } \n                    com.google.gson.TypeAdapter<T> = typeAdapter;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"candidate":"typeAdapter"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1291","type":"CtBinaryOperatorImpl","sourcecode":"(limit) != (pos)"},"failures":[97,98],"tindex":"3b1ec9af-3e83-11e6-b1b4-df565da518c0","method":{"position":"com.google.gson.GsonBuilder:402","type":"CtMethodImpl","sourcecode":"public com.google.gson.GsonBuilder setDateFormat(int style) {\n    if (style == style) {\n        {\n            if (style != style) {\n                {\n                    com.google.gson.GsonBuilder.this.int = style;\n                    com.google.gson.GsonBuilder.this.java.lang.String = null;\n                    return com.google.gson.GsonBuilder.this;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pos":"style","limit":"style"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.Gson:720","type":"CtBinaryOperatorImpl","sourcecode":"json == null"},"failures":[99,100,101,102,103,23,24,25,26,104,105,33,106,35,96,39,85,86,68,69,87,88,89,90,70,91,92],"tindex":"3b1ec9b0-3e83-11e6-b1b4-5f4ae53a3b52","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic com.google.gson.stream.JsonWriter name(java.lang.String name) throws java.io.IOException {\n    if (name == null) {\n        {\n            if ((java.util.List<com.google.gson.JsonElement>.isEmpty()) || ((java.lang.String) != null)) {\n                throw new java.lang.IllegalStateException();\n            } \n            com.google.gson.JsonElement com.google.gson.JsonElement = peek();\n            if (element instanceof com.google.gson.JsonObject) {\n                java.lang.String = name;\n                return com.google.gson.internal.bind.JsonTreeWriter.this;\n            } \n            throw new java.lang.IllegalStateException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"name"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.JsonElement:136","type":"CtInvocationImpl","sourcecode":"isJsonNull()"},"failures":[],"tindex":"3b1ef0c1-3e83-11e6-b1b4-c9ef16746c3a","method":{"position":"com.google.gson.Gson:847","type":"CtMethodImpl","sourcecode":"public <T>T fromJson(com.google.gson.JsonElement json, java.lang.Class<T> classOfT) throws com.google.gson.JsonSyntaxException {\n    java.lang.Object java.lang.Object = fromJson(json, ((java.lang.reflect.Type)(classOfT)));\n    return com.google.gson.internal.Primitives.wrap(classOfT).cast(object);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:198","type":"CtBinaryOperatorImpl","sourcecode":"out == null"},"failures":[],"tindex":"3b1ef0c2-3e83-11e6-b1b4-cf7dc5916616","method":{"position":"com.google.gson.Gson:644","type":"CtMethodImpl","sourcecode":"private com.google.gson.stream.JsonWriter newJsonWriter(java.io.Writer writer) throws java.io.IOException {\n    if (writer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (boolean) {\n                writer.write(com.google.gson.Gson.com.google.gson.Gson.java.lang.String);\n            } \n            com.google.gson.stream.JsonWriter com.google.gson.stream.JsonWriter = new com.google.gson.stream.JsonWriter(writer);\n            if (boolean) {\n                jsonWriter.setIndent(\"  \");\n            } \n            jsonWriter.setSerializeNulls(boolean);\n            return jsonWriter;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"out":"writer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:437","type":"CtBinaryOperatorImpl","sourcecode":"pivotRight != null"},"failures":[],"tindex":"3b1ef0c3-3e83-11e6-b1b4-1ff587825931","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:686","type":"CtMethodImpl","sourcecode":"void add(com.google.gson.internal.LinkedHashTreeMap.Node<K, V> node) {\n    if (node != null) {\n        {\n            node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = null;\n            node.int = 1;\n            if (((int) > 0) && (((int) & 1) == 0)) {\n                (int)++;\n                (int)--;\n                (int)++;\n            } \n            node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = node;\n            (int)++;\n            if (((int) > 0) && (((int) & 1) == 0)) {\n                (int)++;\n                (int)--;\n                (int)++;\n            } \n            for (int int = 4 ; ((int) & (scale - 1)) == (scale - 1) ; scale *= 2) {\n                if ((int) == 0) {\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = right.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = center.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    center.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = left.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = center;\n                    center.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = left;\n                    center.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = right;\n                    center.int = (right.int) + 1;\n                    left.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = center;\n                    right.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = center;\n                } else if ((int) == 1) {\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = right.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = center;\n                    center.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = right;\n                    center.int = (right.int) + 1;\n                    right.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = center;\n                    int = 0;\n                } else if ((int) == 2) {\n                    int = 0;\n                } \n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pivotRight":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:370","type":"CtBinaryOperatorImpl","sourcecode":"toResolve instanceof java.lang.reflect.WildcardType"},"failures":[],"tindex":"3b1f3ee4-3e83-11e6-b1b4-133160f78f4e","method":{"position":"com.google.gson.Gson:491","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement toJsonTree(java.lang.Object src, java.lang.reflect.Type typeOfSrc) {\n    if (src != (src[0])) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (typeOfSrc instanceof java.lang.reflect.WildcardType) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    com.google.gson.internal.bind.JsonTreeWriter com.google.gson.internal.bind.JsonTreeWriter = new com.google.gson.internal.bind.JsonTreeWriter();\n                    toJson(src, typeOfSrc, writer);\n                    return writer.get();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"typeOfSrc"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:553","type":"CtBinaryOperatorImpl","sourcecode":"src != null"},"failures":[107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,1,2,123,5,6,124,9,10,11,12,13,14,15,125,126,20,127,128,129,130,131,132,133,22,134,28,135,136,137,138,139,140,141,29,30,142,143,144,145,146,147,148,149,150,104,151,94,152,153,154,155,156,157,158,159,160,161,95,162,163,164,165,166,167,34,38,168,169,170,40,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,42,205,206,207,208,209,210,211,212,213,43,44,214,215,216,45,46,47,48,50,51,52,53,54,55,56,217,57,58,59,218,219,220,221,60,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,63,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,64,65,66,67,264,265,266,70,267,268,269,270,271,272,273,274,275,276,277,278,279,75,280,281,282,283,97,284,285,98,286,287,288,76,289,290,291,292,293,294,295,296,77,78,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312],"tindex":"3b1f3ee5-3e83-11e6-b1b4-9d3eaeb628bf","method":{"position":"com.google.gson.Gson:510","type":"CtMethodImpl","sourcecode":"public java.lang.String toJson(java.lang.Object src) {\n    if (src != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (src == null) {\n                return toJson(com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull);\n            } \n            return toJson(src, src.getClass());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"src":"src"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:136","type":"CtBinaryOperatorImpl","sourcecode":"(type) instanceof java.lang.reflect.GenericArrayType"},"failures":[],"tindex":"3b1f65f6-3e83-11e6-b1b4-190a92111a17","method":{"position":"com.google.gson.internal.$Gson$Types:267","type":"CtMethodImpl","sourcecode":"static java.lang.reflect.Type getSupertype(java.lang.reflect.Type context, java.lang.Class<?> contextRawType, java.lang.Class<?> supertype) {\n    com.google.gson.internal.$Gson$Preconditions.checkArgument(supertype.isAssignableFrom(contextRawType));\n    return com.google.gson.internal.$Gson$Types.resolve(context, contextRawType, com.google.gson.internal.$Gson$Types.getGenericSupertype(context, contextRawType, supertype));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"context"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.JsonStreamParser:82","type":"CtUnaryOperatorImpl","sourcecode":"!(hasNext())"},"failures":[],"tindex":"3b1f65f7-3e83-11e6-b1b4-8fe07c7b621c","method":{"position":"com.google.gson.internal.bind.ArrayTypeAdapter:84","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Object array) throws java.io.IOException {\n    if (array == null) {\n        out.nullValue();\n        return ;\n    } \n    out.beginArray();\n    for (int int = 0, int int = java.lang.reflect.Array.getLength(array) ; i < length ; i++) {\n        E E = ((E)(java.lang.reflect.Array.get(array, i)));\n        com.google.gson.TypeAdapter<E>.write(out, value);\n    }\n    out.endArray();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"array"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:491","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[73],"tindex":"3b1f65f8-3e83-11e6-b1b4-a92fe4ed4e1d","method":{"position":"com.google.gson.Gson:285","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value == null) {\n                out.nullValue();\n                return ;\n            } \n            float float = value.floatValue();\n            checkValidFloatingPoint(floatValue);\n            out.value(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.CollectionTypeAdapterFactory:47","type":"CtUnaryOperatorImpl","sourcecode":"!(java.util.Collection.class.isAssignableFrom(rawType))"},"failures":[],"tindex":"3b1f65f9-3e83-11e6-b1b4-7b9200765a72","method":{"position":"com.google.gson.internal.ConstructorConstructor:200","type":"CtMethodImpl","sourcecode":"private <T>com.google.gson.internal.ObjectConstructor<T> newUnsafeAllocator(final java.lang.reflect.Type type, final java.lang.Class<? super T> rawType) {\n    if (!(type.isAssignableFrom(rawType))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (type instanceof java.lang.reflect.WildcardType) {\n                {\n                    return new com.google.gson.internal.ObjectConstructor<T>() {\n                        private final com.google.gson.internal.UnsafeAllocator unsafeAllocator = com.google.gson.internal.UnsafeAllocator.create();\n\n                        @java.lang.SuppressWarnings(value = \"unchecked\")\n                        public T construct() {\n                            try {\n                                java.lang.Object java.lang.Object = com.google.gson.internal.UnsafeAllocator.newInstance(rawType);\n                                return ((T)(newInstance));\n                            } catch (java.lang.Exception e) {\n                                throw new java.lang.RuntimeException((((\"Unable to invoke no-args constructor for \" + type) + \". \") + \"Register an InstanceCreator with Gson for this type may fix this problem.\") , e);\n                            }\n                        }\n                    };\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"rawType":"rawType","java.util.Collection.class":"type"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:137","type":"CtBinaryOperatorImpl","sourcecode":"(!serialize) && (!deserialize)"},"failures":[313,110,111,0,112,314,115,315,120,316,1,317,2,3,123,4,5,6,318,319,320,321,322,124,323,324,325,326,327,328,7,329,8,9,10,11,12,13,14,15,16,17,125,330,126,18,19,20,331,131,21,133,22,23,24,25,26,27,332,28,136,137,29,30,333,334,335,336,337,143,31,147,148,149,32,104,151,152,338,153,154,155,158,159,160,339,340,162,163,341,164,166,167,342,105,33,106,343,34,344,35,96,36,37,38,168,39,345,200,201,346,347,202,348,349,203,350,351,204,41,42,352,205,353,354,208,355,209,210,356,212,357,358,213,359,43,44,360,214,361,362,363,364,215,365,366,216,85,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,367,368,234,235,369,370,239,371,240,62,241,242,372,63,243,86,373,374,244,375,376,245,246,247,377,249,260,378,261,64,65,66,67,68,69,379,380,265,381,87,382,88,89,90,70,91,92,383,384,71,72,385,73,74,75,285,76,292,386,387,293,294,388,389,295,77,78,298,299,300,301,302,312,390,391,392,393,394,395],"tindex":"3b1f8d0a-3e83-11e6-b1b4-0ff097642658","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:58","type":"CtMethodImpl","sourcecode":"public boolean excludeField(java.lang.reflect.Field f, boolean serialize) {\n    if ((!serialize) && (!serialize)) {\n        {\n            return com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.excludeField(f, serialize, com.google.gson.internal.Excluder);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"serialize":"serialize","deserialize":"serialize"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1175","type":"CtBinaryOperatorImpl","sourcecode":"p == (com.google.gson.stream.JsonReader.PEEKED_LONG)"},"failures":[],"tindex":"3b1f8d0b-3e83-11e6-b1b4-dd912153ec62","method":{"position":"com.google.gson.GsonBuilder:402","type":"CtMethodImpl","sourcecode":"public com.google.gson.GsonBuilder setDateFormat(int style) {\n    if (style == style) {\n        {\n            if (style != style) {\n                {\n                    com.google.gson.GsonBuilder.this.int = style;\n                    com.google.gson.GsonBuilder.this.java.lang.String = null;\n                    return com.google.gson.GsonBuilder.this;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"style","com.google.gson.stream.JsonReader.PEEKED_LONG":"style"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:271","type":"CtBinaryOperatorImpl","sourcecode":"left != null"},"failures":[396],"tindex":"3b1f8d0c-3e83-11e6-b1b4-4b8c02824f2b","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:429","type":"CtMethodImpl","sourcecode":"private void rotateRight(com.google.gson.internal.LinkedHashTreeMap.Node<K, V> root) {\n    if (root != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = pivot.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = pivot.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            root.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = pivotRight;\n            if (pivotRight != null) {\n                pivotRight.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root;\n            } \n            replaceInParent(root, pivot);\n            pivot.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root;\n            root.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = pivot;\n            root.int = (java.lang.Math.max((right != null ? right.int : 0), (pivotRight != null ? pivotRight.int : 0))) + 1;\n            pivot.int = (java.lang.Math.max(root.int, (pivotLeft != null ? pivotLeft.int : 0))) + 1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"left":"root"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"3b1fb41d-3e83-11e6-b1b4-053a11da754b","method":{"position":"com.google.gson.internal.bind.TypeAdapters:379","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.math.BigDecimal value) throws java.io.IOException {\n    out.value(value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"3b1fb41e-3e83-11e6-b1b4-33f6d08119f2","method":{"position":"com.google.gson.internal.bind.TypeAdapters:274","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return ((float)(in.nextDouble()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:293","type":"CtInvocationImpl","sourcecode":"com.google.gson.JsonPrimitive.isIntegral(com.google.gson.JsonPrimitive.this)"},"failures":[],"tindex":"3b1fb41f-3e83-11e6-b1b4-d19daae4a445","method":{"position":"com.google.gson.JsonArray:57","type":"CtMethodImpl","sourcecode":"public void add(com.google.gson.JsonElement element) {\n    if (element == null) {\n        element = com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull;\n    } \n    java.util.List<com.google.gson.JsonElement>.add(element);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"element"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"3b1fdb30-3e83-11e6-b1b4-81eae0b123ed","method":{"position":"com.google.gson.TreeTypeAdapter:61","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, T value) throws java.io.IOException {\n    if ((com.google.gson.JsonSerializer<T>) == null) {\n        delegate().write(out, value);\n        return ;\n    } \n    if (value == null) {\n        out.nullValue();\n        return ;\n    } \n    com.google.gson.JsonElement com.google.gson.JsonElement = com.google.gson.JsonSerializer<T>.serialize(value, com.google.gson.reflect.TypeToken<T>.getType(), com.google.gson.Gson.com.google.gson.JsonSerializationContext);\n    com.google.gson.internal.Streams.write(tree, out);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:386","type":"CtBinaryOperatorImpl","sourcecode":"name == null"},"failures":[],"tindex":"3b1fdb31-3e83-11e6-b1b4-47be8ad19059","method":{"position":"com.google.gson.FieldNamingPolicy:137","type":"CtMethodImpl","sourcecode":"private static java.lang.String upperCaseFirstLetter(java.lang.String name) {\n    if (name == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            int int = 0;\n            char char = name.charAt(index);\n            while (index < ((name.length()) - 1)) {\n                if (java.lang.Character.isLetter(firstCharacter)) {\n                    break;\n                } \n                fieldNameBuilder.append(firstCharacter);\n                firstCharacter = name.charAt((++index));\n            }\n            if (index == (name.length())) {\n                return fieldNameBuilder.toString();\n            } \n            if (!(java.lang.Character.isUpperCase(firstCharacter))) {\n                java.lang.String java.lang.String = com.google.gson.FieldNamingPolicy.modifyString(java.lang.Character.toUpperCase(firstCharacter), name, (++index));\n                return fieldNameBuilder.append(modifiedTarget).toString();\n            } else {\n                return name;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"name"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"3b1fdb32-3e83-11e6-b1b4-f1b1d4fa3193","method":{"position":"com.google.gson.internal.bind.TypeAdapters:432","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.StringBuffer value) throws java.io.IOException {\n    out.value((value == null ? null : value.toString()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:170","type":"CtBinaryOperatorImpl","sourcecode":"comparison < 0"},"failures":[397,313,107,108,109,110,111,398,399,400,401,402,403,118,1,317,2,3,123,4,5,6,84,324,328,404,9,11,12,13,14,15,16,17,330,126,18,19,405,23,24,93,25,26,134,27,406,407,408,332,28,135,136,409,137,138,139,410,140,411,412,141,413,414,415,142,143,147,149,416,104,94,155,160,339,161,417,95,162,163,164,165,166,418,419,167,342,420,174,183,186,187,190,192,196,198,421,207,364,85,422,423,45,47,219,220,221,224,225,226,227,228,229,230,231,424,61,367,368,425,232,233,234,235,236,237,238,369,426,370,239,371,240,427,62,243,428,86,373,429,374,244,375,376,430,248,249,258,264,379,380,265,381,87,431,382,88,89,383,384,432,433,434,271,279,435,280,436,437,97,98,287,288,438,439,289,291,292,386,387,293,294,388,389,295,440,77,78,297,298,299,300,301,302,441,442,443,444,445],"tindex":"3b1fdb33-3e83-11e6-b1b4-2fe100ae2fad","method":{"position":"com.google.gson.GsonBuilder:551","type":"CtMethodImpl","sourcecode":"private void addTypeAdaptersForDate(java.lang.String datePattern, int dateStyle, int timeStyle, java.util.List<com.google.gson.TypeAdapterFactory> factories) {\n    if (timeStyle < 0) {\n        {\n            com.google.gson.DefaultDateTypeAdapter com.google.gson.DefaultDateTypeAdapter;\n            if ((datePattern != null) && (!(\"\".equals(datePattern.trim())))) {\n                dateTypeAdapter = new com.google.gson.DefaultDateTypeAdapter(datePattern);\n            } else if ((dateStyle != (java.text.DateFormat.java.text.DateFormat.int)) && (timeStyle != (java.text.DateFormat.java.text.DateFormat.int))) {\n                dateTypeAdapter = new com.google.gson.DefaultDateTypeAdapter(dateStyle , timeStyle);\n            } else {\n                return ;\n            }\n            factories.add(com.google.gson.TreeTypeAdapter.newFactory(com.google.gson.reflect.TypeToken.get(java.util.Date.java.util.Date.java.lang.Class), dateTypeAdapter));\n            factories.add(com.google.gson.TreeTypeAdapter.newFactory(com.google.gson.reflect.TypeToken.get(java.sql.Timestamp.java.sql.Timestamp.java.lang.Class), dateTypeAdapter));\n            factories.add(com.google.gson.TreeTypeAdapter.newFactory(com.google.gson.reflect.TypeToken.get(java.sql.Date.java.sql.Date.java.lang.Class), dateTypeAdapter));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparison":"timeStyle"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:120","type":"CtBinaryOperatorImpl","sourcecode":"o instanceof com.google.gson.JsonNull"},"failures":[],"tindex":"3b200244-3e83-11e6-b1b4-6550081aeef6","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:90","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(java.lang.Object key) {\n    if (key instanceof com.google.gson.JsonNull) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (findByObject(key)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:109","type":"CtBinaryOperatorImpl","sourcecode":"o instanceof com.google.gson.JsonPrimitive"},"failures":[],"tindex":"3b200245-3e83-11e6-b1b4-d5fe63579301","method":{"position":"com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:74","type":"CtMethodImpl","sourcecode":"private java.lang.reflect.Type getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type type, java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value instanceof com.google.gson.JsonPrimitive) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((value != null) && (((type == (java.lang.Object.java.lang.Object.java.lang.Class)) || (type instanceof java.lang.reflect.TypeVariable<?>)) || (type instanceof java.lang.Class<?>))) {\n                        type = value.getClass();\n                    } \n                    return type;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:340","type":"CtBinaryOperatorImpl","sourcecode":"toResolve instanceof java.lang.reflect.GenericArrayType"},"failures":[446],"tindex":"3b200246-3e83-11e6-b1b4-6f00053bec44","method":{"position":"com.google.gson.Gson:532","type":"CtMethodImpl","sourcecode":"public java.lang.String toJson(java.lang.Object src, java.lang.reflect.Type typeOfSrc) {\n    if (typeOfSrc instanceof java.lang.reflect.GenericArrayType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.io.StringWriter java.io.StringWriter = new java.io.StringWriter();\n            toJson(src, typeOfSrc, writer);\n            return writer.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"typeOfSrc"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:274","type":"CtBinaryOperatorImpl","sourcecode":"target instanceof java.lang.String"},"failures":[],"tindex":"3b200247-3e83-11e6-b1b4-4118c38f26e8","method":{"position":"com.google.gson.internal.$Gson$Types:471","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object other) {\n    return (other instanceof java.lang.reflect.ParameterizedType) && (com.google.gson.internal.$Gson$Types.equals(com.google.gson.internal.$Gson$Types.ParameterizedTypeImpl.this, ((java.lang.reflect.ParameterizedType)(other))));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"target":"other"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:235","type":"CtBinaryOperatorImpl","sourcecode":"annotationVersion > (version)"},"failures":[1,2,5,323,34,170,172,175,178,180,185,195,199,447,448,449,450,451,452,453,454,259,70,442],"tindex":"3b200248-3e83-11e6-b1b4-c5b0e1a6f736","method":{"position":"com.google.gson.Gson:297","type":"CtMethodImpl","sourcecode":"private void checkValidFloatingPoint(double value) {\n    if (value > value) {\n        {\n            if ((java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(value))) {\n                throw new java.lang.IllegalArgumentException(((value + \" is not a valid double value as per JSON specification. To override this\") + \" behavior, use GsonBuilder.serializeSpecialFloatingPointValues() method.\"));\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"version":"value","annotationVersion":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:167","type":"CtUnaryOperatorImpl","sourcecode":"!create"},"failures":[455,456,336],"tindex":"3b202959-3e83-11e6-b1b4-9d3790be7cce","method":{"position":"com.google.gson.internal.LinkedTreeMap:310","type":"CtMethodImpl","sourcecode":"private void rebalance(com.google.gson.internal.LinkedTreeMap.Node<K, V> unbalanced, boolean insert) {\n    if (!insert) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = unbalanced ; node != null ; node = node.com.google.gson.internal.LinkedTreeMap.Node<K, V>) {\n                com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = node.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n                com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = node.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n                int int = left != null ? left.int : 0;\n                int int = right != null ? right.int : 0;\n                int int = leftHeight - rightHeight;\n                if (delta == (-2)) {\n                    com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = right.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = right.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n                    int int = rightRight != null ? rightRight.int : 0;\n                    int int = rightLeft != null ? rightLeft.int : 0;\n                    int int = rightLeftHeight - rightRightHeight;\n                    if ((rightDelta == (-1)) || ((rightDelta == 0) && (!insert))) {\n                        rotateLeft(node);\n                    } else {\n                        assert rightDelta == 1;\n                        rotateRight(right);\n                        rotateLeft(node);\n                    }\n                    if (insert) {\n                        break;\n                    } \n                } else if (delta == 2) {\n                    com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = left.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = left.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n                    int int = leftRight != null ? leftRight.int : 0;\n                    int int = leftLeft != null ? leftLeft.int : 0;\n                    int int = leftLeftHeight - leftRightHeight;\n                    if ((leftDelta == 1) || ((leftDelta == 0) && (!insert))) {\n                        rotateRight(node);\n                    } else {\n                        assert leftDelta == (-1);\n                        rotateLeft(left);\n                        rotateRight(node);\n                    }\n                    if (insert) {\n                        break;\n                    } \n                } else if (delta == 0) {\n                    node.int = leftHeight + 1;\n                    if (insert) {\n                        break;\n                    } \n                } else {\n                    assert (delta == (-1)) || (delta == 1);\n                    node.int = (java.lang.Math.max(leftHeight, rightHeight)) + 1;\n                    if (!insert) {\n                        break;\n                    } \n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"create":"insert"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:306","type":"CtBinaryOperatorImpl","sourcecode":"(com.google.gson.JsonPrimitive.this) == obj"},"failures":[],"tindex":"3b20295a-3e83-11e6-b1b4-f5e90b13a6bc","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:200","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\ncom.google.gson.internal.LinkedHashTreeMap.Node<K, V> findByObject(java.lang.Object key) {\n    try {\n        return key != null ? find(((K)(key)), false) : null;\n    } catch (java.lang.ClassCastException e) {\n        return null;\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"key","this":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:360","type":"CtBinaryOperatorImpl","sourcecode":"candidate != null"},"failures":[],"tindex":"3b20506b-3e83-11e6-b1b4-61205c33510c","method":{"position":"com.google.gson.Gson:881","type":"CtMethodImpl","sourcecode":"public void setDelegate(com.google.gson.TypeAdapter<T> typeAdapter) {\n    if (typeAdapter != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (typeAdapter != null) {\n                {\n                    if ((com.google.gson.TypeAdapter<T>) != null) {\n                        throw new java.lang.AssertionError();\n                    } \n                    com.google.gson.TypeAdapter<T> = typeAdapter;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"candidate":"typeAdapter"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"3b20506c-3e83-11e6-b1b4-d7da58f35f84","method":{"position":"com.google.gson.internal.$Gson$Types:563","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object other) {\n    return (other instanceof java.lang.reflect.WildcardType) && (com.google.gson.internal.$Gson$Types.equals(com.google.gson.internal.$Gson$Types.WildcardTypeImpl.this, ((java.lang.reflect.WildcardType)(other))));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"other"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:184","type":"CtBinaryOperatorImpl","sourcecode":"(token != (com.google.gson.stream.JsonToken.NUMBER)) && (token != (com.google.gson.stream.JsonToken.STRING))"},"failures":[],"tindex":"3b20506d-3e83-11e6-b1b4-3fdb7c66633a","method":{"position":"com.google.gson.internal.bind.JsonTreeReader:137","type":"CtMethodImpl","sourcecode":"private void expect(com.google.gson.stream.JsonToken expected) throws java.io.IOException {\n    if ((expected != expected) && (token != expected)) {\n        {\n            if ((peek()) != expected) {\n                throw new java.lang.IllegalStateException((((\"Expected \" + expected) + \" but was \") + (peek())));\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"com.google.gson.stream.JsonToken.STRING":"expected","token":"expected","com.google.gson.stream.JsonToken.NUMBER":"expected"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:176","type":"CtInvocationImpl","sourcecode":"isNumber()"},"failures":[],"tindex":"3b20506e-3e83-11e6-b1b4-df8c7462ad23","method":{"position":"com.google.gson.Gson:617","type":"CtMethodImpl","sourcecode":"public java.lang.String toJson(com.google.gson.JsonElement jsonElement) {\n    java.io.StringWriter java.io.StringWriter = new java.io.StringWriter();\n    toJson(jsonElement, writer);\n    return writer.toString();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"jsonElement"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"3b20506f-3e83-11e6-b1b4-e963d33eb9cf","method":{"position":"com.google.gson.internal.bind.CollectionTypeAdapterFactory:88","type":"CtMethodImpl","sourcecode":"public void write(com.google.gson.stream.JsonWriter out, java.util.Collection<E> collection) throws java.io.IOException {\n    if (collection == null) {\n        out.nullValue();\n        return ;\n    } \n    out.beginArray();\n    for (E E : collection) {\n        com.google.gson.TypeAdapter<E>.write(out, element);\n    }\n    out.endArray();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl","sourcecode":"field.isSynthetic()"},"failures":[],"tindex":"3b205070-3e83-11e6-b1b4-ddfef22ef352","method":{"position":"com.google.gson.FieldNamingPolicy:72","type":"CtMethodImpl","sourcecode":"public java.lang.String translateName(java.lang.reflect.Field f) {\n    if (f.isSynthetic()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return com.google.gson.FieldNamingPolicy.upperCaseFirstLetter(com.google.gson.FieldNamingPolicy.separateCamelCase(f.getName(), \" \"));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"f"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.stream.JsonWriter:400","type":"CtBinaryOperatorImpl","sourcecode":"(deferredName) != null"},"failures":[],"tindex":"3b207781-3e83-11e6-b1b4-89c4a6d49c94","method":{"position":"com.google.gson.Gson:695","type":"CtMethodImpl","sourcecode":"public <T>T fromJson(java.lang.String json, java.lang.Class<T> classOfT) throws com.google.gson.JsonSyntaxException {\n    if (json != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    } else {\n        {\n            if (json != null) {\n                {\n                    java.lang.Object java.lang.Object = fromJson(json, ((java.lang.reflect.Type)(classOfT)));\n                    return com.google.gson.internal.Primitives.wrap(classOfT).cast(object);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new com.google.gson.JsonSyntaxException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.JsonObject:54","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[457,403,93,418,458,459],"tindex":"3b207782-3e83-11e6-b1b4-f5221ed6eba9","method":{"position":"com.google.gson.internal.Streams:67","type":"CtMethodImpl","sourcecode":"public static void write(com.google.gson.JsonElement element, com.google.gson.stream.JsonWriter writer) throws java.io.IOException {\n    if (element == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<com.google.gson.JsonElement>.write(writer, element);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"element"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonElement:103","type":"CtInvocationImpl","sourcecode":"isJsonArray()"},"failures":[],"tindex":"3b207783-3e83-11e6-b1b4-b7f8139d73f7","method":{"position":"com.google.gson.JsonArray:115","type":"CtMethodImpl","sourcecode":"public boolean contains(com.google.gson.JsonElement element) {\n    if (element == null) {\n        {\n            if (element.isString()) {\n                {\n                    return java.util.List<com.google.gson.JsonElement>.contains(element);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"element"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:162","type":"CtBinaryOperatorImpl","sourcecode":"toGenericComponentType instanceof java.lang.reflect.ParameterizedType"},"failures":[],"tindex":"3b207784-3e83-11e6-b1b4-79577dbffd6f","method":{"position":"com.google.gson.internal.$Gson$Types:267","type":"CtMethodImpl","sourcecode":"static java.lang.reflect.Type getSupertype(java.lang.reflect.Type context, java.lang.Class<?> contextRawType, java.lang.Class<?> supertype) {\n    com.google.gson.internal.$Gson$Preconditions.checkArgument(supertype.isAssignableFrom(contextRawType));\n    return com.google.gson.internal.$Gson$Types.resolve(context, contextRawType, com.google.gson.internal.$Gson$Types.getGenericSupertype(context, contextRawType, supertype));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toGenericComponentType":"context"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1079","type":"CtBinaryOperatorImpl","sourcecode":"builder == null"},"failures":[],"tindex":"3b207785-3e83-11e6-b1b4-d924db865ce7","method":{"position":"com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:74","type":"CtMethodImpl","sourcecode":"private java.lang.reflect.Type getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type type, java.lang.Object value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value instanceof com.google.gson.JsonPrimitive) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((value != null) && (((type == (java.lang.Object.java.lang.Object.java.lang.Class)) || (type instanceof java.lang.reflect.TypeVariable<?>)) || (type instanceof java.lang.Class<?>))) {\n                        type = value.getClass();\n                    } \n                    return type;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"builder":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"3b207786-3e83-11e6-b1b4-ad868696792c","method":{"position":"com.google.gson.internal.bind.TypeAdapters:525","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.sql.Timestamp read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    java.util.Date java.util.Date = dateTypeAdapter.read(in);\n    return date != null ? new java.sql.Timestamp(date.getTime()) : null;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"3b209e97-3e83-11e6-b1b4-1f92ee3c54b8","method":{"position":"com.google.gson.internal.bind.TypeAdapters:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Boolean read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return java.lang.Boolean.valueOf(in.nextString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:240","type":"CtInvocationImpl","sourcecode":"from.getRawType().equals(to.getRawType())"},"failures":[],"tindex":"3b209e98-3e83-11e6-b1b4-a5d25268aab5","method":{"position":"com.google.gson.internal.Primitives:69","type":"CtMethodImpl","sourcecode":"public static boolean isPrimitive(java.lang.reflect.Type type) {\n    if (type.getRawType().equals(type.getRawType())) {\n        {\n            return com.google.gson.internal.Primitives.com.google.gson.internal.Primitives.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.containsKey(type);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"type","to":"type"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"3b209e99-3e83-11e6-b1b4-eb7a7de47b2e","method":{"position":"com.google.gson.Gson:491","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement toJsonTree(java.lang.Object src, java.lang.reflect.Type typeOfSrc) {\n    if (src != (src[0])) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (typeOfSrc instanceof java.lang.reflect.WildcardType) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    com.google.gson.internal.bind.JsonTreeWriter com.google.gson.internal.bind.JsonTreeWriter = new com.google.gson.internal.bind.JsonTreeWriter();\n                    toJson(src, typeOfSrc, writer);\n                    return writer.get();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:384","type":"CtVariableReadImpl","sourcecode":"insert"},"failures":[],"tindex":"3b209e9a-3e83-11e6-b1b4-31ffc38294c0","method":{"position":"com.google.gson.stream.JsonReader:325","type":"CtMethodImpl","sourcecode":"public final void setLenient(boolean lenient) {\n    if (lenient) {\n        {\n            com.google.gson.stream.JsonReader.this.boolean = lenient;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"insert":"lenient"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:377","type":"CtBinaryOperatorImpl","sourcecode":"lowerBound != (originalLowerBound[0])"},"failures":[],"tindex":"3b209e9b-3e83-11e6-b1b4-e7af2890eeb5","method":{"position":"com.google.gson.Gson:491","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement toJsonTree(java.lang.Object src, java.lang.reflect.Type typeOfSrc) {\n    if (src != (src[0])) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (typeOfSrc instanceof java.lang.reflect.WildcardType) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    com.google.gson.internal.bind.JsonTreeWriter com.google.gson.internal.bind.JsonTreeWriter = new com.google.gson.internal.bind.JsonTreeWriter();\n                    toJson(src, typeOfSrc, writer);\n                    return writer.get();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"originalLowerBound":"src","lowerBound":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.stream.JsonWriter:389","type":"CtBinaryOperatorImpl","sourcecode":"(deferredName) != null"},"failures":[],"tindex":"3b20c5ac-3e83-11e6-b1b4-af29ac258200","method":{"position":"com.google.gson.Gson:695","type":"CtMethodImpl","sourcecode":"public <T>T fromJson(java.lang.String json, java.lang.Class<T> classOfT) throws com.google.gson.JsonSyntaxException {\n    if (json != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    } else {\n        {\n            if (json != null) {\n                {\n                    java.lang.Object java.lang.Object = fromJson(json, ((java.lang.reflect.Type)(classOfT)));\n                    return com.google.gson.internal.Primitives.wrap(classOfT).cast(object);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new com.google.gson.JsonSyntaxException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:389","type":"CtBinaryOperatorImpl","sourcecode":"(deferredName) != null"},"failures":[],"tindex":"3b20c5ad-3e83-11e6-b1b4-8fa63d9bbf2b","method":{"position":"com.google.gson.JsonObject:151","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement get(java.lang.String memberName) {\n    if (memberName != null) {\n        {\n            return com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.get(memberName);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"memberName"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.DefaultDateTypeAdapter:83","type":"CtBinaryOperatorImpl","sourcecode":"typeOfT == (java.util.Date.class)"},"failures":[],"tindex":"3b20c5ae-3e83-11e6-b1b4-6d73089a4343","method":{"position":"com.google.gson.internal.ConstructorConstructor:128","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprivate <T>com.google.gson.internal.ObjectConstructor<T> newDefaultImplementationConstructor(final java.lang.reflect.Type type, java.lang.Class<? super T> rawType) {\n    if (type == type) {\n        {\n            if (java.util.Collection.java.util.Collection.java.lang.Class.isAssignableFrom(rawType)) {\n                if (java.util.SortedSet.java.util.SortedSet.java.lang.Class.isAssignableFrom(rawType)) {\n                    return new com.google.gson.internal.ObjectConstructor<T>() {\n                        public T construct() {\n                            return ((T)(new java.util.TreeSet<java.lang.Object>()));\n                        }\n                    };\n                } else if (java.util.EnumSet.java.util.EnumSet.java.lang.Class.isAssignableFrom(rawType)) {\n                    return new com.google.gson.internal.ObjectConstructor<T>() {\n                        @java.lang.SuppressWarnings(value = \"rawtypes\")\n                        public T construct() {\n                            if (type instanceof java.lang.reflect.ParameterizedType) {\n                                java.lang.reflect.Type java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(type)).getActualTypeArguments()[0];\n                                if (elementType instanceof java.lang.Class) {\n                                    return ((T)(java.util.EnumSet.noneOf(((java.lang.Class)(elementType)))));\n                                } else {\n                                    throw new com.google.gson.JsonIOException((\"Invalid EnumSet type: \" + (type.toString())));\n                                }\n                            } else {\n                                throw new com.google.gson.JsonIOException((\"Invalid EnumSet type: \" + (type.toString())));\n                            }\n                        }\n                    };\n                } else if (java.util.Set.java.util.Set.java.lang.Class.isAssignableFrom(rawType)) {\n                    return new com.google.gson.internal.ObjectConstructor<T>() {\n                        public T construct() {\n                            return ((T)(new java.util.LinkedHashSet<java.lang.Object>()));\n                        }\n                    };\n                } else if (java.util.Queue.java.util.Queue.java.lang.Class.isAssignableFrom(rawType)) {\n                    return new com.google.gson.internal.ObjectConstructor<T>() {\n                        public T construct() {\n                            return ((T)(new java.util.LinkedList<java.lang.Object>()));\n                        }\n                    };\n                } else {\n                    return new com.google.gson.internal.ObjectConstructor<T>() {\n                        public T construct() {\n                            return ((T)(new java.util.ArrayList<java.lang.Object>()));\n                        }\n                    };\n                }\n            } \n            if (java.util.Map.java.util.Map.java.lang.Class.isAssignableFrom(rawType)) {\n                if (java.util.SortedMap.java.util.SortedMap.java.lang.Class.isAssignableFrom(rawType)) {\n                    return new com.google.gson.internal.ObjectConstructor<T>() {\n                        public T construct() {\n                            return ((T)(new java.util.TreeMap<java.lang.Object, java.lang.Object>()));\n                        }\n                    };\n                } else if ((type instanceof java.lang.reflect.ParameterizedType) && (!(java.lang.String.java.lang.String.java.lang.Class.isAssignableFrom(com.google.gson.reflect.TypeToken.get(((java.lang.reflect.ParameterizedType)(type)).getActualTypeArguments()[0]).getRawType())))) {\n                    return new com.google.gson.internal.ObjectConstructor<T>() {\n                        public T construct() {\n                            return ((T)(new java.util.LinkedHashMap<java.lang.Object, java.lang.Object>()));\n                        }\n                    };\n                } else {\n                    return new com.google.gson.internal.ObjectConstructor<T>() {\n                        public T construct() {\n                            return ((T)(new com.google.gson.internal.LinkedTreeMap<java.lang.String, java.lang.Object>()));\n                        }\n                    };\n                }\n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeOfT":"type","java.util.Date.class":"type"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:491","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"3b20ecbf-3e83-11e6-b1b4-cb00a679b9c7","method":{"position":"com.google.gson.internal.bind.TypeAdapters:317","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        {\n            out.value(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonArray:58","type":"CtBinaryOperatorImpl","sourcecode":"element == null"},"failures":[],"tindex":"3b20ecc0-3e83-11e6-b1b4-6348e7f7a4ec","method":{"position":"com.google.gson.JsonArray:115","type":"CtMethodImpl","sourcecode":"public boolean contains(com.google.gson.JsonElement element) {\n    if (element == null) {\n        {\n            if (element.isString()) {\n                {\n                    return java.util.List<com.google.gson.JsonElement>.contains(element);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467263436382/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"element"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":62,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}