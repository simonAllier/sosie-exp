{"failureDictionary":{"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":162,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":298,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":28,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":121,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":91,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":260,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":67,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":143,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":178,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":22,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":70,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":109,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":211,"com.google.gson.MixedStreamTest.testWriteLenient":0,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":92,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":69,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":313,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":97,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":205,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":288,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":102,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":296,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":201,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":57,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":68,"com.google.gson.functional.ObjectTest.testSingletonLists":320,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":105,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":311,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":261,"com.google.gson.stream.JsonWriterTest.testStrings":349,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator":145,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":336,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization":86,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":183,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization":90,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":269,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":3,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":74,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":135,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":218,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":235,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":47,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":48,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeRecursive":271,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":300,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":25,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":138,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":34,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":26,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":294,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":156,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":297,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":286,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":345,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives":139,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":170,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":203,"com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization":110,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":194,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":20,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":84,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":177,"com.google.gson.functional.EnumTest.testEnumCaseMapping":295,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":5,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":259,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":187,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":179,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":31,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":233,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":237,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":80,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":118,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":197,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":174,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":175,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":291,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":127,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":42,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":285,"com.google.gson.functional.MapTest.testGeneralMapField":65,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":238,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":167,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":257,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":314,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":78,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":219,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":340,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":108,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":18,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":186,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":196,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":289,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":351,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":317,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":104,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":341,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":21,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization":89,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":12,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":113,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":213,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":273,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":142,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":255,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":327,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":38,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":51,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":82,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":338,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":331,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":188,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization":181,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":148,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":131,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":35,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":124,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":281,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":19,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":114,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":227,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":8,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":250,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":71,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":77,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":106,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":116,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":155,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":332,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":101,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":14,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":133,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":158,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":44,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":312,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":279,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":11,"com.google.gson.functional.MapTest.testInterfaceTypeMap":64,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":310,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":169,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":240,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":333,"com.google.gson.functional.CollectionTest.testSetDeserialization":206,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":202,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":268,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":293,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":216,"com.google.gson.functional.EnumTest.testEnumSet":290,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":161,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":272,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":132,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":301,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":17,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":275,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":325,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":193,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":13,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":15,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":126,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":284,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":337,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":115,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":234,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":322,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":232,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":230,"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":9,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization":123,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":226,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":328,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":119,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":153,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":184,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":214,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":323,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":334,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":52,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":122,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":40,"com.google.gson.functional.MapTest.testSerializeMaps":62,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":95,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":54,"com.google.gson.functional.MapTest.testComplexKeysSerialization":204,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":160,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":287,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":85,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":128,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":220,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":239,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":111,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":182,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":163,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":241,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":251,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":229,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization":120,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":29,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":53,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":87,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":72,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":63,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":306,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":137,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":342,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":117,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":282,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":246,"com.google.gson.functional.MapTest.testRawMapSerialization":280,"com.google.gson.functional.PrettyPrintingTest.testMap":27,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":168,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize":270,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":243,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":125,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls":149,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":302,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":2,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":45,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":265,"com.google.gson.functional.CollectionTest.testQueueSerialization":283,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":307,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":180,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnValue":347,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":253,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":335,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":166,"com.google.gson.ObjectTypeAdapterTest.testSerialize":245,"com.google.gson.functional.MapTest.testMapOfMapSerialization":278,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":165,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":98,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":112,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":224,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":146,"com.google.gson.functional.FieldNamingTest.testIdentity":96,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":262,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":256,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":93,"com.google.gson.GsonTypeAdapterTest.testDefaultTypeAdapterThrowsParseException":192,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":134,"com.google.gson.functional.MapTest.testMapWithQuotes":277,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":330,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":303,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":76,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":99,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":130,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":185,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":147,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":195,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":208,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":129,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":263,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":200,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":190,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":173,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":223,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":308,"com.google.gson.functional.MapTest.testMapSubclassSerialization":274,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":33,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":81,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":318,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":215,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":258,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":46,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":244,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":247,"com.google.gson.functional.EnumTest.testEnumSubclass":292,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":79,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":4,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":50,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":100,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":305,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriterAndSerializeNulls":150,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":136,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":56,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":159,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":252,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":315,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":157,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization":55,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":299,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":319,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":59,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":231,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":144,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":189,"com.google.gson.functional.ObjectTest.testNestedSerialization":326,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":198,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":339,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":37,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":75,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":66,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":43,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":316,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":24,"com.google.gson.functional.MapTest.testMapSubclassDeserialization":61,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":1,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":249,"com.google.gson.stream.JsonWriterTest.testUnicodeLineBreaksEscaped":350,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":254,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":324,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":152,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":141,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":321,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":103,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":228,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":39,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":212,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":6,"com.google.gson.GsonBuilderTest.testCreatingMoreThanOnce":191,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":264,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":209,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSubTypeFirstAllowed":36,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":49,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":199,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":266,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":88,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":23,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":41,"com.google.gson.functional.CollectionTest.testSetSerialization":207,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":30,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":140,"com.google.gson.functional.StringTest.testStringValueSerialization":267,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":343,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":73,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":221,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":329,"com.google.gson.functional.ObjectTest.testJsonObjectSerialization":107,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":225,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":222,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":83,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":7,"com.google.gson.stream.JsonWriterTest.testWrongTopLevelType":348,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":94,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":309,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":32,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":151,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":60,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":171,"com.google.gson.JsonPrimitiveTest.testValidJsonOnToString":248,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":236,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":276,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":176,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":172,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":164,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":242,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":16,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":210,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":217,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":154,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":344,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":346,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":304,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType":10,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":58},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:952","type":"CtBinaryOperatorImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196],"tindex":"99dd4d24-3f41-11e6-9429-39119cf1e588","method":{"position":"com.google.gson.GsonBuilder:551","type":"CtMethodImpl","sourcecode":"private void addTypeAdaptersForDate(java.lang.String datePattern, int dateStyle, int timeStyle, java.util.List<com.google.gson.TypeAdapterFactory> factories) {\n    if (dateStyle == timeStyle) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935599/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.DefaultDateTypeAdapter com.google.gson.DefaultDateTypeAdapter;\n            if ((datePattern != null) && (!(\"\".equals(datePattern.trim())))) {\n                dateTypeAdapter = new com.google.gson.DefaultDateTypeAdapter(datePattern);\n            } else if ((dateStyle != (java.text.DateFormat.java.text.DateFormat.int)) && (timeStyle != (java.text.DateFormat.java.text.DateFormat.int))) {\n                dateTypeAdapter = new com.google.gson.DefaultDateTypeAdapter(dateStyle , timeStyle);\n            } else {\n                return ;\n            }\n            factories.add(com.google.gson.TreeTypeAdapter.newFactory(com.google.gson.reflect.TypeToken.get(java.util.Date.java.util.Date.java.lang.Class), dateTypeAdapter));\n            factories.add(com.google.gson.TreeTypeAdapter.newFactory(com.google.gson.reflect.TypeToken.get(java.sql.Timestamp.java.sql.Timestamp.java.lang.Class), dateTypeAdapter));\n            factories.add(com.google.gson.TreeTypeAdapter.newFactory(com.google.gson.reflect.TypeToken.get(java.sql.Date.java.sql.Date.java.lang.Class), dateTypeAdapter));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"dateStyle","com.google.gson.stream.JsonReader.PEEKED_LONG":"timeStyle"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:683","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"99ddc255-3f41-11e6-9429-73c997beaffd","method":{"position":"com.google.gson.stream.JsonWriter:335","type":"CtMethodImpl","sourcecode":"private com.google.gson.stream.JsonWriter close(int empty, int nonempty, java.lang.String closeBracket) throws java.io.IOException {\n    if (empty == empty) {\n        {\n            int int = peek();\n            if ((context != nonempty) && (context != empty)) {\n                throw new java.lang.IllegalStateException(\"Nesting problem.\");\n            } \n            if ((java.lang.String) != null) {\n                throw new java.lang.IllegalStateException((\"Dangling name: \" + (java.lang.String)));\n            } \n            (int)--;\n            if (context == nonempty) {\n                newline();\n            } \n            java.io.Writer.write(closeBracket);\n            return com.google.gson.stream.JsonWriter.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935599/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"last":"empty","com.google.gson.stream.JsonReader.NUMBER_CHAR_NONE":"empty"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:83","type":"CtBinaryOperatorImpl"},"failures":[7,8,11,197,198,45,199,200,201,202,203,204,205,206,207,208,70,72,73,75,76,77,209,210,211,212,213,214,97,98,100,101,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,131,136,231,232,233,234,235,236,237,151,238,152,239,240,241,242,153,243,154,155,156,157,158,159,160,163,164,244,245],"tindex":"99ddc256-3f41-11e6-9429-9b7ced737da2","method":{"position":"com.google.gson.internal.ConstructorConstructor:200","type":"CtMethodImpl","sourcecode":"private <T>com.google.gson.internal.ObjectConstructor<T> newUnsafeAllocator(final java.lang.reflect.Type type, final java.lang.Class<? super T> rawType) {\n    if (type instanceof java.lang.Class) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935599/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new com.google.gson.internal.ObjectConstructor<T>() {\n                private final com.google.gson.internal.UnsafeAllocator unsafeAllocator = com.google.gson.internal.UnsafeAllocator.create();\n\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                public T construct() {\n                    try {\n                        java.lang.Object java.lang.Object = com.google.gson.internal.UnsafeAllocator.newInstance(rawType);\n                        return ((T)(newInstance));\n                    } catch (java.lang.Exception e) {\n                        throw new java.lang.RuntimeException((((\"Unable to invoke no-args constructor for \" + type) + \". \") + \"Register an InstanceCreator with Gson for this type may fix this problem.\") , e);\n                    }\n                }\n            };\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"superclass":"type"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.stream.JsonReader:290","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"99dde967-3f41-11e6-9429-71fa41aef948","method":{"position":"com.google.gson.JsonParser:56","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement parse(java.io.Reader json) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException {\n    if (json == null) {\n        {\n            try {\n                com.google.gson.stream.JsonReader com.google.gson.stream.JsonReader = new com.google.gson.stream.JsonReader(json);\n                com.google.gson.JsonElement com.google.gson.JsonElement = parse(jsonReader);\n                if ((!(element.isJsonNull())) && ((jsonReader.peek()) != (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken))) {\n                    throw new com.google.gson.JsonSyntaxException(\"Did not consume the entire document.\");\n                } \n                return element;\n            } catch (com.google.gson.stream.MalformedJsonException e) {\n                throw new com.google.gson.JsonSyntaxException(e);\n            } catch (java.io.IOException e) {\n                throw new com.google.gson.JsonIOException(e);\n            } catch (java.lang.NumberFormatException e) {\n                throw new com.google.gson.JsonSyntaxException(e);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935599/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"in":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"99dde968-3f41-11e6-9429-09b03d4c9dc2","method":{"position":"com.google.gson.internal.bind.TypeAdapters:338","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Character value) throws java.io.IOException {\n    out.value((value == null ? null : java.lang.String.valueOf(value)));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.Gson:720","type":"CtBinaryOperatorImpl"},"failures":[246,247,1,2,248,5,249,250,7,8,15,16,17,18,19,20,21,22,197,198,251,252,253,254,255,23,256,257,258,24,29,33,259,260,261,262,263,264,265,266,267,34,35,37,38,41,43,268,269,270,271,50,56,272,273,274,62,275,276,63,277,278,64,279,65,280,204,281,67,205,282,283,284,285,286,287,288,289,68,208,290,291,69,292,293,294,295,296,297,298,299,300,78,301,302,303,79,80,304,81,305,306,307,308,309,310,83,311,85,312,313,314,315,316,87,88,91,317,318,319,102,105,320,321,322,323,324,325,326,327,218,328,219,329,111,115,220,221,222,223,224,119,122,225,226,330,331,130,132,136,141,142,148,332,232,333,236,334,335,336,337,151,238,152,239,241,242,153,154,156,157,338,165,339,340,341,342,343,166,344,345,167,168,169,244,346,172,187,188,347,348,349,350,189,190,351,193,196],"tindex":"99de1079-3f41-11e6-9429-6367514e6c42","method":{"position":"com.google.gson.stream.JsonWriter:413","type":"CtMethodImpl","sourcecode":"public com.google.gson.stream.JsonWriter value(java.lang.String value) throws java.io.IOException {\n    if (value == null) {\n        {\n            if (value == null) {\n                return nullValue();\n            } \n            writeDeferredName();\n            beforeValue(false);\n            string(value);\n            return com.google.gson.stream.JsonWriter.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935599/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"99de107a-3f41-11e6-9429-5ddbd1d1c3cd","method":{"position":"com.google.gson.internal.bind.TimeTypeAdapter:50","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized java.sql.Time read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        java.util.Date java.util.Date = java.text.DateFormat.parse(in.nextString());\n        return new java.sql.Time(date.getTime());\n    } catch (java.text.ParseException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:127","type":"CtInvocationImpl"},"failures":[],"tindex":"99de107b-3f41-11e6-9429-a90dfc3ec004","method":{"position":"com.google.gson.reflect.TypeToken:81","type":"CtMethodImpl","sourcecode":"static java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class<?> subclass) {\n    if (subclass.isInterface()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935599/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.reflect.Type java.lang.reflect.Type = subclass.getGenericSuperclass();\n            if (superclass instanceof java.lang.Class) {\n                throw new java.lang.RuntimeException(\"Missing type parameter.\");\n            } \n            java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(superclass));\n            return com.google.gson.internal.$Gson$Types.canonicalize(parameterized.getActualTypeArguments()[0]);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"raw":"subclass"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:469","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"99de378c-3f41-11e6-9429-652e55ff59e2","method":{"position":"com.google.gson.internal.$Gson$Types:411","type":"CtMethodImpl","sourcecode":"private static int indexOf(java.lang.Object[] array, java.lang.Object toFind) {\n    for (int int = 0 ; i < (array.int) ; i++) {\n        if (toFind.equals(array[i])) {\n            return i;\n        } \n    }\n    throw new java.util.NoSuchElementException();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"src":"toFind"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"99de378d-3f41-11e6-9429-4de96371bb10","method":{"position":"com.google.gson.Gson:310","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return in.nextLong();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:96","type":"CtVariableReadImpl"},"failures":[],"tindex":"99de378e-3f41-11e6-9429-2ff98cf63414","method":{"position":"com.google.gson.stream.JsonReader:325","type":"CtMethodImpl","sourcecode":"public final void setLenient(boolean lenient) {\n    if (lenient) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935599/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.stream.JsonReader.this.boolean = lenient;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isObject":"lenient"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":11,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}