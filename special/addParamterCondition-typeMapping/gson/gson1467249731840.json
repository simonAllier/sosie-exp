{"failureDictionary":{"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":143,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":295,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":283,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":346,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":15,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":198,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":231,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":34,"com.google.gson.functional.PrimitiveTest.testShortSerialization":109,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":270,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":359,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":130,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":102,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":172,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":324,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":190,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":208,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":16,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":329,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":331,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":214,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":339,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":213,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":262,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":220,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":113,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":343,"com.google.gson.functional.ObjectTest.testSingletonLists":298,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":186,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":263,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":232,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":202,"com.google.gson.internal.bind.JsonTreeWriterTest.testObject":37,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization":116,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":41,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":132,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":315,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":4,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":5,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsTrue":39,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":162,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":121,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":26,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":344,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":211,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":139,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":360,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":337,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":222,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":264,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":44,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":184,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":269,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":357,"com.google.gson.functional.EnumTest.testEnumCaseMapping":212,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":50,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":230,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":32,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":174,"com.google.gson.functional.JsonTreeTest.testToJsonTree":30,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":271,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":349,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":23,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":25,"com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreBehindInVersion":2,"com.google.gson.functional.PrimitiveTest.testNumberSerialization":96,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":161,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":169,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":114,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":64,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":266,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":207,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":267,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":336,"com.google.gson.functional.MapTest.testGeneralMapField":288,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":241,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":318,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":79,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":223,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":250,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":191,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":286,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":49,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":84,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization":108,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":163,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":256,"com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization":103,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":307,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":355,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":81,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":90,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":46,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":48,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":340,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":218,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":200,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":257,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":358,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":100,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":182,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":94,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":129,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":115,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":124,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":246,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":313,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":185,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":260,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":8,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedObject":38,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":181,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":142,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":53,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":33,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":128,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":149,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":311,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":20,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":293,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":101,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":356,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":62,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":242,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":312,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":71,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":361,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":86,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":134,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":152,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":107,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":138,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":144,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":155,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":19,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":342,"com.google.gson.functional.ObjectTest.testNullSerialization":304,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":141,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":189,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":83,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":287,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":180,"com.google.gson.functional.MapTest.testInterfaceTypeMap":285,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":80,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":225,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":146,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":221,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":73,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":210,"com.google.gson.functional.EnumTest.testEnumSet":206,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":303,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails":228,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":156,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":118,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":164,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":277,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":354,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":308,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":43,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":154,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":205,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":335,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":352,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":104,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":300,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":157,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":145,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":14,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":61,"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":72,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":316,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":66,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":135,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":31,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":197,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":148,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":301,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":334,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":9,"com.google.gson.functional.MapTest.testMapSerialization":282,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":68,"com.google.gson.functional.MapTest.testSerializeMaps":276,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":327,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":11,"com.google.gson.functional.MapTest.testComplexKeysSerialization":291,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":338,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsFalse":36,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":187,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":253,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":55,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":320,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":88,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":273,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":27,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":239,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":321,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":13,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":91,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriter":203,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization":67,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":10,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":195,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":347,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":131,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":279,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":176,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":120,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":258,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":112,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":330,"com.google.gson.functional.MapTest.testRawMapSerialization":290,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":294,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":224,"com.google.gson.functional.PrettyPrintingTest.testMap":345,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":136,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":309,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":332,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":69,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":166,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":40,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":236,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":177,"com.google.gson.functional.MapTest.testMapSerializationEmpty":292,"com.google.gson.functional.CollectionTest.testQueueSerialization":333,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":272,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":35,"com.google.gson.functional.PrimitiveTest.testByteSerialization":106,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":201,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":243,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":75,"com.google.gson.functional.MapTest.testMapOfMapSerialization":281,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":92,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":254,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":17,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":59,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":97,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":126,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":233,"com.google.gson.functional.FieldNamingTest.testIdentity":328,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":249,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":325,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":158,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":52,"com.google.gson.functional.MapTest.testMapWithQuotes":280,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":167,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":29,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":133,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":297,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":117,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":127,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":45,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":229,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":78,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":165,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":234,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization":95,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":219,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":363,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":58,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":178,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullJsonElementSerialization":199,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":150,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":111,"com.google.gson.functional.MapTest.testMapSubclassSerialization":275,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":351,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":99,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":173,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":215,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":252,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":3,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":226,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":192,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":153,"com.google.gson.functional.EnumTest.testEnumSubclass":209,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization":98,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":168,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":42,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization":82,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":77,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":7,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":18,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":175,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriterAndSerializeNulls":204,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":119,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":151,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":193,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":240,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":140,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":54,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization":12,"com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreAtSameVersion":1,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":216,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":296,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":21,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":125,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":362,"com.google.gson.functional.ObjectTest.testNestedSerialization":310,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":65,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":87,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":255,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization":93,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":259,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":289,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":194,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":323,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":261,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":248,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":47,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":244,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":305,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":319,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":123,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":299,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":24,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":63,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":51,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":235,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":284,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":6,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":217,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":237,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":160,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":110,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":196,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":247,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":322,"com.google.gson.functional.CollectionTest.testSetSerialization":341,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":122,"com.google.gson.functional.StringTest.testStringValueSerialization":238,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":348,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":74,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":56,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":85,"com.google.gson.functional.ObjectTest.testJsonObjectSerialization":302,"com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreAheadInVersion":0,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":60,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":89,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":57,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":251,"com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization":105,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":183,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":70,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":171,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":179,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":326,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":317,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":350,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":274,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":147,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":278,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":268,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":265,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":28,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":353,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":159,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullSerialization":188,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization":306,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":314,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":76,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":137,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":227,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":22,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":170,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":245},"transformations":[{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"122604d4-3e61-11e6-a0f7-a38f14074939","method":{"position":"com.google.gson.internal.bind.TypeAdapters:338","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Character value) throws java.io.IOException {\n    out.value((value == null ? null : java.lang.String.valueOf(value)));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:145","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"122652f5-3e61-11e6-a0f7-17538ab504bf","method":{"position":"com.google.gson.Gson:695","type":"CtMethodImpl","sourcecode":"public <T>T fromJson(java.lang.String json, java.lang.Class<T> classOfT) throws com.google.gson.JsonSyntaxException {\n    if (json == null) {\n        {\n            java.lang.Object java.lang.Object = fromJson(json, ((java.lang.reflect.Type)(classOfT)));\n            return com.google.gson.internal.Primitives.wrap(classOfT).cast(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249121503/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:255","type":"CtBinaryOperatorImpl","sourcecode":"(left != null) && (right != null)"},"failures":[],"tindex":"122652f6-3e61-11e6-a0f7-b1635fe11625","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:429","type":"CtMethodImpl","sourcecode":"private void rotateRight(com.google.gson.internal.LinkedHashTreeMap.Node<K, V> root) {\n    if ((root != null) && (root != null)) {\n        {\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = pivot.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = pivot.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            root.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = pivotRight;\n            if (pivotRight != null) {\n                pivotRight.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root;\n            } \n            replaceInParent(root, pivot);\n            pivot.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root;\n            root.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = pivot;\n            root.int = (java.lang.Math.max((right != null ? right.int : 0), (pivotRight != null ? pivotRight.int : 0))) + 1;\n            pivot.int = (java.lang.Math.max(root.int, (pivotLeft != null ? pivotLeft.int : 0))) + 1;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249121503/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"left":"root","right":"root"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:491","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"12267a07-3e61-11e6-a0f7-9dc1f42adbcb","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:175","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic com.google.gson.stream.JsonWriter value(java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249121503/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value == null) {\n                return nullValue();\n            } \n            if (!(isLenient())) {\n                double double = value.doubleValue();\n                if ((java.lang.Double.isNaN(d)) || (java.lang.Double.isInfinite(d))) {\n                    throw new java.lang.IllegalArgumentException((\"JSON forbids NaN and infinities: \" + value));\n                } \n            } \n            put(new com.google.gson.JsonPrimitive(value));\n            return com.google.gson.internal.bind.JsonTreeWriter.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"12267a08-3e61-11e6-a0f7-5f18dd4eefb4","method":{"position":"com.google.gson.internal.bind.TypeAdapters:406","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.StringBuilder read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return new java.lang.StringBuilder(in.nextString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"1226a119-3e61-11e6-a0f7-7967190cef54","method":{"position":"com.google.gson.internal.bind.TypeAdapters:482","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.net.InetAddress read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return java.net.InetAddress.getByName(in.nextString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:92","type":"CtBinaryOperatorImpl","sourcecode":"o instanceof java.util.Iterator"},"failures":[],"tindex":"1226a11a-3e61-11e6-a0f7-a5b4a3313a5d","method":{"position":"com.google.gson.internal.LinkedTreeMap:184","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\ncom.google.gson.internal.LinkedTreeMap.Node<K, V> findByObject(java.lang.Object key) {\n    if (key instanceof java.util.Iterator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249121503/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            try {\n                return key != null ? find(((K)(key)), false) : null;\n            } catch (java.lang.ClassCastException e) {\n                return null;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"1226a11b-3e61-11e6-a0f7-4bf1e5fd5c79","method":{"position":"com.google.gson.internal.bind.TypeAdapters:379","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.math.BigDecimal value) throws java.io.IOException {\n    out.value(value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:341","type":"CtBinaryOperatorImpl","sourcecode":"(deferredName) != null"},"failures":[],"tindex":"1226a11c-3e61-11e6-a0f7-d1fd77695d33","method":{"position":"com.google.gson.JsonObject:181","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonObject getAsJsonObject(java.lang.String memberName) {\n    if (memberName != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249121503/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((com.google.gson.JsonObject)(com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.get(memberName)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"memberName"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:243","type":"CtBinaryOperatorImpl","sourcecode":"annotation != null"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"tindex":"1226c82d-3e61-11e6-a0f7-0bdcc79c437f","method":{"position":"com.google.gson.internal.Excluder:228","type":"CtMethodImpl","sourcecode":"private boolean isValidVersion(com.google.gson.annotations.Since since, com.google.gson.annotations.Until until) {\n    if (until != null) {\n        {\n            return (isValidSince(since)) && (isValidUntil(until));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249121503/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"annotation":"until"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:332","type":"CtBinaryOperatorImpl","sourcecode":"(toResolve instanceof java.lang.Class) && (((java.lang.Class<?>)(toResolve)).isArray())"},"failures":[],"tindex":"1226c82e-3e61-11e6-a0f7-2d6d80a14566","method":{"position":"com.google.gson.internal.LinkedTreeMap:574","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(java.lang.Object o) {\n    if ((o instanceof java.lang.Class) && (((java.lang.Class<?>)(toResolve)).isArray())) {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = findByEntry(((java.util.Map.Entry<?, ?>)(o)));\n            if (node == null) {\n                return false;\n            } \n            removeInternal(node, true);\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249121503/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"1226c82f-3e61-11e6-a0f7-17cb2f9124ae","method":{"position":"com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:39","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic T read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    return com.google.gson.TypeAdapter<T>.read(in);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1189","type":"CtBinaryOperatorImpl","sourcecode":"(p == (com.google.gson.stream.JsonReader.PEEKED_SINGLE_QUOTED)) || (p == (com.google.gson.stream.JsonReader.PEEKED_DOUBLE_QUOTED))"},"failures":[],"tindex":"1226ef40-3e61-11e6-a0f7-2d2f4e378a9d","method":{"position":"com.google.gson.GsonBuilder:551","type":"CtMethodImpl","sourcecode":"private void addTypeAdaptersForDate(java.lang.String datePattern, int dateStyle, int timeStyle, java.util.List<com.google.gson.TypeAdapterFactory> factories) {\n    if ((dateStyle == dateStyle) || (p == dateStyle)) {\n        {\n            com.google.gson.DefaultDateTypeAdapter com.google.gson.DefaultDateTypeAdapter;\n            if ((datePattern != null) && (!(\"\".equals(datePattern.trim())))) {\n                dateTypeAdapter = new com.google.gson.DefaultDateTypeAdapter(datePattern);\n            } else if ((dateStyle != (java.text.DateFormat.java.text.DateFormat.int)) && (timeStyle != (java.text.DateFormat.java.text.DateFormat.int))) {\n                dateTypeAdapter = new com.google.gson.DefaultDateTypeAdapter(dateStyle , timeStyle);\n            } else {\n                return ;\n            }\n            factories.add(com.google.gson.TreeTypeAdapter.newFactory(com.google.gson.reflect.TypeToken.get(java.util.Date.java.util.Date.java.lang.Class), dateTypeAdapter));\n            factories.add(com.google.gson.TreeTypeAdapter.newFactory(com.google.gson.reflect.TypeToken.get(java.sql.Timestamp.java.sql.Timestamp.java.lang.Class), dateTypeAdapter));\n            factories.add(com.google.gson.TreeTypeAdapter.newFactory(com.google.gson.reflect.TypeToken.get(java.sql.Date.java.sql.Date.java.lang.Class), dateTypeAdapter));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249121503/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"dateStyle","com.google.gson.stream.JsonReader.PEEKED_SINGLE_QUOTED":"dateStyle","com.google.gson.stream.JsonReader.PEEKED_DOUBLE_QUOTED":"dateStyle"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"1226ef41-3e61-11e6-a0f7-37fc35cc6c4f","method":{"position":"com.google.gson.internal.Excluder:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic T read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if (skipDeserialize) {\n        in.skipValue();\n        return null;\n    } \n    return delegate().read(in);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:720","type":"CtBinaryOperatorImpl","sourcecode":"json == null"},"failures":[],"tindex":"1226ef42-3e61-11e6-a0f7-b1902fac45a2","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:808","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(java.lang.Object o) {\n    if (o == null) {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = findByEntry(((java.util.Map.Entry<?, ?>)(o)));\n            if (node == null) {\n                return false;\n            } \n            removeInternal(node, true);\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249121503/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:389","type":"CtBinaryOperatorImpl","sourcecode":"(deferredName) != null"},"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"tindex":"12271653-3e61-11e6-a0f7-37f8c9233237","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic com.google.gson.stream.JsonWriter name(java.lang.String name) throws java.io.IOException {\n    if (name != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249121503/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if ((java.util.List<com.google.gson.JsonElement>.isEmpty()) || ((java.lang.String) != null)) {\n                throw new java.lang.IllegalStateException();\n            } \n            com.google.gson.JsonElement com.google.gson.JsonElement = peek();\n            if (element instanceof com.google.gson.JsonObject) {\n                java.lang.String = name;\n                return com.google.gson.internal.bind.JsonTreeWriter.this;\n            } \n            throw new java.lang.IllegalStateException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"name"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"12271654-3e61-11e6-a0f7-cf19cc1ac3c3","method":{"position":"com.google.gson.internal.bind.TypeAdapters:509","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.util.UUID value) throws java.io.IOException {\n    out.value((value == null ? null : value.toString()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1091","type":"CtBinaryOperatorImpl","sourcecode":"builder == null"},"failures":[40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,3,4,7,8,11,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,26,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,28,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,31,32,33,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,34,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363],"tindex":"12273d65-3e61-11e6-a0f7-3952f5de5cc1","method":{"position":"com.google.gson.internal.Streams:72","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"resource\")\npublic static java.io.Writer writerForAppendable(java.lang.Appendable appendable) {\n    if (appendable == null) {\n        {\n            return appendable instanceof java.io.Writer ? ((java.io.Writer)(appendable)) : new com.google.gson.internal.Streams.AppendableWriter(appendable);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249121503/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"builder":"appendable"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"12273d66-3e61-11e6-a0f7-a5a979af1514","method":{"position":"com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:45","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"rawtypes\" , \"unchecked\" })\n@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, T value) throws java.io.IOException {\n    com.google.gson.TypeAdapter com.google.gson.TypeAdapter = com.google.gson.TypeAdapter<T>;\n    java.lang.reflect.Type java.lang.reflect.Type = getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type, value);\n    if (runtimeType != (java.lang.reflect.Type)) {\n        com.google.gson.TypeAdapter com.google.gson.TypeAdapter = com.google.gson.Gson.getAdapter(com.google.gson.reflect.TypeToken.get(runtimeType));\n        if (!(runtimeTypeAdapter instanceof com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.Adapter)) {\n            chosen = runtimeTypeAdapter;\n        } else if (!((com.google.gson.TypeAdapter<T>) instanceof com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.Adapter)) {\n            chosen = com.google.gson.TypeAdapter<T>;\n        } else {\n            chosen = runtimeTypeAdapter;\n        }\n    } \n    chosen.write(out, value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"12276477-3e61-11e6-a0f7-55b3286beaa7","method":{"position":"com.google.gson.internal.bind.SqlDateTypeAdapter:64","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized void write(com.google.gson.stream.JsonWriter out, java.sql.Date value) throws java.io.IOException {\n    out.value((value == null ? null : java.text.DateFormat.format(value)));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"12276478-3e61-11e6-a0f7-51d2aa02b077","method":{"position":"com.google.gson.internal.Excluder:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic T read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if (skipDeserialize) {\n        in.skipValue();\n        return null;\n    } \n    return delegate().read(in);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"12276479-3e61-11e6-a0f7-67a6f523f444","method":{"position":"com.google.gson.TypeAdapter:194","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic T read(com.google.gson.stream.JsonReader reader) throws java.io.IOException {\n    if ((reader.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        reader.nextNull();\n        return null;\n    } \n    return com.google.gson.TypeAdapter.this.read(reader);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"reader"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"12278b8a-3e61-11e6-a0f7-5fb3f0a257d3","method":{"position":"com.google.gson.internal.bind.TypeAdapters:736","type":"CtMethodImpl","sourcecode":"public T read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return java.util.Map<java.lang.String, T>.get(in.nextString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.JsonElement:87","type":"CtInvocationImpl","sourcecode":"isJsonObject()"},"failures":[],"tindex":"12278b8b-3e61-11e6-a0f7-e9a099c990ba","method":{"position":"com.google.gson.Gson:631","type":"CtMethodImpl","sourcecode":"public void toJson(com.google.gson.JsonElement jsonElement, java.lang.Appendable writer) throws com.google.gson.JsonIOException {\n    try {\n        com.google.gson.stream.JsonWriter com.google.gson.stream.JsonWriter = newJsonWriter(com.google.gson.internal.Streams.writerForAppendable(writer));\n        toJson(jsonElement, jsonWriter);\n    } catch (java.io.IOException e) {\n        throw new java.lang.RuntimeException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"jsonElement"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.Gson:720","type":"CtBinaryOperatorImpl","sourcecode":"json == null"},"failures":[],"tindex":"12278b8c-3e61-11e6-a0f7-939ba6496b0b","method":{"position":"com.google.gson.TypeAdapter:268","type":"CtMethodImpl","sourcecode":"public final T fromJson(java.lang.String json) throws java.io.IOException {\n    if (json == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249121503/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            return fromJson(new java.io.StringReader(json));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:332","type":"CtBinaryOperatorImpl","sourcecode":"(toResolve instanceof java.lang.Class) && (((java.lang.Class<?>)(toResolve)).isArray())"},"failures":[],"tindex":"12278b8d-3e61-11e6-a0f7-cd983e68499a","method":{"position":"com.google.gson.internal.$Gson$Types:65","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type componentType) {\n    return new com.google.gson.internal.$Gson$Types.GenericArrayTypeImpl(componentType);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"componentType"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:98","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.ParameterizedType"},"failures":[],"tindex":"12278b8e-3e61-11e6-a0f7-c37267920f9a","method":{"position":"com.google.gson.internal.$Gson$Types:65","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type componentType) {\n    return new com.google.gson.internal.$Gson$Types.GenericArrayTypeImpl(componentType);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"componentType"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.GsonBuilder:554","type":"CtBinaryOperatorImpl","sourcecode":"(datePattern != null) && (!(\"\".equals(datePattern.trim())))"},"failures":[],"tindex":"1227b29f-3e61-11e6-a0f7-c1857da694f9","method":{"position":"com.google.gson.JsonObject:67","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement remove(java.lang.String property) {\n    if ((property != null) && (!(\"\".equals(datePattern.trim())))) {\n        {\n            return com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.remove(property);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249121503/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"datePattern":"property"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"1227b2a0-3e61-11e6-a0f7-0d248d8ad00c","method":{"position":"com.google.gson.Gson:136","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement serialize(java.lang.Object src, java.lang.reflect.Type typeOfSrc) {\n    return toJsonTree(src, typeOfSrc);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"1227b2a1-3e61-11e6-a0f7-19fc2a31479d","method":{"position":"com.google.gson.internal.bind.SqlDateTypeAdapter:50","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized java.sql.Date read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        final long long = java.text.DateFormat.parse(in.nextString()).getTime();\n        return new java.sql.Date(utilDate);\n    } catch (java.text.ParseException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:213","type":"CtBinaryOperatorImpl","sourcecode":"(indent.length()) == 0"},"failures":[],"tindex":"1227b2a2-3e61-11e6-a0f7-d38df56c0b2a","method":{"position":"com.google.gson.stream.JsonReader:1448","type":"CtMethodImpl","sourcecode":"private boolean skipTo(java.lang.String toFind) throws java.io.IOException {\n    if ((toFind.length()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249121503/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            outer : for ( ; (((int) + (toFind.length())) <= (int)) || (fillBuffer(toFind.length())) ; (int)++) {\n                if ((char[][int]) == '\\n') {\n                    (int)++;\n                    int = (int) + 1;\n                    continue;\n                } \n                for (int int = 0 ; c < (toFind.length()) ; c++) {\n                    if ((char[][((int) + c)]) != (toFind.charAt(c))) {\n                        continue outer;\n                    } \n                }\n                return true;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"indent":"toFind"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:246","type":"CtVariableReadImpl","sourcecode":"unlink"},"failures":[],"tindex":"1227d9b3-3e61-11e6-a0f7-63dee17a855b","method":{"position":"com.google.gson.stream.JsonWriter:268","type":"CtMethodImpl","sourcecode":"public final void setSerializeNulls(boolean serializeNulls) {\n    if (serializeNulls) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249121503/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.stream.JsonWriter.this.boolean = serializeNulls;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"unlink":"serializeNulls"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":32,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}