{"failureDictionary":{"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":123,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":290,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":277,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":341,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":38,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":361,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":185,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":222,"com.google.gson.stream.JsonWriterTest.testPrettyPrintObject":375,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":289,"com.google.gson.functional.PrimitiveTest.testShortSerialization":90,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":264,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":354,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":111,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":83,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":159,"com.google.gson.MixedStreamTest.testWriteLenient":13,"com.google.gson.internal.bind.JsonTreeWriterTest.testPrematureClose":365,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":319,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":177,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":195,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":53,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":324,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":326,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":201,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":334,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":200,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":256,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":207,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":94,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":338,"com.google.gson.functional.ObjectTest.testSingletonLists":293,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":173,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":257,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":223,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedArray":372,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":189,"com.google.gson.internal.bind.JsonTreeWriterTest.testObject":370,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization":97,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":2,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":113,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":310,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":46,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":149,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsTrue":373,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":102,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":135,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":339,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":198,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":119,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":355,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":332,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":209,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":258,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":5,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":171,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":263,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":352,"com.google.gson.functional.EnumTest.testEnumCaseMapping":199,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":18,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":221,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":161,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":253,"com.google.gson.functional.JsonTreeTest.testToJsonTree":220,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":265,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":344,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":130,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":134,"com.google.gson.functional.PrimitiveTest.testNumberSerialization":77,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":148,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":156,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":95,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":34,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":260,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":194,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":261,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":331,"com.google.gson.functional.MapTest.testGeneralMapField":282,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":232,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":313,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":60,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":210,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":241,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":178,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":280,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":17,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":65,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization":89,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":150,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":247,"com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization":84,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":302,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":350,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":62,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":71,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":7,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":16,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":335,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":205,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":187,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":248,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":353,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":81,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":169,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":75,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":110,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":96,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":105,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":237,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":308,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":172,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":251,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":48,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedObject":371,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":168,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":122,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":21,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":254,"com.google.gson.internal.bind.JsonTreeWriterTest.testLenientNansAndInfinities":367,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":109,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":136,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":306,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":124,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":287,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":82,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":351,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":30,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":233,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":307,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":42,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":356,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":67,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":115,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":139,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":88,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":127,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":142,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":57,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":337,"com.google.gson.functional.ObjectTest.testNullSerialization":299,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":121,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":176,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":64,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":281,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":167,"com.google.gson.functional.MapTest.testInterfaceTypeMap":279,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":61,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":212,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":129,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":208,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":44,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":197,"com.google.gson.functional.EnumTest.testEnumSet":193,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":298,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails":215,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":143,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":99,"com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithNestedWildcards":378,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":151,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":271,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":349,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":303,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":4,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":141,"com.google.gson.MixedStreamTest.testWriteClosed":15,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":192,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":330,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":347,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":85,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":295,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":144,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":128,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":33,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":29,"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":43,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":311,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":36,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":116,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":252,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":184,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":133,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":296,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":329,"com.google.gson.functional.MapTest.testMapSerialization":276,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":39,"com.google.gson.functional.MapTest.testSerializeMaps":270,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":322,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":49,"com.google.gson.functional.MapTest.testComplexKeysSerialization":285,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":333,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":174,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsFalse":366,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":244,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":23,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":315,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":69,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":267,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":217,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":230,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":316,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":32,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":72,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriter":190,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization":37,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":182,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":342,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":112,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":273,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":163,"com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithBasicWildcards":380,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":101,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":249,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":93,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":325,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":9,"com.google.gson.functional.MapTest.testRawMapSerialization":284,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":288,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":211,"com.google.gson.functional.PrettyPrintingTest.testMap":340,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":117,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":304,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":327,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":40,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":153,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":1,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":227,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":164,"com.google.gson.functional.MapTest.testMapSerializationEmpty":286,"com.google.gson.functional.CollectionTest.testQueueSerialization":328,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":266,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":360,"com.google.gson.functional.PrimitiveTest.testByteSerialization":87,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":188,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":234,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapNoTypeSerialization":362,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":51,"com.google.gson.functional.MapTest.testMapOfMapSerialization":275,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":73,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":245,"com.google.gson.JsonPrimitiveTest.testEqualsIntegerAndBigInteger":358,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":54,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":27,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":78,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":107,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":224,"com.google.gson.functional.FieldNamingTest.testIdentity":323,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":240,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":320,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":145,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":20,"com.google.gson.functional.MapTest.testMapWithQuotes":274,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":154,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":55,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":114,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":219,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":292,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":98,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":108,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":6,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":216,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":59,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":152,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":225,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization":76,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":206,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":364,"com.google.gson.stream.JsonWriterTest.testLenientWriterPermitsMultipleTopLevelValues":0,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":26,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":165,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullJsonElementSerialization":186,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":137,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":92,"com.google.gson.functional.MapTest.testMapSubclassSerialization":269,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":346,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":80,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":160,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":202,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":243,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":10,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":45,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":213,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":179,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":140,"com.google.gson.functional.EnumTest.testEnumSubclass":196,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization":79,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":155,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":3,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization":63,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":58,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":47,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":56,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":162,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriterAndSerializeNulls":191,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":100,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":138,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":180,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":231,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":376,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":120,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":22,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":203,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":291,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":125,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":106,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":363,"com.google.gson.functional.ObjectTest.testNestedSerialization":305,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":35,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":68,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":246,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization":74,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":250,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":283,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":181,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":318,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":255,"com.google.gson.MixedStreamTest.testWriteNulls":11,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":239,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":8,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":14,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":235,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":300,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":314,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":104,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":294,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":131,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":31,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":19,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":226,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":278,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":204,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":228,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":147,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":91,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":183,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":238,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":317,"com.google.gson.functional.CollectionTest.testSetSerialization":336,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":103,"com.google.gson.functional.StringTest.testStringValueSerialization":229,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":343,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":50,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":24,"com.google.gson.JsonParserTest.testParseMixedArray":357,"com.google.gson.MixedStreamTest.testWriteInvalidState":12,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":66,"com.google.gson.functional.ObjectTest.testJsonObjectSerialization":297,"com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithTypeParameters":379,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":28,"com.google.gson.internal.bind.JsonTreeWriterTest.testWriteAfterClose":369,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":70,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":25,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":242,"com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization":86,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":170,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":41,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":158,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":166,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":321,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":312,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":345,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":268,"com.google.gson.JsonPrimitiveTest.testValidJsonOnToString":359,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":132,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":272,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":262,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":259,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":377,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":218,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":348,"com.google.gson.internal.bind.JsonTreeWriterTest.testArray":368,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":146,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullSerialization":175,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization":301,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":309,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":52,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":118,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":214,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":126,"com.google.gson.stream.JsonWriterTest.testPrettyPrintArray":374,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":157,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":236},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:541","type":"CtBinaryOperatorImpl","sourcecode":"peekStack == (com.google.gson.stream.JsonScope.NONEMPTY_DOCUMENT)"},"failures":[],"tindex":"7215c340-3e30-11e6-8ca0-d73774c27952","method":{"position":"com.google.gson.GsonBuilder:423","type":"CtMethodImpl","sourcecode":"public com.google.gson.GsonBuilder setDateFormat(int dateStyle, int timeStyle) {\n    if (dateStyle == timeStyle) {\n        {\n            com.google.gson.GsonBuilder.this.int = dateStyle;\n            com.google.gson.GsonBuilder.this.int = timeStyle;\n            com.google.gson.GsonBuilder.this.java.lang.String = null;\n            return com.google.gson.GsonBuilder.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228541501/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"peekStack":"dateStyle","com.google.gson.stream.JsonScope.NONEMPTY_DOCUMENT":"timeStyle"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:99","type":"CtVariableReadImpl","sourcecode":"serialization"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373],"tindex":"72163871-3e30-11e6-8ca0-b5ca7d0b4d2c","method":{"position":"com.google.gson.stream.JsonWriter:234","type":"CtMethodImpl","sourcecode":"public final void setLenient(boolean lenient) {\n    if (lenient) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228541501/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.stream.JsonWriter.this.boolean = lenient;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"serialization":"lenient"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:319","type":"CtBinaryOperatorImpl","sourcecode":"((value) instanceof java.lang.Number) && ((other.value) instanceof java.lang.Number)"},"failures":[],"tindex":"72165f82-3e30-11e6-8ca0-5baf466c4f7e","method":{"position":"com.google.gson.JsonPrimitive:305","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object obj) {\n    if ((obj instanceof java.lang.Number) && ((obj.java.lang.Object) instanceof java.lang.Number)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228541501/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((com.google.gson.JsonPrimitive.this) == obj) {\n                return true;\n            } \n            if ((obj == null) || ((getClass()) != (obj.getClass()))) {\n                return false;\n            } \n            com.google.gson.JsonPrimitive com.google.gson.JsonPrimitive = ((com.google.gson.JsonPrimitive)(obj));\n            if ((java.lang.Object) == null) {\n                return (other.java.lang.Object) == null;\n            } \n            if ((com.google.gson.JsonPrimitive.isIntegral(com.google.gson.JsonPrimitive.this)) && (com.google.gson.JsonPrimitive.isIntegral(other))) {\n                return (getAsNumber().longValue()) == (other.getAsNumber().longValue());\n            } \n            if (((java.lang.Object) instanceof java.lang.Number) && ((other.java.lang.Object) instanceof java.lang.Number)) {\n                double double = getAsNumber().doubleValue();\n                double double = other.getAsNumber().doubleValue();\n                return (a == b) || ((java.lang.Double.isNaN(a)) && (java.lang.Double.isNaN(b)));\n            } \n            return java.lang.Object.equals(other.java.lang.Object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"other":"obj","value":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonElement:87","type":"CtInvocationImpl","sourcecode":"isJsonObject()"},"failures":[],"tindex":"72168693-3e30-11e6-8ca0-6714d316152a","method":{"position":"com.google.gson.internal.$Gson$Types:563","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object other) {\n    return (other instanceof java.lang.reflect.WildcardType) && (com.google.gson.internal.$Gson$Types.equals(com.google.gson.internal.$Gson$Types.WildcardTypeImpl.this, ((java.lang.reflect.WildcardType)(other))));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"other"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.GsonBuilder:554","type":"CtBinaryOperatorImpl","sourcecode":"(datePattern != null) && (!(\"\".equals(datePattern.trim())))"},"failures":[],"tindex":"72168694-3e30-11e6-8ca0-5137db233693","method":{"position":"com.google.gson.JsonObject:89","type":"CtMethodImpl","sourcecode":"public void addProperty(java.lang.String property, java.lang.Number value) {\n    if ((property != null) && (!(\"\".equals(datePattern.trim())))) {\n        {\n            add(property, createJsonElement(value));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228541501/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"datePattern":"property"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:341","type":"CtBinaryOperatorImpl","sourcecode":"(deferredName) != null"},"failures":[],"tindex":"72168695-3e30-11e6-8ca0-f72c154320c8","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:839","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(java.lang.Object o) {\n    if (o != null) {\n        {\n            return containsKey(o);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228541501/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"72168696-3e30-11e6-8ca0-a504f18481af","method":{"position":"com.google.gson.Gson:254","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Double read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return in.nextDouble();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:565","type":"CtBinaryOperatorImpl","sourcecode":"(indent) == null"},"failures":[374,375,10,135,270,339,340,341,342,343,344,345,346],"tindex":"7216ada7-3e30-11e6-8ca0-237390aaa96a","method":{"position":"com.google.gson.stream.JsonWriter:212","type":"CtMethodImpl","sourcecode":"public final void setIndent(java.lang.String indent) {\n    if (indent == null) {\n        {\n            if ((indent.length()) == 0) {\n                com.google.gson.stream.JsonWriter.this.java.lang.String = null;\n                com.google.gson.stream.JsonWriter.this.java.lang.String = \":\";\n            } else {\n                com.google.gson.stream.JsonWriter.this.java.lang.String = indent;\n                com.google.gson.stream.JsonWriter.this.java.lang.String = \": \";\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228541501/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"indent":"indent"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:725","type":"CtBinaryOperatorImpl","sourcecode":"last == (com.google.gson.stream.JsonReader.NUMBER_CHAR_DIGIT)"},"failures":[],"tindex":"7216ada8-3e30-11e6-8ca0-3f1221181316","method":{"position":"com.google.gson.stream.JsonWriter:353","type":"CtMethodImpl","sourcecode":"private void push(int newTop) {\n    if (newTop == newTop) {\n        {\n            if ((int) == (int[].int)) {\n                int[] int[] = new int[(int) * 2];\n                java.lang.System.arraycopy(int[], 0, newStack, 0, int);\n                int[] = newStack;\n            } \n            int[][((int)++)] = newTop;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228541501/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"last":"newTop","com.google.gson.stream.JsonReader.NUMBER_CHAR_DIGIT":"newTop"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:414","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[116,120,376,377,319,322],"tindex":"7216ada9-3e30-11e6-8ca0-59fe20d3b988","method":{"position":"com.google.gson.FieldNamingPolicy:137","type":"CtMethodImpl","sourcecode":"private static java.lang.String upperCaseFirstLetter(java.lang.String name) {\n    if (name == null) {\n        {\n            java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            int int = 0;\n            char char = name.charAt(index);\n            while (index < ((name.length()) - 1)) {\n                if (java.lang.Character.isLetter(firstCharacter)) {\n                    break;\n                } \n                fieldNameBuilder.append(firstCharacter);\n                firstCharacter = name.charAt((++index));\n            }\n            if (index == (name.length())) {\n                return fieldNameBuilder.toString();\n            } \n            if (!(java.lang.Character.isUpperCase(firstCharacter))) {\n                java.lang.String java.lang.String = com.google.gson.FieldNamingPolicy.modifyString(java.lang.Character.toUpperCase(firstCharacter), name, (++index));\n                return fieldNameBuilder.append(modifiedTarget).toString();\n            } else {\n                return name;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228541501/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"name"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"7216d4ba-3e30-11e6-8ca0-f1373befa14f","method":{"position":"com.google.gson.internal.bind.CollectionTypeAdapterFactory:72","type":"CtMethodImpl","sourcecode":"public java.util.Collection<E> read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    java.util.Collection<E> java.util.Collection<E> = com.google.gson.internal.ObjectConstructor<? extends java.util.Collection<E>>.construct();\n    in.beginArray();\n    while (in.hasNext()) {\n        E E = com.google.gson.TypeAdapter<E>.read(in);\n        collection.add(instance);\n    }\n    in.endArray();\n    return collection;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"7216d4bb-3e30-11e6-8ca0-555fd80bc0c4","method":{"position":"com.google.gson.internal.bind.TypeAdapters:397","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.math.BigInteger value) throws java.io.IOException {\n    out.value(value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:240","type":"CtInvocationImpl","sourcecode":"from.getRawType().equals(to.getRawType())"},"failures":[378,379,380],"tindex":"7216d4bc-3e30-11e6-8ca0-b53eda8c049e","method":{"position":"com.google.gson.reflect.TypeToken:238","type":"CtMethodImpl","sourcecode":"private static boolean typeEquals(java.lang.reflect.ParameterizedType from, java.lang.reflect.ParameterizedType to, java.util.Map<java.lang.String, java.lang.reflect.Type> typeVarMap) {\n    if (from.getRawType().equals(to.getRawType())) {\n        {\n            if (from.getRawType().equals(to.getRawType())) {\n                java.lang.reflect.Type[] java.lang.reflect.Type[] = from.getActualTypeArguments();\n                java.lang.reflect.Type[] java.lang.reflect.Type[] = to.getActualTypeArguments();\n                for (int int = 0 ; i < (fromArgs.int) ; i++) {\n                    if (!(com.google.gson.reflect.TypeToken.matches(fromArgs[i], toArgs[i], typeVarMap))) {\n                        return false;\n                    } \n                }\n                return true;\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228541501/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"from","to":"to"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:618","type":"CtBinaryOperatorImpl","sourcecode":"(c == 'f') || (c == 'F')"},"failures":[],"tindex":"7216fbcd-3e30-11e6-8ca0-bf74035b9c8a","method":{"position":"com.google.gson.stream.JsonReader:1101","type":"CtMethodImpl","sourcecode":"private void skipQuotedValue(char quote) throws java.io.IOException {\n    if ((quote == 'f') || (c == 'F')) {\n        {\n            char[] char[] = com.google.gson.stream.JsonReader.this.char[];\n            do {\n                int int = int;\n                int int = int;\n                while (p < l) {\n                    int int = buffer[(p++)];\n                    if (c == quote) {\n                        int = p;\n                        return ;\n                    } else if (c == '\\\\') {\n                        int = p;\n                        readEscapeCharacter();\n                        p = int;\n                        l = int;\n                    } else if (c == '\\n') {\n                        (int)++;\n                        int = p;\n                    } \n                }\n                int = p;\n            } while (fillBuffer(1) );\n            throw syntaxError(\"Unterminated string\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228541501/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"quote"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:176","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"7216fbce-3e30-11e6-8ca0-49fdec3edd26","method":{"position":"com.google.gson.Gson:285","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467228541501/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value == null) {\n                out.nullValue();\n                return ;\n            } \n            float float = value.floatValue();\n            checkValidFloatingPoint(floatValue);\n            out.value(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":15,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}