{"failureDictionary":{"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":128,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":222,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":38,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":89,"com.google.gson.stream.JsonWriterTest.testPrettyPrintObject":263,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":101,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":238,"com.google.gson.stream.JsonWriterTest.testRepeatedName":255,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":123,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":172,"com.google.gson.MixedStreamTest.testWriteLenient":2,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":143,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":119,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":102,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":104,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":112,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":148,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":66,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":174,"com.google.gson.functional.ObjectTest.testSingletonLists":153,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":151,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedArray":14,"com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue":246,"com.google.gson.stream.JsonWriterTest.testStrings":273,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":207,"com.google.gson.internal.bind.JsonTreeWriterTest.testObject":12,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":52,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":125,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":167,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsTrue":15,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeRecursive":58,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":59,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":197,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":45,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":36,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":122,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":218,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":110,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":231,"com.google.gson.stream.JsonWriterTest.testMultipleTopLevelValues":267,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":233,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":137,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":237,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":5,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":133,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":242,"com.google.gson.stream.JsonWriterTest.testNullStringValue":250,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":239,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":41,"com.google.gson.stream.JsonWriterTest.testNulls":253,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":79,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullField":55,"com.google.gson.stream.JsonWriterTest.testEmptyObject":265,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":18,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":118,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":235,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":109,"com.google.gson.functional.MapTest.testGeneralMapField":94,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":22,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":210,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":31,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":191,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":140,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":92,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":169,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":225,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":278,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":192,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":171,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":113,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":277,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":64,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":226,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullObject":56,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":136,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":27,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":165,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":175,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":138,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":47,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":61,"com.google.gson.stream.JsonWriterTest.testArraysInObjects":254,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedObject":13,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":135,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":221,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":189,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":243,"com.google.gson.internal.bind.JsonTreeWriterTest.testLenientNansAndInfinities":10,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":201,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":163,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":99,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":186,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":23,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":164,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":7,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":17,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnFlush":268,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":127,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":70,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":202,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":73,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":115,"com.google.gson.stream.JsonWriterTest.testEmptyArray":247,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":220,"com.google.gson.stream.JsonWriterTest.testDoubles":270,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":139,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":93,"com.google.gson.functional.MapTest.testInterfaceTypeMap":91,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":204,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":67,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":51,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":121,"com.google.gson.functional.EnumTest.testEnumSet":117,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":158,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":74,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":194,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":83,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":160,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":72,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":279,"com.google.gson.MixedStreamTest.testWriteClosed":4,"com.google.gson.stream.JsonWriterTest.testBadNestingArray":266,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":108,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":208,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":155,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":75,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":203,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":168,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":185,"com.google.gson.stream.JsonWriterTest.testLongs":252,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":181,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":215,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":241,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":142,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":156,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":206,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":107,"com.google.gson.functional.MapTest.testMapSerialization":88,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":182,"com.google.gson.functional.MapTest.testSerializeMaps":82,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":146,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":62,"com.google.gson.functional.MapTest.testComplexKeysSerialization":97,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":111,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsFalse":9,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":34,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":176,"com.google.gson.stream.JsonWriterTest.testNumbers":272,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":212,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":240,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":20,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":213,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":39,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":124,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":85,"com.google.gson.stream.JsonWriterTest.testDeepNestingObjects":264,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":196,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":227,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":103,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":0,"com.google.gson.functional.MapTest.testRawMapSerialization":96,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":100,"com.google.gson.functional.PrettyPrintingTest.testMap":37,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize":53,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":105,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":161,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":216,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":183,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeMap":57,"com.google.gson.functional.MapTest.testMapSerializationEmpty":98,"com.google.gson.functional.CollectionTest.testQueueSerialization":106,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":134,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnValue":269,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":24,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnName":271,"com.google.gson.functional.MapTest.testMapOfMapSerialization":87,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":229,"com.google.gson.ObjectTypeAdapterTest.testSerialize":245,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":223,"com.google.gson.stream.JsonWriterTest.testNameWithoutValue":248,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":180,"com.google.gson.functional.FieldNamingTest.testIdentity":147,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":30,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":144,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":76,"com.google.gson.functional.MapTest.testMapWithQuotes":86,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":188,"com.google.gson.stream.JsonWriterTest.testStrictWriterDoesNotPermitMultipleTopLevelValues":258,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":126,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":152,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":193,"com.google.gson.stream.JsonWriterTest.testDeepNestingArrays":251,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":116,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":130,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":65,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":276,"com.google.gson.stream.JsonWriterTest.testLenientWriterPermitsMultipleTopLevelValues":260,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":179,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":68,"com.google.gson.functional.MapTest.testMapSubclassSerialization":81,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":43,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":149,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":33,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":1,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":232,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":141,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":71,"com.google.gson.functional.EnumTest.testEnumSubclass":120,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":131,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":60,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":195,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":21,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":69,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":280,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":219,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":190,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":129,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":150,"com.google.gson.stream.JsonWriterTest.testWriterCloseIsIdempotent":259,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize2dArray":50,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":200,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":275,"com.google.gson.functional.ObjectTest.testNestedSerialization":162,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":19,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":170,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":224,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":46,"com.google.gson.stream.JsonWriterTest.testBadNestingObject":261,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":95,"com.google.gson.stream.JsonWriterTest.testObjectsInArrays":257,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":49,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":35,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":29,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnStructure":256,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":3,"com.google.gson.stream.JsonWriterTest.testUnicodeLineBreaksEscaped":274,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":25,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":159,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":211,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":154,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":199,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":187,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":6,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":44,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":90,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize1dArray":54,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":63,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":78,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":173,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":28,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":48,"com.google.gson.ObjectTypeAdapterTest.testSerializeObject":244,"com.google.gson.functional.CollectionTest.testSetSerialization":114,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":40,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":198,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":228,"com.google.gson.JsonParserTest.testParseMixedArray":8,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":177,"com.google.gson.functional.ObjectTest.testJsonObjectSerialization":157,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":184,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":32,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":178,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":16,"com.google.gson.stream.JsonWriterTest.testBooleans":249,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":132,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":145,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":42,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":209,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":80,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":84,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":205,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":236,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":234,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":281,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":214,"com.google.gson.internal.bind.JsonTreeWriterTest.testArray":11,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":77,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":166,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":217,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":230,"com.google.gson.stream.JsonWriterTest.testPrettyPrintArray":262,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":26},"transformations":[{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:596","type":"CtBinaryOperatorImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279],"tindex":"53fa207f-3f30-11e6-862e-bf5d28f6d95b","method":{"position":"com.google.gson.stream.JsonWriter:335","type":"CtMethodImpl","sourcecode":"private com.google.gson.stream.JsonWriter close(int empty, int nonempty, java.lang.String closeBracket) throws java.io.IOException {\n    if (nonempty != nonempty) {\n        {\n            int int = peek();\n            if ((context != nonempty) && (context != empty)) {\n                throw new java.lang.IllegalStateException(\"Nesting problem.\");\n            } \n            if ((java.lang.String) != null) {\n                throw new java.lang.IllegalStateException((\"Dangling name: \" + (java.lang.String)));\n            } \n            (int)--;\n            if (context == nonempty) {\n                newline();\n            } \n            java.io.Writer.write(closeBracket);\n            return com.google.gson.stream.JsonWriter.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338643369/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"result":"nonempty","com.google.gson.stream.JsonReader.PEEKED_NONE":"nonempty"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:76","type":"CtBinaryOperatorImpl"},"failures":[143,146,215,219,280,281],"tindex":"53fa95b0-3f30-11e6-862e-897291185e0e","method":{"position":"com.google.gson.FieldNamingPolicy:137","type":"CtMethodImpl","sourcecode":"private static java.lang.String upperCaseFirstLetter(java.lang.String name) {\n    if (name != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338643369/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            int int = 0;\n            char char = name.charAt(index);\n            while (index < ((name.length()) - 1)) {\n                if (java.lang.Character.isLetter(firstCharacter)) {\n                    break;\n                } \n                fieldNameBuilder.append(firstCharacter);\n                firstCharacter = name.charAt((++index));\n            }\n            if (index == (name.length())) {\n                return fieldNameBuilder.toString();\n            } \n            if (!(java.lang.Character.isUpperCase(firstCharacter))) {\n                java.lang.String java.lang.String = com.google.gson.FieldNamingPolicy.modifyString(java.lang.Character.toUpperCase(firstCharacter), name, (++index));\n                return fieldNameBuilder.append(modifiedTarget).toString();\n            } else {\n                return name;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pendingName":"name"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1527","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"53fabcc1-3f30-11e6-862e-812105f3ae2e","method":{"position":"com.google.gson.stream.JsonReader:999","type":"CtMethodImpl","sourcecode":"private java.lang.String nextQuotedValue(char quote) throws java.io.IOException {\n    if ((quote >= '0') && (c <= '9')) {\n        {\n            char[] char[] = com.google.gson.stream.JsonReader.this.char[];\n            java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            while (true) {\n                int int = int;\n                int int = int;\n                int int = p;\n                while (p < l) {\n                    int int = buffer[(p++)];\n                    if (c == quote) {\n                        int = p;\n                        builder.append(buffer, start, ((p - start) - 1));\n                        return builder.toString();\n                    } else if (c == '\\\\') {\n                        int = p;\n                        builder.append(buffer, start, ((p - start) - 1));\n                        builder.append(readEscapeCharacter());\n                        p = int;\n                        l = int;\n                        start = p;\n                    } else if (c == '\\n') {\n                        (int)++;\n                        int = p;\n                    } \n                }\n                builder.append(buffer, start, (p - start));\n                int = p;\n                if (!(fillBuffer(1))) {\n                    throw syntaxError(\"Unterminated string\");\n                } \n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338643369/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"quote"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:127","type":"CtInvocationImpl"},"failures":[],"tindex":"53fabcc2-3f30-11e6-862e-e148053698ca","method":{"position":"com.google.gson.reflect.TypeToken:160","type":"CtMethodImpl","sourcecode":"private static boolean isAssignableFrom(java.lang.reflect.Type from, java.lang.reflect.GenericArrayType to) {\n    if (from.equals(from)) {\n        {\n            java.lang.reflect.Type java.lang.reflect.Type = to.getGenericComponentType();\n            if (toGenericComponentType instanceof java.lang.reflect.ParameterizedType) {\n                java.lang.reflect.Type java.lang.reflect.Type = from;\n                if (from instanceof java.lang.reflect.GenericArrayType) {\n                    t = ((java.lang.reflect.GenericArrayType)(from)).getGenericComponentType();\n                } else if (from instanceof java.lang.Class<?>) {\n                    java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(from));\n                    while (classType.isArray()) {\n                        classType = classType.getComponentType();\n                    }\n                    t = classType;\n                } \n                return com.google.gson.reflect.TypeToken.isAssignableFrom(t, ((java.lang.reflect.ParameterizedType)(toGenericComponentType)), new java.util.HashMap<java.lang.String, java.lang.reflect.Type>());\n            } \n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467338643369/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"from","type":"from"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":4,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}