{"failureDictionary":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":57,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":357,"com.google.gson.functional.StringTest.testStringValueDeserialization":355,"com.google.gson.functional.PrimitiveTest.testBigIntegerDeserialization":145,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":481,"com.google.gson.functional.PrimitiveTest.testBigDecimalNaNDeserializationNotSupported":106,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":207,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":525,"com.google.gson.MixedStreamTest.testWriteLenient":24,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":373,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":491,"com.google.gson.ExposeAnnotationExclusionStrategyTest.testNeverSkipClasses":19,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":302,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":78,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":544,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":489,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":561,"com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization":154,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":334,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":420,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":341,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerDeserialization":115,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":252,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":427,"com.google.gson.functional.ObjectTest.testSingletonLists":487,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":295,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":423,"com.google.gson.functional.PrimitiveTest.testNumberDeserialization":99,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":358,"com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue":597,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator":201,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":319,"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":566,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization":312,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":504,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":8,"com.google.gson.functional.PrimitiveTest.testStringsAsBooleans":157,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":69,"com.google.gson.functional.StringTest.testEscapedBackslashInStringDeserialization":371,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":242,"com.google.gson.functional.PrimitiveTest.testBigDecimalNoFractAsStringRepresentationDeserialization":146,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":569,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":463,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":15,"com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization":91,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":582,"com.google.gson.functional.MapTest.testMapOfMapDeserialization":462,"com.google.gson.functional.EnumTest.testEnumCaseMapping":333,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":29,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":356,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsLong":90,"com.google.gson.functional.JsonTreeTest.testToJsonTree":354,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":574,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":241,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":260,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":271,"com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization":394,"com.google.gson.functional.PrimitiveTest.testUnquotedStringDeserializationFails":101,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferDeserialization":288,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":430,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":554,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":527,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringDeserialization":368,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":500,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization":167,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":600,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsBigIntegerFails":107,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":505,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":580,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":88,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":513,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":599,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":339,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":314,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionDeserialization":172,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":409,"com.google.gson.functional.PrimitiveTest.testDoubleInfinityDeserialization":171,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization":311,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":151,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":130,"com.google.gson.functional.PrimitiveTest.testFloatInfinityDeserialization":178,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":390,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":516,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityDeserialization":128,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":294,"com.google.gson.functional.PrimitiveTest.testDoubleNoFractAsStringRepresentationDeserialization":143,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":374,"com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization":455,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":224,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountryVariant":285,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":417,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":187,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":477,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":152,"com.google.gson.functional.JsonParserTest.testParseInvalidJson":379,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsDouble":144,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":384,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":512,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":65,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":495,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":589,"com.google.gson.internal.LinkedHashTreeMapTest.testEmptyStringValues":3,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":111,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":214,"com.google.gson.functional.MapTest.testMapDeserializationWithNullValue":473,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":424,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":232,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":250,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":35,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":189,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings":316,"com.google.gson.functional.MapTest.testNumberKeyDeserialization":479,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":300,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":537,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":32,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":287,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":87,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":530,"com.google.gson.functional.CollectionTest.testSetDeserialization":560,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":342,"com.google.gson.functional.EnumTest.testEnumSet":324,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":499,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersEscapedDeserialization":586,"com.google.gson.functional.PrimitiveTest.testBigDecimalAsStringRepresentationDeserialization":135,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":251,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":188,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampDeserialization":275,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":450,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":506,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":14,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":249,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBytePrimitive":148,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":34,"com.google.gson.functional.PrimitiveTest.testDeserializingDecimalPointValueZeroSucceeds":159,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":323,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":577,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":160,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsIntegerFails":104,"com.google.gson.functional.MapTest.testHashMapDeserialization":444,"com.google.gson.functional.CollectionTest.testLinkedListDeserialization":550,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesDeserialization":299,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization":59,"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":66,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":55,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":215,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":322,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":413,"com.google.gson.functional.MapTest.testSortedMap":466,"com.google.gson.functional.MapTest.testMapSerialization":461,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":58,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedDeserialization":141,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":533,"com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization":397,"com.google.gson.functional.MapTest.testSerializeMaps":447,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":542,"com.google.gson.functional.MapTest.testComplexKeysSerialization":474,"com.google.gson.functional.InternationalizationTest.testStringsWithRawChineseCharactersDeserialization":585,"com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader":478,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsFalse":610,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":404,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":331,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":529,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":439,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":227,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriter":608,"com.google.gson.functional.EnumTest.testTopLevelEnumDeserialization":329,"com.google.gson.JsonObjectTest.testAddingAndRemovingObjectProperties":5,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":572,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":209,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsDeserialization":515,"com.google.gson.functional.MapTest.testStringKeyDeserialization":476,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsDeserialization":401,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":193,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":174,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesDeserialization":110,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":480,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigInteger":105,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":345,"com.google.gson.functional.PrettyPrintingTest.testMap":570,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":547,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":61,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":268,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls":320,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":7,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysDeserialization":403,"com.google.gson.functional.StringTest.testStringWithEscapedSlashDeserialization":361,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":365,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":282,"com.google.gson.functional.MapTest.testMapSerializationEmpty":475,"com.google.gson.functional.CollectionTest.testQueueSerialization":551,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsByteWrapper":136,"com.google.gson.functional.MapTest.testMapOfMapSerialization":460,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":127,"com.google.gson.JavaSerializationTest.testMapIsSerializable":11,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountry":290,"com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization":557,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":46,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":138,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":202,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":359,"com.google.gson.functional.FieldNamingTest.testIdentity":543,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":190,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":37,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":517,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":80,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":213,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":353,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":486,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalDeserialization":93,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":16,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":84,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":360,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization":133,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":483,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeDeserialization":304,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":595,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidDeserialization":277,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":45,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":284,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullJsonElementSerialization":607,"com.google.gson.functional.MapTest.testMapDeserializationEmpty":441,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":170,"com.google.gson.functional.MapTest.testMapSubclassSerialization":446,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":259,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":336,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersDeserialization":588,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":22,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":67,"com.google.gson.functional.PrimitiveTest.testBigDecimalDeserialization":125,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":347,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsLongPrimitive":185,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguage":267,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":375,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":318,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":248,"com.google.gson.functional.EnumTest.testEnumSubclass":327,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization":147,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":9,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":502,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization":92,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":83,"com.google.gson.functional.PrimitiveTest.testFloatNaNDeserialization":153,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":192,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":222,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsLongWrapper":95,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":485,"com.google.gson.functional.PrimitiveTest.testBigDecimalNegativeInfinityDeserializationNotSupported":131,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":484,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":230,"com.google.gson.functional.ArrayTest.testArrayOfNullDeserialization":393,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":594,"com.google.gson.functional.PrimitiveTest.testBigDecimalInfinityDeserializationNotSupported":137,"com.google.gson.functional.ObjectTest.testTruncatedDeserialization":498,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization":129,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":212,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":307,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":488,"com.google.gson.functional.MapTest.testMapSubclassDeserialization":443,"com.google.gson.MixedStreamTest.testWriteNulls":598,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":392,"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":377,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":386,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":245,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":528,"com.google.gson.CommentsTest.testParseComments":590,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":197,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":433,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":490,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":50,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigDecimal":150,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":399,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":532,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":363,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":465,"com.google.gson.MixedStreamTest.testReadInvalidState":21,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":338,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":257,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":169,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":309,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":534,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":103,"com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash":0,"com.google.gson.functional.ArrayTest.testArrayOfStringsDeserialization":405,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":47,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":120,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":44,"com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization":164,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":292,"com.google.gson.functional.ArrayTest.testEmptyArrayDeserialization":389,"com.google.gson.functional.MapTest.testMapDeserialization":453,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":286,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":575,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":442,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":426,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":239,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":452,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":432,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":428,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":228,"com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization":328,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":352,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":266,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization":503,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":518,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":217,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":348,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":231,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":272,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":256,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":226,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":482,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":464,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":571,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":592,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":313,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigDecimal":89,"com.google.gson.functional.PrimitiveTest.testShortSerialization":168,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":199,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":435,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedDeserialization":156,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":584,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedDeserialization":126,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":155,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsBigDecimal":102,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":276,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":539,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":326,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":546,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":335,"com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues":448,"com.google.gson.functional.PrimitiveTest.testLargeDoubleDeserialization":119,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":176,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":567,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":6,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization":301,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":440,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":28,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization":183,"com.google.gson.functional.PrimitiveTest.testDeserializingNonZeroDecimalPointValuesAsIntegerFails":177,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":211,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":191,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":238,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":519,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":68,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":262,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":162,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":419,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsDoublePrimitive":132,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":194,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":523,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":494,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":332,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":219,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":587,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":273,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":555,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":343,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives":195,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":425,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":293,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":434,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsInt":109,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":279,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":416,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":436,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization":297,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":235,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization":548,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsShortWrapper":96,"com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral":163,"com.google.gson.functional.PrimitiveTest.testNumberSerialization":134,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":180,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":53,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":325,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":431,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":63,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":535,"com.google.gson.functional.MapTest.testGeneralMapField":470,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":492,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":383,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsShortPrimitive":182,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":85,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":344,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":398,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":303,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":468,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":100,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":263,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":408,"com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization":158,"com.google.gson.MixedStreamTest.testReadMixedStreamed":27,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":121,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlDeserialization":274,"com.google.gson.functional.MapTest.testBooleanKeyDeserialization":456,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":17,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":415,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":562,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":422,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBooleanPrimitive":139,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":583,"com.google.gson.JavaSerializationTest.testNumberIsSerializable":10,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":33,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":291,"com.google.gson.functional.MapTest.testDeerializeMapOfMaps":457,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":206,"com.google.gson.functional.MapTest.testMapDeserializationWithNullKey":445,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":181,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":198,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":412,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":72,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsFloatPrimitive":122,"com.google.gson.internal.LinkedHashTreeMapTest.testEqualsAndHashCode":4,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":289,"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":378,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":38,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserialization":261,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionDeserilaization":556,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization":438,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":204,"com.google.gson.functional.ObjectTest.testNestedDeserialization":524,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":243,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":510,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":60,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":229,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":581,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsNumber":179,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":49,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":208,"com.google.gson.functional.StringTest.testSingleQuoteInStringDeserialization":362,"com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys":458,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":247,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":166,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":218,"com.google.gson.JavaSerializationTest.testListIsSerializable":12,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":82,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":376,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":565,"com.google.gson.functional.ObjectTest.testNullSerialization":609,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":221,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization":205,"com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey":449,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":94,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":469,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization":395,"com.google.gson.functional.MapTest.testInterfaceTypeMap":467,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":346,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":234,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsDoubleWrapper":97,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":330,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":601,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":225,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails":349,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":264,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":579,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsInteger":113,"com.google.gson.MixedStreamTest.testWriteClosed":26,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":62,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":553,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":237,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateDeserialization":315,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":493,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":253,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":233,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":52,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":48,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":521,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":310,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":240,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":496,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":552,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":73,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBooleanWrapper":142,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":75,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":223,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":558,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":298,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":39,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":42,"com.google.gson.functional.PrimitiveTest.testDoubleAsStringRepresentationDeserialization":184,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":118,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":351,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderDeserialization":269,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":380,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":531,"com.google.gson.internal.LinkedHashTreeMapTest.testPutOverrides":1,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":51,"com.google.gson.functional.CollectionTest.testQueueDeserialization":568,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":124,"com.google.gson.functional.PrimitiveTest.testByteDeserialization":140,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringDeserialization":367,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization":56,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":74,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":308,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":454,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":514,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":281,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":410,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":522,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":545,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":20,"com.google.gson.functional.MapTest.testRawMapSerialization":472,"com.google.gson.functional.CollectionTest.testNullsInListDeserialization":563,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetDeserialization":296,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":216,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":508,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":538,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":437,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":591,"com.google.gson.functional.PrimitiveTest.testByteSerialization":165,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":317,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":385,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapNoTypeSerialization":593,"com.google.gson.ObjectTypeAdapterTest.testSerialize":596,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":406,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsFloatWrapper":108,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":79,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":396,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":540,"com.google.gson.GsonTypeAdapterTest.testDefaultTypeAdapterThrowsParseException":13,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":254,"com.google.gson.functional.StringTest.testAssignmentCharDeserialization":364,"com.google.gson.functional.MapTest.testMapWithQuotes":459,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatDeserialization":116,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":604,"com.google.gson.functional.StringTest.testEscapingQuotesInStringDeserialization":366,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":186,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":414,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":203,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":350,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsNumber":173,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":603,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":340,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":429,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":244,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":520,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":576,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":149,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":278,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":402,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":497,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":305,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":270,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":71,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":81,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":280,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigInteger":161,"com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed":559,"com.google.gson.functional.ArrayTest.testSingleStringArrayDeserialization":388,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":246,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":306,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":381,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":220,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":40,"com.google.gson.internal.LinkedHashTreeMapTest.testContainsNonComparableKeyReturnsFalse":2,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization":76,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":337,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReader":321,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsFloat":98,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":258,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":200,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":507,"com.google.gson.functional.ObjectTest.testNestedSerialization":509,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":54,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":112,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringDeserialization":370,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":407,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":411,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":471,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":536,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":418,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":18,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":25,"com.google.gson.functional.UncategorizedTest.testTrailingWhitespace":36,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":501,"com.google.gson.functional.PrimitiveTest.testBooleanDeserialization":175,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":236,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":421,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":283,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":30,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsInteger":114,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":265,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":511,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":70,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":369,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":391,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":86,"com.google.gson.functional.CollectionTest.testSetSerialization":564,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":196,"com.google.gson.functional.StringTest.testStringValueSerialization":372,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":573,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":77,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":43,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":210,"com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization":549,"com.google.gson.MixedStreamTest.testWriteInvalidState":23,"com.google.gson.functional.ArrayTest.testInvalidArrayDeserialization":382,"com.google.gson.functional.PrimitiveTest.testBadValueForBigIntegerDeserialization":117,"com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero":123,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":400,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":64,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":605,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":541,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":526,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":41,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":578,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":255,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullSerialization":606,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":602,"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":451,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType":31,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":387},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonElement:136","type":"CtInvocationImpl","sourcecode":"isJsonNull()"},"failures":[],"tindex":"f080e78a-3e89-11e6-af58-e1cd8f113da4","method":{"position":"com.google.gson.internal.bind.MapTypeAdapterFactory:245","type":"CtMethodImpl","sourcecode":"private java.lang.String keyToString(com.google.gson.JsonElement keyElement) {\n    if (keyElement.isJsonPrimitive()) {\n        com.google.gson.JsonPrimitive com.google.gson.JsonPrimitive = keyElement.getAsJsonPrimitive();\n        if (primitive.isNumber()) {\n            return java.lang.String.valueOf(primitive.getAsNumber());\n        } else if (primitive.isBoolean()) {\n            return java.lang.Boolean.toString(primitive.getAsBoolean());\n        } else if (primitive.isString()) {\n            return primitive.getAsString();\n        } else {\n            throw new java.lang.AssertionError();\n        }\n    } else if (keyElement.isJsonNull()) {\n        return \"null\";\n    } else {\n        throw new java.lang.AssertionError();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"keyElement"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:208","type":"CtBinaryOperatorImpl","sourcecode":"(peek()) == (com.google.gson.stream.JsonToken.NAME)"},"failures":[],"tindex":"f0815cbb-3e89-11e6-af58-3d4a5c89f139","method":{"position":"com.google.gson.JsonObject:186","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object o) {\n    return (o == (com.google.gson.JsonObject.this)) || ((o instanceof com.google.gson.JsonObject) && (((com.google.gson.JsonObject)(o)).com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.equals(com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>)));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"o","com.google.gson.stream.JsonToken.NAME":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:378","type":"CtVariableReadImpl","sourcecode":"insert"},"failures":[0,1,2,3,4],"tindex":"f0815cbc-3e89-11e6-af58-eb6a89754138","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:131","type":"CtMethodImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V> find(K key, boolean create) {\n    if (create) {\n        {\n            java.util.Comparator<? super K> java.util.Comparator<? super K> = com.google.gson.internal.LinkedHashTreeMap.this.java.util.Comparator<? super K>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V>[] com.google.gson.internal.LinkedHashTreeMap.Node<K, V>[] = com.google.gson.internal.LinkedHashTreeMap.this.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>[];\n            int int = com.google.gson.internal.LinkedHashTreeMap.secondaryHash(key.hashCode());\n            int int = hash & ((table.int) - 1);\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = table[index];\n            int int = 0;\n            if (nearest != null) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                java.lang.Comparable<java.lang.Object> java.lang.Comparable<java.lang.Object> = comparator == (com.google.gson.internal.LinkedHashTreeMap.com.google.gson.internal.LinkedHashTreeMap.java.util.Comparator<java.lang.Comparable>) ? ((java.lang.Comparable<java.lang.Object>)(key)) : null;\n                while (true) {\n                    comparison = comparableKey != null ? comparableKey.compareTo(nearest.K) : comparator.compare(key, nearest.K);\n                    if (comparison == 0) {\n                        return nearest;\n                    } \n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = comparison < 0 ? nearest.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> : nearest.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    if (child == null) {\n                        break;\n                    } \n                    nearest = child;\n                }\n            } \n            if (!create) {\n                return null;\n            } \n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.this.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            if (nearest == null) {\n                if ((comparator == (com.google.gson.internal.LinkedHashTreeMap.com.google.gson.internal.LinkedHashTreeMap.java.util.Comparator<java.lang.Comparable>)) && (!(key instanceof java.lang.Comparable))) {\n                    throw new java.lang.ClassCastException(((key.getClass().getName()) + \" is not Comparable\"));\n                } \n                created = new com.google.gson.internal.LinkedHashTreeMap.Node<K, V>(nearest , key , hash , header , header.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>);\n                table[index] = created;\n            } else {\n                created = new com.google.gson.internal.LinkedHashTreeMap.Node<K, V>(nearest , key , hash , header , header.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>);\n                if (comparison < 0) {\n                    nearest.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = created;\n                } else {\n                    nearest.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = created;\n                }\n                rebalance(nearest, true);\n            }\n            if (((int)++) > (int)) {\n                doubleCapacity();\n            } \n            (int)++;\n            return created;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467266870511/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"insert":"create"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:309","type":"CtBinaryOperatorImpl","sourcecode":"context == (java.util.Properties.class)"},"failures":[],"tindex":"f08183cd-3e89-11e6-af58-a7d410f2e8aa","method":{"position":"com.google.gson.internal.$Gson$Types:411","type":"CtMethodImpl","sourcecode":"private static int indexOf(java.lang.Object[] array, java.lang.Object toFind) {\n    for (int int = 0 ; i < (array.int) ; i++) {\n        if (toFind.equals(array[i])) {\n            return i;\n        } \n    }\n    throw new java.util.NoSuchElementException();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.util.Properties.class":"toFind","context":"toFind"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:386","type":"CtBinaryOperatorImpl","sourcecode":"name == null"},"failures":[],"tindex":"f081aade-3e89-11e6-af58-6fae7915e2e8","method":{"position":"com.google.gson.JsonObject:181","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonObject getAsJsonObject(java.lang.String memberName) {\n    if (memberName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467266870511/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((com.google.gson.JsonObject)(com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.get(memberName)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"memberName"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"f081aadf-3e89-11e6-af58-89e68bf71246","method":{"position":"com.google.gson.TreeTypeAdapter:50","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic T read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((com.google.gson.JsonDeserializer<T>) == null) {\n        return delegate().read(in);\n    } \n    com.google.gson.JsonElement com.google.gson.JsonElement = com.google.gson.internal.Streams.parse(in);\n    if (value.isJsonNull()) {\n        return null;\n    } \n    return com.google.gson.JsonDeserializer<T>.deserialize(value, com.google.gson.reflect.TypeToken<T>.getType(), com.google.gson.Gson.com.google.gson.JsonDeserializationContext);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:341","type":"CtBinaryOperatorImpl","sourcecode":"(deferredName) != null"},"failures":[5,6],"tindex":"f081aae0-3e89-11e6-af58-ddc6d1618415","method":{"position":"com.google.gson.JsonObject:67","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement remove(java.lang.String property) {\n    if (property != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467266870511/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.remove(property);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"property"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:293","type":"CtBinaryOperatorImpl","sourcecode":"collectionType instanceof java.lang.reflect.ParameterizedType"},"failures":[],"tindex":"f081d1f1-3e89-11e6-af58-51638cfa6f7f","method":{"position":"com.google.gson.reflect.TypeToken:253","type":"CtMethodImpl","sourcecode":"private static java.lang.AssertionError buildUnexpectedTypeError(java.lang.reflect.Type token, java.lang.Class<?>... expected) {\n    if (token instanceof java.lang.reflect.ParameterizedType) {\n        {\n            java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(\"Unexpected type. Expected one of: \");\n            for (java.lang.Class<?> java.lang.Class<?> : expected) {\n                exceptionMessage.append(clazz.getName()).append(\", \");\n            }\n            exceptionMessage.append(\"but got: \").append(token.getClass().getName()).append(\", for type token: \").append(token.toString()).append('.');\n            return new java.lang.AssertionError(exceptionMessage.toString());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467266870511/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collectionType":"token"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"f0824722-3e89-11e6-af58-5391f151dc29","method":{"position":"com.google.gson.internal.bind.TypeAdapters:274","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return ((float)(in.nextDouble()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:400","type":"CtBinaryOperatorImpl","sourcecode":"(deferredName) != null"},"failures":[],"tindex":"f0824723-3e89-11e6-af58-edcec6f17992","method":{"position":"com.google.gson.internal.LinkedTreeMap:41","type":"CtMethodImpl","sourcecode":"public int compare(java.lang.Comparable a, java.lang.Comparable b) {\n    if (b != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467266870511/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return a.compareTo(b);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"b"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"f0824724-3e89-11e6-af58-8f1341ffc653","method":{"position":"com.google.gson.internal.bind.DateTypeAdapter:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized void write(com.google.gson.stream.JsonWriter out, java.util.Date value) throws java.io.IOException {\n    if (value == null) {\n        out.nullValue();\n        return ;\n    } \n    java.lang.String java.lang.String = java.text.DateFormat.format(value);\n    out.value(dateFormatAsString);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:116","type":"CtBinaryOperatorImpl","sourcecode":"(!skipSerialize) && (!skipDeserialize)"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,6,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597],"tindex":"f0826e35-3e89-11e6-af58-193f0ec3cdf6","method":{"position":"com.google.gson.internal.Excluder:191","type":"CtMethodImpl","sourcecode":"public boolean excludeClass(java.lang.Class<?> clazz, boolean serialize) {\n    if ((!serialize) && (!serialize)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467266870511/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((double) != (com.google.gson.internal.Excluder.com.google.gson.internal.Excluder.double)) && (!(isValidVersion(clazz.getAnnotation(com.google.gson.annotations.Since.com.google.gson.annotations.Since.java.lang.Class), clazz.getAnnotation(com.google.gson.annotations.Until.com.google.gson.annotations.Until.java.lang.Class))))) {\n                return true;\n            } \n            if ((!(boolean)) && (isInnerClass(clazz))) {\n                return true;\n            } \n            if (isAnonymousOrLocal(clazz)) {\n                return true;\n            } \n            java.util.List<com.google.gson.ExclusionStrategy> java.util.List<com.google.gson.ExclusionStrategy> = serialize ? java.util.List<com.google.gson.ExclusionStrategy> : java.util.List<com.google.gson.ExclusionStrategy>;\n            for (com.google.gson.ExclusionStrategy com.google.gson.ExclusionStrategy : list) {\n                if (exclusionStrategy.shouldSkipClass(clazz)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"skipDeserialize":"serialize","skipSerialize":"serialize"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.JsonArray:58","type":"CtBinaryOperatorImpl","sourcecode":"element == null"},"failures":[],"tindex":"f0829546-3e89-11e6-af58-1b34a4823101","method":{"position":"com.google.gson.Gson:847","type":"CtMethodImpl","sourcecode":"public <T>T fromJson(com.google.gson.JsonElement json, java.lang.Class<T> classOfT) throws com.google.gson.JsonSyntaxException {\n    if (json == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467266870511/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    } else {\n        {\n            java.lang.Object java.lang.Object = fromJson(json, ((java.lang.reflect.Type)(classOfT)));\n            return com.google.gson.internal.Primitives.wrap(classOfT).cast(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonElement:119","type":"CtInvocationImpl","sourcecode":"isJsonPrimitive()"},"failures":[],"tindex":"f082bc57-3e89-11e6-af58-0d3a82be9e91","method":{"position":"com.google.gson.JsonArray:329","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object o) {\n    return (o == (com.google.gson.JsonArray.this)) || ((o instanceof com.google.gson.JsonArray) && (((com.google.gson.JsonArray)(o)).java.util.List<com.google.gson.JsonElement>.equals(java.util.List<com.google.gson.JsonElement>)));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"f082bc58-3e89-11e6-af58-0b9c2bcdd07a","method":{"position":"com.google.gson.internal.bind.TypeAdapters:432","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.StringBuffer value) throws java.io.IOException {\n    out.value((value == null ? null : value.toString()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:350","type":"CtVariableReadImpl","sourcecode":"insert"},"failures":[7,8,9,14,15,16,17,18,20,22,598,23,24,25,26,599,600,29,30,37,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,56,58,64,65,66,601,67,68,71,72,75,77,602,78,79,80,81,82,83,84,85,87,88,92,94,100,103,111,112,118,120,121,124,127,129,130,133,134,138,147,149,151,152,155,158,160,164,165,166,167,168,169,170,174,176,180,181,183,186,188,192,193,194,196,197,198,200,202,203,204,206,207,209,211,213,214,215,216,217,218,219,220,221,224,226,229,230,231,232,233,234,235,236,239,240,241,242,243,244,246,247,248,249,250,251,253,254,255,257,260,262,263,264,603,268,604,270,271,272,605,276,278,279,280,281,282,284,286,287,289,291,292,293,294,295,298,606,300,302,303,305,306,307,308,309,310,313,607,314,317,319,608,323,324,325,326,327,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,356,357,358,359,360,363,365,369,372,380,381,383,384,385,386,387,390,392,396,398,400,402,404,406,407,408,409,410,411,412,413,416,417,418,420,423,428,430,439,442,446,447,450,452,459,460,461,464,465,467,468,469,470,472,474,475,477,480,481,482,485,486,487,490,493,496,499,609,501,503,505,506,508,509,510,512,516,518,519,521,526,527,528,529,531,534,536,539,540,541,542,543,544,545,546,547,551,552,553,554,555,558,561,562,564,565,567,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,587,589,591,592,593,594,595,610],"tindex":"f082e369-3e89-11e6-af58-db1fcd4f5e9b","method":{"position":"com.google.gson.stream.JsonWriter:268","type":"CtMethodImpl","sourcecode":"public final void setSerializeNulls(boolean serializeNulls) {\n    if (serializeNulls) {\n        {\n            com.google.gson.stream.JsonWriter.this.boolean = serializeNulls;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467266870511/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"insert":"serializeNulls"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"f0830a7a-3e89-11e6-af58-af19dc4b4564","method":{"position":"com.google.gson.internal.bind.TypeAdapters:201","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    out.value(value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"f083318b-3e89-11e6-af58-41739172b814","method":{"position":"com.google.gson.internal.bind.TypeAdapters:442","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.net.URL read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    java.lang.String java.lang.String = in.nextString();\n    return \"null\".equals(nextString) ? null : new java.net.URL(nextString);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:583","type":"CtBinaryOperatorImpl","sourcecode":"context != (com.google.gson.stream.JsonScope.EMPTY_OBJECT)"},"failures":[],"tindex":"f083318c-3e89-11e6-af58-b9ff65833389","method":{"position":"com.google.gson.internal.Streams:111","type":"CtMethodImpl","sourcecode":"public java.lang.CharSequence subSequence(int start, int end) {\n    if (start != end) {\n        {\n            return new java.lang.String(char[] , start , (end - start));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467266870511/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"com.google.gson.stream.JsonScope.EMPTY_OBJECT":"end","context":"start"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:622","type":"CtBinaryOperatorImpl","sourcecode":"(c == 'n') || (c == 'N')"},"failures":[],"tindex":"f083318d-3e89-11e6-af58-c9d740a790d5","method":{"position":"com.google.gson.stream.JsonReader:999","type":"CtMethodImpl","sourcecode":"private java.lang.String nextQuotedValue(char quote) throws java.io.IOException {\n    if ((quote == 'n') || (c == 'N')) {\n        {\n            char[] char[] = com.google.gson.stream.JsonReader.this.char[];\n            java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            while (true) {\n                int int = int;\n                int int = int;\n                int int = p;\n                while (p < l) {\n                    int int = buffer[(p++)];\n                    if (c == quote) {\n                        int = p;\n                        builder.append(buffer, start, ((p - start) - 1));\n                        return builder.toString();\n                    } else if (c == '\\\\') {\n                        int = p;\n                        builder.append(buffer, start, ((p - start) - 1));\n                        builder.append(readEscapeCharacter());\n                        p = int;\n                        l = int;\n                        start = p;\n                    } else if (c == '\\n') {\n                        (int)++;\n                        int = p;\n                    } \n                }\n                builder.append(buffer, start, (p - start));\n                int = p;\n                if (!(fillBuffer(1))) {\n                    throw syntaxError(\"Unterminated string\");\n                } \n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467266870511/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"quote"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:720","type":"CtBinaryOperatorImpl","sourcecode":"json == null"},"failures":[],"tindex":"f083589e-3e89-11e6-af58-731e5c5d06e4","method":{"position":"com.google.gson.JsonObject:89","type":"CtMethodImpl","sourcecode":"public void addProperty(java.lang.String property, java.lang.Number value) {\n    if (property == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467266870511/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            add(property, createJsonElement(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"property"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":21,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}