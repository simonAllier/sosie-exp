{"failureDictionary":{"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":72,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":169,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":192,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":22,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":103,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":35,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":47,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":168,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":238,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":92,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":140,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":253,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":27,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":81,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":75,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":76,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":79,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":139,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":200,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":186,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":58,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":114,"com.google.gson.functional.ObjectTest.testSingletonLists":137,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":95,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":223,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":43,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":121,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":263,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":151,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":51,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":86,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":131,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":162,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":243,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":244,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":135,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":234,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":88,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":166,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":143,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":30,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":14,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":67,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":77,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":237,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":112,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":98,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":33,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":118,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":227,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":119,"com.google.gson.functional.JsonTreeTest.testToJsonTree":232,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":128,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":134,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":62,"com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization":19,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":90,"com.google.gson.JsonPrimitiveTest.testEquals":36,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":115,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":25,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":197,"com.google.gson.functional.MapTest.testGeneralMapField":101,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":141,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":174,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":105,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":212,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":148,"com.google.gson.MixedStreamTest.testReadMixedStreamed":262,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":29,"com.google.gson.JsonArrayTest.testEqualsOnEmptyArray":265,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":108,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":158,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":226,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":110,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":222,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":34,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":190,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":240,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArrayDeserialization":264,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":160,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":211,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":93,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":247,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":70,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":208,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":228,"com.google.gson.functional.ObjectTest.testNestedDeserialization":167,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":85,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":31,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":204,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":122,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":217,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":157,"com.google.gson.JsonPrimitiveTest.testEqualsAcrossTypes":37,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":41,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":144,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":252,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":48,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":54,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":4,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":224,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":66,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":125,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":56,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":84,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":96,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":68,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":100,"com.google.gson.functional.MapTest.testInterfaceTypeMap":99,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":189,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":107,"com.google.gson.JsonArrayTest.testEqualsNonEmptyArray":266,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":127,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":177,"com.google.gson.functional.CollectionTest.testSetDeserialization":78,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":187,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":45,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":147,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":71,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":57,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":152,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":6,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":26,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":191,"com.google.gson.MixedStreamTest.testWriteClosed":261,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":44,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":206,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":130,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":142,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":7,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":126,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":220,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization":24,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":164,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":216,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":21,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":63,"com.google.gson.functional.StreamingTypeAdaptersTest.testDeserialize2dArray":13,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":225,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":242,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":133,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":145,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":248,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":23,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":195,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":2,"com.google.gson.functional.MapTest.testComplexKeysSerialization":102,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":250,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":69,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":179,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":46,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":176,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":120,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":229,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":73,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":178,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":219,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":193,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":249,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":49,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":97,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":159,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":111,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":165,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":258,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":64,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":154,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":205,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysDeserialization":20,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":199,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":16,"com.google.gson.ObjectTypeAdapterTest.testSerialize":40,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":109,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":82,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":183,"com.google.gson.functional.FieldNamingTest.testIdentity":256,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":254,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":8,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":207,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":11,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":53,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":136,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":231,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":28,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":203,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":170,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":185,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":39,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":182,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":3,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":163,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":194,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":61,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":201,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":146,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":188,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":259,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":94,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":241,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":42,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":5,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":150,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":104,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":83,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":246,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":87,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":1,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":0,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":209,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":172,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":202,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":171,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":123,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize2dArray":12,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":38,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":153,"com.google.gson.functional.ObjectTest.testNestedSerialization":155,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":91,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":52,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":198,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":138,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":233,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":18,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":149,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":55,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":175,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":10,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":117,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":129,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":221,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":213,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":218,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":239,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":156,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":235,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSubTypeFirstAllowed":32,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":245,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":184,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":60,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":196,"com.google.gson.functional.CollectionTest.testSetSerialization":80,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":106,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":15,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":89,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":257,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":50,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":180,"com.google.gson.MixedStreamTest.testWriteInvalidState":260,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":215,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":181,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":214,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":251,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":255,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":173,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":113,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":132,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":116,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":210,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":74,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":230,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":236,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":9,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":161,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":65,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":124,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":17,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":59},"transformations":[{"exception":"java.io.IOException","condition":{"position":"com.google.gson.GsonBuilder:554","type":"CtBinaryOperatorImpl","sourcecode":"(datePattern != null) && (!(\"\".equals(datePattern.trim())))"},"failures":[],"tindex":"7cd9a229-3e42-11e6-ac14-813f6f8461fe","method":{"position":"com.google.gson.stream.JsonWriter:324","type":"CtMethodImpl","sourcecode":"private com.google.gson.stream.JsonWriter open(int empty, java.lang.String openBracket) throws java.io.IOException {\n    if ((openBracket != null) && (!(\"\".equals(datePattern.trim())))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653327/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            beforeValue(true);\n            push(empty);\n            java.io.Writer.write(openBracket);\n            return com.google.gson.stream.JsonWriter.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"datePattern":"openBracket"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:113","type":"CtInvocationImpl","sourcecode":"primitive.isBoolean()"},"failures":[],"tindex":"7cda175a-3e42-11e6-ac14-670b19c70b98","method":{"position":"com.google.gson.Gson:660","type":"CtMethodImpl","sourcecode":"public void toJson(com.google.gson.JsonElement jsonElement, com.google.gson.stream.JsonWriter writer) throws com.google.gson.JsonIOException {\n    if (jsonElement.isBoolean()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653327/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    } else {\n        {\n            boolean boolean = writer.isLenient();\n            writer.setLenient(true);\n            boolean boolean = writer.isHtmlSafe();\n            writer.setHtmlSafe(boolean);\n            boolean boolean = writer.getSerializeNulls();\n            writer.setSerializeNulls(boolean);\n            try {\n                com.google.gson.internal.Streams.write(jsonElement, writer);\n            } catch (java.io.IOException e) {\n                throw new com.google.gson.JsonIOException(e);\n            } finally {\n                writer.setLenient(oldLenient);\n                writer.setHtmlSafe(oldHtmlSafe);\n                writer.setSerializeNulls(oldSerializeNulls);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"primitive":"jsonElement"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.stream.JsonWriter:429","type":"CtBinaryOperatorImpl","sourcecode":"(deferredName) != null"},"failures":[],"tindex":"7cda175b-3e42-11e6-ac14-e7bfc9161496","method":{"position":"com.google.gson.JsonParser:44","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement parse(java.lang.String json) throws com.google.gson.JsonSyntaxException {\n    if (json != null) {\n        {\n            return parse(new java.io.StringReader(json));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653327/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:122","type":"CtBinaryOperatorImpl","sourcecode":"o == (com.google.gson.internal.bind.JsonTreeReader.SENTINEL_CLOSED)"},"failures":[],"tindex":"7cda175c-3e42-11e6-ac14-bfd8e247629b","method":{"position":"com.google.gson.Gson:510","type":"CtMethodImpl","sourcecode":"public java.lang.String toJson(java.lang.Object src) {\n    if (src == src) {\n        {\n            if (src == null) {\n                return toJson(com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull);\n            } \n            return toJson(src, src.getClass());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653327/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"com.google.gson.internal.bind.JsonTreeReader.SENTINEL_CLOSED":"src","o":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl","sourcecode":"field.isSynthetic()"},"failures":[0,1,2],"tindex":"7cda3e6d-3e42-11e6-ac14-23bf2f9b4196","method":{"position":"com.google.gson.FieldNamingPolicy:72","type":"CtMethodImpl","sourcecode":"public java.lang.String translateName(java.lang.reflect.Field f) {\n    if (f.isSynthetic()) {\n        {\n            return com.google.gson.FieldNamingPolicy.upperCaseFirstLetter(com.google.gson.FieldNamingPolicy.separateCamelCase(f.getName(), \" \"));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653327/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"f"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"7cda3e6e-3e42-11e6-ac14-c1c60f4c10c9","method":{"position":"com.google.gson.Gson:254","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Double read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return in.nextDouble();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:361","type":"CtBinaryOperatorImpl","sourcecode":"p == (com.google.gson.stream.JsonReader.PEEKED_NONE)"},"failures":[],"tindex":"7cda3e6f-3e42-11e6-ac14-4ff0dcd2eb02","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:677","type":"CtMethodImpl","sourcecode":"void reset(int targetSize) {\n    if (targetSize == targetSize) {\n        {\n            int int = ((java.lang.Integer.highestOneBit(targetSize)) * 2) - 1;\n            int = treeCapacity - targetSize;\n            int = 0;\n            int = 0;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653327/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"targetSize","com.google.gson.stream.JsonReader.PEEKED_NONE":"targetSize"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:76","type":"CtBinaryOperatorImpl","sourcecode":"(pendingName) != null"},"failures":[],"tindex":"7cda6580-3e42-11e6-ac14-c1e57dfd582b","method":{"position":"com.google.gson.JsonObject:67","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement remove(java.lang.String property) {\n    if (property != null) {\n        {\n            return com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.remove(property);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653327/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pendingName":"property"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.JsonPrimitive:132","type":"CtInvocationImpl","sourcecode":"isBoolean()"},"failures":[],"tindex":"7cda6581-3e42-11e6-ac14-ed6886716e5e","method":{"position":"com.google.gson.Gson:871","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic <T>T fromJson(com.google.gson.JsonElement json, java.lang.reflect.Type typeOfT) throws com.google.gson.JsonSyntaxException {\n    if (json == null) {\n        return null;\n    } \n    return ((T)(fromJson(new com.google.gson.internal.bind.JsonTreeReader(json), typeOfT)));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:861","type":"CtBinaryOperatorImpl","sourcecode":"p == (com.google.gson.stream.JsonReader.PEEKED_FALSE)"},"failures":[],"tindex":"7cda6582-3e42-11e6-ac14-3fe0111d7d43","method":{"position":"com.google.gson.internal.Streams:93","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(int i) throws java.io.IOException {\n    if (i == i) {\n        {\n            java.lang.Appendable.append(((char)(i)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653327/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"i","com.google.gson.stream.JsonReader.PEEKED_FALSE":"i"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:782","type":"CtBinaryOperatorImpl","sourcecode":"(obj != null) && ((reader.peek()) != (com.google.gson.stream.JsonToken.END_DOCUMENT))"},"failures":[],"tindex":"7cda6583-3e42-11e6-ac14-eff52f1b0907","method":{"position":"com.google.gson.Gson:468","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement toJsonTree(java.lang.Object src) {\n    if ((src != null) && (((src == src) || (type instanceof java.lang.reflect.TypeVariable<?>)) || (type instanceof java.lang.Class<?>))) {\n        {\n            if ((src != null) && ((src.peek()) != src)) {\n                {\n                    if (src == null) {\n                        return com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull;\n                    } \n                    return toJsonTree(src, src.getClass());\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653327/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653327/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"com.google.gson.stream.JsonToken.END_DOCUMENT":"src","obj":"src","reader":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl","sourcecode":"field.isSynthetic()"},"failures":[],"tindex":"7cda8c94-3e42-11e6-ac14-f9d826e4f0b5","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:70","type":"CtMethodImpl","sourcecode":"static java.lang.String getFieldName(com.google.gson.FieldNamingStrategy fieldNamingPolicy, java.lang.reflect.Field f) {\n    if (f.isSynthetic()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653327/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.annotations.SerializedName com.google.gson.annotations.SerializedName = f.getAnnotation(com.google.gson.annotations.SerializedName.com.google.gson.annotations.SerializedName.java.lang.Class);\n            return serializedName == null ? fieldNamingPolicy.translateName(f) : serializedName.value();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"f"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:189","type":"CtUnaryOperatorImpl","sourcecode":"!(b instanceof java.lang.reflect.WildcardType)"},"failures":[],"tindex":"7cda8c95-3e42-11e6-ac14-5d25ab571cfc","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:223","type":"CtMethodImpl","sourcecode":"private boolean equal(java.lang.Object a, java.lang.Object b) {\n    if (!(b instanceof java.lang.reflect.WildcardType)) {\n        {\n            return (a == b) || ((a != null) && (a.equals(b)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653327/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"b"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.stream.JsonWriter:565","type":"CtBinaryOperatorImpl","sourcecode":"(indent) == null"},"failures":[],"tindex":"7cda8c96-3e42-11e6-ac14-3d67933771b3","method":{"position":"com.google.gson.Gson:695","type":"CtMethodImpl","sourcecode":"public <T>T fromJson(java.lang.String json, java.lang.Class<T> classOfT) throws com.google.gson.JsonSyntaxException {\n    if (json == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653327/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    } else {\n        {\n            java.lang.Object java.lang.Object = fromJson(json, ((java.lang.reflect.Type)(classOfT)));\n            return com.google.gson.internal.Primitives.wrap(classOfT).cast(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"indent":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:340","type":"CtBinaryOperatorImpl","sourcecode":"toResolve instanceof java.lang.reflect.GenericArrayType"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"tindex":"7cdab3a7-3e42-11e6-ac14-3346b1c5ba05","method":{"position":"com.google.gson.reflect.TypeToken:295","type":"CtMethodImpl","sourcecode":"public static com.google.gson.reflect.TypeToken<?> get(java.lang.reflect.Type type) {\n    if (type == type) {\n        {\n            if (type instanceof java.lang.reflect.GenericArrayType) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653327/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return new com.google.gson.reflect.TypeToken<java.lang.Object>(type);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653327/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"type"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.DefaultDateTypeAdapter:85","type":"CtBinaryOperatorImpl","sourcecode":"typeOfT == (java.sql.Timestamp.class)"},"failures":[],"tindex":"7cdab3a8-3e42-11e6-ac14-734e736092b5","method":{"position":"com.google.gson.reflect.TypeToken:295","type":"CtMethodImpl","sourcecode":"public static com.google.gson.reflect.TypeToken<?> get(java.lang.reflect.Type type) {\n    if (type == type) {\n        {\n            if (type instanceof java.lang.reflect.GenericArrayType) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653327/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return new com.google.gson.reflect.TypeToken<java.lang.Object>(type);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653327/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeOfT":"type","java.sql.Timestamp.class":"type"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"7cdab3a9-3e42-11e6-ac14-89d6cac48afa","method":{"position":"com.google.gson.internal.bind.TypeAdapters:525","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.sql.Timestamp read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    java.util.Date java.util.Date = dateTypeAdapter.read(in);\n    return date != null ? new java.sql.Timestamp(date.getTime()) : null;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"7cdadaba-3e42-11e6-ac14-bd7ad42c7620","method":{"position":"com.google.gson.Gson:254","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Double read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return in.nextDouble();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:350","type":"CtVariableReadImpl","sourcecode":"insert"},"failures":[21,22,23,24,25],"tindex":"7cdadabb-3e42-11e6-ac14-d563695e6054","method":{"position":"com.google.gson.internal.Excluder:96","type":"CtMethodImpl","sourcecode":"public com.google.gson.internal.Excluder withExclusionStrategy(com.google.gson.ExclusionStrategy exclusionStrategy, boolean serialization, boolean deserialization) {\n    if (deserialization) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653327/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.Excluder com.google.gson.internal.Excluder = clone();\n            if (serialization) {\n                result.java.util.List<com.google.gson.ExclusionStrategy> = new java.util.ArrayList<com.google.gson.ExclusionStrategy>(java.util.List<com.google.gson.ExclusionStrategy>);\n                result.java.util.List<com.google.gson.ExclusionStrategy>.add(exclusionStrategy);\n            } \n            if (deserialization) {\n                result.java.util.List<com.google.gson.ExclusionStrategy> = new java.util.ArrayList<com.google.gson.ExclusionStrategy>(java.util.List<com.google.gson.ExclusionStrategy>);\n                result.java.util.List<com.google.gson.ExclusionStrategy>.add(exclusionStrategy);\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"insert":"deserialization"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonElement:119","type":"CtInvocationImpl","sourcecode":"isJsonPrimitive()"},"failures":[],"tindex":"7cdadabc-3e42-11e6-ac14-9990b0b8e734","method":{"position":"com.google.gson.DefaultDateTypeAdapter:94","type":"CtMethodImpl","sourcecode":"private java.util.Date deserializeToDate(com.google.gson.JsonElement json) {\n    synchronized(java.text.DateFormat) {\n        try {\n            return java.text.DateFormat.parse(json.getAsString());\n        } catch (java.text.ParseException ignored) {\n        }\n        try {\n            return java.text.DateFormat.parse(json.getAsString());\n        } catch (java.text.ParseException ignored) {\n        }\n        try {\n            return java.text.DateFormat.parse(json.getAsString());\n        } catch (java.text.ParseException e) {\n            throw new com.google.gson.JsonSyntaxException(json.getAsString() , e);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:280","type":"CtInvocationImpl","sourcecode":"standardPrimitive.isAssignableFrom(classOfPrimitive)"},"failures":[26,27,28,29,30,31,32,33,34,35],"tindex":"7cdadabd-3e42-11e6-ac14-6d6bb92b05ad","method":{"position":"com.google.gson.TreeTypeAdapter:103","type":"CtMethodImpl","sourcecode":"public static com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class<?> hierarchyType, java.lang.Object typeAdapter) {\n    if (hierarchyType.isAssignableFrom(hierarchyType)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653327/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new com.google.gson.TreeTypeAdapter.SingleTypeFactory(typeAdapter , null , false , hierarchyType);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"standardPrimitive":"hierarchyType","classOfPrimitive":"hierarchyType"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:290","type":"CtBinaryOperatorImpl","sourcecode":"collectionType instanceof java.lang.reflect.WildcardType"},"failures":[],"tindex":"7cdb01ce-3e42-11e6-ac14-8921fb391f3b","method":{"position":"com.google.gson.internal.$Gson$Types:277","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type array) {\n    return array instanceof java.lang.reflect.GenericArrayType ? ((java.lang.reflect.GenericArrayType)(array)).getGenericComponentType() : ((java.lang.Class<?>)(array)).getComponentType();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collectionType":"array"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.ObjectTypeAdapter:95","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[36,37],"tindex":"7cdb01cf-3e42-11e6-ac14-0fbf9ac0ad44","method":{"position":"com.google.gson.JsonPrimitive:305","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object obj) {\n    if ((obj != obj) && (token != obj)) {\n        {\n            if (obj == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653327/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((com.google.gson.JsonPrimitive.this) == obj) {\n                        return true;\n                    } \n                    if ((obj == null) || ((getClass()) != (obj.getClass()))) {\n                        return false;\n                    } \n                    com.google.gson.JsonPrimitive com.google.gson.JsonPrimitive = ((com.google.gson.JsonPrimitive)(obj));\n                    if ((java.lang.Object) == null) {\n                        return (other.java.lang.Object) == null;\n                    } \n                    if ((com.google.gson.JsonPrimitive.isIntegral(com.google.gson.JsonPrimitive.this)) && (com.google.gson.JsonPrimitive.isIntegral(other))) {\n                        return (getAsNumber().longValue()) == (other.getAsNumber().longValue());\n                    } \n                    if (((java.lang.Object) instanceof java.lang.Number) && ((other.java.lang.Object) instanceof java.lang.Number)) {\n                        double double = getAsNumber().doubleValue();\n                        double double = other.getAsNumber().doubleValue();\n                        return (a == b) || ((java.lang.Double.isNaN(a)) && (java.lang.Double.isNaN(b)));\n                    } \n                    return java.lang.Object.equals(other.java.lang.Object);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653327/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:315","type":"CtBinaryOperatorImpl","sourcecode":"mapType instanceof java.lang.reflect.ParameterizedType"},"failures":[],"tindex":"7cdb01d0-3e42-11e6-ac14-2d6008034b9e","method":{"position":"com.google.gson.internal.LinkedTreeMap:605","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(java.lang.Object o) {\n    if (o instanceof java.lang.reflect.ParameterizedType) {\n        {\n            return containsKey(o);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653327/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mapType":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:105","type":"CtBinaryOperatorImpl","sourcecode":"o instanceof com.google.gson.JsonObject"},"failures":[],"tindex":"7cdb01d1-3e42-11e6-ac14-edc59d81fac5","method":{"position":"com.google.gson.internal.LinkedTreeMap:81","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(java.lang.Object key) {\n    if (key instanceof com.google.gson.JsonObject) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653327/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = findByObject(key);\n            return node != null ? node.V : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:204","type":"CtBinaryOperatorImpl","sourcecode":"ptype != null"},"failures":[],"tindex":"7cdb28e2-3e42-11e6-ac14-dd2e89d30fcf","method":{"position":"com.google.gson.internal.$Gson$Types:277","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type array) {\n    return array instanceof java.lang.reflect.GenericArrayType ? ((java.lang.reflect.GenericArrayType)(array)).getGenericComponentType() : ((java.lang.Class<?>)(array)).getComponentType();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ptype":"array"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"7cdb28e3-3e42-11e6-ac14-ed9729dfe71e","method":{"position":"com.google.gson.internal.bind.MapTypeAdapterFactory:160","type":"CtMethodImpl","sourcecode":"public java.util.Map<K, V> read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    com.google.gson.stream.JsonToken com.google.gson.stream.JsonToken = in.peek();\n    if (peek == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    java.util.Map<K, V> java.util.Map<K, V> = com.google.gson.internal.ObjectConstructor<? extends java.util.Map<K, V>>.construct();\n    if (peek == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.beginArray();\n        while (in.hasNext()) {\n            in.beginArray();\n            K K = com.google.gson.TypeAdapter<K>.read(in);\n            V V = com.google.gson.TypeAdapter<V>.read(in);\n            V V = map.put(key, value);\n            if (replaced != null) {\n                throw new com.google.gson.JsonSyntaxException((\"duplicate key: \" + key));\n            } \n            in.endArray();\n        }\n        in.endArray();\n    } else {\n        in.beginObject();\n        while (in.hasNext()) {\n            com.google.gson.internal.JsonReaderInternalAccess.com.google.gson.internal.JsonReaderInternalAccess.com.google.gson.internal.JsonReaderInternalAccess.promoteNameToValue(in);\n            K K = com.google.gson.TypeAdapter<K>.read(in);\n            V V = com.google.gson.TypeAdapter<V>.read(in);\n            V V = map.put(key, value);\n            if (replaced != null) {\n                throw new com.google.gson.JsonSyntaxException((\"duplicate key: \" + key));\n            } \n        }\n        in.endObject();\n    }\n    return map;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonElement:119","type":"CtInvocationImpl","sourcecode":"isJsonPrimitive()"},"failures":[],"tindex":"7cdb28e4-3e42-11e6-ac14-dd7dfd8651fc","method":{"position":"com.google.gson.JsonObject:186","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object o) {\n    return (o == (com.google.gson.JsonObject.this)) || ((o instanceof com.google.gson.JsonObject) && (((com.google.gson.JsonObject)(o)).com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.equals(com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>)));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl","sourcecode":"field.isSynthetic()"},"failures":[],"tindex":"7cdb28e5-3e42-11e6-ac14-4f5b5903e50f","method":{"position":"com.google.gson.FieldNamingPolicy:37","type":"CtMethodImpl","sourcecode":"public java.lang.String translateName(java.lang.reflect.Field f) {\n    if (f.isSynthetic()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653327/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return f.getName();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"f"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"com.google.gson.JsonParseException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"7cdb4ff6-3e42-11e6-ac14-cf1053093f3d","method":{"position":"com.google.gson.internal.Streams:39","type":"CtMethodImpl","sourcecode":"public static com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader reader) throws com.google.gson.JsonParseException {\n    boolean boolean = true;\n    try {\n        reader.peek();\n        isEmpty = false;\n        return com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<com.google.gson.JsonElement>.read(reader);\n    } catch (java.io.EOFException e) {\n        if (isEmpty) {\n            return com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull;\n        } \n        throw new com.google.gson.JsonSyntaxException(e);\n    } catch (com.google.gson.stream.MalformedJsonException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    } catch (java.io.IOException e) {\n        throw new com.google.gson.JsonIOException(e);\n    } catch (java.lang.NumberFormatException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"reader"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:316","type":"CtBinaryOperatorImpl","sourcecode":"(com.google.gson.JsonPrimitive.isIntegral(com.google.gson.JsonPrimitive.this)) && (com.google.gson.JsonPrimitive.isIntegral(other))"},"failures":[],"tindex":"7cdb4ff7-3e42-11e6-ac14-2dfef9aec69c","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:75","type":"CtMethodImpl","sourcecode":"private void put(com.google.gson.JsonElement value) {\n    if ((java.lang.String) != null) {\n        if ((!(value.isJsonNull())) || (getSerializeNulls())) {\n            com.google.gson.JsonObject com.google.gson.JsonObject = ((com.google.gson.JsonObject)(peek()));\n            object.add(java.lang.String, value);\n        } \n        java.lang.String = null;\n    } else if (java.util.List<com.google.gson.JsonElement>.isEmpty()) {\n        com.google.gson.JsonElement = value;\n    } else {\n        com.google.gson.JsonElement com.google.gson.JsonElement = peek();\n        if (element instanceof com.google.gson.JsonArray) {\n            ((com.google.gson.JsonArray)(element)).add(value);\n        } else {\n            throw new java.lang.IllegalStateException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"other":"value","this":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"7cdb4ff8-3e42-11e6-ac14-1b324f02ecf0","method":{"position":"com.google.gson.internal.bind.TypeAdapters:385","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.math.BigInteger read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        return new java.math.BigInteger(in.nextString());\n    } catch (java.lang.NumberFormatException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"7cdb4ff9-3e42-11e6-ac14-776a73e0d34a","method":{"position":"com.google.gson.Gson:310","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return in.nextLong();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.ConstructorConstructor:181","type":"CtBinaryOperatorImpl","sourcecode":"(type instanceof java.lang.reflect.ParameterizedType) && (!(java.lang.String.class.isAssignableFrom(com.google.gson.reflect.TypeToken.get(((java.lang.reflect.ParameterizedType)(type)).getActualTypeArguments()[0]).getRawType())))"},"failures":[],"tindex":"7cdb770a-3e42-11e6-ac14-05a8777fa259","method":{"position":"com.google.gson.internal.bind.MapTypeAdapterFactory:139","type":"CtMethodImpl","sourcecode":"private com.google.gson.TypeAdapter<?> getKeyAdapter(com.google.gson.Gson context, java.lang.reflect.Type keyType) {\n    if ((keyType instanceof java.lang.reflect.ParameterizedType) && (!(keyType.isAssignableFrom(com.google.gson.reflect.TypeToken.get(((java.lang.reflect.ParameterizedType)(type)).getActualTypeArguments()[0]).getRawType())))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653327/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (keyType == (boolean.boolean.java.lang.Class)) || (keyType == (java.lang.Boolean.java.lang.Boolean.java.lang.Class)) ? com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<java.lang.Boolean> : context.getAdapter(com.google.gson.reflect.TypeToken.get(keyType));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.lang.String.class":"keyType","type":"keyType"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:136","type":"CtBinaryOperatorImpl","sourcecode":"(type) instanceof java.lang.reflect.GenericArrayType"},"failures":[],"tindex":"7cdb770b-3e42-11e6-ac14-374477fe08ab","method":{"position":"com.google.gson.internal.$Gson$Types:394","type":"CtMethodImpl","sourcecode":"static java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type context, java.lang.Class<?> contextRawType, java.lang.reflect.TypeVariable<?> unknown) {\n    java.lang.Class<?> java.lang.Class<?> = com.google.gson.internal.$Gson$Types.declaringClassOf(unknown);\n    if (declaredByRaw == null) {\n        return unknown;\n    } \n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.getGenericSupertype(context, contextRawType, declaredByRaw);\n    if (declaredBy instanceof java.lang.reflect.ParameterizedType) {\n        int int = com.google.gson.internal.$Gson$Types.indexOf(declaredByRaw.getTypeParameters(), unknown);\n        return ((java.lang.reflect.ParameterizedType)(declaredBy)).getActualTypeArguments()[index];\n    } \n    return unknown;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"context"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"7cdb770c-3e42-11e6-ac14-afa9b66353ff","method":{"position":"com.google.gson.internal.bind.TypeAdapters:63","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Class value) throws java.io.IOException {\n    if (value == null) {\n        out.nullValue();\n    } else {\n        throw new java.lang.UnsupportedOperationException(((\"Attempted to serialize java.lang.Class: \" + (value.getName())) + \". Forgot to register a type adapter?\"));\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:96","type":"CtVariableReadImpl","sourcecode":"isObject"},"failures":[26,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,3,55,4,5,6,56,57,58,7,8,9,59,60,61,62,63,64,65,66,67,0,68,1,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,10,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,11,161,162,163,164,165,166,167,168,169,170,171,172,30,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,21,22,23,204,205,206,25,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,2,256,257,258,259,260,261,262,263],"tindex":"7cdb770d-3e42-11e6-ac14-b9f6ba99ce8a","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:62","type":"CtMethodImpl","sourcecode":"static boolean excludeField(java.lang.reflect.Field f, boolean serialize, com.google.gson.internal.Excluder excluder) {\n    if (serialize) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653327/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (!(excluder.excludeClass(f.getType(), serialize))) && (!(excluder.excludeField(f, serialize)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isObject":"serialize"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:180","type":"CtUnaryOperatorImpl","sourcecode":"!(b instanceof java.lang.reflect.GenericArrayType)"},"failures":[264,265,266],"tindex":"7cdb9e1e-3e42-11e6-ac14-2fb86492669a","method":{"position":"com.google.gson.JsonArray:329","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object o) {\n    if (!(o instanceof java.lang.reflect.GenericArrayType)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653327/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (o == (com.google.gson.JsonArray.this)) || ((o instanceof com.google.gson.JsonArray) && (((com.google.gson.JsonArray)(o)).java.util.List<com.google.gson.JsonElement>.equals(java.util.List<com.google.gson.JsonElement>)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"7cdb9e1f-3e42-11e6-ac14-eb424e3124ea","method":{"position":"com.google.gson.internal.bind.TypeAdapters:530","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.sql.Timestamp value) throws java.io.IOException {\n    dateTypeAdapter.write(out, value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:75","type":"CtBinaryOperatorImpl","sourcecode":"(value != null) && (((type == (java.lang.Object.class)) || (type instanceof java.lang.reflect.TypeVariable<?>)) || (type instanceof java.lang.Class<?>))"},"failures":[],"tindex":"7cdb9e20-3e42-11e6-ac14-9f604a4c4c1b","method":{"position":"com.google.gson.Gson:468","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement toJsonTree(java.lang.Object src) {\n    if ((src != null) && (((src == src) || (type instanceof java.lang.reflect.TypeVariable<?>)) || (type instanceof java.lang.Class<?>))) {\n        {\n            if ((src != null) && ((src.peek()) != src)) {\n                {\n                    if (src == null) {\n                        return com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull;\n                    } \n                    return toJsonTree(src, src.getClass());\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653327/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653327/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"src","value":"src","java.lang.Object.class":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:332","type":"CtVariableReadImpl","sourcecode":"insert"},"failures":[26,38,39,40,41,42,43,44,45,46,47,49,50,52,53,54,3,55,4,5,6,56,57,58,7,8,9,59,60,61,62,63,64,65,66,67,0,68,1,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,10,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,11,161,162,163,164,165,166,167,168,169,170,171,172,30,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,21,22,23,204,205,206,25,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,2,256,257,258,259,260,261,262,263],"tindex":"7cdbc531-3e42-11e6-ac14-295e0ae418b1","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:86","type":"CtMethodImpl","sourcecode":"private com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField createBoundField(final com.google.gson.Gson context, final java.lang.reflect.Field field, final java.lang.String name, final com.google.gson.reflect.TypeToken<?> fieldType, boolean serialize, boolean deserialize) {\n    if (serialize) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653327/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = com.google.gson.internal.Primitives.isPrimitive(fieldType.getRawType());\n            return new com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField(name, serialize, deserialize) {\n                final com.google.gson.TypeAdapter<?> typeAdapter = getFieldAdapter(context, field, fieldType);\n\n                @java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\n                @java.lang.Override\n                void write(com.google.gson.stream.JsonWriter writer, java.lang.Object value) throws java.io.IOException, java.lang.IllegalAccessException {\n                    java.lang.Object java.lang.Object = field.get(value);\n                    com.google.gson.TypeAdapter com.google.gson.TypeAdapter = new com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper(context , this.com.google.gson.TypeAdapter<?> , fieldType.getType());\n                    t.write(writer, fieldValue);\n                }\n\n                @java.lang.Override\n                void read(com.google.gson.stream.JsonReader reader, java.lang.Object value) throws java.io.IOException, java.lang.IllegalAccessException {\n                    java.lang.Object java.lang.Object = com.google.gson.TypeAdapter<?>.read(reader);\n                    if ((fieldValue != null) || (!isPrimitive)) {\n                        field.set(value, fieldValue);\n                    } \n                }\n\n                public boolean writeField(java.lang.Object value) throws java.io.IOException, java.lang.IllegalAccessException {\n                    if (!(boolean))\n                        return false;\n                    \n                    java.lang.Object java.lang.Object = field.get(value);\n                    return fieldValue != value;\n                }\n            };\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"insert":"serialize"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"7cdbec42-3e42-11e6-ac14-57072f0c0819","method":{"position":"com.google.gson.internal.bind.TypeAdapters:643","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic com.google.gson.JsonElement read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    switch (in.peek()) {\n        case STRING :\n            return new com.google.gson.JsonPrimitive(in.nextString());\n        case NUMBER :\n            java.lang.String java.lang.String = in.nextString();\n            return new com.google.gson.JsonPrimitive(new com.google.gson.internal.LazilyParsedNumber(number));\n        case BOOLEAN :\n            return new com.google.gson.JsonPrimitive(in.nextBoolean());\n        case NULL :\n            in.nextNull();\n            return com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull;\n        case BEGIN_ARRAY :\n            com.google.gson.JsonArray com.google.gson.JsonArray = new com.google.gson.JsonArray();\n            in.beginArray();\n            while (in.hasNext()) {\n                array.add(read(in));\n            }\n            in.endArray();\n            return array;\n        case BEGIN_OBJECT :\n            com.google.gson.JsonObject com.google.gson.JsonObject = new com.google.gson.JsonObject();\n            in.beginObject();\n            while (in.hasNext()) {\n                object.add(in.nextName(), read(in));\n            }\n            in.endObject();\n            return object;\n        case END_DOCUMENT :\n        case NAME :\n        case END_OBJECT :\n        case END_ARRAY :\n        default :\n            throw new java.lang.IllegalArgumentException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"7cdbec43-3e42-11e6-ac14-c150b3620617","method":{"position":"com.google.gson.internal.bind.TypeAdapters:442","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.net.URL read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    java.lang.String java.lang.String = in.nextString();\n    return \"null\".equals(nextString) ? null : new java.net.URL(nextString);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"7cdbec44-3e42-11e6-ac14-49b55b8d78cc","method":{"position":"com.google.gson.internal.bind.TypeAdapters:509","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.util.UUID value) throws java.io.IOException {\n    out.value((value == null ? null : value.toString()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:366","type":"CtBinaryOperatorImpl","sourcecode":"(stackSize) == 0"},"failures":[],"tindex":"7cdbec45-3e42-11e6-ac14-51f3f1a9eb09","method":{"position":"com.google.gson.FieldAttributes:134","type":"CtMethodImpl","sourcecode":"public boolean hasModifier(int modifier) {\n    if (modifier == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653327/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((java.lang.reflect.Field.getModifiers()) & modifier) != 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"stackSize":"modifier"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:305","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[],"tindex":"7cdbec46-3e42-11e6-ac14-89f94ab6b897","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:429","type":"CtMethodImpl","sourcecode":"private void rotateRight(com.google.gson.internal.LinkedHashTreeMap.Node<K, V> root) {\n    if (root != null) {\n        {\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = pivot.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = pivot.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            root.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = pivotRight;\n            if (pivotRight != null) {\n                pivotRight.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root;\n            } \n            replaceInParent(root, pivot);\n            pivot.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root;\n            root.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = pivot;\n            root.int = (java.lang.Math.max((right != null ? right.int : 0), (pivotRight != null ? pivotRight.int : 0))) + 1;\n            pivot.int = (java.lang.Math.max(root.int, (pivotLeft != null ? pivotLeft.int : 0))) + 1;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653327/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"root"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:391","type":"CtUnaryOperatorImpl","sourcecode":"!insert"},"failures":[26,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,3,55,4,5,6,56,57,58,7,8,9,59,60,61,62,63,64,65,66,67,0,68,1,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,10,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,11,161,162,163,164,165,166,167,168,169,170,171,172,30,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,21,22,23,204,205,206,25,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,2,256,257,258,259,260,261,262,263],"tindex":"7cdc1357-3e42-11e6-ac14-47ef9ea94681","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:58","type":"CtMethodImpl","sourcecode":"public boolean excludeField(java.lang.reflect.Field f, boolean serialize) {\n    if (!serialize) {\n        {\n            return com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.excludeField(f, serialize, com.google.gson.internal.Excluder);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653327/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"insert":"serialize"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:136","type":"CtBinaryOperatorImpl","sourcecode":"(type) instanceof java.lang.reflect.GenericArrayType"},"failures":[],"tindex":"7cdc1358-3e42-11e6-ac14-5d08251364d7","method":{"position":"com.google.gson.internal.$Gson$Types:158","type":"CtMethodImpl","sourcecode":"public static boolean equals(java.lang.reflect.Type a, java.lang.reflect.Type b) {\n    if (a == b) {\n        return true;\n    } else if (a instanceof java.lang.Class) {\n        return a.equals(b);\n    } else if (a instanceof java.lang.reflect.ParameterizedType) {\n        if (!(b instanceof java.lang.reflect.ParameterizedType)) {\n            return false;\n        } \n        java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(a));\n        java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(b));\n        return ((com.google.gson.internal.$Gson$Types.equal(pa.getOwnerType(), pb.getOwnerType())) && (pa.getRawType().equals(pb.getRawType()))) && (java.util.Arrays.equals(pa.getActualTypeArguments(), pb.getActualTypeArguments()));\n    } else if (a instanceof java.lang.reflect.GenericArrayType) {\n        if (!(b instanceof java.lang.reflect.GenericArrayType)) {\n            return false;\n        } \n        java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(a));\n        java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(b));\n        return com.google.gson.internal.$Gson$Types.equals(ga.getGenericComponentType(), gb.getGenericComponentType());\n    } else if (a instanceof java.lang.reflect.WildcardType) {\n        if (!(b instanceof java.lang.reflect.WildcardType)) {\n            return false;\n        } \n        java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(a));\n        java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(b));\n        return (java.util.Arrays.equals(wa.getUpperBounds(), wb.getUpperBounds())) && (java.util.Arrays.equals(wa.getLowerBounds(), wb.getLowerBounds()));\n    } else if (a instanceof java.lang.reflect.TypeVariable) {\n        if (!(b instanceof java.lang.reflect.TypeVariable)) {\n            return false;\n        } \n        java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(a));\n        java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(b));\n        return ((va.getGenericDeclaration()) == (vb.getGenericDeclaration())) && (va.getName().equals(vb.getName()));\n    } else {\n        return false;\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"b"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:378","type":"CtVariableReadImpl","sourcecode":"insert"},"failures":[],"tindex":"7cdc3a69-3e42-11e6-ac14-69fa7e505572","method":{"position":"com.google.gson.stream.JsonReader:325","type":"CtMethodImpl","sourcecode":"public final void setLenient(boolean lenient) {\n    if (lenient) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653327/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.stream.JsonReader.this.boolean = lenient;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"insert":"lenient"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:872","type":"CtBinaryOperatorImpl","sourcecode":"json == null"},"failures":[],"tindex":"7cdc3a6a-3e42-11e6-ac14-87354b342ba5","method":{"position":"com.google.gson.JsonPrimitive:273","type":"CtMethodImpl","sourcecode":"private static boolean isPrimitiveOrString(java.lang.Object target) {\n    if (target == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653327/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (target instanceof java.lang.String) {\n                return true;\n            } \n            java.lang.Class<?> java.lang.Class<?> = target.getClass();\n            for (java.lang.Class<?> java.lang.Class<?> : com.google.gson.JsonPrimitive.com.google.gson.JsonPrimitive.java.lang.Class<?>[]) {\n                if (standardPrimitive.isAssignableFrom(classOfPrimitive)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"target"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:184","type":"CtBinaryOperatorImpl","sourcecode":"(token != (com.google.gson.stream.JsonToken.NUMBER)) && (token != (com.google.gson.stream.JsonToken.STRING))"},"failures":[],"tindex":"7cdc3a6b-3e42-11e6-ac14-eb81373ace6d","method":{"position":"com.google.gson.JsonPrimitive:305","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object obj) {\n    if ((obj != obj) && (token != obj)) {\n        {\n            if (obj == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653327/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((com.google.gson.JsonPrimitive.this) == obj) {\n                        return true;\n                    } \n                    if ((obj == null) || ((getClass()) != (obj.getClass()))) {\n                        return false;\n                    } \n                    com.google.gson.JsonPrimitive com.google.gson.JsonPrimitive = ((com.google.gson.JsonPrimitive)(obj));\n                    if ((java.lang.Object) == null) {\n                        return (other.java.lang.Object) == null;\n                    } \n                    if ((com.google.gson.JsonPrimitive.isIntegral(com.google.gson.JsonPrimitive.this)) && (com.google.gson.JsonPrimitive.isIntegral(other))) {\n                        return (getAsNumber().longValue()) == (other.getAsNumber().longValue());\n                    } \n                    if (((java.lang.Object) instanceof java.lang.Number) && ((other.java.lang.Object) instanceof java.lang.Number)) {\n                        double double = getAsNumber().doubleValue();\n                        double double = other.getAsNumber().doubleValue();\n                        return (a == b) || ((java.lang.Double.isNaN(a)) && (java.lang.Double.isNaN(b)));\n                    } \n                    return java.lang.Object.equals(other.java.lang.Object);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653327/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"com.google.gson.stream.JsonToken.STRING":"obj","token":"obj","com.google.gson.stream.JsonToken.NUMBER":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl","sourcecode":"field.isSynthetic()"},"failures":[],"tindex":"7cdc3a6c-3e42-11e6-ac14-b31400e6235c","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:66","type":"CtMethodImpl","sourcecode":"private java.lang.String getFieldName(java.lang.reflect.Field f) {\n    if (f.isSynthetic()) {\n        {\n            return com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getFieldName(com.google.gson.FieldNamingStrategy, f);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653327/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"f"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:720","type":"CtBinaryOperatorImpl","sourcecode":"json == null"},"failures":[],"tindex":"7cdc617d-3e42-11e6-ac14-79566849c324","method":{"position":"com.google.gson.JsonObject:111","type":"CtMethodImpl","sourcecode":"public void addProperty(java.lang.String property, java.lang.Character value) {\n    if (property == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653327/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            add(property, createJsonElement(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"property"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:586","type":"CtBinaryOperatorImpl","sourcecode":"(stackSize) == 1"},"failures":[],"tindex":"7cdc617e-3e42-11e6-ac14-0de8fe44fabb","method":{"position":"com.google.gson.internal.Streams:111","type":"CtMethodImpl","sourcecode":"public java.lang.CharSequence subSequence(int start, int end) {\n    if (end == 1) {\n        {\n            return new java.lang.String(char[] , start , (end - start));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653327/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"stackSize":"end"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:94","type":"CtBinaryOperatorImpl","sourcecode":"primitive instanceof java.lang.Character"},"failures":[],"tindex":"7cdc617f-3e42-11e6-ac14-a520b90197f0","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:843","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(java.lang.Object key) {\n    if (key instanceof java.lang.Character) {\n        {\n            return (removeInternalByKey(key)) != null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653327/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"primitive":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:358","type":"CtUnaryOperatorImpl","sourcecode":"!changed"},"failures":[],"tindex":"7cdc6180-3e42-11e6-ac14-1febf4f1605a","method":{"position":"com.google.gson.internal.Excluder:191","type":"CtMethodImpl","sourcecode":"public boolean excludeClass(java.lang.Class<?> clazz, boolean serialize) {\n    if (!serialize) {\n        {\n            if (((double) != (com.google.gson.internal.Excluder.com.google.gson.internal.Excluder.double)) && (!(isValidVersion(clazz.getAnnotation(com.google.gson.annotations.Since.com.google.gson.annotations.Since.java.lang.Class), clazz.getAnnotation(com.google.gson.annotations.Until.com.google.gson.annotations.Until.java.lang.Class))))) {\n                return true;\n            } \n            if ((!(boolean)) && (isInnerClass(clazz))) {\n                return true;\n            } \n            if (isAnonymousOrLocal(clazz)) {\n                return true;\n            } \n            java.util.List<com.google.gson.ExclusionStrategy> java.util.List<com.google.gson.ExclusionStrategy> = serialize ? java.util.List<com.google.gson.ExclusionStrategy> : java.util.List<com.google.gson.ExclusionStrategy>;\n            for (com.google.gson.ExclusionStrategy com.google.gson.ExclusionStrategy : list) {\n                if (exclusionStrategy.shouldSkipClass(clazz)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653327/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"changed":"serialize"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1236","type":"CtBinaryOperatorImpl","sourcecode":"p == (com.google.gson.stream.JsonReader.PEEKED_NONE)"},"failures":[],"tindex":"7cdc6181-3e42-11e6-ac14-6b8acd0145b3","method":{"position":"com.google.gson.JsonArray:146","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement get(int i) {\n    if (i == i) {\n        {\n            return java.util.List<com.google.gson.JsonElement>.get(i);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653327/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"i","com.google.gson.stream.JsonReader.PEEKED_NONE":"i"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:350","type":"CtBinaryOperatorImpl","sourcecode":"ongoingCall != null"},"failures":[],"tindex":"7cdc8892-3e42-11e6-ac14-9f3ad75971f3","method":{"position":"com.google.gson.Gson:881","type":"CtMethodImpl","sourcecode":"public void setDelegate(com.google.gson.TypeAdapter<T> typeAdapter) {\n    if (typeAdapter != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653327/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((com.google.gson.TypeAdapter<T>) != null) {\n                throw new java.lang.AssertionError();\n            } \n            com.google.gson.TypeAdapter<T> = typeAdapter;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ongoingCall":"typeAdapter"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:194","type":"CtBinaryOperatorImpl","sourcecode":"(token != (com.google.gson.stream.JsonToken.NUMBER)) && (token != (com.google.gson.stream.JsonToken.STRING))"},"failures":[],"tindex":"7cdc8893-3e42-11e6-ac14-77457ab204b3","method":{"position":"com.google.gson.internal.LinkedTreeMap:574","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(java.lang.Object o) {\n    if ((o != o) && (token != o)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653327/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = findByEntry(((java.util.Map.Entry<?, ?>)(o)));\n            if (node == null) {\n                return false;\n            } \n            removeInternal(node, true);\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"com.google.gson.stream.JsonToken.STRING":"o","token":"o","com.google.gson.stream.JsonToken.NUMBER":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:409","type":"CtBinaryOperatorImpl","sourcecode":"pivotRight != null"},"failures":[],"tindex":"7cdc8894-3e42-11e6-ac14-c37528579b71","method":{"position":"com.google.gson.internal.LinkedTreeMap:310","type":"CtMethodImpl","sourcecode":"private void rebalance(com.google.gson.internal.LinkedTreeMap.Node<K, V> unbalanced, boolean insert) {\n    if (unbalanced != null) {\n        {\n            for (com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = unbalanced ; node != null ; node = node.com.google.gson.internal.LinkedTreeMap.Node<K, V>) {\n                com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = node.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n                com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = node.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n                int int = left != null ? left.int : 0;\n                int int = right != null ? right.int : 0;\n                int int = leftHeight - rightHeight;\n                if (delta == (-2)) {\n                    com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = right.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = right.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n                    int int = rightRight != null ? rightRight.int : 0;\n                    int int = rightLeft != null ? rightLeft.int : 0;\n                    int int = rightLeftHeight - rightRightHeight;\n                    if ((rightDelta == (-1)) || ((rightDelta == 0) && (!insert))) {\n                        rotateLeft(node);\n                    } else {\n                        assert rightDelta == 1;\n                        rotateRight(right);\n                        rotateLeft(node);\n                    }\n                    if (insert) {\n                        break;\n                    } \n                } else if (delta == 2) {\n                    com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = left.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = left.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n                    int int = leftRight != null ? leftRight.int : 0;\n                    int int = leftLeft != null ? leftLeft.int : 0;\n                    int int = leftLeftHeight - leftRightHeight;\n                    if ((leftDelta == 1) || ((leftDelta == 0) && (!insert))) {\n                        rotateRight(node);\n                    } else {\n                        assert leftDelta == (-1);\n                        rotateLeft(left);\n                        rotateRight(node);\n                    }\n                    if (insert) {\n                        break;\n                    } \n                } else if (delta == 0) {\n                    node.int = leftHeight + 1;\n                    if (insert) {\n                        break;\n                    } \n                } else {\n                    assert (delta == (-1)) || (delta == 1);\n                    node.int = (java.lang.Math.max(leftHeight, rightHeight)) + 1;\n                    if (!insert) {\n                        break;\n                    } \n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653327/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pivotRight":"unbalanced"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":60,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}