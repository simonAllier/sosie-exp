{"failureDictionary":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":50,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":350,"com.google.gson.functional.StringTest.testStringValueDeserialization":348,"com.google.gson.stream.JsonWriterTest.testPrettyPrintObject":621,"com.google.gson.functional.PrimitiveTest.testBigIntegerDeserialization":138,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":475,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullDeserialization":689,"com.google.gson.functional.PrimitiveTest.testBigDecimalNaNDeserializationNotSupported":99,"com.google.gson.stream.JsonWriterTest.testRepeatedName":632,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":200,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":519,"com.google.gson.MixedStreamTest.testWriteLenient":17,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":366,"com.google.gson.internal.bind.JsonTreeWriterTest.testPrematureClose":611,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":485,"com.google.gson.ExposeAnnotationExclusionStrategyTest.testNeverSkipClasses":12,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":295,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":71,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":538,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":483,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":555,"com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization":147,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":327,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":414,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":334,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerDeserialization":108,"com.google.gson.JsonObjectTest.testAddingNullPropertyValue":672,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":245,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":421,"com.google.gson.functional.ObjectTest.testSingletonLists":481,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":288,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":417,"com.google.gson.functional.PrimitiveTest.testNumberDeserialization":92,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":351,"com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue":591,"com.google.gson.stream.JsonWriterTest.testStrings":650,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator":194,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":312,"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":560,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization":305,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":498,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":1,"com.google.gson.functional.PrimitiveTest.testStringsAsBooleans":150,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":62,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeRecursive":659,"com.google.gson.functional.StringTest.testEscapedBackslashInStringDeserialization":364,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":235,"com.google.gson.functional.PrimitiveTest.testBigDecimalNoFractAsStringRepresentationDeserialization":139,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":563,"com.google.gson.stream.JsonWriterTest.testMultipleTopLevelValues":642,"com.google.gson.internal.LinkedTreeMapTest.testContainsNullKeyIsAlwaysFalse":686,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":457,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":8,"com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization":84,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":576,"com.google.gson.functional.MapTest.testMapOfMapDeserialization":456,"com.google.gson.functional.EnumTest.testEnumCaseMapping":326,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":22,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":349,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsLong":83,"com.google.gson.functional.JsonTreeTest.testToJsonTree":347,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":568,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveDeserialization":690,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":234,"com.google.gson.stream.JsonWriterTest.testNulls":629,"com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreBehindInVersion":669,"com.google.gson.JsonObjectTest.testEqualsNonEmptyObject":679,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":253,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":264,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullField":656,"com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization":388,"com.google.gson.functional.PrimitiveTest.testUnquotedStringDeserializationFails":94,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferDeserialization":281,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":424,"com.google.gson.internal.LinkedTreeMapTest.testLargeSetOfRandomKeys":683,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":548,"com.google.gson.functional.ObjectTest.testNullDeserialization":692,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":521,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringDeserialization":361,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":494,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization":160,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":595,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsBigIntegerFails":100,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":499,"com.google.gson.internal.LinkedTreeMapTest.testContainsNonComparableKeyReturnsFalse":684,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":574,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":81,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":507,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":594,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":332,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":307,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectDeserialization":681,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionDeserialization":165,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":403,"com.google.gson.functional.PrimitiveTest.testDoubleInfinityDeserialization":164,"com.google.gson.JsonParserTest.testParseString":678,"com.google.gson.stream.JsonWriterTest.testValueWithoutName":638,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization":304,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":144,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullObject":657,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":123,"com.google.gson.functional.PrimitiveTest.testFloatInfinityDeserialization":171,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArrayDeserialization":688,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":384,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":510,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityDeserialization":121,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":287,"com.google.gson.functional.PrimitiveTest.testDoubleNoFractAsStringRepresentationDeserialization":136,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":367,"com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization":449,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":217,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountryVariant":278,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":411,"com.google.gson.internal.bind.JsonTreeWriterTest.testLenientNansAndInfinities":613,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":180,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":471,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":145,"com.google.gson.functional.JsonParserTest.testParseInvalidJson":373,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsDouble":137,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":378,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":506,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":58,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":489,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":583,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnFlush":645,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":104,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":207,"com.google.gson.functional.MapTest.testMapDeserializationWithNullValue":467,"com.google.gson.internal.LinkedHashTreeMapTest.testEmptyStringValues":665,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":418,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":225,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":243,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":28,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":182,"com.google.gson.stream.JsonWriterTest.testEmptyArray":622,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings":309,"com.google.gson.functional.MapTest.testNumberKeyDeserialization":473,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":293,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":531,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":25,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":280,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":80,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":524,"com.google.gson.functional.CollectionTest.testSetDeserialization":554,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":335,"com.google.gson.functional.EnumTest.testEnumSet":317,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":493,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersEscapedDeserialization":580,"com.google.gson.functional.PrimitiveTest.testBigDecimalAsStringRepresentationDeserialization":128,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":244,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":181,"com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithNestedWildcards":693,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampDeserialization":268,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":444,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":500,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":7,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":242,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBytePrimitive":141,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":27,"com.google.gson.functional.PrimitiveTest.testDeserializingDecimalPointValueZeroSucceeds":152,"com.google.gson.stream.JsonWriterTest.testBadNestingArray":641,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":316,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":571,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":153,"com.google.gson.internal.LinkedHashTreeMapTest.testContainsNullKeyIsAlwaysFalse":666,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsIntegerFails":97,"com.google.gson.functional.MapTest.testHashMapDeserialization":438,"com.google.gson.functional.CollectionTest.testLinkedListDeserialization":544,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesDeserialization":292,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization":52,"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":59,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":48,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":208,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":315,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":407,"com.google.gson.functional.MapTest.testSortedMap":460,"com.google.gson.functional.MapTest.testMapSerialization":455,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":51,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedDeserialization":134,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":527,"com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization":391,"com.google.gson.functional.MapTest.testSerializeMaps":441,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":536,"com.google.gson.functional.MapTest.testComplexKeysSerialization":468,"com.google.gson.functional.InternationalizationTest.testStringsWithRawChineseCharactersDeserialization":579,"com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader":472,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsFalse":612,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":398,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":324,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":523,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":433,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":220,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriter":604,"com.google.gson.functional.EnumTest.testTopLevelEnumDeserialization":322,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":566,"com.google.gson.JsonObjectTest.testAddingAndRemovingObjectProperties":673,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":202,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsDeserialization":509,"com.google.gson.functional.MapTest.testStringKeyDeserialization":470,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsDeserialization":395,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":186,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":167,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesDeserialization":103,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":474,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigInteger":98,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":338,"com.google.gson.functional.PrettyPrintingTest.testMap":564,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":541,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":54,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":261,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls":313,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":0,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysDeserialization":397,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeMap":658,"com.google.gson.functional.StringTest.testStringWithEscapedSlashDeserialization":354,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":358,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":275,"com.google.gson.functional.MapTest.testMapSerializationEmpty":469,"com.google.gson.functional.CollectionTest.testQueueSerialization":545,"com.google.gson.JsonObjectTest.testAddingBooleanProperties":674,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsByteWrapper":129,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnValue":646,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnName":648,"com.google.gson.functional.MapTest.testMapOfMapSerialization":454,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":120,"com.google.gson.JavaSerializationTest.testMapIsSerializable":4,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountry":283,"com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization":551,"com.google.gson.stream.JsonWriterTest.testNameWithoutValue":624,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":39,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":131,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":195,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":352,"com.google.gson.functional.FieldNamingTest.testIdentity":537,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":183,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":30,"com.google.gson.stream.JsonWriterTest.testStrictWriterDoesNotPermitMultipleTopLevelValues":635,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":511,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":73,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":206,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":346,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":480,"com.google.gson.stream.JsonWriterTest.testDeepNestingArrays":627,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalDeserialization":86,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":9,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":77,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":353,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization":126,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":477,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeDeserialization":297,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":589,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidDeserialization":270,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":38,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":277,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullJsonElementSerialization":603,"com.google.gson.functional.MapTest.testMapDeserializationEmpty":435,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":163,"com.google.gson.functional.MapTest.testMapSubclassSerialization":440,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":252,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":329,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersDeserialization":582,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":15,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":60,"com.google.gson.functional.PrimitiveTest.testBigDecimalDeserialization":118,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":340,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsLongPrimitive":178,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguage":260,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":368,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":311,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":241,"com.google.gson.functional.EnumTest.testEnumSubclass":320,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization":140,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":2,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":496,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization":85,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":76,"com.google.gson.functional.PrimitiveTest.testFloatNaNDeserialization":146,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":185,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":215,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsLongWrapper":88,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":479,"com.google.gson.stream.JsonWriterTest.testWriterCloseIsIdempotent":636,"com.google.gson.functional.PrimitiveTest.testBigDecimalNegativeInfinityDeserializationNotSupported":124,"com.google.gson.stream.JsonWriterTest.testTwoNames":623,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":478,"com.google.gson.stream.JsonWriterTest.testNullName":630,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":223,"com.google.gson.functional.ArrayTest.testArrayOfNullDeserialization":387,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":588,"com.google.gson.internal.LinkedTreeMapTest.testEqualsAndHashCode":687,"com.google.gson.functional.PrimitiveTest.testBigDecimalInfinityDeserializationNotSupported":130,"com.google.gson.functional.ObjectTest.testTruncatedDeserialization":492,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization":122,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":205,"com.google.gson.stream.JsonWriterTest.testBadNestingObject":637,"com.google.gson.stream.JsonWriterTest.testObjectsInArrays":634,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":300,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":482,"com.google.gson.functional.MapTest.testMapSubclassDeserialization":437,"com.google.gson.MixedStreamTest.testWriteNulls":593,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":386,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnStructure":633,"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":371,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":380,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":238,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":522,"com.google.gson.CommentsTest.testParseComments":584,"com.google.gson.JsonObjectTest.testReadPropertyWithEmptyStringName":670,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":190,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":427,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":484,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":43,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigDecimal":143,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":393,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":526,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":356,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":459,"com.google.gson.MixedStreamTest.testReadInvalidState":14,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":331,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":250,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":162,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":302,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":528,"com.google.gson.ObjectTypeAdapterTest.testSerializeObject":660,"com.google.gson.JsonParserTest.testParseMixedArray":608,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":96,"com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash":663,"com.google.gson.functional.ArrayTest.testArrayOfStringsDeserialization":399,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":40,"com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreAheadInVersion":667,"com.google.gson.internal.bind.JsonTreeWriterTest.testWriteAfterClose":615,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":113,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":37,"com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization":157,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":285,"com.google.gson.functional.ArrayTest.testEmptyArrayDeserialization":383,"com.google.gson.functional.MapTest.testMapDeserialization":447,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":279,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":569,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":436,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":420,"com.google.gson.JsonPrimitiveTest.testValidJsonOnToString":610,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":232,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":446,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":426,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":422,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":221,"com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeMap":680,"com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization":321,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":345,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":259,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization":497,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":512,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":210,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":341,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":224,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":265,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":249,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":219,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":476,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":458,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":565,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":586,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":306,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigDecimal":82,"com.google.gson.functional.PrimitiveTest.testShortSerialization":161,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":192,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":429,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedDeserialization":149,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":578,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedDeserialization":119,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":148,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsBigDecimal":95,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":269,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":533,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":319,"com.google.gson.internal.LinkedTreeMapTest.testEmptyStringValues":685,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":540,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":328,"com.google.gson.internal.LinkedTreeMapTest.testPutOverrides":682,"com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues":442,"com.google.gson.functional.PrimitiveTest.testLargeDoubleDeserialization":112,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":169,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":561,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":369,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedArray":618,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization":294,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":434,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":21,"com.google.gson.internal.bind.JsonTreeWriterTest.testObject":616,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization":176,"com.google.gson.functional.PrimitiveTest.testDeserializingNonZeroDecimalPointValuesAsIntegerFails":170,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":653,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":204,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":184,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":231,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":513,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":61,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":255,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsTrue":619,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":155,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":413,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsDoublePrimitive":125,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":187,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":517,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":488,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":325,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":212,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":581,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":266,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":549,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":336,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives":188,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":419,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":286,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":428,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsInt":102,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":272,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":410,"com.google.gson.stream.JsonWriterTest.testNullStringValue":626,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":430,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization":290,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":228,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization":542,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsShortWrapper":89,"com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral":156,"com.google.gson.functional.PrimitiveTest.testNumberSerialization":127,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":173,"com.google.gson.stream.JsonWriterTest.testEmptyObject":640,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":46,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":318,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":425,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":56,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":529,"com.google.gson.functional.MapTest.testGeneralMapField":464,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":486,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":377,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsShortPrimitive":175,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":78,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":337,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":392,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":296,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":462,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":93,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":256,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":402,"com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization":151,"com.google.gson.MixedStreamTest.testReadMixedStreamed":20,"com.google.gson.ObjectTypeAdapterTest.testDeserializeNullValue":661,"com.google.gson.JsonObjectTest.testDeepCopy":675,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":114,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlDeserialization":267,"com.google.gson.functional.MapTest.testBooleanKeyDeserialization":450,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":10,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":409,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":556,"com.google.gson.stream.JsonWriterTest.testNonFiniteDoubles":643,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":416,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBooleanPrimitive":132,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":577,"com.google.gson.JavaSerializationTest.testNumberIsSerializable":3,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":26,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":284,"com.google.gson.functional.MapTest.testDeerializeMapOfMaps":451,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":199,"com.google.gson.functional.MapTest.testMapDeserializationWithNullKey":439,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":174,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":191,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":406,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":65,"com.google.gson.stream.JsonWriterTest.testArraysInObjects":631,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsFloatPrimitive":115,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedObject":617,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":282,"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":372,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":31,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserialization":254,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionDeserilaization":550,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization":432,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":197,"com.google.gson.functional.ObjectTest.testNestedDeserialization":518,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":236,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":504,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":53,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":222,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":575,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsNumber":172,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":42,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":201,"com.google.gson.functional.StringTest.testSingleQuoteInStringDeserialization":355,"com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys":452,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":240,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":159,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":211,"com.google.gson.JavaSerializationTest.testListIsSerializable":5,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":75,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":370,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":559,"com.google.gson.functional.ObjectTest.testNullSerialization":607,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":214,"com.google.gson.stream.JsonWriterTest.testDoubles":647,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization":198,"com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey":443,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":87,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":463,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization":389,"com.google.gson.functional.MapTest.testInterfaceTypeMap":461,"com.google.gson.stream.JsonWriterTest.testNonFiniteBoxedDoubles":644,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":339,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":227,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsDoubleWrapper":90,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":323,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":596,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":218,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails":342,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":257,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":573,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsInteger":106,"com.google.gson.MixedStreamTest.testWriteClosed":19,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":55,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":547,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":230,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateDeserialization":308,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":487,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":246,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":226,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":45,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":41,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":515,"com.google.gson.stream.JsonWriterTest.testLongs":628,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":303,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":233,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":490,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":546,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":66,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBooleanWrapper":135,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":68,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":216,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":552,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":291,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":32,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":35,"com.google.gson.functional.PrimitiveTest.testDoubleAsStringRepresentationDeserialization":177,"com.google.gson.stream.JsonWriterTest.testNumbers":649,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":111,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":344,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderDeserialization":262,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":374,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":525,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":44,"com.google.gson.functional.CollectionTest.testQueueDeserialization":562,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":117,"com.google.gson.functional.PrimitiveTest.testByteDeserialization":133,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringDeserialization":360,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization":49,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":67,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":301,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":448,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":508,"com.google.gson.stream.JsonWriterTest.testDeepNestingObjects":639,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":274,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":404,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":516,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":539,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":13,"com.google.gson.functional.MapTest.testRawMapSerialization":466,"com.google.gson.JsonParserTest.testParseReader":677,"com.google.gson.functional.CollectionTest.testNullsInListDeserialization":557,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetDeserialization":289,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize":654,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":209,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":502,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":532,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":431,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":585,"com.google.gson.functional.PrimitiveTest.testByteSerialization":158,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":310,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":379,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapNoTypeSerialization":587,"com.google.gson.ObjectTypeAdapterTest.testSerialize":590,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":597,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":400,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsFloatWrapper":101,"com.google.gson.JsonPrimitiveTest.testEqualsIntegerAndBigInteger":609,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":72,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":390,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":534,"com.google.gson.GsonTypeAdapterTest.testDefaultTypeAdapterThrowsParseException":6,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":247,"com.google.gson.functional.StringTest.testAssignmentCharDeserialization":357,"com.google.gson.functional.MapTest.testMapWithQuotes":453,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatDeserialization":109,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":600,"com.google.gson.functional.StringTest.testEscapingQuotesInStringDeserialization":359,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":179,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":408,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":196,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":343,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsNumber":166,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":599,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":333,"com.google.gson.stream.JsonWriterTest.testLenientWriterPermitsMultipleTopLevelValues":592,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":423,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":237,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":514,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":570,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":142,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":271,"com.google.gson.functional.ObjectTest.testEmptyStringDeserialization":691,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":396,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":491,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":298,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":263,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":64,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":74,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":273,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigInteger":154,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriterAndSerializeNulls":605,"com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed":553,"com.google.gson.functional.ArrayTest.testSingleStringArrayDeserialization":382,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":239,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":299,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":375,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":213,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":33,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization":69,"com.google.gson.internal.LinkedHashTreeMapTest.testContainsNonComparableKeyReturnsFalse":664,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":330,"com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreAtSameVersion":668,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReader":314,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsFloat":91,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":251,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":193,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize2dArray":652,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":501,"com.google.gson.functional.ObjectTest.testNestedSerialization":503,"com.google.gson.JsonObjectTest.testAddingStringProperties":676,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":47,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":105,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringDeserialization":363,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":401,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":405,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":465,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":530,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":412,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":11,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":18,"com.google.gson.stream.JsonWriterTest.testUnicodeLineBreaksEscaped":651,"com.google.gson.functional.UncategorizedTest.testTrailingWhitespace":29,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":495,"com.google.gson.functional.PrimitiveTest.testBooleanDeserialization":168,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":229,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":415,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":276,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":23,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsInteger":107,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":258,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":505,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":63,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize1dArray":655,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":362,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":385,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":79,"com.google.gson.functional.CollectionTest.testSetSerialization":558,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":189,"com.google.gson.functional.StringTest.testStringValueSerialization":365,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":567,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":70,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":36,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":203,"com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization":543,"com.google.gson.MixedStreamTest.testWriteInvalidState":16,"com.google.gson.functional.ArrayTest.testInvalidArrayDeserialization":376,"com.google.gson.functional.ObjectTest.testJsonObjectSerialization":606,"com.google.gson.functional.PrimitiveTest.testBadValueForBigIntegerDeserialization":110,"com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero":116,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":394,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":57,"com.google.gson.stream.JsonWriterTest.testBooleans":625,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":601,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":535,"com.google.gson.ObjectTypeAdapterTest.testDeserialize":662,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":520,"com.google.gson.JsonObjectTest.testAddingCharacterProperties":671,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":34,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":572,"com.google.gson.internal.bind.JsonTreeWriterTest.testArray":614,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":248,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullSerialization":602,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":598,"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":445,"com.google.gson.stream.JsonWriterTest.testPrettyPrintArray":620,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType":24,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":381},"transformations":[{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:113","type":"CtInvocationImpl","sourcecode":"primitive.isBoolean()"},"failures":[],"tindex":"7996b1be-3e55-11e6-afa7-0fc583ef0587","method":{"position":"com.google.gson.Gson:660","type":"CtMethodImpl","sourcecode":"public void toJson(com.google.gson.JsonElement jsonElement, com.google.gson.stream.JsonWriter writer) throws com.google.gson.JsonIOException {\n    if (jsonElement.isBoolean()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    } else {\n        {\n            boolean boolean = writer.isLenient();\n            writer.setLenient(true);\n            boolean boolean = writer.isHtmlSafe();\n            writer.setHtmlSafe(boolean);\n            boolean boolean = writer.getSerializeNulls();\n            writer.setSerializeNulls(boolean);\n            try {\n                com.google.gson.internal.Streams.write(jsonElement, writer);\n            } catch (java.io.IOException e) {\n                throw new com.google.gson.JsonIOException(e);\n            } finally {\n                writer.setLenient(oldLenient);\n                writer.setHtmlSafe(oldHtmlSafe);\n                writer.setSerializeNulls(oldSerializeNulls);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"primitive":"jsonElement"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"799726ef-3e55-11e6-afa7-41fb31358595","method":{"position":"com.google.gson.internal.bind.TypeAdapters:451","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.net.URL value) throws java.io.IOException {\n    out.value((value == null ? null : value.toExternalForm()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:384","type":"CtVariableReadImpl","sourcecode":"insert"},"failures":[],"tindex":"799726f0-3e55-11e6-afa7-5902d3fe7045","method":{"position":"com.google.gson.internal.$Gson$Preconditions:40","type":"CtMethodImpl","sourcecode":"public static void checkArgument(boolean condition) {\n    if (!condition) {\n        throw new java.lang.IllegalArgumentException();\n    } \n}"},"series":0,"name":"addParameterCondition","variableMap":{"insert":"condition"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:274","type":"CtVariableReadImpl","sourcecode":"serializeSpecialFloatingPointValues"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591],"tindex":"79974e01-3e55-11e6-afa7-4d708b682960","method":{"position":"com.google.gson.internal.Excluder:191","type":"CtMethodImpl","sourcecode":"public boolean excludeClass(java.lang.Class<?> clazz, boolean serialize) {\n    if (serialize) {\n        {\n            if (((double) != (com.google.gson.internal.Excluder.com.google.gson.internal.Excluder.double)) && (!(isValidVersion(clazz.getAnnotation(com.google.gson.annotations.Since.com.google.gson.annotations.Since.java.lang.Class), clazz.getAnnotation(com.google.gson.annotations.Until.com.google.gson.annotations.Until.java.lang.Class))))) {\n                return true;\n            } \n            if ((!(boolean)) && (isInnerClass(clazz))) {\n                return true;\n            } \n            if (isAnonymousOrLocal(clazz)) {\n                return true;\n            } \n            java.util.List<com.google.gson.ExclusionStrategy> java.util.List<com.google.gson.ExclusionStrategy> = serialize ? java.util.List<com.google.gson.ExclusionStrategy> : java.util.List<com.google.gson.ExclusionStrategy>;\n            for (com.google.gson.ExclusionStrategy com.google.gson.ExclusionStrategy : list) {\n                if (exclusionStrategy.shouldSkipClass(clazz)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"serializeSpecialFloatingPointValues":"serialize"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"79977512-3e55-11e6-afa7-833ae55cf8ce","method":{"position":"com.google.gson.Gson:278","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Float read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return ((float)(in.nextDouble()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl","sourcecode":"field.isSynthetic()"},"failures":[],"tindex":"79979c23-3e55-11e6-afa7-5f6758b2daa7","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:116","type":"CtMethodImpl","sourcecode":"private com.google.gson.TypeAdapter<?> getFieldAdapter(com.google.gson.Gson gson, java.lang.reflect.Field field, com.google.gson.reflect.TypeToken<?> fieldType) {\n    if (field.isSynthetic()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.annotations.JsonAdapter com.google.gson.annotations.JsonAdapter = field.getAnnotation(com.google.gson.annotations.JsonAdapter.com.google.gson.annotations.JsonAdapter.java.lang.Class);\n            if (annotation != null) {\n                com.google.gson.TypeAdapter<?> com.google.gson.TypeAdapter<?> = com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.getTypeAdapter(com.google.gson.internal.ConstructorConstructor, gson, fieldType, annotation);\n                if (adapter != null)\n                    return adapter;\n                \n            } \n            return gson.getAdapter(fieldType);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"field"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:565","type":"CtBinaryOperatorImpl","sourcecode":"(indent) == null"},"failures":[186,187,193,366,367,368,370],"tindex":"79979c24-3e55-11e6-afa7-b1db410c39a4","method":{"position":"com.google.gson.JsonObject:89","type":"CtMethodImpl","sourcecode":"public void addProperty(java.lang.String property, java.lang.Number value) {\n    if (property == null) {\n        {\n            add(property, createJsonElement(value));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"indent":"property"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:83","type":"CtBinaryOperatorImpl","sourcecode":"superclass instanceof java.lang.Class"},"failures":[44,45,50,71,72,73,74,75,77,222,223,224,228,229,234,235,239,344,345,346,347,475,585,586,587],"tindex":"7997c335-3e55-11e6-afa7-1d71353ba1bb","method":{"position":"com.google.gson.Gson:491","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement toJsonTree(java.lang.Object src, java.lang.reflect.Type typeOfSrc) {\n    if (src instanceof java.lang.Class) {\n        {\n            com.google.gson.internal.bind.JsonTreeWriter com.google.gson.internal.bind.JsonTreeWriter = new com.google.gson.internal.bind.JsonTreeWriter();\n            toJson(src, typeOfSrc, writer);\n            return writer.get();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"superclass":"src"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.ConstructorConstructor:181","type":"CtBinaryOperatorImpl","sourcecode":"(type instanceof java.lang.reflect.ParameterizedType) && (!(java.lang.String.class.isAssignableFrom(com.google.gson.reflect.TypeToken.get(((java.lang.reflect.ParameterizedType)(type)).getActualTypeArguments()[0]).getRawType())))"},"failures":[],"tindex":"7997c336-3e55-11e6-afa7-9f25d1f3c762","method":{"position":"com.google.gson.JsonNull:60","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object other) {\n    if (other == null) {\n        {\n            if ((other instanceof java.lang.reflect.ParameterizedType) && (!(other.isAssignableFrom(com.google.gson.reflect.TypeToken.get(((java.lang.reflect.ParameterizedType)(type)).getActualTypeArguments()[0]).getRawType())))) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return ((com.google.gson.JsonNull.this) == other) || (other instanceof com.google.gson.JsonNull);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.lang.String.class":"other","type":"other"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"7997ea47-3e55-11e6-afa7-1fbebf744c67","method":{"position":"com.google.gson.internal.bind.ArrayTypeAdapter:63","type":"CtMethodImpl","sourcecode":"public java.lang.Object read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n    in.beginArray();\n    while (in.hasNext()) {\n        E E = com.google.gson.TypeAdapter<E>.read(in);\n        list.add(instance);\n    }\n    in.endArray();\n    java.lang.Object java.lang.Object = java.lang.reflect.Array.newInstance(java.lang.Class<E>, list.size());\n    for (int int = 0 ; i < (list.size()) ; i++) {\n        java.lang.reflect.Array.set(array, i, list.get(i));\n    }\n    return array;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:430","type":"CtUnaryOperatorImpl","sourcecode":"!skipPastFound"},"failures":[592,0,1,2,7,8,9,10,11,13,15,593,16,17,18,19,594,595,22,23,30,31,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,54,57,58,59,596,60,61,64,65,68,70,597,598,71,72,73,74,75,76,77,78,80,81,85,87,93,96,104,105,111,113,114,117,120,122,123,126,127,131,140,142,144,145,148,151,153,157,158,159,160,161,162,163,167,169,173,174,176,179,181,185,186,187,189,190,191,193,195,196,197,199,200,202,204,206,207,208,209,210,212,213,214,217,219,222,223,224,225,226,227,228,229,232,233,234,235,236,237,239,240,241,242,243,244,246,247,248,250,253,255,256,257,599,261,600,263,264,265,601,269,271,272,273,274,275,277,279,280,282,284,285,286,287,288,291,602,293,295,296,298,299,300,301,302,303,306,603,307,310,312,604,605,316,317,318,319,320,323,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,349,350,351,352,353,356,358,362,365,374,375,377,378,379,380,381,384,385,386,390,392,394,396,398,400,401,402,403,404,405,406,407,410,411,412,414,417,419,422,424,425,426,428,429,430,431,433,436,440,441,444,446,448,453,454,455,458,459,461,462,463,464,465,466,468,469,471,474,475,476,479,480,481,484,487,490,606,493,607,495,497,499,500,502,503,504,506,510,512,513,515,520,521,522,523,525,528,530,533,534,535,536,537,538,539,540,541,545,546,547,548,549,552,555,556,558,559,561,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,581,583,608,609,610,585,586,587,588,589,611,612,613,614,615,616,617,618,619],"tindex":"79981158-3e55-11e6-afa7-3f697c4fa226","method":{"position":"com.google.gson.stream.JsonWriter:234","type":"CtMethodImpl","sourcecode":"public final void setLenient(boolean lenient) {\n    if (!lenient) {\n        {\n            com.google.gson.stream.JsonWriter.this.boolean = lenient;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"skipPastFound":"lenient"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"79983869-3e55-11e6-afa7-6f8718d0a30c","method":{"position":"com.google.gson.internal.bind.TypeAdapters:744","type":"CtMethodImpl","sourcecode":"public void write(com.google.gson.stream.JsonWriter out, T value) throws java.io.IOException {\n    out.value((value == null ? null : java.util.Map<T, java.lang.String>.get(value)));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"7998386a-3e55-11e6-afa7-75ad86fc3958","method":{"position":"com.google.gson.internal.bind.SqlDateTypeAdapter:64","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized void write(com.google.gson.stream.JsonWriter out, java.sql.Date value) throws java.io.IOException {\n    out.value((value == null ? null : java.text.DateFormat.format(value)));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:429","type":"CtBinaryOperatorImpl","sourcecode":"(deferredName) != null"},"failures":[620,621,15,235,441,563,564,565,566,567,568,569,570],"tindex":"79985f7b-3e55-11e6-afa7-4bdc3ca243e6","method":{"position":"com.google.gson.stream.JsonWriter:212","type":"CtMethodImpl","sourcecode":"public final void setIndent(java.lang.String indent) {\n    if (indent != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((indent.length()) == 0) {\n                com.google.gson.stream.JsonWriter.this.java.lang.String = null;\n                com.google.gson.stream.JsonWriter.this.java.lang.String = \":\";\n            } else {\n                com.google.gson.stream.JsonWriter.this.java.lang.String = indent;\n                com.google.gson.stream.JsonWriter.this.java.lang.String = \": \";\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"indent"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1113","type":"CtBinaryOperatorImpl","sourcecode":"c == '\\\\'"},"failures":[622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,592,637,620,621,638,639,640,641,642,643,644,645,646,647,648,649,650,651,0,1,2,7,9,10,11,13,15,593,16,17,18,19,594,595,22,23,30,31,33,35,36,37,38,39,40,41,42,43,46,47,48,49,51,54,57,58,59,652,596,653,654,655,656,657,658,659,60,61,64,65,68,70,597,598,76,78,80,81,85,93,96,105,111,114,117,122,126,127,131,140,142,144,145,148,151,153,157,158,159,160,161,162,167,169,173,174,176,179,181,185,186,187,189,190,191,193,195,196,197,199,200,202,204,206,207,208,209,210,212,213,214,217,219,225,226,227,232,233,235,236,237,239,240,241,242,243,244,246,247,248,250,253,255,256,257,599,261,600,263,264,265,601,269,271,272,273,274,275,277,279,280,282,284,285,286,287,288,291,602,293,295,296,298,299,300,301,302,303,306,603,307,310,312,604,605,316,317,318,319,320,323,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,343,345,349,350,351,352,353,356,358,362,365,374,375,377,378,379,380,381,384,385,386,390,392,394,396,398,400,401,402,403,404,405,406,407,410,411,412,414,417,419,422,424,425,426,428,429,430,431,433,436,440,441,444,446,448,453,454,455,458,459,461,462,463,464,465,466,468,469,471,474,475,476,479,480,481,484,487,490,606,493,607,495,497,499,500,502,503,504,506,510,512,513,515,520,521,522,523,525,528,530,533,534,535,536,537,538,539,540,541,545,546,547,548,549,552,555,556,558,559,561,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,581,583,608,609,610,588,589,660,590,591,612,613,614,616,617,618,619],"tindex":"79985f7c-3e55-11e6-afa7-0b4166986f51","method":{"position":"com.google.gson.stream.JsonWriter:375","type":"CtMethodImpl","sourcecode":"private void replaceTop(int topOfStack) {\n    if (topOfStack == '\\\\') {\n        {\n            int[][((int) - 1)] = topOfStack;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"topOfStack"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"7998868d-3e55-11e6-afa7-53bd72b2d733","method":{"position":"com.google.gson.internal.bind.TypeAdapters:145","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Boolean read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } else if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        return java.lang.Boolean.parseBoolean(in.nextString());\n    } \n    return in.nextBoolean();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:401","type":"CtBinaryOperatorImpl","sourcecode":"p == (com.google.gson.stream.JsonReader.PEEKED_END_OBJECT)"},"failures":[295,299],"tindex":"7998ad9e-3e55-11e6-afa7-ffd0808dd28c","method":{"position":"com.google.gson.GsonBuilder:402","type":"CtMethodImpl","sourcecode":"public com.google.gson.GsonBuilder setDateFormat(int style) {\n    if (style == style) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.GsonBuilder.this.int = style;\n            com.google.gson.GsonBuilder.this.java.lang.String = null;\n            return com.google.gson.GsonBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"style","com.google.gson.stream.JsonReader.PEEKED_END_OBJECT":"style"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:213","type":"CtBinaryOperatorImpl","sourcecode":"(indent.length()) == 0"},"failures":[661,662],"tindex":"7998ad9f-3e55-11e6-afa7-858ef8ccafda","method":{"position":"com.google.gson.TypeAdapter:268","type":"CtMethodImpl","sourcecode":"public final T fromJson(java.lang.String json) throws java.io.IOException {\n    if ((json.length()) == 0) {\n        {\n            return fromJson(new java.io.StringReader(json));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"indent":"json"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:106","type":"CtBinaryOperatorImpl","sourcecode":"element instanceof com.google.gson.JsonArray"},"failures":[663,664,665,666],"tindex":"7998ada0-3e55-11e6-afa7-212aba74dd92","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:90","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(java.lang.Object key) {\n    if (key instanceof com.google.gson.JsonArray) {\n        {\n            return (findByObject(key)) != null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:340","type":"CtBinaryOperatorImpl","sourcecode":"toResolve instanceof java.lang.reflect.GenericArrayType"},"failures":[25,35,36,37,38,39,40,41,42,43,44,45,46,47,57,58,71,72,74,75,93,180,185,200,202,203,205,206,207,208,209,210,211,212,213,214,215,216,220,221,223,226,228,230,231,232,234,250,253,258,259,269,276,284,303,331,333,334,335,340,343,345,457,468,491,493,512,513,520,521,522,523,524,525,532,538,554,558,590],"tindex":"7998d4b1-3e55-11e6-afa7-e10873290cd6","method":{"position":"com.google.gson.internal.ConstructorConstructor:200","type":"CtMethodImpl","sourcecode":"private <T>com.google.gson.internal.ObjectConstructor<T> newUnsafeAllocator(final java.lang.reflect.Type type, final java.lang.Class<? super T> rawType) {\n    if (type instanceof java.lang.reflect.GenericArrayType) {\n        {\n            return new com.google.gson.internal.ObjectConstructor<T>() {\n                private final com.google.gson.internal.UnsafeAllocator unsafeAllocator = com.google.gson.internal.UnsafeAllocator.create();\n\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                public T construct() {\n                    try {\n                        java.lang.Object java.lang.Object = com.google.gson.internal.UnsafeAllocator.newInstance(rawType);\n                        return ((T)(newInstance));\n                    } catch (java.lang.Exception e) {\n                        throw new java.lang.RuntimeException((((\"Unable to invoke no-args constructor for \" + type) + \". \") + \"Register an InstanceCreator with Gson for this type may fix this problem.\") , e);\n                    }\n                }\n            };\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"type"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"7998d4b2-3e55-11e6-afa7-a56adc33acb4","method":{"position":"com.google.gson.internal.bind.TypeAdapters:525","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.sql.Timestamp read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    java.util.Date java.util.Date = dateTypeAdapter.read(in);\n    return date != null ? new java.sql.Timestamp(date.getTime()) : null;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:297","type":"CtBinaryOperatorImpl","sourcecode":"(value) instanceof java.lang.Number"},"failures":[256,263,264,295,299,306],"tindex":"7998d4b3-3e55-11e6-afa7-19d474b802b7","method":{"position":"com.google.gson.TreeTypeAdapter:84","type":"CtMethodImpl","sourcecode":"public static com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken<?> exactType, java.lang.Object typeAdapter) {\n    if (typeAdapter instanceof java.lang.Number) {\n        {\n            return new com.google.gson.TreeTypeAdapter.SingleTypeFactory(typeAdapter , exactType , false , null);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"typeAdapter"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:127","type":"CtInvocationImpl","sourcecode":"type.equals(from)"},"failures":[],"tindex":"7998d4b4-3e55-11e6-afa7-2397f3a16854","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:120","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(java.lang.Object key) {\n    if (key.equals(key)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = removeInternalByKey(key);\n            return node != null ? node.V : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"key","type":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:176","type":"CtInvocationImpl","sourcecode":"isNumber()"},"failures":[],"tindex":"7998fbc5-3e55-11e6-afa7-f3c3e46d52f7","method":{"position":"com.google.gson.JsonPrimitive:333","type":"CtMethodImpl","sourcecode":"private static boolean isIntegral(com.google.gson.JsonPrimitive primitive) {\n    if ((primitive.java.lang.Object) instanceof java.lang.Number) {\n        java.lang.Number java.lang.Number = ((java.lang.Number)(primitive.java.lang.Object));\n        return ((((number instanceof java.math.BigInteger) || (number instanceof java.lang.Long)) || (number instanceof java.lang.Integer)) || (number instanceof java.lang.Short)) || (number instanceof java.lang.Byte);\n    } \n    return false;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"primitive"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"7998fbc6-3e55-11e6-afa7-477c3cb99dd6","method":{"position":"com.google.gson.internal.bind.TypeAdapters:473","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.net.URI value) throws java.io.IOException {\n    out.value((value == null ? null : value.toASCIIString()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"7998fbc7-3e55-11e6-afa7-79d82d3ccfbf","method":{"position":"com.google.gson.internal.bind.TypeAdapters:530","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.sql.Timestamp value) throws java.io.IOException {\n    dateTypeAdapter.write(out, value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:54","type":"CtBinaryOperatorImpl","sourcecode":"runtimeType != (type)"},"failures":[],"tindex":"7998fbc8-3e55-11e6-afa7-9bed095cd1e9","method":{"position":"com.google.gson.internal.$Gson$Types:226","type":"CtMethodImpl","sourcecode":"static java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type context, java.lang.Class<?> rawType, java.lang.Class<?> toResolve) {\n    if (toResolve == rawType) {\n        return context;\n    } \n    if (toResolve.isInterface()) {\n        java.lang.Class<?>[] java.lang.Class<?>[] = rawType.getInterfaces();\n        for (int int = 0, int int = interfaces.int ; i < length ; i++) {\n            if ((interfaces[i]) == toResolve) {\n                return rawType.getGenericInterfaces()[i];\n            } else if (toResolve.isAssignableFrom(interfaces[i])) {\n                return com.google.gson.internal.$Gson$Types.getGenericSupertype(rawType.getGenericInterfaces()[i], interfaces[i], toResolve);\n            } \n        }\n    } \n    if (!(rawType.isInterface())) {\n        while (rawType != (java.lang.Object.java.lang.Object.java.lang.Class)) {\n            java.lang.Class<?> java.lang.Class<?> = rawType.getSuperclass();\n            if (rawSupertype == toResolve) {\n                return rawType.getGenericSuperclass();\n            } else if (toResolve.isAssignableFrom(rawSupertype)) {\n                return com.google.gson.internal.$Gson$Types.getGenericSupertype(rawType.getGenericSuperclass(), rawSupertype, toResolve);\n            } \n            rawType = rawSupertype;\n        }\n    } \n    return toResolve;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"runtimeType":"context","type":"context"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:164","type":"CtBinaryOperatorImpl","sourcecode":"from instanceof java.lang.reflect.GenericArrayType"},"failures":[],"tindex":"7998fbc9-3e55-11e6-afa7-75889a300ed2","method":{"position":"com.google.gson.reflect.TypeToken:253","type":"CtMethodImpl","sourcecode":"private static java.lang.AssertionError buildUnexpectedTypeError(java.lang.reflect.Type token, java.lang.Class<?>... expected) {\n    if (token instanceof java.lang.reflect.GenericArrayType) {\n        {\n            java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(\"Unexpected type. Expected one of: \");\n            for (java.lang.Class<?> java.lang.Class<?> : expected) {\n                exceptionMessage.append(clazz.getName()).append(\", \");\n            }\n            exceptionMessage.append(\"but got: \").append(token.getClass().getName()).append(\", for type token: \").append(token.toString()).append('.');\n            return new java.lang.AssertionError(exceptionMessage.toString());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"token"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.stream.JsonReader:290","type":"CtBinaryOperatorImpl","sourcecode":"in == null"},"failures":[],"tindex":"7998fbca-3e55-11e6-afa7-6f986c628272","method":{"position":"com.google.gson.JsonParser:56","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement parse(java.io.Reader json) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException {\n    if (json == null) {\n        {\n            try {\n                com.google.gson.stream.JsonReader com.google.gson.stream.JsonReader = new com.google.gson.stream.JsonReader(json);\n                com.google.gson.JsonElement com.google.gson.JsonElement = parse(jsonReader);\n                if ((!(element.isJsonNull())) && ((jsonReader.peek()) != (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken))) {\n                    throw new com.google.gson.JsonSyntaxException(\"Did not consume the entire document.\");\n                } \n                return element;\n            } catch (com.google.gson.stream.MalformedJsonException e) {\n                throw new com.google.gson.JsonSyntaxException(e);\n            } catch (java.io.IOException e) {\n                throw new com.google.gson.JsonIOException(e);\n            } catch (java.lang.NumberFormatException e) {\n                throw new com.google.gson.JsonSyntaxException(e);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"in":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:163","type":"CtBinaryOperatorImpl","sourcecode":"a instanceof java.lang.Class"},"failures":[],"tindex":"799922db-3e55-11e6-afa7-0d3340bf8977","method":{"position":"com.google.gson.internal.LinkedTreeMap:605","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(java.lang.Object o) {\n    if (o != o) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (o instanceof java.lang.Class) {\n                {\n                    return containsKey(o);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:398","type":"CtBinaryOperatorImpl","sourcecode":"declaredByRaw == null"},"failures":[],"tindex":"799922dc-3e55-11e6-afa7-093512851eff","method":{"position":"com.google.gson.internal.$Gson$Types:267","type":"CtMethodImpl","sourcecode":"static java.lang.reflect.Type getSupertype(java.lang.reflect.Type context, java.lang.Class<?> contextRawType, java.lang.Class<?> supertype) {\n    com.google.gson.internal.$Gson$Preconditions.checkArgument(supertype.isAssignableFrom(contextRawType));\n    return com.google.gson.internal.$Gson$Types.resolve(context, contextRawType, com.google.gson.internal.$Gson$Types.getGenericSupertype(context, contextRawType, supertype));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"declaredByRaw":"contextRawType"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.TreeTypeAdapter:55","type":"CtInvocationImpl","sourcecode":"value.isJsonNull()"},"failures":[],"tindex":"799922dd-3e55-11e6-afa7-2d1c5e258a46","method":{"position":"com.google.gson.Gson:847","type":"CtMethodImpl","sourcecode":"public <T>T fromJson(com.google.gson.JsonElement json, java.lang.Class<T> classOfT) throws com.google.gson.JsonSyntaxException {\n    if (json.isBoolean()) {\n        {\n            if (json.isJsonNull()) {\n                {\n                    java.lang.Object java.lang.Object = fromJson(json, ((java.lang.reflect.Type)(classOfT)));\n                    return com.google.gson.internal.Primitives.wrap(classOfT).cast(object);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new com.google.gson.JsonSyntaxException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:491","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[200,206,237,242,247,248,269,458,465],"tindex":"799922de-3e55-11e6-afa7-3f109b3234f5","method":{"position":"com.google.gson.internal.bind.TypeAdapters:245","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            out.value(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:120","type":"CtBinaryOperatorImpl","sourcecode":"o instanceof com.google.gson.JsonNull"},"failures":[],"tindex":"799922df-3e55-11e6-afa7-c1fa075f9122","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:804","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(java.lang.Object o) {\n    if (o instanceof java.lang.reflect.GenericArrayType) {\n        {\n            if (o instanceof com.google.gson.JsonNull) {\n                {\n                    return (o instanceof java.util.Map.Entry) && ((findByEntry(((java.util.Map.Entry<?, ?>)(o)))) != null);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:462","type":"CtBinaryOperatorImpl","sourcecode":"(java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(value))"},"failures":[620,621,647],"tindex":"799922e0-3e55-11e6-afa7-153219d52ccc","method":{"position":"com.google.gson.stream.JsonWriter:461","type":"CtMethodImpl","sourcecode":"public com.google.gson.stream.JsonWriter value(double value) throws java.io.IOException {\n    if ((java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(value))) {\n        {\n            if ((java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(value))) {\n                throw new java.lang.IllegalArgumentException((\"Numeric values must be finite, but was \" + value));\n            } \n            writeDeferredName();\n            beforeValue(false);\n            java.io.Writer.append(java.lang.Double.toString(value));\n            return com.google.gson.stream.JsonWriter.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:233","type":"CtBinaryOperatorImpl","sourcecode":"annotation != null"},"failures":[667,668,669,60,61,62,63,65,66,68,69],"tindex":"799949f1-3e55-11e6-afa7-6f1ade6bdc27","method":{"position":"com.google.gson.internal.Excluder:232","type":"CtMethodImpl","sourcecode":"private boolean isValidSince(com.google.gson.annotations.Since annotation) {\n    if (annotation != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (annotation != null) {\n                double double = annotation.value();\n                if (annotationVersion > (double)) {\n                    return false;\n                } \n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"annotation":"annotation"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"799949f2-3e55-11e6-afa7-d1642653bbfd","method":{"position":"com.google.gson.internal.bind.TypeAdapters:736","type":"CtMethodImpl","sourcecode":"public T read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return java.util.Map<java.lang.String, T>.get(in.nextString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:76","type":"CtBinaryOperatorImpl","sourcecode":"(pendingName) != null"},"failures":[256,263,264,295,299,306],"tindex":"799949f3-3e55-11e6-afa7-db39331c92a7","method":{"position":"com.google.gson.GsonBuilder:382","type":"CtMethodImpl","sourcecode":"public com.google.gson.GsonBuilder setDateFormat(java.lang.String pattern) {\n    if (pattern != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.GsonBuilder.this.java.lang.String = pattern;\n            return com.google.gson.GsonBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pendingName":"pattern"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1358","type":"CtBinaryOperatorImpl","sourcecode":"((c == ' ') || (c == '\\r')) || (c == '\\t')"},"failures":[],"tindex":"799949f4-3e55-11e6-afa7-d3068f3bfc04","method":{"position":"com.google.gson.internal.Streams:93","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(int i) throws java.io.IOException {\n    if (((i == ' ') || (c == '\\r')) || (c == '\\t')) {\n        {\n            java.lang.Appendable.append(((char)(i)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"i"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1175","type":"CtBinaryOperatorImpl","sourcecode":"p == (com.google.gson.stream.JsonReader.PEEKED_LONG)"},"failures":[],"tindex":"799949f5-3e55-11e6-afa7-8986a7fccda6","method":{"position":"com.google.gson.internal.Streams:111","type":"CtMethodImpl","sourcecode":"public java.lang.CharSequence subSequence(int start, int end) {\n    if (start == start) {\n        {\n            return new java.lang.String(char[] , start , (end - start));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"start","com.google.gson.stream.JsonReader.PEEKED_LONG":"start"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:198","type":"CtBinaryOperatorImpl","sourcecode":"out == null"},"failures":[],"tindex":"79997106-3e55-11e6-afa7-8dba79025dae","method":{"position":"com.google.gson.Gson:644","type":"CtMethodImpl","sourcecode":"private com.google.gson.stream.JsonWriter newJsonWriter(java.io.Writer writer) throws java.io.IOException {\n    if (writer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (boolean) {\n                writer.write(com.google.gson.Gson.com.google.gson.Gson.java.lang.String);\n            } \n            com.google.gson.stream.JsonWriter com.google.gson.stream.JsonWriter = new com.google.gson.stream.JsonWriter(writer);\n            if (boolean) {\n                jsonWriter.setIndent(\"  \");\n            } \n            jsonWriter.setSerializeNulls(boolean);\n            return jsonWriter;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"out":"writer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.stream.JsonWriter:565","type":"CtBinaryOperatorImpl","sourcecode":"(indent) == null"},"failures":[],"tindex":"79997107-3e55-11e6-afa7-8f5783342958","method":{"position":"com.google.gson.JsonParser:44","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement parse(java.lang.String json) throws com.google.gson.JsonSyntaxException {\n    if (json == null) {\n        {\n            return parse(new java.io.StringReader(json));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"indent":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:122","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.ParameterizedType"},"failures":[],"tindex":"79997108-3e55-11e6-afa7-0feb74fea80d","method":{"position":"com.google.gson.internal.$Gson$Types:75","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type bound) {\n    return new com.google.gson.internal.$Gson$Types.WildcardTypeImpl(new java.lang.reflect.Type[]{ bound } , com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.java.lang.reflect.Type[]);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"bound"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:872","type":"CtBinaryOperatorImpl","sourcecode":"json == null"},"failures":[],"tindex":"79997109-3e55-11e6-afa7-4b70bfc094b8","method":{"position":"com.google.gson.DefaultDateTypeAdapter:94","type":"CtMethodImpl","sourcecode":"private java.util.Date deserializeToDate(com.google.gson.JsonElement json) {\n    if (json == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.text.DateFormat) {\n                try {\n                    return java.text.DateFormat.parse(json.getAsString());\n                } catch (java.text.ParseException ignored) {\n                }\n                try {\n                    return java.text.DateFormat.parse(json.getAsString());\n                } catch (java.text.ParseException ignored) {\n                }\n                try {\n                    return java.text.DateFormat.parse(json.getAsString());\n                } catch (java.text.ParseException e) {\n                    throw new com.google.gson.JsonSyntaxException(json.getAsString() , e);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:132","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.GenericArrayType"},"failures":[],"tindex":"7999710a-3e55-11e6-afa7-ef58682dd9ed","method":{"position":"com.google.gson.internal.$Gson$Types:411","type":"CtMethodImpl","sourcecode":"private static int indexOf(java.lang.Object[] array, java.lang.Object toFind) {\n    for (int int = 0 ; i < (array.int) ; i++) {\n        if (toFind.equals(array[i])) {\n            return i;\n        } \n    }\n    throw new java.util.NoSuchElementException();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"toFind"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.DefaultDateTypeAdapter:85","type":"CtBinaryOperatorImpl","sourcecode":"typeOfT == (java.sql.Timestamp.class)"},"failures":[4,40,43,44,45,183,190,197,269,292,293,309,315,329,330,371,407,408,409,410,411,435,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,513,564,565,585,586,587,591],"tindex":"7999710b-3e55-11e6-afa7-2126fc7316a7","method":{"position":"com.google.gson.internal.bind.MapTypeAdapterFactory:139","type":"CtMethodImpl","sourcecode":"private com.google.gson.TypeAdapter<?> getKeyAdapter(com.google.gson.Gson context, java.lang.reflect.Type keyType) {\n    if (keyType == keyType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (keyType == (boolean.boolean.java.lang.Class)) || (keyType == (java.lang.Boolean.java.lang.Boolean.java.lang.Class)) ? com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<java.lang.Boolean> : context.getAdapter(com.google.gson.reflect.TypeToken.get(keyType));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeOfT":"keyType","java.sql.Timestamp.class":"keyType"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"7999981c-3e55-11e6-afa7-63d292fee75a","method":{"position":"com.google.gson.internal.bind.ArrayTypeAdapter:63","type":"CtMethodImpl","sourcecode":"public java.lang.Object read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n    in.beginArray();\n    while (in.hasNext()) {\n        E E = com.google.gson.TypeAdapter<E>.read(in);\n        list.add(instance);\n    }\n    in.endArray();\n    java.lang.Object java.lang.Object = java.lang.reflect.Array.newInstance(java.lang.Class<E>, list.size());\n    for (int int = 0 ; i < (list.size()) ; i++) {\n        java.lang.reflect.Array.set(array, i, list.get(i));\n    }\n    return array;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"7999981d-3e55-11e6-afa7-6f75e4921f4a","method":{"position":"com.google.gson.internal.bind.TypeAdapters:397","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.math.BigInteger value) throws java.io.IOException {\n    out.value(value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:384","type":"CtVariableReadImpl","sourcecode":"insert"},"failures":[7,13,15,16,19,20,21,25,26,27,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,53,54,55,56,57,58,61,62,63,64,65,66,67,68,70,71,72,74,75,76,78,79,80,81,155,180,184,185,187,189,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,237,238,240,241,242,243,244,245,246,247,248,249,250,252,253,258,259,266,269,276,284,298,303,311,312,316,323,324,328,329,330,331,333,334,335,340,343,344,345,346,347,366,367,368,369,370,392,393,394,400,403,404,406,407,409,410,411,412,413,415,416,417,418,419,420,421,425,426,427,428,430,433,434,448,457,461,463,464,468,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,493,494,495,496,498,500,501,502,503,505,506,507,508,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,527,528,529,530,532,533,534,535,536,537,538,540,549,554,555,558,565,566,570,583,588,589,590],"tindex":"7999981e-3e55-11e6-afa7-1996cd63d9f9","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:62","type":"CtMethodImpl","sourcecode":"static boolean excludeField(java.lang.reflect.Field f, boolean serialize, com.google.gson.internal.Excluder excluder) {\n    if (serialize) {\n        {\n            return (!(excluder.excludeClass(f.getType(), serialize))) && (!(excluder.excludeField(f, serialize)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"insert":"serialize"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:429","type":"CtBinaryOperatorImpl","sourcecode":"(deferredName) != null"},"failures":[670,671,672,673,674,675,676,32,44,45,50,71,72,74,75,182,222,223,224,228,229,234,235,251,343,528,529,530,677,678],"tindex":"7999981f-3e55-11e6-afa7-e15f0efaf835","method":{"position":"com.google.gson.JsonObject:151","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement get(java.lang.String memberName) {\n    if (memberName != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.get(memberName);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"memberName"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:132","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.GenericArrayType"},"failures":[],"tindex":"7999bf30-3e55-11e6-afa7-73d406c82ee4","method":{"position":"com.google.gson.internal.$Gson$Types:287","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type context, java.lang.Class<?> contextRawType) {\n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.getSupertype(context, contextRawType, java.util.Collection.java.util.Collection.java.lang.Class);\n    if (collectionType instanceof java.lang.reflect.WildcardType) {\n        collectionType = ((java.lang.reflect.WildcardType)(collectionType)).getUpperBounds()[0];\n    } \n    if (collectionType instanceof java.lang.reflect.ParameterizedType) {\n        return ((java.lang.reflect.ParameterizedType)(collectionType)).getActualTypeArguments()[0];\n    } \n    return java.lang.Object.java.lang.Object.java.lang.Class;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"context"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:54","type":"CtBinaryOperatorImpl","sourcecode":"runtimeType != (type)"},"failures":[],"tindex":"7999bf31-3e55-11e6-afa7-d9ef01b69dce","method":{"position":"com.google.gson.internal.LinkedTreeMap:605","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(java.lang.Object o) {\n    if (o != o) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (o instanceof java.lang.Class) {\n                {\n                    return containsKey(o);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"runtimeType":"o","type":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.internal.$Gson$Types:136","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.TypeVariable"},"failures":[],"tindex":"7999bf32-3e55-11e6-afa7-17419be1bc4c","method":{"position":"com.google.gson.Gson:801","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic <T>T fromJson(com.google.gson.stream.JsonReader reader, java.lang.reflect.Type typeOfT) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException {\n    if (typeOfT instanceof java.lang.reflect.TypeVariable) {\n        {\n            boolean boolean = true;\n            boolean boolean = reader.isLenient();\n            reader.setLenient(true);\n            try {\n                reader.peek();\n                isEmpty = false;\n                com.google.gson.reflect.TypeToken<T> com.google.gson.reflect.TypeToken<T> = ((com.google.gson.reflect.TypeToken<T>)(com.google.gson.reflect.TypeToken.get(typeOfT)));\n                com.google.gson.TypeAdapter<T> com.google.gson.TypeAdapter<T> = getAdapter(typeToken);\n                T T = typeAdapter.read(reader);\n                return object;\n            } catch (java.io.EOFException e) {\n                if (isEmpty) {\n                    return null;\n                } \n                throw new com.google.gson.JsonSyntaxException(e);\n            } catch (java.lang.IllegalStateException e) {\n                throw new com.google.gson.JsonSyntaxException(e);\n            } catch (java.io.IOException e) {\n                throw new com.google.gson.JsonSyntaxException(e);\n            } finally {\n                reader.setLenient(oldLenient);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"typeOfT"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"7999bf33-3e55-11e6-afa7-d580d7a3b182","method":{"position":"com.google.gson.internal.bind.TypeAdapters:385","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.math.BigInteger read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        return new java.math.BigInteger(in.nextString());\n    } catch (java.lang.NumberFormatException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:290","type":"CtBinaryOperatorImpl","sourcecode":"collectionType instanceof java.lang.reflect.WildcardType"},"failures":[237,240,241,242,246,247,248,442,462,538,546,550],"tindex":"7999bf34-3e55-11e6-afa7-35a205fae84f","method":{"position":"com.google.gson.reflect.TypeToken:295","type":"CtMethodImpl","sourcecode":"public static com.google.gson.reflect.TypeToken<?> get(java.lang.reflect.Type type) {\n    if (type instanceof java.lang.reflect.WildcardType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new com.google.gson.reflect.TypeToken<java.lang.Object>(type);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collectionType":"type"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:176","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[269],"tindex":"7999e645-3e55-11e6-afa7-fd2459287b31","method":{"position":"com.google.gson.internal.bind.TypeAdapters:201","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            out.value(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"7999e646-3e55-11e6-afa7-e15303701a3b","method":{"position":"com.google.gson.internal.bind.TypeAdapters:397","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.math.BigInteger value) throws java.io.IOException {\n    out.value(value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"7999e647-3e55-11e6-afa7-673dd73fa69b","method":{"position":"com.google.gson.internal.bind.TypeAdapters:245","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            out.value(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:208","type":"CtBinaryOperatorImpl","sourcecode":"(peek()) == (com.google.gson.stream.JsonToken.NAME)"},"failures":[],"tindex":"7999e648-3e55-11e6-afa7-4d30a4d1a2f9","method":{"position":"com.google.gson.reflect.TypeToken:283","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic final boolean equals(java.lang.Object o) {\n    return (o instanceof com.google.gson.reflect.TypeToken<?>) && (com.google.gson.internal.$Gson$Types.equals(java.lang.reflect.Type, ((com.google.gson.reflect.TypeToken<?>)(o)).java.lang.reflect.Type));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"o","com.google.gson.stream.JsonToken.NAME":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"7999e649-3e55-11e6-afa7-0dd5307e4303","method":{"position":"com.google.gson.internal.bind.SqlDateTypeAdapter:64","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized void write(com.google.gson.stream.JsonWriter out, java.sql.Date value) throws java.io.IOException {\n    out.value((value == null ? null : java.text.DateFormat.format(value)));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:403","type":"CtBinaryOperatorImpl","sourcecode":"declaredBy instanceof java.lang.reflect.ParameterizedType"},"failures":[670,671,672,679,673,674,675,676,32,44,45,50,680,71,72,74,75,182,183,222,223,224,228,229,234,235,251,681,329,330,343,346,369,411,439,442,443,447,451,456,467,470,528,529,530,677,678,585,661,662,682,683,684,685,686,687],"tindex":"7999e64a-3e55-11e6-afa7-6137d016111d","method":{"position":"com.google.gson.internal.LinkedTreeMap:184","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\ncom.google.gson.internal.LinkedTreeMap.Node<K, V> findByObject(java.lang.Object key) {\n    if (key instanceof java.lang.reflect.ParameterizedType) {\n        {\n            try {\n                return key != null ? find(((K)(key)), false) : null;\n            } catch (java.lang.ClassCastException e) {\n                return null;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"declaredBy":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"7999e64b-3e55-11e6-afa7-33e3cc51d4fb","method":{"position":"com.google.gson.internal.bind.TypeAdapters:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Boolean read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return java.lang.Boolean.valueOf(in.nextString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:382","type":"CtBinaryOperatorImpl","sourcecode":"upperBound != (originalUpperBound[0])"},"failures":[],"tindex":"799a0d5c-3e55-11e6-afa7-05c3aface778","method":{"position":"com.google.gson.internal.LinkedTreeMap:207","type":"CtMethodImpl","sourcecode":"private boolean equal(java.lang.Object a, java.lang.Object b) {\n    if (a != (b[0])) {\n        {\n            return (a == b) || ((a != null) && (a.equals(b)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"originalUpperBound":"b","upperBound":"a"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:274","type":"CtVariableReadImpl","sourcecode":"serializeSpecialFloatingPointValues"},"failures":[7,13,15,16,19,20,21,25,26,27,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,53,54,55,56,57,58,61,62,63,64,65,66,67,68,70,71,72,74,75,76,78,79,80,81,155,180,184,185,187,189,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,237,238,240,241,242,243,244,245,246,247,248,249,250,252,253,258,259,266,269,276,284,298,303,311,312,316,323,324,328,329,330,331,333,334,335,340,343,344,345,346,347,366,367,368,369,370,392,393,394,400,403,404,406,407,409,410,411,412,413,415,416,417,418,419,420,421,425,426,427,428,430,433,434,448,457,461,463,464,468,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,493,494,495,496,498,500,501,502,503,505,506,507,508,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,527,528,529,530,532,533,534,535,536,537,538,540,549,554,555,558,565,566,570,583,588,589,590],"tindex":"799a0d5d-3e55-11e6-afa7-a7ee0c761e5a","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:58","type":"CtMethodImpl","sourcecode":"public boolean excludeField(java.lang.reflect.Field f, boolean serialize) {\n    if (serialize) {\n        {\n            return com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.excludeField(f, serialize, com.google.gson.internal.Excluder);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"serializeSpecialFloatingPointValues":"serialize"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:198","type":"CtBinaryOperatorImpl","sourcecode":"a instanceof java.lang.reflect.TypeVariable"},"failures":[],"tindex":"799a0d5e-3e55-11e6-afa7-61fca54958d2","method":{"position":"com.google.gson.internal.$Gson$Types:411","type":"CtMethodImpl","sourcecode":"private static int indexOf(java.lang.Object[] array, java.lang.Object toFind) {\n    for (int int = 0 ; i < (array.int) ; i++) {\n        if (toFind.equals(array[i])) {\n            return i;\n        } \n    }\n    throw new java.util.NoSuchElementException();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"toFind"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:136","type":"CtBinaryOperatorImpl","sourcecode":"(type) instanceof java.lang.reflect.GenericArrayType"},"failures":[],"tindex":"799a0d5f-3e55-11e6-afa7-2fe062b2874c","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:804","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(java.lang.Object o) {\n    if (o instanceof java.lang.reflect.GenericArrayType) {\n        {\n            if (o instanceof com.google.gson.JsonNull) {\n                {\n                    return (o instanceof java.util.Map.Entry) && ((findByEntry(((java.util.Map.Entry<?, ?>)(o)))) != null);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:167","type":"CtBinaryOperatorImpl","sourcecode":"a instanceof java.lang.reflect.ParameterizedType"},"failures":[],"tindex":"799a3470-3e55-11e6-afa7-13a4f59c745e","method":{"position":"com.google.gson.JsonArray:329","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object o) {\n    if (o instanceof java.lang.reflect.ParameterizedType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (o == (com.google.gson.JsonArray.this)) || ((o instanceof com.google.gson.JsonArray) && (((com.google.gson.JsonArray)(o)).java.util.List<com.google.gson.JsonElement>.equals(java.util.List<com.google.gson.JsonElement>)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"799a3471-3e55-11e6-afa7-bd120480bacd","method":{"position":"com.google.gson.internal.bind.TypeAdapters:85","type":"CtMethodImpl","sourcecode":"public java.util.BitSet read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    java.util.BitSet java.util.BitSet = new java.util.BitSet();\n    in.beginArray();\n    int int = 0;\n    com.google.gson.stream.JsonToken com.google.gson.stream.JsonToken = in.peek();\n    while (tokenType != (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        boolean boolean;\n        switch (tokenType) {\n            case NUMBER :\n                set = (in.nextInt()) != 0;\n                break;\n            case BOOLEAN :\n                set = in.nextBoolean();\n                break;\n            case STRING :\n                java.lang.String java.lang.String = in.nextString();\n                try {\n                    set = (java.lang.Integer.parseInt(stringValue)) != 0;\n                } catch (java.lang.NumberFormatException e) {\n                    throw new com.google.gson.JsonSyntaxException((\"Error: Expecting: bitset number value (1, 0), Found: \" + stringValue));\n                }\n                break;\n            default :\n                throw new com.google.gson.JsonSyntaxException((\"Invalid bitset value type: \" + tokenType));\n        }\n        if (set) {\n            bitset.set(i);\n        } \n        ++i;\n        tokenType = in.peek();\n    }\n    in.endArray();\n    return bitset;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.Streams:50","type":"CtVariableReadImpl","sourcecode":"isEmpty"},"failures":[344,345,346,347],"tindex":"799a3472-3e55-11e6-afa7-e32078ab422f","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:157","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic com.google.gson.stream.JsonWriter value(boolean value) throws java.io.IOException {\n    if (value) {\n        {\n            put(new com.google.gson.JsonPrimitive(value));\n            return com.google.gson.internal.bind.JsonTreeWriter.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isEmpty":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"799a3473-3e55-11e6-afa7-df9c66223b33","method":{"position":"com.google.gson.internal.bind.TypeAdapters:63","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Class value) throws java.io.IOException {\n    if (value == null) {\n        out.nullValue();\n    } else {\n        throw new java.lang.UnsupportedOperationException(((\"Attempted to serialize java.lang.Class: \" + (value.getName())) + \". Forgot to register a type adapter?\"));\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1079","type":"CtBinaryOperatorImpl","sourcecode":"builder == null"},"failures":[269],"tindex":"799a3474-3e55-11e6-afa7-e9bb03adb7e5","method":{"position":"com.google.gson.internal.bind.TypeAdapters:414","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.StringBuilder value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            out.value((value == null ? null : value.toString()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"builder":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.Excluder:99","type":"CtVariableReadImpl","sourcecode":"serialization"},"failures":[622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,592,637,620,621,638,639,640,641,642,643,644,645,646,647,648,649,650,651,7,13,15,16,17,18,19,594,595,22,23,30,31,33,35,36,37,38,39,40,41,42,43,46,47,48,51,54,57,58,652,596,653,654,655,656,657,658,659,61,64,65,68,70,597,598,76,78,80,81,93,105,114,148,162,169,174,179,181,185,186,187,189,190,193,197,200,202,204,206,207,208,209,210,212,213,214,217,219,225,226,227,232,233,235,237,239,240,241,242,243,244,246,247,248,250,253,599,263,601,272,275,282,284,286,287,293,296,298,303,312,316,317,318,319,320,323,325,328,329,330,331,332,333,334,335,336,340,343,345,356,374,375,377,378,379,380,381,384,385,386,390,392,394,396,398,400,401,402,403,404,405,406,407,410,411,412,417,419,422,425,426,428,429,430,433,436,440,441,444,446,448,453,454,455,458,459,461,462,463,464,465,466,468,469,471,474,475,476,479,480,481,484,487,490,606,493,495,500,502,503,504,506,510,512,513,515,520,521,522,523,525,528,530,533,534,535,536,537,538,539,540,541,545,546,547,548,549,552,555,556,558,559,563,564,565,566,567,568,569,570,583,608,588,589,660,590,591,612,613,614,616,617,618,619],"tindex":"799a5b85-3e55-11e6-afa7-7907bb94b692","method":{"position":"com.google.gson.stream.JsonWriter:599","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"fallthrough\")\nprivate void beforeValue(boolean root) throws java.io.IOException {\n    if (root) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            switch (peek()) {\n                case com.google.gson.stream.JsonScope.com.google.gson.stream.JsonScope.int :\n                    if (!(boolean)) {\n                        throw new java.lang.IllegalStateException(\"JSON must have only one top-level value.\");\n                    } \n                case com.google.gson.stream.JsonScope.com.google.gson.stream.JsonScope.int :\n                    if ((!(boolean)) && (!root)) {\n                        throw new java.lang.IllegalStateException(\"JSON must start with an array or an object.\");\n                    } \n                    replaceTop(com.google.gson.stream.JsonScope.com.google.gson.stream.JsonScope.int);\n                    break;\n                case com.google.gson.stream.JsonScope.com.google.gson.stream.JsonScope.int :\n                    replaceTop(com.google.gson.stream.JsonScope.com.google.gson.stream.JsonScope.int);\n                    newline();\n                    break;\n                case com.google.gson.stream.JsonScope.com.google.gson.stream.JsonScope.int :\n                    java.io.Writer.append(',');\n                    newline();\n                    break;\n                case com.google.gson.stream.JsonScope.com.google.gson.stream.JsonScope.int :\n                    java.io.Writer.append(java.lang.String);\n                    replaceTop(com.google.gson.stream.JsonScope.com.google.gson.stream.JsonScope.int);\n                    break;\n                default :\n                    throw new java.lang.IllegalStateException(\"Nesting problem.\");\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"serialization":"root"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"799a5b86-3e55-11e6-afa7-05188b5f5ac7","method":{"position":"com.google.gson.internal.bind.TypeAdapters:289","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return in.nextDouble();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"799a5b87-3e55-11e6-afa7-bd4a8150fed2","method":{"position":"com.google.gson.internal.bind.TypeAdapters:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Boolean read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return java.lang.Boolean.valueOf(in.nextString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:430","type":"CtFieldReadImpl","sourcecode":"serializeNulls"},"failures":[49,53,54,55],"tindex":"799a5b88-3e55-11e6-afa7-03838a76f2af","method":{"position":"com.google.gson.internal.Excluder:96","type":"CtMethodImpl","sourcecode":"public com.google.gson.internal.Excluder withExclusionStrategy(com.google.gson.ExclusionStrategy exclusionStrategy, boolean serialization, boolean deserialization) {\n    if (serialization) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.Excluder com.google.gson.internal.Excluder = clone();\n            if (serialization) {\n                result.java.util.List<com.google.gson.ExclusionStrategy> = new java.util.ArrayList<com.google.gson.ExclusionStrategy>(java.util.List<com.google.gson.ExclusionStrategy>);\n                result.java.util.List<com.google.gson.ExclusionStrategy>.add(exclusionStrategy);\n            } \n            if (deserialization) {\n                result.java.util.List<com.google.gson.ExclusionStrategy> = new java.util.ArrayList<com.google.gson.ExclusionStrategy>(java.util.List<com.google.gson.ExclusionStrategy>);\n                result.java.util.List<com.google.gson.ExclusionStrategy>.add(exclusionStrategy);\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"serializeNulls":"serialization"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:113","type":"CtInvocationImpl","sourcecode":"primitive.isBoolean()"},"failures":[],"tindex":"799a8299-3e55-11e6-afa7-bb4b1dc80a4f","method":{"position":"com.google.gson.Gson:847","type":"CtMethodImpl","sourcecode":"public <T>T fromJson(com.google.gson.JsonElement json, java.lang.Class<T> classOfT) throws com.google.gson.JsonSyntaxException {\n    if (json.isBoolean()) {\n        {\n            if (json.isJsonNull()) {\n                {\n                    java.lang.Object java.lang.Object = fromJson(json, ((java.lang.reflect.Type)(classOfT)));\n                    return com.google.gson.internal.Primitives.wrap(classOfT).cast(object);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new com.google.gson.JsonSyntaxException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"primitive":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.JsonPrimitive:316","type":"CtBinaryOperatorImpl","sourcecode":"(com.google.gson.JsonPrimitive.isIntegral(com.google.gson.JsonPrimitive.this)) && (com.google.gson.JsonPrimitive.isIntegral(other))"},"failures":[],"tindex":"799a829a-3e55-11e6-afa7-7f1754a1ad63","method":{"position":"com.google.gson.internal.bind.TypeAdapters:680","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, com.google.gson.JsonElement value) throws java.io.IOException {\n    if ((value == null) || (value.isJsonNull())) {\n        out.nullValue();\n    } else if (value.isJsonPrimitive()) {\n        com.google.gson.JsonPrimitive com.google.gson.JsonPrimitive = value.getAsJsonPrimitive();\n        if (primitive.isNumber()) {\n            out.value(primitive.getAsNumber());\n        } else if (primitive.isBoolean()) {\n            out.value(primitive.getAsBoolean());\n        } else {\n            out.value(primitive.getAsString());\n        }\n    } else if (value.isJsonArray()) {\n        out.beginArray();\n        for (com.google.gson.JsonElement com.google.gson.JsonElement : value.getAsJsonArray()) {\n            write(out, e);\n        }\n        out.endArray();\n    } else if (value.isJsonObject()) {\n        out.beginObject();\n        for (java.util.Map.Entry<java.lang.String, com.google.gson.JsonElement> java.util.Map.Entry<java.lang.String, com.google.gson.JsonElement> : value.getAsJsonObject().entrySet()) {\n            out.name(e.getKey());\n            write(out, e.getValue());\n        }\n        out.endObject();\n    } else {\n        throw new java.lang.IllegalArgumentException((\"Couldn't write \" + (value.getClass())));\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"other":"value","this":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"799a829b-3e55-11e6-afa7-5f72b0aeb1be","method":{"position":"com.google.gson.internal.bind.SqlDateTypeAdapter:50","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized java.sql.Date read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        final long long = java.text.DateFormat.parse(in.nextString()).getTime();\n        return new java.sql.Date(utilDate);\n    } catch (java.text.ParseException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1079","type":"CtBinaryOperatorImpl","sourcecode":"builder == null"},"failures":[],"tindex":"799a829c-3e55-11e6-afa7-5b386a8a4b4f","method":{"position":"com.google.gson.JsonNull:60","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object other) {\n    if (other == null) {\n        {\n            if ((other instanceof java.lang.reflect.ParameterizedType) && (!(other.isAssignableFrom(com.google.gson.reflect.TypeToken.get(((java.lang.reflect.ParameterizedType)(type)).getActualTypeArguments()[0]).getRawType())))) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return ((com.google.gson.JsonNull.this) == other) || (other instanceof com.google.gson.JsonNull);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"builder":"other"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:111","type":"CtInvocationImpl","sourcecode":"primitive.isString()"},"failures":[],"tindex":"799a829d-3e55-11e6-afa7-6bdd35bdf00e","method":{"position":"com.google.gson.internal.bind.MapTypeAdapterFactory:245","type":"CtMethodImpl","sourcecode":"private java.lang.String keyToString(com.google.gson.JsonElement keyElement) {\n    if (keyElement.isString()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (keyElement.isJsonPrimitive()) {\n                com.google.gson.JsonPrimitive com.google.gson.JsonPrimitive = keyElement.getAsJsonPrimitive();\n                if (primitive.isNumber()) {\n                    return java.lang.String.valueOf(primitive.getAsNumber());\n                } else if (primitive.isBoolean()) {\n                    return java.lang.Boolean.toString(primitive.getAsBoolean());\n                } else if (primitive.isString()) {\n                    return primitive.getAsString();\n                } else {\n                    throw new java.lang.AssertionError();\n                }\n            } else if (keyElement.isJsonNull()) {\n                return \"null\";\n            } else {\n                throw new java.lang.AssertionError();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"primitive":"keyElement"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"799aa9ae-3e55-11e6-afa7-f5e177ef97c1","method":{"position":"com.google.gson.internal.bind.TypeAdapters:424","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.StringBuffer read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return new java.lang.StringBuffer(in.nextString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.Gson:720","type":"CtBinaryOperatorImpl","sourcecode":"json == null"},"failures":[],"tindex":"799aa9af-3e55-11e6-afa7-091f0547a0bc","method":{"position":"com.google.gson.Gson:695","type":"CtMethodImpl","sourcecode":"public <T>T fromJson(java.lang.String json, java.lang.Class<T> classOfT) throws com.google.gson.JsonSyntaxException {\n    if (json == null) {\n        {\n            java.lang.Object java.lang.Object = fromJson(json, ((java.lang.reflect.Type)(classOfT)));\n            return com.google.gson.internal.Primitives.wrap(classOfT).cast(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.DefaultDateTypeAdapter:79","type":"CtUnaryOperatorImpl","sourcecode":"!(json instanceof com.google.gson.JsonPrimitive)"},"failures":[],"tindex":"799aa9b0-3e55-11e6-afa7-1db822633dd4","method":{"position":"com.google.gson.Gson:133","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement serialize(java.lang.Object src) {\n    if (!(src instanceof com.google.gson.JsonPrimitive)) {\n        {\n            return toJsonTree(src);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:111","type":"CtInvocationImpl","sourcecode":"primitive.isString()"},"failures":[],"tindex":"799aa9b1-3e55-11e6-afa7-115352fcdb93","method":{"position":"com.google.gson.JsonPrimitive:93","type":"CtMethodImpl","sourcecode":"void setValue(java.lang.Object primitive) {\n    if (primitive.isString()) {\n        {\n            if (primitive instanceof java.lang.Character) {\n                char char = ((java.lang.Character)(primitive)).charValue();\n                com.google.gson.JsonPrimitive.this.java.lang.Object = java.lang.String.valueOf(c);\n            } else {\n                com.google.gson.internal.$Gson$Preconditions.checkArgument(((primitive instanceof java.lang.Number) || (com.google.gson.JsonPrimitive.isPrimitiveOrString(primitive))));\n                com.google.gson.JsonPrimitive.this.java.lang.Object = primitive;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"primitive":"primitive"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:106","type":"CtBinaryOperatorImpl","sourcecode":"element instanceof com.google.gson.JsonArray"},"failures":[7,13,15,17,18,22,23,30,31,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,54,57,58,652,596,653,654,655,656,657,658,659,61,64,65,68,70,71,72,74,75,76,80,81,105,114,148,162,169,174,179,181,185,187,189,190,197,200,202,206,207,208,209,210,212,213,214,217,219,222,223,224,225,226,227,228,229,232,233,234,235,237,240,241,242,243,244,246,247,248,250,253,263,275,284,293,296,298,303,312,316,317,318,319,320,323,325,328,329,330,331,332,333,334,335,340,343,344,345,346,347,356,374,375,377,379,380,381,384,385,386,390,392,394,396,398,400,401,402,403,404,405,406,407,410,411,412,417,419,422,425,426,428,430,433,440,441,444,446,448,453,454,455,458,459,461,462,463,464,465,466,468,471,474,475,476,479,480,481,484,487,490,493,495,500,502,503,506,510,512,513,515,520,521,522,523,525,528,530,533,534,535,536,537,538,539,540,541,545,546,547,548,549,552,555,556,558,559,563,564,565,566,567,568,569,570,583,585,588,589,590,591],"tindex":"799aa9b2-3e55-11e6-afa7-cfdf540d8303","method":{"position":"com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:74","type":"CtMethodImpl","sourcecode":"private java.lang.reflect.Type getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type type, java.lang.Object value) {\n    if (value instanceof com.google.gson.JsonArray) {\n        {\n            if ((value != null) && (((type == (java.lang.Object.java.lang.Object.java.lang.Class)) || (type instanceof java.lang.reflect.TypeVariable<?>)) || (type instanceof java.lang.Class<?>))) {\n                type = value.getClass();\n            } \n            return type;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"799ad0c3-3e55-11e6-afa7-0faddca2a9cd","method":{"position":"com.google.gson.internal.bind.TypeAdapters:255","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        return in.nextLong();\n    } catch (java.lang.NumberFormatException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"799ad0c4-3e55-11e6-afa7-957452de5c38","method":{"position":"com.google.gson.Gson:278","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Float read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return ((float)(in.nextDouble()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"799ad0c5-3e55-11e6-afa7-61b1b1e16b31","method":{"position":"com.google.gson.internal.bind.TypeAdapters:63","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Class value) throws java.io.IOException {\n    if (value == null) {\n        out.nullValue();\n    } else {\n        throw new java.lang.UnsupportedOperationException(((\"Attempted to serialize java.lang.Class: \" + (value.getName())) + \". Forgot to register a type adapter?\"));\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.GsonBuilder:554","type":"CtBinaryOperatorImpl","sourcecode":"(datePattern != null) && (!(\"\".equals(datePattern.trim())))"},"failures":[],"tindex":"799ad0c6-3e55-11e6-afa7-bbc4d6453e1b","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:512","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"rawtypes\")\n@java.lang.Override\npublic boolean equals(java.lang.Object o) {\n    if ((o != null) && (!(\"\".equals(datePattern.trim())))) {\n        {\n            if (o instanceof java.util.Map.Entry) {\n                java.util.Map.Entry java.util.Map.Entry = ((java.util.Map.Entry)(o));\n                return ((K) == null ? (other.getKey()) == null : K.equals(other.getKey())) && ((V) == null ? (other.getValue()) == null : V.equals(other.getValue()));\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"datePattern":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:103","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.GenericArrayType"},"failures":[],"tindex":"799ad0c7-3e55-11e6-afa7-8fae7519ac2e","method":{"position":"com.google.gson.internal.LinkedTreeMap:276","type":"CtMethodImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V> removeInternalByKey(java.lang.Object key) {\n    if (key instanceof java.lang.reflect.GenericArrayType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = findByObject(key);\n            if (node != null) {\n                removeInternal(node, true);\n            } \n            return node;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.reflect.TypeToken:136","type":"CtBinaryOperatorImpl","sourcecode":"(type) instanceof java.lang.reflect.GenericArrayType"},"failures":[70,331,333,334,335,377,392,441,495,539,549,555,558,660,590,591],"tindex":"799af7d8-3e55-11e6-afa7-c7c489822eac","method":{"position":"com.google.gson.internal.bind.ObjectTypeAdapter:94","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Object value) throws java.io.IOException {\n    if (value instanceof java.lang.reflect.GenericArrayType) {\n        {\n            if (value == null) {\n                out.nullValue();\n                return ;\n            } \n            com.google.gson.TypeAdapter<java.lang.Object> com.google.gson.TypeAdapter<java.lang.Object> = ((com.google.gson.TypeAdapter<java.lang.Object>)(com.google.gson.Gson.getAdapter(value.getClass())));\n            if (typeAdapter instanceof com.google.gson.internal.bind.ObjectTypeAdapter) {\n                out.beginObject();\n                out.endObject();\n                return ;\n            } \n            typeAdapter.write(out, value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:491","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"799af7d9-3e55-11e6-afa7-a50e4c6de78c","method":{"position":"com.google.gson.internal.bind.TypeAdapters:297","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            out.value(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonElement:103","type":"CtInvocationImpl","sourcecode":"isJsonArray()"},"failures":[],"tindex":"799af7da-3e55-11e6-afa7-b379c0026ac1","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:843","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(java.lang.Object key) {\n    return (removeInternalByKey(key)) != null;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:280","type":"CtInvocationImpl","sourcecode":"standardPrimitive.isAssignableFrom(classOfPrimitive)"},"failures":[0,1,2,7,9,10,11,13,15,16,19,20,21,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,57,58,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,78,79,80,81,84,86,91,92,94,95,96,103,108,109,112,116,118,119,121,128,133,134,136,137,138,139,146,147,149,152,155,156,164,165,168,171,177,180,182,184,185,187,188,189,194,196,198,200,201,202,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,256,681,258,259,260,262,688,264,266,267,268,269,270,276,278,281,283,284,285,287,689,290,291,292,294,297,298,299,301,303,304,305,690,308,310,311,312,313,314,316,319,320,322,323,324,326,328,329,330,331,333,334,335,336,337,339,340,341,343,344,345,346,347,348,350,352,354,355,357,359,360,361,363,364,366,367,368,369,370,382,383,387,389,391,392,393,394,395,397,399,400,402,403,404,405,406,407,409,410,411,412,413,415,416,417,418,419,420,421,423,425,426,427,428,430,432,433,434,437,448,457,461,463,464,468,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,493,494,495,691,496,498,500,501,502,503,505,506,507,508,509,692,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,540,549,553,554,555,558,560,565,566,570,571,572,573,574,575,576,577,578,579,580,582,583,588,589,590],"tindex":"799af7db-3e55-11e6-afa7-d736b0947870","method":{"position":"com.google.gson.internal.Primitives:60","type":"CtMethodImpl","sourcecode":"private static void add(java.util.Map<java.lang.Class<?>, java.lang.Class<?>> forward, java.util.Map<java.lang.Class<?>, java.lang.Class<?>> backward, java.lang.Class<?> key, java.lang.Class<?> value) {\n    if (value.isAssignableFrom(key)) {\n        {\n            forward.put(key, value);\n            backward.put(value, key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"standardPrimitive":"value","classOfPrimitive":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl","sourcecode":"field.isSynthetic()"},"failures":[7,13,15,16,19,20,21,25,26,27,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,53,54,55,56,57,58,61,62,63,64,65,66,67,68,70,71,72,74,75,76,78,79,80,81,155,180,184,185,187,189,200,202,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,237,238,240,241,242,243,244,245,246,247,248,249,250,252,253,258,259,266,269,276,284,298,303,311,312,316,323,324,328,329,330,331,333,334,335,340,343,344,345,346,347,366,367,368,369,370,392,393,394,400,403,404,406,407,409,410,411,412,413,415,416,417,418,419,420,421,425,426,427,428,430,433,434,448,457,461,463,464,468,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,493,494,495,496,498,500,501,502,503,505,506,507,508,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,527,528,529,530,532,533,534,535,536,537,538,540,549,554,555,558,565,566,570,583,588,589,590],"tindex":"799b1eec-3e55-11e6-afa7-19e74e66d2ca","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:70","type":"CtMethodImpl","sourcecode":"static java.lang.String getFieldName(com.google.gson.FieldNamingStrategy fieldNamingPolicy, java.lang.reflect.Field f) {\n    if (f.isSynthetic()) {\n        {\n            com.google.gson.annotations.SerializedName com.google.gson.annotations.SerializedName = f.getAnnotation(com.google.gson.annotations.SerializedName.com.google.gson.annotations.SerializedName.java.lang.Class);\n            return serializedName == null ? fieldNamingPolicy.translateName(f) : serializedName.value();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"f"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"799b1eed-3e55-11e6-afa7-09f3ec3da60c","method":{"position":"com.google.gson.internal.bind.TypeAdapters:451","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.net.URL value) throws java.io.IOException {\n    out.value((value == null ? null : value.toExternalForm()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:315","type":"CtBinaryOperatorImpl","sourcecode":"mapType instanceof java.lang.reflect.ParameterizedType"},"failures":[693],"tindex":"799b1eee-3e55-11e6-afa7-37f7d2352166","method":{"position":"com.google.gson.reflect.TypeToken:272","type":"CtMethodImpl","sourcecode":"private static boolean matches(java.lang.reflect.Type from, java.lang.reflect.Type to, java.util.Map<java.lang.String, java.lang.reflect.Type> typeMap) {\n    if (to instanceof java.lang.reflect.ParameterizedType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (to.equals(from)) || ((from instanceof java.lang.reflect.TypeVariable) && (to.equals(typeMap.get(((java.lang.reflect.TypeVariable<?>)(from)).getName()))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mapType":"to"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1362","type":"CtBinaryOperatorImpl","sourcecode":"c == '/'"},"failures":[],"tindex":"799b1eef-3e55-11e6-afa7-f936a65d4d55","method":{"position":"com.google.gson.internal.Streams:88","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(char[] chars, int offset, int length) throws java.io.IOException {\n    if (offset == '/') {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            com.google.gson.internal.Streams.AppendableWriter.CurrentWrite.char[] = chars;\n            java.lang.Appendable.append(com.google.gson.internal.Streams.AppendableWriter.CurrentWrite, offset, (offset + length));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"offset"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:153","type":"CtBinaryOperatorImpl","sourcecode":"(token != (com.google.gson.stream.JsonToken.STRING)) && (token != (com.google.gson.stream.JsonToken.NUMBER))"},"failures":[],"tindex":"799b1ef0-3e55-11e6-afa7-89c151841f07","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:223","type":"CtMethodImpl","sourcecode":"private boolean equal(java.lang.Object a, java.lang.Object b) {\n    if ((a != b) && (token != b)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973010/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (a == b) || ((a != null) && (a.equals(b)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"com.google.gson.stream.JsonToken.STRING":"b","token":"a","com.google.gson.stream.JsonToken.NUMBER":"b"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"799b4601-3e55-11e6-afa7-a5521a27a5e6","method":{"position":"com.google.gson.internal.Excluder:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic T read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if (skipDeserialize) {\n        in.skipValue();\n        return null;\n    } \n    return delegate().read(in);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":100,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}