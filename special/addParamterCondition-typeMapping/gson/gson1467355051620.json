{"failureDictionary":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":386,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":62,"com.google.gson.stream.JsonWriterTest.testPrettyPrintObject":364,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":129,"com.google.gson.stream.JsonWriterTest.testRepeatedName":356,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":155,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":461,"com.google.gson.MixedStreamTest.testWriteLenient":4,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":430,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":444,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":190,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":494,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":130,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":140,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":443,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":153,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":209,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":93,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":423,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":479,"com.google.gson.functional.ObjectTest.testSingletonLists":212,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":186,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":210,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":63,"com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue":345,"com.google.gson.stream.JsonWriterTest.testStrings":377,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator":507,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":298,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization":493,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":451,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":8,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeRecursive":84,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":400,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":70,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":53,"com.google.gson.stream.JsonWriterTest.testMultipleTopLevelValues":369,"com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization":499,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":515,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":32,"com.google.gson.functional.EnumTest.testEnumCaseMapping":152,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":12,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":61,"com.google.gson.functional.JsonTreeTest.testToJsonTree":395,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":58,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":393,"com.google.gson.stream.JsonWriterTest.testNulls":353,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":106,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":169,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullField":81,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":332,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":137,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":303,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":449,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization":252,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":382,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":221,"com.google.gson.JsonArrayTest.testEqualsOnEmptyArray":398,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":30,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":279,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":454,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":381,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":91,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":200,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":319,"com.google.gson.stream.JsonWriterTest.testValueWithoutName":365,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization":492,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullObject":82,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":244,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArrayDeserialization":397,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":44,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":227,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":185,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":431,"com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree":420,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":314,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":342,"com.google.gson.internal.bind.JsonTreeWriterTest.testLenientNansAndInfinities":18,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":467,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":127,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":245,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":40,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":226,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":15,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":25,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnFlush":372,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":447,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":159,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":406,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":441,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":292,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":100,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":484,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":503,"com.google.gson.stream.JsonWriterTest.testEmptyArray":346,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":189,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":487,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":180,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":410,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":278,"com.google.gson.JsonArrayTest.testEqualsNonEmptyArray":399,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":472,"com.google.gson.functional.CollectionTest.testSetDeserialization":426,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":94,"com.google.gson.functional.EnumTest.testEnumSet":146,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":217,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":101,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":281,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":111,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":222,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":99,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":383,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":412,"com.google.gson.stream.JsonWriterTest.testBadNestingArray":368,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":27,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":301,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":248,"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":26,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization":500,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":265,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":308,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":340,"com.google.gson.functional.MapTest.testMapSerialization":116,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":267,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":414,"com.google.gson.functional.MapTest.testSerializeMaps":110,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":204,"com.google.gson.functional.MapTest.testComplexKeysSerialization":125,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsFalse":17,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":51,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":305,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":427,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":339,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":476,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriter":299,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":56,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":156,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":283,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":255,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":128,"com.google.gson.functional.PrettyPrintingTest.testMap":54,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":326,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":133,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":166,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":268,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls":508,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":7,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeMap":83,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":67,"com.google.gson.functional.MapTest.testMapSerializationEmpty":126,"com.google.gson.functional.CollectionTest.testQueueSerialization":134,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":177,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnValue":373,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnName":375,"com.google.gson.functional.MapTest.testMapOfMapSerialization":115,"com.google.gson.stream.JsonWriterTest.testNameWithoutValue":348,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":241,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":264,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":289,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":64,"com.google.gson.functional.FieldNamingTest.testIdentity":205,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":504,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":273,"com.google.gson.stream.JsonWriterTest.testStrictWriterDoesNotPermitMultipleTopLevelValues":359,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":456,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":158,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":211,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":496,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":518,"com.google.gson.stream.JsonWriterTest.testDeepNestingArrays":351,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":384,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":65,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":502,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization":239,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":434,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":380,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":178,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullJsonElementSerialization":199,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":263,"com.google.gson.functional.MapTest.testMapSubclassSerialization":109,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":407,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":207,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":425,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":1,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":85,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":328,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":432,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":471,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":98,"com.google.gson.functional.EnumTest.testEnumSubclass":149,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization":242,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":9,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":450,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization":231,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":276,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":282,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":473,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":161,"com.google.gson.stream.JsonWriterTest.testWriterCloseIsIdempotent":360,"com.google.gson.stream.JsonWriterTest.testTwoNames":347,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":435,"com.google.gson.stream.JsonWriterTest.testNullName":354,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":389,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":379,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization":238,"com.google.gson.stream.JsonWriterTest.testBadNestingObject":362,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":429,"com.google.gson.stream.JsonWriterTest.testObjectsInArrays":358,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":194,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":442,"com.google.gson.MixedStreamTest.testWriteNulls":2,"com.google.gson.functional.MapTest.testMapSubclassDeserialization":489,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":46,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnStructure":357,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":42,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":304,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":422,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":213,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":286,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":480,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":272,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":486,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":66,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":118,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSubTypeFirstAllowed":485,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":90,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":105,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":196,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":254,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":74,"com.google.gson.ObjectTypeAdapterTest.testSerializeObject":343,"com.google.gson.JsonParserTest.testParseMixedArray":16,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":233,"com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash":516,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":269,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":262,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":183,"com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization":249,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":179,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":59,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":108,"com.google.gson.JsonPrimitiveTest.testValidJsonOnToString":11,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":478,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":112,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":295,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":334,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":331,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":477,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":307,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":437,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization":220,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":228,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":310,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":329,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":390,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":170,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":424,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":160,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":315,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":55,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":117,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":198,"com.google.gson.functional.PrimitiveTest.testShortSerialization":253,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":506,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":336,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":34,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":246,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":172,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":201,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":148,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":132,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":206,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":144,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":256,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":433,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedArray":22,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":481,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization":491,"com.google.gson.internal.bind.JsonTreeWriterTest.testObject":20,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":409,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization":259,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":78,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":157,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":229,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":468,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":470,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsTrue":23,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":86,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":162,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":462,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":413,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":284,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":459,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":446,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":151,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":154,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":311,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":138,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":324,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives":505,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":330,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":184,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":335,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":174,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":341,"com.google.gson.stream.JsonWriterTest.testNullStringValue":350,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":337,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":391,"com.google.gson.functional.PrimitiveTest.testNumberSerialization":240,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":257,"com.google.gson.stream.JsonWriterTest.testEmptyObject":367,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":35,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":147,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":333,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":465,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":415,"com.google.gson.functional.MapTest.testGeneralMapField":122,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":445,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":39,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":48,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":277,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":325,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":191,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":120,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":163,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":232,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":318,"com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization":247,"com.google.gson.MixedStreamTest.testReadMixedStreamed":408,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":236,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":141,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":385,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":482,"com.google.gson.stream.JsonWriterTest.testNonFiniteDoubles":370,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":440,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":33,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":411,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":182,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":107,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":258,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":287,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":73,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":88,"com.google.gson.stream.JsonWriterTest.testArraysInObjects":355,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedObject":21,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":181,"com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeNullField":418,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":274,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization":511,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":291,"com.google.gson.functional.ObjectTest.testNestedDeserialization":460,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":71,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":225,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":463,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":388,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":31,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":271,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":490,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":97,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":251,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":509,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":498,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":143,"com.google.gson.functional.ObjectTest.testNullSerialization":218,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":313,"com.google.gson.stream.JsonWriterTest.testDoubles":374,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":121,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":405,"com.google.gson.functional.MapTest.testInterfaceTypeMap":119,"com.google.gson.stream.JsonWriterTest.testNonFiniteBoxedDoubles":371,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":327,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":294,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":77,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":150,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":475,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":164,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":29,"com.google.gson.MixedStreamTest.testWriteClosed":6,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":136,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":464,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":214,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":469,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":102,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":293,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":517,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":230,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":270,"com.google.gson.stream.JsonWriterTest.testLongs":352,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":197,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":215,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":296,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":135,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":402,"com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeWithCustomTypeAdapter":417,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":89,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":474,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":139,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":187,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":501,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":260,"com.google.gson.stream.JsonWriterTest.testNumbers":376,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":235,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":394,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":37,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":306,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":387,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":237,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization":266,"com.google.gson.functional.StreamingTypeAdaptersTest.testDeserialize":421,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":195,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":403,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":113,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":455,"com.google.gson.stream.JsonWriterTest.testDeepNestingObjects":366,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":176,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":320,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":458,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":131,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":0,"com.google.gson.functional.MapTest.testRawMapSerialization":124,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize":79,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":223,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":309,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":416,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":338,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":396,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":41,"com.google.gson.functional.PrimitiveTest.testByteSerialization":250,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":297,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":322,"com.google.gson.ObjectTypeAdapterTest.testSerialize":344,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":316,"com.google.gson.JsonPrimitiveTest.testEqualsIntegerAndBigInteger":10,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":495,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":47,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":202,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":103,"com.google.gson.GsonTypeAdapterTest.testDefaultTypeAdapterThrowsParseException":514,"com.google.gson.functional.MapTest.testMapWithQuotes":114,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":167,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":280,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":512,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":290,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":145,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":165,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":92,"com.google.gson.stream.JsonWriterTest.testLenientWriterPermitsMultipleTopLevelValues":361,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":510,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":95,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":457,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":60,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":173,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":243,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":50,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":448,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":192,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":168,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":87,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":175,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":497,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriterAndSerializeNulls":300,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":38,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":96,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":193,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":312,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":275,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization":404,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":208,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":488,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize2dArray":76,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":288,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":452,"com.google.gson.functional.ObjectTest.testNestedSerialization":224,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":36,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":234,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":317,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":72,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":123,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":75,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":52,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":5,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":14,"com.google.gson.stream.JsonWriterTest.testUnicodeLineBreaksEscaped":378,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":219,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":392,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":439,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":438,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":13,"com.google.gson.GsonBuilderTest.testCreatingMoreThanOnce":513,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":436,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":453,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":401,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize1dArray":80,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":68,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":45,"com.google.gson.functional.CollectionTest.testSetSerialization":142,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":466,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":57,"com.google.gson.functional.StringTest.testStringValueSerialization":69,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":285,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":321,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":261,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":428,"com.google.gson.MixedStreamTest.testWriteInvalidState":3,"com.google.gson.functional.ObjectTest.testJsonObjectSerialization":216,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":49,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":24,"com.google.gson.stream.JsonWriterTest.testBooleans":349,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":171,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":203,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":302,"com.google.gson.internal.bind.JsonTreeWriterTest.testArray":19,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":28,"com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeNullObject":419,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":104,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullSerialization":188,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":323,"com.google.gson.stream.JsonWriterTest.testPrettyPrintArray":363,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":43,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType":483},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:204","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"49a1b35c-3f56-11e6-903f-318eadc72525","method":{"position":"com.google.gson.internal.$Gson$Types:471","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object other) {\n    return (other instanceof java.lang.reflect.ParameterizedType) && (com.google.gson.internal.$Gson$Types.equals(com.google.gson.internal.$Gson$Types.ParameterizedTypeImpl.this, ((java.lang.reflect.ParameterizedType)(other))));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ptype":"other"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl"},"failures":[],"tindex":"49a2288d-3f56-11e6-903f-23e78b25aebe","method":{"position":"com.google.gson.FieldNamingPolicy:37","type":"CtMethodImpl","sourcecode":"public java.lang.String translateName(java.lang.reflect.Field f) {\n    if (f.isSynthetic()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467354020759/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return f.getName();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"f"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.GsonBuilder:554","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"49a2288e-3f56-11e6-903f-df8cd27ae4f5","method":{"position":"com.google.gson.JsonObject:100","type":"CtMethodImpl","sourcecode":"public void addProperty(java.lang.String property, java.lang.Boolean value) {\n    if ((property != null) && (!(\"\".equals(datePattern.trim())))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467354020759/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            add(property, createJsonElement(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"datePattern":"property"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:392","type":"CtBinaryOperatorImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385],"tindex":"49a24f9f-3f56-11e6-903f-bb2f1b9ce17e","method":{"position":"com.google.gson.stream.JsonWriter:375","type":"CtMethodImpl","sourcecode":"private void replaceTop(int topOfStack) {\n    if (topOfStack == 0) {\n        {\n            int[][((int) - 1)] = topOfStack;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467354020759/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"stackSize":"topOfStack"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:198","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"49a276b0-3f56-11e6-903f-af7bee20e123","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467354020759/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = findByObject(key);\n            return node != null ? node.V : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"out":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:414","type":"CtBinaryOperatorImpl"},"failures":[0,1,5,15,24,25,35,36,37,38,41,42,44,45,47,48,50,52,56,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,79,84,87,96,101,109,110,111,112,113,114,115,119,121,122,124,125,127,129,130,131,134,136,137,138,139,140,141,154,160,161,177,189,191,207,208,209,210,212,213,214,215,219,222,224,227,230,232,233,235,260,261,262,263,264,265,386,267,269,270,387,273,274,388,389,390,292,294,391,392,295,296,393,297,298,301,394,307,395,308,310,311,312,314,316,317,318,319,320,321,328,331,341,342,379,380,396,383,385],"tindex":"49a29dc1-3f56-11e6-903f-595766992a37","method":{"position":"com.google.gson.internal.bind.TypeAdapters:361","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.String value) throws java.io.IOException {\n    if (value == null) {\n        {\n            out.value(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467354020759/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"49a29dc2-3f56-11e6-903f-9bf2e1808616","method":{"position":"com.google.gson.internal.bind.TypeAdapters:424","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.StringBuffer read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return new java.lang.StringBuffer(in.nextString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:542","type":"CtBinaryOperatorImpl"},"failures":[397,398,399],"tindex":"49a2c4d3-3f56-11e6-903f-e73612148603","method":{"position":"com.google.gson.JsonArray:329","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object o) {\n    if (o instanceof java.lang.reflect.TypeVariable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467354020759/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (o == null) {\n                {\n                    return (o == (com.google.gson.JsonArray.this)) || ((o instanceof com.google.gson.JsonArray) && (((com.google.gson.JsonArray)(o)).java.util.List<com.google.gson.JsonElement>.equals(java.util.List<com.google.gson.JsonElement>)));\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467354020759/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"replacement":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonArray:58","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"49a2c4d4-3f56-11e6-903f-8175101e4319","method":{"position":"com.google.gson.JsonArray:115","type":"CtMethodImpl","sourcecode":"public boolean contains(com.google.gson.JsonElement element) {\n    if (element == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467354020759/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<com.google.gson.JsonElement>.contains(element);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"element"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:245","type":"CtBinaryOperatorImpl"},"failures":[85,86,400,401,87,88,402,403,89,404],"tindex":"49a2ebe5-3f56-11e6-903f-bf64a67a7ed9","method":{"position":"com.google.gson.GsonBuilder:103","type":"CtMethodImpl","sourcecode":"public com.google.gson.GsonBuilder setVersion(double ignoreVersionsAfter) {\n    if (ignoreVersionsAfter <= ignoreVersionsAfter) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467354020759/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.Excluder = com.google.gson.internal.Excluder.withVersion(ignoreVersionsAfter);\n            return com.google.gson.GsonBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"version":"ignoreVersionsAfter","annotationVersion":"ignoreVersionsAfter"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:182","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"49a2ebe6-3f56-11e6-903f-a70d15d27abb","method":{"position":"com.google.gson.stream.JsonWriter:461","type":"CtMethodImpl","sourcecode":"public com.google.gson.stream.JsonWriter value(double value) throws java.io.IOException {\n    if ((java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(value))) {\n        {\n            if ((java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(d))) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467354020759/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            } else {\n                {\n                    if ((java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(value))) {\n                        throw new java.lang.IllegalArgumentException((\"Numeric values must be finite, but was \" + value));\n                    } \n                    writeDeferredName();\n                    beforeValue(false);\n                    java.io.Writer.append(java.lang.Double.toString(value));\n                    return com.google.gson.stream.JsonWriter.this;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467354020759/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"d":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"49a312f7-3f56-11e6-903f-3d607fcb8818","method":{"position":"com.google.gson.internal.bind.TypeAdapters:338","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Character value) throws java.io.IOException {\n    out.value((value == null ? null : java.lang.String.valueOf(value)));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"49a312f8-3f56-11e6-903f-8f4bce983d34","method":{"position":"com.google.gson.internal.bind.TypeAdapters:501","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.UUID read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return java.util.UUID.fromString(in.nextString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.ArrayTypeAdapter:85","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"49a33a09-3f56-11e6-903f-f5569e57057e","method":{"position":"com.google.gson.Gson:510","type":"CtMethodImpl","sourcecode":"public java.lang.String toJson(java.lang.Object src) {\n    if (src == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467354020759/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (src == null) {\n                return toJson(com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull);\n            } \n            return toJson(src, src.getClass());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:199","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"49a33a0a-3f56-11e6-903f-3d4c5c08ae53","method":{"position":"com.google.gson.internal.LinkedTreeMap:481","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"rawtypes\")\n@java.lang.Override\npublic boolean equals(java.lang.Object o) {\n    if (o == o) {\n        {\n            if (o instanceof java.lang.reflect.ParameterizedType) {\n                {\n                    if (o instanceof java.util.Map.Entry) {\n                        java.util.Map.Entry java.util.Map.Entry = ((java.util.Map.Entry)(o));\n                        return ((K) == null ? (other.getKey()) == null : K.equals(other.getKey())) && ((V) == null ? (other.getValue()) == null : V.equals(other.getValue()));\n                    } \n                    return false;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467354020759/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467354020759/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"49a3611b-3f56-11e6-903f-2d6ada76a4e5","method":{"position":"com.google.gson.internal.bind.TimeTypeAdapter:50","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized java.sql.Time read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        java.util.Date java.util.Date = java.text.DateFormat.parse(in.nextString());\n        return new java.sql.Time(date.getTime());\n    } catch (java.text.ParseException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:325","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"49a3882c-3f56-11e6-903f-f77856a6fd05","method":{"position":"com.google.gson.internal.$Gson$Types:84","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.WildcardType supertypeOf(java.lang.reflect.Type bound) {\n    return new com.google.gson.internal.$Gson$Types.WildcardTypeImpl(new java.lang.reflect.Type[]{ java.lang.Object.java.lang.Object.java.lang.Class } , new java.lang.reflect.Type[]{ bound });\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"bound"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:54","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"49a3882d-3f56-11e6-903f-1520db52d1b0","method":{"position":"com.google.gson.internal.$Gson$Types:277","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type array) {\n    return array instanceof java.lang.reflect.GenericArrayType ? ((java.lang.reflect.GenericArrayType)(array)).getGenericComponentType() : ((java.lang.Class<?>)(array)).getComponentType();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"runtimeType":"array","type":"array"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"49a3882e-3f56-11e6-903f-677d7e1afc49","method":{"position":"com.google.gson.internal.bind.TypeAdapters:367","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.math.BigDecimal read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        return new java.math.BigDecimal(in.nextString());\n    } catch (java.lang.NumberFormatException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonElement:136","type":"CtInvocationImpl"},"failures":[],"tindex":"49a3af3f-3f56-11e6-903f-891184e937ff","method":{"position":"com.google.gson.internal.bind.MapTypeAdapterFactory:245","type":"CtMethodImpl","sourcecode":"private java.lang.String keyToString(com.google.gson.JsonElement keyElement) {\n    if (keyElement.isBoolean()) {\n        {\n            if (keyElement.isJsonPrimitive()) {\n                com.google.gson.JsonPrimitive com.google.gson.JsonPrimitive = keyElement.getAsJsonPrimitive();\n                if (primitive.isNumber()) {\n                    return java.lang.String.valueOf(primitive.getAsNumber());\n                } else if (primitive.isBoolean()) {\n                    return java.lang.Boolean.toString(primitive.getAsBoolean());\n                } else if (primitive.isString()) {\n                    return primitive.getAsString();\n                } else {\n                    throw new java.lang.AssertionError();\n                }\n            } else if (keyElement.isJsonNull()) {\n                return \"null\";\n            } else {\n                throw new java.lang.AssertionError();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467354020759/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"keyElement"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"49a3af40-3f56-11e6-903f-a735d2c78d78","method":{"position":"com.google.gson.internal.bind.TypeAdapters:501","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.UUID read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return java.util.UUID.fromString(in.nextString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:306","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"49a3af41-3f56-11e6-903f-1931a7a4d0dd","method":{"position":"com.google.gson.internal.LinkedTreeMap:481","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"rawtypes\")\n@java.lang.Override\npublic boolean equals(java.lang.Object o) {\n    if (o == o) {\n        {\n            if (o instanceof java.lang.reflect.ParameterizedType) {\n                {\n                    if (o instanceof java.util.Map.Entry) {\n                        java.util.Map.Entry java.util.Map.Entry = ((java.util.Map.Entry)(o));\n                        return ((K) == null ? (other.getKey()) == null : K.equals(other.getKey())) && ((V) == null ? (other.getValue()) == null : V.equals(other.getValue()));\n                    } \n                    return false;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467354020759/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467354020759/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"longSerializationPolicy":"o","com.google.gson.LongSerializationPolicy.DEFAULT":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:563","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"49a3d652-3f56-11e6-903f-895cc701707b","method":{"position":"com.google.gson.stream.JsonWriter:324","type":"CtMethodImpl","sourcecode":"private com.google.gson.stream.JsonWriter open(int empty, java.lang.String openBracket) throws java.io.IOException {\n    if ((empty == empty) || (peekStack == empty)) {\n        {\n            beforeValue(true);\n            push(empty);\n            java.io.Writer.write(openBracket);\n            return com.google.gson.stream.JsonWriter.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467354020759/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"peekStack":"empty","com.google.gson.stream.JsonScope.EMPTY_ARRAY":"empty","com.google.gson.stream.JsonScope.NONEMPTY_ARRAY":"empty"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:176","type":"CtBinaryOperatorImpl"},"failures":[47,101,405,406,407,293,307],"tindex":"49a3d653-3f56-11e6-903f-63710a8a314f","method":{"position":"com.google.gson.Gson:285","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        {\n            if (value == null) {\n                out.nullValue();\n                return ;\n            } \n            float float = value.floatValue();\n            checkValidFloatingPoint(floatValue);\n            out.value(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467354020759/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:293","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"49a3d654-3f56-11e6-903f-93203307e45d","method":{"position":"com.google.gson.internal.$Gson$Types:287","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type context, java.lang.Class<?> contextRawType) {\n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.getSupertype(context, contextRawType, java.util.Collection.java.util.Collection.java.lang.Class);\n    if (collectionType instanceof java.lang.reflect.WildcardType) {\n        collectionType = ((java.lang.reflect.WildcardType)(collectionType)).getUpperBounds()[0];\n    } \n    if (collectionType instanceof java.lang.reflect.ParameterizedType) {\n        return ((java.lang.reflect.ParameterizedType)(collectionType)).getActualTypeArguments()[0];\n    } \n    return java.lang.Object.java.lang.Object.java.lang.Class;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collectionType":"context"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:233","type":"CtBinaryOperatorImpl"},"failures":[86,400,401,87,88,402,403,89],"tindex":"49a3fd65-3f56-11e6-903f-1ddacc488680","method":{"position":"com.google.gson.internal.Excluder:228","type":"CtMethodImpl","sourcecode":"private boolean isValidVersion(com.google.gson.annotations.Since since, com.google.gson.annotations.Until until) {\n    if (until != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467354020759/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (since != null) {\n                {\n                    return (isValidSince(since)) && (isValidUntil(until));\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467354020759/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"annotation":"since"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:113","type":"CtInvocationImpl"},"failures":[],"tindex":"49a3fd66-3f56-11e6-903f-cbf7f1abde39","method":{"position":"com.google.gson.internal.bind.MapTypeAdapterFactory:245","type":"CtMethodImpl","sourcecode":"private java.lang.String keyToString(com.google.gson.JsonElement keyElement) {\n    if (keyElement.isBoolean()) {\n        {\n            if (keyElement.isJsonPrimitive()) {\n                com.google.gson.JsonPrimitive com.google.gson.JsonPrimitive = keyElement.getAsJsonPrimitive();\n                if (primitive.isNumber()) {\n                    return java.lang.String.valueOf(primitive.getAsNumber());\n                } else if (primitive.isBoolean()) {\n                    return java.lang.Boolean.toString(primitive.getAsBoolean());\n                } else if (primitive.isString()) {\n                    return primitive.getAsString();\n                } else {\n                    throw new java.lang.AssertionError();\n                }\n            } else if (keyElement.isJsonNull()) {\n                return \"null\";\n            } else {\n                throw new java.lang.AssertionError();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467354020759/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"primitive":"keyElement"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:348","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"49a3fd67-3f56-11e6-903f-9dbbb4933ab4","method":{"position":"com.google.gson.internal.$Gson$Types:117","type":"CtMethodImpl","sourcecode":"public static java.lang.Class<?> getRawType(java.lang.reflect.Type type) {\n    if (type instanceof java.lang.Class<?>) {\n        return ((java.lang.Class<?>)(type));\n    } else if (type instanceof java.lang.reflect.ParameterizedType) {\n        java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(type));\n        java.lang.reflect.Type java.lang.reflect.Type = parameterizedType.getRawType();\n        com.google.gson.internal.$Gson$Preconditions.checkArgument((rawType instanceof java.lang.Class));\n        return ((java.lang.Class<?>)(rawType));\n    } else if (type instanceof java.lang.reflect.GenericArrayType) {\n        java.lang.reflect.Type java.lang.reflect.Type = ((java.lang.reflect.GenericArrayType)(type)).getGenericComponentType();\n        return java.lang.reflect.Array.newInstance(com.google.gson.internal.$Gson$Types.getRawType(componentType), 0).getClass();\n    } else if (type instanceof java.lang.reflect.TypeVariable) {\n        return java.lang.Object.java.lang.Object.java.lang.Class;\n    } else if (type instanceof java.lang.reflect.WildcardType) {\n        return com.google.gson.internal.$Gson$Types.getRawType(((java.lang.reflect.WildcardType)(type)).getUpperBounds()[0]);\n    } else {\n        java.lang.String java.lang.String = type == null ? \"null\" : type.getClass().getName();\n        throw new java.lang.IllegalArgumentException(((((\"Expected a Class, ParameterizedType, or \" + \"GenericArrayType, but <\") + type) + \"> is of type \") + className));\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"type"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"49a42478-3f56-11e6-903f-c134e4cd53d6","method":{"position":"com.google.gson.TreeTypeAdapter:50","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic T read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((com.google.gson.JsonDeserializer<T>) == null) {\n        return delegate().read(in);\n    } \n    com.google.gson.JsonElement com.google.gson.JsonElement = com.google.gson.internal.Streams.parse(in);\n    if (value.isJsonNull()) {\n        return null;\n    } \n    return com.google.gson.JsonDeserializer<T>.deserialize(value, com.google.gson.reflect.TypeToken<T>.getType(), com.google.gson.Gson.com.google.gson.JsonDeserializationContext);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:872","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"49a42479-3f56-11e6-903f-69aae2373e4a","method":{"position":"com.google.gson.TypeAdapter:278","type":"CtMethodImpl","sourcecode":"public final T fromJsonTree(com.google.gson.JsonElement jsonTree) {\n    if (jsonTree == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467354020759/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            try {\n                com.google.gson.stream.JsonReader com.google.gson.stream.JsonReader = new com.google.gson.internal.bind.JsonTreeReader(jsonTree);\n                return read(jsonReader);\n            } catch (java.io.IOException e) {\n                throw new com.google.gson.JsonIOException(e);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"jsonTree"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"com.google.gson.JsonParseException","condition":{"position":"com.google.gson.reflect.TypeToken:240","type":"CtInvocationImpl"},"failures":[],"tindex":"49a4247a-3f56-11e6-903f-730af8e301e1","method":{"position":"com.google.gson.Gson:127","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic <T>T deserialize(com.google.gson.JsonElement json, java.lang.reflect.Type typeOfT) throws com.google.gson.JsonParseException {\n    if (typeOfT.getRawType().equals(typeOfT.getRawType())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467354020759/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonParseException();\n    } else {\n        {\n            return ((T)(fromJson(json, typeOfT)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"typeOfT","to":"typeOfT"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:123","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"49a4247b-3f56-11e6-903f-db3932d42ef7","method":{"position":"com.google.gson.internal.$Gson$Types:117","type":"CtMethodImpl","sourcecode":"public static java.lang.Class<?> getRawType(java.lang.reflect.Type type) {\n    if (type instanceof java.lang.Class<?>) {\n        return ((java.lang.Class<?>)(type));\n    } else if (type instanceof java.lang.reflect.ParameterizedType) {\n        java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(type));\n        java.lang.reflect.Type java.lang.reflect.Type = parameterizedType.getRawType();\n        com.google.gson.internal.$Gson$Preconditions.checkArgument((rawType instanceof java.lang.Class));\n        return ((java.lang.Class<?>)(rawType));\n    } else if (type instanceof java.lang.reflect.GenericArrayType) {\n        java.lang.reflect.Type java.lang.reflect.Type = ((java.lang.reflect.GenericArrayType)(type)).getGenericComponentType();\n        return java.lang.reflect.Array.newInstance(com.google.gson.internal.$Gson$Types.getRawType(componentType), 0).getClass();\n    } else if (type instanceof java.lang.reflect.TypeVariable) {\n        return java.lang.Object.java.lang.Object.java.lang.Class;\n    } else if (type instanceof java.lang.reflect.WildcardType) {\n        return com.google.gson.internal.$Gson$Types.getRawType(((java.lang.reflect.WildcardType)(type)).getUpperBounds()[0]);\n    } else {\n        java.lang.String java.lang.String = type == null ? \"null\" : type.getClass().getName();\n        throw new java.lang.IllegalArgumentException(((((\"Expected a Class, ParameterizedType, or \" + \"GenericArrayType, but <\") + type) + \"> is of type \") + className));\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"type"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.IllegalAccessException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:92","type":"CtBinaryOperatorImpl"},"failures":[408,409,15,410,411,412,413,70,73,414,74,415,416,77,417,418,419,420,421,400,401,402,403,95,422,98,423,102,103,104,424,425,130,132,426,145,427,428,429,430,431,432,433,434,435,436,437,438,206,207,208,439,440,441,212,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,260,262,263,264,386,463,464,465,273,466,467,468,469,470,471,298,302,303,304,305,472,306,309,473,474,475,476,477,316,319,320,478,479,480,481,482,341,342],"tindex":"49a4247c-3f56-11e6-903f-83efffe68d6f","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:101","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nvoid read(com.google.gson.stream.JsonReader reader, java.lang.Object value) throws java.io.IOException, java.lang.IllegalAccessException {\n    if (value instanceof java.util.Iterator) {\n        {\n            java.lang.Object java.lang.Object = com.google.gson.TypeAdapter<?>.read(reader);\n            if ((fieldValue != null) || (!isPrimitive)) {\n                field.set(value, fieldValue);\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467354020759/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.JsonPrimitive:316","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"49a44b8d-3f56-11e6-903f-d13b8eff8ad5","method":{"position":"com.google.gson.Gson:631","type":"CtMethodImpl","sourcecode":"public void toJson(com.google.gson.JsonElement jsonElement, java.lang.Appendable writer) throws com.google.gson.JsonIOException {\n    try {\n        com.google.gson.stream.JsonWriter com.google.gson.stream.JsonWriter = newJsonWriter(com.google.gson.internal.Streams.writerForAppendable(writer));\n        toJson(jsonElement, jsonWriter);\n    } catch (java.io.IOException e) {\n        throw new java.lang.RuntimeException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"other":"jsonElement","this":"jsonElement"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:122","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"49a44b8e-3f56-11e6-903f-4d679585fa6a","method":{"position":"com.google.gson.JsonPrimitive:305","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object obj) {\n    if (obj == obj) {\n        {\n            if ((com.google.gson.JsonPrimitive.this) == obj) {\n                return true;\n            } \n            if ((obj == null) || ((getClass()) != (obj.getClass()))) {\n                return false;\n            } \n            com.google.gson.JsonPrimitive com.google.gson.JsonPrimitive = ((com.google.gson.JsonPrimitive)(obj));\n            if ((java.lang.Object) == null) {\n                return (other.java.lang.Object) == null;\n            } \n            if ((com.google.gson.JsonPrimitive.isIntegral(com.google.gson.JsonPrimitive.this)) && (com.google.gson.JsonPrimitive.isIntegral(other))) {\n                return (getAsNumber().longValue()) == (other.getAsNumber().longValue());\n            } \n            if (((java.lang.Object) instanceof java.lang.Number) && ((other.java.lang.Object) instanceof java.lang.Number)) {\n                double double = getAsNumber().doubleValue();\n                double double = other.getAsNumber().doubleValue();\n                return (a == b) || ((java.lang.Double.isNaN(a)) && (java.lang.Double.isNaN(b)));\n            } \n            return java.lang.Object.equals(other.java.lang.Object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467354020759/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"com.google.gson.internal.bind.JsonTreeReader.SENTINEL_CLOSED":"obj","o":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:243","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"49a44b8f-3f56-11e6-903f-0d42f1b5b4a5","method":{"position":"com.google.gson.internal.Excluder:228","type":"CtMethodImpl","sourcecode":"private boolean isValidVersion(com.google.gson.annotations.Since since, com.google.gson.annotations.Until until) {\n    if (until != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467354020759/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (since != null) {\n                {\n                    return (isValidSince(since)) && (isValidUntil(until));\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467354020759/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"annotation":"until"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.ArrayTypeAdapter:64","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"49a44b90-3f56-11e6-903f-31e342ed1ff1","method":{"position":"com.google.gson.internal.$Gson$Types:563","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object other) {\n    return (other instanceof java.lang.reflect.WildcardType) && (com.google.gson.internal.$Gson$Types.equals(com.google.gson.internal.$Gson$Types.WildcardTypeImpl.this, ((java.lang.reflect.WildcardType)(other))));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"in":"other","com.google.gson.stream.JsonToken.NULL":"other"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1364","type":"CtBinaryOperatorImpl"},"failures":[4,5,7,8,9,12,13,24,25,26,483,410,411,412,484,27,28,29,30,31,32,33,34,45,52,413,53,54,55,56,57,58,59,60,70,71,485,72,73,486,414,74,415,75,487,416,85,86,400,401,87,88,402,403,89,404,96,423,424,488,108,489,110,113,119,122,123,129,144,148,155,490,156,428,157,429,158,159,163,168,169,173,181,183,184,187,491,190,193,195,196,492,493,198,201,202,203,204,205,494,495,496,497,498,209,439,440,210,441,216,221,461,499,235,241,244,245,248,251,255,257,265,266,386,267,500,463,268,464,465,501,502,280,467,281,503,504,468,282,283,284,505,285,286,287,506,288,507,289,290,291,508,300,302,304,308,310,509,311,312,313,473,474,475,315,476,477,316,322,325,326,327,330,478,331,510,332,333,334,335,336,337,338,511,339,481,340,512,482,341,342,379,380,513,514,383,515,384,385],"tindex":"49a472a1-3f56-11e6-903f-7d4eed3434af","method":{"position":"com.google.gson.GsonBuilder:551","type":"CtMethodImpl","sourcecode":"private void addTypeAdaptersForDate(java.lang.String datePattern, int dateStyle, int timeStyle, java.util.List<com.google.gson.TypeAdapterFactory> factories) {\n    if (dateStyle == dateStyle) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467354020759/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.DefaultDateTypeAdapter com.google.gson.DefaultDateTypeAdapter;\n            if ((datePattern != null) && (!(\"\".equals(datePattern.trim())))) {\n                dateTypeAdapter = new com.google.gson.DefaultDateTypeAdapter(datePattern);\n            } else if ((dateStyle != (java.text.DateFormat.java.text.DateFormat.int)) && (timeStyle != (java.text.DateFormat.java.text.DateFormat.int))) {\n                dateTypeAdapter = new com.google.gson.DefaultDateTypeAdapter(dateStyle , timeStyle);\n            } else {\n                return ;\n            }\n            factories.add(com.google.gson.TreeTypeAdapter.newFactory(com.google.gson.reflect.TypeToken.get(java.util.Date.java.util.Date.java.lang.Class), dateTypeAdapter));\n            factories.add(com.google.gson.TreeTypeAdapter.newFactory(com.google.gson.reflect.TypeToken.get(java.sql.Timestamp.java.sql.Timestamp.java.lang.Class), dateTypeAdapter));\n            factories.add(com.google.gson.TreeTypeAdapter.newFactory(com.google.gson.reflect.TypeToken.get(java.sql.Date.java.sql.Date.java.lang.Class), dateTypeAdapter));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"dateStyle","l":"dateStyle"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:683","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"49a472a2-3f56-11e6-903f-ad397b4fdfbe","method":{"position":"com.google.gson.internal.Streams:111","type":"CtMethodImpl","sourcecode":"public java.lang.CharSequence subSequence(int start, int end) {\n    if (end == start) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467354020759/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new java.lang.String(char[] , start , (end - start));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"last":"end","com.google.gson.stream.JsonReader.NUMBER_CHAR_NONE":"start"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:306","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"49a472a3-3f56-11e6-903f-35a0337ab1eb","method":{"position":"com.google.gson.GsonBuilder:261","type":"CtMethodImpl","sourcecode":"public com.google.gson.GsonBuilder setLongSerializationPolicy(com.google.gson.LongSerializationPolicy serializationPolicy) {\n    if (serializationPolicy == serializationPolicy) {\n        {\n            com.google.gson.GsonBuilder.this.com.google.gson.LongSerializationPolicy = serializationPolicy;\n            return com.google.gson.GsonBuilder.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467354020759/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"longSerializationPolicy":"serializationPolicy","com.google.gson.LongSerializationPolicy.DEFAULT":"serializationPolicy"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:158","type":"CtBinaryOperatorImpl"},"failures":[516],"tindex":"49a472a4-3f56-11e6-903f-0917eab2a6ad","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:429","type":"CtMethodImpl","sourcecode":"private void rotateRight(com.google.gson.internal.LinkedHashTreeMap.Node<K, V> root) {\n    if (root == null) {\n        {\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = pivot.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = pivot.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            root.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = pivotRight;\n            if (pivotRight != null) {\n                pivotRight.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root;\n            } \n            replaceInParent(root, pivot);\n            pivot.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root;\n            root.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = pivot;\n            root.int = (java.lang.Math.max((right != null ? right.int : 0), (pivotRight != null ? pivotRight.int : 0))) + 1;\n            pivot.int = (java.lang.Math.max(root.int, (pivotLeft != null ? pivotLeft.int : 0))) + 1;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467354020759/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"child":"root"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:198","type":"CtBinaryOperatorImpl"},"failures":[343,344,345],"tindex":"49a499b5-3f56-11e6-903f-ab98425942ed","method":{"position":"com.google.gson.TypeAdapter:140","type":"CtMethodImpl","sourcecode":"public final void toJson(java.io.Writer out, T value) throws java.io.IOException {\n    if (out == null) {\n        {\n            com.google.gson.stream.JsonWriter com.google.gson.stream.JsonWriter = new com.google.gson.stream.JsonWriter(out);\n            write(writer, value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467354020759/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"out":"out"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:491","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"49a499b6-3f56-11e6-903f-f527e663e070","method":{"position":"com.google.gson.Gson:317","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467354020759/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value == null) {\n                out.nullValue();\n                return ;\n            } \n            out.value(value.toString());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"49a499b7-3f56-11e6-903f-dfb4e08dfd00","method":{"position":"com.google.gson.internal.bind.TypeAdapters:736","type":"CtMethodImpl","sourcecode":"public T read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return java.util.Map<java.lang.String, T>.get(in.nextString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:831","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"49a499b8-3f56-11e6-903f-f70a25a79adf","method":{"position":"com.google.gson.internal.bind.JsonTreeReader:41","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int read(char[] buffer, int offset, int count) throws java.io.IOException {\n    if (count == count) {\n        {\n            throw new java.lang.AssertionError();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467354020759/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"count","com.google.gson.stream.JsonReader.PEEKED_LONG":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"49a4c0c9-3f56-11e6-903f-775cfd3e154e","method":{"position":"com.google.gson.internal.bind.TypeAdapters:491","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.net.InetAddress value) throws java.io.IOException {\n    out.value((value == null ? null : value.getHostAddress()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:159","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"49a4c0ca-3f56-11e6-903f-8b8c4e492045","method":{"position":"com.google.gson.internal.$Gson$Types:287","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type context, java.lang.Class<?> contextRawType) {\n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.getSupertype(context, contextRawType, java.util.Collection.java.util.Collection.java.lang.Class);\n    if (collectionType instanceof java.lang.reflect.WildcardType) {\n        collectionType = ((java.lang.reflect.WildcardType)(collectionType)).getUpperBounds()[0];\n    } \n    if (collectionType instanceof java.lang.reflect.ParameterizedType) {\n        return ((java.lang.reflect.ParameterizedType)(collectionType)).getActualTypeArguments()[0];\n    } \n    return java.lang.Object.java.lang.Object.java.lang.Class;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"context","b":"context"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:188","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"49a4c0cb-3f56-11e6-903f-6d9e556f7b33","method":{"position":"com.google.gson.reflect.TypeToken:122","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic boolean isAssignableFrom(java.lang.reflect.Type from) {\n    if (from == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467354020759/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (from == null) {\n                return false;\n            } \n            if (java.lang.reflect.Type.equals(from)) {\n                return true;\n            } \n            if ((java.lang.reflect.Type) instanceof java.lang.Class<?>) {\n                return java.lang.Class<? super T>.isAssignableFrom(com.google.gson.internal.$Gson$Types.getRawType(from));\n            } else if ((java.lang.reflect.Type) instanceof java.lang.reflect.ParameterizedType) {\n                return com.google.gson.reflect.TypeToken.isAssignableFrom(from, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)), new java.util.HashMap<java.lang.String, java.lang.reflect.Type>());\n            } else if ((java.lang.reflect.Type) instanceof java.lang.reflect.GenericArrayType) {\n                return (java.lang.Class<? super T>.isAssignableFrom(com.google.gson.internal.$Gson$Types.getRawType(from))) && (com.google.gson.reflect.TypeToken.isAssignableFrom(from, ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type))));\n            } else {\n                throw com.google.gson.reflect.TypeToken.buildUnexpectedTypeError(java.lang.reflect.Type, java.lang.Class.java.lang.Class.java.lang.Class, java.lang.reflect.ParameterizedType.java.lang.reflect.ParameterizedType.java.lang.Class, java.lang.reflect.GenericArrayType.java.lang.reflect.GenericArrayType.java.lang.Class);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"from"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:136","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"49a4c0cc-3f56-11e6-903f-412dab3d642d","method":{"position":"com.google.gson.JsonArray:329","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object o) {\n    if (o instanceof java.lang.reflect.TypeVariable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467354020759/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (o == null) {\n                {\n                    return (o == (com.google.gson.JsonArray.this)) || ((o instanceof com.google.gson.JsonArray) && (((com.google.gson.JsonArray)(o)).java.util.List<com.google.gson.JsonElement>.equals(java.util.List<com.google.gson.JsonElement>)));\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467354020759/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.DateTypeAdapter:86","type":"CtBinaryOperatorImpl"},"failures":[172],"tindex":"49a4e7dd-3f56-11e6-903f-8d3b1fb04d01","method":{"position":"com.google.gson.internal.bind.DateTypeAdapter:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized void write(com.google.gson.stream.JsonWriter out, java.util.Date value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467354020759/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value == null) {\n                out.nullValue();\n                return ;\n            } \n            java.lang.String java.lang.String = java.text.DateFormat.format(value);\n            out.value(dateFormatAsString);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"com.google.gson.reflect.TypeToken:131","type":"CtBinaryOperatorImpl"},"failures":[0,1,15,24,25,35,36,48,52,55,56,60,70,73,74,75,77,78,79,81,82,84,86,87,88,89,90,92,93,94,95,97,98,99,100,101,102,103,104,105,106,113,119,121,122,129,130,132,138,140,142,145,150,155,156,158,159,160,161,182,192,197,201,202,203,204,205,494,495,497,498,206,207,208,210,211,212,213,214,215,217,219,222,223,224,226,227,228,229,230,260,261,262,263,264,265,386,267,268,269,270,271,272,387,517,273,274,275,276,278,279,282,284,285,388,389,390,292,293,294,391,392,295,296,393,298,301,302,303,304,305,306,394,307,518,395,308,309,310,311,312,313,314,315,316,319,320,321,328,330,333,334,335,337,339,340,341,342,344,379,380,383],"tindex":"49a4e7de-3f56-11e6-903f-7d1cff950ade","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:94","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\n@java.lang.Override\nvoid write(com.google.gson.stream.JsonWriter writer, java.lang.Object value) throws java.io.IOException, java.lang.IllegalAccessException {\n    if (value instanceof java.lang.Class<?>) {\n        {\n            java.lang.Object java.lang.Object = field.get(value);\n            com.google.gson.TypeAdapter com.google.gson.TypeAdapter = new com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper(context , this.com.google.gson.TypeAdapter<?> , fieldType.getType());\n            t.write(writer, fieldValue);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467354020759/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:400","type":"CtBinaryOperatorImpl"},"failures":[0,1,15,20,21,23,24,25,35,36,48,52,54,55,56,60,70,73,74,75,77,78,79,81,82,83,84,86,87,88,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,130,132,138,140,142,145,150,155,156,158,159,160,161,171,181,182,184,189,192,197,201,202,203,204,205,206,207,208,210,211,212,213,214,215,217,219,222,223,224,226,227,228,229,230,260,261,262,263,264,265,267,268,269,270,271,272,273,274,275,276,278,279,282,283,284,285,286,288,291,292,293,294,295,296,298,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,319,320,321,322,323,324,328,330,333,334,335,336,337,339,340,341,342,344,345,347,348,350,355,356,358,363,364,366,375,379,380,381,382,383],"tindex":"49a4e7df-3f56-11e6-903f-dbf8a71f2f28","method":{"position":"com.google.gson.stream.JsonWriter:385","type":"CtMethodImpl","sourcecode":"public com.google.gson.stream.JsonWriter name(java.lang.String name) throws java.io.IOException {\n    if (name != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467354020759/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (name == null) {\n                throw new java.lang.NullPointerException(\"name == null\");\n            } \n            if ((java.lang.String) != null) {\n                throw new java.lang.IllegalStateException();\n            } \n            if ((int) == 0) {\n                throw new java.lang.IllegalStateException(\"JsonWriter is closed.\");\n            } \n            java.lang.String = name;\n            return com.google.gson.stream.JsonWriter.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"name"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.DefaultDateTypeAdapter:83","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"49a50ef0-3f56-11e6-903f-891a3a73be4d","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:808","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(java.lang.Object o) {\n    if (o == o) {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = findByEntry(((java.util.Map.Entry<?, ?>)(o)));\n            if (node == null) {\n                return false;\n            } \n            removeInternal(node, true);\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467354020759/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeOfT":"o","java.util.Date.class":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"49a50ef1-3f56-11e6-903f-3bc62f141ccd","method":{"position":"com.google.gson.internal.Excluder:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, T value) throws java.io.IOException {\n    if (skipSerialize) {\n        out.nullValue();\n        return ;\n    } \n    delegate().write(out, value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"49a50ef2-3f56-11e6-903f-8bac45ba7250","method":{"position":"com.google.gson.internal.bind.TimeTypeAdapter:50","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized java.sql.Time read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        java.util.Date java.util.Date = java.text.DateFormat.parse(in.nextString());\n        return new java.sql.Time(date.getTime());\n    } catch (java.text.ParseException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:462","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"49a50ef3-3f56-11e6-903f-c392f0a0037b","method":{"position":"com.google.gson.stream.JsonWriter:461","type":"CtMethodImpl","sourcecode":"public com.google.gson.stream.JsonWriter value(double value) throws java.io.IOException {\n    if ((java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(value))) {\n        {\n            if ((java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(d))) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467354020759/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            } else {\n                {\n                    if ((java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(value))) {\n                        throw new java.lang.IllegalArgumentException((\"Numeric values must be finite, but was \" + value));\n                    } \n                    writeDeferredName();\n                    beforeValue(false);\n                    java.io.Writer.append(java.lang.Double.toString(value));\n                    return com.google.gson.stream.JsonWriter.this;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467354020759/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0}],"header":{"groupId":"com.google.code.gson","transformationCount":56,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}