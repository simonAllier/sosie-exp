{"failureDictionary":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":38,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":471,"com.google.gson.functional.StringTest.testStringValueDeserialization":469,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":177,"com.google.gson.functional.PrimitiveTest.testBigIntegerDeserialization":333,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullDeserialization":425,"com.google.gson.functional.PrimitiveTest.testBigDecimalNaNDeserializationNotSupported":294,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":0,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":216,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":140,"com.google.gson.MixedStreamTest.testWriteLenient":261,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":187,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":434,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":55,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":233,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":185,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":237,"com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization":342,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":461,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":517,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":132,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerDeserialization":303,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":109,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":164,"com.google.gson.functional.ObjectTest.testSingletonLists":183,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":160,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":426,"com.google.gson.functional.PrimitiveTest.testNumberDeserialization":287,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":472,"com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue":604,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator":383,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":123,"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":579,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization":442,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":198,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":247,"com.google.gson.functional.PrimitiveTest.testStringsAsBooleans":345,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":47,"com.google.gson.functional.StringTest.testEscapedBackslashInStringDeserialization":485,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":103,"com.google.gson.functional.PrimitiveTest.testBigDecimalNoFractAsStringRepresentationDeserialization":334,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":582,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":172,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":253,"com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization":279,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":592,"com.google.gson.functional.MapTest.testMapOfMapDeserialization":544,"com.google.gson.functional.EnumTest.testEnumCaseMapping":460,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":264,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":470,"com.google.gson.functional.JsonTreeTest.testToJsonTree":139,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsLong":278,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":585,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveDeserialization":445,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":102,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":114,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":404,"com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization":504,"com.google.gson.functional.PrimitiveTest.testUnquotedStringDeserializationFails":289,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferDeserialization":419,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":520,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":571,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":218,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringDeserialization":482,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":195,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization":354,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":615,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsBigIntegerFails":295,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":558,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":590,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":63,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":205,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":614,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":462,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectDeserialization":396,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":446,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":149,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionDeserialization":359,"com.google.gson.functional.PrimitiveTest.testDoubleInfinityDeserialization":358,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization":441,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":339,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":318,"com.google.gson.functional.PrimitiveTest.testFloatInfinityDeserialization":365,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArrayDeserialization":403,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":207,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":500,"com.google.gson.DefaultDateTypeAdapterTest.testFormatUsesDefaultTimezone":626,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityDeserialization":316,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":424,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":141,"com.google.gson.functional.PrimitiveTest.testDoubleNoFractAsStringRepresentationDeserialization":331,"com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization":537,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":85,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountryVariant":416,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":155,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":65,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":552,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":340,"com.google.gson.functional.JsonParserTest.testParseInvalidJson":489,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsDouble":332,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":204,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":494,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":45,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":191,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":242,"com.google.gson.JsonPrimitiveTest.testEqualsAcrossTypes":612,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":75,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":299,"com.google.gson.functional.MapTest.testMapDeserializationWithNullValue":549,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":161,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":93,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":107,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":267,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":375,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings":448,"com.google.gson.functional.MapTest.testNumberKeyDeserialization":554,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":432,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":562,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":17,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":418,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":62,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":221,"com.google.gson.functional.CollectionTest.testSetDeserialization":236,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":133,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":194,"com.google.gson.functional.EnumTest.testEnumSet":453,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersEscapedDeserialization":596,"com.google.gson.functional.PrimitiveTest.testBigDecimalAsStringRepresentationDeserialization":323,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":108,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":374,"com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithNestedWildcards":257,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampDeserialization":408,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":533,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":199,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":3,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":10,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBytePrimitive":336,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":19,"com.google.gson.functional.PrimitiveTest.testDeserializingDecimalPointValueZeroSucceeds":347,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":124,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":587,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":348,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsIntegerFails":292,"com.google.gson.functional.MapTest.testHashMapDeserialization":527,"com.google.gson.functional.CollectionTest.testLinkedListDeserialization":567,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesDeserialization":430,"com.google.gson.MixedStreamTest.testReadNulls":262,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization":271,"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":272,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":37,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":76,"com.google.gson.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithSystemLocale":625,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":152,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":452,"com.google.gson.functional.MapTest.testSortedMap":546,"com.google.gson.functional.MapTest.testMapSerialization":543,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":39,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":223,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedDeserialization":329,"com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization":507,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":231,"com.google.gson.functional.MapTest.testSerializeMaps":530,"com.google.gson.functional.MapTest.testComplexKeysSerialization":176,"com.google.gson.functional.InternationalizationTest.testStringsWithRawChineseCharactersDeserialization":595,"com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader":553,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsFalse":605,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":511,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":126,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":220,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":169,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":88,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriter":619,"com.google.gson.functional.EnumTest.testTopLevelEnumDeserialization":458,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":240,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":71,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsDeserialization":560,"com.google.gson.functional.MapTest.testStringKeyDeserialization":551,"com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithBasicWildcards":259,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsDeserialization":508,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":377,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":361,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesDeserialization":298,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":555,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigInteger":293,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":465,"com.google.gson.functional.PrettyPrintingTest.testMap":583,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":564,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":41,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":399,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls":450,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":246,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysDeserialization":510,"com.google.gson.functional.StringTest.testStringWithEscapedSlashDeserialization":475,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":479,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":414,"com.google.gson.functional.MapTest.testMapSerializationEmpty":550,"com.google.gson.functional.CollectionTest.testQueueSerialization":568,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsByteWrapper":324,"com.google.gson.functional.MapTest.testMapOfMapSerialization":542,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":315,"com.google.gson.JavaSerializationTest.testMapIsSerializable":250,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountry":421,"com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization":573,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":28,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":326,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":384,"com.google.gson.internal.bind.JsonTreeWriterTest.testStrictBoxedNansAndInfinities":624,"com.google.gson.functional.FieldNamingTest.testIdentity":232,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":473,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":376,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":20,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":208,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":1,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":138,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":182,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":275,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalDeserialization":281,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":254,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":276,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":474,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":179,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization":321,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeDeserialization":436,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":244,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidDeserialization":409,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":27,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":415,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullJsonElementSerialization":444,"com.google.gson.functional.MapTest.testMapDeserializationEmpty":524,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":357,"com.google.gson.functional.MapTest.testMapSubclassSerialization":529,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":113,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":128,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersDeserialization":598,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":12,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":134,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":273,"com.google.gson.functional.PrimitiveTest.testBigDecimalDeserialization":313,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":142,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsLongPrimitive":372,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguage":398,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":122,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":106,"com.google.gson.functional.EnumTest.testEnumSubclass":456,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization":335,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":197,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":248,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization":280,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":59,"com.google.gson.GsonBuilderTest.testRegisterTypeAdapterForCoreType":603,"com.google.gson.functional.PrimitiveTest.testFloatNaNDeserialization":341,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":67,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":83,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsLongWrapper":283,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":181,"com.google.gson.functional.PrimitiveTest.testBigDecimalNegativeInfinityDeserializationNotSupported":319,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":180,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":91,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":243,"com.google.gson.functional.ArrayTest.testArrayOfNullDeserialization":503,"com.google.gson.functional.PrimitiveTest.testBigDecimalInfinityDeserializationNotSupported":325,"com.google.gson.functional.ObjectTest.testTruncatedDeserialization":556,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":74,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization":317,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":438,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":184,"com.google.gson.functional.MapTest.testMapSubclassDeserialization":526,"com.google.gson.MixedStreamTest.testWriteNulls":613,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":502,"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":487,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":496,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":104,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":219,"com.google.gson.CommentsTest.testParseComments":599,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":167,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":186,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":379,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":32,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":146,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigDecimal":338,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":561,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":477,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":545,"com.google.gson.MixedStreamTest.testReadInvalidState":260,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":130,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":112,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":356,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":440,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":224,"com.google.gson.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithUsLocale":627,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":291,"com.google.gson.functional.ArrayTest.testArrayOfStringsDeserialization":512,"com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithTypeParameters":258,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":29,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":308,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":26,"com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization":351,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":422,"com.google.gson.functional.ArrayTest.testEmptyArrayDeserialization":499,"com.google.gson.functional.MapTest.testMapDeserialization":536,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":417,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":586,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":525,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":163,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":100,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":535,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":166,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":518,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":89,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":137,"com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization":457,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":116,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":209,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization":557,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":78,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":467,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":92,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":405,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":111,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":87,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":178,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":8,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":239,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":601,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":443,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigDecimal":277,"com.google.gson.functional.PrimitiveTest.testShortSerialization":355,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":381,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":521,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedDeserialization":344,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":594,"com.google.gson.internal.bind.JsonTreeWriterTest.testStrictNansAndInfinities":623,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedDeserialization":314,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":343,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":6,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsBigDecimal":290,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":228,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":455,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":234,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":127,"com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues":531,"com.google.gson.functional.PrimitiveTest.testLargeDoubleDeserialization":307,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":363,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":580,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":143,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":170,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization":433,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":16,"com.google.gson.internal.bind.JsonTreeWriterTest.testObject":606,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization":370,"com.google.gson.functional.PrimitiveTest.testDeserializingNonZeroDecimalPointValuesAsIntegerFails":364,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":73,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":66,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":99,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":210,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":46,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":393,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsTrue":608,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":64,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":157,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":68,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsDoublePrimitive":320,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":214,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":190,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":459,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":80,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":597,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":117,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":235,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":463,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives":378,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":162,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":7,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":423,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsInt":297,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":154,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":411,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":168,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization":428,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":96,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization":565,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsShortWrapper":284,"com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral":350,"com.google.gson.functional.PrimitiveTest.testNumberSerialization":322,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":367,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":35,"com.google.gson.JsonPrimitiveTest.testEquals":611,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":165,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":454,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":43,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":225,"com.google.gson.functional.MapTest.testGeneralMapField":175,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":188,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":493,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsShortPrimitive":369,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":60,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":145,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":464,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":435,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":547,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":288,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":394,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":514,"com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization":346,"com.google.gson.MixedStreamTest.testReadMixedStreamed":15,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":309,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlDeserialization":406,"com.google.gson.functional.MapTest.testBooleanKeyDeserialization":538,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":153,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":255,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":576,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":159,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBooleanPrimitive":327,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":593,"com.google.gson.JavaSerializationTest.testNumberIsSerializable":249,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":18,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":119,"com.google.gson.functional.MapTest.testDeerializeMapOfMaps":539,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":388,"com.google.gson.functional.MapTest.testMapDeserializationWithNullKey":528,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":368,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":380,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":151,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":50,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsFloatPrimitive":310,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedObject":607,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":420,"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":488,"com.google.gson.JsonPrimitiveTest.testEqualsDoesNotEquateStringAndNonStringTypes":610,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":21,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserialization":392,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionDeserilaization":572,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization":523,"com.google.gson.functional.ObjectTest.testNestedDeserialization":215,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":386,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":389,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":559,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":40,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":90,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":591,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsNumber":366,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":31,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":70,"com.google.gson.functional.StringTest.testSingleQuoteInStringDeserialization":476,"com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys":540,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":105,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":353,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":79,"com.google.gson.JavaSerializationTest.testListIsSerializable":251,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":58,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":144,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":578,"com.google.gson.functional.ObjectTest.testNullSerialization":622,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":82,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization":387,"com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey":532,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":174,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":282,"com.google.gson.functional.MapTest.testInterfaceTypeMap":173,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization":505,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":466,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":95,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsDoubleWrapper":285,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":125,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":616,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":86,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails":468,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":395,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":589,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsInteger":301,"com.google.gson.MixedStreamTest.testWriteClosed":14,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":42,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":570,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":98,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":189,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateDeserialization":447,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":110,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":94,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":34,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":30,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":212,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":121,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":101,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":192,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":569,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":51,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBooleanWrapper":330,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":53,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":84,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":574,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":429,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":269,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":24,"com.google.gson.functional.PrimitiveTest.testDoubleAsStringRepresentationDeserialization":371,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":306,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":136,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderDeserialization":401,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":222,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":490,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":33,"com.google.gson.functional.CollectionTest.testQueueDeserialization":581,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":312,"com.google.gson.functional.PrimitiveTest.testByteDeserialization":328,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringDeserialization":481,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization":270,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":52,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":439,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":171,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":206,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":413,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":150,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":213,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":563,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":11,"com.google.gson.functional.MapTest.testRawMapSerialization":548,"com.google.gson.functional.CollectionTest.testNullsInListDeserialization":577,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetDeserialization":427,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":77,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":201,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":227,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":522,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":600,"com.google.gson.functional.PrimitiveTest.testByteSerialization":352,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":449,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":495,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapNoTypeSerialization":602,"com.google.gson.ObjectTypeAdapterTest.testSerialize":245,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":617,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":148,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsFloatWrapper":296,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":56,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":506,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":229,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":4,"com.google.gson.GsonTypeAdapterTest.testDefaultTypeAdapterThrowsParseException":252,"com.google.gson.functional.StringTest.testAssignmentCharDeserialization":478,"com.google.gson.functional.MapTest.testMapWithQuotes":541,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatDeserialization":304,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":400,"com.google.gson.functional.StringTest.testEscapingQuotesInStringDeserialization":480,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":373,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":516,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":385,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":135,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsNumber":360,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":397,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":131,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":519,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":2,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":211,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":241,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":337,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":410,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":193,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":509,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":120,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":402,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":49,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":57,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":412,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigInteger":349,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriterAndSerializeNulls":620,"com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed":575,"com.google.gson.functional.ArrayTest.testSingleStringArrayDeserialization":498,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":390,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":437,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":491,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":81,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":22,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization":274,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":129,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReader":451,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsFloat":286,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":391,"com.google.gson.internal.LinkedHashTreeMapTest.testRemoveRootDoesNotDoubleUnlink":609,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":382,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":200,"com.google.gson.functional.ObjectTest.testNestedSerialization":202,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":36,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":300,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringDeserialization":484,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":513,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":515,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":9,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":226,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":156,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":256,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":263,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":196,"com.google.gson.functional.UncategorizedTest.testTrailingWhitespace":268,"com.google.gson.functional.PrimitiveTest.testBooleanDeserialization":362,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":97,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":158,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":118,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":265,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsInteger":302,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":115,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":203,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":48,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":483,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":501,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":61,"com.google.gson.functional.CollectionTest.testSetSerialization":238,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":69,"com.google.gson.functional.StringTest.testStringValueSerialization":486,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":584,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":54,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":25,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":72,"com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization":566,"com.google.gson.MixedStreamTest.testWriteInvalidState":13,"com.google.gson.functional.ArrayTest.testInvalidArrayDeserialization":492,"com.google.gson.functional.ObjectTest.testJsonObjectSerialization":621,"com.google.gson.functional.PrimitiveTest.testBadValueForBigIntegerDeserialization":305,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":147,"com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero":311,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":44,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":407,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":230,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":217,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":23,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":588,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":5,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullSerialization":431,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":618,"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":534,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType":266,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":497},"transformations":[{"exception":"com.google.gson.JsonParseException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"6a960383-3e84-11e6-bf93-b1e2b807af1c","method":{"position":"com.google.gson.internal.Streams:39","type":"CtMethodImpl","sourcecode":"public static com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader reader) throws com.google.gson.JsonParseException {\n    boolean boolean = true;\n    try {\n        reader.peek();\n        isEmpty = false;\n        return com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<com.google.gson.JsonElement>.read(reader);\n    } catch (java.io.EOFException e) {\n        if (isEmpty) {\n            return com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull;\n        } \n        throw new com.google.gson.JsonSyntaxException(e);\n    } catch (com.google.gson.stream.MalformedJsonException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    } catch (java.io.IOException e) {\n        throw new com.google.gson.JsonIOException(e);\n    } catch (java.lang.NumberFormatException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"reader"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:176","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"6a969fc4-3e84-11e6-bf93-dbd755b085e8","method":{"position":"com.google.gson.stream.JsonWriter:490","type":"CtMethodImpl","sourcecode":"public com.google.gson.stream.JsonWriter value(java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467264452095/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value == null) {\n                return nullValue();\n            } \n            writeDeferredName();\n            java.lang.String java.lang.String = value.toString();\n            if ((!(boolean)) && (((string.equals(\"-Infinity\")) || (string.equals(\"Infinity\"))) || (string.equals(\"NaN\")))) {\n                throw new java.lang.IllegalArgumentException((\"Numeric values must be finite, but was \" + value));\n            } \n            beforeValue(false);\n            java.io.Writer.append(string);\n            return com.google.gson.stream.JsonWriter.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:332","type":"CtVariableReadImpl","sourcecode":"insert"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,0,70,71,72,73,74,1,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,2,104,105,106,3,107,108,109,110,4,5,111,112,113,114,115,116,117,6,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,7,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245],"tindex":"6a96c6d5-3e84-11e6-bf93-d71d2e9bb7d4","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:62","type":"CtMethodImpl","sourcecode":"static boolean excludeField(java.lang.reflect.Field f, boolean serialize, com.google.gson.internal.Excluder excluder) {\n    if (serialize) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467264452095/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (!(excluder.excludeClass(f.getType(), serialize))) && (!(excluder.excludeField(f, serialize)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"insert":"serialize"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.DefaultDateTypeAdapter:83","type":"CtBinaryOperatorImpl","sourcecode":"typeOfT == (java.util.Date.class)"},"failures":[246,247,248,249,250,251,252,10,253,254,255,256,257,258,259,11,260,12,13,261,262,263,14,15,16,264,265,266,17,18,19,267,268,20,21,269,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,270,38,39,271,40,41,42,43,44,45,272,273,46,47,48,49,50,51,52,53,274,54,55,56,275,57,58,59,276,60,61,62,63,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,64,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,65,374,375,376,66,67,377,68,378,69,379,380,381,382,383,384,385,386,387,388,0,70,71,72,73,74,1,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,389,2,104,390,105,106,3,107,108,109,110,4,5,111,112,391,113,114,392,393,394,395,396,115,116,397,398,399,400,401,402,403,404,405,117,406,407,408,6,409,410,411,412,413,414,118,415,416,417,418,419,420,421,119,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,120,437,438,439,440,121,441,442,443,444,445,446,447,448,449,122,123,450,451,452,124,453,454,455,456,457,458,125,126,459,460,461,127,128,129,130,462,131,132,133,463,464,465,466,134,467,468,135,136,137,138,139,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,140,141,142,143,144,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,145,146,147,508,509,510,511,512,148,513,514,149,150,515,151,152,516,153,154,155,156,157,517,158,159,160,161,162,163,164,518,519,520,165,166,167,7,521,168,522,523,169,170,524,525,526,527,528,529,530,531,532,533,534,535,536,171,537,538,539,540,541,542,543,544,172,8,545,546,173,547,174,175,9,548,549,176,550,551,552,553,554,555,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,556,194,195,196,197,557,198,558,199,200,201,202,559,203,204,205,206,560,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,561,223,224,225,226,562,227,228,229,230,231,232,233,563,234,564,565,566,567,568,569,570,571,235,572,573,574,575,236,237,576,577,238,578,579,580,581,582,583,239,240,584,585,586,241,587,588,589,590,591,592,593,594,595,596,597,598,242,599,600,601,602,243,244,603,245,604],"tindex":"6a96ede6-3e84-11e6-bf93-cdc4c9bb661c","method":{"position":"com.google.gson.reflect.TypeToken:295","type":"CtMethodImpl","sourcecode":"public static com.google.gson.reflect.TypeToken<?> get(java.lang.reflect.Type type) {\n    if (type == type) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467264452095/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new com.google.gson.reflect.TypeToken<java.lang.Object>(type);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeOfT":"type","java.util.Date.class":"type"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.DefaultDateTypeAdapter:83","type":"CtBinaryOperatorImpl","sourcecode":"typeOfT == (java.util.Date.class)"},"failures":[],"tindex":"6a9714f7-3e84-11e6-bf93-5be6bbac4ab8","method":{"position":"com.google.gson.internal.$Gson$Types:277","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type array) {\n    return array instanceof java.lang.reflect.GenericArrayType ? ((java.lang.reflect.GenericArrayType)(array)).getGenericComponentType() : ((java.lang.Class<?>)(array)).getComponentType();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeOfT":"array","java.util.Date.class":"array"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.DefaultDateTypeAdapter:85","type":"CtBinaryOperatorImpl","sourcecode":"typeOfT == (java.sql.Timestamp.class)"},"failures":[],"tindex":"6a973c08-3e84-11e6-bf93-0f99f698af97","method":{"position":"com.google.gson.internal.$Gson$Types:267","type":"CtMethodImpl","sourcecode":"static java.lang.reflect.Type getSupertype(java.lang.reflect.Type context, java.lang.Class<?> contextRawType, java.lang.Class<?> supertype) {\n    com.google.gson.internal.$Gson$Preconditions.checkArgument(supertype.isAssignableFrom(contextRawType));\n    return com.google.gson.internal.$Gson$Types.resolve(context, contextRawType, com.google.gson.internal.$Gson$Types.getGenericSupertype(context, contextRawType, supertype));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeOfT":"context","java.sql.Timestamp.class":"context"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"6a973c09-3e84-11e6-bf93-937784693355","method":{"position":"com.google.gson.Gson:310","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return in.nextLong();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:132","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.GenericArrayType"},"failures":[],"tindex":"6a97631a-3e84-11e6-bf93-d5ad96d04ad3","method":{"position":"com.google.gson.internal.$Gson$Types:217","type":"CtMethodImpl","sourcecode":"public static java.lang.String typeToString(java.lang.reflect.Type type) {\n    return type instanceof java.lang.Class ? ((java.lang.Class<?>)(type)).getName() : type.toString();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:76","type":"CtBinaryOperatorImpl","sourcecode":"(pendingName) != null"},"failures":[33,34,38,55,56,57,58,90,91,92,96,97,102,103,136,137,138,139,152,154,155,177,600,605,606,607,608],"tindex":"6a97631b-3e84-11e6-bf93-3314c6142692","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic com.google.gson.stream.JsonWriter name(java.lang.String name) throws java.io.IOException {\n    if (name != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467264452095/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if ((java.util.List<com.google.gson.JsonElement>.isEmpty()) || ((java.lang.String) != null)) {\n                throw new java.lang.IllegalStateException();\n            } \n            com.google.gson.JsonElement com.google.gson.JsonElement = peek();\n            if (element instanceof com.google.gson.JsonObject) {\n                java.lang.String = name;\n                return com.google.gson.internal.bind.JsonTreeWriter.this;\n            } \n            throw new java.lang.IllegalStateException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pendingName":"name"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:370","type":"CtBinaryOperatorImpl","sourcecode":"toResolve instanceof java.lang.reflect.WildcardType"},"failures":[],"tindex":"6a978a2c-3e84-11e6-bf93-1342f59eca75","method":{"position":"com.google.gson.internal.LinkedTreeMap:609","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(java.lang.Object key) {\n    if (key == key) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467264452095/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key instanceof java.lang.reflect.WildcardType) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467264452095/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return (removeInternalByKey(key)) != null;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:438","type":"CtBinaryOperatorImpl","sourcecode":"candidate != null"},"failures":[],"tindex":"6a978a2d-3e84-11e6-bf93-7fc95f0eae27","method":{"position":"com.google.gson.Gson:881","type":"CtMethodImpl","sourcecode":"public void setDelegate(com.google.gson.TypeAdapter<T> typeAdapter) {\n    if (typeAdapter != null) {\n        {\n            if ((com.google.gson.TypeAdapter<T>) != null) {\n                throw new java.lang.AssertionError();\n            } \n            com.google.gson.TypeAdapter<T> = typeAdapter;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467264452095/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"candidate":"typeAdapter"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1368","type":"CtUnaryOperatorImpl","sourcecode":"!charsLoaded"},"failures":[609],"tindex":"6a97b13e-3e84-11e6-bf93-db1cff8b19e5","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:338","type":"CtMethodImpl","sourcecode":"private void rebalance(com.google.gson.internal.LinkedHashTreeMap.Node<K, V> unbalanced, boolean insert) {\n    if (!insert) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467264452095/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = unbalanced ; node != null ; node = node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>) {\n                com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                int int = left != null ? left.int : 0;\n                int int = right != null ? right.int : 0;\n                int int = leftHeight - rightHeight;\n                if (delta == (-2)) {\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = right.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = right.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    int int = rightRight != null ? rightRight.int : 0;\n                    int int = rightLeft != null ? rightLeft.int : 0;\n                    int int = rightLeftHeight - rightRightHeight;\n                    if ((rightDelta == (-1)) || ((rightDelta == 0) && (!insert))) {\n                        rotateLeft(node);\n                    } else {\n                        assert rightDelta == 1;\n                        rotateRight(right);\n                        rotateLeft(node);\n                    }\n                    if (insert) {\n                        break;\n                    } \n                } else if (delta == 2) {\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = left.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = left.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    int int = leftRight != null ? leftRight.int : 0;\n                    int int = leftLeft != null ? leftLeft.int : 0;\n                    int int = leftLeftHeight - leftRightHeight;\n                    if ((leftDelta == 1) || ((leftDelta == 0) && (!insert))) {\n                        rotateRight(node);\n                    } else {\n                        assert leftDelta == (-1);\n                        rotateLeft(left);\n                        rotateRight(node);\n                    }\n                    if (insert) {\n                        break;\n                    } \n                } else if (delta == 0) {\n                    node.int = leftHeight + 1;\n                    if (insert) {\n                        break;\n                    } \n                } else {\n                    assert (delta == (-1)) || (delta == 1);\n                    node.int = (java.lang.Math.max(leftHeight, rightHeight)) + 1;\n                    if (!insert) {\n                        break;\n                    } \n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"charsLoaded":"insert"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1252","type":"CtBinaryOperatorImpl","sourcecode":"(p == (com.google.gson.stream.JsonReader.PEEKED_UNQUOTED_NAME)) || (p == (com.google.gson.stream.JsonReader.PEEKED_UNQUOTED))"},"failures":[],"tindex":"6a97ff5f-3e84-11e6-bf93-ffe2251659b2","method":{"position":"com.google.gson.stream.JsonWriter:353","type":"CtMethodImpl","sourcecode":"private void push(int newTop) {\n    if ((newTop == newTop) || (p == newTop)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467264452095/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((int) == (int[].int)) {\n                int[] int[] = new int[(int) * 2];\n                java.lang.System.arraycopy(int[], 0, newStack, 0, int);\n                int[] = newStack;\n            } \n            int[][((int)++)] = newTop;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"newTop","com.google.gson.stream.JsonReader.PEEKED_UNQUOTED":"newTop","com.google.gson.stream.JsonReader.PEEKED_UNQUOTED_NAME":"newTop"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:306","type":"CtBinaryOperatorImpl","sourcecode":"longSerializationPolicy == (com.google.gson.LongSerializationPolicy.DEFAULT)"},"failures":[],"tindex":"6a97ff60-3e84-11e6-bf93-3d7daebad2ff","method":{"position":"com.google.gson.internal.LinkedTreeMap:609","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(java.lang.Object key) {\n    if (key == key) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467264452095/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (key instanceof java.lang.reflect.WildcardType) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467264452095/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return (removeInternalByKey(key)) != null;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"longSerializationPolicy":"key","com.google.gson.LongSerializationPolicy.DEFAULT":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:111","type":"CtInvocationImpl","sourcecode":"primitive.isString()"},"failures":[445,136,139,610,611,612],"tindex":"6a982671-3e84-11e6-bf93-c1a6c3e3aa00","method":{"position":"com.google.gson.JsonPrimitive:333","type":"CtMethodImpl","sourcecode":"private static boolean isIntegral(com.google.gson.JsonPrimitive primitive) {\n    if (primitive.isString()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467264452095/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((primitive.java.lang.Object) instanceof java.lang.Number) {\n                java.lang.Number java.lang.Number = ((java.lang.Number)(primitive.java.lang.Object));\n                return ((((number instanceof java.math.BigInteger) || (number instanceof java.lang.Long)) || (number instanceof java.lang.Integer)) || (number instanceof java.lang.Short)) || (number instanceof java.lang.Byte);\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"primitive":"primitive"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl","sourcecode":"field.isSynthetic()"},"failures":[],"tindex":"6a982672-3e84-11e6-bf93-dd921c775d89","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:66","type":"CtMethodImpl","sourcecode":"private java.lang.String getFieldName(java.lang.reflect.Field f) {\n    if (f.isSynthetic()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467264452095/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getFieldName(com.google.gson.FieldNamingStrategy, f);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"f"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Streams:50","type":"CtVariableReadImpl","sourcecode":"isEmpty"},"failures":[246,247,248,10,253,254,255,256,11,12,613,13,261,263,14,614,615,264,265,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,270,38,39,41,44,45,272,616,273,46,49,50,53,54,617,618,55,56,275,57,58,59,276,60,62,63,280,282,288,291,299,300,306,308,309,312,315,317,318,321,322,326,335,337,339,340,343,346,348,351,352,353,354,355,356,357,361,363,367,368,370,373,374,67,377,68,69,379,380,382,384,385,386,388,0,71,73,1,75,76,77,78,80,81,82,85,87,90,91,92,93,94,95,96,97,100,101,102,103,389,2,390,105,106,3,107,108,110,4,5,112,114,393,394,395,397,399,400,402,404,405,407,6,410,411,412,413,414,415,417,418,420,119,422,423,424,426,429,431,432,434,435,120,437,438,439,440,121,443,444,446,449,123,619,620,124,453,454,455,456,125,459,460,461,127,128,129,130,462,131,132,133,463,464,465,466,134,467,468,135,136,137,138,139,470,471,472,473,474,477,479,483,486,490,491,493,494,495,496,497,500,501,502,506,145,147,509,511,148,513,514,149,150,515,151,152,154,155,156,517,160,162,518,520,165,166,7,521,168,522,169,525,529,530,533,535,171,541,542,543,8,545,173,547,174,175,9,548,176,550,552,555,177,178,181,182,183,186,189,192,621,194,622,196,557,558,199,201,202,559,204,207,209,210,212,217,218,219,220,222,224,226,228,229,230,231,232,233,563,234,564,568,569,570,571,235,574,237,576,238,578,580,582,583,239,240,584,585,586,241,587,588,589,590,591,592,593,594,597,242,600,601,602,243,244,623,624],"tindex":"6a984d83-3e84-11e6-bf93-756b8d968af2","method":{"position":"com.google.gson.stream.JsonWriter:234","type":"CtMethodImpl","sourcecode":"public final void setLenient(boolean lenient) {\n    if (lenient) {\n        {\n            com.google.gson.stream.JsonWriter.this.boolean = lenient;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467264452095/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isEmpty":"lenient"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:176","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[34,38,103,390,136,137,138,139,152,154,155,624],"tindex":"6a984d84-3e84-11e6-bf93-c726317ba6c4","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:175","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic com.google.gson.stream.JsonWriter value(java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        {\n            if (value == null) {\n                return nullValue();\n            } \n            if (!(isLenient())) {\n                double double = value.doubleValue();\n                if ((java.lang.Double.isNaN(d)) || (java.lang.Double.isInfinite(d))) {\n                    throw new java.lang.IllegalArgumentException((\"JSON forbids NaN and infinities: \" + value));\n                } \n            } \n            put(new com.google.gson.JsonPrimitive(value));\n            return com.google.gson.internal.bind.JsonTreeWriter.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467264452095/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:280","type":"CtInvocationImpl","sourcecode":"standardPrimitive.isAssignableFrom(classOfPrimitive)"},"failures":[],"tindex":"6a987495-3e84-11e6-bf93-f5b15ed465db","method":{"position":"com.google.gson.internal.Excluder:220","type":"CtMethodImpl","sourcecode":"private boolean isInnerClass(java.lang.Class<?> clazz) {\n    if (clazz.isAssignableFrom(clazz)) {\n        {\n            return (clazz.isMemberClass()) && (!(isStatic(clazz)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467264452095/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"standardPrimitive":"clazz","classOfPrimitive":"clazz"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.TreeTypeAdapter:55","type":"CtInvocationImpl","sourcecode":"value.isJsonNull()"},"failures":[625,626,627,394,402,404,437],"tindex":"6a987496-3e84-11e6-bf93-cdf6100cafc6","method":{"position":"com.google.gson.DefaultDateTypeAdapter:94","type":"CtMethodImpl","sourcecode":"private java.util.Date deserializeToDate(com.google.gson.JsonElement json) {\n    if (json.isJsonNull()) {\n        {\n            synchronized(java.text.DateFormat) {\n                try {\n                    return java.text.DateFormat.parse(json.getAsString());\n                } catch (java.text.ParseException ignored) {\n                }\n                try {\n                    return java.text.DateFormat.parse(json.getAsString());\n                } catch (java.text.ParseException ignored) {\n                }\n                try {\n                    return java.text.DateFormat.parse(json.getAsString());\n                } catch (java.text.ParseException e) {\n                    throw new com.google.gson.JsonSyntaxException(json.getAsString() , e);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467264452095/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"json"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:170","type":"CtBinaryOperatorImpl","sourcecode":"comparison < 0"},"failures":[],"tindex":"6a987497-3e84-11e6-bf93-e56353408c70","method":{"position":"com.google.gson.internal.Streams:93","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(int i) throws java.io.IOException {\n    if (i < 0) {\n        {\n            java.lang.Appendable.append(((char)(i)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467264452095/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparison":"i"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:683","type":"CtBinaryOperatorImpl","sourcecode":"last == (com.google.gson.stream.JsonReader.NUMBER_CHAR_NONE)"},"failures":[76,81,83,89,228,231],"tindex":"6a989ba8-3e84-11e6-bf93-0534898fa014","method":{"position":"com.google.gson.FieldNamingPolicy:163","type":"CtMethodImpl","sourcecode":"private static java.lang.String modifyString(char firstCharacter, java.lang.String srcString, int indexOfSubstring) {\n    if (indexOfSubstring == indexOfSubstring) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467264452095/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return indexOfSubstring < (srcString.length()) ? firstCharacter + (srcString.substring(indexOfSubstring)) : java.lang.String.valueOf(firstCharacter);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"last":"indexOfSubstring","com.google.gson.stream.JsonReader.NUMBER_CHAR_NONE":"indexOfSubstring"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:618","type":"CtBinaryOperatorImpl","sourcecode":"(c == 'f') || (c == 'F')"},"failures":[],"tindex":"6a989ba9-3e84-11e6-bf93-23164e9740d1","method":{"position":"com.google.gson.stream.JsonReader:1101","type":"CtMethodImpl","sourcecode":"private void skipQuotedValue(char quote) throws java.io.IOException {\n    if ((quote == 'f') || (c == 'F')) {\n        {\n            char[] char[] = com.google.gson.stream.JsonReader.this.char[];\n            do {\n                int int = int;\n                int int = int;\n                while (p < l) {\n                    int int = buffer[(p++)];\n                    if (c == quote) {\n                        int = p;\n                        return ;\n                    } else if (c == '\\\\') {\n                        int = p;\n                        readEscapeCharacter();\n                        p = int;\n                        l = int;\n                    } else if (c == '\\n') {\n                        (int)++;\n                        int = p;\n                    } \n                }\n                int = p;\n            } while (fillBuffer(1) );\n            throw syntaxError(\"Unterminated string\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467264452095/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"quote"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":23,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}