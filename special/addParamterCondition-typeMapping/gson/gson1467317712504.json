{"failureDictionary":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":1,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":81,"com.google.gson.functional.StringTest.testStringValueDeserialization":79,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":183,"com.google.gson.functional.PrimitiveTest.testBigIntegerDeserialization":426,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullDeserialization":283,"com.google.gson.functional.PrimitiveTest.testBigDecimalNaNDeserializationNotSupported":387,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":224,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":369,"com.google.gson.MixedStreamTest.testWriteLenient":11,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":232,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":331,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":292,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":313,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":184,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":201,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":329,"com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization":435,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":219,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":321,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":122,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerDeserialization":396,"com.google.gson.JsonObjectTest.testAddingNullPropertyValue":629,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":132,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":572,"com.google.gson.functional.ObjectTest.testSingletonLists":327,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":284,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":324,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":82,"com.google.gson.functional.PrimitiveTest.testNumberDeserialization":380,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator":504,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":524,"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":206,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization":302,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":347,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":18,"com.google.gson.functional.PrimitiveTest.testStringsAsBooleans":438,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":111,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeRecursive":607,"com.google.gson.functional.StringTest.testEscapedBackslashInStringDeserialization":95,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":97,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":71,"com.google.gson.functional.PrimitiveTest.testBigDecimalNoFractAsStringRepresentationDeserialization":427,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":165,"com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization":372,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":599,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":38,"com.google.gson.functional.MapTest.testMapOfMapDeserialization":164,"com.google.gson.functional.EnumTest.testEnumCaseMapping":218,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":20,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":80,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsLong":371,"com.google.gson.functional.JsonTreeTest.testToJsonTree":540,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":76,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveDeserialization":305,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":520,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":140,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":258,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullField":605,"com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization":57,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferDeserialization":276,"com.google.gson.functional.PrimitiveTest.testUnquotedStringDeserializationFails":382,"com.google.gson.internal.LinkedHashTreeMapTest.testAvlBuilder":622,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":575,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":194,"com.google.gson.functional.ObjectTest.testNullDeserialization":359,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":532,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringDeserialization":92,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":341,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization":448,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":596,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsBigIntegerFails":388,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":348,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":36,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":488,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":356,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":595,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":120,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectDeserialization":248,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":306,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionDeserialization":453,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":558,"com.google.gson.functional.PrimitiveTest.testDoubleInfinityDeserialization":452,"com.google.gson.JsonParserTest.testParseString":626,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization":301,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":432,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullObject":606,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":411,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArrayDeserialization":257,"com.google.gson.functional.PrimitiveTest.testFloatInfinityDeserialization":459,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":53,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":360,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":282,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityDeserialization":409,"com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization":157,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":233,"com.google.gson.functional.PrimitiveTest.testDoubleNoFractAsStringRepresentationDeserialization":424,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":550,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountryVariant":273,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":590,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":490,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":179,"com.google.gson.functional.JsonParserTest.testParseInvalidJson":239,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":433,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsDouble":425,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":47,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":355,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":24,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":26,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":335,"com.google.gson.functional.MapTest.testMapDeserializationWithNullValue":175,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":231,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":392,"com.google.gson.metrics.PerformanceTest.testDummy":23,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":325,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":511,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":130,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":32,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":492,"com.google.gson.functional.MapTest.testNumberKeyDeserialization":181,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings":521,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":107,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":290,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":29,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":275,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":487,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":535,"com.google.gson.functional.CollectionTest.testSetDeserialization":200,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":123,"com.google.gson.functional.EnumTest.testEnumSet":209,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersEscapedDeserialization":221,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":340,"com.google.gson.functional.PrimitiveTest.testBigDecimalAsStringRepresentationDeserialization":416,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":131,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":491,"com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithNestedWildcards":615,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":152,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampDeserialization":263,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":349,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":129,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":598,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBytePrimitive":429,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":31,"com.google.gson.functional.PrimitiveTest.testDeserializingDecimalPointValueZeroSucceeds":440,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":33,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":530,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":441,"com.google.gson.functional.MapTest.testHashMapDeserialization":146,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsIntegerFails":385,"com.google.gson.functional.CollectionTest.testLinkedListDeserialization":190,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesDeserialization":288,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization":3,"com.google.gson.MixedStreamTest.testReadNulls":12,"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":27,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":0,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":541,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":528,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":586,"com.google.gson.functional.MapTest.testSortedMap":168,"com.google.gson.functional.MapTest.testMapSerialization":163,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":2,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":103,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedDeserialization":422,"com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization":60,"com.google.gson.functional.MapTest.testSerializeMaps":149,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":311,"com.google.gson.functional.MapTest.testComplexKeysSerialization":176,"com.google.gson.functional.InternationalizationTest.testStringsWithRawChineseCharactersDeserialization":220,"com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader":180,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":67,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":216,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":534,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":584,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":553,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriter":525,"com.google.gson.functional.EnumTest.testTopLevelEnumDeserialization":214,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":74,"com.google.gson.internal.LinkedHashTreeMapTest.testDoubleCapacity":623,"com.google.gson.JsonObjectTest.testAddingAndRemovingObjectProperties":630,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":226,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsDeserialization":358,"com.google.gson.functional.MapTest.testStringKeyDeserialization":178,"com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithBasicWildcards":617,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsDeserialization":64,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":496,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":455,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":182,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesDeserialization":391,"com.google.gson.functional.PrettyPrintingTest.testMap":72,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigInteger":386,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":565,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":187,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":253,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":469,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls":526,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":17,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysDeserialization":66,"com.google.gson.functional.StringTest.testStringWithEscapedSlashDeserialization":85,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":89,"com.google.gson.functional.MapTest.testMapSerializationEmpty":177,"com.google.gson.functional.CollectionTest.testQueueSerialization":191,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":270,"com.google.gson.JsonObjectTest.testAddingBooleanProperties":631,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsByteWrapper":417,"com.google.gson.functional.MapTest.testMapOfMapSerialization":162,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":408,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountry":278,"com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization":197,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":419,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":613,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":505,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":83,"com.google.gson.functional.FieldNamingTest.testIdentity":312,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":493,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":478,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":361,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":230,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":315,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":326,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":539,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalDeserialization":374,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":600,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":84,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":484,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":241,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization":414,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeDeserialization":294,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":593,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidDeserialization":265,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":272,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullJsonElementSerialization":304,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":612,"com.google.gson.functional.MapTest.testMapDeserializationEmpty":143,"com.google.gson.functional.MapTest.testMapSubclassSerialization":148,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":451,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":139,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":319,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersDeserialization":223,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":8,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":109,"com.google.gson.functional.PrimitiveTest.testBigDecimalDeserialization":406,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":567,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":234,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguage":252,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsLongPrimitive":466,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":523,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":128,"com.google.gson.functional.EnumTest.testEnumSubclass":212,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization":428,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":19,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":345,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization":373,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":483,"com.google.gson.functional.PrimitiveTest.testFloatNaNDeserialization":434,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":495,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":548,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsLongWrapper":376,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":243,"com.google.gson.functional.PrimitiveTest.testBigDecimalNegativeInfinityDeserializationNotSupported":412,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":242,"com.google.gson.stream.JsonWriterTest.testNullName":624,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":509,"com.google.gson.functional.ArrayTest.testArrayOfNullDeserialization":56,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":592,"com.google.gson.functional.ObjectTest.testTruncatedDeserialization":339,"com.google.gson.functional.PrimitiveTest.testBigDecimalInfinityDeserializationNotSupported":418,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":229,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization":410,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":297,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":328,"com.google.gson.MixedStreamTest.testWriteNulls":9,"com.google.gson.functional.MapTest.testMapSubclassDeserialization":145,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":55,"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":237,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":49,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":125,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":533,"com.google.gson.CommentsTest.testParseComments":591,"com.google.gson.JsonObjectTest.testReadPropertyWithEmptyStringName":627,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":330,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":500,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":578,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":62,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigDecimal":431,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":474,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":102,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":87,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":167,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSubTypeFirstAllowed":99,"com.google.gson.MixedStreamTest.testReadInvalidState":6,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":119,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":137,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":299,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":450,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":104,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":384,"com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash":621,"com.google.gson.functional.ArrayTest.testArrayOfStringsDeserialization":68,"com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithTypeParameters":616,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":471,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":401,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":611,"com.google.gson.JsonArrayTest.testRemove":618,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":280,"com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization":445,"com.google.gson.functional.ArrayTest.testEmptyArrayDeserialization":52,"com.google.gson.functional.MapTest.testMapDeserialization":155,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":274,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":77,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":144,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":571,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":154,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":518,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":577,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":573,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":554,"com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization":213,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":538,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":250,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization":346,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":362,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":543,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":568,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":510,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":259,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":136,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":240,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":552,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":73,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":166,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":303,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigDecimal":370,"com.google.gson.functional.PrimitiveTest.testShortSerialization":449,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":502,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":580,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedDeserialization":437,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":40,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedDeserialization":407,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":436,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":264,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsBigDecimal":383,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":308,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":211,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":186,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":318,"com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues":150,"com.google.gson.functional.PrimitiveTest.testLargeDoubleDeserialization":400,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":207,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":457,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":235,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization":291,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":585,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":16,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization":464,"com.google.gson.functional.PrimitiveTest.testDeserializingNonZeroDecimalPointValuesAsIntegerFails":458,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":603,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":228,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":363,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":494,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":517,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":110,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":245,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":443,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":70,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsDoublePrimitive":413,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":497,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":367,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":334,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":217,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":222,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":545,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":195,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":260,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":563,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives":498,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":570,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":281,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":579,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsInt":390,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":267,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":589,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":581,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization":286,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization":188,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":514,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsShortWrapper":377,"com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral":444,"com.google.gson.functional.PrimitiveTest.testNumberSerialization":415,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":461,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":41,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":210,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":576,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":4,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":105,"com.google.gson.functional.MapTest.testGeneralMapField":172,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":332,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":46,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsShortPrimitive":463,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":61,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":485,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":564,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":293,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":170,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":246,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":381,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":557,"com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization":439,"com.google.gson.MixedStreamTest.testReadMixedStreamed":15,"com.google.gson.JsonObjectTest.testDeepCopy":632,"com.google.gson.functional.MapTest.testBooleanKeyDeserialization":158,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlDeserialization":261,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":402,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":202,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":588,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":601,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":323,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBooleanPrimitive":420,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":39,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":30,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":279,"com.google.gson.functional.MapTest.testDeerializeMapOfMaps":159,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":142,"com.google.gson.functional.MapTest.testMapDeserializationWithNullKey":147,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":462,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":501,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":101,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":114,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsFloatPrimitive":403,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":277,"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":238,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":479,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionDeserilaization":196,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserialization":244,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization":583,"com.google.gson.functional.ObjectTest.testNestedDeserialization":368,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":507,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":98,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":353,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":468,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":508,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":37,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsNumber":460,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":473,"com.google.gson.functional.StringTest.testSingleQuoteInStringDeserialization":86,"com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys":160,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":225,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":127,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":447,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":544,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":236,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":317,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":205,"com.google.gson.functional.ObjectTest.testNullSerialization":342,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":547,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization":141,"com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey":151,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":171,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":375,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization":58,"com.google.gson.functional.MapTest.testInterfaceTypeMap":169,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":566,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":513,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsDoubleWrapper":378,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":215,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":602,"com.google.gson.MixedStreamTest.testReadClosed":7,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":551,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails":569,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":247,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":35,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsInteger":394,"com.google.gson.MixedStreamTest.testWriteClosed":14,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":193,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":470,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateDeserialization":307,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":333,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":516,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":133,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":512,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":476,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":365,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":472,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":300,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":336,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":519,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":192,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":115,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBooleanWrapper":423,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":117,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":549,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":198,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":287,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":480,"com.google.gson.functional.PrimitiveTest.testDoubleAsStringRepresentationDeserialization":465,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":609,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":399,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":537,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderDeserialization":255,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":43,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":536,"com.google.gson.functional.CollectionTest.testQueueDeserialization":208,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":475,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":405,"com.google.gson.functional.PrimitiveTest.testByteDeserialization":421,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringDeserialization":91,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization":467,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":116,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":298,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":156,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":357,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":269,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":366,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":559,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":185,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":5,"com.google.gson.functional.MapTest.testRawMapSerialization":174,"com.google.gson.JsonParserTest.testParseReader":625,"com.google.gson.functional.CollectionTest.testNullsInListDeserialization":203,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetDeserialization":285,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize":604,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":351,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":542,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":108,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":582,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":619,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":48,"com.google.gson.functional.PrimitiveTest.testByteSerialization":446,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":522,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":561,"com.google.gson.ObjectTypeAdapterTest.testSerialize":614,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":555,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsFloatWrapper":389,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":314,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":59,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":309,"com.google.gson.functional.StringTest.testAssignmentCharDeserialization":88,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":134,"com.google.gson.GsonTypeAdapterTest.testDefaultTypeAdapterThrowsParseException":597,"com.google.gson.functional.MapTest.testMapWithQuotes":161,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":254,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatDeserialization":397,"com.google.gson.functional.StringTest.testEscapingQuotesInStringDeserialization":90,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":489,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":587,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":506,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":608,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsNumber":454,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":251,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":121,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":574,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":124,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":364,"com.google.gson.internal.LinkedHashTreeMapTest.testDoubleCapacityAllNodesOnLeft":620,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":78,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":266,"com.google.gson.functional.ObjectTest.testEmptyStringDeserialization":344,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":430,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":65,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":338,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":295,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":256,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":113,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":268,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":316,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigInteger":442,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriterAndSerializeNulls":529,"com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed":199,"com.google.gson.functional.ArrayTest.testSingleStringArrayDeserialization":51,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":44,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":126,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":296,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":546,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":481,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization":118,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":320,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReader":527,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":138,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsFloat":379,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":503,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":350,"com.google.gson.functional.ObjectTest.testNestedSerialization":352,"com.google.gson.JsonObjectTest.testAddingStringProperties":633,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":42,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringDeserialization":94,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":393,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":556,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":100,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":173,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":106,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":69,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":13,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":22,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":343,"com.google.gson.functional.UncategorizedTest.testTrailingWhitespace":477,"com.google.gson.functional.PrimitiveTest.testBooleanDeserialization":456,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":515,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":322,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":271,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":21,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsInteger":395,"com.google.gson.GsonBuilderTest.testCreatingMoreThanOnce":594,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":249,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":354,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":112,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":93,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":54,"com.google.gson.functional.CollectionTest.testSetSerialization":204,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":486,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":75,"com.google.gson.functional.StringTest.testStringValueSerialization":96,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":499,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":560,"com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization":189,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":227,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":610,"com.google.gson.MixedStreamTest.testWriteInvalidState":10,"com.google.gson.functional.ArrayTest.testInvalidArrayDeserialization":45,"com.google.gson.functional.ObjectTest.testJsonObjectSerialization":337,"com.google.gson.functional.PrimitiveTest.testBadValueForBigIntegerDeserialization":398,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":63,"com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero":404,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":25,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":262,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":310,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":531,"com.google.gson.JsonObjectTest.testAddingCharacterProperties":628,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":482,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":34,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":135,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullSerialization":289,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":562,"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":153,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType":28,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":50},"transformations":[{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:125","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"59c90e49-3eff-11e6-9a6e-c135444e74c5","method":{"position":"com.google.gson.Gson:847","type":"CtMethodImpl","sourcecode":"public <T>T fromJson(com.google.gson.JsonElement json, java.lang.Class<T> classOfT) throws com.google.gson.JsonSyntaxException {\n    if (json instanceof com.google.gson.JsonObject) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316617871/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    } else {\n        {\n            java.lang.Object java.lang.Object = fromJson(json, ((java.lang.reflect.Type)(classOfT)));\n            return com.google.gson.internal.Primitives.wrap(classOfT).cast(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:103","type":"CtVariableReadImpl"},"failures":[0,1,2,3,4],"tindex":"59c9837a-3eff-11e6-9a6e-213eaf49169a","method":{"position":"com.google.gson.internal.Excluder:96","type":"CtMethodImpl","sourcecode":"public com.google.gson.internal.Excluder withExclusionStrategy(com.google.gson.ExclusionStrategy exclusionStrategy, boolean serialization, boolean deserialization) {\n    if (serialization) {\n        {\n            com.google.gson.internal.Excluder com.google.gson.internal.Excluder = clone();\n            if (serialization) {\n                result.java.util.List<com.google.gson.ExclusionStrategy> = new java.util.ArrayList<com.google.gson.ExclusionStrategy>(java.util.List<com.google.gson.ExclusionStrategy>);\n                result.java.util.List<com.google.gson.ExclusionStrategy>.add(exclusionStrategy);\n            } \n            if (deserialization) {\n                result.java.util.List<com.google.gson.ExclusionStrategy> = new java.util.ArrayList<com.google.gson.ExclusionStrategy>(java.util.List<com.google.gson.ExclusionStrategy>);\n                result.java.util.List<com.google.gson.ExclusionStrategy>.add(exclusionStrategy);\n            } \n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316617871/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deserialization":"serialization"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"59c9837b-3eff-11e6-9a6e-a57ce5384519","method":{"position":"com.google.gson.internal.bind.TypeAdapters:267","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    out.value(value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonElement:136","type":"CtInvocationImpl"},"failures":[],"tindex":"59c9aa8c-3eff-11e6-9a6e-f146c015d88f","method":{"position":"com.google.gson.DefaultDateTypeAdapter:94","type":"CtMethodImpl","sourcecode":"private java.util.Date deserializeToDate(com.google.gson.JsonElement json) {\n    synchronized(java.text.DateFormat) {\n        try {\n            return java.text.DateFormat.parse(json.getAsString());\n        } catch (java.text.ParseException ignored) {\n        }\n        try {\n            return java.text.DateFormat.parse(json.getAsString());\n        } catch (java.text.ParseException ignored) {\n        }\n        try {\n            return java.text.DateFormat.parse(json.getAsString());\n        } catch (java.text.ParseException e) {\n            throw new com.google.gson.JsonSyntaxException(json.getAsString() , e);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:306","type":"CtBinaryOperatorImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,0,467,1,2,3,468,469,470,4,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601],"tindex":"59c9aa8d-3eff-11e6-9a6e-2526d8fcc793","method":{"position":"com.google.gson.Gson:305","type":"CtMethodImpl","sourcecode":"private com.google.gson.TypeAdapter<java.lang.Number> longAdapter(com.google.gson.LongSerializationPolicy longSerializationPolicy) {\n    if (longSerializationPolicy == longSerializationPolicy) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316617871/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (longSerializationPolicy == (com.google.gson.LongSerializationPolicy.com.google.gson.LongSerializationPolicy.com.google.gson.LongSerializationPolicy)) {\n                return com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<java.lang.Number>;\n            } \n            return new com.google.gson.TypeAdapter<java.lang.Number>() {\n                @java.lang.Override\n                public java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n                    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n                        in.nextNull();\n                        return null;\n                    } \n                    return in.nextLong();\n                }\n\n                @java.lang.Override\n                public void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n                    if (value == null) {\n                        out.nullValue();\n                        return ;\n                    } \n                    out.value(value.toString());\n                }\n            };\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"longSerializationPolicy":"longSerializationPolicy","com.google.gson.LongSerializationPolicy.DEFAULT":"longSerializationPolicy"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:334","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"59c9f8ae-3eff-11e6-9a6e-dd4f1fcb708a","method":{"position":"com.google.gson.TreeTypeAdapter:84","type":"CtMethodImpl","sourcecode":"public static com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken<?> exactType, java.lang.Object typeAdapter) {\n    if (typeAdapter instanceof java.lang.Number) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316617871/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new com.google.gson.TreeTypeAdapter.SingleTypeFactory(typeAdapter , exactType , false , null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"primitive":"typeAdapter","value":"typeAdapter"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:188","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"59ca1fbf-3eff-11e6-9a6e-c18c797c8b35","method":{"position":"com.google.gson.internal.LinkedTreeMap:481","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"rawtypes\")\n@java.lang.Override\npublic boolean equals(java.lang.Object o) {\n    if (o instanceof java.lang.reflect.WildcardType) {\n        {\n            if (o instanceof java.util.Map.Entry) {\n                java.util.Map.Entry java.util.Map.Entry = ((java.util.Map.Entry)(o));\n                return ((K) == null ? (other.getKey()) == null : K.equals(other.getKey())) && ((V) == null ? (other.getValue()) == null : V.equals(other.getValue()));\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316617871/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.internal.ConstructorConstructor:181","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"59ca1fc0-3eff-11e6-9a6e-8d98fd9d89c4","method":{"position":"com.google.gson.Gson:773","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic <T>T fromJson(java.io.Reader json, java.lang.reflect.Type typeOfT) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException {\n    if ((typeOfT instanceof java.lang.reflect.ParameterizedType) && (!(typeOfT.isAssignableFrom(com.google.gson.reflect.TypeToken.get(((java.lang.reflect.ParameterizedType)(type)).getActualTypeArguments()[0]).getRawType())))) {\n        {\n            com.google.gson.stream.JsonReader com.google.gson.stream.JsonReader = new com.google.gson.stream.JsonReader(json);\n            T T = ((T)(fromJson(jsonReader, typeOfT)));\n            com.google.gson.Gson.assertFullConsumption(object, jsonReader);\n            return object;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316617871/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.lang.String.class":"typeOfT","type":"typeOfT"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:92","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"59ca46d1-3eff-11e6-9a6e-ad6a2cfc971f","method":{"position":"com.google.gson.Gson:591","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic void toJson(java.lang.Object src, java.lang.reflect.Type typeOfSrc, com.google.gson.stream.JsonWriter writer) throws com.google.gson.JsonIOException {\n    if (src instanceof java.util.Iterator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316617871/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    } else {\n        {\n            com.google.gson.TypeAdapter<?> com.google.gson.TypeAdapter<?> = getAdapter(com.google.gson.reflect.TypeToken.get(typeOfSrc));\n            boolean boolean = writer.isLenient();\n            writer.setLenient(true);\n            boolean boolean = writer.isHtmlSafe();\n            writer.setHtmlSafe(boolean);\n            boolean boolean = writer.getSerializeNulls();\n            writer.setSerializeNulls(boolean);\n            try {\n                ((com.google.gson.TypeAdapter<java.lang.Object>)(adapter)).write(writer, src);\n            } catch (java.io.IOException e) {\n                throw new com.google.gson.JsonIOException(e);\n            } finally {\n                writer.setLenient(oldLenient);\n                writer.setHtmlSafe(oldHtmlSafe);\n                writer.setSerializeNulls(oldSerializeNulls);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonElement:87","type":"CtInvocationImpl"},"failures":[],"tindex":"59ca6de2-3eff-11e6-9a6e-f15b2146c1bf","method":{"position":"com.google.gson.JsonObject:53","type":"CtMethodImpl","sourcecode":"public void add(java.lang.String property, com.google.gson.JsonElement value) {\n    if (value == null) {\n        value = com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull;\n    } \n    com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.put(property, value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1091","type":"CtBinaryOperatorImpl"},"failures":[264],"tindex":"59ca6de3-3eff-11e6-9a6e-158fc552a2cb","method":{"position":"com.google.gson.internal.bind.TypeAdapters:414","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.StringBuilder value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316617871/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            out.value((value == null ? null : value.toString()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"builder":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"59ca6de4-3eff-11e6-9a6e-f54f3594cb7e","method":{"position":"com.google.gson.internal.bind.TypeAdapters:63","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Class value) throws java.io.IOException {\n    if (value == null) {\n        out.nullValue();\n    } else {\n        throw new java.lang.UnsupportedOperationException(((\"Attempted to serialize java.lang.Class: \" + (value.getName())) + \". Forgot to register a type adapter?\"));\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.$Gson$Types:179","type":"CtBinaryOperatorImpl"},"failures":[5,8,24,25,26,41,42,61,69,73,74,78,97,101,104,106,602,603,604,605,606,607,110,113,114,117,119,121,122,123,124,127,128,129,130,131,133,134,135,137,140,156,169,171,172,183,184,186,195,201,204,608,215,224,226,230,231,240,243,279,295,300,308,309,310,311,312,313,314,316,317,318,319,320,324,326,327,330,333,336,340,343,349,351,352,355,360,362,363,365,609,610,611,612,613,0,1,2,469,471,472,473,474,475,476,478,479,481,483,485,487,488,495,497,499,508,509,510,511,512,513,514,515,518,519,520,524,530,531,532,533,534,536,537,538,539,540,541,542,543,545,546,547,550,552,555,558,559,560,567,570,576,577,579,581,584,586,589,590,614,592,593,598],"tindex":"59ca94f5-3eff-11e6-9a6e-b9a2b228a9df","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:108","type":"CtMethodImpl","sourcecode":"public boolean writeField(java.lang.Object value) throws java.io.IOException, java.lang.IllegalAccessException {\n    if (value instanceof java.lang.reflect.GenericArrayType) {\n        {\n            if (!(boolean))\n                return false;\n            \n            java.lang.Object java.lang.Object = field.get(value);\n            return fieldValue != value;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316617871/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:817","type":"CtVariableReadImpl"},"failures":[5,8,10,14,15,16,24,25,26,29,30,31,41,42,61,62,63,69,70,73,74,78,97,101,103,104,105,106,108,110,111,112,113,114,115,116,117,119,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,139,140,156,165,169,171,172,176,183,184,186,195,200,201,204,608,215,216,224,225,226,227,228,229,230,231,232,233,234,235,236,240,241,242,243,249,250,260,264,271,279,295,300,308,309,310,311,312,313,314,316,317,318,319,320,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,338,340,341,343,345,347,349,350,351,352,354,355,356,357,360,361,362,363,364,365,366,367,368,369,443,609,610,611,612,613,0,1,2,468,469,470,4,471,472,473,474,475,476,478,479,481,482,483,485,486,487,488,490,494,495,497,499,508,509,510,511,512,513,514,515,516,517,518,519,520,523,524,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,558,559,560,567,570,571,572,576,577,578,579,581,584,585,586,588,589,590,614,592,593,598],"tindex":"59cabc06-3eff-11e6-9a6e-9900501700e8","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:58","type":"CtMethodImpl","sourcecode":"public boolean excludeField(java.lang.reflect.Field f, boolean serialize) {\n    if (serialize) {\n        {\n            return com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.excludeField(f, serialize, com.google.gson.internal.Excluder);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316617871/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isEmpty":"serialize"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"59cabc07-3eff-11e6-9a6e-e7519e19461e","method":{"position":"com.google.gson.internal.bind.TypeAdapters:188","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        int int = in.nextInt();\n        return ((byte)(intValue));\n    } catch (java.lang.NumberFormatException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.stream.JsonWriter:565","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"59cabc08-3eff-11e6-9a6e-3fd97e40ec54","method":{"position":"com.google.gson.JsonParser:44","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement parse(java.lang.String json) throws com.google.gson.JsonSyntaxException {\n    if (json == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316617871/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    } else {\n        {\n            return parse(new java.io.StringReader(json));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"indent":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:171","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"59cae319-3eff-11e6-9a6e-d1e4813a1d63","method":{"position":"com.google.gson.internal.bind.JsonTreeReader:137","type":"CtMethodImpl","sourcecode":"private void expect(com.google.gson.stream.JsonToken expected) throws java.io.IOException {\n    if ((expected != expected) && (token != expected)) {\n        {\n            if ((peek()) != expected) {\n                throw new java.lang.IllegalStateException((((\"Expected \" + expected) + \" but was \") + (peek())));\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316617871/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"com.google.gson.stream.JsonToken.STRING":"expected","token":"expected","com.google.gson.stream.JsonToken.NUMBER":"expected"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"59cae31a-3eff-11e6-9a6e-ab4b2c5f27a0","method":{"position":"com.google.gson.TreeTypeAdapter:50","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic T read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((com.google.gson.JsonDeserializer<T>) == null) {\n        return delegate().read(in);\n    } \n    com.google.gson.JsonElement com.google.gson.JsonElement = com.google.gson.internal.Streams.parse(in);\n    if (value.isJsonNull()) {\n        return null;\n    } \n    return com.google.gson.JsonDeserializer<T>.deserialize(value, com.google.gson.reflect.TypeToken<T>.getType(), com.google.gson.Gson.com.google.gson.JsonDeserializationContext);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:125","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"59cae31b-3eff-11e6-9a6e-5b05bb707478","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:839","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(java.lang.Object o) {\n    if (o instanceof com.google.gson.JsonObject) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316617871/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return containsKey(o);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:565","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"59cae31c-3eff-11e6-9a6e-992ee9978007","method":{"position":"com.google.gson.JsonObject:89","type":"CtMethodImpl","sourcecode":"public void addProperty(java.lang.String property, java.lang.Number value) {\n    if (property == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316617871/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            add(property, createJsonElement(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"indent":"property"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:118","type":"CtBinaryOperatorImpl"},"failures":[615,616,617],"tindex":"59cae31d-3eff-11e6-9a6e-c7ff8feb0c93","method":{"position":"com.google.gson.reflect.TypeToken:122","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic boolean isAssignableFrom(java.lang.reflect.Type from) {\n    if (from instanceof java.lang.Class<?>) {\n        {\n            if (from == null) {\n                return false;\n            } \n            if (java.lang.reflect.Type.equals(from)) {\n                return true;\n            } \n            if ((java.lang.reflect.Type) instanceof java.lang.Class<?>) {\n                return java.lang.Class<? super T>.isAssignableFrom(com.google.gson.internal.$Gson$Types.getRawType(from));\n            } else if ((java.lang.reflect.Type) instanceof java.lang.reflect.ParameterizedType) {\n                return com.google.gson.reflect.TypeToken.isAssignableFrom(from, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)), new java.util.HashMap<java.lang.String, java.lang.reflect.Type>());\n            } else if ((java.lang.reflect.Type) instanceof java.lang.reflect.GenericArrayType) {\n                return (java.lang.Class<? super T>.isAssignableFrom(com.google.gson.internal.$Gson$Types.getRawType(from))) && (com.google.gson.reflect.TypeToken.isAssignableFrom(from, ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type))));\n            } else {\n                throw com.google.gson.reflect.TypeToken.buildUnexpectedTypeError(java.lang.reflect.Type, java.lang.Class.java.lang.Class.java.lang.Class, java.lang.reflect.ParameterizedType.java.lang.reflect.ParameterizedType.java.lang.Class, java.lang.reflect.GenericArrayType.java.lang.reflect.GenericArrayType.java.lang.Class);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316617871/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"from"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:92","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"59cae31e-3eff-11e6-9a6e-3d6cec502381","method":{"position":"com.google.gson.Gson:468","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement toJsonTree(java.lang.Object src) {\n    if (src instanceof java.util.Iterator) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316617871/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (src == null) {\n                return com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull;\n            } \n            return toJsonTree(src, src.getClass());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:174","type":"CtInvocationImpl"},"failures":[],"tindex":"59cb0a2f-3eff-11e6-9a6e-371ce0a2738c","method":{"position":"com.google.gson.internal.LinkedTreeMap:184","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\ncom.google.gson.internal.LinkedTreeMap.Node<K, V> findByObject(java.lang.Object key) {\n    try {\n        return key != null ? find(((K)(key)), false) : null;\n    } catch (java.lang.ClassCastException e) {\n        return null;\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"key","this":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:136","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"59cb0a30-3eff-11e6-9a6e-05630e71d876","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:512","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"rawtypes\")\n@java.lang.Override\npublic boolean equals(java.lang.Object o) {\n    if (o instanceof java.lang.reflect.GenericArrayType) {\n        {\n            if (o instanceof java.util.Map.Entry) {\n                java.util.Map.Entry java.util.Map.Entry = ((java.util.Map.Entry)(o));\n                return ((K) == null ? (other.getKey()) == null : K.equals(other.getKey())) && ((V) == null ? (other.getValue()) == null : V.equals(other.getValue()));\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316617871/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:872","type":"CtBinaryOperatorImpl"},"failures":[618],"tindex":"59cb0a31-3eff-11e6-9a6e-c1fe94b1bfd8","method":{"position":"com.google.gson.JsonArray:92","type":"CtMethodImpl","sourcecode":"public boolean remove(com.google.gson.JsonElement element) {\n    if (element == null) {\n        {\n            return java.util.List<com.google.gson.JsonElement>.remove(element);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316617871/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"element"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"59cb0a32-3eff-11e6-9a6e-e1cb2d416acb","method":{"position":"com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:39","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic T read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    return com.google.gson.TypeAdapter<T>.read(in);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:429","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"59cb0a33-3eff-11e6-9a6e-0f2c0d9cc80a","method":{"position":"com.google.gson.JsonObject:171","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonArray getAsJsonArray(java.lang.String memberName) {\n    if (memberName != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316617871/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((com.google.gson.JsonArray)(com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.get(memberName)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"memberName"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:235","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"59cb3144-3eff-11e6-9a6e-59fcbe186be6","method":{"position":"com.google.gson.Gson:297","type":"CtMethodImpl","sourcecode":"private void checkValidFloatingPoint(double value) {\n    if (value > value) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316617871/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(value))) {\n                throw new java.lang.IllegalArgumentException(((value + \" is not a valid double value as per JSON specification. To override this\") + \" behavior, use GsonBuilder.serializeSpecialFloatingPointValues() method.\"));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"version":"value","annotationVersion":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:113","type":"CtInvocationImpl"},"failures":[],"tindex":"59cb3145-3eff-11e6-9a6e-b9025be404c5","method":{"position":"com.google.gson.JsonArray:329","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object o) {\n    if (o.isBoolean()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316617871/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (o == (com.google.gson.JsonArray.this)) || ((o instanceof com.google.gson.JsonArray) && (((com.google.gson.JsonArray)(o)).java.util.List<com.google.gson.JsonElement>.equals(java.util.List<com.google.gson.JsonElement>)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"primitive":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:298","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"59cb3146-3eff-11e6-9a6e-9b4ebdd71804","method":{"position":"com.google.gson.GsonBuilder:103","type":"CtMethodImpl","sourcecode":"public com.google.gson.GsonBuilder setVersion(double ignoreVersionsAfter) {\n    if ((java.lang.Double.isNaN(ignoreVersionsAfter)) || (java.lang.Double.isInfinite(value))) {\n        {\n            com.google.gson.internal.Excluder = com.google.gson.internal.Excluder.withVersion(ignoreVersionsAfter);\n            return com.google.gson.GsonBuilder.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316617871/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"ignoreVersionsAfter"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.Gson:782","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"59cb3147-3eff-11e6-9a6e-05f65926dbf3","method":{"position":"com.google.gson.internal.bind.ObjectTypeAdapter:94","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Object value) throws java.io.IOException {\n    if ((value != null) && ((value.peek()) != value)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316617871/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value == null) {\n                out.nullValue();\n                return ;\n            } \n            com.google.gson.TypeAdapter<java.lang.Object> com.google.gson.TypeAdapter<java.lang.Object> = ((com.google.gson.TypeAdapter<java.lang.Object>)(com.google.gson.Gson.getAdapter(value.getClass())));\n            if (typeAdapter instanceof com.google.gson.internal.bind.ObjectTypeAdapter) {\n                out.beginObject();\n                out.endObject();\n                return ;\n            } \n            typeAdapter.write(out, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"com.google.gson.stream.JsonToken.END_DOCUMENT":"value","obj":"value","reader":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:306","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"59cb3148-3eff-11e6-9a6e-7f5fcc077e7d","method":{"position":"com.google.gson.GsonBuilder:261","type":"CtMethodImpl","sourcecode":"public com.google.gson.GsonBuilder setLongSerializationPolicy(com.google.gson.LongSerializationPolicy serializationPolicy) {\n    if (serializationPolicy == serializationPolicy) {\n        {\n            com.google.gson.GsonBuilder.this.com.google.gson.LongSerializationPolicy = serializationPolicy;\n            return com.google.gson.GsonBuilder.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316617871/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"longSerializationPolicy":"serializationPolicy","com.google.gson.LongSerializationPolicy.DEFAULT":"serializationPolicy"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"59cb3149-3eff-11e6-9a6e-9990acbc893d","method":{"position":"com.google.gson.internal.bind.TypeAdapters:744","type":"CtMethodImpl","sourcecode":"public void write(com.google.gson.stream.JsonWriter out, T value) throws java.io.IOException {\n    out.value((value == null ? null : java.util.Map<T, java.lang.String>.get(value)));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:341","type":"CtBinaryOperatorImpl"},"failures":[5,8,13,24,25,26,41,42,43,44,48,49,53,54,59,61,65,69,74,78,80,81,82,83,84,87,89,93,96,97,100,101,104,106,604,607,113,126,131,148,149,152,154,156,161,162,169,171,172,174,176,179,183,184,185,191,193,194,195,198,201,202,222,240,243,270,290,293,319,320,321,324,327,330,333,336,343,349,352,360,365,381,384,399,609,610,611,612,613,0,1,2,471,472,475,478,479,508,509,510,511,513,514,515,518,519,520,522,524,530,537,538,540,541,543,545,546,550,555,556,557,558,559,560,567,573,589,590,592,593,619,598,601],"tindex":"59cb585a-3eff-11e6-9a6e-f3ef8aab03ef","method":{"position":"com.google.gson.internal.bind.TypeAdapters:361","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.String value) throws java.io.IOException {\n    if (value != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316617871/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            out.value(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:386","type":"CtBinaryOperatorImpl"},"failures":[183,508,509,510,514,515,520,539],"tindex":"59cb585b-3eff-11e6-9a6e-f382354c249a","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:144","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic com.google.gson.stream.JsonWriter value(java.lang.String value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316617871/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value == null) {\n                return nullValue();\n            } \n            put(new com.google.gson.JsonPrimitive(value));\n            return com.google.gson.internal.bind.JsonTreeWriter.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"59cb585c-3eff-11e6-9a6e-0d455728a984","method":{"position":"com.google.gson.internal.bind.TypeAdapters:326","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Character read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    java.lang.String java.lang.String = in.nextString();\n    if ((str.length()) != 1) {\n        throw new com.google.gson.JsonSyntaxException((\"Expecting character, got: \" + str));\n    } \n    return str.charAt(0);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:176","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"59cb585d-3eff-11e6-9a6e-5700dbb227f2","method":{"position":"com.google.gson.internal.bind.TypeAdapters:282","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316617871/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            out.value(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:291","type":"CtBinaryOperatorImpl"},"failures":[620,621,622,623],"tindex":"59cb585e-3eff-11e6-9a6e-235cea3a21ef","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:686","type":"CtMethodImpl","sourcecode":"void add(com.google.gson.internal.LinkedHashTreeMap.Node<K, V> node) {\n    if (node != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316617871/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = null;\n            node.int = 1;\n            if (((int) > 0) && (((int) & 1) == 0)) {\n                (int)++;\n                (int)--;\n                (int)++;\n            } \n            node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = node;\n            (int)++;\n            if (((int) > 0) && (((int) & 1) == 0)) {\n                (int)++;\n                (int)--;\n                (int)++;\n            } \n            for (int int = 4 ; ((int) & (scale - 1)) == (scale - 1) ; scale *= 2) {\n                if ((int) == 0) {\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = right.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = center.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    center.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = left.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = center;\n                    center.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = left;\n                    center.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = right;\n                    center.int = (right.int) + 1;\n                    left.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = center;\n                    right.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = center;\n                } else if ((int) == 1) {\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = right.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = center;\n                    center.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = right;\n                    center.int = (right.int) + 1;\n                    right.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = center;\n                    int = 0;\n                } else if ((int) == 2) {\n                    int = 0;\n                } \n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"right":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:789","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"59cb7f6f-3eff-11e6-9a6e-5db9d6f0cc2d","method":{"position":"com.google.gson.internal.Streams:93","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(int i) throws java.io.IOException {\n    if (i == i) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316617871/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            java.lang.Appendable.append(((char)(i)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"i","com.google.gson.stream.JsonReader.PEEKED_NONE":"i"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:520","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"59cba680-3eff-11e6-9a6e-b9031eda353c","method":{"position":"com.google.gson.JsonArray:105","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement remove(int index) {\n    if (index == index) {\n        {\n            return java.util.List<com.google.gson.JsonElement>.remove(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316617871/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"peekStack":"index","com.google.gson.stream.JsonScope.DANGLING_NAME":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"59cba681-3eff-11e6-9a6e-fd9e6cbe3ac6","method":{"position":"com.google.gson.Gson:895","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, T value) throws java.io.IOException {\n    if ((com.google.gson.TypeAdapter<T>) == null) {\n        throw new java.lang.IllegalStateException();\n    } \n    com.google.gson.TypeAdapter<T>.write(out, value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"59cba682-3eff-11e6-9a6e-f5769e8b3db8","method":{"position":"com.google.gson.internal.bind.TypeAdapters:635","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.util.Locale value) throws java.io.IOException {\n    out.value((value == null ? null : value.toString()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:204","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"59cba683-3eff-11e6-9a6e-b1fc0a547fe7","method":{"position":"com.google.gson.internal.$Gson$Types:411","type":"CtMethodImpl","sourcecode":"private static int indexOf(java.lang.Object[] array, java.lang.Object toFind) {\n    for (int int = 0 ; i < (array.int) ; i++) {\n        if (toFind.equals(array[i])) {\n            return i;\n        } \n    }\n    throw new java.util.NoSuchElementException();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ptype":"toFind"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:429","type":"CtBinaryOperatorImpl"},"failures":[624],"tindex":"59cba684-3eff-11e6-9a6e-31a9bd8edd91","method":{"position":"com.google.gson.stream.JsonWriter:385","type":"CtMethodImpl","sourcecode":"public com.google.gson.stream.JsonWriter name(java.lang.String name) throws java.io.IOException {\n    if (name != null) {\n        {\n            if (name == null) {\n                throw new java.lang.NullPointerException(\"name == null\");\n            } \n            if ((java.lang.String) != null) {\n                throw new java.lang.IllegalStateException();\n            } \n            if ((int) == 0) {\n                throw new java.lang.IllegalStateException(\"JsonWriter is closed.\");\n            } \n            java.lang.String = name;\n            return com.google.gson.stream.JsonWriter.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316617871/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"name"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:414","type":"CtBinaryOperatorImpl"},"failures":[625,626,97,104,105,106,138,608,313,314,316,317,1,475,476,480,492,508,509,510,514,515,520,627,628,629,630,631,632,633],"tindex":"59cbcd95-3eff-11e6-9a6e-5f5b8a300f67","method":{"position":"com.google.gson.JsonObject:151","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement get(java.lang.String memberName) {\n    if (memberName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316617871/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (memberName == null) {\n                {\n                    return com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.get(memberName);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316617871/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"memberName"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"com.google.gson.internal.bind.SqlDateTypeAdapter:51","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"59cbcd96-3eff-11e6-9a6e-df51bc0579e6","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:94","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\n@java.lang.Override\nvoid write(com.google.gson.stream.JsonWriter writer, java.lang.Object value) throws java.io.IOException, java.lang.IllegalAccessException {\n    if ((value.peek()) == value) {\n        {\n            java.lang.Object java.lang.Object = field.get(value);\n            com.google.gson.TypeAdapter com.google.gson.TypeAdapter = new com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper(context , this.com.google.gson.TypeAdapter<?> , fieldType.getType());\n            t.write(writer, fieldValue);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316617871/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"in":"value","com.google.gson.stream.JsonToken.NULL":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:389","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"59cbcd97-3eff-11e6-9a6e-7170b34575d6","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic com.google.gson.stream.JsonWriter name(java.lang.String name) throws java.io.IOException {\n    if (name != null) {\n        {\n            if ((java.util.List<com.google.gson.JsonElement>.isEmpty()) || ((java.lang.String) != null)) {\n                throw new java.lang.IllegalStateException();\n            } \n            com.google.gson.JsonElement com.google.gson.JsonElement = peek();\n            if (element instanceof com.google.gson.JsonObject) {\n                java.lang.String = name;\n                return com.google.gson.internal.bind.JsonTreeWriter.this;\n            } \n            throw new java.lang.IllegalStateException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316617871/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"name"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"59cbcd98-3eff-11e6-9a6e-715893d03266","method":{"position":"com.google.gson.internal.bind.TypeAdapters:188","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        int int = in.nextInt();\n        return ((byte)(intValue));\n    } catch (java.lang.NumberFormatException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"59cbcd99-3eff-11e6-9a6e-61d16a8fbca8","method":{"position":"com.google.gson.internal.Excluder:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, T value) throws java.io.IOException {\n    if (skipSerialize) {\n        out.nullValue();\n        return ;\n    } \n    delegate().write(out, value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"59cbf4aa-3eff-11e6-9a6e-2df1b8784a54","method":{"position":"com.google.gson.internal.bind.TypeAdapters:460","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.net.URI read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        java.lang.String java.lang.String = in.nextString();\n        return \"null\".equals(nextString) ? null : new java.net.URI(nextString);\n    } catch (java.net.URISyntaxException e) {\n        throw new com.google.gson.JsonIOException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"59cbf4ab-3eff-11e6-9a6e-49312c8fa556","method":{"position":"com.google.gson.internal.bind.TypeAdapters:530","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.sql.Timestamp value) throws java.io.IOException {\n    dateTypeAdapter.write(out, value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:198","type":"CtBinaryOperatorImpl"},"failures":[17,18,19,20,21,22,24,25,26,27,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,53,54,55,59,61,63,65,67,69,71,72,73,74,75,76,77,78,80,81,82,83,84,87,89,93,96,97,98,100,101,104,106,602,109,110,113,114,117,119,120,121,122,123,124,126,127,128,129,130,131,133,134,135,137,140,142,144,148,149,152,154,156,161,162,163,166,167,169,170,171,172,173,174,176,177,179,182,183,184,185,186,187,191,192,193,194,195,198,201,202,204,205,207,608,209,210,211,212,215,217,218,219,222,224,226,228,230,231,240,243,245,246,247,251,253,254,256,258,259,262,264,266,267,268,269,270,272,274,275,277,279,280,281,282,284,287,289,290,292,293,295,296,297,298,299,300,303,304,306,308,309,310,311,312,318,319,320,321,324,326,327,330,333,336,337,340,342,343,346,348,349,351,352,353,355,360,362,363,365,373,375,381,384,392,393,399,401,402,405,408,410,411,414,415,419,428,430,432,433,436,439,441,445,446,447,448,449,450,451,455,457,461,462,464,609,610,611,612,613,0,467,2,469,471,472,473,474,478,479,481,483,484,485,487,488,489,491,495,496,497,499,500,501,503,505,506,507,511,512,513,518,519,522,524,525,529,530,531,532,533,534,536,538,541,542,543,544,545,546,547,550,552,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,573,575,576,577,579,580,581,582,584,586,589,590,592,593,595,596,598,599,600,601],"tindex":"59cbf4ac-3eff-11e6-9a6e-1521136a2990","method":{"position":"com.google.gson.internal.Streams:72","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"resource\")\npublic static java.io.Writer writerForAppendable(java.lang.Appendable appendable) {\n    if (appendable == null) {\n        {\n            return appendable instanceof java.io.Writer ? ((java.io.Writer)(appendable)) : new com.google.gson.internal.Streams.AppendableWriter(appendable);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316617871/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"out":"appendable"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"59cbf4ad-3eff-11e6-9a6e-af3751aa9da2","method":{"position":"com.google.gson.internal.bind.TypeAdapters:509","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.util.UUID value) throws java.io.IOException {\n    out.value((value == null ? null : value.toString()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"59cc1bbe-3eff-11e6-9a6e-311d1115b44e","method":{"position":"com.google.gson.internal.bind.TypeAdapters:530","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.sql.Timestamp value) throws java.io.IOException {\n    dateTypeAdapter.write(out, value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.JsonPrimitive:176","type":"CtInvocationImpl"},"failures":[],"tindex":"59cc1bbf-3eff-11e6-9a6e-cd36786921fe","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:94","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\n@java.lang.Override\nvoid write(com.google.gson.stream.JsonWriter writer, java.lang.Object value) throws java.io.IOException, java.lang.IllegalAccessException {\n    if ((value.peek()) == value) {\n        {\n            java.lang.Object java.lang.Object = field.get(value);\n            com.google.gson.TypeAdapter com.google.gson.TypeAdapter = new com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper(context , this.com.google.gson.TypeAdapter<?> , fieldType.getType());\n            t.write(writer, fieldValue);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316617871/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"59cc1bc0-3eff-11e6-9a6e-91444d3e0a0c","method":{"position":"com.google.gson.internal.bind.TypeAdapters:233","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        return in.nextInt();\n    } catch (java.lang.NumberFormatException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.stream.JsonReader:290","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"59cc1bc1-3eff-11e6-9a6e-57a88a31d485","method":{"position":"com.google.gson.Gson:746","type":"CtMethodImpl","sourcecode":"public <T>T fromJson(java.io.Reader json, java.lang.Class<T> classOfT) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException {\n    if (json == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316617871/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    } else {\n        {\n            com.google.gson.stream.JsonReader com.google.gson.stream.JsonReader = new com.google.gson.stream.JsonReader(json);\n            java.lang.Object java.lang.Object = fromJson(jsonReader, classOfT);\n            com.google.gson.Gson.assertFullConsumption(object, jsonReader);\n            return com.google.gson.internal.Primitives.wrap(classOfT).cast(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"in":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"59cc1bc2-3eff-11e6-9a6e-61fb188f7fed","method":{"position":"com.google.gson.internal.bind.TypeAdapters:178","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Boolean value) throws java.io.IOException {\n    out.value((value == null ? \"null\" : value.toString()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:386","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"59cc1bc3-3eff-11e6-9a6e-5700caec609f","method":{"position":"com.google.gson.JsonObject:151","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement get(java.lang.String memberName) {\n    if (memberName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316617871/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (memberName == null) {\n                {\n                    return com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.get(memberName);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316617871/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"memberName"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:213","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"59cc42d4-3eff-11e6-9a6e-a74e81374f10","method":{"position":"com.google.gson.stream.JsonReader:1572","type":"CtMethodImpl","sourcecode":"private java.io.IOException syntaxError(java.lang.String message) throws java.io.IOException {\n    if ((message.length()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316617871/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            throw new com.google.gson.stream.MalformedJsonException(((((((message + \" at line \") + (getLineNumber())) + \" column \") + (getColumnNumber())) + \" path \") + (getPath())));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"indent":"message"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.reflect.TypeToken:127","type":"CtInvocationImpl"},"failures":[],"tindex":"59cc42d5-3eff-11e6-9a6e-6defb42e9ed5","method":{"position":"com.google.gson.internal.bind.ArrayTypeAdapter:84","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Object array) throws java.io.IOException {\n    if (array.equals(array)) {\n        {\n            if (array == null) {\n                out.nullValue();\n                return ;\n            } \n            out.beginArray();\n            for (int int = 0, int int = java.lang.reflect.Array.getLength(array) ; i < length ; i++) {\n                E E = ((E)(java.lang.reflect.Array.get(array, i)));\n                com.google.gson.TypeAdapter<E>.write(out, value);\n            }\n            out.endArray();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316617871/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"array","type":"array"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":61,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}