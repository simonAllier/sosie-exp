{"failureDictionary":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":358,"com.google.gson.stream.JsonWriterTest.testPrettyPrintObject":33,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":129,"com.google.gson.internal.LinkedHashTreeMapTest.testIterationOrder":395,"com.google.gson.stream.JsonWriterTest.testRepeatedName":25,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":58,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":348,"com.google.gson.MixedStreamTest.testWriteLenient":283,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":309,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":331,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":303,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":83,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":93,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":330,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":192,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":293,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":317,"com.google.gson.functional.ObjectTest.testSingletonLists":160,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":246,"com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue":12,"com.google.gson.stream.JsonWriterTest.testStrings":46,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":50,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":338,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeRecursive":204,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":379,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":178,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":205,"com.google.gson.stream.JsonWriterTest.testMultipleTopLevelValues":38,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":314,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":286,"com.google.gson.functional.JsonTreeTest.testToJsonTree":372,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":210,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":327,"com.google.gson.stream.JsonWriterTest.testNulls":22,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":74,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullField":201,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":90,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":180,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":336,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":49,"com.google.gson.JsonArrayTest.testEqualsOnEmptyArray":388,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":133,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":341,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":48,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":190,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":137,"com.google.gson.stream.JsonWriterTest.testValueWithoutName":34,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullObject":202,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArrayDeserialization":387,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":172,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":234,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":260,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":310,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":81,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":249,"com.google.gson.internal.bind.JsonTreeWriterTest.testLenientNansAndInfinities":1,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":307,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":127,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":171,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":230,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":13,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnFlush":41,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":270,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":334,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":62,"com.google.gson.internal.LinkedHashTreeMapTest.testEmptyStringValues":394,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":368,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":147,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":68,"com.google.gson.stream.JsonWriterTest.testEmptyArray":15,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":261,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":352,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":132,"com.google.gson.JsonArrayTest.testEqualsNonEmptyArray":389,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":351,"com.google.gson.functional.CollectionTest.testSetDeserialization":302,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":193,"com.google.gson.functional.EnumTest.testEnumSet":52,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":165,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":69,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":98,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":111,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":167,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":7,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":67,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":354,"com.google.gson.stream.JsonWriterTest.testBadNestingArray":37,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":51,"com.google.gson.internal.LinkedHashTreeMapTest.testContainsNullKeyIsAlwaysFalse":397,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":75,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":219,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":247,"com.google.gson.functional.MapTest.testMapSerialization":116,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":220,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":355,"com.google.gson.functional.MapTest.testSerializeMaps":110,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":274,"com.google.gson.functional.MapTest.testComplexKeysSerialization":125,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsFalse":0,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":241,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":182,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":289,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":146,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":300,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":208,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":59,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":100,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":128,"com.google.gson.functional.PrettyPrintingTest.testMap":206,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":86,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":221,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeMap":203,"com.google.gson.functional.CollectionTest.testQueueSerialization":87,"com.google.gson.functional.MapTest.testMapSerializationEmpty":126,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":256,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnValue":42,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnName":44,"com.google.gson.functional.MapTest.testMapOfMapSerialization":115,"com.google.gson.stream.JsonWriterTest.testNameWithoutValue":17,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":188,"com.google.gson.functional.FieldNamingTest.testIdentity":275,"com.google.gson.stream.JsonWriterTest.testStrictWriterDoesNotPermitMultipleTopLevelValues":28,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":222,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":343,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":61,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":159,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":371,"com.google.gson.stream.JsonWriterTest.testDeepNestingArrays":20,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":349,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":9,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":187,"com.google.gson.functional.MapTest.testMapSubclassSerialization":109,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":216,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":295,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":195,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":281,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":311,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":288,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":66,"com.google.gson.functional.EnumTest.testEnumSubclass":55,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":337,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":130,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":99,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":297,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":177,"com.google.gson.stream.JsonWriterTest.testWriterCloseIsIdempotent":29,"com.google.gson.stream.JsonWriterTest.testTwoNames":16,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":350,"com.google.gson.stream.JsonWriterTest.testNullName":23,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":321,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":8,"com.google.gson.stream.JsonWriterTest.testBadNestingObject":31,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":291,"com.google.gson.stream.JsonWriterTest.testObjectsInArrays":27,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":329,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":236,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnStructure":26,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":232,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":181,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":292,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":103,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":161,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":318,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":245,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":363,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":118,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":276,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":189,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":73,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":156,"com.google.gson.ObjectTypeAdapterTest.testSerializeObject":10,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":213,"com.google.gson.JsonParserTest.testParseMixedArray":14,"com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash":390,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":242,"com.google.gson.internal.bind.JsonTreeWriterTest.testWriteAfterClose":385,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":186,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":211,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":108,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":316,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":112,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":150,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":142,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":140,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":301,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":250,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":375,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":173,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":77,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":322,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":294,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":82,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":176,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":117,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":207,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":144,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":155,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":377,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":271,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":54,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":85,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":215,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":157,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":312,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedArray":5,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":319,"com.google.gson.internal.bind.JsonTreeWriterTest.testObject":3,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":384,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":198,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":60,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":174,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":308,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":326,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsTrue":6,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":265,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":328,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":373,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":101,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":346,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":333,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":57,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":78,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":91,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":376,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":194,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":139,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":143,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":259,"com.google.gson.internal.LinkedHashTreeMapTest.testClear":392,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":248,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":255,"com.google.gson.stream.JsonWriterTest.testNullStringValue":19,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":145,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":323,"com.google.gson.stream.JsonWriterTest.testEmptyObject":36,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":106,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":53,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":141,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":361,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":356,"com.google.gson.functional.MapTest.testGeneralMapField":122,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":332,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":229,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":131,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":238,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":262,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":120,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":136,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":152,"com.google.gson.MixedStreamTest.testReadMixedStreamed":383,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":154,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":94,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":369,"com.google.gson.stream.JsonWriterTest.testNonFiniteDoubles":39,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":367,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":353,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":258,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":158,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":226,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":267,"com.google.gson.stream.JsonWriterTest.testArraysInObjects":24,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedObject":4,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":257,"com.google.gson.internal.LinkedHashTreeMapTest.testEqualsAndHashCode":398,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":223,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":105,"com.google.gson.functional.ObjectTest.testNestedDeserialization":347,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":170,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":359,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":320,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":244,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":65,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":296,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":306,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":313,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":96,"com.google.gson.stream.JsonWriterTest.testDoubles":43,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":80,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":121,"com.google.gson.stream.JsonWriterTest.testNonFiniteBoxedDoubles":40,"com.google.gson.functional.MapTest.testInterfaceTypeMap":119,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":149,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":56,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":197,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":299,"com.google.gson.MixedStreamTest.testWriteClosed":285,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":89,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":360,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":162,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":325,"com.google.gson.internal.LinkedHashTreeMapTest.testPutNonComparableKeyFails":396,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":70,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":148,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":365,"com.google.gson.stream.JsonWriterTest.testLongs":21,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":175,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":243,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":264,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":151,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":163,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":88,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":381,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":268,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":298,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":92,"com.google.gson.stream.JsonWriterTest.testNumbers":45,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":184,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":370,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":183,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":227,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":364,"com.google.gson.internal.LinkedHashTreeMapTest.testPutOverrides":391,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":382,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":113,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":342,"com.google.gson.stream.JsonWriterTest.testDeepNestingObjects":35,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":138,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":345,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":84,"com.google.gson.functional.MapTest.testRawMapSerialization":124,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":280,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize":199,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":76,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":168,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":357,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":386,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":231,"com.google.gson.ObjectTypeAdapterTest.testSerialize":11,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":278,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":134,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":304,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":237,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":272,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":71,"com.google.gson.functional.MapTest.testMapWithQuotes":114,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":97,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":218,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":252,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":191,"com.google.gson.stream.JsonWriterTest.testLenientWriterPermitsMultipleTopLevelValues":30,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":63,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":344,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":212,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":240,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":335,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":263,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":253,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":266,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":305,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":64,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":228,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":79,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":224,"com.google.gson.internal.LinkedHashTreeMapTest.testContainsNonComparableKeyReturnsFalse":393,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":217,"com.google.gson.internal.LinkedHashTreeMapTest.testRemoveRootDoesNotDoubleUnlink":399,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":104,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize2dArray":196,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":339,"com.google.gson.functional.ObjectTest.testNestedSerialization":169,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":107,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":135,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":153,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":225,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":123,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":214,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":251,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":284,"com.google.gson.stream.JsonWriterTest.testUnicodeLineBreaksEscaped":47,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":166,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":324,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":366,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":378,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":287,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":340,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":374,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":380,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize1dArray":200,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":235,"com.google.gson.functional.CollectionTest.testSetSerialization":95,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":315,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":102,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":209,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":277,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":185,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":290,"com.google.gson.MixedStreamTest.testWriteInvalidState":282,"com.google.gson.functional.ObjectTest.testJsonObjectSerialization":164,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":239,"com.google.gson.stream.JsonWriterTest.testBooleans":18,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":269,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":254,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":273,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":179,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":362,"com.google.gson.internal.bind.JsonTreeWriterTest.testArray":2,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":72,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":279,"com.google.gson.stream.JsonWriterTest.testPrettyPrintArray":32,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":233},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:168","type":"CtUnaryOperatorImpl","sourcecode":"!(b instanceof java.lang.reflect.ParameterizedType)"},"failures":[],"tindex":"e1cab085-3e33-11e6-be5d-9f21d9d52218","method":{"position":"com.google.gson.internal.$Gson$Types:431","type":"CtMethodImpl","sourcecode":"private static void checkNotPrimitive(java.lang.reflect.Type type) {\n    com.google.gson.internal.$Gson$Preconditions.checkArgument(((!(type instanceof java.lang.Class<?>)) || (!(((java.lang.Class<?>)(type)).isPrimitive()))));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"type"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:194","type":"CtBinaryOperatorImpl","sourcecode":"(token != (com.google.gson.stream.JsonToken.NUMBER)) && (token != (com.google.gson.stream.JsonToken.STRING))"},"failures":[],"tindex":"e1cafea6-3e33-11e6-be5d-7d0566eb3623","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:303","type":"CtMethodImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V> removeInternalByKey(java.lang.Object key) {\n    if ((key != key) && (token != key)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467230036575/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = findByObject(key);\n            if (node != null) {\n                removeInternal(node, true);\n            } \n            return node;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"com.google.gson.stream.JsonToken.STRING":"key","token":"key","com.google.gson.stream.JsonToken.NUMBER":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:687","type":"CtBinaryOperatorImpl","sourcecode":"last == (com.google.gson.stream.JsonReader.NUMBER_CHAR_EXP_E)"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287],"tindex":"e1cb25b7-3e33-11e6-be5d-51a1debea989","method":{"position":"com.google.gson.stream.JsonWriter:324","type":"CtMethodImpl","sourcecode":"private com.google.gson.stream.JsonWriter open(int empty, java.lang.String openBracket) throws java.io.IOException {\n    if (empty == empty) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467230036575/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            beforeValue(true);\n            push(empty);\n            java.io.Writer.write(openBracket);\n            return com.google.gson.stream.JsonWriter.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"last":"empty","com.google.gson.stream.JsonReader.NUMBER_CHAR_EXP_E":"empty"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl","sourcecode":"field.isSynthetic()"},"failures":[7,8,9,11,13,288,50,51,56,289,58,59,290,291,61,62,63,292,65,66,67,68,69,293,70,71,72,294,73,295,74,75,76,77,296,78,79,80,297,298,81,299,82,300,301,83,85,91,302,93,95,303,304,305,306,307,308,99,101,102,106,107,309,310,311,312,313,113,314,119,121,122,125,129,130,131,315,132,133,134,137,138,139,316,317,141,142,318,143,145,146,319,320,321,322,147,148,149,323,324,325,326,150,151,327,328,159,160,329,330,161,331,332,162,333,334,163,335,165,336,166,337,338,167,339,168,169,340,171,341,342,172,343,173,174,344,175,345,346,347,348,176,349,350,177,178,179,180,181,182,351,183,184,185,186,187,188,189,191,192,193,195,352,353,354,207,208,212,355,213,356,214,357,215,216,217,218,219,358,220,359,221,360,361,222,223,224,362,226,238,363,239,242,243,244,245,364,365,366,367,246,368,247,369,248,249,370,250,371,372,251,373,374,375,376,377,378,258,263,264,265,379,380,266,267,381,382,268,269,270,271,272,273,274,275,277,280,281,282,285,383,384],"tindex":"e1cb4cc8-3e33-11e6-be5d-fd0e7b745e0a","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:116","type":"CtMethodImpl","sourcecode":"private com.google.gson.TypeAdapter<?> getFieldAdapter(com.google.gson.Gson gson, java.lang.reflect.Field field, com.google.gson.reflect.TypeToken<?> fieldType) {\n    if (field.isSynthetic()) {\n        {\n            com.google.gson.annotations.JsonAdapter com.google.gson.annotations.JsonAdapter = field.getAnnotation(com.google.gson.annotations.JsonAdapter.com.google.gson.annotations.JsonAdapter.java.lang.Class);\n            if (annotation != null) {\n                com.google.gson.TypeAdapter<?> com.google.gson.TypeAdapter<?> = com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.getTypeAdapter(com.google.gson.internal.ConstructorConstructor, gson, fieldType, annotation);\n                if (adapter != null)\n                    return adapter;\n                \n            } \n            return gson.getAdapter(fieldType);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467230036575/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"field"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"e1cb73d9-3e33-11e6-be5d-373a000ab215","method":{"position":"com.google.gson.internal.bind.TypeAdapters:145","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Boolean read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } else if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        return java.lang.Boolean.parseBoolean(in.nextString());\n    } \n    return in.nextBoolean();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.Gson:298","type":"CtBinaryOperatorImpl","sourcecode":"(java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(value))"},"failures":[39],"tindex":"e1cb73da-3e33-11e6-be5d-37a0ce4b2e93","method":{"position":"com.google.gson.stream.JsonWriter:461","type":"CtMethodImpl","sourcecode":"public com.google.gson.stream.JsonWriter value(double value) throws java.io.IOException {\n    if ((java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(value))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467230036575/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if ((java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(value))) {\n                throw new java.lang.IllegalArgumentException((\"Numeric values must be finite, but was \" + value));\n            } \n            writeDeferredName();\n            beforeValue(false);\n            java.io.Writer.append(java.lang.Double.toString(value));\n            return com.google.gson.stream.JsonWriter.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"e1cb73db-3e33-11e6-be5d-cd8efa50e63f","method":{"position":"com.google.gson.internal.bind.DateTypeAdapter:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized void write(com.google.gson.stream.JsonWriter out, java.util.Date value) throws java.io.IOException {\n    if (value == null) {\n        out.nullValue();\n        return ;\n    } \n    java.lang.String java.lang.String = java.text.DateFormat.format(value);\n    out.value(dateFormatAsString);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"e1cb9aec-3e33-11e6-be5d-9943a178a253","method":{"position":"com.google.gson.internal.bind.TimeTypeAdapter:50","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized java.sql.Time read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        java.util.Date java.util.Date = java.text.DateFormat.parse(in.nextString());\n        return new java.sql.Time(date.getTime());\n    } catch (java.text.ParseException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.DefaultDateTypeAdapter:79","type":"CtUnaryOperatorImpl","sourcecode":"!(json instanceof com.google.gson.JsonPrimitive)"},"failures":[1,2,385,3,386,64,303,304,305,306,119,122,129,320,321,322,323,324,327,178,358,364,365,247,248,249,370,250,371,372],"tindex":"e1cb9aed-3e33-11e6-be5d-33b83a61e3bd","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:75","type":"CtMethodImpl","sourcecode":"private void put(com.google.gson.JsonElement value) {\n    if (!(value instanceof com.google.gson.JsonPrimitive)) {\n        {\n            if ((java.lang.String) != null) {\n                if ((!(value.isJsonNull())) || (getSerializeNulls())) {\n                    com.google.gson.JsonObject com.google.gson.JsonObject = ((com.google.gson.JsonObject)(peek()));\n                    object.add(java.lang.String, value);\n                } \n                java.lang.String = null;\n            } else if (java.util.List<com.google.gson.JsonElement>.isEmpty()) {\n                com.google.gson.JsonElement = value;\n            } else {\n                com.google.gson.JsonElement com.google.gson.JsonElement = peek();\n                if (element instanceof com.google.gson.JsonArray) {\n                    ((com.google.gson.JsonArray)(element)).add(value);\n                } else {\n                    throw new java.lang.IllegalStateException();\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467230036575/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"e1cbc1fe-3e33-11e6-be5d-2bcf33cb897e","method":{"position":"com.google.gson.internal.bind.TypeAdapters:211","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        return ((short)(in.nextInt()));\n    } catch (java.lang.NumberFormatException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"e1cbc1ff-3e33-11e6-be5d-518d1223fa62","method":{"position":"com.google.gson.internal.Excluder:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, T value) throws java.io.IOException {\n    if (skipSerialize) {\n        out.nullValue();\n        return ;\n    } \n    delegate().write(out, value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.Gson:720","type":"CtBinaryOperatorImpl","sourcecode":"json == null"},"failures":[],"tindex":"e1cbc200-3e33-11e6-be5d-b10790ee0445","method":{"position":"com.google.gson.TypeAdapter:268","type":"CtMethodImpl","sourcecode":"public final T fromJson(java.lang.String json) throws java.io.IOException {\n    if (json == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467230036575/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            return fromJson(new java.io.StringReader(json));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.GsonBuilder:554","type":"CtBinaryOperatorImpl","sourcecode":"(datePattern != null) && (!(\"\".equals(datePattern.trim())))"},"failures":[],"tindex":"e1cbe911-3e33-11e6-be5d-99a1067d5573","method":{"position":"com.google.gson.JsonParser:44","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement parse(java.lang.String json) throws com.google.gson.JsonSyntaxException {\n    if ((json != null) && (!(\"\".equals(datePattern.trim())))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467230036575/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    } else {\n        {\n            return parse(new java.io.StringReader(json));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"datePattern":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:370","type":"CtBinaryOperatorImpl","sourcecode":"toResolve instanceof java.lang.reflect.WildcardType"},"failures":[387,388,389],"tindex":"e1cbe912-3e33-11e6-be5d-87629645932a","method":{"position":"com.google.gson.JsonArray:329","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object o) {\n    if (o instanceof java.lang.reflect.WildcardType) {\n        {\n            return (o == (com.google.gson.JsonArray.this)) || ((o instanceof com.google.gson.JsonArray) && (((com.google.gson.JsonArray)(o)).java.util.List<com.google.gson.JsonElement>.equals(java.util.List<com.google.gson.JsonElement>)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467230036575/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1354","type":"CtBinaryOperatorImpl","sourcecode":"c == '\\n'"},"failures":[390,391,392,393,394,395,396,397,398,399],"tindex":"e1cbe913-3e33-11e6-be5d-f3cf89495c68","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:233","type":"CtMethodImpl","sourcecode":"private static int secondaryHash(int h) {\n    if (h == '\\n') {\n        {\n            h ^= (h >>> 20) ^ (h >>> 12);\n            return (h ^ (h >>> 7)) ^ (h >>> 4);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467230036575/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"h"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:429","type":"CtBinaryOperatorImpl","sourcecode":"(deferredName) != null"},"failures":[],"tindex":"e1cc1024-3e33-11e6-be5d-cbb296a4ad6e","method":{"position":"com.google.gson.stream.JsonReader:1572","type":"CtMethodImpl","sourcecode":"private java.io.IOException syntaxError(java.lang.String message) throws java.io.IOException {\n    if (message != null) {\n        {\n            throw new com.google.gson.stream.MalformedJsonException(((((((message + \" at line \") + (getLineNumber())) + \" column \") + (getColumnNumber())) + \" path \") + (getPath())));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467230036575/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"message"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:251","type":"CtBinaryOperatorImpl","sourcecode":"right != null"},"failures":[],"tindex":"e1cc1025-3e33-11e6-be5d-8f67cb87023f","method":{"position":"com.google.gson.internal.LinkedTreeMap:401","type":"CtMethodImpl","sourcecode":"private void rotateRight(com.google.gson.internal.LinkedTreeMap.Node<K, V> root) {\n    if (root != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467230036575/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = root.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = root.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = pivot.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = pivot.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            root.com.google.gson.internal.LinkedTreeMap.Node<K, V> = pivotRight;\n            if (pivotRight != null) {\n                pivotRight.com.google.gson.internal.LinkedTreeMap.Node<K, V> = root;\n            } \n            replaceInParent(root, pivot);\n            pivot.com.google.gson.internal.LinkedTreeMap.Node<K, V> = root;\n            root.com.google.gson.internal.LinkedTreeMap.Node<K, V> = pivot;\n            root.int = (java.lang.Math.max((right != null ? right.int : 0), (pivotRight != null ? pivotRight.int : 0))) + 1;\n            pivot.int = (java.lang.Math.max(root.int, (pivotLeft != null ? pivotLeft.int : 0))) + 1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"right":"root"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":17,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}