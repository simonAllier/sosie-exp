{"failureDictionary":{"com.google.gson.internal.bind.JsonElementReaderTest.testNumbersFromStrings":15,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":117,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":247,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":55,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":186,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":97,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":107,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":178,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":124,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":23,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":129,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":149,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":28,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":98,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":99,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":102,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":137,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":147,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":74,"com.google.gson.internal.bind.JsonElementReaderTest.testStrictNansAndInfinities":13,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":83,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":257,"com.google.gson.functional.ObjectTest.testSingletonLists":145,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":116,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":142,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedArray":6,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":224,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":264,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":41,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":160,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":111,"com.google.gson.internal.bind.JsonElementReaderTest.testNulls":11,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":172,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":208,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":219,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":64,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":65,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":179,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":54,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":210,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":176,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":152,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":20,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":240,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":100,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":123,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":255,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":92,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":261,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":267,"com.google.gson.functional.JsonTreeTest.testToJsonTree":235,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":262,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":30,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":222,"com.google.gson.JsonArrayTest.testSet":31,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":90,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":48,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":258,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":191,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":61,"com.google.gson.functional.MapTest.testGeneralMapField":95,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":150,"com.google.gson.internal.bind.JsonElementReaderTest.testNumbers":18,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":227,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":50,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":203,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":157,"com.google.gson.MixedStreamTest.testReadMixedStreamed":40,"com.google.gson.internal.bind.JsonElementReaderTest.testLenientNansAndInfinities":9,"com.google.gson.JsonObjectTest.testDeepCopy":35,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":206,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":167,"com.google.gson.internal.bind.JsonElementReaderTest.testBooleans":7,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":266,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":141,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":251,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":46,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":126,"com.google.gson.JsonArrayTest.testDeepCopy":32,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArrayDeserialization":27,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":169,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":58,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":115,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":68,"com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree":21,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":245,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":199,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":268,"com.google.gson.internal.bind.JsonTreeWriterTest.testLenientNansAndInfinities":3,"com.google.gson.functional.ObjectTest.testNestedDeserialization":177,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":207,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":188,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":212,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":194,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":166,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":42,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":44,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":153,"com.google.gson.JsonParserTest.testParseUnquotedStringArrayFails":1,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":108,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":114,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":78,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":143,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":239,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":214,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":81,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":25,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":136,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":242,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":94,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":45,"com.google.gson.functional.MapTest.testInterfaceTypeMap":93,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":205,"com.google.gson.JsonArrayTest.testEqualsNonEmptyArray":34,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":216,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":230,"com.google.gson.functional.CollectionTest.testSetDeserialization":101,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":75,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":105,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":156,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":246,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":82,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":161,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":80,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":272,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":47,"com.google.gson.MixedStreamTest.testWriteClosed":39,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":190,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":225,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":151,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":218,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":84,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":215,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":197,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":174,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":193,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":185,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":236,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":265,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":128,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":154,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":221,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":69,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":187,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":59,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":132,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":71,"com.google.gson.functional.MapTest.testComplexKeysSerialization":96,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":244,"com.google.gson.internal.bind.JsonElementReaderTest.testSkipValue":8,"com.google.gson.internal.bind.JsonElementReaderTest.testStrings":19,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":180,"com.google.gson.JsonParserTest.testParseInvalidJson":2,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":106,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":229,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":263,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":232,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":231,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":248,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":196,"com.google.gson.internal.bind.JsonElementReaderTest.testWrongType":14,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":56,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":70,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":109,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":91,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":168,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":175,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":252,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":36,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":163,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":237,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":189,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":63,"com.google.gson.ObjectTypeAdapterTest.testSerialize":269,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":250,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":134,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":184,"com.google.gson.functional.FieldNamingTest.testIdentity":133,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":130,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":85,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":198,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":170,"com.google.gson.internal.bind.JsonElementReaderTest.testNestedArrays":17,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":113,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":144,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":234,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":104,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":26,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":118,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":73,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":271,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":183,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":76,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":173,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":57,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":89,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":138,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":155,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":37,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":254,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":24,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":127,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":223,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":79,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":159,"com.google.gson.internal.bind.JsonElementReaderTest.testArray":10,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":202,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":67,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":135,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":209,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":243,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":241,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":200,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":120,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":139,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":119,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":29,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":162,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":270,"com.google.gson.functional.ObjectTest.testNestedSerialization":164,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":49,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":112,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":62,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":53,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":146,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":158,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":77,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":228,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":148,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":260,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":217,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":140,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":51,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":195,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":125,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":121,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":165,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":66,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":72,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":88,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":60,"com.google.gson.internal.bind.JsonElementReaderTest.testEarlyClose":12,"com.google.gson.functional.CollectionTest.testSetSerialization":103,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":204,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":211,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":253,"com.google.gson.JsonParserTest.testParseMixedArray":0,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":110,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":181,"com.google.gson.MixedStreamTest.testWriteInvalidState":38,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":192,"com.google.gson.internal.bind.JsonTreeWriterTest.testWriteAfterClose":5,"com.google.gson.JsonArrayTest.testRemove":33,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":52,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":182,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":43,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":131,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":226,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":22,"com.google.gson.internal.bind.JsonElementReaderTest.testStringsFromNumbers":16,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":256,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":220,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":259,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":201,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":249,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":233,"com.google.gson.internal.bind.JsonTreeWriterTest.testArray":4,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":122,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":86,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":171,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":238,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":213,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":87},"transformations":[{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"72d9e8ce-3f17-11e6-a95b-dd36e3c1159b","method":{"position":"com.google.gson.internal.bind.TypeAdapters:255","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        return in.nextLong();\n    } catch (java.lang.NumberFormatException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:872","type":"CtBinaryOperatorImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"tindex":"72da5dff-3f17-11e6-a95b-ddf3bd7d4355","method":{"position":"com.google.gson.JsonArray:57","type":"CtMethodImpl","sourcecode":"public void add(com.google.gson.JsonElement element) {\n    if (element == null) {\n        {\n            if (element == null) {\n                element = com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull;\n            } \n            java.util.List<com.google.gson.JsonElement>.add(element);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467327822885/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"element"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:709","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72da5e00-3f17-11e6-a95b-094d408a4e10","method":{"position":"com.google.gson.GsonBuilder:423","type":"CtMethodImpl","sourcecode":"public com.google.gson.GsonBuilder setDateFormat(int dateStyle, int timeStyle) {\n    if (timeStyle == dateStyle) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467327822885/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.GsonBuilder.this.int = dateStyle;\n            com.google.gson.GsonBuilder.this.int = timeStyle;\n            com.google.gson.GsonBuilder.this.java.lang.String = null;\n            return com.google.gson.GsonBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"last":"timeStyle","com.google.gson.stream.JsonReader.NUMBER_CHAR_DIGIT":"dateStyle"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:167","type":"CtUnaryOperatorImpl"},"failures":[36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,20,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,23,115,24,116,25,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,28,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,29,213,214,215,216,30,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272],"tindex":"72da8511-3f17-11e6-a95b-6fed87004b3e","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:58","type":"CtMethodImpl","sourcecode":"public boolean excludeField(java.lang.reflect.Field f, boolean serialize) {\n    if (!serialize) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467327822885/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.excludeField(f, serialize, com.google.gson.internal.Excluder);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"create":"serialize"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"72daac22-3f17-11e6-a95b-a75345be3dd4","method":{"position":"com.google.gson.GsonBuilder:493","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\npublic com.google.gson.GsonBuilder registerTypeHierarchyAdapter(java.lang.Class<?> baseType, java.lang.Object typeAdapter) {\n    com.google.gson.internal.$Gson$Preconditions.checkArgument((((typeAdapter instanceof com.google.gson.JsonSerializer<?>) || (typeAdapter instanceof com.google.gson.JsonDeserializer<?>)) || (typeAdapter instanceof com.google.gson.TypeAdapter<?>)));\n    if ((typeAdapter instanceof com.google.gson.JsonDeserializer) || (typeAdapter instanceof com.google.gson.JsonSerializer)) {\n        java.util.List<com.google.gson.TypeAdapterFactory>.add(0, com.google.gson.TreeTypeAdapter.newTypeHierarchyFactory(baseType, typeAdapter));\n    } \n    if (typeAdapter instanceof com.google.gson.TypeAdapter<?>) {\n        java.util.List<com.google.gson.TypeAdapterFactory>.add(com.google.gson.internal.bind.TypeAdapters.newTypeHierarchyFactory(baseType, ((com.google.gson.TypeAdapter)(typeAdapter))));\n    } \n    return com.google.gson.GsonBuilder.this;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"typeAdapter"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"72dad333-3f17-11e6-a95b-03282d6ce1d2","method":{"position":"com.google.gson.internal.bind.TypeAdapters:530","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.sql.Timestamp value) throws java.io.IOException {\n    dateTypeAdapter.write(out, value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"72dad334-3f17-11e6-a95b-39f14a96c18c","method":{"position":"com.google.gson.internal.bind.SqlDateTypeAdapter:64","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized void write(com.google.gson.stream.JsonWriter out, java.sql.Date value) throws java.io.IOException {\n    out.value((value == null ? null : java.text.DateFormat.format(value)));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:94","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72dad335-3f17-11e6-a95b-7b3d6f3f6ff2","method":{"position":"com.google.gson.internal.LinkedTreeMap:81","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(java.lang.Object key) {\n    if (key instanceof java.lang.Class) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467327822885/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = findByObject(key);\n            return node != null ? node.V : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:389","type":"CtBinaryOperatorImpl"},"failures":[97,212,29,213,30,217,222,234],"tindex":"72dafa46-3f17-11e6-a95b-25a07be64c72","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:144","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic com.google.gson.stream.JsonWriter value(java.lang.String value) throws java.io.IOException {\n    if (value != null) {\n        {\n            if (value == null) {\n                return nullValue();\n            } \n            put(new com.google.gson.JsonPrimitive(value));\n            return com.google.gson.internal.bind.JsonTreeWriter.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467327822885/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1189","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"72dafa47-3f17-11e6-a95b-ffbc8489120b","method":{"position":"com.google.gson.stream.JsonReader:1288","type":"CtMethodImpl","sourcecode":"private boolean fillBuffer(int minimum) throws java.io.IOException {\n    if ((minimum == minimum) || (p == minimum)) {\n        {\n            char[] char[] = com.google.gson.stream.JsonReader.this.char[];\n            int -= int;\n            if ((int) != (int)) {\n                int -= int;\n                java.lang.System.arraycopy(buffer, int, buffer, 0, int);\n            } else {\n                int = 0;\n            }\n            int = 0;\n            int int;\n            while ((total = java.io.Reader.read(buffer, int, ((buffer.int) - (int)))) != (-1)) {\n                int += total;\n                if (((((int) == 0) && ((int) == 0)) && ((int) > 0)) && ((buffer[0]) == '\\ufeff')) {\n                    (int)++;\n                    (int)++;\n                    minimum++;\n                } \n                if ((int) >= minimum) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467327822885/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"minimum","com.google.gson.stream.JsonReader.PEEKED_SINGLE_QUOTED":"minimum","com.google.gson.stream.JsonReader.PEEKED_DOUBLE_QUOTED":"minimum"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Streams:50","type":"CtVariableReadImpl"},"failures":[],"tindex":"72db2158-3f17-11e6-a95b-0df827c54c08","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:131","type":"CtMethodImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V> find(K key, boolean create) {\n    if (create) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467327822885/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.Comparator<? super K> java.util.Comparator<? super K> = com.google.gson.internal.LinkedHashTreeMap.this.java.util.Comparator<? super K>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V>[] com.google.gson.internal.LinkedHashTreeMap.Node<K, V>[] = com.google.gson.internal.LinkedHashTreeMap.this.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>[];\n            int int = com.google.gson.internal.LinkedHashTreeMap.secondaryHash(key.hashCode());\n            int int = hash & ((table.int) - 1);\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = table[index];\n            int int = 0;\n            if (nearest != null) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                java.lang.Comparable<java.lang.Object> java.lang.Comparable<java.lang.Object> = comparator == (com.google.gson.internal.LinkedHashTreeMap.com.google.gson.internal.LinkedHashTreeMap.java.util.Comparator<java.lang.Comparable>) ? ((java.lang.Comparable<java.lang.Object>)(key)) : null;\n                while (true) {\n                    comparison = comparableKey != null ? comparableKey.compareTo(nearest.K) : comparator.compare(key, nearest.K);\n                    if (comparison == 0) {\n                        return nearest;\n                    } \n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = comparison < 0 ? nearest.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> : nearest.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    if (child == null) {\n                        break;\n                    } \n                    nearest = child;\n                }\n            } \n            if (!create) {\n                return null;\n            } \n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.this.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            if (nearest == null) {\n                if ((comparator == (com.google.gson.internal.LinkedHashTreeMap.com.google.gson.internal.LinkedHashTreeMap.java.util.Comparator<java.lang.Comparable>)) && (!(key instanceof java.lang.Comparable))) {\n                    throw new java.lang.ClassCastException(((key.getClass().getName()) + \" is not Comparable\"));\n                } \n                created = new com.google.gson.internal.LinkedHashTreeMap.Node<K, V>(nearest , key , hash , header , header.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>);\n                table[index] = created;\n            } else {\n                created = new com.google.gson.internal.LinkedHashTreeMap.Node<K, V>(nearest , key , hash , header , header.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>);\n                if (comparison < 0) {\n                    nearest.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = created;\n                } else {\n                    nearest.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = created;\n                }\n                rebalance(nearest, true);\n            }\n            if (((int)++) > (int)) {\n                doubleCapacity();\n            } \n            (int)++;\n            return created;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isEmpty":"create"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":11,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}