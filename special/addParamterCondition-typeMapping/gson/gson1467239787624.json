{"failureDictionary":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":101,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":142,"com.google.gson.functional.StringTest.testStringValueDeserialization":448,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":62,"com.google.gson.functional.PrimitiveTest.testBigIntegerDeserialization":305,"com.google.gson.functional.PrimitiveTest.testBigDecimalNaNDeserializationNotSupported":267,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":40,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":63,"com.google.gson.MixedStreamTest.testWriteLenient":218,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":457,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":531,"com.google.gson.ExposeAnnotationExclusionStrategyTest.testNeverSkipClasses":215,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":411,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":16,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":195,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":202,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":530,"com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization":314,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":168,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":436,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":441,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerDeserialization":276,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":368,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":490,"com.google.gson.functional.ObjectTest.testSingletonLists":186,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":169,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":407,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":143,"com.google.gson.functional.PrimitiveTest.testNumberDeserialization":262,"com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue":597,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator":37,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":133,"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":580,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization":418,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":541,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":1,"com.google.gson.functional.PrimitiveTest.testStringsAsBooleans":317,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeRecursive":106,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":240,"com.google.gson.functional.StringTest.testEscapedBackslashInStringDeserialization":456,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":84,"com.google.gson.functional.PrimitiveTest.testBigDecimalNoFractAsStringRepresentationDeserialization":306,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":583,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":514,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":5,"com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization":254,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":78,"com.google.gson.functional.MapTest.testMapOfMapDeserialization":513,"com.google.gson.functional.EnumTest.testEnumCaseMapping":435,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":141,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":222,"com.google.gson.functional.JsonTreeTest.testToJsonTree":140,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsLong":253,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":587,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":126,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":376,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":386,"com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization":473,"com.google.gson.functional.PrimitiveTest.testUnquotedStringDeserializationFails":263,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferDeserialization":401,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":59,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":199,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":558,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringDeserialization":454,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":538,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization":327,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsBigIntegerFails":268,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":542,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":76,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":251,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":548,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":439,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":419,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":162,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionDeserialization":332,"com.google.gson.functional.PrimitiveTest.testDoubleInfinityDeserialization":331,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization":417,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":311,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":290,"com.google.gson.functional.PrimitiveTest.testFloatInfinityDeserialization":338,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":154,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":193,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityDeserialization":288,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":406,"com.google.gson.functional.PrimitiveTest.testDoubleNoFractAsStringRepresentationDeserialization":303,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":458,"com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization":508,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":116,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountryVariant":398,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":167,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":23,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":183,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":312,"com.google.gson.functional.JsonParserTest.testParseInvalidJson":464,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsDouble":304,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":467,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":547,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":104,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":207,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":534,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":47,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":272,"com.google.gson.functional.MapTest.testMapDeserializationWithNullValue":520,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":487,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":120,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":367,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":11,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":25,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings":421,"com.google.gson.functional.MapTest.testNumberKeyDeserialization":524,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":71,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":130,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":8,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":400,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":250,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":560,"com.google.gson.functional.CollectionTest.testSetDeserialization":576,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":442,"com.google.gson.functional.EnumTest.testEnumSet":426,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":537,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersEscapedDeserialization":591,"com.google.gson.functional.PrimitiveTest.testBigDecimalAsStringRepresentationDeserialization":295,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":128,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":24,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampDeserialization":82,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":173,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":191,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":4,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":366,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBytePrimitive":308,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":10,"com.google.gson.functional.PrimitiveTest.testDeserializingDecimalPointValueZeroSucceeds":319,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":73,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":134,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":320,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsIntegerFails":265,"com.google.gson.functional.MapTest.testHashMapDeserialization":502,"com.google.gson.functional.CollectionTest.testLinkedListDeserialization":571,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesDeserialization":410,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization":232,"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":237,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":100,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":112,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":425,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":482,"com.google.gson.functional.MapTest.testSortedMap":517,"com.google.gson.functional.MapTest.testMapSerialization":512,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":102,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":67,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedDeserialization":301,"com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization":475,"com.google.gson.functional.MapTest.testSerializeMaps":172,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":565,"com.google.gson.functional.MapTest.testComplexKeysSerialization":182,"com.google.gson.functional.InternationalizationTest.testStringsWithRawChineseCharactersDeserialization":590,"com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader":523,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":480,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":433,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":559,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":498,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":356,"com.google.gson.functional.EnumTest.testTopLevelEnumDeserialization":431,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":204,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":42,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsDeserialization":550,"com.google.gson.functional.MapTest.testStringKeyDeserialization":522,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsDeserialization":478,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":29,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":334,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesDeserialization":271,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":525,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":54,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigInteger":266,"com.google.gson.functional.PrettyPrintingTest.testMap":584,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":568,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":234,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":383,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls":423,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":0,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysDeserialization":479,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":147,"com.google.gson.functional.StringTest.testStringWithEscapedSlashDeserialization":449,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":129,"com.google.gson.functional.CollectionTest.testQueueSerialization":197,"com.google.gson.functional.MapTest.testMapSerializationEmpty":521,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsByteWrapper":296,"com.google.gson.functional.MapTest.testMapOfMapSerialization":177,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":287,"com.google.gson.JavaSerializationTest.testMapIsSerializable":212,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountry":403,"com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization":574,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":94,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":298,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":38,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":144,"com.google.gson.functional.FieldNamingTest.testIdentity":566,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":26,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":88,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":551,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":18,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":46,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":447,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":528,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalDeserialization":256,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":6,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":21,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":145,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization":293,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":526,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeDeserialization":412,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":210,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidDeserialization":391,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":93,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":397,"com.google.gson.functional.MapTest.testMapDeserializationEmpty":500,"com.google.gson.functional.MapTest.testMapSubclassSerialization":171,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":330,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":135,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":375,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersDeserialization":592,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":86,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":137,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":238,"com.google.gson.functional.PrimitiveTest.testBigDecimalDeserialization":285,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsLongPrimitive":345,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguage":382,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":459,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":422,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":365,"com.google.gson.functional.EnumTest.testEnumSubclass":429,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization":307,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":2,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":539,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization":255,"com.google.gson.GsonBuilderTest.testRegisterTypeAdapterForCoreType":80,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":247,"com.google.gson.functional.PrimitiveTest.testFloatNaNDeserialization":313,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":28,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":352,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsLongWrapper":258,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":185,"com.google.gson.functional.PrimitiveTest.testBigDecimalNegativeInfinityDeserializationNotSupported":291,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":527,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":118,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":209,"com.google.gson.functional.ArrayTest.testArrayOfNullDeserialization":472,"com.google.gson.functional.PrimitiveTest.testBigDecimalInfinityDeserializationNotSupported":297,"com.google.gson.functional.ObjectTest.testTruncatedDeserialization":536,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":45,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization":289,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":415,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":529,"com.google.gson.functional.MapTest.testMapSubclassDeserialization":61,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":471,"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":462,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":153,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":65,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":363,"com.google.gson.CommentsTest.testParseComments":593,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":33,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":187,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":493,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":229,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigDecimal":310,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":476,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":66,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":146,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":516,"com.google.gson.MixedStreamTest.testReadInvalidState":216,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":438,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":373,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":51,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":329,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":68,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":110,"com.google.gson.functional.ArrayTest.testArrayOfStringsDeserialization":481,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":95,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":280,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":92,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":48,"com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization":324,"com.google.gson.functional.ArrayTest.testEmptyArrayDeserialization":470,"com.google.gson.functional.MapTest.testMapDeserialization":507,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":399,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":588,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":501,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":489,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":124,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":174,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":492,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":170,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":357,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":139,"com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization":430,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":381,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization":540,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":552,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":113,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":444,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":119,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":387,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":372,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":184,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":355,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":515,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":585,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":594,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":52,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigDecimal":252,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":35,"com.google.gson.functional.PrimitiveTest.testShortSerialization":328,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":60,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedDeserialization":316,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":79,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedDeserialization":286,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":315,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsBigDecimal":264,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":390,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":562,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":428,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":567,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":437,"com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues":504,"com.google.gson.functional.PrimitiveTest.testLargeDoubleDeserialization":279,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":336,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":581,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":460,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization":50,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":499,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":221,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization":343,"com.google.gson.functional.PrimitiveTest.testDeserializingNonZeroDecimalPointValuesAsIntegerFails":337,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":14,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":44,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":27,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":360,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":553,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":239,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":377,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":322,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":57,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":30,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsDoublePrimitive":292,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":556,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":533,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":434,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":114,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":206,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":200,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":388,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":443,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives":31,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":488,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":405,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":494,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsInt":270,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":166,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":393,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":495,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization":409,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":122,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization":569,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsShortWrapper":259,"com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral":323,"com.google.gson.functional.PrimitiveTest.testNumberSerialization":294,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":340,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":98,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":427,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":491,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":236,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":69,"com.google.gson.functional.MapTest.testGeneralMapField":180,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":532,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":466,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsShortPrimitive":342,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":53,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":157,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":248,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":131,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":518,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":109,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":161,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":378,"com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization":318,"com.google.gson.MixedStreamTest.testReadMixedStreamed":220,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":281,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlDeserialization":389,"com.google.gson.functional.MapTest.testBooleanKeyDeserialization":509,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":7,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":203,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":484,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":486,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBooleanPrimitive":299,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":589,"com.google.gson.JavaSerializationTest.testNumberIsSerializable":211,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":9,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":404,"com.google.gson.functional.MapTest.testDeerializeMapOfMaps":510,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":348,"com.google.gson.functional.MapTest.testMapDeserializationWithNullKey":503,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":34,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":341,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":165,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":242,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsFloatPrimitive":282,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":402,"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":463,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":89,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserialization":81,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionDeserilaization":573,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization":497,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":39,"com.google.gson.functional.ObjectTest.testNestedDeserialization":557,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":361,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":545,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":233,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":117,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":77,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsNumber":339,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":228,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":41,"com.google.gson.functional.StringTest.testSingleQuoteInStringDeserialization":450,"com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys":511,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":364,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":326,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":350,"com.google.gson.JavaSerializationTest.testListIsSerializable":213,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":20,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":461,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":579,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":351,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization":347,"com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey":505,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":179,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":257,"com.google.gson.functional.MapTest.testInterfaceTypeMap":178,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization":474,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":55,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":121,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsDoubleWrapper":260,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":13,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":432,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":354,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails":445,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":379,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":75,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsInteger":274,"com.google.gson.MixedStreamTest.testWriteClosed":219,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":198,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":235,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":188,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":359,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateDeserialization":420,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":369,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":358,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":230,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":96,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":194,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":416,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":125,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":189,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":572,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":243,"com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeWithCustomTypeAdapter":15,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBooleanWrapper":302,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":245,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":353,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":201,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":49,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":12,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":90,"com.google.gson.functional.PrimitiveTest.testDoubleAsStringRepresentationDeserialization":344,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":111,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":138,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderDeserialization":384,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":150,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":561,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":97,"com.google.gson.functional.CollectionTest.testQueueDeserialization":582,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":284,"com.google.gson.functional.PrimitiveTest.testByteDeserialization":300,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringDeserialization":453,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization":231,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":83,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":244,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":175,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":549,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":395,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":163,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":555,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":196,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":85,"com.google.gson.functional.MapTest.testRawMapSerialization":181,"com.google.gson.functional.CollectionTest.testNullsInListDeserialization":577,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetDeserialization":408,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize":105,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":349,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":544,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":72,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":496,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":208,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":132,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":152,"com.google.gson.functional.PrimitiveTest.testByteSerialization":325,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapNoTypeSerialization":595,"com.google.gson.ObjectTypeAdapterTest.testSerialize":596,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":159,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsFloatWrapper":269,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":17,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":156,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":563,"com.google.gson.GsonTypeAdapterTest.testDefaultTypeAdapterThrowsParseException":3,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":370,"com.google.gson.functional.StringTest.testAssignmentCharDeserialization":451,"com.google.gson.functional.MapTest.testMapWithQuotes":176,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatDeserialization":277,"com.google.gson.functional.StringTest.testEscapingQuotesInStringDeserialization":452,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":22,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":483,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":346,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":446,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsNumber":333,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":440,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":58,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":362,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":554,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":205,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":309,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":392,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":158,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":535,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":413,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":385,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":19,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":107,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":394,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigInteger":321,"com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed":575,"com.google.gson.functional.ArrayTest.testSingleStringArrayDeserialization":469,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":127,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":151,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":414,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":115,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":226,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization":246,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":136,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReader":424,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsFloat":261,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":374,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":36,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":543,"com.google.gson.functional.ObjectTest.testNestedSerialization":192,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":99,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":160,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":273,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringDeserialization":455,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":164,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":519,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":70,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":56,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":87,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":214,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":190,"com.google.gson.functional.UncategorizedTest.testTrailingWhitespace":225,"com.google.gson.functional.PrimitiveTest.testBooleanDeserialization":335,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":123,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":485,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":396,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":223,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsInteger":275,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":380,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":546,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":241,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":148,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":155,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":249,"com.google.gson.functional.CollectionTest.testSetSerialization":578,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":32,"com.google.gson.functional.StringTest.testStringValueSerialization":149,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":586,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":108,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":43,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":91,"com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization":570,"com.google.gson.MixedStreamTest.testWriteInvalidState":217,"com.google.gson.functional.ArrayTest.testInvalidArrayDeserialization":465,"com.google.gson.functional.PrimitiveTest.testBadValueForBigIntegerDeserialization":278,"com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero":283,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":477,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":103,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":564,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":64,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":227,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":74,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":371,"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":506,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType":224,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":468},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:182","type":"CtBinaryOperatorImpl","sourcecode":"(java.lang.Double.isNaN(d)) || (java.lang.Double.isInfinite(d))"},"failures":[],"tindex":"eaee504c-3e49-11e6-830a-8732cb7a2186","method":{"position":"com.google.gson.Gson:297","type":"CtMethodImpl","sourcecode":"private void checkValidFloatingPoint(double value) {\n    if ((java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(d))) {\n        {\n            if ((java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(value))) {\n                throw new java.lang.IllegalArgumentException(((value + \" is not a valid double value as per JSON specification. To override this\") + \" behavior, use GsonBuilder.serializeSpecialFloatingPointValues() method.\"));\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239309110/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"d":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"eaee9e6d-3e49-11e6-830a-27da4b26eacb","method":{"position":"com.google.gson.internal.bind.TypeAdapters:482","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.net.InetAddress read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return java.net.InetAddress.getByName(in.nextString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:94","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.Class"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80],"tindex":"eaeec57e-3e49-11e6-830a-f9b1f7af2def","method":{"position":"com.google.gson.GsonBuilder:447","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\npublic com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type type, java.lang.Object typeAdapter) {\n    if (type instanceof java.lang.Class) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239309110/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.$Gson$Preconditions.checkArgument(((((typeAdapter instanceof com.google.gson.JsonSerializer<?>) || (typeAdapter instanceof com.google.gson.JsonDeserializer<?>)) || (typeAdapter instanceof com.google.gson.InstanceCreator<?>)) || (typeAdapter instanceof com.google.gson.TypeAdapter<?>)));\n            if (typeAdapter instanceof com.google.gson.InstanceCreator<?>) {\n                java.util.Map<java.lang.reflect.Type, com.google.gson.InstanceCreator<?>>.put(type, ((com.google.gson.InstanceCreator)(typeAdapter)));\n            } \n            if ((typeAdapter instanceof com.google.gson.JsonSerializer<?>) || (typeAdapter instanceof com.google.gson.JsonDeserializer<?>)) {\n                com.google.gson.reflect.TypeToken<?> com.google.gson.reflect.TypeToken<?> = com.google.gson.reflect.TypeToken.get(type);\n                java.util.List<com.google.gson.TypeAdapterFactory>.add(com.google.gson.TreeTypeAdapter.newFactoryWithMatchRawType(typeToken, typeAdapter));\n            } \n            if (typeAdapter instanceof com.google.gson.TypeAdapter<?>) {\n                java.util.List<com.google.gson.TypeAdapterFactory>.add(com.google.gson.internal.bind.TypeAdapters.newFactory(com.google.gson.reflect.TypeToken.get(type), ((com.google.gson.TypeAdapter)(typeAdapter))));\n            } \n            return com.google.gson.GsonBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:113","type":"CtInvocationImpl","sourcecode":"primitive.isBoolean()"},"failures":[],"tindex":"eaeec57f-3e49-11e6-830a-0dd8ffa03bf0","method":{"position":"com.google.gson.internal.LinkedTreeMap:276","type":"CtMethodImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V> removeInternalByKey(java.lang.Object key) {\n    if (key.isBoolean()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239309110/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = findByObject(key);\n            if (node != null) {\n                removeInternal(node, true);\n            } \n            return node;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"primitive":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:145","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[81,82,83],"tindex":"eaeeec90-3e49-11e6-830a-a715d5721d2c","method":{"position":"com.google.gson.internal.bind.DateTypeAdapter:69","type":"CtMethodImpl","sourcecode":"private synchronized java.util.Date deserializeToDate(java.lang.String json) {\n    if (json == null) {\n        {\n            try {\n                return java.text.DateFormat.parse(json);\n            } catch (java.text.ParseException ignored) {\n            }\n            try {\n                return java.text.DateFormat.parse(json);\n            } catch (java.text.ParseException ignored) {\n            }\n            try {\n                return java.text.DateFormat.parse(json);\n            } catch (java.text.ParseException e) {\n                throw new com.google.gson.JsonSyntaxException(json , e);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239309110/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"json"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.DefaultDateTypeAdapter:83","type":"CtBinaryOperatorImpl","sourcecode":"typeOfT == (java.util.Date.class)"},"failures":[84],"tindex":"eaeeec91-3e49-11e6-830a-71ae0e47b950","method":{"position":"com.google.gson.Gson:136","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement serialize(java.lang.Object src, java.lang.reflect.Type typeOfSrc) {\n    if (src == typeOfSrc) {\n        {\n            return toJsonTree(src, typeOfSrc);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239309110/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeOfT":"src","java.util.Date.class":"typeOfSrc"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:389","type":"CtBinaryOperatorImpl","sourcecode":"(deferredName) != null"},"failures":[4,7,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,84,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,56,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,62,184,185,186,187,188,189,190,191,192,193,194,68,70,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210],"tindex":"eaeeec92-3e49-11e6-830a-f73209f63671","method":{"position":"com.google.gson.internal.bind.TypeAdapters:361","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.String value) throws java.io.IOException {\n    if (value != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239309110/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            out.value(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"eaef13a3-3e49-11e6-830a-4d0ae16fa957","method":{"position":"com.google.gson.TypeAdapter:187","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, T value) throws java.io.IOException {\n    if (value == null) {\n        out.nullValue();\n    } else {\n        com.google.gson.TypeAdapter.this.write(out, value);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:106","type":"CtBinaryOperatorImpl","sourcecode":"element instanceof com.google.gson.JsonArray"},"failures":[],"tindex":"eaef13a4-3e49-11e6-830a-0dada3159b42","method":{"position":"com.google.gson.internal.$Gson$Types:151","type":"CtMethodImpl","sourcecode":"static boolean equal(java.lang.Object a, java.lang.Object b) {\n    return (a == b) || ((a != null) && (a.equals(b)));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"a"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:154","type":"CtUnaryOperatorImpl","sourcecode":"!create"},"failures":[0,1,2,211,212,213,3,4,5,6,7,214,215,85,216,86,217,218,87,219,220,221,222,223,224,8,9,10,11,225,88,89,12,226,227,90,91,92,93,94,95,96,228,229,97,230,98,99,100,231,101,102,232,233,234,235,236,103,104,237,238,239,240,241,107,242,243,244,245,246,108,16,17,18,19,20,247,21,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,109,263,264,110,265,266,267,268,269,270,271,272,273,274,275,276,277,278,111,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,346,39,347,348,40,41,42,43,44,45,46,47,112,349,113,350,114,115,351,352,353,116,354,355,356,357,117,118,119,120,358,121,122,123,359,360,124,125,126,84,361,362,363,127,364,365,366,367,128,368,369,370,371,372,373,374,375,376,81,377,378,379,380,381,382,383,384,385,386,387,388,389,82,390,391,392,393,394,395,129,396,397,398,399,400,401,402,403,404,48,405,406,407,408,409,49,410,130,50,411,131,412,413,414,415,83,51,416,417,418,52,419,420,421,132,422,133,423,424,425,134,426,427,428,429,430,431,432,433,434,435,436,437,135,136,438,439,440,441,442,443,53,54,55,137,444,445,446,138,139,447,140,448,141,142,143,144,145,449,450,146,451,147,452,453,454,148,455,456,149,457,458,459,460,461,462,463,464,150,151,465,466,467,152,153,468,469,470,154,155,471,472,473,474,156,475,157,476,477,478,158,479,480,481,159,160,161,162,163,164,165,482,483,484,166,167,56,57,168,485,486,169,487,488,489,490,170,58,59,491,492,493,494,60,495,496,497,498,499,500,501,61,502,503,171,172,504,505,173,506,174,507,175,508,509,510,511,176,177,512,513,514,515,516,517,178,518,179,180,519,181,520,182,521,522,183,523,524,525,62,184,526,527,185,528,186,529,530,187,531,532,188,533,534,189,535,536,537,538,190,539,540,541,542,191,543,544,192,545,546,547,548,549,550,193,551,552,553,554,194,555,556,557,63,64,558,65,559,560,561,66,67,68,69,70,71,72,562,563,564,565,566,195,196,567,568,569,570,571,197,572,198,199,200,573,574,201,575,576,202,203,577,578,579,580,581,582,583,584,585,204,586,587,588,205,73,74,75,76,77,78,589,79,590,591,206,592,207,593,208,594,595,209,210,596,597],"tindex":"eaef13a5-3e49-11e6-830a-57232a72e0ad","method":{"position":"com.google.gson.internal.Excluder:191","type":"CtMethodImpl","sourcecode":"public boolean excludeClass(java.lang.Class<?> clazz, boolean serialize) {\n    if (!serialize) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239309110/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((double) != (com.google.gson.internal.Excluder.com.google.gson.internal.Excluder.double)) && (!(isValidVersion(clazz.getAnnotation(com.google.gson.annotations.Since.com.google.gson.annotations.Since.java.lang.Class), clazz.getAnnotation(com.google.gson.annotations.Until.com.google.gson.annotations.Until.java.lang.Class))))) {\n                return true;\n            } \n            if ((!(boolean)) && (isInnerClass(clazz))) {\n                return true;\n            } \n            if (isAnonymousOrLocal(clazz)) {\n                return true;\n            } \n            java.util.List<com.google.gson.ExclusionStrategy> java.util.List<com.google.gson.ExclusionStrategy> = serialize ? java.util.List<com.google.gson.ExclusionStrategy> : java.util.List<com.google.gson.ExclusionStrategy>;\n            for (com.google.gson.ExclusionStrategy com.google.gson.ExclusionStrategy : list) {\n                if (exclusionStrategy.shouldSkipClass(clazz)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"create":"serialize"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:198","type":"CtBinaryOperatorImpl","sourcecode":"out == null"},"failures":[],"tindex":"eaef3ab6-3e49-11e6-830a-235968139aab","method":{"position":"com.google.gson.Gson:644","type":"CtMethodImpl","sourcecode":"private com.google.gson.stream.JsonWriter newJsonWriter(java.io.Writer writer) throws java.io.IOException {\n    if (writer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239309110/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (boolean) {\n                writer.write(com.google.gson.Gson.com.google.gson.Gson.java.lang.String);\n            } \n            com.google.gson.stream.JsonWriter com.google.gson.stream.JsonWriter = new com.google.gson.stream.JsonWriter(writer);\n            if (boolean) {\n                jsonWriter.setIndent(\"  \");\n            } \n            jsonWriter.setSerializeNulls(boolean);\n            return jsonWriter;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"out":"writer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.IllegalAccessException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:76","type":"CtBinaryOperatorImpl","sourcecode":"(pendingName) != null"},"failures":[],"tindex":"eaef61c7-3e49-11e6-830a-ff4b72eaa5fe","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:94","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\n@java.lang.Override\nvoid write(com.google.gson.stream.JsonWriter writer, java.lang.Object value) throws java.io.IOException, java.lang.IllegalAccessException {\n    if (value != null) {\n        {\n            java.lang.Object java.lang.Object = field.get(value);\n            com.google.gson.TypeAdapter com.google.gson.TypeAdapter = new com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper(context , this.com.google.gson.TypeAdapter<?> , fieldType.getType());\n            t.write(writer, fieldValue);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239309110/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pendingName":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.JsonPrimitive:132","type":"CtInvocationImpl","sourcecode":"isBoolean()"},"failures":[],"tindex":"eaef61c8-3e49-11e6-830a-f54cddd86be4","method":{"position":"com.google.gson.internal.Streams:67","type":"CtMethodImpl","sourcecode":"public static void write(com.google.gson.JsonElement element, com.google.gson.stream.JsonWriter writer) throws java.io.IOException {\n    com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<com.google.gson.JsonElement>.write(writer, element);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"element"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Streams:50","type":"CtVariableReadImpl","sourcecode":"isEmpty"},"failures":[218,298,311,312,326,334,340],"tindex":"eaef61c9-3e49-11e6-830a-05b6186d2dc2","method":{"position":"com.google.gson.Gson:249","type":"CtMethodImpl","sourcecode":"private com.google.gson.TypeAdapter<java.lang.Number> doubleAdapter(boolean serializeSpecialFloatingPointValues) {\n    if (serializeSpecialFloatingPointValues) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239309110/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (serializeSpecialFloatingPointValues) {\n                return com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<java.lang.Number>;\n            } \n            return new com.google.gson.TypeAdapter<java.lang.Number>() {\n                @java.lang.Override\n                public java.lang.Double read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n                    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n                        in.nextNull();\n                        return null;\n                    } \n                    return in.nextDouble();\n                }\n\n                @java.lang.Override\n                public void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n                    if (value == null) {\n                        out.nullValue();\n                        return ;\n                    } \n                    double double = value.doubleValue();\n                    checkValidFloatingPoint(doubleValue);\n                    out.value(value);\n                }\n            };\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isEmpty":"serializeSpecialFloatingPointValues"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:176","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[390],"tindex":"eaef88da-3e49-11e6-830a-3fb1358d9d0f","method":{"position":"com.google.gson.internal.bind.TypeAdapters:317","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239309110/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            out.value(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:125","type":"CtBinaryOperatorImpl","sourcecode":"element instanceof com.google.gson.JsonObject"},"failures":[],"tindex":"eaef88db-3e49-11e6-830a-7df0cf9058b5","method":{"position":"com.google.gson.JsonArray:92","type":"CtMethodImpl","sourcecode":"public boolean remove(com.google.gson.JsonElement element) {\n    if (element instanceof com.google.gson.JsonObject) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239309110/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<com.google.gson.JsonElement>.remove(element);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"element"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:370","type":"CtBinaryOperatorImpl","sourcecode":"toResolve instanceof java.lang.reflect.WildcardType"},"failures":[],"tindex":"eaef88dc-3e49-11e6-830a-532efe8d0546","method":{"position":"com.google.gson.JsonPrimitive:273","type":"CtMethodImpl","sourcecode":"private static boolean isPrimitiveOrString(java.lang.Object target) {\n    if (target instanceof java.lang.reflect.WildcardType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239309110/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (target instanceof java.lang.String) {\n                return true;\n            } \n            java.lang.Class<?> java.lang.Class<?> = target.getClass();\n            for (java.lang.Class<?> java.lang.Class<?> : com.google.gson.JsonPrimitive.com.google.gson.JsonPrimitive.java.lang.Class<?>[]) {\n                if (standardPrimitive.isAssignableFrom(classOfPrimitive)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"target"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.DefaultDateTypeAdapter:83","type":"CtBinaryOperatorImpl","sourcecode":"typeOfT == (java.util.Date.class)"},"failures":[],"tindex":"eaef88dd-3e49-11e6-830a-9f224a7c60af","method":{"position":"com.google.gson.Gson:773","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic <T>T fromJson(java.io.Reader json, java.lang.reflect.Type typeOfT) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException {\n    if (typeOfT == typeOfT) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239309110/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    } else {\n        {\n            com.google.gson.stream.JsonReader com.google.gson.stream.JsonReader = new com.google.gson.stream.JsonReader(json);\n            T T = ((T)(fromJson(jsonReader, typeOfT)));\n            com.google.gson.Gson.assertFullConsumption(object, jsonReader);\n            return object;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeOfT":"typeOfT","java.util.Date.class":"typeOfT"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:136","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.TypeVariable"},"failures":[],"tindex":"eaef88de-3e49-11e6-830a-e1766c0cb8c6","method":{"position":"com.google.gson.reflect.TypeToken:272","type":"CtMethodImpl","sourcecode":"private static boolean matches(java.lang.reflect.Type from, java.lang.reflect.Type to, java.util.Map<java.lang.String, java.lang.reflect.Type> typeMap) {\n    if (to instanceof java.lang.reflect.TypeVariable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239309110/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (to.equals(from)) || ((from instanceof java.lang.reflect.TypeVariable) && (to.equals(typeMap.get(((java.lang.reflect.TypeVariable<?>)(from)).getName()))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"to"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"eaefafef-3e49-11e6-830a-d923867d1968","method":{"position":"com.google.gson.internal.bind.TypeAdapters:156","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Boolean value) throws java.io.IOException {\n    if (value == null) {\n        out.nullValue();\n        return ;\n    } \n    out.value(value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl","sourcecode":"field.isSynthetic()"},"failures":[115,352,565],"tindex":"eaefaff0-3e49-11e6-830a-8b0199d66f31","method":{"position":"com.google.gson.FieldNamingPolicy:72","type":"CtMethodImpl","sourcecode":"public java.lang.String translateName(java.lang.reflect.Field f) {\n    if (f.isSynthetic()) {\n        {\n            return com.google.gson.FieldNamingPolicy.upperCaseFirstLetter(com.google.gson.FieldNamingPolicy.separateCamelCase(f.getName(), \" \"));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239309110/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"f"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.ArrayTypeAdapter:64","type":"CtBinaryOperatorImpl","sourcecode":"(in.peek()) == (com.google.gson.stream.JsonToken.NULL)"},"failures":[],"tindex":"eaefaff1-3e49-11e6-830a-953300e0fc51","method":{"position":"com.google.gson.internal.bind.ObjectTypeAdapter:94","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Object value) throws java.io.IOException {\n    if ((value.peek()) == value) {\n        {\n            if (value == null) {\n                out.nullValue();\n                return ;\n            } \n            com.google.gson.TypeAdapter<java.lang.Object> com.google.gson.TypeAdapter<java.lang.Object> = ((com.google.gson.TypeAdapter<java.lang.Object>)(com.google.gson.Gson.getAdapter(value.getClass())));\n            if (typeAdapter instanceof com.google.gson.internal.bind.ObjectTypeAdapter) {\n                out.beginObject();\n                out.endObject();\n                return ;\n            } \n            typeAdapter.write(out, value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239309110/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"in":"value","com.google.gson.stream.JsonToken.NULL":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:137","type":"CtBinaryOperatorImpl","sourcecode":"element instanceof com.google.gson.JsonObject"},"failures":[],"tindex":"eaefaff2-3e49-11e6-830a-fdd4f80da905","method":{"position":"com.google.gson.Gson:871","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic <T>T fromJson(com.google.gson.JsonElement json, java.lang.reflect.Type typeOfT) throws com.google.gson.JsonSyntaxException {\n    if (json instanceof com.google.gson.JsonObject) {\n        {\n            if (json == null) {\n                return null;\n            } \n            return ((T)(fromJson(new com.google.gson.internal.bind.JsonTreeReader(json), typeOfT)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239309110/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.DefaultDateTypeAdapter:87","type":"CtBinaryOperatorImpl","sourcecode":"typeOfT == (java.sql.Date.class)"},"failures":[],"tindex":"eaefd703-3e49-11e6-830a-f521d458f8c6","method":{"position":"com.google.gson.internal.$Gson$Types:117","type":"CtMethodImpl","sourcecode":"public static java.lang.Class<?> getRawType(java.lang.reflect.Type type) {\n    if (type instanceof java.lang.Class<?>) {\n        return ((java.lang.Class<?>)(type));\n    } else if (type instanceof java.lang.reflect.ParameterizedType) {\n        java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(type));\n        java.lang.reflect.Type java.lang.reflect.Type = parameterizedType.getRawType();\n        com.google.gson.internal.$Gson$Preconditions.checkArgument((rawType instanceof java.lang.Class));\n        return ((java.lang.Class<?>)(rawType));\n    } else if (type instanceof java.lang.reflect.GenericArrayType) {\n        java.lang.reflect.Type java.lang.reflect.Type = ((java.lang.reflect.GenericArrayType)(type)).getGenericComponentType();\n        return java.lang.reflect.Array.newInstance(com.google.gson.internal.$Gson$Types.getRawType(componentType), 0).getClass();\n    } else if (type instanceof java.lang.reflect.TypeVariable) {\n        return java.lang.Object.java.lang.Object.java.lang.Class;\n    } else if (type instanceof java.lang.reflect.WildcardType) {\n        return com.google.gson.internal.$Gson$Types.getRawType(((java.lang.reflect.WildcardType)(type)).getUpperBounds()[0]);\n    } else {\n        java.lang.String java.lang.String = type == null ? \"null\" : type.getClass().getName();\n        throw new java.lang.IllegalArgumentException(((((\"Expected a Class, ParameterizedType, or \" + \"GenericArrayType, but <\") + type) + \"> is of type \") + className));\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.sql.Date.class":"type","typeOfT":"type"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1186","type":"CtBinaryOperatorImpl","sourcecode":"p == (com.google.gson.stream.JsonReader.PEEKED_NUMBER)"},"failures":[],"tindex":"eaefd704-3e49-11e6-830a-110fd205e71a","method":{"position":"com.google.gson.stream.JsonReader:1288","type":"CtMethodImpl","sourcecode":"private boolean fillBuffer(int minimum) throws java.io.IOException {\n    if (minimum == minimum) {\n        {\n            char[] char[] = com.google.gson.stream.JsonReader.this.char[];\n            int -= int;\n            if ((int) != (int)) {\n                int -= int;\n                java.lang.System.arraycopy(buffer, int, buffer, 0, int);\n            } else {\n                int = 0;\n            }\n            int = 0;\n            int int;\n            while ((total = java.io.Reader.read(buffer, int, ((buffer.int) - (int)))) != (-1)) {\n                int += total;\n                if (((((int) == 0) && ((int) == 0)) && ((int) > 0)) && ((buffer[0]) == '\\ufeff')) {\n                    (int)++;\n                    (int)++;\n                    minimum++;\n                } \n                if ((int) >= minimum) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239309110/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"minimum","com.google.gson.stream.JsonReader.PEEKED_NUMBER":"minimum"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":25,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}