{"failureDictionary":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":415,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":568,"com.google.gson.functional.StringTest.testStringValueDeserialization":566,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":175,"com.google.gson.functional.PrimitiveTest.testBigIntegerDeserialization":272,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullDeserialization":521,"com.google.gson.functional.PrimitiveTest.testBigDecimalNaNDeserializationNotSupported":233,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":37,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":356,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":127,"com.google.gson.MixedStreamTest.testWriteLenient":593,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":318,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":530,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":101,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":76,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":93,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":316,"com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization":281,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":36,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":462,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":373,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerDeserialization":242,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":53,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":189,"com.google.gson.functional.ObjectTest.testSingletonLists":314,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":465,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":522,"com.google.gson.functional.PrimitiveTest.testNumberDeserialization":226,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":569,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator":121,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":19,"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":98,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization":540,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":334,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":14,"com.google.gson.functional.PrimitiveTest.testStringsAsBooleans":284,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":548,"com.google.gson.functional.StringTest.testEscapedBackslashInStringDeserialization":582,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":361,"com.google.gson.functional.PrimitiveTest.testBigDecimalNoFractAsStringRepresentationDeserialization":273,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":395,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":157,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":2,"com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization":218,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":387,"com.google.gson.functional.MapTest.testMapOfMapDeserialization":156,"com.google.gson.functional.EnumTest.testEnumCaseMapping":35,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":567,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":599,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsLong":217,"com.google.gson.functional.JsonTreeTest.testToJsonTree":479,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":400,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveDeserialization":543,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":215,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":61,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":496,"com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization":444,"com.google.gson.functional.PrimitiveTest.testUnquotedStringDeserializationFails":228,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferDeserialization":514,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":192,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":86,"com.google.gson.functional.ObjectTest.testNullDeserialization":346,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":365,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringDeserialization":579,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":328,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":10,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization":294,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsBigIntegerFails":234,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":335,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":385,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":181,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":343,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":9,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":371,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectDeserialization":486,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":544,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":185,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionDeserialization":299,"com.google.gson.functional.PrimitiveTest.testDoubleInfinityDeserialization":298,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization":539,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":278,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":257,"com.google.gson.functional.PrimitiveTest.testFloatInfinityDeserialization":305,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArrayDeserialization":495,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":347,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":440,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityDeserialization":255,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":520,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":128,"com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization":149,"com.google.gson.functional.PrimitiveTest.testDoubleNoFractAsStringRepresentationDeserialization":270,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":71,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountryVariant":511,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":475,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":107,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":171,"com.google.gson.functional.JsonParserTest.testParseInvalidJson":134,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":279,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsDouble":271,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":342,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":434,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":8,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":322,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":559,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":44,"com.google.gson.functional.MapTest.testMapDeserializationWithNullValue":167,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":238,"com.google.gson.metrics.PerformanceTest.testDummy":12,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":466,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":206,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":51,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":394,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":109,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings":16,"com.google.gson.functional.MapTest.testNumberKeyDeserialization":173,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":408,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":528,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":391,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":513,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":180,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":368,"com.google.gson.functional.CollectionTest.testSetDeserialization":92,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":374,"com.google.gson.functional.EnumTest.testEnumSet":26,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":327,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersEscapedDeserialization":468,"com.google.gson.functional.PrimitiveTest.testBigDecimalAsStringRepresentationDeserialization":262,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":52,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":108,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":144,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampDeserialization":501,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":336,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":1,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":50,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBytePrimitive":275,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":393,"com.google.gson.functional.PrimitiveTest.testDeserializingDecimalPointValueZeroSucceeds":286,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":25,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":382,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":287,"com.google.gson.functional.MapTest.testHashMapDeserialization":138,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsIntegerFails":231,"com.google.gson.functional.CollectionTest.testLinkedListDeserialization":82,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesDeserialization":526,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization":417,"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":560,"com.google.gson.MixedStreamTest.testReadNulls":594,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":62,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":413,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":23,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":471,"com.google.gson.functional.MapTest.testSortedMap":160,"com.google.gson.functional.MapTest.testMapSerialization":155,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":416,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedDeserialization":268,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":404,"com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization":447,"com.google.gson.functional.MapTest.testSerializeMaps":141,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":564,"com.google.gson.functional.MapTest.testComplexKeysSerialization":168,"com.google.gson.functional.InternationalizationTest.testStringsWithRawChineseCharactersDeserialization":467,"com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader":172,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":454,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":33,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":367,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":201,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":74,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriter":20,"com.google.gson.functional.EnumTest.testTopLevelEnumDeserialization":31,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":398,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":39,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsDeserialization":345,"com.google.gson.functional.MapTest.testStringKeyDeserialization":170,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsDeserialization":451,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":113,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":301,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":174,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesDeserialization":237,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigInteger":232,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":377,"com.google.gson.functional.PrettyPrintingTest.testMap":396,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":79,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls":21,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":419,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":491,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":13,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysDeserialization":453,"com.google.gson.functional.StringTest.testStringWithEscapedSlashDeserialization":572,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":576,"com.google.gson.functional.CollectionTest.testQueueSerialization":83,"com.google.gson.functional.MapTest.testMapSerializationEmpty":169,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":508,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsByteWrapper":263,"com.google.gson.functional.MapTest.testMapOfMapSerialization":154,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":254,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountry":516,"com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization":89,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":265,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":122,"com.google.gson.functional.FieldNamingTest.testIdentity":565,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":570,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":110,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":423,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":348,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":43,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":103,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":313,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":478,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalDeserialization":220,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":3,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":177,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":571,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization":260,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":358,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeDeserialization":532,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":6,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidDeserialization":503,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":510,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullJsonElementSerialization":542,"com.google.gson.functional.MapTest.testMapDeserializationEmpty":135,"com.google.gson.functional.MapTest.testMapSubclassSerialization":140,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":297,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":60,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":411,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersDeserialization":470,"com.google.gson.functional.PrimitiveTest.testBigDecimalDeserialization":252,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":379,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":546,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":590,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":129,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsLongPrimitive":312,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguage":490,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":18,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":49,"com.google.gson.functional.EnumTest.testEnumSubclass":29,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization":274,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":15,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":332,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization":219,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":176,"com.google.gson.functional.PrimitiveTest.testFloatNaNDeserialization":280,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":112,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":69,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsLongWrapper":222,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":360,"com.google.gson.functional.PrimitiveTest.testBigDecimalNegativeInfinityDeserializationNotSupported":258,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":359,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":204,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":5,"com.google.gson.functional.ArrayTest.testArrayOfNullDeserialization":443,"com.google.gson.functional.PrimitiveTest.testBigDecimalInfinityDeserializationNotSupported":264,"com.google.gson.functional.ObjectTest.testTruncatedDeserialization":326,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":42,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization":256,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":535,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":315,"com.google.gson.functional.MapTest.testMapSubclassDeserialization":137,"com.google.gson.MixedStreamTest.testWriteNulls":591,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":442,"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":132,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":436,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":46,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":366,"com.google.gson.CommentsTest.testParseComments":601,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":117,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":195,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":317,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigDecimal":277,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":449,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":459,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":403,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":159,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":574,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSubTypeFirstAllowed":363,"com.google.gson.MixedStreamTest.testReadInvalidState":588,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":370,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":58,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":296,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":537,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":405,"com.google.gson.JsonParserTest.testParseMixedArray":602,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":230,"com.google.gson.functional.ArrayTest.testArrayOfStringsDeserialization":455,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":456,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":247,"com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization":291,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":518,"com.google.gson.functional.MapTest.testMapDeserialization":147,"com.google.gson.functional.ArrayTest.testEmptyArrayDeserialization":439,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":512,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":401,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":136,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":188,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":146,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":213,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":194,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":190,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":75,"com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization":30,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":477,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":488,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization":333,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":349,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":64,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":380,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":205,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":497,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":57,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":73,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":357,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":158,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":397,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":541,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigDecimal":216,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":119,"com.google.gson.functional.PrimitiveTest.testShortSerialization":295,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":197,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedDeserialization":283,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":389,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedDeserialization":253,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":282,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsBigDecimal":229,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":502,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":561,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":28,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":78,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":410,"com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues":142,"com.google.gson.functional.PrimitiveTest.testLargeDoubleDeserialization":246,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":99,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":303,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":130,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":202,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization":529,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":598,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization":310,"com.google.gson.functional.PrimitiveTest.testDeserializingNonZeroDecimalPointValuesAsIntegerFails":304,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":41,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":111,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":212,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":350,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":483,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":547,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":289,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":481,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":114,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsDoublePrimitive":259,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":354,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":321,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":34,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":66,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":469,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":87,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":498,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":375,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives":115,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":187,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":196,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":519,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsInt":236,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":474,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":505,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":198,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization":524,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization":80,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":209,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsShortWrapper":223,"com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral":290,"com.google.gson.functional.PrimitiveTest.testNumberSerialization":261,"com.google.gson.JsonArrayTest.testSet":604,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":307,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":125,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":27,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":193,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":421,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":406,"com.google.gson.functional.MapTest.testGeneralMapField":164,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":319,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":433,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsShortPrimitive":309,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":178,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":376,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":448,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":531,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":162,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":184,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":227,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":484,"com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization":285,"com.google.gson.MixedStreamTest.testReadMixedStreamed":597,"com.google.gson.ObjectTypeAdapterTest.testDeserializeNullValue":607,"com.google.gson.functional.MapTest.testBooleanKeyDeserialization":150,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":248,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlDeserialization":499,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":4,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":94,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":473,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":464,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBooleanPrimitive":266,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":388,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":392,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":517,"com.google.gson.functional.MapTest.testDeerializeMapOfMaps":151,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":557,"com.google.gson.JsonArrayTest.testDeepCopy":605,"com.google.gson.functional.MapTest.testMapDeserializationWithNullKey":139,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":118,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":308,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":429,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":551,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsFloatPrimitive":249,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":515,"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":133,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":424,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionDeserilaization":88,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserialization":482,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization":200,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":124,"com.google.gson.functional.ObjectTest.testNestedDeserialization":355,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":340,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":362,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":418,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":203,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":386,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsNumber":306,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":458,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":38,"com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys":152,"com.google.gson.functional.StringTest.testSingleQuoteInStringDeserialization":573,"com.google.gson.JsonParserTest.testParseUnquotedStringArrayFails":603,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":48,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":293,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":65,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":105,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":131,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":97,"com.google.gson.functional.ObjectTest.testNullSerialization":329,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":68,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization":556,"com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey":143,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":163,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":221,"com.google.gson.functional.MapTest.testInterfaceTypeMap":161,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization":445,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":378,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":208,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsDoubleWrapper":224,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":32,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":72,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails":381,"com.google.gson.MixedStreamTest.testReadClosed":589,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":485,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":384,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsInteger":240,"com.google.gson.MixedStreamTest.testWriteClosed":596,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":85,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":420,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":211,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":320,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateDeserialization":545,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":54,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":207,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":461,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":352,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":457,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":538,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":214,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":323,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":84,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":552,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBooleanWrapper":269,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":554,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":70,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":90,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":525,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":425,"com.google.gson.functional.PrimitiveTest.testDoubleAsStringRepresentationDeserialization":311,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":245,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":476,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderDeserialization":493,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":369,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":430,"com.google.gson.functional.CollectionTest.testQueueDeserialization":100,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":460,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":251,"com.google.gson.functional.PrimitiveTest.testByteDeserialization":267,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringDeserialization":578,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization":414,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":536,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":553,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":148,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":344,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":507,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":186,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":353,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":77,"com.google.gson.functional.MapTest.testRawMapSerialization":166,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":587,"com.google.gson.functional.CollectionTest.testNullsInListDeserialization":95,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetDeserialization":523,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":63,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":338,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":409,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":199,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":17,"com.google.gson.functional.PrimitiveTest.testByteSerialization":292,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":435,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":585,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":182,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsFloatWrapper":235,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":102,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":446,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":562,"com.google.gson.GsonTypeAdapterTest.testDefaultTypeAdapterThrowsParseException":0,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":55,"com.google.gson.functional.StringTest.testAssignmentCharDeserialization":575,"com.google.gson.functional.MapTest.testMapWithQuotes":153,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatDeserialization":243,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":492,"com.google.gson.functional.StringTest.testEscapingQuotesInStringDeserialization":577,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":106,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":472,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":123,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsNumber":300,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":489,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":372,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":191,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":45,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":351,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":402,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":276,"com.google.gson.functional.ObjectTest.testEmptyStringDeserialization":331,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":504,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":325,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":452,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":533,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":494,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":104,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":506,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":550,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigInteger":288,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriterAndSerializeNulls":24,"com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed":91,"com.google.gson.functional.ArrayTest.testSingleStringArrayDeserialization":438,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":47,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":431,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":534,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":67,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":426,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization":555,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":412,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReader":22,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":59,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsFloat":225,"com.google.gson.internal.LinkedHashTreeMapTest.testRemoveRootDoesNotDoubleUnlink":606,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":120,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":337,"com.google.gson.functional.ObjectTest.testNestedSerialization":339,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":126,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":183,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":239,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringDeserialization":581,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":428,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":165,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":407,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":480,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":11,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":595,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":330,"com.google.gson.functional.UncategorizedTest.testTrailingWhitespace":422,"com.google.gson.functional.PrimitiveTest.testBooleanDeserialization":302,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":210,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":463,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":509,"com.google.gson.GsonBuilderTest.testCreatingMoreThanOnce":7,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsInteger":241,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":600,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":341,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":487,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":549,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":580,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":441,"com.google.gson.functional.CollectionTest.testSetSerialization":96,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":179,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":116,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":399,"com.google.gson.functional.StringTest.testStringValueSerialization":583,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":584,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":40,"com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization":81,"com.google.gson.functional.ArrayTest.testInvalidArrayDeserialization":432,"com.google.gson.MixedStreamTest.testWriteInvalidState":592,"com.google.gson.functional.ObjectTest.testJsonObjectSerialization":324,"com.google.gson.functional.PrimitiveTest.testBadValueForBigIntegerDeserialization":244,"com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero":250,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":450,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":558,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":500,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":563,"com.google.gson.ObjectTypeAdapterTest.testDeserialize":608,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":364,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":427,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":383,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":56,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullSerialization":527,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":586,"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":145,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType":390,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":437},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:363","type":"CtUnaryOperatorImpl","sourcecode":"!insert"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601],"tindex":"fb126eeb-3e6f-11e6-b9be-4fab714f964d","method":{"position":"com.google.gson.Gson:249","type":"CtMethodImpl","sourcecode":"private com.google.gson.TypeAdapter<java.lang.Number> doubleAdapter(boolean serializeSpecialFloatingPointValues) {\n    if (!serializeSpecialFloatingPointValues) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255866855/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (serializeSpecialFloatingPointValues) {\n                return com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<java.lang.Number>;\n            } \n            return new com.google.gson.TypeAdapter<java.lang.Number>() {\n                @java.lang.Override\n                public java.lang.Double read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n                    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n                        in.nextNull();\n                        return null;\n                    } \n                    return in.nextDouble();\n                }\n\n                @java.lang.Override\n                public void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n                    if (value == null) {\n                        out.nullValue();\n                        return ;\n                    } \n                    double double = value.doubleValue();\n                    checkValidFloatingPoint(doubleValue);\n                    out.value(value);\n                }\n            };\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"insert":"serializeSpecialFloatingPointValues"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:136","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.TypeVariable"},"failures":[],"tindex":"fb12e41c-3e6f-11e6-b9be-5107d8dfae2b","method":{"position":"com.google.gson.internal.$Gson$Types:277","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type array) {\n    return array instanceof java.lang.reflect.GenericArrayType ? ((java.lang.reflect.GenericArrayType)(array)).getGenericComponentType() : ((java.lang.Class<?>)(array)).getComponentType();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"array"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:180","type":"CtUnaryOperatorImpl","sourcecode":"!(b instanceof java.lang.reflect.GenericArrayType)"},"failures":[],"tindex":"fb12e41d-3e6f-11e6-b9be-edf981b6b94a","method":{"position":"com.google.gson.internal.$Gson$Types:158","type":"CtMethodImpl","sourcecode":"public static boolean equals(java.lang.reflect.Type a, java.lang.reflect.Type b) {\n    if (a == b) {\n        return true;\n    } else if (a instanceof java.lang.Class) {\n        return a.equals(b);\n    } else if (a instanceof java.lang.reflect.ParameterizedType) {\n        if (!(b instanceof java.lang.reflect.ParameterizedType)) {\n            return false;\n        } \n        java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(a));\n        java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(b));\n        return ((com.google.gson.internal.$Gson$Types.equal(pa.getOwnerType(), pb.getOwnerType())) && (pa.getRawType().equals(pb.getRawType()))) && (java.util.Arrays.equals(pa.getActualTypeArguments(), pb.getActualTypeArguments()));\n    } else if (a instanceof java.lang.reflect.GenericArrayType) {\n        if (!(b instanceof java.lang.reflect.GenericArrayType)) {\n            return false;\n        } \n        java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(a));\n        java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(b));\n        return com.google.gson.internal.$Gson$Types.equals(ga.getGenericComponentType(), gb.getGenericComponentType());\n    } else if (a instanceof java.lang.reflect.WildcardType) {\n        if (!(b instanceof java.lang.reflect.WildcardType)) {\n            return false;\n        } \n        java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(a));\n        java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(b));\n        return (java.util.Arrays.equals(wa.getUpperBounds(), wb.getUpperBounds())) && (java.util.Arrays.equals(wa.getLowerBounds(), wb.getLowerBounds()));\n    } else if (a instanceof java.lang.reflect.TypeVariable) {\n        if (!(b instanceof java.lang.reflect.TypeVariable)) {\n            return false;\n        } \n        java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(a));\n        java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(b));\n        return ((va.getGenericDeclaration()) == (vb.getGenericDeclaration())) && (va.getName().equals(vb.getName()));\n    } else {\n        return false;\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"a"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:720","type":"CtBinaryOperatorImpl","sourcecode":"json == null"},"failures":[],"tindex":"fb130b2e-3e6f-11e6-b9be-5b43277d9ce6","method":{"position":"com.google.gson.JsonObject:181","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonObject getAsJsonObject(java.lang.String memberName) {\n    if (memberName == null) {\n        {\n            return ((com.google.gson.JsonObject)(com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.get(memberName)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255866855/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"memberName"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"fb13323f-3e6f-11e6-b9be-41f8d5dcf9ea","method":{"position":"com.google.gson.internal.bind.TypeAdapters:643","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic com.google.gson.JsonElement read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    switch (in.peek()) {\n        case STRING :\n            return new com.google.gson.JsonPrimitive(in.nextString());\n        case NUMBER :\n            java.lang.String java.lang.String = in.nextString();\n            return new com.google.gson.JsonPrimitive(new com.google.gson.internal.LazilyParsedNumber(number));\n        case BOOLEAN :\n            return new com.google.gson.JsonPrimitive(in.nextBoolean());\n        case NULL :\n            in.nextNull();\n            return com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull;\n        case BEGIN_ARRAY :\n            com.google.gson.JsonArray com.google.gson.JsonArray = new com.google.gson.JsonArray();\n            in.beginArray();\n            while (in.hasNext()) {\n                array.add(read(in));\n            }\n            in.endArray();\n            return array;\n        case BEGIN_OBJECT :\n            com.google.gson.JsonObject com.google.gson.JsonObject = new com.google.gson.JsonObject();\n            in.beginObject();\n            while (in.hasNext()) {\n                object.add(in.nextName(), read(in));\n            }\n            in.endObject();\n            return object;\n        case END_DOCUMENT :\n        case NAME :\n        case END_OBJECT :\n        case END_ARRAY :\n        default :\n            throw new java.lang.IllegalArgumentException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.reflect.TypeToken:131","type":"CtBinaryOperatorImpl","sourcecode":"(type) instanceof java.lang.Class<?>"},"failures":[],"tindex":"fb133240-3e6f-11e6-b9be-2fec271a40fa","method":{"position":"com.google.gson.Gson:576","type":"CtMethodImpl","sourcecode":"public void toJson(java.lang.Object src, java.lang.reflect.Type typeOfSrc, java.lang.Appendable writer) throws com.google.gson.JsonIOException {\n    if (typeOfSrc instanceof java.lang.Class<?>) {\n        {\n            try {\n                com.google.gson.stream.JsonWriter com.google.gson.stream.JsonWriter = newJsonWriter(com.google.gson.internal.Streams.writerForAppendable(writer));\n                toJson(src, typeOfSrc, jsonWriter);\n            } catch (java.io.IOException e) {\n                throw new com.google.gson.JsonIOException(e);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255866855/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"typeOfSrc"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:364","type":"CtBinaryOperatorImpl","sourcecode":"delta == 2"},"failures":[602,603,604,605],"tindex":"fb135951-3e6f-11e6-b9be-25659e3018b5","method":{"position":"com.google.gson.JsonArray:146","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement get(int i) {\n    if (i == 2) {\n        {\n            return java.util.List<com.google.gson.JsonElement>.get(i);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255866855/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delta":"i"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"fb135952-3e6f-11e6-b9be-9ff27988904d","method":{"position":"com.google.gson.internal.bind.TypeAdapters:326","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Character read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    java.lang.String java.lang.String = in.nextString();\n    if ((str.length()) != 1) {\n        throw new com.google.gson.JsonSyntaxException((\"Expecting character, got: \" + str));\n    } \n    return str.charAt(0);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"fb135953-3e6f-11e6-b9be-31287f541437","method":{"position":"com.google.gson.internal.bind.TypeAdapters:255","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        return in.nextLong();\n    } catch (java.lang.NumberFormatException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:139","type":"CtBinaryOperatorImpl","sourcecode":"nearest != null"},"failures":[606],"tindex":"fb138064-3e6f-11e6-b9be-2b47a6f2b361","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:338","type":"CtMethodImpl","sourcecode":"private void rebalance(com.google.gson.internal.LinkedHashTreeMap.Node<K, V> unbalanced, boolean insert) {\n    if (unbalanced != null) {\n        {\n            for (com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = unbalanced ; node != null ; node = node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>) {\n                com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                int int = left != null ? left.int : 0;\n                int int = right != null ? right.int : 0;\n                int int = leftHeight - rightHeight;\n                if (delta == (-2)) {\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = right.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = right.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    int int = rightRight != null ? rightRight.int : 0;\n                    int int = rightLeft != null ? rightLeft.int : 0;\n                    int int = rightLeftHeight - rightRightHeight;\n                    if ((rightDelta == (-1)) || ((rightDelta == 0) && (!insert))) {\n                        rotateLeft(node);\n                    } else {\n                        assert rightDelta == 1;\n                        rotateRight(right);\n                        rotateLeft(node);\n                    }\n                    if (insert) {\n                        break;\n                    } \n                } else if (delta == 2) {\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = left.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = left.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    int int = leftRight != null ? leftRight.int : 0;\n                    int int = leftLeft != null ? leftLeft.int : 0;\n                    int int = leftLeftHeight - leftRightHeight;\n                    if ((leftDelta == 1) || ((leftDelta == 0) && (!insert))) {\n                        rotateRight(node);\n                    } else {\n                        assert leftDelta == (-1);\n                        rotateLeft(left);\n                        rotateRight(node);\n                    }\n                    if (insert) {\n                        break;\n                    } \n                } else if (delta == 0) {\n                    node.int = leftHeight + 1;\n                    if (insert) {\n                        break;\n                    } \n                } else {\n                    assert (delta == (-1)) || (delta == 1);\n                    node.int = (java.lang.Math.max(leftHeight, rightHeight)) + 1;\n                    if (!insert) {\n                        break;\n                    } \n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255866855/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"nearest":"unbalanced"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:249","type":"CtInvocationImpl","sourcecode":"toResolve.isAssignableFrom(rawSupertype)"},"failures":[],"tindex":"fb13a775-3e6f-11e6-b9be-95b871660153","method":{"position":"com.google.gson.internal.Excluder:224","type":"CtMethodImpl","sourcecode":"private boolean isStatic(java.lang.Class<?> clazz) {\n    if (clazz.isAssignableFrom(clazz)) {\n        {\n            return ((clazz.getModifiers()) & (java.lang.reflect.Modifier.java.lang.reflect.Modifier.int)) != 0;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255866855/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"clazz","rawSupertype":"clazz"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:290","type":"CtBinaryOperatorImpl","sourcecode":"in == null"},"failures":[607,608],"tindex":"fb13ce86-3e6f-11e6-b9be-1138729ed31b","method":{"position":"com.google.gson.TypeAdapter:254","type":"CtMethodImpl","sourcecode":"public final T fromJson(java.io.Reader in) throws java.io.IOException {\n    if (in == null) {\n        {\n            com.google.gson.stream.JsonReader com.google.gson.stream.JsonReader = new com.google.gson.stream.JsonReader(in);\n            return read(reader);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255866855/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"in":"in"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"fb13ce87-3e6f-11e6-b9be-8fed8cd76da8","method":{"position":"com.google.gson.internal.bind.SqlDateTypeAdapter:64","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized void write(com.google.gson.stream.JsonWriter out, java.sql.Date value) throws java.io.IOException {\n    out.value((value == null ? null : java.text.DateFormat.format(value)));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.stream.JsonWriter:542","type":"CtBinaryOperatorImpl","sourcecode":"replacement == null"},"failures":[],"tindex":"fb13ce88-3e6f-11e6-b9be-3d1a91380561","method":{"position":"com.google.gson.JsonParser:44","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement parse(java.lang.String json) throws com.google.gson.JsonSyntaxException {\n    if (json == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255866855/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    } else {\n        {\n            return parse(new java.io.StringReader(json));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"replacement":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:919","type":"CtBinaryOperatorImpl","sourcecode":"p != (com.google.gson.stream.JsonReader.PEEKED_BUFFERED)"},"failures":[],"tindex":"fb13ce89-3e6f-11e6-b9be-35a22a1c05ed","method":{"position":"com.google.gson.stream.JsonReader:1268","type":"CtMethodImpl","sourcecode":"private void push(int newTop) {\n    if (newTop != newTop) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467255866855/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((int) == (int[].int)) {\n                int[] int[] = new int[(int) * 2];\n                int[] int[] = new int[(int) * 2];\n                java.lang.String[] java.lang.String[] = new java.lang.String[(int) * 2];\n                java.lang.System.arraycopy(int[], 0, newStack, 0, int);\n                java.lang.System.arraycopy(int[], 0, newPathIndices, 0, int);\n                java.lang.System.arraycopy(java.lang.String[], 0, newPathNames, 0, int);\n                int[] = newStack;\n                int[] = newPathIndices;\n                java.lang.String[] = newPathNames;\n            } \n            int[][((int)++)] = newTop;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"newTop","com.google.gson.stream.JsonReader.PEEKED_BUFFERED":"newTop"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":15,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}