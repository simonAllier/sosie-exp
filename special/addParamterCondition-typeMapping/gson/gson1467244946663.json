{"failureDictionary":{"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":119,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":275,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":263,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":325,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":342,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":181,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":217,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":274,"com.google.gson.functional.PrimitiveTest.testShortSerialization":85,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":338,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":106,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":78,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":155,"com.google.gson.MixedStreamTest.testWriteLenient":0,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":303,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":173,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":190,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":50,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":308,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":310,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":196,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":318,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":195,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":250,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":202,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":89,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":322,"com.google.gson.functional.ObjectTest.testSingletonLists":278,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":169,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":251,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":218,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":185,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization":92,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":4,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":108,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":294,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":44,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":145,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":97,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":131,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":323,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":193,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":115,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":339,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":316,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":204,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":7,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":167,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":336,"com.google.gson.functional.EnumTest.testEnumCaseMapping":194,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":19,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":216,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":157,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":247,"com.google.gson.functional.JsonTreeTest.testToJsonTree":215,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":328,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":126,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":130,"com.google.gson.functional.PrimitiveTest.testNumberSerialization":72,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":144,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":152,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":90,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":35,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":253,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":189,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":315,"com.google.gson.functional.MapTest.testGeneralMapField":268,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":227,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":297,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":57,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":205,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":235,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":174,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":266,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":18,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":61,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization":84,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":146,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":241,"com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization":79,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":286,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":334,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":59,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":66,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":9,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":17,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":319,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":200,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":183,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":242,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":337,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":76,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":165,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":70,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":105,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":91,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":100,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":232,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":292,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":168,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":245,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":46,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":164,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":118,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":22,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":248,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":104,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":132,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":290,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":120,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":272,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":77,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":335,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":31,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":228,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":291,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":40,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":340,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":63,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":110,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":135,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":83,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":114,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":123,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":138,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":54,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":321,"com.google.gson.functional.ObjectTest.testNullSerialization":283,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":117,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":172,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":1,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":267,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":163,"com.google.gson.functional.MapTest.testInterfaceTypeMap":265,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":58,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":207,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":125,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":203,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":42,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":192,"com.google.gson.functional.EnumTest.testEnumSet":188,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":282,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails":210,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":139,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":94,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":147,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":258,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":333,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":287,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":6,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":137,"com.google.gson.MixedStreamTest.testWriteClosed":16,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":187,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":314,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":331,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":80,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":280,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":140,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":124,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":34,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":30,"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":41,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":295,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":111,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":246,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":180,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":129,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":281,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":313,"com.google.gson.functional.MapTest.testMapSerialization":262,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":38,"com.google.gson.functional.MapTest.testSerializeMaps":257,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":306,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":47,"com.google.gson.functional.MapTest.testComplexKeysSerialization":270,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":317,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":170,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsFalse":346,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":238,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":24,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":299,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":65,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":254,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":212,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":225,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":300,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":33,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":67,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriter":186,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization":37,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":178,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":326,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":107,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":159,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":96,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":243,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":88,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":309,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":11,"com.google.gson.functional.MapTest.testRawMapSerialization":269,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":273,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":206,"com.google.gson.functional.PrettyPrintingTest.testMap":324,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":112,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":288,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":311,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":149,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":3,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":222,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":160,"com.google.gson.functional.MapTest.testMapSerializationEmpty":271,"com.google.gson.functional.CollectionTest.testQueueSerialization":312,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":341,"com.google.gson.functional.PrimitiveTest.testByteSerialization":82,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":184,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":229,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapNoTypeSerialization":343,"com.google.gson.functional.MapTest.testMapOfMapSerialization":261,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":68,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":239,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":51,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":28,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":73,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":102,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":219,"com.google.gson.functional.FieldNamingTest.testIdentity":307,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":234,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":304,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":141,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":21,"com.google.gson.functional.MapTest.testMapWithQuotes":260,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":150,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":52,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":109,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":214,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":277,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":93,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":103,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":8,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":211,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":56,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":148,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":220,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization":71,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":201,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":345,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":27,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":161,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullJsonElementSerialization":182,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":133,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":87,"com.google.gson.functional.MapTest.testMapSubclassSerialization":256,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":330,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":75,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":156,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":197,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":237,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":12,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":43,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":208,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":175,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":136,"com.google.gson.functional.EnumTest.testEnumSubclass":191,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization":74,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":151,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":5,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization":60,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":55,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":45,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":53,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":158,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":95,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":134,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":176,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":226,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":116,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":23,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":198,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":276,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":121,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":101,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":344,"com.google.gson.functional.ObjectTest.testNestedSerialization":289,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":36,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":64,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":240,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization":69,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":244,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":177,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":302,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":249,"com.google.gson.MixedStreamTest.testWriteNulls":13,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":233,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":10,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":15,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":230,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":284,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":298,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":99,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":279,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":127,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":32,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":20,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":221,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":264,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":199,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":223,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":143,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":86,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":179,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":301,"com.google.gson.functional.CollectionTest.testSetSerialization":320,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":98,"com.google.gson.functional.StringTest.testStringValueSerialization":224,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":327,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":48,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":25,"com.google.gson.MixedStreamTest.testWriteInvalidState":14,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":62,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":29,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":2,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":26,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":236,"com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization":81,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":166,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":39,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":154,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":162,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":305,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":296,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":329,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":255,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":128,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":259,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":252,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":213,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":332,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":142,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullSerialization":171,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization":285,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":293,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":49,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":113,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":209,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":122,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":153,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":231},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:245","type":"CtBinaryOperatorImpl","sourcecode":"annotationVersion <= (version)"},"failures":[0,1,2],"tindex":"edf6deec-3e55-11e6-92f1-5583f33be2d8","method":{"position":"com.google.gson.Gson:297","type":"CtMethodImpl","sourcecode":"private void checkValidFloatingPoint(double value) {\n    if (value <= value) {\n        {\n            if ((java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(value))) {\n                throw new java.lang.IllegalArgumentException(((value + \" is not a valid double value as per JSON specification. To override this\") + \" behavior, use GsonBuilder.serializeSpecialFloatingPointValues() method.\"));\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244759627/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"version":"value","annotationVersion":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:306","type":"CtBinaryOperatorImpl","sourcecode":"(com.google.gson.JsonPrimitive.this) == obj"},"failures":[],"tindex":"edf7541d-3e55-11e6-92f1-136d17650e65","method":{"position":"com.google.gson.internal.$Gson$Types:511","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object o) {\n    return (o instanceof java.lang.reflect.GenericArrayType) && (com.google.gson.internal.$Gson$Types.equals(com.google.gson.internal.$Gson$Types.GenericArrayTypeImpl.this, ((java.lang.reflect.GenericArrayType)(o))));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"o","this":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:249","type":"CtInvocationImpl","sourcecode":"toResolve.isAssignableFrom(rawSupertype)"},"failures":[],"tindex":"edf77b2e-3e55-11e6-92f1-6dedc3407b96","method":{"position":"com.google.gson.internal.$Gson$Types:287","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type context, java.lang.Class<?> contextRawType) {\n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.getSupertype(context, contextRawType, java.util.Collection.java.util.Collection.java.lang.Class);\n    if (collectionType instanceof java.lang.reflect.WildcardType) {\n        collectionType = ((java.lang.reflect.WildcardType)(collectionType)).getUpperBounds()[0];\n    } \n    if (collectionType instanceof java.lang.reflect.ParameterizedType) {\n        return ((java.lang.reflect.ParameterizedType)(collectionType)).getActualTypeArguments()[0];\n    } \n    return java.lang.Object.java.lang.Object.java.lang.Class;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"contextRawType","rawSupertype":"contextRawType"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"edf77b2f-3e55-11e6-92f1-fd61d5047342","method":{"position":"com.google.gson.JsonParser:80","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader json) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException {\n    boolean boolean = json.isLenient();\n    json.setLenient(true);\n    try {\n        return com.google.gson.internal.Streams.parse(json);\n    } catch (java.lang.StackOverflowError e) {\n        throw new com.google.gson.JsonParseException(((\"Failed parsing JSON source: \" + json) + \" to Json\") , e);\n    } catch (java.lang.OutOfMemoryError e) {\n        throw new com.google.gson.JsonParseException(((\"Failed parsing JSON source: \" + json) + \" to Json\") , e);\n    } finally {\n        json.setLenient(lenient);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1422","type":"CtUnaryOperatorImpl","sourcecode":"!(lenient)"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,0,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,1,61,62,63,64,65,2,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346],"tindex":"edf7a240-3e55-11e6-92f1-3534d21af537","method":{"position":"com.google.gson.stream.JsonWriter:268","type":"CtMethodImpl","sourcecode":"public final void setSerializeNulls(boolean serializeNulls) {\n    if (!serializeNulls) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244759627/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.stream.JsonWriter.this.boolean = serializeNulls;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lenient":"serializeNulls"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:133","type":"CtBinaryOperatorImpl","sourcecode":"(type) instanceof java.lang.reflect.ParameterizedType"},"failures":[],"tindex":"edf7c951-3e55-11e6-92f1-35e3e893dbce","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:808","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(java.lang.Object o) {\n    if (o instanceof java.lang.reflect.ParameterizedType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244759627/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = findByEntry(((java.util.Map.Entry<?, ?>)(o)));\n            if (node == null) {\n                return false;\n            } \n            removeInternal(node, true);\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"edf7f062-3e55-11e6-92f1-9957b888811a","method":{"position":"com.google.gson.Gson:895","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, T value) throws java.io.IOException {\n    if ((com.google.gson.TypeAdapter<T>) == null) {\n        throw new java.lang.IllegalStateException();\n    } \n    com.google.gson.TypeAdapter<T>.write(out, value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:716","type":"CtBinaryOperatorImpl","sourcecode":"(c < '0') || (c > '9')"},"failures":[],"tindex":"edf86593-3e55-11e6-92f1-7fa3fe5a8f04","method":{"position":"com.google.gson.stream.JsonReader:755","type":"CtMethodImpl","sourcecode":"private boolean isLiteral(char c) throws java.io.IOException {\n    if ((c < '0') || (c > '9')) {\n        {\n            switch (c) {\n                case '/' :\n                case '\\\\' :\n                case ';' :\n                case '#' :\n                case '=' :\n                    checkLenient();\n                case '{' :\n                case '}' :\n                case '[' :\n                case ']' :\n                case ':' :\n                case ',' :\n                case ' ' :\n                case '\\t' :\n                case '\\f' :\n                case '\\r' :\n                case '\\n' :\n                    return false;\n                default :\n                    return true;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244759627/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"c"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:198","type":"CtBinaryOperatorImpl","sourcecode":"out == null"},"failures":[],"tindex":"edf86594-3e55-11e6-92f1-8b760b1109ec","method":{"position":"com.google.gson.TypeAdapter:140","type":"CtMethodImpl","sourcecode":"public final void toJson(java.io.Writer out, T value) throws java.io.IOException {\n    if (out == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467244759627/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            com.google.gson.stream.JsonWriter com.google.gson.stream.JsonWriter = new com.google.gson.stream.JsonWriter(out);\n            write(writer, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"out":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":9,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}