{"failureDictionary":{"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":106,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":214,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":256,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":137,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":164,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":213,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":201,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":9,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":93,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":72,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":240,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":5,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":129,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":245,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":147,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":252,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":146,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":193,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":152,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":81,"com.google.gson.functional.ObjectTest.testSingletonLists":217,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":127,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":194,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":165,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedArray":274,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":140,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":95,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":279,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":231,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":14,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":15,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":111,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":87,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":2,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":254,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":145,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":102,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":266,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":250,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":154,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":195,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":23,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":7,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":125,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":200,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":163,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":116,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":202,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":259,"com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreBehindInVersion":12,"com.google.gson.functional.PrimitiveTest.testNumberSerialization":66,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":82,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":39,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":197,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":142,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":198,"com.google.gson.functional.MapTest.testGeneralMapField":211,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":174,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":234,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":49,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":155,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":182,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":130,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":54,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization":77,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":188,"com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization":73,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":6,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":264,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":51,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":60,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":25,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":150,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":138,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":189,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":8,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":70,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":124,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":64,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":92,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":83,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":90,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":179,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":229,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":126,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":192,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":18,"com.google.gson.stream.JsonWriterTest.testArraysInObjects":277,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":123,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":105,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":28,"com.google.gson.internal.bind.JsonTreeWriterTest.testLenientNansAndInfinities":272,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":3,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":227,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":71,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":265,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":37,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":175,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":228,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":44,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":267,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":56,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":97,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":76,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":101,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":110,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":104,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":128,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":53,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":210,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":122,"com.google.gson.functional.MapTest.testInterfaceTypeMap":209,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":50,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":157,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":153,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":144,"com.google.gson.functional.EnumTest.testEnumSet":141,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":221,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails":160,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":112,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":263,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":224,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":0,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":249,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":261,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":74,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":219,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":107,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":36,"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":45,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":232,"com.google.gson.stream.JsonWriterTest.testLongs":276,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":41,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":98,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":136,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":109,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":220,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":248,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":19,"com.google.gson.functional.MapTest.testSerializeMaps":204,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":243,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":21,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":251,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":185,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":30,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":236,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":58,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":203,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":172,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":237,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":61,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":20,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":134,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":257,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":94,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":205,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":118,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":86,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":190,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":80,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":246,"com.google.gson.functional.MapTest.testRawMapSerialization":212,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":156,"com.google.gson.functional.PrettyPrintingTest.testMap":255,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":99,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":225,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":247,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":42,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":113,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":169,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":119,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":139,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":176,"com.google.gson.functional.MapTest.testMapOfMapSerialization":207,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":62,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":186,"com.google.gson.reflect.TypeTokenTest.testIsAssignableFromRawTypes":275,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":34,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":67,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":166,"com.google.gson.functional.FieldNamingTest.testIdentity":244,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":181,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":241,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":27,"com.google.gson.functional.MapTest.testMapWithQuotes":206,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":96,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":216,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":84,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":1,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":24,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":161,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":48,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":167,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":270,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization":65,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":151,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":269,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":33,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":120,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":79,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":69,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":115,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":148,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":184,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":13,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":158,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":131,"com.google.gson.functional.EnumTest.testEnumSubclass":143,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization":68,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":280,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization":52,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":47,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":17,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":117,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":85,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":132,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":173,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":103,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":29,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization":22,"com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreAtSameVersion":11,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":215,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":91,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":268,"com.google.gson.functional.ObjectTest.testNestedSerialization":226,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":40,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":57,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":187,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization":63,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":191,"com.google.gson.stream.JsonWriterTest.testObjectsInArrays":278,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":133,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":239,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":26,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":177,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":222,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":235,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":89,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":218,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":38,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":168,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":208,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSubTypeFirstAllowed":4,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":16,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":149,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":170,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":78,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":135,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":180,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":238,"com.google.gson.functional.CollectionTest.testSetSerialization":253,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":88,"com.google.gson.functional.StringTest.testStringValueSerialization":171,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":258,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":46,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":31,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":55,"com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreAheadInVersion":10,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":35,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":59,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":32,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":183,"com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization":75,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":43,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":121,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":242,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":233,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":260,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":271,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":108,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":199,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":196,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":162,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":262,"com.google.gson.internal.bind.JsonTreeWriterTest.testArray":273,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization":223,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":230,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":100,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":159,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":114,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":178},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:722","type":"CtBinaryOperatorImpl","sourcecode":"(last == (com.google.gson.stream.JsonReader.NUMBER_CHAR_SIGN)) || (last == (com.google.gson.stream.JsonReader.NUMBER_CHAR_NONE))"},"failures":[],"tindex":"2f2f47cd-3e67-11e6-bbcd-0ff7afcf9438","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:233","type":"CtMethodImpl","sourcecode":"private static int secondaryHash(int h) {\n    if ((h == h) || (last == h)) {\n        {\n            h ^= (h >>> 20) ^ (h >>> 12);\n            return (h ^ (h >>> 7)) ^ (h >>> 4);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467252062177/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"last":"h","com.google.gson.stream.JsonReader.NUMBER_CHAR_SIGN":"h","com.google.gson.stream.JsonReader.NUMBER_CHAR_NONE":"h"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.GsonBuilder:455","type":"CtBinaryOperatorImpl","sourcecode":"(typeAdapter instanceof com.google.gson.JsonSerializer<?>) || (typeAdapter instanceof com.google.gson.JsonDeserializer<?>)"},"failures":[],"tindex":"2f2fbcfe-3e67-11e6-bbcd-b38189f80211","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:843","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(java.lang.Object key) {\n    if ((key instanceof com.google.gson.JsonSerializer<?>) || (typeAdapter instanceof com.google.gson.JsonDeserializer<?>)) {\n        {\n            return (removeInternalByKey(key)) != null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467252062177/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeAdapter":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:313","type":"CtBinaryOperatorImpl","sourcecode":"(value) == null"},"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"2f2fe40f-3e67-11e6-bbcd-b74e76e5613b","method":{"position":"com.google.gson.TreeTypeAdapter:103","type":"CtMethodImpl","sourcecode":"public static com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class<?> hierarchyType, java.lang.Object typeAdapter) {\n    if (typeAdapter == null) {\n        {\n            return new com.google.gson.TreeTypeAdapter.SingleTypeFactory(typeAdapter , null , false , hierarchyType);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467252062177/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"typeAdapter"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:171","type":"CtBinaryOperatorImpl","sourcecode":"(token != (com.google.gson.stream.JsonToken.NUMBER)) && (token != (com.google.gson.stream.JsonToken.STRING))"},"failures":[],"tindex":"2f300b20-3e67-11e6-bbcd-4d799d39267c","method":{"position":"com.google.gson.internal.bind.JsonTreeReader:137","type":"CtMethodImpl","sourcecode":"private void expect(com.google.gson.stream.JsonToken expected) throws java.io.IOException {\n    if ((expected != expected) && (token != expected)) {\n        {\n            if ((peek()) != expected) {\n                throw new java.lang.IllegalStateException((((\"Expected \" + expected) + \" but was \") + (peek())));\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467252062177/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"com.google.gson.stream.JsonToken.STRING":"expected","token":"expected","com.google.gson.stream.JsonToken.NUMBER":"expected"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.Gson:720","type":"CtBinaryOperatorImpl","sourcecode":"json == null"},"failures":[],"tindex":"2f300b21-3e67-11e6-bbcd-b31a6af83f02","method":{"position":"com.google.gson.stream.JsonWriter:335","type":"CtMethodImpl","sourcecode":"private com.google.gson.stream.JsonWriter close(int empty, int nonempty, java.lang.String closeBracket) throws java.io.IOException {\n    if (closeBracket == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467252062177/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            int int = peek();\n            if ((context != nonempty) && (context != empty)) {\n                throw new java.lang.IllegalStateException(\"Nesting problem.\");\n            } \n            if ((java.lang.String) != null) {\n                throw new java.lang.IllegalStateException((\"Dangling name: \" + (java.lang.String)));\n            } \n            (int)--;\n            if (context == nonempty) {\n                newline();\n            } \n            java.io.Writer.write(closeBracket);\n            return com.google.gson.stream.JsonWriter.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"closeBracket"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:245","type":"CtBinaryOperatorImpl","sourcecode":"annotationVersion <= (version)"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22],"tindex":"2f303232-3e67-11e6-bbcd-97c2e8cbcff3","method":{"position":"com.google.gson.internal.Excluder:69","type":"CtMethodImpl","sourcecode":"public com.google.gson.internal.Excluder withVersion(double ignoreVersionsAfter) {\n    if (ignoreVersionsAfter <= ignoreVersionsAfter) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467252062177/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.Excluder com.google.gson.internal.Excluder = clone();\n            result.double = ignoreVersionsAfter;\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"version":"ignoreVersionsAfter","annotationVersion":"ignoreVersionsAfter"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"2f303233-3e67-11e6-bbcd-99558f8a87f6","method":{"position":"com.google.gson.internal.bind.TypeAdapters:460","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.net.URI read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        java.lang.String java.lang.String = in.nextString();\n        return \"null\".equals(nextString) ? null : new java.net.URI(nextString);\n    } catch (java.net.URISyntaxException e) {\n        throw new com.google.gson.JsonIOException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:429","type":"CtBinaryOperatorImpl","sourcecode":"(deferredName) != null"},"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,13,14,17,18,21,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,1,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,5,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,6,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,7,8,9,266,267,268,269],"tindex":"2f303234-3e67-11e6-bbcd-574a2b6c86a9","method":{"position":"com.google.gson.Gson:510","type":"CtMethodImpl","sourcecode":"public java.lang.String toJson(java.lang.Object src) {\n    if (src != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467252062177/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (src == null) {\n                return toJson(com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull);\n            } \n            return toJson(src, src.getClass());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"src"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:77","type":"CtBinaryOperatorImpl","sourcecode":"(!(value.isJsonNull())) || (getSerializeNulls())"},"failures":[],"tindex":"2f305945-3e67-11e6-bbcd-8dda66b0ee2e","method":{"position":"com.google.gson.internal.LinkedTreeMap:276","type":"CtMethodImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V> removeInternalByKey(java.lang.Object key) {\n    com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = findByObject(key);\n    if (node != null) {\n        removeInternal(node, true);\n    } \n    return node;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"key","value":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:86","type":"CtBinaryOperatorImpl","sourcecode":"element instanceof com.google.gson.JsonArray"},"failures":[2,270,271,272,273,274],"tindex":"2f305946-3e67-11e6-bbcd-057a37be583a","method":{"position":"com.google.gson.internal.bind.TypeAdapters:680","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, com.google.gson.JsonElement value) throws java.io.IOException {\n    if (value instanceof com.google.gson.JsonArray) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467252062177/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if ((value == null) || (value.isJsonNull())) {\n                out.nullValue();\n            } else if (value.isJsonPrimitive()) {\n                com.google.gson.JsonPrimitive com.google.gson.JsonPrimitive = value.getAsJsonPrimitive();\n                if (primitive.isNumber()) {\n                    out.value(primitive.getAsNumber());\n                } else if (primitive.isBoolean()) {\n                    out.value(primitive.getAsBoolean());\n                } else {\n                    out.value(primitive.getAsString());\n                }\n            } else if (value.isJsonArray()) {\n                out.beginArray();\n                for (com.google.gson.JsonElement com.google.gson.JsonElement : value.getAsJsonArray()) {\n                    write(out, e);\n                }\n                out.endArray();\n            } else if (value.isJsonObject()) {\n                out.beginObject();\n                for (java.util.Map.Entry<java.lang.String, com.google.gson.JsonElement> java.util.Map.Entry<java.lang.String, com.google.gson.JsonElement> : value.getAsJsonObject().entrySet()) {\n                    out.name(e.getKey());\n                    write(out, e.getValue());\n                }\n                out.endObject();\n            } else {\n                throw new java.lang.IllegalArgumentException((\"Couldn't write \" + (value.getClass())));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:94","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.Class"},"failures":[275],"tindex":"2f308057-3e67-11e6-bbcd-cd35cef64a50","method":{"position":"com.google.gson.reflect.TypeToken:122","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic boolean isAssignableFrom(java.lang.reflect.Type from) {\n    if (from instanceof java.lang.Class) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467252062177/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (from == null) {\n                return false;\n            } \n            if (java.lang.reflect.Type.equals(from)) {\n                return true;\n            } \n            if ((java.lang.reflect.Type) instanceof java.lang.Class<?>) {\n                return java.lang.Class<? super T>.isAssignableFrom(com.google.gson.internal.$Gson$Types.getRawType(from));\n            } else if ((java.lang.reflect.Type) instanceof java.lang.reflect.ParameterizedType) {\n                return com.google.gson.reflect.TypeToken.isAssignableFrom(from, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)), new java.util.HashMap<java.lang.String, java.lang.reflect.Type>());\n            } else if ((java.lang.reflect.Type) instanceof java.lang.reflect.GenericArrayType) {\n                return (java.lang.Class<? super T>.isAssignableFrom(com.google.gson.internal.$Gson$Types.getRawType(from))) && (com.google.gson.reflect.TypeToken.isAssignableFrom(from, ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type))));\n            } else {\n                throw com.google.gson.reflect.TypeToken.buildUnexpectedTypeError(java.lang.reflect.Type, java.lang.Class.java.lang.Class.java.lang.Class, java.lang.reflect.ParameterizedType.java.lang.reflect.ParameterizedType.java.lang.Class, java.lang.reflect.GenericArrayType.java.lang.reflect.GenericArrayType.java.lang.Class);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"from"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:726","type":"CtBinaryOperatorImpl","sourcecode":"value == 0"},"failures":[276,277,278,279,280,116,123,125,126],"tindex":"2f308058-3e67-11e6-bbcd-5dfecb880e7c","method":{"position":"com.google.gson.stream.JsonWriter:476","type":"CtMethodImpl","sourcecode":"public com.google.gson.stream.JsonWriter value(long value) throws java.io.IOException {\n    if (value == 0) {\n        {\n            writeDeferredName();\n            beforeValue(false);\n            java.io.Writer.write(java.lang.Long.toString(value));\n            return com.google.gson.stream.JsonWriter.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467252062177/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"2f30a769-3e67-11e6-bbcd-3b5ac3ec4ff3","method":{"position":"com.google.gson.internal.bind.TypeAdapters:188","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        int int = in.nextInt();\n        return ((byte)(intValue));\n    } catch (java.lang.NumberFormatException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"2f30a76a-3e67-11e6-bbcd-71b283a1406f","method":{"position":"com.google.gson.internal.bind.TypeAdapters:460","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.net.URI read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        java.lang.String java.lang.String = in.nextString();\n        return \"null\".equals(nextString) ? null : new java.net.URI(nextString);\n    } catch (java.net.URISyntaxException e) {\n        throw new com.google.gson.JsonIOException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1531","type":"CtBinaryOperatorImpl","sourcecode":"(c >= 'A') && (c <= 'F')"},"failures":[],"tindex":"2f30a76b-3e67-11e6-bbcd-f97346dae0e2","method":{"position":"com.google.gson.stream.JsonReader:1101","type":"CtMethodImpl","sourcecode":"private void skipQuotedValue(char quote) throws java.io.IOException {\n    if ((quote >= 'A') && (c <= 'F')) {\n        {\n            char[] char[] = com.google.gson.stream.JsonReader.this.char[];\n            do {\n                int int = int;\n                int int = int;\n                while (p < l) {\n                    int int = buffer[(p++)];\n                    if (c == quote) {\n                        int = p;\n                        return ;\n                    } else if (c == '\\\\') {\n                        int = p;\n                        readEscapeCharacter();\n                        p = int;\n                        l = int;\n                    } else if (c == '\\n') {\n                        (int)++;\n                        int = p;\n                    } \n                }\n                int = p;\n            } while (fillBuffer(1) );\n            throw syntaxError(\"Unterminated string\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467252062177/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"quote"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":15,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}