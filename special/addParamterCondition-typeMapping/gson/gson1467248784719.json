{"failureDictionary":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":73,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":287,"com.google.gson.functional.StringTest.testStringValueDeserialization":535,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":65,"com.google.gson.functional.PrimitiveTest.testBigIntegerDeserialization":461,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullDeserialization":520,"com.google.gson.functional.PrimitiveTest.testBigDecimalNaNDeserializationNotSupported":434,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":191,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":595,"com.google.gson.MixedStreamTest.testWriteLenient":105,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":544,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":576,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":248,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":74,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":364,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":374,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":575,"com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization":466,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":271,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":318,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":276,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerDeserialization":441,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":502,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":567,"com.google.gson.functional.ObjectTest.testSingletonLists":334,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":245,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":319,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":288,"com.google.gson.functional.PrimitiveTest.testNumberDeserialization":429,"com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue":72,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator":488,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":260,"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":609,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization":526,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":584,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":94,"com.google.gson.functional.PrimitiveTest.testStringsAsBooleans":468,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":415,"com.google.gson.functional.StringTest.testEscapedBackslashInStringDeserialization":543,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":84,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":379,"com.google.gson.functional.PrimitiveTest.testBigDecimalNoFractAsStringRepresentationDeserialization":462,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":47,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":97,"com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization":423,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":390,"com.google.gson.functional.MapTest.testMapOfMapDeserialization":46,"com.google.gson.functional.EnumTest.testEnumCaseMapping":270,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":110,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":286,"com.google.gson.functional.JsonTreeTest.testToJsonTree":88,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsLong":422,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":382,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveDeserialization":527,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":83,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":221,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":229,"com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization":555,"com.google.gson.functional.PrimitiveTest.testUnquotedStringDeserializationFails":430,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferDeserialization":518,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":322,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":371,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":353,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringDeserialization":541,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":582,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":109,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization":171,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsBigIntegerFails":435,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":343,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":388,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":144,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":587,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":108,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":274,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":258,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectDeserialization":506,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":313,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionDeserialization":474,"com.google.gson.functional.PrimitiveTest.testDoubleInfinityDeserialization":473,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization":525,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":163,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":157,"com.google.gson.functional.PrimitiveTest.testFloatInfinityDeserialization":478,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArrayDeserialization":511,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":302,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":349,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":244,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityDeserialization":449,"com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization":39,"com.google.gson.functional.PrimitiveTest.testDoubleNoFractAsStringRepresentationDeserialization":459,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":545,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":202,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountryVariant":517,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":25,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":483,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":61,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":164,"com.google.gson.functional.JsonParserTest.testParseInvalidJson":550,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsDouble":460,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":298,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":348,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":129,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":394,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":579,"com.google.gson.functional.MapTest.testMapDeserializationWithNullValue":57,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":149,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":195,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":565,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":204,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":215,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":407,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":484,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings":16,"com.google.gson.functional.MapTest.testNumberKeyDeserialization":63,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":15,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":600,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":239,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":404,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":143,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":596,"com.google.gson.functional.CollectionTest.testSetDeserialization":607,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":277,"com.google.gson.functional.EnumTest.testEnumSet":264,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":339,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersEscapedDeserialization":612,"com.google.gson.functional.PrimitiveTest.testBigDecimalAsStringRepresentationDeserialization":452,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":216,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":181,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":34,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampDeserialization":514,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":344,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":96,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":214,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBytePrimitive":463,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":406,"com.google.gson.functional.PrimitiveTest.testDeserializingDecimalPointValueZeroSucceeds":469,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":263,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":385,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":167,"com.google.gson.functional.MapTest.testHashMapDeserialization":28,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsIntegerFails":432,"com.google.gson.functional.CollectionTest.testLinkedListDeserialization":604,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesDeserialization":14,"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":4,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization":411,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":124,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":196,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":17,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":21,"com.google.gson.functional.MapTest.testSortedMap":50,"com.google.gson.functional.MapTest.testMapSerialization":45,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":126,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedDeserialization":457,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":598,"com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization":557,"com.google.gson.functional.MapTest.testSerializeMaps":31,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":362,"com.google.gson.functional.MapTest.testComplexKeysSerialization":58,"com.google.gson.functional.InternationalizationTest.testStringsWithRawChineseCharactersDeserialization":611,"com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader":62,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsFalse":89,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":309,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":355,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":534,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":329,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":497,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriter":261,"com.google.gson.functional.EnumTest.testTopLevelEnumDeserialization":533,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":380,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":192,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsDeserialization":589,"com.google.gson.functional.MapTest.testStringKeyDeserialization":60,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsDeserialization":559,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":183,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":175,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":64,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesDeserialization":438,"com.google.gson.functional.PrettyPrintingTest.testMap":67,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":280,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigInteger":433,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":367,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":127,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":226,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls":530,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":93,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysDeserialization":560,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":292,"com.google.gson.functional.StringTest.testStringWithEscapedSlashDeserialization":536,"com.google.gson.functional.MapTest.testMapSerializationEmpty":59,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":236,"com.google.gson.functional.CollectionTest.testQueueSerialization":368,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsByteWrapper":453,"com.google.gson.functional.MapTest.testMapOfMapSerialization":44,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":155,"com.google.gson.JavaSerializationTest.testMapIsSerializable":5,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountry":519,"com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization":605,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":119,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":160,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":188,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":289,"com.google.gson.functional.FieldNamingTest.testIdentity":363,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":10,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":112,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":590,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":87,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":139,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":194,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":333,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalDeserialization":424,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":98,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":141,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":290,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization":158,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":572,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeDeserialization":524,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":396,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidDeserialization":515,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":118,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":237,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullJsonElementSerialization":257,"com.google.gson.functional.MapTest.testMapDeserializationEmpty":26,"com.google.gson.functional.MapTest.testMapSubclassSerialization":30,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":174,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":18,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":504,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersDeserialization":613,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":102,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":131,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":282,"com.google.gson.functional.PrimitiveTest.testBigDecimalDeserialization":447,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsLongPrimitive":482,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguage":509,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":546,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":529,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":213,"com.google.gson.functional.EnumTest.testEnumSubclass":267,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization":161,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":95,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":583,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization":145,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":140,"com.google.gson.GsonBuilderTest.testRegisterTypeAdapterForCoreType":615,"com.google.gson.functional.PrimitiveTest.testFloatNaNDeserialization":465,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":182,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":494,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsLongWrapper":425,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":332,"com.google.gson.InnerClassExclusionStrategyTest.testIncludeStaticNestedClassObject":1,"com.google.gson.functional.PrimitiveTest.testBigDecimalNegativeInfinityDeserializationNotSupported":450,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":573,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":79,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":395,"com.google.gson.functional.ArrayTest.testArrayOfNullDeserialization":554,"com.google.gson.functional.PrimitiveTest.testBigDecimalInfinityDeserializationNotSupported":454,"com.google.gson.functional.ObjectTest.testTruncatedDeserialization":581,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization":156,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":492,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":252,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":574,"com.google.gson.functional.MapTest.testMapSubclassDeserialization":27,"com.google.gson.MixedStreamTest.testWriteNulls":103,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":304,"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":20,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":300,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":354,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":501,"com.google.gson.CommentsTest.testParseComments":614,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":11,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":335,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":569,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":7,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigDecimal":464,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":558,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":597,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":49,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":291,"com.google.gson.MixedStreamTest.testReadInvalidState":400,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":273,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":220,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":173,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":254,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":357,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":148,"com.google.gson.functional.ArrayTest.testArrayOfStringsDeserialization":561,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":6,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":152,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":117,"com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization":168,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":242,"com.google.gson.functional.MapTest.testMapDeserialization":37,"com.google.gson.functional.ArrayTest.testEmptyArrayDeserialization":553,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":238,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":383,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":330,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":566,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":36,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":207,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":324,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":321,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":498,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":86,"com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization":532,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":508,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization":342,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":350,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":198,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":283,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":80,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":230,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":503,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":203,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":331,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":48,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":68,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":70,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":256,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigDecimal":421,"com.google.gson.functional.PrimitiveTest.testShortSerialization":172,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":487,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":326,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedDeserialization":467,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":392,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedDeserialization":448,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":165,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":13,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsBigDecimal":431,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":359,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":266,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":366,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":272,"com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues":32,"com.google.gson.functional.PrimitiveTest.testLargeDoubleDeserialization":444,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":176,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":378,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":547,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization":523,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":571,"com.google.gson.internal.bind.JsonTreeWriterTest.testObject":90,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":402,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization":179,"com.google.gson.functional.PrimitiveTest.testDeserializingNonZeroDecimalPointValuesAsIntegerFails":477,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":193,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":66,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":485,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":500,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsTrue":92,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":132,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":222,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":471,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":562,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":184,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsDoublePrimitive":451,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":593,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":578,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":269,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":199,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":393,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":372,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":512,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":278,"com.google.gson.InnerClassExclusionStrategyTest.testExcludeInnerClassField":0,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives":486,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":320,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":243,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":325,"com.google.gson.InnerClassExclusionStrategyTest.testExcludeInnerClassObject":3,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsInt":437,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":24,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":233,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":327,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization":522,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":81,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization":602,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsShortWrapper":426,"com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral":472,"com.google.gson.functional.PrimitiveTest.testNumberSerialization":159,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":177,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":122,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":265,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":323,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":414,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":599,"com.google.gson.functional.MapTest.testGeneralMapField":54,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":577,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":297,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsShortPrimitive":480,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":142,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":279,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":306,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":249,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":52,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":147,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":223,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":312,"com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization":166,"com.google.gson.MixedStreamTest.testReadMixedStreamed":401,"com.google.gson.functional.MapTest.testBooleanKeyDeserialization":40,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":153,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlDeserialization":513,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":23,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":99,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":375,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":564,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBooleanPrimitive":455,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":391,"com.google.gson.JavaSerializationTest.testNumberIsSerializable":397,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":405,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":241,"com.google.gson.functional.MapTest.testDeerializeMapOfMaps":41,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":190,"com.google.gson.functional.MapTest.testMapDeserializationWithNullKey":29,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":178,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":186,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":316,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":134,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsFloatPrimitive":445,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedObject":91,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":240,"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":549,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":113,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserialization":505,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization":570,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":12,"com.google.gson.functional.ObjectTest.testNestedDeserialization":594,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":209,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":347,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":412,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":78,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":389,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsNumber":479,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":121,"com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys":42,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":490,"com.google.gson.functional.StringTest.testSingleQuoteInStringDeserialization":537,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":212,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":170,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":493,"com.google.gson.JavaSerializationTest.testListIsSerializable":398,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":77,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":548,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":377,"com.google.gson.functional.ObjectTest.testNullSerialization":340,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":201,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization":489,"com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey":33,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":53,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":146,"com.google.gson.functional.MapTest.testInterfaceTypeMap":51,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization":556,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":281,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":206,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsDoubleWrapper":427,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":130,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":268,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails":284,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":496,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":224,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":387,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsInteger":439,"com.google.gson.MixedStreamTest.testWriteClosed":107,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":370,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":413,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":336,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":499,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateDeserialization":528,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":217,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":205,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":9,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":120,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":351,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":255,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":208,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":337,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":369,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":417,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBooleanWrapper":458,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":135,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":495,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":373,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":246,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":409,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":115,"com.google.gson.functional.PrimitiveTest.testDoubleAsStringRepresentationDeserialization":481,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":151,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":85,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderDeserialization":510,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":295,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":356,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":8,"com.google.gson.functional.CollectionTest.testQueueDeserialization":610,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":154,"com.google.gson.functional.PrimitiveTest.testByteDeserialization":456,"com.google.gson.InnerClassExclusionStrategyTest.testIncludeStaticNestedClassField":2,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringDeserialization":540,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization":125,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":253,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":418,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":38,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":588,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":235,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":314,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":592,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":365,"com.google.gson.functional.MapTest.testRawMapSerialization":56,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":101,"com.google.gson.functional.CollectionTest.testNullsInListDeserialization":608,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetDeserialization":521,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":197,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":345,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":601,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":328,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":69,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapNoTypeSerialization":71,"com.google.gson.functional.PrimitiveTest.testByteSerialization":169,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":259,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":299,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":137,"com.google.gson.ObjectTypeAdapterTest.testSerialize":616,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":310,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsFloatWrapper":436,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":75,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":305,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":360,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":218,"com.google.gson.GsonTypeAdapterTest.testDefaultTypeAdapterThrowsParseException":399,"com.google.gson.functional.StringTest.testAssignmentCharDeserialization":538,"com.google.gson.functional.MapTest.testMapWithQuotes":43,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":227,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatDeserialization":442,"com.google.gson.functional.StringTest.testEscapingQuotesInStringDeserialization":539,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":180,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":22,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":189,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":285,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsNumber":475,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":225,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":275,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":568,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":210,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":591,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":384,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":162,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":232,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":308,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":580,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":250,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":228,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":76,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":133,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":234,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigInteger":470,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriterAndSerializeNulls":262,"com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed":606,"com.google.gson.functional.ArrayTest.testSingleStringArrayDeserialization":552,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":211,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":251,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":296,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":200,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":114,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization":419,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":19,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReader":531,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsFloat":428,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":187,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":585,"com.google.gson.functional.ObjectTest.testNestedSerialization":346,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":123,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":150,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":311,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringDeserialization":542,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":315,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":55,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":358,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":317,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":100,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":106,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":341,"com.google.gson.functional.UncategorizedTest.testTrailingWhitespace":408,"com.google.gson.functional.PrimitiveTest.testBooleanDeserialization":476,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":82,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":563,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":516,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":111,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsInteger":440,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":507,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":586,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":416,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":293,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":303,"com.google.gson.functional.CollectionTest.testSetSerialization":376,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":420,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":185,"com.google.gson.functional.StringTest.testStringValueSerialization":294,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":381,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":136,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":116,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":491,"com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization":603,"com.google.gson.MixedStreamTest.testWriteInvalidState":104,"com.google.gson.functional.ArrayTest.testInvalidArrayDeserialization":551,"com.google.gson.functional.ObjectTest.testJsonObjectSerialization":338,"com.google.gson.functional.PrimitiveTest.testBadValueForBigIntegerDeserialization":443,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":307,"com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero":446,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":128,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":231,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":361,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":352,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":410,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":386,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":219,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullSerialization":247,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":138,"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":35,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":301,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType":403},"transformations":[{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"dd9e0fd5-3e5e-11e6-8a6d-fd587dceb230","method":{"position":"com.google.gson.internal.bind.TypeAdapters:509","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.util.UUID value) throws java.io.IOException {\n    out.value((value == null ? null : value.toString()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:227","type":"CtBinaryOperatorImpl","sourcecode":"toResolve == rawType"},"failures":[0,1,2,3,4],"tindex":"dd9e5df6-3e5e-11e6-8a6d-2314c80f160d","method":{"position":"com.google.gson.internal.Excluder:224","type":"CtMethodImpl","sourcecode":"private boolean isStatic(java.lang.Class<?> clazz) {\n    if (clazz == clazz) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467248326266/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((clazz.getModifiers()) & (java.lang.reflect.Modifier.java.lang.reflect.Modifier.int)) != 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"rawType":"clazz","toResolve":"clazz"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:306","type":"CtBinaryOperatorImpl","sourcecode":"longSerializationPolicy == (com.google.gson.LongSerializationPolicy.DEFAULT)"},"failures":[],"tindex":"dd9e5df7-3e5e-11e6-8a6d-b9c827ae4602","method":{"position":"com.google.gson.GsonBuilder:261","type":"CtMethodImpl","sourcecode":"public com.google.gson.GsonBuilder setLongSerializationPolicy(com.google.gson.LongSerializationPolicy serializationPolicy) {\n    if (serializationPolicy == serializationPolicy) {\n        {\n            com.google.gson.GsonBuilder.this.com.google.gson.LongSerializationPolicy = serializationPolicy;\n            return com.google.gson.GsonBuilder.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467248326266/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"longSerializationPolicy":"serializationPolicy","com.google.gson.LongSerializationPolicy.DEFAULT":"serializationPolicy"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"dd9e8508-3e5e-11e6-8a6d-132ab6147eee","method":{"position":"com.google.gson.internal.bind.TypeAdapters:509","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.util.UUID value) throws java.io.IOException {\n    out.value((value == null ? null : value.toString()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.DefaultDateTypeAdapter:83","type":"CtBinaryOperatorImpl","sourcecode":"typeOfT == (java.util.Date.class)"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"tindex":"dd9e8509-3e5e-11e6-8a6d-5396b3b02248","method":{"position":"com.google.gson.internal.bind.MapTypeAdapterFactory:139","type":"CtMethodImpl","sourcecode":"private com.google.gson.TypeAdapter<?> getKeyAdapter(com.google.gson.Gson context, java.lang.reflect.Type keyType) {\n    if (keyType == keyType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467248326266/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (keyType == (boolean.boolean.java.lang.Class)) || (keyType == (java.lang.Boolean.java.lang.Boolean.java.lang.Class)) ? com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<java.lang.Boolean> : context.getAdapter(com.google.gson.reflect.TypeToken.get(keyType));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeOfT":"keyType","java.util.Date.class":"keyType"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonElement:103","type":"CtInvocationImpl","sourcecode":"isJsonArray()"},"failures":[],"tindex":"dd9e850a-3e5e-11e6-8a6d-531fa36e449c","method":{"position":"com.google.gson.JsonPrimitive:273","type":"CtMethodImpl","sourcecode":"private static boolean isPrimitiveOrString(java.lang.Object target) {\n    if (target == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467248326266/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (target instanceof java.lang.String) {\n                return true;\n            } \n            java.lang.Class<?> java.lang.Class<?> = target.getClass();\n            for (java.lang.Class<?> java.lang.Class<?> : com.google.gson.JsonPrimitive.com.google.gson.JsonPrimitive.java.lang.Class<?>[]) {\n                if (standardPrimitive.isAssignableFrom(classOfPrimitive)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"target"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.TimeTypeAdapter:51","type":"CtBinaryOperatorImpl","sourcecode":"(in.peek()) == (com.google.gson.stream.JsonToken.NULL)"},"failures":[],"tindex":"dd9eac1b-3e5e-11e6-8a6d-2b710b671e2d","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:808","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(java.lang.Object o) {\n    if ((o.peek()) == o) {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = findByEntry(((java.util.Map.Entry<?, ?>)(o)));\n            if (node == null) {\n                return false;\n            } \n            removeInternal(node, true);\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467248326266/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"in":"o","com.google.gson.stream.JsonToken.NULL":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:565","type":"CtBinaryOperatorImpl","sourcecode":"(indent) == null"},"failures":[8,9,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,21,24,25,65,69,89,90,91,92],"tindex":"dd9eac1c-3e5e-11e6-8a6d-bb5d666281a7","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic com.google.gson.stream.JsonWriter name(java.lang.String name) throws java.io.IOException {\n    if (name == null) {\n        {\n            if ((java.util.List<com.google.gson.JsonElement>.isEmpty()) || ((java.lang.String) != null)) {\n                throw new java.lang.IllegalStateException();\n            } \n            com.google.gson.JsonElement com.google.gson.JsonElement = peek();\n            if (element instanceof com.google.gson.JsonObject) {\n                java.lang.String = name;\n                return com.google.gson.internal.bind.JsonTreeWriter.this;\n            } \n            throw new java.lang.IllegalStateException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467248326266/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"indent":"name"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:649","type":"CtFieldReadImpl","sourcecode":"prettyPrinting"},"failures":[93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,6,120,121,7,8,9,122,123,124,125,73,126,127,128,129,4,130,131,132,133,134,135,136,137,138,74,75,139,76,77,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,11,186,187,188,189,12,190,191,192,193,194,195,196,197,198,199,200,201,202,203,78,79,80,204,205,206,81,82,207,208,83,84,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,13,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,15,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,18,19,273,274,275,276,277,278,279,280,281,282,283,284,285,85,86,87,88,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,21,24,25,317,318,319,320,321,322,323,324,325,326,327,328,329,330,30,31,34,36,38,43,44,45,48,49,51,52,53,54,55,56,58,59,61,64,65,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,66,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,67,68,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,69,70,71,395,396],"tindex":"dd9ed32d-3e5e-11e6-8a6d-55aa8f9d7d76","method":{"position":"com.google.gson.stream.JsonWriter:252","type":"CtMethodImpl","sourcecode":"public final void setHtmlSafe(boolean htmlSafe) {\n    if (htmlSafe) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467248326266/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.stream.JsonWriter.this.boolean = htmlSafe;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"prettyPrinting":"htmlSafe"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:166","type":"CtBinaryOperatorImpl","sourcecode":"from instanceof java.lang.Class<?>"},"failures":[93,94,95,397,5,398,399,96,97,98,99,100,101,400,102,104,105,106,107,401,402,110,111,403,404,405,406,407,408,112,113,409,114,410,115,116,117,118,119,6,120,121,7,8,9,122,123,124,125,73,126,411,412,127,413,414,128,129,4,131,132,415,416,133,134,417,418,135,419,136,74,75,139,76,77,140,141,142,420,143,144,421,422,423,145,424,146,425,426,427,428,429,147,430,431,148,432,433,434,435,436,437,438,149,150,439,440,441,442,443,151,444,152,153,445,446,154,447,448,155,449,156,157,450,451,158,159,452,453,454,160,455,456,457,458,459,460,461,462,161,463,162,464,163,164,465,466,165,467,468,166,469,167,470,471,472,168,169,170,171,172,173,174,473,474,475,175,476,176,477,478,479,177,178,480,179,481,482,180,483,181,484,10,485,182,183,184,486,185,11,186,487,187,488,188,189,12,489,190,191,490,192,491,193,492,194,195,196,197,198,493,199,200,201,494,495,202,496,203,497,498,78,79,80,204,205,206,81,82,499,500,207,208,83,84,209,210,501,211,212,213,214,215,216,502,217,218,219,503,220,504,221,505,222,223,224,506,507,508,225,509,226,227,510,228,511,229,230,512,513,231,514,13,515,232,233,234,235,236,516,237,517,238,239,518,240,519,241,242,243,244,520,245,521,522,246,14,247,15,523,248,249,524,250,251,252,253,254,255,525,526,256,257,527,258,528,16,259,529,260,530,531,17,263,264,265,266,267,532,533,268,534,269,270,271,272,18,19,273,274,275,276,277,278,279,280,281,282,283,284,285,85,86,87,88,535,286,287,288,289,290,536,537,291,538,292,539,540,541,293,542,543,294,544,545,546,547,548,20,549,550,295,296,551,297,298,299,300,301,552,553,302,303,304,554,555,556,305,557,306,558,307,559,308,560,309,561,310,311,312,313,314,315,316,21,22,23,24,25,317,562,318,563,564,319,565,320,566,567,321,568,322,323,324,569,325,326,327,328,570,329,571,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,331,572,573,332,333,334,574,575,335,576,577,336,578,579,337,580,581,339,582,341,583,342,584,343,344,585,345,346,347,586,348,587,588,589,349,590,350,66,591,351,592,593,594,595,352,353,354,355,596,356,597,598,357,599,358,600,601,359,360,361,362,363,364,365,366,367,602,603,604,368,369,370,371,372,605,373,606,607,374,375,608,376,377,609,610,379,67,68,380,381,382,383,384,385,386,387,388,389,390,391,392,611,612,393,613,394,614,69,70,71,395,396,615,616],"tindex":"dd9efa3e-3e5e-11e6-8a6d-49284bf71c5f","method":{"position":"com.google.gson.reflect.TypeToken:295","type":"CtMethodImpl","sourcecode":"public static com.google.gson.reflect.TypeToken<?> get(java.lang.reflect.Type type) {\n    if (type instanceof java.lang.Class<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467248326266/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new com.google.gson.reflect.TypeToken<java.lang.Object>(type);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"type"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"dd9f214f-3e5e-11e6-8a6d-794ac404cc3d","method":{"position":"com.google.gson.internal.bind.TypeAdapters:233","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        return in.nextInt();\n    } catch (java.lang.NumberFormatException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:94","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.Class"},"failures":[],"tindex":"dd9f2150-3e5e-11e6-8a6d-2354b487fdd4","method":{"position":"com.google.gson.internal.$Gson$Types:303","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type context, java.lang.Class<?> contextRawType) {\n    if (context == (java.util.Properties.java.util.Properties.java.lang.Class)) {\n        return new java.lang.reflect.Type[]{ java.lang.String.java.lang.String.java.lang.Class , java.lang.String.java.lang.String.java.lang.Class };\n    } \n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.getSupertype(context, contextRawType, java.util.Map.java.util.Map.java.lang.Class);\n    if (mapType instanceof java.lang.reflect.ParameterizedType) {\n        java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(mapType));\n        return mapParameterizedType.getActualTypeArguments();\n    } \n    return new java.lang.reflect.Type[]{ java.lang.Object.java.lang.Object.java.lang.Class , java.lang.Object.java.lang.Object.java.lang.Class };\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"context"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"dd9f2151-3e5e-11e6-8a6d-371d2c677950","method":{"position":"com.google.gson.internal.bind.TypeAdapters:274","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return ((float)(in.nextDouble()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonParser:60","type":"CtBinaryOperatorImpl","sourcecode":"(!(element.isJsonNull())) && ((jsonReader.peek()) != (com.google.gson.stream.JsonToken.END_DOCUMENT))"},"failures":[],"tindex":"dd9f2152-3e5e-11e6-8a6d-b1b7ef9a3e4e","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:843","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(java.lang.Object key) {\n    if ((!(key.isJsonNull())) && ((key.peek()) != key)) {\n        {\n            return (removeInternalByKey(key)) != null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467248326266/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"com.google.gson.stream.JsonToken.END_DOCUMENT":"key","jsonReader":"key","element":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:542","type":"CtBinaryOperatorImpl","sourcecode":"replacement == null"},"failures":[116,78,79,80,204,206,81,82,208,83,13,87,303,308,320,321,323,324,328,329,38,51,53,65,371],"tindex":"dd9f2153-3e5e-11e6-8a6d-3f3b03a372eb","method":{"position":"com.google.gson.internal.bind.TypeAdapters:361","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.String value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467248326266/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            out.value(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"replacement":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"dd9f4864-3e5e-11e6-8a6d-adece080f14a","method":{"position":"com.google.gson.internal.bind.TypeAdapters:255","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        return in.nextLong();\n    } catch (java.lang.NumberFormatException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:720","type":"CtBinaryOperatorImpl","sourcecode":"json == null"},"failures":[],"tindex":"dd9f4865-3e5e-11e6-8a6d-cd40ea6c08bd","method":{"position":"com.google.gson.JsonPrimitive:273","type":"CtMethodImpl","sourcecode":"private static boolean isPrimitiveOrString(java.lang.Object target) {\n    if (target == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467248326266/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (target instanceof java.lang.String) {\n                return true;\n            } \n            java.lang.Class<?> java.lang.Class<?> = target.getClass();\n            for (java.lang.Class<?> java.lang.Class<?> : com.google.gson.JsonPrimitive.com.google.gson.JsonPrimitive.java.lang.Class<?>[]) {\n                if (standardPrimitive.isAssignableFrom(classOfPrimitive)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"target"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:76","type":"CtBinaryOperatorImpl","sourcecode":"(pendingName) != null"},"failures":[],"tindex":"dd9f4866-3e5e-11e6-8a6d-d594252ce319","method":{"position":"com.google.gson.Gson:695","type":"CtMethodImpl","sourcecode":"public <T>T fromJson(java.lang.String json, java.lang.Class<T> classOfT) throws com.google.gson.JsonSyntaxException {\n    if (json != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467248326266/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    } else {\n        {\n            java.lang.Object java.lang.Object = fromJson(json, ((java.lang.reflect.Type)(classOfT)));\n            return com.google.gson.internal.Primitives.wrap(classOfT).cast(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pendingName":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:105","type":"CtBinaryOperatorImpl","sourcecode":"o instanceof com.google.gson.JsonObject"},"failures":[],"tindex":"dd9f4867-3e5e-11e6-8a6d-a1d00fc3edfb","method":{"position":"com.google.gson.internal.bind.ObjectTypeAdapter:94","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Object value) throws java.io.IOException {\n    if (value instanceof com.google.gson.JsonObject) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467248326266/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value == null) {\n                out.nullValue();\n                return ;\n            } \n            com.google.gson.TypeAdapter<java.lang.Object> com.google.gson.TypeAdapter<java.lang.Object> = ((com.google.gson.TypeAdapter<java.lang.Object>)(com.google.gson.Gson.getAdapter(value.getClass())));\n            if (typeAdapter instanceof com.google.gson.internal.bind.ObjectTypeAdapter) {\n                out.beginObject();\n                out.endObject();\n                return ;\n            } \n            typeAdapter.write(out, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"dd9f6f78-3e5e-11e6-8a6d-c9db6a79a822","method":{"position":"com.google.gson.internal.bind.TypeAdapters:72","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Class read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } else {\n        throw new java.lang.UnsupportedOperationException(\"Attempted to deserialize a java.lang.Class. Forgot to register a type adapter?\");\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:125","type":"CtBinaryOperatorImpl","sourcecode":"element instanceof com.google.gson.JsonObject"},"failures":[],"tindex":"dd9f6f79-3e5e-11e6-8a6d-ffdeb9c7560a","method":{"position":"com.google.gson.Gson:847","type":"CtMethodImpl","sourcecode":"public <T>T fromJson(com.google.gson.JsonElement json, java.lang.Class<T> classOfT) throws com.google.gson.JsonSyntaxException {\n    if (json instanceof com.google.gson.JsonObject) {\n        {\n            java.lang.Object java.lang.Object = fromJson(json, ((java.lang.reflect.Type)(classOfT)));\n            return com.google.gson.internal.Primitives.wrap(classOfT).cast(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467248326266/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:179","type":"CtBinaryOperatorImpl","sourcecode":"a instanceof java.lang.reflect.GenericArrayType"},"failures":[],"tindex":"dd9f6f7a-3e5e-11e6-8a6d-538450653abb","method":{"position":"com.google.gson.internal.$Gson$Types:511","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object o) {\n    return (o instanceof java.lang.reflect.GenericArrayType) && (com.google.gson.internal.$Gson$Types.equals(com.google.gson.internal.$Gson$Types.GenericArrayTypeImpl.this, ((java.lang.reflect.GenericArrayType)(o))));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:414","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"dd9f6f7b-3e5e-11e6-8a6d-a54406a1092f","method":{"position":"com.google.gson.stream.JsonReader:1448","type":"CtMethodImpl","sourcecode":"private boolean skipTo(java.lang.String toFind) throws java.io.IOException {\n    if (toFind == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467248326266/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            outer : for ( ; (((int) + (toFind.length())) <= (int)) || (fillBuffer(toFind.length())) ; (int)++) {\n                if ((char[][int]) == '\\n') {\n                    (int)++;\n                    int = (int) + 1;\n                    continue;\n                } \n                for (int int = 0 ; c < (toFind.length()) ; c++) {\n                    if ((char[][((int) + c)]) != (toFind.charAt(c))) {\n                        continue outer;\n                    } \n                }\n                return true;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"toFind"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":23,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}