{"failureDictionary":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":11,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":100,"com.google.gson.functional.StringTest.testStringValueDeserialization":98,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":197,"com.google.gson.functional.PrimitiveTest.testBigIntegerDeserialization":435,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullDeserialization":297,"com.google.gson.functional.PrimitiveTest.testBigDecimalNaNDeserializationNotSupported":396,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":238,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":378,"com.google.gson.MixedStreamTest.testWriteLenient":33,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":246,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":344,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":306,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":326,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":198,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":215,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":342,"com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization":444,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":233,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":334,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":136,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerDeserialization":405,"com.google.gson.JsonObjectTest.testAddingNullPropertyValue":25,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":146,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":579,"com.google.gson.functional.ObjectTest.testSingletonLists":340,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":298,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":337,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":101,"com.google.gson.functional.PrimitiveTest.testNumberDeserialization":389,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator":518,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":538,"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":220,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization":316,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":357,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":39,"com.google.gson.functional.PrimitiveTest.testStringsAsBooleans":447,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":125,"com.google.gson.functional.StringTest.testEscapedBackslashInStringDeserialization":114,"com.google.gson.DefaultDateTypeAdapterTest.testDatePattern":608,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":116,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":90,"com.google.gson.functional.PrimitiveTest.testBigDecimalNoFractAsStringRepresentationDeserialization":436,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":179,"com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization":381,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":604,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":3,"com.google.gson.functional.MapTest.testMapOfMapDeserialization":178,"com.google.gson.functional.EnumTest.testEnumCaseMapping":232,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":44,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":99,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsLong":380,"com.google.gson.functional.JsonTreeTest.testToJsonTree":551,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":95,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveDeserialization":318,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":534,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":154,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":272,"com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization":76,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferDeserialization":290,"com.google.gson.functional.PrimitiveTest.testUnquotedStringDeserializationFails":391,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":582,"com.google.gson.internal.LinkedTreeMapTest.testLargeSetOfRandomKeys":18,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":208,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":544,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringDeserialization":111,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":353,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization":457,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsBigIntegerFails":397,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":358,"com.google.gson.internal.LinkedTreeMapTest.testContainsNonComparableKeyReturnsFalse":19,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":2,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":502,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":366,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":134,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectDeserialization":262,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":319,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionDeserialization":462,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":569,"com.google.gson.functional.PrimitiveTest.testDoubleInfinityDeserialization":461,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization":315,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":441,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":420,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArrayDeserialization":271,"com.google.gson.functional.PrimitiveTest.testFloatInfinityDeserialization":468,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":72,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":369,"com.google.gson.DefaultDateTypeAdapterTest.testFormatUsesDefaultTimezone":611,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":296,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityDeserialization":418,"com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization":171,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":247,"com.google.gson.functional.PrimitiveTest.testDoubleNoFractAsStringRepresentationDeserialization":433,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":561,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountryVariant":287,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":597,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":504,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":193,"com.google.gson.functional.JsonParserTest.testParseInvalidJson":253,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":442,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsDouble":434,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":66,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":365,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":47,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":49,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":348,"com.google.gson.functional.MapTest.testMapDeserializationWithNullValue":189,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":245,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":401,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":338,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":525,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":144,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":55,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":506,"com.google.gson.functional.MapTest.testNumberKeyDeserialization":195,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings":535,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":121,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":304,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":52,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":289,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":501,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":547,"com.google.gson.functional.CollectionTest.testSetDeserialization":214,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":137,"com.google.gson.functional.EnumTest.testEnumSet":223,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersEscapedDeserialization":235,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":352,"com.google.gson.functional.PrimitiveTest.testBigDecimalAsStringRepresentationDeserialization":425,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":145,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":505,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":166,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampDeserialization":277,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":359,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":17,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":143,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBytePrimitive":438,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":54,"com.google.gson.functional.PrimitiveTest.testDeserializingDecimalPointValueZeroSucceeds":449,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":0,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":542,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":450,"com.google.gson.functional.MapTest.testHashMapDeserialization":160,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsIntegerFails":394,"com.google.gson.functional.CollectionTest.testLinkedListDeserialization":204,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesDeserialization":302,"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":50,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization":482,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":10,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":552,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":541,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":593,"com.google.gson.functional.MapTest.testSortedMap":182,"com.google.gson.functional.MapTest.testMapSerialization":177,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":12,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":119,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedDeserialization":431,"com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization":79,"com.google.gson.functional.MapTest.testSerializeMaps":163,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":324,"com.google.gson.functional.MapTest.testComplexKeysSerialization":190,"com.google.gson.functional.InternationalizationTest.testStringsWithRawChineseCharactersDeserialization":234,"com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader":194,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":86,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":230,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":546,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":591,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":564,"com.google.gson.functional.EnumTest.testTopLevelEnumDeserialization":228,"com.google.gson.JsonObjectTest.testAddingAndRemovingObjectProperties":26,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":93,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":240,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsDeserialization":368,"com.google.gson.functional.MapTest.testStringKeyDeserialization":192,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsDeserialization":83,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":510,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":464,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":196,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesDeserialization":400,"com.google.gson.functional.PrettyPrintingTest.testMap":91,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigInteger":395,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":573,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":201,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":267,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":483,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls":539,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":38,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysDeserialization":85,"com.google.gson.functional.StringTest.testStringWithEscapedSlashDeserialization":104,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":108,"com.google.gson.JsonObjectTest.testAddingBooleanProperties":27,"com.google.gson.functional.MapTest.testMapSerializationEmpty":191,"com.google.gson.functional.CollectionTest.testQueueSerialization":205,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":284,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsByteWrapper":426,"com.google.gson.functional.MapTest.testMapOfMapSerialization":176,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":417,"com.google.gson.JavaSerializationTest.testMapIsSerializable":42,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountry":292,"com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization":211,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":428,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":480,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":519,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":102,"com.google.gson.functional.FieldNamingTest.testIdentity":325,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":507,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":492,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":370,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":21,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":244,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":328,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":339,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalDeserialization":383,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":605,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":103,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":498,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":255,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization":423,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeDeserialization":308,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":600,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidDeserialization":279,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":286,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullJsonElementSerialization":317,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":479,"com.google.gson.functional.MapTest.testMapDeserializationEmpty":157,"com.google.gson.functional.MapTest.testMapSubclassSerialization":162,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":460,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":153,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":332,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersDeserialization":237,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":31,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":123,"com.google.gson.functional.PrimitiveTest.testBigDecimalDeserialization":415,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":574,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":248,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguage":266,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsLongPrimitive":475,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":537,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":142,"com.google.gson.functional.EnumTest.testEnumSubclass":226,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization":437,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":40,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":355,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization":382,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":497,"com.google.gson.functional.PrimitiveTest.testFloatNaNDeserialization":443,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":509,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":559,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsLongWrapper":385,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":257,"com.google.gson.functional.PrimitiveTest.testBigDecimalNegativeInfinityDeserializationNotSupported":421,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":256,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":523,"com.google.gson.functional.ArrayTest.testArrayOfNullDeserialization":75,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":599,"com.google.gson.functional.ObjectTest.testTruncatedDeserialization":351,"com.google.gson.functional.PrimitiveTest.testBigDecimalInfinityDeserializationNotSupported":427,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":243,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization":419,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":311,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":341,"com.google.gson.functional.MapTest.testMapSubclassDeserialization":159,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":74,"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":251,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":68,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":139,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":545,"com.google.gson.CommentsTest.testParseComments":598,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":343,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":514,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":585,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":81,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigDecimal":440,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":488,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":118,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":106,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":181,"com.google.gson.MixedStreamTest.testReadInvalidState":30,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":133,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":151,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":313,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":459,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":6,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":393,"com.google.gson.functional.ArrayTest.testArrayOfStringsDeserialization":87,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":485,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":410,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":478,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":294,"com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization":454,"com.google.gson.functional.ArrayTest.testEmptyArrayDeserialization":71,"com.google.gson.functional.MapTest.testMapDeserialization":169,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":288,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":96,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":158,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":578,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":168,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":532,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":584,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":580,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":565,"com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization":227,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":550,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":264,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization":356,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":371,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":554,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":575,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":524,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":273,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":150,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":254,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":563,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":92,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":180,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":601,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":9,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigDecimal":379,"com.google.gson.functional.PrimitiveTest.testShortSerialization":458,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":516,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":587,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedDeserialization":446,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":59,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedDeserialization":416,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":445,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":278,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsBigDecimal":392,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":321,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":225,"com.google.gson.internal.LinkedTreeMapTest.testEmptyStringValues":20,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":200,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":331,"com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues":164,"com.google.gson.functional.PrimitiveTest.testLargeDoubleDeserialization":409,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":221,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":466,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":249,"com.google.gson.DefaultDateTypeAdapterTest.testFormattingInFr":610,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization":305,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":592,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":37,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization":473,"com.google.gson.functional.PrimitiveTest.testDeserializingNonZeroDecimalPointValuesAsIntegerFails":467,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":242,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":372,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":508,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":531,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":124,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":259,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":452,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":89,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsDoublePrimitive":422,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":511,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":376,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":347,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":231,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":236,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":556,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":209,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":274,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":572,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives":512,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":577,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":295,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":586,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsInt":399,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":281,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":596,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":588,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization":300,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization":202,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":528,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsShortWrapper":386,"com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral":453,"com.google.gson.functional.PrimitiveTest.testNumberSerialization":424,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":470,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":60,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":224,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":583,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":484,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":120,"com.google.gson.functional.MapTest.testGeneralMapField":186,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":345,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":65,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsShortPrimitive":472,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":15,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":80,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":499,"com.google.gson.DefaultDateTypeAdapterTest.testDateSerialization":607,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":307,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":184,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":260,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":390,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":568,"com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization":448,"com.google.gson.ObjectTypeAdapterTest.testDeserializeNullValue":22,"com.google.gson.MixedStreamTest.testReadMixedStreamed":36,"com.google.gson.functional.MapTest.testBooleanKeyDeserialization":172,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlDeserialization":275,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":411,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":216,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":595,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":606,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":336,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBooleanPrimitive":429,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":58,"com.google.gson.JavaSerializationTest.testNumberIsSerializable":41,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":53,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":293,"com.google.gson.functional.MapTest.testDeerializeMapOfMaps":173,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":156,"com.google.gson.functional.MapTest.testMapDeserializationWithNullKey":161,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":471,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":515,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":5,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":128,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsFloatPrimitive":412,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":291,"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":252,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":493,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionDeserilaization":210,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserialization":258,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization":590,"com.google.gson.functional.ObjectTest.testNestedDeserialization":377,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":521,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":117,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":363,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":13,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":522,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":57,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsNumber":469,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":487,"com.google.gson.functional.StringTest.testSingleQuoteInStringDeserialization":105,"com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys":174,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":239,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":141,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":456,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":555,"com.google.gson.JavaSerializationTest.testListIsSerializable":43,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":250,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":330,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":219,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":558,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization":155,"com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey":165,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":185,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":384,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization":77,"com.google.gson.functional.MapTest.testInterfaceTypeMap":183,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":16,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":527,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsDoubleWrapper":387,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":229,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":562,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails":576,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":261,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":1,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsInteger":403,"com.google.gson.MixedStreamTest.testWriteClosed":35,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":14,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":207,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateDeserialization":320,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":346,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":530,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":147,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":526,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":490,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":374,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":486,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":314,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":349,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":533,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":206,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":129,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBooleanWrapper":432,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":131,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":560,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":212,"com.google.gson.DefaultDateTypeAdapterTest.testFormattingInEnUs":609,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":301,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":494,"com.google.gson.functional.PrimitiveTest.testDoubleAsStringRepresentationDeserialization":474,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":476,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":408,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":549,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderDeserialization":269,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":62,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":548,"com.google.gson.functional.CollectionTest.testQueueDeserialization":222,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":489,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":414,"com.google.gson.functional.PrimitiveTest.testByteDeserialization":430,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringDeserialization":110,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization":481,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":130,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":312,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":170,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":367,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":283,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":375,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":570,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":199,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":29,"com.google.gson.functional.MapTest.testRawMapSerialization":188,"com.google.gson.functional.CollectionTest.testNullsInListDeserialization":217,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetDeserialization":299,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":361,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":553,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":122,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":589,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":23,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":67,"com.google.gson.functional.PrimitiveTest.testByteSerialization":455,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":536,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapNoTypeSerialization":602,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":566,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsFloatWrapper":398,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":327,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":78,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":322,"com.google.gson.functional.StringTest.testAssignmentCharDeserialization":107,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":148,"com.google.gson.GsonTypeAdapterTest.testDefaultTypeAdapterThrowsParseException":603,"com.google.gson.functional.MapTest.testMapWithQuotes":175,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":268,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatDeserialization":406,"com.google.gson.functional.StringTest.testEscapingQuotesInStringDeserialization":109,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":503,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":594,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":520,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":8,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsNumber":463,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":265,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":135,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":581,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":138,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":373,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":97,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":280,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":439,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":84,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":350,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":309,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":270,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":127,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":282,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":329,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigInteger":451,"com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed":213,"com.google.gson.functional.ArrayTest.testSingleStringArrayDeserialization":70,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":63,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":140,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":310,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":557,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":495,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization":132,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":333,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReader":540,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":152,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsFloat":388,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":517,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":360,"com.google.gson.JsonObjectTest.testAddingStringProperties":28,"com.google.gson.functional.ObjectTest.testNestedSerialization":362,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":61,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringDeserialization":113,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":402,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":567,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":4,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":187,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":7,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":88,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":34,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":46,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":354,"com.google.gson.functional.UncategorizedTest.testTrailingWhitespace":491,"com.google.gson.functional.PrimitiveTest.testBooleanDeserialization":465,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":529,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":335,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":285,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":45,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsInteger":404,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":263,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":364,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":126,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":112,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":73,"com.google.gson.functional.CollectionTest.testSetSerialization":218,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":500,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":94,"com.google.gson.functional.StringTest.testStringValueSerialization":115,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":513,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":571,"com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization":203,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":241,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":477,"com.google.gson.MixedStreamTest.testWriteInvalidState":32,"com.google.gson.functional.ArrayTest.testInvalidArrayDeserialization":64,"com.google.gson.functional.PrimitiveTest.testBadValueForBigIntegerDeserialization":407,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":82,"com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero":413,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":48,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":276,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":323,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":543,"com.google.gson.JsonObjectTest.testAddingCharacterProperties":24,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":496,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":56,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":149,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullSerialization":303,"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":167,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType":51,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":69},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:192","type":"CtInvocationImpl"},"failures":[],"tindex":"59e1f67a-3f16-11e6-9d57-3d4250cde22b","method":{"position":"com.google.gson.internal.$Gson$Types:65","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type componentType) {\n    return new com.google.gson.internal.$Gson$Types.GenericArrayTypeImpl(componentType);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"componentType","to":"componentType"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:138","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"59e26bab-3f16-11e6-9d57-b176a078b069","method":{"position":"com.google.gson.internal.LinkedTreeMap:276","type":"CtMethodImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V> removeInternalByKey(java.lang.Object key) {\n    com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = findByObject(key);\n    if (node != null) {\n        removeInternal(node, true);\n    } \n    return node;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"expected":"key","this":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:431","type":"CtBinaryOperatorImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"tindex":"59e26bac-3f16-11e6-9d57-73b853561d6b","method":{"position":"com.google.gson.Gson:422","type":"CtMethodImpl","sourcecode":"public <T>com.google.gson.TypeAdapter<T> getDelegateAdapter(com.google.gson.TypeAdapterFactory skipPast, com.google.gson.reflect.TypeToken<T> type) {\n    if (skipPast == skipPast) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467327290709/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (skipPast == skipPast) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467327290709/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    boolean boolean = false;\n                    if (!(java.util.List<com.google.gson.TypeAdapterFactory>.contains(skipPast)))\n                        skipPastFound = true;\n                    \n                    for (com.google.gson.TypeAdapterFactory com.google.gson.TypeAdapterFactory : java.util.List<com.google.gson.TypeAdapterFactory>) {\n                        if (!skipPastFound) {\n                            if (factory == skipPast) {\n                                skipPastFound = true;\n                            } \n                            continue;\n                        } \n                        com.google.gson.TypeAdapter<T> com.google.gson.TypeAdapter<T> = factory.create(com.google.gson.Gson.this, type);\n                        if (candidate != null) {\n                            return candidate;\n                        } \n                    }\n                    throw new java.lang.IllegalArgumentException((\"GSON cannot serialize \" + type));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"skipPast","skipPast":"skipPast"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:113","type":"CtInvocationImpl"},"failures":[],"tindex":"59e292bd-3f16-11e6-9d57-7b525149e972","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:75","type":"CtMethodImpl","sourcecode":"private void put(com.google.gson.JsonElement value) {\n    if (value.isBoolean()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467327290709/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((java.lang.String) != null) {\n                if ((!(value.isJsonNull())) || (getSerializeNulls())) {\n                    com.google.gson.JsonObject com.google.gson.JsonObject = ((com.google.gson.JsonObject)(peek()));\n                    object.add(java.lang.String, value);\n                } \n                java.lang.String = null;\n            } else if (java.util.List<com.google.gson.JsonElement>.isEmpty()) {\n                com.google.gson.JsonElement = value;\n            } else {\n                com.google.gson.JsonElement com.google.gson.JsonElement = peek();\n                if (element instanceof com.google.gson.JsonArray) {\n                    ((com.google.gson.JsonArray)(element)).add(value);\n                } else {\n                    throw new java.lang.IllegalStateException();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"primitive":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.internal.$Gson$Types:332","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"59e292be-3f16-11e6-9d57-1f7a64d76c46","method":{"position":"com.google.gson.Gson:719","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic <T>T fromJson(java.lang.String json, java.lang.reflect.Type typeOfT) throws com.google.gson.JsonSyntaxException {\n    if ((typeOfT instanceof java.lang.Class) && (((java.lang.Class<?>)(toResolve)).isArray())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467327290709/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    } else {\n        {\n            if (json == null) {\n                return null;\n            } \n            java.io.StringReader java.io.StringReader = new java.io.StringReader(json);\n            T T = ((T)(fromJson(reader, typeOfT)));\n            return target;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"typeOfT"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.internal.$Gson$Types:309","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"59e292bf-3f16-11e6-9d57-e5e55bcb20f7","method":{"position":"com.google.gson.Gson:576","type":"CtMethodImpl","sourcecode":"public void toJson(java.lang.Object src, java.lang.reflect.Type typeOfSrc, java.lang.Appendable writer) throws com.google.gson.JsonIOException {\n    if (src == typeOfSrc) {\n        {\n            try {\n                com.google.gson.stream.JsonWriter com.google.gson.stream.JsonWriter = newJsonWriter(com.google.gson.internal.Streams.writerForAppendable(writer));\n                toJson(src, typeOfSrc, jsonWriter);\n            } catch (java.io.IOException e) {\n                throw new com.google.gson.JsonIOException(e);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467327290709/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.util.Properties.class":"typeOfSrc","context":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:192","type":"CtInvocationImpl"},"failures":[],"tindex":"59e2b9d0-3f16-11e6-9d57-6362a6d04cf6","method":{"position":"com.google.gson.internal.$Gson$Types:65","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type componentType) {\n    return new com.google.gson.internal.$Gson$Types.GenericArrayTypeImpl(componentType);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"componentType","to":"componentType"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:431","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"59e2b9d1-3f16-11e6-9d57-67c8e542af50","method":{"position":"com.google.gson.Gson:422","type":"CtMethodImpl","sourcecode":"public <T>com.google.gson.TypeAdapter<T> getDelegateAdapter(com.google.gson.TypeAdapterFactory skipPast, com.google.gson.reflect.TypeToken<T> type) {\n    if (skipPast == skipPast) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467327290709/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (skipPast == skipPast) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467327290709/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    boolean boolean = false;\n                    if (!(java.util.List<com.google.gson.TypeAdapterFactory>.contains(skipPast)))\n                        skipPastFound = true;\n                    \n                    for (com.google.gson.TypeAdapterFactory com.google.gson.TypeAdapterFactory : java.util.List<com.google.gson.TypeAdapterFactory>) {\n                        if (!skipPastFound) {\n                            if (factory == skipPast) {\n                                skipPastFound = true;\n                            } \n                            continue;\n                        } \n                        com.google.gson.TypeAdapter<T> com.google.gson.TypeAdapter<T> = factory.create(com.google.gson.Gson.this, type);\n                        if (candidate != null) {\n                            return candidate;\n                        } \n                    }\n                    throw new java.lang.IllegalArgumentException((\"GSON cannot serialize \" + type));\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"skipPast","skipPast":"skipPast"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:380","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"59e2b9d2-3f16-11e6-9d57-4911a8bf7618","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:677","type":"CtMethodImpl","sourcecode":"void reset(int targetSize) {\n    if (targetSize == targetSize) {\n        {\n            int int = ((java.lang.Integer.highestOneBit(targetSize)) * 2) - 1;\n            int = treeCapacity - targetSize;\n            int = 0;\n            int = 0;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467327290709/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"targetSize","com.google.gson.stream.JsonReader.PEEKED_NONE":"targetSize"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:491","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"59e2e0e3-3f16-11e6-9d57-8d13915ecaea","method":{"position":"com.google.gson.internal.bind.TypeAdapters:282","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467327290709/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            out.value(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonObject:54","type":"CtBinaryOperatorImpl"},"failures":[18,19,20,21,22,23,24,25,26,27,28],"tindex":"59e2e0e4-3f16-11e6-9d57-e9d599eb9fc6","method":{"position":"com.google.gson.internal.LinkedTreeMap:86","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(java.lang.Object key) {\n    if (key == null) {\n        {\n            return (findByObject(key)) != null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467327290709/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:789","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"59e2e0e5-3f16-11e6-9d57-a9399db7eb30","method":{"position":"com.google.gson.GsonBuilder:551","type":"CtMethodImpl","sourcecode":"private void addTypeAdaptersForDate(java.lang.String datePattern, int dateStyle, int timeStyle, java.util.List<com.google.gson.TypeAdapterFactory> factories) {\n    if (timeStyle == timeStyle) {\n        {\n            com.google.gson.DefaultDateTypeAdapter com.google.gson.DefaultDateTypeAdapter;\n            if ((datePattern != null) && (!(\"\".equals(datePattern.trim())))) {\n                dateTypeAdapter = new com.google.gson.DefaultDateTypeAdapter(datePattern);\n            } else if ((dateStyle != (java.text.DateFormat.java.text.DateFormat.int)) && (timeStyle != (java.text.DateFormat.java.text.DateFormat.int))) {\n                dateTypeAdapter = new com.google.gson.DefaultDateTypeAdapter(dateStyle , timeStyle);\n            } else {\n                return ;\n            }\n            factories.add(com.google.gson.TreeTypeAdapter.newFactory(com.google.gson.reflect.TypeToken.get(java.util.Date.java.util.Date.java.lang.Class), dateTypeAdapter));\n            factories.add(com.google.gson.TreeTypeAdapter.newFactory(com.google.gson.reflect.TypeToken.get(java.sql.Timestamp.java.sql.Timestamp.java.lang.Class), dateTypeAdapter));\n            factories.add(com.google.gson.TreeTypeAdapter.newFactory(com.google.gson.reflect.TypeToken.get(java.sql.Date.java.sql.Date.java.lang.Class), dateTypeAdapter));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467327290709/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"timeStyle","com.google.gson.stream.JsonReader.PEEKED_NONE":"timeStyle"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:350","type":"CtBinaryOperatorImpl"},"failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,0,56,1,2,57,3,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,4,5,118,119,6,120,7,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,8,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,9,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,10,481,11,12,482,13,483,14,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,21,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,15,573,16,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,23,601,602,603,17,604,605,606],"tindex":"59e307f6-3f16-11e6-9d57-39729e499983","method":{"position":"com.google.gson.Gson:881","type":"CtMethodImpl","sourcecode":"public void setDelegate(com.google.gson.TypeAdapter<T> typeAdapter) {\n    if (typeAdapter != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467327290709/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((com.google.gson.TypeAdapter<T>) != null) {\n                throw new java.lang.AssertionError();\n            } \n            com.google.gson.TypeAdapter<T> = typeAdapter;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ongoingCall":"typeAdapter"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:386","type":"CtBinaryOperatorImpl"},"failures":[582],"tindex":"59e32f07-3f16-11e6-9d57-1bc328398f32","method":{"position":"com.google.gson.Gson:468","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement toJsonTree(java.lang.Object src) {\n    if (src == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467327290709/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (src == null) {\n                return com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull;\n            } \n            return toJsonTree(src, src.getClass());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"src"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.DefaultDateTypeAdapter:83","type":"CtBinaryOperatorImpl"},"failures":[607,608,609,610,611,260,270,272,306,310,9],"tindex":"59e32f08-3f16-11e6-9d57-c7344a7f2d6a","method":{"position":"com.google.gson.DefaultDateTypeAdapter:70","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement serialize(java.util.Date src, java.lang.reflect.Type typeOfSrc, com.google.gson.JsonSerializationContext context) {\n    if (typeOfSrc == typeOfSrc) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467327290709/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.text.DateFormat) {\n                java.lang.String java.lang.String = java.text.DateFormat.format(src);\n                return new com.google.gson.JsonPrimitive(dateFormatAsString);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeOfT":"typeOfSrc","java.util.Date.class":"typeOfSrc"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1}],"header":{"groupId":"com.google.code.gson","transformationCount":15,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}