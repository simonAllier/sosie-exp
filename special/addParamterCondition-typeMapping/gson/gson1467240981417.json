{"failureDictionary":{"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":37,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":132,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":73,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":162,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":175,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":84,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":15,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":113,"com.google.gson.MixedStreamTest.testWriteLenient":234,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":225,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":11,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":52,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":38,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":40,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":48,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":170,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":148,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":115,"com.google.gson.functional.ObjectTest.testSingletonLists":118,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":203,"com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue":5,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":7,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":153,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":130,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeRecursive":159,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":219,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":59,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":134,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":160,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":14,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":33,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":46,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":93,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":97,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":236,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":205,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":98,"com.google.gson.functional.JsonTreeTest.testToJsonTree":210,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":165,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":106,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":110,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":29,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullField":156,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":63,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":10,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":95,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":45,"com.google.gson.functional.MapTest.testGeneralMapField":78,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":185,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":136,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":193,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":216,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":76,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":90,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":87,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":112,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":49,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":146,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":91,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullObject":157,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":214,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":116,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":128,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":189,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":182,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":221,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":36,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":179,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":206,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":62,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":82,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":100,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":199,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":127,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":6,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":224,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":18,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":20,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":103,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":23,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":55,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":51,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":35,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":215,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":77,"com.google.gson.functional.MapTest.testInterfaceTypeMap":75,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":86,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":105,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":149,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":13,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":152,"com.google.gson.functional.EnumTest.testEnumSet":9,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":122,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":24,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":57,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":67,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":124,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":0,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":22,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":8,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":44,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":120,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":25,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":104,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":202,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":131,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":198,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":30,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":174,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":204,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":218,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":109,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":121,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":43,"com.google.gson.functional.MapTest.testMapSerialization":72,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":176,"com.google.gson.functional.MapTest.testSerializeMaps":66,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":228,"com.google.gson.functional.MapTest.testComplexKeysSerialization":81,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":222,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":47,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":196,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":140,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":138,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":99,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":207,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":139,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":183,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":201,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":163,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":16,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":69,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":92,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":39,"com.google.gson.functional.MapTest.testRawMapSerialization":80,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":232,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":83,"com.google.gson.functional.PrettyPrintingTest.testMap":161,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize":154,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":31,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":41,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":125,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":177,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeMap":158,"com.google.gson.functional.CollectionTest.testQueueSerialization":42,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":213,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":1,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":186,"com.google.gson.ObjectTypeAdapterTest.testSerialize":4,"com.google.gson.functional.MapTest.testMapOfMapSerialization":71,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":88,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":53,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":144,"com.google.gson.functional.FieldNamingTest.testIdentity":229,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":192,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":226,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":26,"com.google.gson.functional.MapTest.testMapWithQuotes":70,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":178,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":17,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":117,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":209,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":56,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":173,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":147,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":3,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":143,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":19,"com.google.gson.functional.MapTest.testMapSubclassSerialization":65,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":167,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":171,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":195,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":150,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":233,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":217,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":21,"com.google.gson.functional.EnumTest.testEnumSubclass":12,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":212,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":85,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":54,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":220,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":58,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":184,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":34,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":180,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":133,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":172,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":101,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize2dArray":151,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":2,"com.google.gson.functional.ObjectTest.testNestedSerialization":126,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":64,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":89,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":111,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":181,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":79,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":169,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":211,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":191,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":235,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":187,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":123,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":137,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":61,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":119,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":107,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":200,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":74,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":230,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":237,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize1dArray":155,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":145,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":28,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":114,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":190,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":168,"com.google.gson.functional.CollectionTest.testSetSerialization":50,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":60,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":164,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":231,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":141,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":197,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":142,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":194,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":223,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":227,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":135,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":166,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":68,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":108,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":96,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":94,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":208,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":27,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":129,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":32,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":102,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":188},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:293","type":"CtBinaryOperatorImpl","sourcecode":"collectionType instanceof java.lang.reflect.ParameterizedType"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237],"tindex":"b27cd1fa-3e4c-11e6-b14d-815551235dd3","method":{"position":"com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:74","type":"CtMethodImpl","sourcecode":"private java.lang.reflect.Type getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type type, java.lang.Object value) {\n    if (value instanceof java.lang.reflect.ParameterizedType) {\n        {\n            if ((value != null) && (((type == (java.lang.Object.java.lang.Object.java.lang.Class)) || (type instanceof java.lang.reflect.TypeVariable<?>)) || (type instanceof java.lang.Class<?>))) {\n                type = value.getClass();\n            } \n            return type;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467240816853/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collectionType":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"b27d472b-3e4c-11e6-b14d-2dcaa4a41662","method":{"position":"com.google.gson.internal.bind.TimeTypeAdapter:50","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized java.sql.Time read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        java.util.Date java.util.Date = java.text.DateFormat.parse(in.nextString());\n        return new java.sql.Time(date.getTime());\n    } catch (java.text.ParseException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"b27d472c-3e4c-11e6-b14d-377434166593","method":{"position":"com.google.gson.JsonParser:80","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader json) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException {\n    boolean boolean = json.isLenient();\n    json.setLenient(true);\n    try {\n        return com.google.gson.internal.Streams.parse(json);\n    } catch (java.lang.StackOverflowError e) {\n        throw new com.google.gson.JsonParseException(((\"Failed parsing JSON source: \" + json) + \" to Json\") , e);\n    } catch (java.lang.OutOfMemoryError e) {\n        throw new com.google.gson.JsonParseException(((\"Failed parsing JSON source: \" + json) + \" to Json\") , e);\n    } finally {\n        json.setLenient(lenient);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1291","type":"CtBinaryOperatorImpl","sourcecode":"(limit) != (pos)"},"failures":[],"tindex":"b27d6e3d-3e4c-11e6-b14d-8d10bc8b1c4f","method":{"position":"com.google.gson.stream.JsonReader:1268","type":"CtMethodImpl","sourcecode":"private void push(int newTop) {\n    if (newTop != newTop) {\n        {\n            if ((int) == (int[].int)) {\n                int[] int[] = new int[(int) * 2];\n                int[] int[] = new int[(int) * 2];\n                java.lang.String[] java.lang.String[] = new java.lang.String[(int) * 2];\n                java.lang.System.arraycopy(int[], 0, newStack, 0, int);\n                java.lang.System.arraycopy(int[], 0, newPathIndices, 0, int);\n                java.lang.System.arraycopy(java.lang.String[], 0, newPathNames, 0, int);\n                int[] = newStack;\n                int[] = newPathIndices;\n                java.lang.String[] = newPathNames;\n            } \n            int[][((int)++)] = newTop;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467240816853/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pos":"newTop","limit":"newTop"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:364","type":"CtBinaryOperatorImpl","sourcecode":"p == (com.google.gson.stream.JsonReader.PEEKED_END_ARRAY)"},"failures":[],"tindex":"b27d6e3e-3e4c-11e6-b14d-019df7a28523","method":{"position":"com.google.gson.JsonArray:105","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement remove(int index) {\n    if (index == index) {\n        {\n            return java.util.List<com.google.gson.JsonElement>.remove(index);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467240816853/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"index","com.google.gson.stream.JsonReader.PEEKED_END_ARRAY":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:581","type":"CtBinaryOperatorImpl","sourcecode":"context == (com.google.gson.stream.JsonScope.NONEMPTY_OBJECT)"},"failures":[],"tindex":"b27d6e3f-3e4c-11e6-b14d-f390b651580e","method":{"position":"com.google.gson.GsonBuilder:402","type":"CtMethodImpl","sourcecode":"public com.google.gson.GsonBuilder setDateFormat(int style) {\n    if (style == style) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467240816853/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.GsonBuilder.this.int = style;\n            com.google.gson.GsonBuilder.this.java.lang.String = null;\n            return com.google.gson.GsonBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"context":"style","com.google.gson.stream.JsonScope.NONEMPTY_OBJECT":"style"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:176","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"b27d9550-3e4c-11e6-b14d-5b8fd4d4b0a9","method":{"position":"com.google.gson.Gson:261","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        {\n            if (value == null) {\n                out.nullValue();\n                return ;\n            } \n            double double = value.doubleValue();\n            checkValidFloatingPoint(doubleValue);\n            out.value(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467240816853/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.reflect.TypeToken:123","type":"CtBinaryOperatorImpl","sourcecode":"from == null"},"failures":[],"tindex":"b27d9551-3e4c-11e6-b14d-8ff3c1a5f8ce","method":{"position":"com.google.gson.Gson:801","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic <T>T fromJson(com.google.gson.stream.JsonReader reader, java.lang.reflect.Type typeOfT) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException {\n    if (typeOfT == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467240816853/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    } else {\n        {\n            boolean boolean = true;\n            boolean boolean = reader.isLenient();\n            reader.setLenient(true);\n            try {\n                reader.peek();\n                isEmpty = false;\n                com.google.gson.reflect.TypeToken<T> com.google.gson.reflect.TypeToken<T> = ((com.google.gson.reflect.TypeToken<T>)(com.google.gson.reflect.TypeToken.get(typeOfT)));\n                com.google.gson.TypeAdapter<T> com.google.gson.TypeAdapter<T> = getAdapter(typeToken);\n                T T = typeAdapter.read(reader);\n                return object;\n            } catch (java.io.EOFException e) {\n                if (isEmpty) {\n                    return null;\n                } \n                throw new com.google.gson.JsonSyntaxException(e);\n            } catch (java.lang.IllegalStateException e) {\n                throw new com.google.gson.JsonSyntaxException(e);\n            } catch (java.io.IOException e) {\n                throw new com.google.gson.JsonSyntaxException(e);\n            } finally {\n                reader.setLenient(oldLenient);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"typeOfT"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":8,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}