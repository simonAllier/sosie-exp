{"failureDictionary":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":126,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":215,"com.google.gson.functional.StringTest.testStringValueDeserialization":627,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":53,"com.google.gson.functional.PrimitiveTest.testBigIntegerDeserialization":467,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullDeserialization":673,"com.google.gson.functional.PrimitiveTest.testBigDecimalNaNDeserializationNotSupported":434,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":12,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":514,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":167,"com.google.gson.MixedStreamTest.testWriteLenient":296,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":492,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":608,"com.google.gson.ExposeAnnotationExclusionStrategyTest.testNeverSkipClasses":646,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":40,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":35,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":38,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":491,"com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization":472,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":209,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":341,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":107,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerDeserialization":442,"com.google.gson.JsonObjectTest.testAddingNullPropertyValue":687,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":347,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":410,"com.google.gson.functional.ObjectTest.testSingletonLists":78,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":140,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":602,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":216,"com.google.gson.functional.PrimitiveTest.testNumberDeserialization":429,"com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue":321,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator":378,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":9,"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":364,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization":615,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":501,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":235,"com.google.gson.functional.PrimitiveTest.testStringsAsBooleans":474,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeRecursive":115,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":620,"com.google.gson.functional.StringTest.testEscapedBackslashInStringDeserialization":635,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":94,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":285,"com.google.gson.functional.PrimitiveTest.testBigDecimalNoFractAsStringRepresentationDeserialization":468,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":396,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":318,"com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization":422,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":530,"com.google.gson.functional.MapTest.testMapOfMapDeserialization":395,"com.google.gson.functional.EnumTest.testEnumCaseMapping":340,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":214,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":641,"com.google.gson.functional.JsonTreeTest.testToJsonTree":147,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsLong":421,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":288,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveDeserialization":301,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":76,"com.google.gson.JsonObjectTest.testEqualsNonEmptyObject":1,"com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreBehindInVersion":645,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":26,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":584,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullField":113,"com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization":557,"com.google.gson.functional.PrimitiveTest.testUnquotedStringDeserializationFails":430,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferDeserialization":599,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":412,"com.google.gson.internal.LinkedTreeMapTest.testLargeSetOfRandomKeys":678,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":182,"com.google.gson.functional.ObjectTest.testNullDeserialization":672,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":96,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringDeserialization":633,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":498,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization":273,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":656,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsBigIntegerFails":435,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":502,"com.google.gson.internal.LinkedTreeMapTest.testContainsNonComparableKeyReturnsFalse":679,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":528,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":56,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":506,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":655,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":281,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectDeserialization":2,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":617,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":58,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionDeserialization":481,"com.google.gson.functional.PrimitiveTest.testDoubleInfinityDeserialization":480,"com.google.gson.JsonParserTest.testParseString":685,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization":614,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullObject":114,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":265,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":455,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArrayDeserialization":300,"com.google.gson.functional.PrimitiveTest.testFloatInfinityDeserialization":485,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":88,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":205,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":240,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityDeserialization":454,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":168,"com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization":391,"com.google.gson.functional.PrimitiveTest.testDoubleNoFractAsStringRepresentationDeserialization":465,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":33,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountryVariant":596,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":143,"com.google.gson.internal.bind.JsonTreeWriterTest.testLenientNansAndInfinities":241,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":369,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":193,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":266,"com.google.gson.functional.JsonParserTest.testParseInvalidJson":382,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsDouble":466,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":87,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":553,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":8,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":157,"com.google.gson.JsonPrimitiveTest.testEqualsAcrossTypes":316,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":495,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":15,"com.google.gson.functional.MapTest.testMapDeserializationWithNullValue":402,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":439,"com.google.gson.metrics.PerformanceTest.testDummy":670,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":567,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":69,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":20,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":537,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":371,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings":327,"com.google.gson.functional.MapTest.testNumberKeyDeserialization":406,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":212,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":541,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":534,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":598,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":55,"com.google.gson.JsonArrayTest.testEqualsNonEmptyArray":3,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":518,"com.google.gson.functional.CollectionTest.testSetDeserialization":362,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":108,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":82,"com.google.gson.functional.EnumTest.testEnumSet":332,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersEscapedDeserialization":569,"com.google.gson.functional.PrimitiveTest.testBigDecimalAsStringRepresentationDeserialization":458,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":21,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":370,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":187,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampDeserialization":588,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":84,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":4,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":19,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBytePrimitive":469,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":536,"com.google.gson.functional.PrimitiveTest.testDeserializingDecimalPointValueZeroSucceeds":475,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":10,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":525,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":269,"com.google.gson.functional.MapTest.testHashMapDeserialization":385,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsIntegerFails":432,"com.google.gson.functional.CollectionTest.testLinkedListDeserialization":358,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesDeserialization":606,"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":230,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization":544,"com.google.gson.MixedStreamTest.testReadNulls":676,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":27,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":125,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":141,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":331,"com.google.gson.functional.MapTest.testSortedMap":399,"com.google.gson.functional.MapTest.testMapSerialization":255,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":127,"com.google.gson.JsonPrimitiveTest.testByteEqualsShort":315,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedDeserialization":463,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":539,"com.google.gson.JsonPrimitiveTest.testByteEqualsBigInteger":307,"com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization":559,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":161,"com.google.gson.functional.MapTest.testSerializeMaps":186,"com.google.gson.functional.MapTest.testComplexKeysSerialization":192,"com.google.gson.functional.InternationalizationTest.testStringsWithRawChineseCharactersDeserialization":568,"com.google.gson.JsonPrimitiveTest.testLongEqualsBigInteger":309,"com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader":405,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsFalse":651,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":292,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":98,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":338,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":65,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":231,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriter":657,"com.google.gson.functional.EnumTest.testTopLevelEnumDeserialization":337,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":117,"com.google.gson.JsonObjectTest.testAddingAndRemovingObjectProperties":225,"com.google.gson.internal.LinkedHashTreeMapTest.testDoubleCapacity":666,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":13,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsDeserialization":508,"com.google.gson.functional.MapTest.testStringKeyDeserialization":404,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsDeserialization":562,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":250,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":276,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":256,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesDeserialization":438,"com.google.gson.functional.PrettyPrintingTest.testMap":286,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigInteger":433,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":521,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":247,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":128,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls":329,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":581,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeMap":284,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":326,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysDeserialization":563,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":220,"com.google.gson.functional.StringTest.testStringWithEscapedSlashDeserialization":628,"com.google.gson.functional.CollectionTest.testQueueSerialization":180,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":211,"com.google.gson.functional.MapTest.testMapSerializationEmpty":403,"com.google.gson.JsonObjectTest.testAddingBooleanProperties":688,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsByteWrapper":459,"com.google.gson.functional.MapTest.testMapOfMapSerialization":190,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":453,"com.google.gson.JavaSerializationTest.testMapIsSerializable":324,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountry":600,"com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization":360,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":104,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":262,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":252,"com.google.gson.functional.FieldNamingTest.testIdentity":162,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":217,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":372,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":129,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":509,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":14,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":77,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":146,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":367,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalDeserialization":423,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":244,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":172,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":218,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization":260,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":515,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeDeserialization":609,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":6,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidDeserialization":590,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":103,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":595,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullJsonElementSerialization":661,"com.google.gson.functional.MapTest.testMapDeserializationEmpty":383,"com.google.gson.functional.MapTest.testMapSubclassSerialization":185,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":479,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":122,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":350,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersDeserialization":570,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":109,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":165,"com.google.gson.functional.PrimitiveTest.testBigDecimalDeserialization":451,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":619,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":169,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsLongPrimitive":489,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguage":580,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":328,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":18,"com.google.gson.functional.EnumTest.testEnumSubclass":335,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization":263,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":236,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":499,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization":257,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":54,"com.google.gson.functional.PrimitiveTest.testFloatNaNDeserialization":471,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":44,"com.google.gson.JsonPrimitiveTest.testShortEqualsInteger":313,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":352,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsLongWrapper":425,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":93,"com.google.gson.InnerClassExclusionStrategyTest.testIncludeStaticNestedClassObject":227,"com.google.gson.JsonPrimitiveTest.testByteEqualsLong":304,"com.google.gson.functional.PrimitiveTest.testBigDecimalNegativeInfinityDeserializationNotSupported":456,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":516,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":67,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":5,"com.google.gson.functional.ArrayTest.testArrayOfNullDeserialization":556,"com.google.gson.internal.LinkedTreeMapTest.testEqualsAndHashCode":681,"com.google.gson.functional.PrimitiveTest.testBigDecimalInfinityDeserializationNotSupported":460,"com.google.gson.functional.ObjectTest.testTruncatedDeserialization":497,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization":259,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":345,"com.google.gson.stream.JsonWriterTest.testObjectsInArrays":234,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":611,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":490,"com.google.gson.functional.MapTest.testMapSubclassDeserialization":384,"com.google.gson.MixedStreamTest.testWriteNulls":662,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":291,"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":380,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":204,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":97,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":346,"com.google.gson.CommentsTest.testParseComments":642,"com.google.gson.JsonObjectTest.testReadPropertyWithEmptyStringName":686,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":79,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":375,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":413,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":137,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigDecimal":470,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":560,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":538,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":219,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":398,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSubTypeFirstAllowed":668,"com.google.gson.MixedStreamTest.testReadInvalidState":636,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":105,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":25,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":275,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":613,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":119,"com.google.gson.JsonParserTest.testParseMixedArray":647,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":198,"com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash":664,"com.google.gson.functional.ArrayTest.testArrayOfStringsDeserialization":564,"com.google.gson.JsonPrimitiveTest.testDoubleEqualsBigDecimal":305,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":134,"com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreAheadInVersion":643,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":446,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":102,"com.google.gson.JsonArrayTest.testRemove":669,"com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization":270,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":601,"com.google.gson.functional.MapTest.testMapDeserialization":390,"com.google.gson.functional.ArrayTest.testEmptyArrayDeserialization":555,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":597,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":289,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":254,"com.google.gson.JsonPrimitiveTest.testValidJsonOnToString":298,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":409,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":74,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":188,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":62,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":196,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":355,"com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeMap":690,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":145,"com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization":336,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":579,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":89,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization":500,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":29,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":523,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":68,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":585,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":348,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":34,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":92,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":116,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":397,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":319,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":616,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigDecimal":420,"com.google.gson.functional.PrimitiveTest.testShortSerialization":274,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":377,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":414,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedDeserialization":473,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":532,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedDeserialization":452,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":267,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsBigDecimal":431,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":589,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":158,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":334,"com.google.gson.internal.LinkedTreeMapTest.testEmptyStringValues":680,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":36,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":121,"com.google.gson.internal.LinkedTreeMapTest.testPutOverrides":677,"com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues":387,"com.google.gson.functional.PrimitiveTest.testLargeDoubleDeserialization":445,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":277,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":365,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":170,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedArray":653,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":417,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization":607,"com.google.gson.internal.bind.JsonTreeWriterTest.testObject":243,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":640,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization":280,"com.google.gson.functional.PrimitiveTest.testDeserializingNonZeroDecimalPointValuesAsIntegerFails":484,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":111,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":344,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":90,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":373,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":419,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":152,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":575,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsTrue":654,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":477,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":573,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":45,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsDoublePrimitive":457,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":512,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":494,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":339,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":30,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":210,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":37,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":586,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":519,"com.google.gson.InnerClassExclusionStrategyTest.testExcludeInnerClassField":226,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives":374,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":60,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":63,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":239,"com.google.gson.InnerClassExclusionStrategyTest.testExcludeInnerClassObject":229,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsInt":437,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":142,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":237,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":64,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization":604,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":72,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization":356,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsShortWrapper":426,"com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral":478,"com.google.gson.functional.PrimitiveTest.testNumberSerialization":261,"com.google.gson.JsonArrayTest.testSet":649,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":278,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":47,"com.google.gson.JsonPrimitiveTest.testEquals":314,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":61,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":333,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":547,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":540,"com.google.gson.functional.MapTest.testGeneralMapField":52,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":493,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":552,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsShortPrimitive":487,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":133,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":407,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":520,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":213,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":400,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":195,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":197,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":576,"com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization":268,"com.google.gson.MixedStreamTest.testReadMixedStreamed":639,"com.google.gson.ObjectTypeAdapterTest.testDeserializeNullValue":682,"com.google.gson.JsonObjectTest.testDeepCopy":689,"com.google.gson.functional.MapTest.testBooleanKeyDeserialization":392,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":447,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlDeserialization":587,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":175,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":184,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":572,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":566,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBooleanPrimitive":461,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":531,"com.google.gson.JavaSerializationTest.testNumberIsSerializable":323,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":535,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":149,"com.google.gson.functional.MapTest.testDeerializeMapOfMaps":393,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":626,"com.google.gson.JsonArrayTest.testDeepCopy":650,"com.google.gson.functional.MapTest.testMapDeserializationWithNullKey":386,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":279,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":376,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":132,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":154,"com.google.gson.stream.JsonWriterTest.testArraysInObjects":233,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsFloatPrimitive":448,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedObject":652,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":238,"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":381,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":130,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionDeserilaization":359,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserialization":574,"com.google.gson.JsonPrimitiveTest.testFloatEqualsDouble":308,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization":416,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":379,"com.google.gson.functional.ObjectTest.testNestedDeserialization":513,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":504,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":517,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":545,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":66,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":529,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsNumber":486,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":136,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":342,"com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys":394,"com.google.gson.functional.StringTest.testSingleQuoteInStringDeserialization":629,"com.google.gson.JsonParserTest.testParseUnquotedStringArrayFails":648,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":17,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":272,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":351,"com.google.gson.JavaSerializationTest.testListIsSerializable":325,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":43,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":171,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":249,"com.google.gson.functional.ObjectTest.testNullSerialization":660,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":32,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization":625,"com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey":388,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":51,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":424,"com.google.gson.functional.MapTest.testInterfaceTypeMap":50,"com.google.gson.stream.JsonWriterTest.testNonFiniteBoxedDoubles":245,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization":558,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":522,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":71,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsDoubleWrapper":427,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":11,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":110,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":354,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails":524,"com.google.gson.MixedStreamTest.testReadClosed":675,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":577,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":527,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsInteger":440,"com.google.gson.JsonPrimitiveTest.testIntegerEqualsLong":311,"com.google.gson.MixedStreamTest.testWriteClosed":638,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":181,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":546,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":80,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":418,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateDeserialization":618,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":22,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":70,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":139,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":91,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":135,"com.google.gson.stream.JsonWriterTest.testLongs":232,"com.google.gson.JsonPrimitiveTest.testShortEqualsLong":306,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":151,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":75,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":81,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":248,"com.google.gson.JsonPrimitiveTest.testShortEqualsBigInteger":303,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":622,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBooleanWrapper":464,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":155,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":353,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":183,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":605,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":549,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":100,"com.google.gson.stream.JsonWriterTest.testNumbers":246,"com.google.gson.functional.PrimitiveTest.testDoubleAsStringRepresentationDeserialization":488,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":199,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":144,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderDeserialization":582,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":99,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":201,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":138,"com.google.gson.functional.CollectionTest.testQueueDeserialization":366,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":450,"com.google.gson.functional.PrimitiveTest.testByteDeserialization":462,"com.google.gson.InnerClassExclusionStrategyTest.testIncludeStaticNestedClassField":228,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringDeserialization":632,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization":543,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":612,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":623,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":49,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":507,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":593,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":59,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":511,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":179,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":164,"com.google.gson.functional.MapTest.testRawMapSerialization":191,"com.google.gson.JsonParserTest.testParseReader":684,"com.google.gson.functional.CollectionTest.testNullsInListDeserialization":363,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetDeserialization":603,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize":112,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":28,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":85,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":542,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":415,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":176,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":177,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":203,"com.google.gson.functional.PrimitiveTest.testByteSerialization":271,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapNoTypeSerialization":320,"com.google.gson.ObjectTypeAdapterTest.testSerialize":7,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":173,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":57,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsFloatWrapper":436,"com.google.gson.JsonPrimitiveTest.testEqualsIntegerAndBigInteger":297,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":41,"com.google.gson.JsonPrimitiveTest.testFloatEqualsBigDecimal":302,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":207,"com.google.gson.JsonPrimitiveTest.testByteEqualsInteger":310,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":159,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":23,"com.google.gson.GsonTypeAdapterTest.testDefaultTypeAdapterThrowsParseException":317,"com.google.gson.functional.StringTest.testAssignmentCharDeserialization":630,"com.google.gson.functional.MapTest.testMapWithQuotes":189,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":294,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatDeserialization":443,"com.google.gson.functional.StringTest.testEscapingQuotesInStringDeserialization":631,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":368,"com.google.gson.JsonObjectTest.testEqualsOnEmptyObject":0,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":571,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":253,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":124,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsNumber":482,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":293,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":106,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":411,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":16,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":510,"com.google.gson.internal.LinkedHashTreeMapTest.testDoubleCapacityAllNodesOnLeft":663,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":118,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":264,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":591,"com.google.gson.functional.ObjectTest.testEmptyStringDeserialization":671,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":208,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":496,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":150,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":583,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":42,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":153,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":592,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigInteger":476,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriterAndSerializeNulls":658,"com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed":361,"com.google.gson.functional.ArrayTest.testSingleStringArrayDeserialization":554,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":178,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":202,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":610,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":31,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":131,"com.google.gson.JsonPrimitiveTest.testIntegerEqualsBigInteger":312,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization":624,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":123,"com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreAtSameVersion":644,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReader":330,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":349,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsFloat":428,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":251,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize2dArray":282,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":503,"com.google.gson.functional.ObjectTest.testNestedSerialization":86,"com.google.gson.JsonObjectTest.testAddingStringProperties":166,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":48,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":194,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":258,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringDeserialization":634,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":200,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":401,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":120,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":148,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":223,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":322,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":83,"com.google.gson.functional.UncategorizedTest.testTrailingWhitespace":548,"com.google.gson.functional.PrimitiveTest.testBooleanDeserialization":483,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":73,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":565,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":594,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":299,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsInteger":441,"com.google.gson.GsonBuilderTest.testCreatingMoreThanOnce":667,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":505,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":578,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":621,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize1dArray":283,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":221,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":206,"com.google.gson.functional.CollectionTest.testSetSerialization":39,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":408,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":46,"com.google.gson.functional.StringTest.testStringValueSerialization":222,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":287,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":163,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":101,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":343,"com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization":357,"com.google.gson.functional.ArrayTest.testInvalidArrayDeserialization":551,"com.google.gson.MixedStreamTest.testWriteInvalidState":637,"com.google.gson.functional.ObjectTest.testJsonObjectSerialization":659,"com.google.gson.functional.PrimitiveTest.testBadValueForBigIntegerDeserialization":444,"com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero":449,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":561,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":156,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":295,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":160,"com.google.gson.ObjectTypeAdapterTest.testDeserialize":683,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":95,"com.google.gson.JsonObjectTest.testAddingCharacterProperties":224,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":550,"com.google.gson.internal.bind.JsonTreeWriterTest.testArray":242,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":526,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":24,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullSerialization":674,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":174,"com.google.gson.internal.LinkedHashTreeMapTest.testAvlWalker":665,"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":389,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":290,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType":533},"transformations":[{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"2a033a48-3e4c-11e6-9e32-85d75e29c4fd","method":{"position":"com.google.gson.Gson:261","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        out.nullValue();\n        return ;\n    } \n    double double = value.doubleValue();\n    checkValidFloatingPoint(doubleValue);\n    out.value(value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"2a038869-3e4c-11e6-9e32-a521d8e47f66","method":{"position":"com.google.gson.Gson:278","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Float read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return ((float)(in.nextDouble()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:107","type":"CtBinaryOperatorImpl","sourcecode":"o instanceof com.google.gson.JsonArray"},"failures":[0,1,2,3],"tindex":"2a03886a-3e4c-11e6-9e32-c53530928e27","method":{"position":"com.google.gson.JsonObject:186","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object o) {\n    if (o instanceof com.google.gson.JsonArray) {\n        {\n            return (o == (com.google.gson.JsonObject.this)) || ((o instanceof com.google.gson.JsonObject) && (((com.google.gson.JsonObject)(o)).com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.equals(com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"com.google.gson.stream.JsonWriter:491","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165],"tindex":"2a03af7b-3e4c-11e6-9e32-c9dbefbdd0dd","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:94","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\n@java.lang.Override\nvoid write(com.google.gson.stream.JsonWriter writer, java.lang.Object value) throws java.io.IOException, java.lang.IllegalAccessException {\n    if (value == null) {\n        {\n            java.lang.Object java.lang.Object = field.get(value);\n            com.google.gson.TypeAdapter com.google.gson.TypeAdapter = new com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper(context , this.com.google.gson.TypeAdapter<?> , fieldType.getType());\n            t.write(writer, fieldValue);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:194","type":"CtBinaryOperatorImpl","sourcecode":"(token != (com.google.gson.stream.JsonToken.NUMBER)) && (token != (com.google.gson.stream.JsonToken.STRING))"},"failures":[],"tindex":"2a03af7c-3e4c-11e6-9e32-835ef80aa320","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:303","type":"CtMethodImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V> removeInternalByKey(java.lang.Object key) {\n    if ((key != key) && (token != key)) {\n        {\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = findByObject(key);\n            if (node != null) {\n                removeInternal(node, true);\n            } \n            return node;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"com.google.gson.stream.JsonToken.STRING":"key","token":"key","com.google.gson.stream.JsonToken.NUMBER":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:720","type":"CtBinaryOperatorImpl","sourcecode":"json == null"},"failures":[166,40,41,42,43,44,167,168,169,170,171,172,173,174],"tindex":"2a0424ad-3e4c-11e6-9e32-393ed32d8f28","method":{"position":"com.google.gson.JsonObject:78","type":"CtMethodImpl","sourcecode":"public void addProperty(java.lang.String property, java.lang.String value) {\n    if (value == null) {\n        {\n            add(property, createJsonElement(value));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.JsonPrimitive:319","type":"CtBinaryOperatorImpl","sourcecode":"((value) instanceof java.lang.Number) && ((other.value) instanceof java.lang.Number)"},"failures":[],"tindex":"2a0424ae-3e4c-11e6-9e32-7dc992ccc5b0","method":{"position":"com.google.gson.internal.bind.ObjectTypeAdapter:94","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Object value) throws java.io.IOException {\n    if (value instanceof java.lang.Class) {\n        {\n            if ((value instanceof java.lang.Number) && ((value.java.lang.Object) instanceof java.lang.Number)) {\n                {\n                    if (value == null) {\n                        out.nullValue();\n                        return ;\n                    } \n                    com.google.gson.TypeAdapter<java.lang.Object> com.google.gson.TypeAdapter<java.lang.Object> = ((com.google.gson.TypeAdapter<java.lang.Object>)(com.google.gson.Gson.getAdapter(value.getClass())));\n                    if (typeAdapter instanceof com.google.gson.internal.bind.ObjectTypeAdapter) {\n                        out.beginObject();\n                        out.endObject();\n                        return ;\n                    } \n                    typeAdapter.write(out, value);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"other":"value","value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:565","type":"CtBinaryOperatorImpl","sourcecode":"(indent) == null"},"failures":[4,175,176,5,6,8,177,9,10,178,21,27,29,30,31,33,35,179,180,181,182,37,183,38,184,47,48,185,186,187,188,49,189,190,50,51,52,191,192,193,53,57,194,195,58,59,196,66,67,68,69,71,72,73,74,75,76,197,198,199,78,79,80,81,83,84,86,88,91,92,93,94,100,101,102,103,104,109,112,115,117,118,119,120,122,123,125,126,127,129,130,200,132,201,202,203,204,205,206,207,133,208,134,135,138,209,140,210,142,143,144,145,147,148,211,212,213,153,156,157,214,215,216,217,218,219,220,221,222,163,164,165,223],"tindex":"2a044bbf-3e4c-11e6-9e32-3be7fe15507f","method":{"position":"com.google.gson.internal.bind.TypeAdapters:361","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.String value) throws java.io.IOException {\n    if (value == null) {\n        {\n            out.value(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"indent":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:341","type":"CtBinaryOperatorImpl","sourcecode":"(deferredName) != null"},"failures":[224],"tindex":"2a044bc0-3e4c-11e6-9e32-a9ff2e784329","method":{"position":"com.google.gson.JsonObject:111","type":"CtMethodImpl","sourcecode":"public void addProperty(java.lang.String property, java.lang.Character value) {\n    if (property != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            add(property, createJsonElement(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"property"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:246","type":"CtVariableReadImpl","sourcecode":"unlink"},"failures":[],"tindex":"2a044bc1-3e4c-11e6-9e32-fdd5ffd4db85","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:157","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic com.google.gson.stream.JsonWriter value(boolean value) throws java.io.IOException {\n    if (value) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            put(new com.google.gson.JsonPrimitive(value));\n            return com.google.gson.internal.bind.JsonTreeWriter.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"unlink":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:733","type":"CtBinaryOperatorImpl","sourcecode":"last == (com.google.gson.stream.JsonReader.NUMBER_CHAR_DECIMAL)"},"failures":[],"tindex":"2a044bc2-3e4c-11e6-9e32-211dc03aaef2","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:677","type":"CtMethodImpl","sourcecode":"void reset(int targetSize) {\n    if (targetSize == targetSize) {\n        {\n            int int = ((java.lang.Integer.highestOneBit(targetSize)) * 2) - 1;\n            int = treeCapacity - targetSize;\n            int = 0;\n            int = 0;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"last":"targetSize","com.google.gson.stream.JsonReader.NUMBER_CHAR_DECIMAL":"targetSize"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"2a0472d3-3e4c-11e6-9e32-dd3ad64dfe3c","method":{"position":"com.google.gson.internal.bind.DateTypeAdapter:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized void write(com.google.gson.stream.JsonWriter out, java.util.Date value) throws java.io.IOException {\n    if (value == null) {\n        out.nullValue();\n        return ;\n    } \n    java.lang.String java.lang.String = java.text.DateFormat.format(value);\n    out.value(dateFormatAsString);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:94","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.Class"},"failures":[],"tindex":"2a0472d4-3e4c-11e6-9e32-a32f6244decb","method":{"position":"com.google.gson.internal.$Gson$Types:303","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type context, java.lang.Class<?> contextRawType) {\n    if (context == (java.util.Properties.java.util.Properties.java.lang.Class)) {\n        return new java.lang.reflect.Type[]{ java.lang.String.java.lang.String.java.lang.Class , java.lang.String.java.lang.String.java.lang.Class };\n    } \n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.getSupertype(context, contextRawType, java.util.Map.java.util.Map.java.lang.Class);\n    if (mapType instanceof java.lang.reflect.ParameterizedType) {\n        java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(mapType));\n        return mapParameterizedType.getActualTypeArguments();\n    } \n    return new java.lang.reflect.Type[]{ java.lang.Object.java.lang.Object.java.lang.Class , java.lang.Object.java.lang.Object.java.lang.Class };\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"context"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"2a0472d5-3e4c-11e6-9e32-69634979d1d3","method":{"position":"com.google.gson.Gson:285","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        out.nullValue();\n        return ;\n    } \n    float float = value.floatValue();\n    checkValidFloatingPoint(floatValue);\n    out.value(value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.$Gson$Types:94","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.Class"},"failures":[],"tindex":"2a0499e6-3e4c-11e6-9e32-494039cc794a","method":{"position":"com.google.gson.internal.bind.ObjectTypeAdapter:94","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Object value) throws java.io.IOException {\n    if (value instanceof java.lang.Class) {\n        {\n            if ((value instanceof java.lang.Number) && ((value.java.lang.Object) instanceof java.lang.Number)) {\n                {\n                    if (value == null) {\n                        out.nullValue();\n                        return ;\n                    } \n                    com.google.gson.TypeAdapter<java.lang.Object> com.google.gson.TypeAdapter<java.lang.Object> = ((com.google.gson.TypeAdapter<java.lang.Object>)(com.google.gson.Gson.getAdapter(value.getClass())));\n                    if (typeAdapter instanceof com.google.gson.internal.bind.ObjectTypeAdapter) {\n                        out.beginObject();\n                        out.endObject();\n                        return ;\n                    } \n                    typeAdapter.write(out, value);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"2a0499e7-3e4c-11e6-9e32-39fdb21a161d","method":{"position":"com.google.gson.internal.bind.TypeAdapters:63","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Class value) throws java.io.IOException {\n    if (value == null) {\n        out.nullValue();\n    } else {\n        throw new java.lang.UnsupportedOperationException(((\"Attempted to serialize java.lang.Class: \" + (value.getName())) + \". Forgot to register a type adapter?\"));\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:83","type":"CtBinaryOperatorImpl","sourcecode":"superclass instanceof java.lang.Class"},"failures":[225,170],"tindex":"2a0499e8-3e4c-11e6-9e32-078bb1e94513","method":{"position":"com.google.gson.internal.LinkedTreeMap:276","type":"CtMethodImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V> removeInternalByKey(java.lang.Object key) {\n    if (key instanceof java.lang.Class) {\n        {\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = findByObject(key);\n            if (node != null) {\n                removeInternal(node, true);\n            } \n            return node;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"superclass":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.DefaultDateTypeAdapter:79","type":"CtUnaryOperatorImpl","sourcecode":"!(json instanceof com.google.gson.JsonPrimitive)"},"failures":[],"tindex":"2a0499e9-3e4c-11e6-9e32-99f82b205264","method":{"position":"com.google.gson.Gson:468","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement toJsonTree(java.lang.Object src) {\n    if (!(src instanceof com.google.gson.JsonPrimitive)) {\n        {\n            if (src == null) {\n                return com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull;\n            } \n            return toJsonTree(src, src.getClass());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:280","type":"CtInvocationImpl","sourcecode":"standardPrimitive.isAssignableFrom(classOfPrimitive)"},"failures":[226,227,228,229,230],"tindex":"2a0499ea-3e4c-11e6-9e32-a9fdf375b4c5","method":{"position":"com.google.gson.internal.Excluder:220","type":"CtMethodImpl","sourcecode":"private boolean isInnerClass(java.lang.Class<?> clazz) {\n    if (clazz.isAssignableFrom(clazz)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (clazz.isMemberClass()) && (!(isStatic(clazz)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"standardPrimitive":"clazz","classOfPrimitive":"clazz"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.DefaultDateTypeAdapter:85","type":"CtBinaryOperatorImpl","sourcecode":"typeOfT == (java.sql.Timestamp.class)"},"failures":[],"tindex":"2a04c0fb-3e4c-11e6-9e32-515792b1ad7f","method":{"position":"com.google.gson.internal.$Gson$Types:267","type":"CtMethodImpl","sourcecode":"static java.lang.reflect.Type getSupertype(java.lang.reflect.Type context, java.lang.Class<?> contextRawType, java.lang.Class<?> supertype) {\n    com.google.gson.internal.$Gson$Preconditions.checkArgument(supertype.isAssignableFrom(contextRawType));\n    return com.google.gson.internal.$Gson$Types.resolve(context, contextRawType, com.google.gson.internal.$Gson$Types.getGenericSupertype(context, contextRawType, supertype));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeOfT":"context","java.sql.Timestamp.class":"context"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl","sourcecode":"field.isSynthetic()"},"failures":[29,231,160],"tindex":"2a04c0fc-3e4c-11e6-9e32-8f962531bc38","method":{"position":"com.google.gson.FieldNamingPolicy:90","type":"CtMethodImpl","sourcecode":"public java.lang.String translateName(java.lang.reflect.Field f) {\n    if (f.isSynthetic()) {\n        {\n            return com.google.gson.FieldNamingPolicy.separateCamelCase(f.getName(), \"_\").toLowerCase();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"f"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"2a04c0fd-3e4c-11e6-9e32-215a462b44d0","method":{"position":"com.google.gson.internal.bind.MapTypeAdapterFactory:160","type":"CtMethodImpl","sourcecode":"public java.util.Map<K, V> read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    com.google.gson.stream.JsonToken com.google.gson.stream.JsonToken = in.peek();\n    if (peek == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    java.util.Map<K, V> java.util.Map<K, V> = com.google.gson.internal.ObjectConstructor<? extends java.util.Map<K, V>>.construct();\n    if (peek == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.beginArray();\n        while (in.hasNext()) {\n            in.beginArray();\n            K K = com.google.gson.TypeAdapter<K>.read(in);\n            V V = com.google.gson.TypeAdapter<V>.read(in);\n            V V = map.put(key, value);\n            if (replaced != null) {\n                throw new com.google.gson.JsonSyntaxException((\"duplicate key: \" + key));\n            } \n            in.endArray();\n        }\n        in.endArray();\n    } else {\n        in.beginObject();\n        while (in.hasNext()) {\n            com.google.gson.internal.JsonReaderInternalAccess.com.google.gson.internal.JsonReaderInternalAccess.com.google.gson.internal.JsonReaderInternalAccess.promoteNameToValue(in);\n            K K = com.google.gson.TypeAdapter<K>.read(in);\n            V V = com.google.gson.TypeAdapter<V>.read(in);\n            V V = map.put(key, value);\n            if (replaced != null) {\n                throw new com.google.gson.JsonSyntaxException((\"duplicate key: \" + key));\n            } \n        }\n        in.endObject();\n    }\n    return map;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:726","type":"CtBinaryOperatorImpl","sourcecode":"value == 0"},"failures":[232,233,234,235,236,237,238,239,240],"tindex":"2a04c0fe-3e4c-11e6-9e32-c367818e94ab","method":{"position":"com.google.gson.stream.JsonWriter:476","type":"CtMethodImpl","sourcecode":"public com.google.gson.stream.JsonWriter value(long value) throws java.io.IOException {\n    if (value == 0) {\n        {\n            writeDeferredName();\n            beforeValue(false);\n            java.io.Writer.write(java.lang.Long.toString(value));\n            return com.google.gson.stream.JsonWriter.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"2a04e80f-3e4c-11e6-9e32-23042b0b0b74","method":{"position":"com.google.gson.internal.bind.TypeAdapters:607","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.Locale read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    java.lang.String java.lang.String = in.nextString();\n    java.util.StringTokenizer java.util.StringTokenizer = new java.util.StringTokenizer(locale , \"_\");\n    java.lang.String java.lang.String = null;\n    java.lang.String java.lang.String = null;\n    java.lang.String java.lang.String = null;\n    if (tokenizer.hasMoreElements()) {\n        language = tokenizer.nextToken();\n    } \n    if (tokenizer.hasMoreElements()) {\n        country = tokenizer.nextToken();\n    } \n    if (tokenizer.hasMoreElements()) {\n        variant = tokenizer.nextToken();\n    } \n    if ((country == null) && (variant == null)) {\n        return new java.util.Locale(language);\n    } else if (variant == null) {\n        return new java.util.Locale(language , country);\n    } else {\n        return new java.util.Locale(language , country , variant);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:176","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[241,242,243,244,7,8,245,246,9,10,12,13,14,16,178,17,18,19,20,21,22,23,24,25,26,28,32,34,35,36,247,248,37,38,39,249,250,45,46,251,252,253,254,186,255,52,191,256,57,58,59,70,74,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,77,79,82,83,84,85,86,88,89,91,92,93,94,105,281,106,107,108,282,110,111,112,283,113,114,284,285,286,116,117,287,288,289,118,122,123,124,125,127,128,129,130,132,202,290,291,207,133,292,136,137,140,141,142,143,145,148,293,294,295,149,151,152,153,154,155,158,159,160,161,162,163,164,165,296,297,298,299],"tindex":"2a04e810-3e4c-11e6-9e32-d5ba9963ab8d","method":{"position":"com.google.gson.stream.JsonWriter:490","type":"CtMethodImpl","sourcecode":"public com.google.gson.stream.JsonWriter value(java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        {\n            if (value == null) {\n                {\n                    if (value == null) {\n                        return nullValue();\n                    } \n                    writeDeferredName();\n                    java.lang.String java.lang.String = value.toString();\n                    if ((!(boolean)) && (((string.equals(\"-Infinity\")) || (string.equals(\"Infinity\"))) || (string.equals(\"NaN\")))) {\n                        throw new java.lang.IllegalArgumentException((\"Numeric values must be finite, but was \" + value));\n                    } \n                    beforeValue(false);\n                    java.io.Writer.append(string);\n                    return com.google.gson.stream.JsonWriter.this;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:115","type":"CtInvocationImpl","sourcecode":"primitive.isNumber()"},"failures":[144,147,2,300,301,302,303,304,297,305,306,307,308,309,310,311,312,313,314,315,316],"tindex":"2a04e811-3e4c-11e6-9e32-6d817f174ebb","method":{"position":"com.google.gson.JsonPrimitive:333","type":"CtMethodImpl","sourcecode":"private static boolean isIntegral(com.google.gson.JsonPrimitive primitive) {\n    if (primitive.isNumber()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((primitive.java.lang.Object) instanceof java.lang.Number) {\n                java.lang.Number java.lang.Number = ((java.lang.Number)(primitive.java.lang.Object));\n                return ((((number instanceof java.math.BigInteger) || (number instanceof java.lang.Long)) || (number instanceof java.lang.Integer)) || (number instanceof java.lang.Short)) || (number instanceof java.lang.Byte);\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"primitive":"primitive"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:103","type":"CtVariableReadImpl","sourcecode":"deserialization"},"failures":[317,4,318,244,175,176,319,320,5,6,7,321,8,227,229,322,323,324,325,326,235,236,327,177,328,9,329,330,331,10,332,333,334,335,336,337,11,338,339,340,341,12,342,13,343,344,345,14,15,16,346,178,17,18,19,20,21,347,22,23,24,348,25,349,350,26,27,28,29,351,30,31,32,352,353,33,354,34,231,355,35,179,36,247,356,357,358,180,248,181,182,37,359,360,183,361,362,38,184,363,39,249,364,365,366,40,41,367,42,43,368,369,370,371,372,373,44,250,45,374,46,375,376,377,251,378,252,253,379,47,48,167,168,169,170,171,380,381,382,383,254,384,385,386,185,186,387,388,187,389,188,390,49,391,392,393,394,189,190,255,395,396,397,398,399,50,400,51,52,401,191,402,192,403,404,193,405,406,256,53,54,172,407,408,55,56,57,194,195,58,59,60,409,410,196,411,412,61,62,413,63,414,64,415,416,65,417,66,67,68,69,70,71,72,73,418,419,74,75,76,420,421,422,257,423,424,425,426,427,428,429,197,430,431,198,432,433,434,435,436,437,438,439,258,440,441,442,443,444,199,445,446,447,448,449,450,451,452,453,454,259,455,456,457,260,261,458,459,460,262,461,462,463,464,465,466,467,468,263,469,264,470,265,266,471,472,267,473,474,268,475,269,476,477,478,270,271,272,273,274,275,479,480,481,482,276,483,277,484,485,486,278,279,487,280,488,489,77,78,490,491,79,492,493,80,494,495,81,496,497,82,498,83,499,500,501,502,84,503,85,86,504,505,87,506,507,508,88,509,89,90,510,91,511,512,513,514,92,515,516,93,94,517,95,96,97,98,518,99,100,101,102,103,104,105,281,106,107,108,519,520,521,522,109,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,285,286,116,117,287,288,289,118,538,539,119,540,120,541,542,121,122,123,124,125,543,126,127,544,545,128,546,547,548,129,130,549,131,550,200,132,201,202,551,552,553,203,204,290,554,555,205,206,291,556,557,558,207,559,133,560,561,562,208,563,292,564,134,135,136,137,138,139,209,565,566,140,567,568,569,210,570,141,571,572,142,143,144,145,146,147,148,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,237,592,593,211,594,595,596,597,598,599,238,600,149,601,239,240,602,603,604,605,606,212,607,608,213,609,150,610,611,612,613,151,614,615,616,617,618,619,152,620,621,153,154,622,623,155,624,625,626,156,157,230,158,159,160,161,162,627,214,215,216,217,218,628,629,219,630,220,631,632,633,221,634,635,222,163,164,636,165,637,296,223,638,639,640,641,299,642,643,644,645,646],"tindex":"2a050f22-3e4c-11e6-9e32-3bb8e991c6e8","method":{"position":"com.google.gson.internal.Excluder:191","type":"CtMethodImpl","sourcecode":"public boolean excludeClass(java.lang.Class<?> clazz, boolean serialize) {\n    if (serialize) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((double) != (com.google.gson.internal.Excluder.com.google.gson.internal.Excluder.double)) && (!(isValidVersion(clazz.getAnnotation(com.google.gson.annotations.Since.com.google.gson.annotations.Since.java.lang.Class), clazz.getAnnotation(com.google.gson.annotations.Until.com.google.gson.annotations.Until.java.lang.Class))))) {\n                return true;\n            } \n            if ((!(boolean)) && (isInnerClass(clazz))) {\n                return true;\n            } \n            if (isAnonymousOrLocal(clazz)) {\n                return true;\n            } \n            java.util.List<com.google.gson.ExclusionStrategy> java.util.List<com.google.gson.ExclusionStrategy> = serialize ? java.util.List<com.google.gson.ExclusionStrategy> : java.util.List<com.google.gson.ExclusionStrategy>;\n            for (com.google.gson.ExclusionStrategy com.google.gson.ExclusionStrategy : list) {\n                if (exclusionStrategy.shouldSkipClass(clazz)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deserialization":"serialize"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1246","type":"CtBinaryOperatorImpl","sourcecode":"p == (com.google.gson.stream.JsonReader.PEEKED_END_ARRAY)"},"failures":[647,648,649,650],"tindex":"2a053633-3e4c-11e6-9e32-f9c9ead395fb","method":{"position":"com.google.gson.JsonArray:146","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement get(int i) {\n    if (i == i) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<com.google.gson.JsonElement>.get(i);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"i","com.google.gson.stream.JsonReader.PEEKED_END_ARRAY":"i"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.TreeTypeAdapter:55","type":"CtInvocationImpl","sourcecode":"value.isJsonNull()"},"failures":[651,241,242,243,652,653,654,244,647,655,656,657,658,334,178,365,40,41,367,42,43,368,370,44,250,45,46,375,376,251,252,253,379,254,53,414,415,659,660,94,517,522,525,527,528,530,141,142,143,145,148,576,293,294,583,584,295,608,610,616,661,173,174,662,297,298],"tindex":"2a053634-3e4c-11e6-9e32-c12df142ea71","method":{"position":"com.google.gson.internal.bind.TypeAdapters:680","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, com.google.gson.JsonElement value) throws java.io.IOException {\n    if (value.isString()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value.isJsonNull()) {\n                {\n                    if ((value == null) || (value.isJsonNull())) {\n                        out.nullValue();\n                    } else if (value.isJsonPrimitive()) {\n                        com.google.gson.JsonPrimitive com.google.gson.JsonPrimitive = value.getAsJsonPrimitive();\n                        if (primitive.isNumber()) {\n                            out.value(primitive.getAsNumber());\n                        } else if (primitive.isBoolean()) {\n                            out.value(primitive.getAsBoolean());\n                        } else {\n                            out.value(primitive.getAsString());\n                        }\n                    } else if (value.isJsonArray()) {\n                        out.beginArray();\n                        for (com.google.gson.JsonElement com.google.gson.JsonElement : value.getAsJsonArray()) {\n                            write(out, e);\n                        }\n                        out.endArray();\n                    } else if (value.isJsonObject()) {\n                        out.beginObject();\n                        for (java.util.Map.Entry<java.lang.String, com.google.gson.JsonElement> java.util.Map.Entry<java.lang.String, com.google.gson.JsonElement> : value.getAsJsonObject().entrySet()) {\n                            out.name(e.getKey());\n                            write(out, e.getValue());\n                        }\n                        out.endObject();\n                    } else {\n                        throw new java.lang.IllegalArgumentException((\"Couldn't write \" + (value.getClass())));\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:403","type":"CtBinaryOperatorImpl","sourcecode":"declaredBy instanceof java.lang.reflect.ParameterizedType"},"failures":[],"tindex":"2a053635-3e4c-11e6-9e32-7de5eb1a570b","method":{"position":"com.google.gson.internal.$Gson$Types:84","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.WildcardType supertypeOf(java.lang.reflect.Type bound) {\n    return new com.google.gson.internal.$Gson$Types.WildcardTypeImpl(new java.lang.reflect.Type[]{ java.lang.Object.java.lang.Object.java.lang.Class } , new java.lang.reflect.Type[]{ bound });\n}"},"series":0,"name":"addParameterCondition","variableMap":{"declaredBy":"bound"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:176","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[262,266,272],"tindex":"2a055d46-3e4c-11e6-9e32-71dfb553c641","method":{"position":"com.google.gson.internal.bind.TypeAdapters:282","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        {\n            out.value(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory:43","type":"CtBinaryOperatorImpl","sourcecode":"annotation == null"},"failures":[96,97,98,518,99,519,520,522,523,524,124],"tindex":"2a055d47-3e4c-11e6-9e32-2baf7e34b114","method":{"position":"com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory:50","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic com.google.gson.TypeAdapter<?> getTypeAdapter(com.google.gson.internal.ConstructorConstructor constructorConstructor, com.google.gson.Gson gson, com.google.gson.reflect.TypeToken<?> fieldType, com.google.gson.annotations.JsonAdapter annotation) {\n    if (annotation == null) {\n        {\n            java.lang.Class<?> java.lang.Class<?> = annotation.value();\n            if (com.google.gson.TypeAdapter.com.google.gson.TypeAdapter.java.lang.Class.isAssignableFrom(value)) {\n                java.lang.Class<com.google.gson.TypeAdapter<?>> java.lang.Class<com.google.gson.TypeAdapter<?>> = ((java.lang.Class<com.google.gson.TypeAdapter<?>>)(value));\n                return constructorConstructor.get(com.google.gson.reflect.TypeToken.get(typeAdapter)).construct();\n            } \n            if (com.google.gson.TypeAdapterFactory.com.google.gson.TypeAdapterFactory.java.lang.Class.isAssignableFrom(value)) {\n                java.lang.Class<com.google.gson.TypeAdapterFactory> java.lang.Class<com.google.gson.TypeAdapterFactory> = ((java.lang.Class<com.google.gson.TypeAdapterFactory>)(value));\n                return constructorConstructor.get(com.google.gson.reflect.TypeToken.get(typeAdapterFactory)).construct().create(gson, fieldType);\n            } \n            throw new java.lang.IllegalArgumentException(\"@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"annotation":"annotation"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:213","type":"CtBinaryOperatorImpl","sourcecode":"(indent.length()) == 0"},"failures":[],"tindex":"2a055d48-3e4c-11e6-9e32-fb9301a74f04","method":{"position":"com.google.gson.internal.LinkedTreeMap:41","type":"CtMethodImpl","sourcecode":"public int compare(java.lang.Comparable a, java.lang.Comparable b) {\n    if ((b.length()) == 0) {\n        {\n            return a.compareTo(b);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"indent":"b"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:118","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.Class<?>"},"failures":[],"tindex":"2a055d49-3e4c-11e6-9e32-c94665adc080","method":{"position":"com.google.gson.internal.LinkedTreeMap:605","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(java.lang.Object o) {\n    if (o instanceof java.lang.Class<?>) {\n        {\n            return containsKey(o);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"2a055d4a-3e4c-11e6-9e32-7bca6ebd6d1f","method":{"position":"com.google.gson.internal.bind.DateTypeAdapter:61","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.Date read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return deserializeToDate(in.nextString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonObject:54","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"2a05845b-3e4c-11e6-9e32-b7be9ae00447","method":{"position":"com.google.gson.Gson:136","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement serialize(java.lang.Object src, java.lang.reflect.Type typeOfSrc) {\n    if (src == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return toJsonTree(src, typeOfSrc);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"2a05845c-3e4c-11e6-9e32-938adb95d156","method":{"position":"com.google.gson.internal.bind.TypeAdapters:451","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.net.URL value) throws java.io.IOException {\n    out.value((value == null ? null : value.toExternalForm()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"2a05845d-3e4c-11e6-9e32-c311babd143c","method":{"position":"com.google.gson.JsonParser:80","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader json) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException {\n    boolean boolean = json.isLenient();\n    json.setLenient(true);\n    try {\n        return com.google.gson.internal.Streams.parse(json);\n    } catch (java.lang.StackOverflowError e) {\n        throw new com.google.gson.JsonParseException(((\"Failed parsing JSON source: \" + json) + \" to Json\") , e);\n    } catch (java.lang.OutOfMemoryError e) {\n        throw new com.google.gson.JsonParseException(((\"Failed parsing JSON source: \" + json) + \" to Json\") , e);\n    } finally {\n        json.setLenient(lenient);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"2a05845e-3e4c-11e6-9e32-e767d44046e7","method":{"position":"com.google.gson.internal.bind.SqlDateTypeAdapter:64","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized void write(com.google.gson.stream.JsonWriter out, java.sql.Date value) throws java.io.IOException {\n    out.value((value == null ? null : java.text.DateFormat.format(value)));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.DefaultDateTypeAdapter:87","type":"CtBinaryOperatorImpl","sourcecode":"typeOfT == (java.sql.Date.class)"},"failures":[],"tindex":"2a05845f-3e4c-11e6-9e32-ef726ff75dfa","method":{"position":"com.google.gson.internal.$Gson$Types:54","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type ownerType, java.lang.reflect.Type rawType, java.lang.reflect.Type... typeArguments) {\n    return new com.google.gson.internal.$Gson$Types.ParameterizedTypeImpl(ownerType , rawType , typeArguments);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.sql.Date.class":"ownerType","typeOfT":"ownerType"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:400","type":"CtBinaryOperatorImpl","sourcecode":"(deferredName) != null"},"failures":[],"tindex":"2a058460-3e4c-11e6-9e32-cf496ceadad7","method":{"position":"com.google.gson.JsonObject:100","type":"CtMethodImpl","sourcecode":"public void addProperty(java.lang.String property, java.lang.Boolean value) {\n    if (property != null) {\n        {\n            add(property, createJsonElement(value));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"property"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:293","type":"CtInvocationImpl","sourcecode":"com.google.gson.JsonPrimitive.isIntegral(com.google.gson.JsonPrimitive.this)"},"failures":[],"tindex":"2a05ab71-3e4c-11e6-9e32-8d2d7cca631b","method":{"position":"com.google.gson.JsonPrimitive:273","type":"CtMethodImpl","sourcecode":"private static boolean isPrimitiveOrString(java.lang.Object target) {\n    if (target instanceof java.lang.String) {\n        return true;\n    } \n    java.lang.Class<?> java.lang.Class<?> = target.getClass();\n    for (java.lang.Class<?> java.lang.Class<?> : com.google.gson.JsonPrimitive.com.google.gson.JsonPrimitive.java.lang.Class<?>[]) {\n        if (standardPrimitive.isAssignableFrom(classOfPrimitive)) {\n            return true;\n        } \n    }\n    return false;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"target"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"2a05ab72-3e4c-11e6-9e32-8ff4c169ebde","method":{"position":"com.google.gson.internal.bind.TypeAdapters:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Boolean read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return java.lang.Boolean.valueOf(in.nextString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"2a05ab73-3e4c-11e6-9e32-59070f2b8e24","method":{"position":"com.google.gson.internal.bind.TypeAdapters:379","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.math.BigDecimal value) throws java.io.IOException {\n    out.value(value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonArray:58","type":"CtBinaryOperatorImpl","sourcecode":"element == null"},"failures":[],"tindex":"2a05ab74-3e4c-11e6-9e32-0f2a843f46af","method":{"position":"com.google.gson.DefaultDateTypeAdapter:94","type":"CtMethodImpl","sourcecode":"private java.util.Date deserializeToDate(com.google.gson.JsonElement json) {\n    if (json == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.text.DateFormat) {\n                try {\n                    return java.text.DateFormat.parse(json.getAsString());\n                } catch (java.text.ParseException ignored) {\n                }\n                try {\n                    return java.text.DateFormat.parse(json.getAsString());\n                } catch (java.text.ParseException ignored) {\n                }\n                try {\n                    return java.text.DateFormat.parse(json.getAsString());\n                } catch (java.text.ParseException e) {\n                    throw new com.google.gson.JsonSyntaxException(json.getAsString() , e);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.internal.$Gson$Types:315","type":"CtBinaryOperatorImpl","sourcecode":"mapType instanceof java.lang.reflect.ParameterizedType"},"failures":[],"tindex":"2a05ab75-3e4c-11e6-9e32-3bbaa839298d","method":{"position":"com.google.gson.Gson:773","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic <T>T fromJson(java.io.Reader json, java.lang.reflect.Type typeOfT) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException {\n    if (typeOfT instanceof java.lang.reflect.ParameterizedType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    } else {\n        {\n            com.google.gson.stream.JsonReader com.google.gson.stream.JsonReader = new com.google.gson.stream.JsonReader(json);\n            T T = ((T)(fromJson(jsonReader, typeOfT)));\n            com.google.gson.Gson.assertFullConsumption(object, jsonReader);\n            return object;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mapType":"typeOfT"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:107","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.WildcardType"},"failures":[],"tindex":"2a05d286-3e4c-11e6-9e32-c782e3504d83","method":{"position":"com.google.gson.internal.$Gson$Types:75","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type bound) {\n    return new com.google.gson.internal.$Gson$Types.WildcardTypeImpl(new java.lang.reflect.Type[]{ bound } , com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.java.lang.reflect.Type[]);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"bound"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:429","type":"CtBinaryOperatorImpl","sourcecode":"(deferredName) != null"},"failures":[],"tindex":"2a05d287-3e4c-11e6-9e32-35f4e7d1a753","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:43","type":"CtMethodImpl","sourcecode":"public int compare(java.lang.Comparable a, java.lang.Comparable b) {\n    if (a == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (a != null) {\n                {\n                    return a.compareTo(b);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"a"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:491","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"2a05d288-3e4c-11e6-9e32-39df1db3a945","method":{"position":"com.google.gson.stream.JsonWriter:490","type":"CtMethodImpl","sourcecode":"public com.google.gson.stream.JsonWriter value(java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        {\n            if (value == null) {\n                {\n                    if (value == null) {\n                        return nullValue();\n                    } \n                    writeDeferredName();\n                    java.lang.String java.lang.String = value.toString();\n                    if ((!(boolean)) && (((string.equals(\"-Infinity\")) || (string.equals(\"Infinity\"))) || (string.equals(\"NaN\")))) {\n                        throw new java.lang.IllegalArgumentException((\"Numeric values must be finite, but was \" + value));\n                    } \n                    beforeValue(false);\n                    java.io.Writer.append(string);\n                    return com.google.gson.stream.JsonWriter.this;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:243","type":"CtBinaryOperatorImpl","sourcecode":"annotation != null"},"failures":[152,620,621,154,622,155],"tindex":"2a05d289-3e4c-11e6-9e32-09bfa3733f61","method":{"position":"com.google.gson.internal.Excluder:242","type":"CtMethodImpl","sourcecode":"private boolean isValidUntil(com.google.gson.annotations.Until annotation) {\n    if (annotation != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (annotation != null) {\n                double double = annotation.value();\n                if (annotationVersion <= (double)) {\n                    return false;\n                } \n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"annotation":"annotation"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:271","type":"CtBinaryOperatorImpl","sourcecode":"left != null"},"failures":[663,664,665,666],"tindex":"2a05d28a-3e4c-11e6-9e32-c79166a37dad","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:626","type":"CtMethodImpl","sourcecode":"void reset(com.google.gson.internal.LinkedHashTreeMap.Node<K, V> root) {\n    if (root != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = null;\n            for (com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root ; n != null ; n = n.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>) {\n                n.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = stackTop;\n                stackTop = n;\n            }\n            com.google.gson.internal.LinkedHashTreeMap.AvlIterator.this.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = stackTop;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"left":"root"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:431","type":"CtBinaryOperatorImpl","sourcecode":"factory == skipPast"},"failures":[],"tindex":"2a05f99b-3e4c-11e6-9e32-81be0c577151","method":{"position":"com.google.gson.Gson:422","type":"CtMethodImpl","sourcecode":"public <T>com.google.gson.TypeAdapter<T> getDelegateAdapter(com.google.gson.TypeAdapterFactory skipPast, com.google.gson.reflect.TypeToken<T> type) {\n    if (skipPast == skipPast) {\n        {\n            boolean boolean = false;\n            if (!(java.util.List<com.google.gson.TypeAdapterFactory>.contains(skipPast)))\n                skipPastFound = true;\n            \n            for (com.google.gson.TypeAdapterFactory com.google.gson.TypeAdapterFactory : java.util.List<com.google.gson.TypeAdapterFactory>) {\n                if (!skipPastFound) {\n                    if (factory == skipPast) {\n                        skipPastFound = true;\n                    } \n                    continue;\n                } \n                com.google.gson.TypeAdapter<T> com.google.gson.TypeAdapter<T> = factory.create(com.google.gson.Gson.this, type);\n                if (candidate != null) {\n                    return candidate;\n                } \n            }\n            throw new java.lang.IllegalArgumentException((\"GSON cannot serialize \" + type));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"skipPast","skipPast":"skipPast"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:906","type":"CtBinaryOperatorImpl","sourcecode":"p == (com.google.gson.stream.JsonReader.PEEKED_LONG)"},"failures":[317,4,318,244,175,5,6,667,326,235,236,329,658,334,12,342,13,343,344,345,14,15,178,347,348,349,27,29,351,30,31,32,352,353,354,34,231,355,365,40,41,367,42,43,368,369,370,371,372,373,44,250,45,374,46,375,376,377,251,378,252,253,379,254,384,186,49,50,52,401,53,172,57,60,409,196,411,412,61,62,63,414,64,415,416,65,417,422,199,262,265,266,269,272,276,278,659,502,514,94,517,668,95,97,520,521,522,525,526,527,528,529,530,531,532,533,534,535,536,537,285,286,116,117,287,288,289,118,538,539,119,540,120,541,542,125,543,126,127,544,545,128,546,547,549,200,132,206,209,565,566,140,567,141,571,572,142,143,148,573,576,583,584,591,238,601,239,605,607,608,610,612,613,614,615,616,619,152,620,621,153,154,622,623,155,624,156,157,230,158,159,160,161,162,173,296,223,641,299],"tindex":"2a05f99c-3e4c-11e6-9e32-59242b9156cd","method":{"position":"com.google.gson.GsonBuilder:551","type":"CtMethodImpl","sourcecode":"private void addTypeAdaptersForDate(java.lang.String datePattern, int dateStyle, int timeStyle, java.util.List<com.google.gson.TypeAdapterFactory> factories) {\n    if (timeStyle == timeStyle) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.DefaultDateTypeAdapter com.google.gson.DefaultDateTypeAdapter;\n            if ((datePattern != null) && (!(\"\".equals(datePattern.trim())))) {\n                dateTypeAdapter = new com.google.gson.DefaultDateTypeAdapter(datePattern);\n            } else if ((dateStyle != (java.text.DateFormat.java.text.DateFormat.int)) && (timeStyle != (java.text.DateFormat.java.text.DateFormat.int))) {\n                dateTypeAdapter = new com.google.gson.DefaultDateTypeAdapter(dateStyle , timeStyle);\n            } else {\n                return ;\n            }\n            factories.add(com.google.gson.TreeTypeAdapter.newFactory(com.google.gson.reflect.TypeToken.get(java.util.Date.java.util.Date.java.lang.Class), dateTypeAdapter));\n            factories.add(com.google.gson.TreeTypeAdapter.newFactory(com.google.gson.reflect.TypeToken.get(java.sql.Timestamp.java.sql.Timestamp.java.lang.Class), dateTypeAdapter));\n            factories.add(com.google.gson.TreeTypeAdapter.newFactory(com.google.gson.reflect.TypeToken.get(java.sql.Date.java.sql.Date.java.lang.Class), dateTypeAdapter));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"timeStyle","com.google.gson.stream.JsonReader.PEEKED_LONG":"timeStyle"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:581","type":"CtBinaryOperatorImpl","sourcecode":"context == (com.google.gson.stream.JsonScope.NONEMPTY_OBJECT)"},"failures":[],"tindex":"2a0620ad-3e4c-11e6-9e32-17f5dd2757ad","method":{"position":"com.google.gson.internal.Streams:108","type":"CtMethodImpl","sourcecode":"public char charAt(int i) {\n    if (i == i) {\n        {\n            return char[][i];\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"context":"i","com.google.gson.stream.JsonScope.NONEMPTY_OBJECT":"i"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:198","type":"CtBinaryOperatorImpl","sourcecode":"out == null"},"failures":[],"tindex":"2a0620ae-3e4c-11e6-9e32-d733e339d459","method":{"position":"com.google.gson.Gson:644","type":"CtMethodImpl","sourcecode":"private com.google.gson.stream.JsonWriter newJsonWriter(java.io.Writer writer) throws java.io.IOException {\n    if (writer == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (boolean) {\n                writer.write(com.google.gson.Gson.com.google.gson.Gson.java.lang.String);\n            } \n            com.google.gson.stream.JsonWriter com.google.gson.stream.JsonWriter = new com.google.gson.stream.JsonWriter(writer);\n            if (boolean) {\n                jsonWriter.setIndent(\"  \");\n            } \n            jsonWriter.setSerializeNulls(boolean);\n            return jsonWriter;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"out":"writer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.GsonBuilder:455","type":"CtBinaryOperatorImpl","sourcecode":"(typeAdapter instanceof com.google.gson.JsonSerializer<?>) || (typeAdapter instanceof com.google.gson.JsonDeserializer<?>)"},"failures":[],"tindex":"2a0620af-3e4c-11e6-9e32-a70a0d3558be","method":{"position":"com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:74","type":"CtMethodImpl","sourcecode":"private java.lang.reflect.Type getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type type, java.lang.Object value) {\n    if ((value instanceof com.google.gson.JsonSerializer<?>) || (typeAdapter instanceof com.google.gson.JsonDeserializer<?>)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((value != null) && (((type == (java.lang.Object.java.lang.Object.java.lang.Class)) || (type instanceof java.lang.reflect.TypeVariable<?>)) || (type instanceof java.lang.Class<?>))) {\n                type = value.getClass();\n            } \n            return type;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeAdapter":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"2a0620b0-3e4c-11e6-9e32-c19662161712","method":{"position":"com.google.gson.Gson:278","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Float read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return ((float)(in.nextDouble()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"2a0620b1-3e4c-11e6-9e32-97d1443a74ad","method":{"position":"com.google.gson.internal.bind.TypeAdapters:414","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.StringBuilder value) throws java.io.IOException {\n    out.value((value == null ? null : value.toString()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.stream.JsonWriter:542","type":"CtBinaryOperatorImpl","sourcecode":"replacement == null"},"failures":[],"tindex":"2a0620b2-3e4c-11e6-9e32-870d06051ab7","method":{"position":"com.google.gson.JsonParser:44","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement parse(java.lang.String json) throws com.google.gson.JsonSyntaxException {\n    if (json == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    } else {\n        {\n            return parse(new java.io.StringReader(json));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"replacement":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:218","type":"CtVariableReadImpl","sourcecode":"unlink"},"failures":[],"tindex":"2a0647c3-3e4c-11e6-9e32-11839133ee42","method":{"position":"com.google.gson.internal.$Gson$Preconditions:40","type":"CtMethodImpl","sourcecode":"public static void checkArgument(boolean condition) {\n    if (!condition) {\n        throw new java.lang.IllegalArgumentException();\n    } \n}"},"series":0,"name":"addParameterCondition","variableMap":{"unlink":"condition"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"2a0647c4-3e4c-11e6-9e32-8380e03fcc12","method":{"position":"com.google.gson.internal.bind.TypeAdapters:509","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.util.UUID value) throws java.io.IOException {\n    out.value((value == null ? null : value.toString()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"2a0647c5-3e4c-11e6-9e32-0d02ca87a732","method":{"position":"com.google.gson.JsonParser:80","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader json) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException {\n    boolean boolean = json.isLenient();\n    json.setLenient(true);\n    try {\n        return com.google.gson.internal.Streams.parse(json);\n    } catch (java.lang.StackOverflowError e) {\n        throw new com.google.gson.JsonParseException(((\"Failed parsing JSON source: \" + json) + \" to Json\") , e);\n    } catch (java.lang.OutOfMemoryError e) {\n        throw new com.google.gson.JsonParseException(((\"Failed parsing JSON source: \" + json) + \" to Json\") , e);\n    } finally {\n        json.setLenient(lenient);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:328","type":"CtBinaryOperatorImpl","sourcecode":"toResolve == typeVariable"},"failures":[],"tindex":"2a066ed6-3e4c-11e6-9e32-1d456ad0514c","method":{"position":"com.google.gson.internal.$Gson$Types:394","type":"CtMethodImpl","sourcecode":"static java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type context, java.lang.Class<?> contextRawType, java.lang.reflect.TypeVariable<?> unknown) {\n    java.lang.Class<?> java.lang.Class<?> = com.google.gson.internal.$Gson$Types.declaringClassOf(unknown);\n    if (declaredByRaw == null) {\n        return unknown;\n    } \n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.getGenericSupertype(context, contextRawType, declaredByRaw);\n    if (declaredBy instanceof java.lang.reflect.ParameterizedType) {\n        int int = com.google.gson.internal.$Gson$Types.indexOf(declaredByRaw.getTypeParameters(), unknown);\n        return ((java.lang.reflect.ParameterizedType)(declaredBy)).getActualTypeArguments()[index];\n    } \n    return unknown;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeVariable":"unknown","toResolve":"context"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.Gson:872","type":"CtBinaryOperatorImpl","sourcecode":"json == null"},"failures":[],"tindex":"2a066ed7-3e4c-11e6-9e32-f91b0008f63c","method":{"position":"com.google.gson.Gson:660","type":"CtMethodImpl","sourcecode":"public void toJson(com.google.gson.JsonElement jsonElement, com.google.gson.stream.JsonWriter writer) throws com.google.gson.JsonIOException {\n    if (jsonElement == null) {\n        {\n            boolean boolean = writer.isLenient();\n            writer.setLenient(true);\n            boolean boolean = writer.isHtmlSafe();\n            writer.setHtmlSafe(boolean);\n            boolean boolean = writer.getSerializeNulls();\n            writer.setSerializeNulls(boolean);\n            try {\n                com.google.gson.internal.Streams.write(jsonElement, writer);\n            } catch (java.io.IOException e) {\n                throw new com.google.gson.JsonIOException(e);\n            } finally {\n                writer.setLenient(oldLenient);\n                writer.setHtmlSafe(oldHtmlSafe);\n                writer.setSerializeNulls(oldSerializeNulls);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"jsonElement"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:123","type":"CtBinaryOperatorImpl","sourcecode":"from == null"},"failures":[],"tindex":"2a066ed8-3e4c-11e6-9e32-fb1c5df28005","method":{"position":"com.google.gson.internal.$Gson$Types:277","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type array) {\n    return array instanceof java.lang.reflect.GenericArrayType ? ((java.lang.reflect.GenericArrayType)(array)).getGenericComponentType() : ((java.lang.Class<?>)(array)).getComponentType();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"array"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:111","type":"CtInvocationImpl","sourcecode":"primitive.isString()"},"failures":[],"tindex":"2a066ed9-3e4c-11e6-9e32-479c01c2d9f3","method":{"position":"com.google.gson.internal.bind.TypeAdapters:680","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, com.google.gson.JsonElement value) throws java.io.IOException {\n    if (value.isString()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value.isJsonNull()) {\n                {\n                    if ((value == null) || (value.isJsonNull())) {\n                        out.nullValue();\n                    } else if (value.isJsonPrimitive()) {\n                        com.google.gson.JsonPrimitive com.google.gson.JsonPrimitive = value.getAsJsonPrimitive();\n                        if (primitive.isNumber()) {\n                            out.value(primitive.getAsNumber());\n                        } else if (primitive.isBoolean()) {\n                            out.value(primitive.getAsBoolean());\n                        } else {\n                            out.value(primitive.getAsString());\n                        }\n                    } else if (value.isJsonArray()) {\n                        out.beginArray();\n                        for (com.google.gson.JsonElement com.google.gson.JsonElement : value.getAsJsonArray()) {\n                            write(out, e);\n                        }\n                        out.endArray();\n                    } else if (value.isJsonObject()) {\n                        out.beginObject();\n                        for (java.util.Map.Entry<java.lang.String, com.google.gson.JsonElement> java.util.Map.Entry<java.lang.String, com.google.gson.JsonElement> : value.getAsJsonObject().entrySet()) {\n                            out.name(e.getKey());\n                            write(out, e.getValue());\n                        }\n                        out.endObject();\n                    } else {\n                        throw new java.lang.IllegalArgumentException((\"Couldn't write \" + (value.getClass())));\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"primitive":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:782","type":"CtBinaryOperatorImpl","sourcecode":"(obj != null) && ((reader.peek()) != (com.google.gson.stream.JsonToken.END_DOCUMENT))"},"failures":[],"tindex":"2a066eda-3e4c-11e6-9e32-51353cedf28d","method":{"position":"com.google.gson.internal.$Gson$Types:411","type":"CtMethodImpl","sourcecode":"private static int indexOf(java.lang.Object[] array, java.lang.Object toFind) {\n    for (int int = 0 ; i < (array.int) ; i++) {\n        if (toFind.equals(array[i])) {\n            return i;\n        } \n    }\n    throw new java.util.NoSuchElementException();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"com.google.gson.stream.JsonToken.END_DOCUMENT":"toFind","obj":"toFind","reader":"toFind"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"2a0695eb-3e4c-11e6-9e32-63023325c274","method":{"position":"com.google.gson.internal.bind.TypeAdapters:525","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.sql.Timestamp read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    java.util.Date java.util.Date = dateTypeAdapter.read(in);\n    return date != null ? new java.sql.Timestamp(date.getTime()) : null;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:162","type":"CtBinaryOperatorImpl","sourcecode":"toGenericComponentType instanceof java.lang.reflect.ParameterizedType"},"failures":[176,319,323,324,325,327,331,332,333,334,335,336,339,16,17,18,19,22,23,24,25,26,35,179,356,357,180,248,182,359,360,183,362,363,249,366,370,372,377,379,380,381,383,386,387,388,187,389,188,390,49,392,393,394,255,395,396,397,399,50,400,51,52,401,402,192,403,404,193,405,406,256,53,54,408,56,60,61,62,65,67,70,418,474,78,497,87,90,511,100,101,102,103,104,105,106,108,116,118,122,123,548,132,291,557,134,135,137,138,139,141,571,572,142,143,148,573,583,296,223,642],"tindex":"2a0695ec-3e4c-11e6-9e32-6b43930037a1","method":{"position":"com.google.gson.internal.ConstructorConstructor:128","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprivate <T>com.google.gson.internal.ObjectConstructor<T> newDefaultImplementationConstructor(final java.lang.reflect.Type type, java.lang.Class<? super T> rawType) {\n    if (type instanceof java.lang.reflect.ParameterizedType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (java.util.Collection.java.util.Collection.java.lang.Class.isAssignableFrom(rawType)) {\n                if (java.util.SortedSet.java.util.SortedSet.java.lang.Class.isAssignableFrom(rawType)) {\n                    return new com.google.gson.internal.ObjectConstructor<T>() {\n                        public T construct() {\n                            return ((T)(new java.util.TreeSet<java.lang.Object>()));\n                        }\n                    };\n                } else if (java.util.EnumSet.java.util.EnumSet.java.lang.Class.isAssignableFrom(rawType)) {\n                    return new com.google.gson.internal.ObjectConstructor<T>() {\n                        @java.lang.SuppressWarnings(value = \"rawtypes\")\n                        public T construct() {\n                            if (type instanceof java.lang.reflect.ParameterizedType) {\n                                java.lang.reflect.Type java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(type)).getActualTypeArguments()[0];\n                                if (elementType instanceof java.lang.Class) {\n                                    return ((T)(java.util.EnumSet.noneOf(((java.lang.Class)(elementType)))));\n                                } else {\n                                    throw new com.google.gson.JsonIOException((\"Invalid EnumSet type: \" + (type.toString())));\n                                }\n                            } else {\n                                throw new com.google.gson.JsonIOException((\"Invalid EnumSet type: \" + (type.toString())));\n                            }\n                        }\n                    };\n                } else if (java.util.Set.java.util.Set.java.lang.Class.isAssignableFrom(rawType)) {\n                    return new com.google.gson.internal.ObjectConstructor<T>() {\n                        public T construct() {\n                            return ((T)(new java.util.LinkedHashSet<java.lang.Object>()));\n                        }\n                    };\n                } else if (java.util.Queue.java.util.Queue.java.lang.Class.isAssignableFrom(rawType)) {\n                    return new com.google.gson.internal.ObjectConstructor<T>() {\n                        public T construct() {\n                            return ((T)(new java.util.LinkedList<java.lang.Object>()));\n                        }\n                    };\n                } else {\n                    return new com.google.gson.internal.ObjectConstructor<T>() {\n                        public T construct() {\n                            return ((T)(new java.util.ArrayList<java.lang.Object>()));\n                        }\n                    };\n                }\n            } \n            if (java.util.Map.java.util.Map.java.lang.Class.isAssignableFrom(rawType)) {\n                if (java.util.SortedMap.java.util.SortedMap.java.lang.Class.isAssignableFrom(rawType)) {\n                    return new com.google.gson.internal.ObjectConstructor<T>() {\n                        public T construct() {\n                            return ((T)(new java.util.TreeMap<java.lang.Object, java.lang.Object>()));\n                        }\n                    };\n                } else if ((type instanceof java.lang.reflect.ParameterizedType) && (!(java.lang.String.java.lang.String.java.lang.Class.isAssignableFrom(com.google.gson.reflect.TypeToken.get(((java.lang.reflect.ParameterizedType)(type)).getActualTypeArguments()[0]).getRawType())))) {\n                    return new com.google.gson.internal.ObjectConstructor<T>() {\n                        public T construct() {\n                            return ((T)(new java.util.LinkedHashMap<java.lang.Object, java.lang.Object>()));\n                        }\n                    };\n                } else {\n                    return new com.google.gson.internal.ObjectConstructor<T>() {\n                        public T construct() {\n                            return ((T)(new com.google.gson.internal.LinkedTreeMap<java.lang.String, java.lang.Object>()));\n                        }\n                    };\n                }\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toGenericComponentType":"type"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"2a06bcfd-3e4c-11e6-9e32-553ff9054934","method":{"position":"com.google.gson.internal.bind.TypeAdapters:397","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.math.BigInteger value) throws java.io.IOException {\n    out.value(value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:414","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"2a06bcfe-3e4c-11e6-9e32-2983c1973233","method":{"position":"com.google.gson.GsonBuilder:382","type":"CtMethodImpl","sourcecode":"public com.google.gson.GsonBuilder setDateFormat(java.lang.String pattern) {\n    if (pattern == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.GsonBuilder.this.java.lang.String = pattern;\n            return com.google.gson.GsonBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"pattern"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:132","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.GenericArrayType"},"failures":[176,319,320,321,324,327,331,372,375,379,380,383,384,385,386,185,186,387,388,187,389,188,390,49,391,392,393,394,189,190,255,395,396,397,398,399,50,400,51,52,401,191,402,192,403,404,193,405,406,256,53,90,286,116,122,123,134,137,138,139,141,571,572,142,143,589,606,212],"tindex":"2a06bcff-3e4c-11e6-9e32-159987b43efa","method":{"position":"com.google.gson.internal.bind.MapTypeAdapterFactory:139","type":"CtMethodImpl","sourcecode":"private com.google.gson.TypeAdapter<?> getKeyAdapter(com.google.gson.Gson context, java.lang.reflect.Type keyType) {\n    if (keyType instanceof java.lang.reflect.GenericArrayType) {\n        {\n            return (keyType == (boolean.boolean.java.lang.Class)) || (keyType == (java.lang.Boolean.java.lang.Boolean.java.lang.Class)) ? com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<java.lang.Boolean> : context.getAdapter(com.google.gson.reflect.TypeToken.get(keyType));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"keyType"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.reflect.TypeToken:131","type":"CtBinaryOperatorImpl","sourcecode":"(type) instanceof java.lang.Class<?>"},"failures":[],"tindex":"2a06bd00-3e4c-11e6-9e32-9f914774b05f","method":{"position":"com.google.gson.Gson:552","type":"CtMethodImpl","sourcecode":"public void toJson(java.lang.Object src, java.lang.Appendable writer) throws com.google.gson.JsonIOException {\n    if (src instanceof java.lang.Class<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    } else {\n        {\n            if (src != null) {\n                toJson(src, src.getClass(), writer);\n            } else {\n                toJson(com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull, writer);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:826","type":"CtBinaryOperatorImpl","sourcecode":"p == (com.google.gson.stream.JsonReader.PEEKED_DOUBLE_QUOTED)"},"failures":[669],"tindex":"2a06e411-3e4c-11e6-9e32-c57667f183e9","method":{"position":"com.google.gson.JsonArray:105","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement remove(int index) {\n    if (index == index) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<com.google.gson.JsonElement>.remove(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"index","com.google.gson.stream.JsonReader.PEEKED_DOUBLE_QUOTED":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.JsonPrimitive:132","type":"CtInvocationImpl","sourcecode":"isBoolean()"},"failures":[],"tindex":"2a06e412-3e4c-11e6-9e32-c783beaa7c83","method":{"position":"com.google.gson.Gson:591","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic void toJson(java.lang.Object src, java.lang.reflect.Type typeOfSrc, com.google.gson.stream.JsonWriter writer) throws com.google.gson.JsonIOException {\n    com.google.gson.TypeAdapter<?> com.google.gson.TypeAdapter<?> = getAdapter(com.google.gson.reflect.TypeToken.get(typeOfSrc));\n    boolean boolean = writer.isLenient();\n    writer.setLenient(true);\n    boolean boolean = writer.isHtmlSafe();\n    writer.setHtmlSafe(boolean);\n    boolean boolean = writer.getSerializeNulls();\n    writer.setSerializeNulls(boolean);\n    try {\n        ((com.google.gson.TypeAdapter<java.lang.Object>)(adapter)).write(writer, src);\n    } catch (java.io.IOException e) {\n        throw new com.google.gson.JsonIOException(e);\n    } finally {\n        writer.setLenient(oldLenient);\n        writer.setHtmlSafe(oldHtmlSafe);\n        writer.setSerializeNulls(oldSerializeNulls);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:163","type":"CtFieldReadImpl","sourcecode":"requireExpose"},"failures":[317,4,318,244,175,5,6,667,8,655,656,322,670,326,235,236,327,177,328,9,657,329,330,331,658,10,332,333,334,335,336,337,11,338,339,340,341,12,342,13,343,344,345,14,15,16,346,178,17,18,19,20,21,347,22,23,24,348,25,349,350,26,27,28,29,351,30,31,32,352,353,33,354,34,231,355,35,179,36,247,356,357,358,180,248,181,182,37,359,360,183,361,362,38,184,363,39,249,364,365,366,40,41,367,42,43,368,369,370,371,372,373,44,250,45,374,46,375,376,377,251,378,252,253,379,47,48,167,168,169,170,171,380,381,382,383,254,384,385,386,185,186,387,388,187,389,188,390,49,391,392,393,394,189,190,255,395,396,397,398,399,50,400,51,52,401,191,402,192,403,404,193,405,406,256,53,54,172,407,408,55,56,57,194,195,58,59,60,409,410,196,411,412,61,62,413,63,414,64,415,416,65,417,66,67,68,69,70,71,72,73,418,419,74,75,76,420,421,422,257,423,424,425,426,427,428,429,197,430,431,198,432,433,434,435,436,437,438,439,258,440,441,442,443,444,199,445,446,447,448,449,450,451,452,453,454,259,455,456,457,260,261,458,459,460,262,461,462,463,464,465,466,467,468,263,469,264,470,265,266,471,472,267,473,474,268,475,269,476,477,478,270,271,272,273,274,275,479,480,481,482,276,483,277,484,485,486,278,279,487,280,488,489,77,78,490,491,79,492,493,80,494,495,81,659,496,497,82,498,660,83,671,499,500,501,502,84,503,85,86,504,505,87,506,507,508,672,88,509,89,90,510,91,511,512,513,514,92,515,516,93,94,517,668,95,96,97,98,518,99,105,281,106,107,108,519,520,521,522,109,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,285,286,116,117,287,288,289,118,538,539,119,540,120,541,542,121,122,123,125,543,126,127,544,545,128,546,547,548,129,130,549,131,550,200,132,201,202,551,552,553,203,204,290,554,555,205,206,291,556,557,558,207,559,133,560,561,562,208,563,292,564,134,135,136,137,138,139,209,565,566,140,567,568,569,210,570,141,571,572,142,143,144,145,146,147,148,573,574,575,576,577,2,578,579,293,580,581,294,582,583,300,584,585,586,587,295,588,589,590,591,237,592,593,211,594,595,596,597,598,599,238,600,149,601,239,240,673,602,603,604,605,606,674,212,607,608,213,609,150,610,611,612,613,151,614,615,616,661,301,617,618,619,152,620,621,153,154,622,623,155,624,625,626,156,157,230,158,159,160,161,162,627,214,215,216,217,218,628,629,219,630,220,631,632,633,221,634,635,222,163,173,174,164,636,675,165,662,637,296,676,223,638,639,640,641,299,642],"tindex":"2a06e413-3e4c-11e6-9e32-eff3107886c2","method":{"position":"com.google.gson.Gson:273","type":"CtMethodImpl","sourcecode":"private com.google.gson.TypeAdapter<java.lang.Number> floatAdapter(boolean serializeSpecialFloatingPointValues) {\n    if (serializeSpecialFloatingPointValues) {\n        {\n            if (serializeSpecialFloatingPointValues) {\n                return com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<java.lang.Number>;\n            } \n            return new com.google.gson.TypeAdapter<java.lang.Number>() {\n                @java.lang.Override\n                public java.lang.Float read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n                    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n                        in.nextNull();\n                        return null;\n                    } \n                    return ((float)(in.nextDouble()));\n                }\n\n                @java.lang.Override\n                public void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n                    if (value == null) {\n                        out.nullValue();\n                        return ;\n                    } \n                    float float = value.floatValue();\n                    checkValidFloatingPoint(floatValue);\n                    out.value(value);\n                }\n            };\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"requireExpose":"serializeSpecialFloatingPointValues"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"2a070b24-3e4c-11e6-9e32-5130afd01a2b","method":{"position":"com.google.gson.internal.bind.TypeAdapters:451","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.net.URL value) throws java.io.IOException {\n    out.value((value == null ? null : value.toExternalForm()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:746","type":"CtBinaryOperatorImpl","sourcecode":"((last == (com.google.gson.stream.JsonReader.NUMBER_CHAR_DIGIT)) || (last == (com.google.gson.stream.JsonReader.NUMBER_CHAR_FRACTION_DIGIT))) || (last == (com.google.gson.stream.JsonReader.NUMBER_CHAR_EXP_DIGIT))"},"failures":[],"tindex":"2a070b25-3e4c-11e6-9e32-511095229ff7","method":{"position":"com.google.gson.stream.JsonWriter:375","type":"CtMethodImpl","sourcecode":"private void replaceTop(int topOfStack) {\n    if (((topOfStack == topOfStack) || (last == topOfStack)) || (last == topOfStack)) {\n        {\n            int[][((int) - 1)] = topOfStack;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"com.google.gson.stream.JsonReader.NUMBER_CHAR_FRACTION_DIGIT":"topOfStack","last":"topOfStack","com.google.gson.stream.JsonReader.NUMBER_CHAR_EXP_DIGIT":"topOfStack","com.google.gson.stream.JsonReader.NUMBER_CHAR_DIGIT":"topOfStack"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:591","type":"CtBinaryOperatorImpl","sourcecode":"result != (com.google.gson.stream.JsonReader.PEEKED_NONE)"},"failures":[],"tindex":"2a070b26-3e4c-11e6-9e32-699645d28b53","method":{"position":"com.google.gson.GsonBuilder:423","type":"CtMethodImpl","sourcecode":"public com.google.gson.GsonBuilder setDateFormat(int dateStyle, int timeStyle) {\n    if (dateStyle != dateStyle) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.GsonBuilder.this.int = dateStyle;\n            com.google.gson.GsonBuilder.this.int = timeStyle;\n            com.google.gson.GsonBuilder.this.java.lang.String = null;\n            return com.google.gson.GsonBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"result":"dateStyle","com.google.gson.stream.JsonReader.PEEKED_NONE":"dateStyle"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:180","type":"CtUnaryOperatorImpl","sourcecode":"!(b instanceof java.lang.reflect.GenericArrayType)"},"failures":[],"tindex":"2a070b27-3e4c-11e6-9e32-c5bb324027bd","method":{"position":"com.google.gson.internal.$Gson$Types:267","type":"CtMethodImpl","sourcecode":"static java.lang.reflect.Type getSupertype(java.lang.reflect.Type context, java.lang.Class<?> contextRawType, java.lang.Class<?> supertype) {\n    com.google.gson.internal.$Gson$Preconditions.checkArgument(supertype.isAssignableFrom(contextRawType));\n    return com.google.gson.internal.$Gson$Types.resolve(context, contextRawType, com.google.gson.internal.$Gson$Types.getGenericSupertype(context, contextRawType, supertype));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"context"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:553","type":"CtBinaryOperatorImpl","sourcecode":"src != null"},"failures":[677,678,679,680,681,176,682,683,684,685,686,224,687,1,225,688,689,166,349,40,41,42,43,371,372,170,386,387,388,390,393,395,402,404,66,67,68,72,73,76,94,690,119,540,120,122,123,124,126,549,138,139,143,146,2],"tindex":"2a070b28-3e4c-11e6-9e32-d391bf54f6a2","method":{"position":"com.google.gson.internal.LinkedTreeMap:184","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\ncom.google.gson.internal.LinkedTreeMap.Node<K, V> findByObject(java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            try {\n                return key != null ? find(((K)(key)), false) : null;\n            } catch (java.lang.ClassCastException e) {\n                return null;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"src":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"2a073239-3e4c-11e6-9e32-c3fdcd2b5d06","method":{"position":"com.google.gson.internal.bind.TypeAdapters:525","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.sql.Timestamp read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    java.util.Date java.util.Date = dateTypeAdapter.read(in);\n    return date != null ? new java.sql.Timestamp(date.getTime()) : null;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"2a07323a-3e4c-11e6-9e32-d7e98fd93049","method":{"position":"com.google.gson.internal.bind.TypeAdapters:211","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        return ((short)(in.nextInt()));\n    } catch (java.lang.NumberFormatException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:115","type":"CtInvocationImpl","sourcecode":"primitive.isNumber()"},"failures":[],"tindex":"2a07323b-3e4c-11e6-9e32-5f6ab814ee81","method":{"position":"com.google.gson.Gson:617","type":"CtMethodImpl","sourcecode":"public java.lang.String toJson(com.google.gson.JsonElement jsonElement) {\n    if (jsonElement instanceof com.google.gson.JsonObject) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (jsonElement.isNumber()) {\n                {\n                    java.io.StringWriter java.io.StringWriter = new java.io.StringWriter();\n                    toJson(jsonElement, writer);\n                    return writer.toString();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"primitive":"jsonElement"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonElement:119","type":"CtInvocationImpl","sourcecode":"isJsonPrimitive()"},"failures":[],"tindex":"2a07323c-3e4c-11e6-9e32-717a57ab52e8","method":{"position":"com.google.gson.JsonObject:53","type":"CtMethodImpl","sourcecode":"public void add(java.lang.String property, com.google.gson.JsonElement value) {\n    if (value == null) {\n        value = com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull;\n    } \n    com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.put(property, value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"com.google.gson.JsonParseException","condition":{"position":"com.google.gson.reflect.TypeToken:204","type":"CtBinaryOperatorImpl","sourcecode":"ptype != null"},"failures":[],"tindex":"2a07323d-3e4c-11e6-9e32-1977e16c4c59","method":{"position":"com.google.gson.DefaultDateTypeAdapter:77","type":"CtMethodImpl","sourcecode":"public java.util.Date deserialize(com.google.gson.JsonElement json, java.lang.reflect.Type typeOfT, com.google.gson.JsonDeserializationContext context) throws com.google.gson.JsonParseException {\n    if (typeOfT != null) {\n        {\n            if (!(json instanceof com.google.gson.JsonPrimitive)) {\n                throw new com.google.gson.JsonParseException(\"The date should be a string value\");\n            } \n            java.util.Date java.util.Date = deserializeToDate(json);\n            if (typeOfT == (java.util.Date.java.util.Date.java.lang.Class)) {\n                return date;\n            } else if (typeOfT == (java.sql.Timestamp.java.sql.Timestamp.java.lang.Class)) {\n                return new java.sql.Timestamp(date.getTime());\n            } else if (typeOfT == (java.sql.Date.java.sql.Date.java.lang.Class)) {\n                return new java.sql.Date(date.getTime());\n            } else {\n                throw new java.lang.IllegalArgumentException((((getClass()) + \" cannot deserialize to \") + typeOfT));\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonParseException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ptype":"typeOfT"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"2a07323e-3e4c-11e6-9e32-e7081b895b52","method":{"position":"com.google.gson.internal.bind.TypeAdapters:442","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.net.URL read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    java.lang.String java.lang.String = in.nextString();\n    return \"null\".equals(nextString) ? null : new java.net.URL(nextString);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:174","type":"CtInvocationImpl","sourcecode":"isAnonymousOrLocal(field.getType())"},"failures":[],"tindex":"2a07323f-3e4c-11e6-9e32-b7816592c18c","method":{"position":"com.google.gson.JsonPrimitive:305","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object obj) {\n    if ((com.google.gson.JsonPrimitive.this) == obj) {\n        return true;\n    } \n    if ((obj == null) || ((getClass()) != (obj.getClass()))) {\n        return false;\n    } \n    com.google.gson.JsonPrimitive com.google.gson.JsonPrimitive = ((com.google.gson.JsonPrimitive)(obj));\n    if ((java.lang.Object) == null) {\n        return (other.java.lang.Object) == null;\n    } \n    if ((com.google.gson.JsonPrimitive.isIntegral(com.google.gson.JsonPrimitive.this)) && (com.google.gson.JsonPrimitive.isIntegral(other))) {\n        return (getAsNumber().longValue()) == (other.getAsNumber().longValue());\n    } \n    if (((java.lang.Object) instanceof java.lang.Number) && ((other.java.lang.Object) instanceof java.lang.Number)) {\n        double double = getAsNumber().doubleValue();\n        double double = other.getAsNumber().doubleValue();\n        return (a == b) || ((java.lang.Double.isNaN(a)) && (java.lang.Double.isNaN(b)));\n    } \n    return java.lang.Object.equals(other.java.lang.Object);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"obj","this":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"2a075950-3e4c-11e6-9e32-eb43c87f951f","method":{"position":"com.google.gson.Gson:310","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return in.nextLong();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"2a075951-3e4c-11e6-9e32-db40c56acdc5","method":{"position":"com.google.gson.internal.bind.TypeAdapters:289","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return in.nextDouble();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.stream.JsonReader:290","type":"CtBinaryOperatorImpl","sourcecode":"in == null"},"failures":[],"tindex":"2a075952-3e4c-11e6-9e32-195367a77039","method":{"position":"com.google.gson.Gson:746","type":"CtMethodImpl","sourcecode":"public <T>T fromJson(java.io.Reader json, java.lang.Class<T> classOfT) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException {\n    if (json == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    } else {\n        {\n            com.google.gson.stream.JsonReader com.google.gson.stream.JsonReader = new com.google.gson.stream.JsonReader(json);\n            java.lang.Object java.lang.Object = fromJson(jsonReader, classOfT);\n            com.google.gson.Gson.assertFullConsumption(object, jsonReader);\n            return com.google.gson.internal.Primitives.wrap(classOfT).cast(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"in":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1291","type":"CtBinaryOperatorImpl","sourcecode":"(limit) != (pos)"},"failures":[],"tindex":"2a075953-3e4c-11e6-9e32-99dc479129fe","method":{"position":"com.google.gson.stream.JsonReader:1268","type":"CtMethodImpl","sourcecode":"private void push(int newTop) {\n    if (newTop != newTop) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((int) == (int[].int)) {\n                int[] int[] = new int[(int) * 2];\n                int[] int[] = new int[(int) * 2];\n                java.lang.String[] java.lang.String[] = new java.lang.String[(int) * 2];\n                java.lang.System.arraycopy(int[], 0, newStack, 0, int);\n                java.lang.System.arraycopy(int[], 0, newPathIndices, 0, int);\n                java.lang.System.arraycopy(java.lang.String[], 0, newPathNames, 0, int);\n                int[] = newStack;\n                int[] = newPathIndices;\n                java.lang.String[] = newPathNames;\n            } \n            int[][((int)++)] = newTop;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pos":"newTop","limit":"newTop"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:137","type":"CtBinaryOperatorImpl","sourcecode":"element instanceof com.google.gson.JsonObject"},"failures":[],"tindex":"2a075954-3e4c-11e6-9e32-5dbf3a4a803f","method":{"position":"com.google.gson.Gson:617","type":"CtMethodImpl","sourcecode":"public java.lang.String toJson(com.google.gson.JsonElement jsonElement) {\n    if (jsonElement instanceof com.google.gson.JsonObject) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (jsonElement.isNumber()) {\n                {\n                    java.io.StringWriter java.io.StringWriter = new java.io.StringWriter();\n                    toJson(jsonElement, writer);\n                    return writer.toString();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"jsonElement"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:720","type":"CtBinaryOperatorImpl","sourcecode":"json == null"},"failures":[],"tindex":"2a078065-3e4c-11e6-9e32-69675ed9c855","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:43","type":"CtMethodImpl","sourcecode":"public int compare(java.lang.Comparable a, java.lang.Comparable b) {\n    if (a == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (a != null) {\n                {\n                    return a.compareTo(b);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"a"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:364","type":"CtBinaryOperatorImpl","sourcecode":"delta == 2"},"failures":[],"tindex":"2a078066-3e4c-11e6-9e32-7b620eda5084","method":{"position":"com.google.gson.stream.JsonWriter:353","type":"CtMethodImpl","sourcecode":"private void push(int newTop) {\n    if (newTop == 2) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239295076/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((int) == (int[].int)) {\n                int[] int[] = new int[(int) * 2];\n                java.lang.System.arraycopy(int[], 0, newStack, 0, int);\n                int[] = newStack;\n            } \n            int[][((int)++)] = newTop;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delta":"newTop"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":95,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}