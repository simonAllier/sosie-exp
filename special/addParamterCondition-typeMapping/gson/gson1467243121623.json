{"failureDictionary":{"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":157,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":89,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":113,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":156,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":195,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":83,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":96,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":176,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":183,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":101,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":140,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":185,"com.google.gson.functional.ObjectTest.testSingletonLists":159,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":80,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":141,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":114,"com.google.gson.stream.JsonWriterTest.testStrings":5,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":92,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":32,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":167,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeRecursive":34,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":64,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":60,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":99,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":52,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":196,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":181,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":104,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":193,"com.google.gson.functional.EnumTest.testEnumCaseMapping":100,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":15,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":112,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":137,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":70,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":25,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":95,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":180,"com.google.gson.functional.MapTest.testGeneralMapField":152,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":170,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":105,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":128,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":84,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":39,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":65,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":132,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":191,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":9,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":14,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":184,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":90,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":133,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":194,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":49,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":47,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":125,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":166,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":136,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":54,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":17,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":138,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":48,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":61,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":155,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":192,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":30,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":197,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":55,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":82,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":151,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":78,"com.google.gson.functional.MapTest.testInterfaceTypeMap":150,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":107,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":57,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":31,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":98,"com.google.gson.functional.EnumTest.testEnumSet":94,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":63,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":44,"com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithNestedWildcards":0,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":66,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":145,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":190,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":164,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":8,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":93,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":179,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":188,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":42,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":161,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":56,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":24,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":168,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":27,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":50,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":59,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":162,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":28,"com.google.gson.functional.MapTest.testSerializeMaps":144,"com.google.gson.functional.MapTest.testComplexKeysSerialization":154,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":182,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":81,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":18,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":172,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":41,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":121,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":173,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":87,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":186,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":147,"com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithBasicWildcards":2,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":74,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":134,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":177,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":11,"com.google.gson.functional.MapTest.testRawMapSerialization":153,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":106,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize":33,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":67,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":7,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":118,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":75,"com.google.gson.functional.CollectionTest.testQueueSerialization":178,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnValue":3,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":91,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":123,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":37,"com.google.gson.functional.MapTest.testMapOfMapSerialization":149,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":130,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":22,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":115,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":127,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":16,"com.google.gson.functional.MapTest.testMapWithQuotes":148,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":68,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":43,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":110,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":116,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":200,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":21,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":76,"com.google.gson.functional.MapTest.testMapSubclassSerialization":143,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":187,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":72,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":102,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":129,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":12,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":108,"com.google.gson.functional.EnumTest.testEnumSubclass":97,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":69,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":35,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":73,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":45,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":62,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":85,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":122,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":53,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":103,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":158,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":199,"com.google.gson.functional.ObjectTest.testNestedSerialization":165,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":26,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":131,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":135,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":86,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":175,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":139,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":10,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":13,"com.google.gson.stream.JsonWriterTest.testUnicodeLineBreaksEscaped":6,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":124,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":163,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":171,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":46,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":160,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":117,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":119,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":88,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":126,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":174,"com.google.gson.functional.StringTest.testStringValueSerialization":120,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":36,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":19,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":40,"com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithTypeParameters":1,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":23,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":20,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":79,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":29,"com.google.gson.stream.JsonWriterTest.testWrongTopLevelType":4,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":77,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":169,"com.google.gson.JsonPrimitiveTest.testValidJsonOnToString":198,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":58,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":146,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":142,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":111,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":189,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":38,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":51,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":109,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":71},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl","sourcecode":"field.isSynthetic()"},"failures":[],"tindex":"ae260898-3e51-11e6-b6ff-bfc2696041a0","method":{"position":"com.google.gson.FieldNamingPolicy:37","type":"CtMethodImpl","sourcecode":"public java.lang.String translateName(java.lang.reflect.Field f) {\n    if (f.isSynthetic()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973029/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return f.getName();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"f"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.JsonElement:87","type":"CtInvocationImpl","sourcecode":"isJsonObject()"},"failures":[],"tindex":"ae2656b9-3e51-11e6-b6ff-550cc80060ef","method":{"position":"com.google.gson.Gson:576","type":"CtMethodImpl","sourcecode":"public void toJson(java.lang.Object src, java.lang.reflect.Type typeOfSrc, java.lang.Appendable writer) throws com.google.gson.JsonIOException {\n    try {\n        com.google.gson.stream.JsonWriter com.google.gson.stream.JsonWriter = newJsonWriter(com.google.gson.internal.Streams.writerForAppendable(writer));\n        toJson(src, typeOfSrc, jsonWriter);\n    } catch (java.io.IOException e) {\n        throw new com.google.gson.JsonIOException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:192","type":"CtInvocationImpl","sourcecode":"to.equals(from)"},"failures":[0,1,2],"tindex":"ae267dca-3e51-11e6-b6ff-a35311e2a005","method":{"position":"com.google.gson.reflect.TypeToken:185","type":"CtMethodImpl","sourcecode":"private static boolean isAssignableFrom(java.lang.reflect.Type from, java.lang.reflect.ParameterizedType to, java.util.Map<java.lang.String, java.lang.reflect.Type> typeVarMap) {\n    if (from.equals(from)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973029/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (from == null) {\n                return false;\n            } \n            if (to.equals(from)) {\n                return true;\n            } \n            java.lang.Class<?> java.lang.Class<?> = com.google.gson.internal.$Gson$Types.getRawType(from);\n            java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = null;\n            if (from instanceof java.lang.reflect.ParameterizedType) {\n                ptype = ((java.lang.reflect.ParameterizedType)(from));\n            } \n            if (ptype != null) {\n                java.lang.reflect.Type[] java.lang.reflect.Type[] = ptype.getActualTypeArguments();\n                java.lang.reflect.TypeVariable<?>[] java.lang.reflect.TypeVariable<?>[] = clazz.getTypeParameters();\n                for (int int = 0 ; i < (tArgs.int) ; i++) {\n                    java.lang.reflect.Type java.lang.reflect.Type = tArgs[i];\n                    java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = tParams[i];\n                    while (arg instanceof java.lang.reflect.TypeVariable<?>) {\n                        java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(arg));\n                        arg = typeVarMap.get(v.getName());\n                    }\n                    typeVarMap.put(var.getName(), arg);\n                }\n                if (com.google.gson.reflect.TypeToken.typeEquals(ptype, to, typeVarMap)) {\n                    return true;\n                } \n            } \n            for (java.lang.reflect.Type java.lang.reflect.Type : clazz.getGenericInterfaces()) {\n                if (com.google.gson.reflect.TypeToken.isAssignableFrom(itype, to, new java.util.HashMap<java.lang.String, java.lang.reflect.Type>(typeVarMap))) {\n                    return true;\n                } \n            }\n            java.lang.reflect.Type java.lang.reflect.Type = clazz.getGenericSuperclass();\n            return com.google.gson.reflect.TypeToken.isAssignableFrom(sType, to, new java.util.HashMap<java.lang.String, java.lang.reflect.Type>(typeVarMap));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"from","to":"from"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:145","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200],"tindex":"ae26a4db-3e51-11e6-b6ff-8765a90d563a","method":{"position":"com.google.gson.stream.JsonWriter:413","type":"CtMethodImpl","sourcecode":"public com.google.gson.stream.JsonWriter value(java.lang.String value) throws java.io.IOException {\n    if (value == null) {\n        {\n            if (value == null) {\n                return nullValue();\n            } \n            writeDeferredName();\n            beforeValue(false);\n            string(value);\n            return com.google.gson.stream.JsonWriter.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973029/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"ae26a4dc-3e51-11e6-b6ff-d5fabcb39882","method":{"position":"com.google.gson.internal.bind.CollectionTypeAdapterFactory:72","type":"CtMethodImpl","sourcecode":"public java.util.Collection<E> read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    java.util.Collection<E> java.util.Collection<E> = com.google.gson.internal.ObjectConstructor<? extends java.util.Collection<E>>.construct();\n    in.beginArray();\n    while (in.hasNext()) {\n        E E = com.google.gson.TypeAdapter<E>.read(in);\n        collection.add(instance);\n    }\n    in.endArray();\n    return collection;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl","sourcecode":"field.isSynthetic()"},"failures":[],"tindex":"ae26cbed-3e51-11e6-b6ff-49d2cfa6d692","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:70","type":"CtMethodImpl","sourcecode":"static java.lang.String getFieldName(com.google.gson.FieldNamingStrategy fieldNamingPolicy, java.lang.reflect.Field f) {\n    if (f.isSynthetic()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242973029/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.annotations.SerializedName com.google.gson.annotations.SerializedName = f.getAnnotation(com.google.gson.annotations.SerializedName.com.google.gson.annotations.SerializedName.java.lang.Class);\n            return serializedName == null ? fieldNamingPolicy.translateName(f) : serializedName.value();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"f"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0}],"header":{"groupId":"com.google.code.gson","transformationCount":6,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}