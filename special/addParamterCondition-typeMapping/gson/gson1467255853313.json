{"failureDictionary":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":19,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":347,"com.google.gson.functional.StringTest.testStringValueDeserialization":565,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":12,"com.google.gson.functional.PrimitiveTest.testBigIntegerDeserialization":513,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullDeserialization":555,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":57,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":421,"com.google.gson.MixedStreamTest.testWriteLenient":362,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":389,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":404,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":321,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":8,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":82,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":92,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":403,"com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization":516,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":56,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":289,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":229,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerDeserialization":501,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":376,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":396,"com.google.gson.functional.ObjectTest.testSingletonLists":194,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":290,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":317,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":348,"com.google.gson.functional.PrimitiveTest.testNumberDeserialization":497,"com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue":451,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator":491,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":45,"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":488,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization":560,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":411,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":42,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":445,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeRecursive":478,"com.google.gson.functional.StringTest.testEscapedBackslashInStringDeserialization":573,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":0,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":247,"com.google.gson.functional.PrimitiveTest.testBigDecimalNoFractAsStringRepresentationDeserialization":514,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":393,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":32,"com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization":494,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":243,"com.google.gson.functional.MapTest.testMapOfMapDeserialization":469,"com.google.gson.functional.EnumTest.testEnumCaseMapping":55,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":346,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":365,"com.google.gson.functional.JsonTreeTest.testToJsonTree":28,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":252,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveDeserialization":561,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":18,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":73,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":300,"com.google.gson.functional.PrimitiveTest.testUnquotedStringDeserializationFails":498,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferDeserialization":553,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":145,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":89,"com.google.gson.functional.ObjectTest.testNullDeserialization":527,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":217,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringDeserialization":571,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":409,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":39,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization":184,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":203,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":241,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":137,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":414,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":38,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":227,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":331,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectDeserialization":545,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":141,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionDeserialization":521,"com.google.gson.functional.PrimitiveTest.testDoubleInfinityDeserialization":520,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization":559,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":176,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":170,"com.google.gson.functional.PrimitiveTest.testFloatInfinityDeserialization":523,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArrayDeserialization":548,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":209,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":277,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":316,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityDeserialization":507,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":390,"com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization":465,"com.google.gson.functional.PrimitiveTest.testDoubleNoFractAsStringRepresentationDeserialization":511,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":80,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountryVariant":552,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":24,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":387,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":131,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":177,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsDouble":512,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":208,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":273,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":37,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":339,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":407,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":61,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":162,"com.google.gson.functional.MapTest.testMapDeserializationWithNullValue":471,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":438,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":153,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":67,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":528,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":489,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings":453,"com.google.gson.functional.MapTest.testNumberKeyDeserialization":474,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":320,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":530,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":311,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":425,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":136,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":424,"com.google.gson.functional.CollectionTest.testSetDeserialization":386,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":230,"com.google.gson.functional.EnumTest.testEnumSet":49,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":199,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersEscapedDeserialization":542,"com.google.gson.functional.PrimitiveTest.testBigDecimalAsStringRepresentationDeserialization":508,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":68,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":99,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":115,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampDeserialization":550,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":204,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":31,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":66,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":427,"com.google.gson.functional.PrimitiveTest.testDeserializingDecimalPointValueZeroSucceeds":518,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":48,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":238,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":180,"com.google.gson.functional.MapTest.testHashMapDeserialization":459,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesDeserialization":476,"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":340,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization":531,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":74,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":261,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":22,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":454,"com.google.gson.functional.MapTest.testSortedMap":470,"com.google.gson.functional.MapTest.testMapSerialization":120,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":263,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":428,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedDeserialization":510,"com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization":537,"com.google.gson.functional.MapTest.testSerializeMaps":114,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":344,"com.google.gson.functional.MapTest.testComplexKeysSerialization":129,"com.google.gson.functional.InternationalizationTest.testStringsWithRawChineseCharactersDeserialization":541,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsFalse":1,"com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader":473,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":284,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":219,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":372,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":152,"com.google.gson.internal.LinkedTreeMapTest.testRemoveRootDoesNotDoubleUnlink":367,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":384,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriter":46,"com.google.gson.functional.EnumTest.testTopLevelEnumDeserialization":485,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":250,"com.google.gson.JsonObjectTest.testAddingAndRemovingObjectProperties":368,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":58,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsDeserialization":526,"com.google.gson.functional.MapTest.testStringKeyDeserialization":472,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsDeserialization":538,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":101,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":188,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":132,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesDeserialization":500,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":233,"com.google.gson.functional.PrettyPrintingTest.testMap":248,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":85,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":264,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":297,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls":483,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":41,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysDeserialization":539,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":352,"com.google.gson.functional.StringTest.testStringWithEscapedSlashDeserialization":566,"com.google.gson.functional.CollectionTest.testQueueSerialization":86,"com.google.gson.functional.MapTest.testMapSerializationEmpty":130,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":308,"com.google.gson.functional.MapTest.testMapOfMapSerialization":119,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":168,"com.google.gson.JavaSerializationTest.testMapIsSerializable":452,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountry":554,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":173,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":225,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":107,"com.google.gson.internal.bind.JsonTreeWriterTest.testStrictBoxedNansAndInfinities":30,"com.google.gson.functional.FieldNamingTest.testIdentity":345,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":349,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":455,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":265,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":416,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":27,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":60,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":97,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":193,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalDeserialization":495,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":33,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":134,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":350,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization":171,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":422,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeDeserialization":558,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":36,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidDeserialization":551,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":224,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":309,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullJsonElementSerialization":330,"com.google.gson.functional.MapTest.testMapDeserializationEmpty":457,"com.google.gson.functional.MapTest.testMapSubclassSerialization":113,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":187,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":258,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":379,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersDeserialization":543,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":235,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":332,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":359,"com.google.gson.functional.PrimitiveTest.testBigDecimalDeserialization":505,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":391,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguage":546,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":371,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":65,"com.google.gson.functional.EnumTest.testEnumSubclass":52,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization":174,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":43,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":410,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization":158,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":133,"com.google.gson.functional.PrimitiveTest.testFloatNaNDeserialization":515,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":100,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":381,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":214,"com.google.gson.InnerClassExclusionStrategyTest.testIncludeStaticNestedClassObject":480,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":423,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":14,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":35,"com.google.gson.functional.ArrayTest.testArrayOfNullDeserialization":535,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization":169,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":374,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":325,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":402,"com.google.gson.MixedStreamTest.testWriteNulls":360,"com.google.gson.functional.MapTest.testMapSubclassDeserialization":458,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":279,"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":456,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":275,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":218,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":375,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":104,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":195,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":397,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":288,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":435,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":529,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":122,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":351,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":226,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":72,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":186,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":327,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":255,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":161,"com.google.gson.functional.ArrayTest.testArrayOfStringsDeserialization":540,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":285,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":165,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":223,"com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization":181,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":314,"com.google.gson.functional.MapTest.testMapDeserialization":464,"com.google.gson.functional.ArrayTest.testEmptyArrayDeserialization":534,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":310,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":253,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":112,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":395,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":116,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":156,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":147,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":144,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":385,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":26,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":442,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization":202,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":210,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":76,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":236,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":15,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":301,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":377,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":81,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":213,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":121,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":249,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":6,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":329,"com.google.gson.functional.PrimitiveTest.testShortSerialization":185,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":149,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedDeserialization":517,"com.google.gson.internal.bind.JsonTreeWriterTest.testStrictNansAndInfinities":29,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":245,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedDeserialization":506,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":178,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":303,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsBigDecimal":499,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":341,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":51,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":84,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":257,"com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues":461,"com.google.gson.functional.PrimitiveTest.testLargeDoubleDeserialization":503,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":96,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":189,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":369,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":398,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization":557,"com.google.gson.internal.bind.JsonTreeWriterTest.testObject":2,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":450,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization":192,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":59,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":211,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":388,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":400,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsTrue":4,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":293,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":333,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":401,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":440,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":102,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":419,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":406,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":54,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":77,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":291,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":90,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":443,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":231,"com.google.gson.InnerClassExclusionStrategyTest.testExcludeInnerClassField":479,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives":490,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":143,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":148,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":315,"com.google.gson.InnerClassExclusionStrategyTest.testExcludeInnerClassObject":482,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":23,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":305,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":150,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization":556,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":16,"com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral":519,"com.google.gson.functional.PrimitiveTest.testNumberSerialization":172,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":190,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":110,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":50,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":146,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":433,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":429,"com.google.gson.functional.MapTest.testGeneralMapField":126,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":405,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":272,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":135,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":232,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":281,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":322,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":124,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":140,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":160,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":294,"com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization":179,"com.google.gson.MixedStreamTest.testReadMixedStreamed":449,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":166,"com.google.gson.functional.MapTest.testBooleanKeyDeserialization":466,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlDeserialization":549,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":34,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":93,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":439,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":437,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":244,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":426,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":313,"com.google.gson.functional.MapTest.testDeerializeMapOfMaps":467,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":337,"com.google.gson.functional.MapTest.testMapDeserializationWithNullKey":460,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":105,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":191,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":269,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":335,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedObject":3,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":312,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":266,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserialization":544,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization":493,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":109,"com.google.gson.functional.ObjectTest.testNestedDeserialization":420,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":207,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":215,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":431,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":13,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":242,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":287,"com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys":468,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":486,"com.google.gson.functional.StringTest.testSingleQuoteInStringDeserialization":567,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":64,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":183,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":380,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":11,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":392,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":95,"com.google.gson.functional.ObjectTest.testNullSerialization":200,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":79,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization":564,"com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey":462,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":125,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":159,"com.google.gson.functional.MapTest.testInterfaceTypeMap":123,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization":536,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":234,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":155,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":53,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":246,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails":237,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":383,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":295,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":240,"com.google.gson.MixedStreamTest.testWriteClosed":364,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":88,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":432,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":196,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":399,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateDeserialization":562,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":69,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":154,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":21,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":212,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":286,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":328,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":157,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":197,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":87,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":447,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":336,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":382,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":91,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":318,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":532,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":221,"com.google.gson.functional.PrimitiveTest.testDoubleAsStringRepresentationDeserialization":524,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":164,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":25,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderDeserialization":547,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":220,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":270,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":20,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":167,"com.google.gson.functional.PrimitiveTest.testByteDeserialization":509,"com.google.gson.InnerClassExclusionStrategyTest.testIncludeStaticNestedClassField":481,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringDeserialization":570,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization":262,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":326,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":448,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":117,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":415,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":307,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":142,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":418,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":83,"com.google.gson.functional.MapTest.testRawMapSerialization":128,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":358,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize":477,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":75,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":205,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":430,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":151,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":5,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapNoTypeSerialization":7,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":44,"com.google.gson.functional.PrimitiveTest.testByteSerialization":182,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":274,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":356,"com.google.gson.ObjectTypeAdapterTest.testSerialize":370,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":138,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":9,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":280,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":342,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":70,"com.google.gson.functional.StringTest.testAssignmentCharDeserialization":568,"com.google.gson.functional.MapTest.testMapWithQuotes":118,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":298,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatDeserialization":502,"com.google.gson.functional.StringTest.testEscapingQuotesInStringDeserialization":569,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":98,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":475,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":108,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":260,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":296,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":228,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":492,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":62,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":417,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":254,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":175,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":304,"com.google.gson.functional.ObjectTest.testEmptyStringDeserialization":525,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":283,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":408,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":323,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":299,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":10,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":306,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":334,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriterAndSerializeNulls":47,"com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed":487,"com.google.gson.functional.ArrayTest.testSingleStringArrayDeserialization":533,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":63,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":271,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":324,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":78,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":267,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization":563,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":259,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReader":484,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":378,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsFloat":496,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":106,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":412,"com.google.gson.functional.ObjectTest.testNestedSerialization":206,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":111,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":139,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":163,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringDeserialization":572,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":268,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":127,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":256,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":292,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":40,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":363,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":201,"com.google.gson.functional.PrimitiveTest.testBooleanDeserialization":522,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":17,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":436,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":444,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":366,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":413,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":441,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":446,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":353,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":278,"com.google.gson.functional.CollectionTest.testSetSerialization":94,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":394,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":103,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":251,"com.google.gson.functional.StringTest.testStringValueSerialization":354,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":355,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":222,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":373,"com.google.gson.MixedStreamTest.testWriteInvalidState":361,"com.google.gson.functional.ObjectTest.testJsonObjectSerialization":198,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":282,"com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero":504,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":338,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":302,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":343,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":216,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":434,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":239,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":71,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullSerialization":319,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":357,"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":463,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":276},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1175","type":"CtBinaryOperatorImpl","sourcecode":"p == (com.google.gson.stream.JsonReader.PEEKED_LONG)"},"failures":[],"tindex":"52d3c174-3e6f-11e6-8416-d5e21d4dc587","method":{"position":"com.google.gson.internal.Streams:108","type":"CtMethodImpl","sourcecode":"public char charAt(int i) {\n    if (i == i) {\n        {\n            return char[][i];\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"i","com.google.gson.stream.JsonReader.PEEKED_LONG":"i"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:188","type":"CtBinaryOperatorImpl","sourcecode":"a instanceof java.lang.reflect.WildcardType"},"failures":[0],"tindex":"52d40f95-3e6f-11e6-8416-ddcccfed4dd6","method":{"position":"com.google.gson.Gson:136","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement serialize(java.lang.Object src, java.lang.reflect.Type typeOfSrc) {\n    if (typeOfSrc instanceof java.lang.reflect.WildcardType) {\n        {\n            return toJsonTree(src, typeOfSrc);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"typeOfSrc"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:137","type":"CtBinaryOperatorImpl","sourcecode":"element instanceof com.google.gson.JsonObject"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,0,19,20,21,22,23,24,25,26,27,28],"tindex":"52d40f96-3e6f-11e6-8416-535428b903c8","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:75","type":"CtMethodImpl","sourcecode":"private void put(com.google.gson.JsonElement value) {\n    if (value instanceof com.google.gson.JsonArray) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value instanceof com.google.gson.JsonObject) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((java.lang.String) != null) {\n                        if ((!(value.isJsonNull())) || (getSerializeNulls())) {\n                            com.google.gson.JsonObject com.google.gson.JsonObject = ((com.google.gson.JsonObject)(peek()));\n                            object.add(java.lang.String, value);\n                        } \n                        java.lang.String = null;\n                    } else if (java.util.List<com.google.gson.JsonElement>.isEmpty()) {\n                        com.google.gson.JsonElement = value;\n                    } else {\n                        com.google.gson.JsonElement com.google.gson.JsonElement = peek();\n                        if (element instanceof com.google.gson.JsonArray) {\n                            ((com.google.gson.JsonArray)(element)).add(value);\n                        } else {\n                            throw new java.lang.IllegalStateException();\n                        }\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:137","type":"CtBinaryOperatorImpl","sourcecode":"(!serialize) && (!deserialize)"},"failures":[29,30,31,32,33,34,5,6,7,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,8,9,97,10,11,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,12,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,13,14,15,153,154,155,16,17,156,157,18,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,0,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,19,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,20,21,289,290,291,22,23,24,25,26,27,28,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366],"tindex":"52d436a7-3e6f-11e6-8416-0145f1322a5c","method":{"position":"com.google.gson.stream.JsonWriter:234","type":"CtMethodImpl","sourcecode":"public final void setLenient(boolean lenient) {\n    if (lenient) {\n        {\n            if ((!lenient) && (!lenient)) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    com.google.gson.stream.JsonWriter.this.boolean = lenient;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"serialize":"lenient","deserialize":"lenient"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"52d45db8-3e6f-11e6-8416-a9f6bc432bc3","method":{"position":"com.google.gson.internal.bind.CollectionTypeAdapterFactory:72","type":"CtMethodImpl","sourcecode":"public java.util.Collection<E> read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    java.util.Collection<E> java.util.Collection<E> = com.google.gson.internal.ObjectConstructor<? extends java.util.Collection<E>>.construct();\n    in.beginArray();\n    while (in.hasNext()) {\n        E E = com.google.gson.TypeAdapter<E>.read(in);\n        collection.add(instance);\n    }\n    in.endArray();\n    return collection;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"52d484c9-3e6f-11e6-8416-bbcb183a0387","method":{"position":"com.google.gson.JsonParser:80","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader json) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException {\n    boolean boolean = json.isLenient();\n    json.setLenient(true);\n    try {\n        return com.google.gson.internal.Streams.parse(json);\n    } catch (java.lang.StackOverflowError e) {\n        throw new com.google.gson.JsonParseException(((\"Failed parsing JSON source: \" + json) + \" to Json\") , e);\n    } catch (java.lang.OutOfMemoryError e) {\n        throw new com.google.gson.JsonParseException(((\"Failed parsing JSON source: \" + json) + \" to Json\") , e);\n    } finally {\n        json.setLenient(lenient);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:417","type":"CtBinaryOperatorImpl","sourcecode":"p == (com.google.gson.stream.JsonReader.PEEKED_NONE)"},"failures":[],"tindex":"52d484ca-3e6f-11e6-8416-67e9ca06c913","method":{"position":"com.google.gson.stream.JsonWriter:324","type":"CtMethodImpl","sourcecode":"private com.google.gson.stream.JsonWriter open(int empty, java.lang.String openBracket) throws java.io.IOException {\n    if (empty == empty) {\n        {\n            beforeValue(true);\n            push(empty);\n            java.io.Writer.write(openBracket);\n            return com.google.gson.stream.JsonWriter.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"empty","com.google.gson.stream.JsonReader.PEEKED_NONE":"empty"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1118","type":"CtBinaryOperatorImpl","sourcecode":"c == '\\n'"},"failures":[321,324],"tindex":"52d484cb-3e6f-11e6-8416-e9f73793f907","method":{"position":"com.google.gson.GsonBuilder:402","type":"CtMethodImpl","sourcecode":"public com.google.gson.GsonBuilder setDateFormat(int style) {\n    if (style == '\\n') {\n        {\n            com.google.gson.GsonBuilder.this.int = style;\n            com.google.gson.GsonBuilder.this.java.lang.String = null;\n            return com.google.gson.GsonBuilder.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"style"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Streams:50","type":"CtVariableReadImpl","sourcecode":"isEmpty"},"failures":[],"tindex":"52d4abdc-3e6f-11e6-8416-03b89ea27543","method":{"position":"com.google.gson.stream.JsonWriter:234","type":"CtMethodImpl","sourcecode":"public final void setLenient(boolean lenient) {\n    if (lenient) {\n        {\n            if ((!lenient) && (!lenient)) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    com.google.gson.stream.JsonWriter.this.boolean = lenient;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isEmpty":"lenient"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:491","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[180,365],"tindex":"52d4abdd-3e6f-11e6-8416-d14730fa18c3","method":{"position":"com.google.gson.Gson:317","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        {\n            if (value == null) {\n                out.nullValue();\n                return ;\n            } \n            out.value(value.toString());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"com.google.gson.internal.$Gson$Types:198","type":"CtBinaryOperatorImpl","sourcecode":"a instanceof java.lang.reflect.TypeVariable"},"failures":[],"tindex":"52d4abde-3e6f-11e6-8416-e56b8ddbde46","method":{"position":"com.google.gson.FieldAttributes:145","type":"CtMethodImpl","sourcecode":"java.lang.Object get(java.lang.Object instance) throws java.lang.IllegalAccessException {\n    if (instance instanceof java.lang.reflect.TypeVariable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IllegalAccessException();\n    } else {\n        {\n            return java.lang.reflect.Field.get(instance);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"instance"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.stream.JsonReader:290","type":"CtBinaryOperatorImpl","sourcecode":"in == null"},"failures":[],"tindex":"52d4d2ef-3e6f-11e6-8416-a39263638d96","method":{"position":"com.google.gson.Gson:746","type":"CtMethodImpl","sourcecode":"public <T>T fromJson(java.io.Reader json, java.lang.Class<T> classOfT) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException {\n    if (json == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    } else {\n        {\n            if (json == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new com.google.gson.JsonIOException();\n            } else {\n                {\n                    com.google.gson.stream.JsonReader com.google.gson.stream.JsonReader = new com.google.gson.stream.JsonReader(json);\n                    java.lang.Object java.lang.Object = fromJson(jsonReader, classOfT);\n                    com.google.gson.Gson.assertFullConsumption(object, jsonReader);\n                    return com.google.gson.internal.Primitives.wrap(classOfT).cast(object);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"in":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:109","type":"CtBinaryOperatorImpl","sourcecode":"o instanceof com.google.gson.JsonPrimitive"},"failures":[],"tindex":"52d4d2f0-3e6f-11e6-8416-1fc4751b6cbf","method":{"position":"com.google.gson.internal.$Gson$Types:213","type":"CtMethodImpl","sourcecode":"private static int hashCodeOrZero(java.lang.Object o) {\n    return o != null ? o.hashCode() : 0;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"52d4d2f1-3e6f-11e6-8416-c527204b163d","method":{"position":"com.google.gson.internal.bind.CollectionTypeAdapterFactory:72","type":"CtMethodImpl","sourcecode":"public java.util.Collection<E> read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    java.util.Collection<E> java.util.Collection<E> = com.google.gson.internal.ObjectConstructor<? extends java.util.Collection<E>>.construct();\n    in.beginArray();\n    while (in.hasNext()) {\n        E E = com.google.gson.TypeAdapter<E>.read(in);\n        collection.add(instance);\n    }\n    in.endArray();\n    return collection;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"52d4d2f2-3e6f-11e6-8416-cf877c476476","method":{"position":"com.google.gson.internal.bind.TypeAdapters:338","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Character value) throws java.io.IOException {\n    out.value((value == null ? null : java.lang.String.valueOf(value)));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:261","type":"CtBinaryOperatorImpl","sourcecode":"left != null"},"failures":[367,368,369],"tindex":"52d4fa03-3e6f-11e6-8416-25cbb1006f24","method":{"position":"com.google.gson.internal.LinkedTreeMap:284","type":"CtMethodImpl","sourcecode":"private void replaceInParent(com.google.gson.internal.LinkedTreeMap.Node<K, V> node, com.google.gson.internal.LinkedTreeMap.Node<K, V> replacement) {\n    if (replacement != null) {\n        {\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = node.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            node.com.google.gson.internal.LinkedTreeMap.Node<K, V> = null;\n            if (replacement != null) {\n                replacement.com.google.gson.internal.LinkedTreeMap.Node<K, V> = parent;\n            } \n            if (parent != null) {\n                if ((parent.com.google.gson.internal.LinkedTreeMap.Node<K, V>) == node) {\n                    parent.com.google.gson.internal.LinkedTreeMap.Node<K, V> = replacement;\n                } else {\n                    assert (parent.com.google.gson.internal.LinkedTreeMap.Node<K, V>) == node;\n                    parent.com.google.gson.internal.LinkedTreeMap.Node<K, V> = replacement;\n                }\n            } else {\n                com.google.gson.internal.LinkedTreeMap.Node<K, V> = replacement;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"left":"replacement"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:167","type":"CtBinaryOperatorImpl","sourcecode":"a instanceof java.lang.reflect.ParameterizedType"},"failures":[31,35,36,370,37,371,45,48,53,372,57,58,373,374,60,61,62,375,64,65,66,67,68,376,69,70,71,377,72,378,379,73,74,75,76,380,77,78,79,381,382,80,383,81,384,385,82,84,90,386,92,94,8,9,10,11,387,388,100,102,103,110,111,389,390,391,369,392,117,393,123,125,126,129,12,133,135,394,136,137,138,141,142,143,395,396,146,147,397,148,150,152,398,13,14,15,153,154,155,16,17,399,400,156,157,18,401,193,194,402,403,195,404,405,196,406,407,197,408,199,409,201,410,411,204,412,205,206,413,208,414,415,209,416,210,211,417,212,418,419,420,421,213,422,423,214,0,216,217,218,219,424,220,221,222,223,224,225,226,228,229,230,235,425,426,427,249,250,254,428,255,429,256,430,257,258,259,260,261,19,263,431,264,432,433,265,266,267,434,269,281,435,282,285,286,287,288,20,21,436,437,290,438,22,439,23,24,25,26,27,28,292,440,441,442,443,303,444,313,323,328,333,445,446,334,335,447,448,336,338,339,341,342,343,344,345,355,358,359,361,364,449,450],"tindex":"52d4fa04-3e6f-11e6-8416-eb96a0d8dd49","method":{"position":"com.google.gson.internal.Primitives:69","type":"CtMethodImpl","sourcecode":"public static boolean isPrimitive(java.lang.reflect.Type type) {\n    if (type instanceof java.lang.reflect.ParameterizedType) {\n        {\n            return com.google.gson.internal.Primitives.com.google.gson.internal.Primitives.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.containsKey(type);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"type"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.GsonBuilder:452","type":"CtBinaryOperatorImpl","sourcecode":"typeAdapter instanceof com.google.gson.InstanceCreator<?>"},"failures":[],"tindex":"52d4fa05-3e6f-11e6-8416-af9cf5f3a6b1","method":{"position":"com.google.gson.JsonPrimitive:305","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object obj) {\n    if (obj instanceof com.google.gson.InstanceCreator<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((com.google.gson.JsonPrimitive.this) == obj) {\n                return true;\n            } \n            if ((obj == null) || ((getClass()) != (obj.getClass()))) {\n                return false;\n            } \n            com.google.gson.JsonPrimitive com.google.gson.JsonPrimitive = ((com.google.gson.JsonPrimitive)(obj));\n            if ((java.lang.Object) == null) {\n                return (other.java.lang.Object) == null;\n            } \n            if ((com.google.gson.JsonPrimitive.isIntegral(com.google.gson.JsonPrimitive.this)) && (com.google.gson.JsonPrimitive.isIntegral(other))) {\n                return (getAsNumber().longValue()) == (other.getAsNumber().longValue());\n            } \n            if (((java.lang.Object) instanceof java.lang.Number) && ((other.java.lang.Object) instanceof java.lang.Number)) {\n                double double = getAsNumber().doubleValue();\n                double double = other.getAsNumber().doubleValue();\n                return (a == b) || ((java.lang.Double.isNaN(a)) && (java.lang.Double.isNaN(b)));\n            } \n            return java.lang.Object.equals(other.java.lang.Object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeAdapter":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"52d52116-3e6f-11e6-8416-bf332ade1a67","method":{"position":"com.google.gson.internal.bind.TypeAdapters:245","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    out.value(value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"52d52117-3e6f-11e6-8416-3ff31f620993","method":{"position":"com.google.gson.internal.bind.TypeAdapters:63","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Class value) throws java.io.IOException {\n    if (value == null) {\n        out.nullValue();\n    } else {\n        throw new java.lang.UnsupportedOperationException(((\"Attempted to serialize java.lang.Class: \" + (value.getName())) + \". Forgot to register a type adapter?\"));\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:204","type":"CtBinaryOperatorImpl","sourcecode":"ptype != null"},"failures":[],"tindex":"52d52118-3e6f-11e6-8416-990cdcd2422e","method":{"position":"com.google.gson.internal.$Gson$Types:322","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Type resolve(java.lang.reflect.Type context, java.lang.Class<?> contextRawType, java.lang.reflect.Type toResolve) {\n    while (true) {\n        if (toResolve instanceof java.lang.reflect.TypeVariable) {\n            java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(toResolve));\n            toResolve = com.google.gson.internal.$Gson$Types.resolveTypeVariable(context, contextRawType, typeVariable);\n            if (toResolve == typeVariable) {\n                return toResolve;\n            } \n        } else if ((toResolve instanceof java.lang.Class) && (((java.lang.Class<?>)(toResolve)).isArray())) {\n            java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(toResolve));\n            java.lang.reflect.Type java.lang.reflect.Type = original.getComponentType();\n            java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.resolve(context, contextRawType, componentType);\n            return componentType == newComponentType ? original : com.google.gson.internal.$Gson$Types.arrayOf(newComponentType);\n        } else if (toResolve instanceof java.lang.reflect.GenericArrayType) {\n            java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(toResolve));\n            java.lang.reflect.Type java.lang.reflect.Type = original.getGenericComponentType();\n            java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.resolve(context, contextRawType, componentType);\n            return componentType == newComponentType ? original : com.google.gson.internal.$Gson$Types.arrayOf(newComponentType);\n        } else if (toResolve instanceof java.lang.reflect.ParameterizedType) {\n            java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(toResolve));\n            java.lang.reflect.Type java.lang.reflect.Type = original.getOwnerType();\n            java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.resolve(context, contextRawType, ownerType);\n            boolean boolean = newOwnerType != ownerType;\n            java.lang.reflect.Type[] java.lang.reflect.Type[] = original.getActualTypeArguments();\n            for (int int = 0, int int = args.int ; t < length ; t++) {\n                java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.resolve(context, contextRawType, args[t]);\n                if (resolvedTypeArgument != (args[t])) {\n                    if (!changed) {\n                        args = args.clone();\n                        changed = true;\n                    } \n                    args[t] = resolvedTypeArgument;\n                } \n            }\n            return changed ? com.google.gson.internal.$Gson$Types.newParameterizedTypeWithOwner(newOwnerType, original.getRawType(), args) : original;\n        } else if (toResolve instanceof java.lang.reflect.WildcardType) {\n            java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(toResolve));\n            java.lang.reflect.Type[] java.lang.reflect.Type[] = original.getLowerBounds();\n            java.lang.reflect.Type[] java.lang.reflect.Type[] = original.getUpperBounds();\n            if ((originalLowerBound.int) == 1) {\n                java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.resolve(context, contextRawType, originalLowerBound[0]);\n                if (lowerBound != (originalLowerBound[0])) {\n                    return com.google.gson.internal.$Gson$Types.supertypeOf(lowerBound);\n                } \n            } else if ((originalUpperBound.int) == 1) {\n                java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.resolve(context, contextRawType, originalUpperBound[0]);\n                if (upperBound != (originalUpperBound[0])) {\n                    return com.google.gson.internal.$Gson$Types.subtypeOf(upperBound);\n                } \n            } \n            return original;\n        } else {\n            return toResolve;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ptype":"context"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.ConstructorConstructor:181","type":"CtBinaryOperatorImpl","sourcecode":"(type instanceof java.lang.reflect.ParameterizedType) && (!(java.lang.String.class.isAssignableFrom(com.google.gson.reflect.TypeToken.get(((java.lang.reflect.ParameterizedType)(type)).getActualTypeArguments()[0]).getRawType())))"},"failures":[],"tindex":"52d54829-3e6f-11e6-8416-7b5b8a281ee6","method":{"position":"com.google.gson.internal.$Gson$Types:287","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type context, java.lang.Class<?> contextRawType) {\n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.getSupertype(context, contextRawType, java.util.Collection.java.util.Collection.java.lang.Class);\n    if (collectionType instanceof java.lang.reflect.WildcardType) {\n        collectionType = ((java.lang.reflect.WildcardType)(collectionType)).getUpperBounds()[0];\n    } \n    if (collectionType instanceof java.lang.reflect.ParameterizedType) {\n        return ((java.lang.reflect.ParameterizedType)(collectionType)).getActualTypeArguments()[0];\n    } \n    return java.lang.Object.java.lang.Object.java.lang.Class;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.lang.String.class":"context","type":"context"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:360","type":"CtBinaryOperatorImpl","sourcecode":"candidate != null"},"failures":[],"tindex":"52d5482a-3e6f-11e6-8416-c9b12ff8f327","method":{"position":"com.google.gson.Gson:881","type":"CtMethodImpl","sourcecode":"public void setDelegate(com.google.gson.TypeAdapter<T> typeAdapter) {\n    if (typeAdapter != null) {\n        {\n            if ((com.google.gson.TypeAdapter<T>) != null) {\n                throw new java.lang.AssertionError();\n            } \n            com.google.gson.TypeAdapter<T> = typeAdapter;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"candidate":"typeAdapter"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:398","type":"CtBinaryOperatorImpl","sourcecode":"declaredByRaw == null"},"failures":[],"tindex":"52d5482b-3e6f-11e6-8416-79bc3f0e62f6","method":{"position":"com.google.gson.internal.Excluder:215","type":"CtMethodImpl","sourcecode":"private boolean isAnonymousOrLocal(java.lang.Class<?> clazz) {\n    if (clazz == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (!(java.lang.Enum.java.lang.Enum.java.lang.Class.isAssignableFrom(clazz))) && ((clazz.isAnonymousClass()) || (clazz.isLocalClass()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"declaredByRaw":"clazz"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:180","type":"CtUnaryOperatorImpl","sourcecode":"!(b instanceof java.lang.reflect.GenericArrayType)"},"failures":[5,6,7,451,452,453,454,455,104,109,456,457,458,459,460,113,114,461,462,115,463,116,464,117,465,466,467,468,118,119,120,469,393,121,122,470,123,124,125,126,127,128,471,129,130,472,131,473,474,132,12,211,248,249,258,259,285,288,20,21,22,475,439,23,24,303,476,320],"tindex":"52d5482c-3e6f-11e6-8416-1b1a957b4f9e","method":{"position":"com.google.gson.internal.bind.MapTypeAdapterFactory:139","type":"CtMethodImpl","sourcecode":"private com.google.gson.TypeAdapter<?> getKeyAdapter(com.google.gson.Gson context, java.lang.reflect.Type keyType) {\n    if (!(keyType instanceof java.lang.reflect.GenericArrayType)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (keyType == (boolean.boolean.java.lang.Class)) || (keyType == (java.lang.Boolean.java.lang.Boolean.java.lang.Class)) ? com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<java.lang.Boolean> : context.getAdapter(com.google.gson.reflect.TypeToken.get(keyType));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"keyType"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"52d5482d-3e6f-11e6-8416-03f47d472fda","method":{"position":"com.google.gson.internal.bind.TypeAdapters:211","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        return ((short)(in.nextInt()));\n    } catch (java.lang.NumberFormatException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:198","type":"CtBinaryOperatorImpl","sourcecode":"out == null"},"failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,380,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,12,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,0,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,22,23,24,26,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,365,366],"tindex":"52d56f3e-3e6f-11e6-8416-6b15b71997a2","method":{"position":"com.google.gson.Gson:644","type":"CtMethodImpl","sourcecode":"private com.google.gson.stream.JsonWriter newJsonWriter(java.io.Writer writer) throws java.io.IOException {\n    if (writer == null) {\n        {\n            if (boolean) {\n                writer.write(com.google.gson.Gson.com.google.gson.Gson.java.lang.String);\n            } \n            com.google.gson.stream.JsonWriter com.google.gson.stream.JsonWriter = new com.google.gson.stream.JsonWriter(writer);\n            if (boolean) {\n                jsonWriter.setIndent(\"  \");\n            } \n            jsonWriter.setSerializeNulls(boolean);\n            return jsonWriter;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"out":"writer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"52d56f3f-3e6f-11e6-8416-178646959345","method":{"position":"com.google.gson.Gson:660","type":"CtMethodImpl","sourcecode":"public void toJson(com.google.gson.JsonElement jsonElement, com.google.gson.stream.JsonWriter writer) throws com.google.gson.JsonIOException {\n    boolean boolean = writer.isLenient();\n    writer.setLenient(true);\n    boolean boolean = writer.isHtmlSafe();\n    writer.setHtmlSafe(boolean);\n    boolean boolean = writer.getSerializeNulls();\n    writer.setSerializeNulls(boolean);\n    try {\n        com.google.gson.internal.Streams.write(jsonElement, writer);\n    } catch (java.io.IOException e) {\n        throw new com.google.gson.JsonIOException(e);\n    } finally {\n        writer.setLenient(oldLenient);\n        writer.setHtmlSafe(oldHtmlSafe);\n        writer.setSerializeNulls(oldSerializeNulls);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"writer"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:86","type":"CtBinaryOperatorImpl","sourcecode":"element instanceof com.google.gson.JsonArray"},"failures":[],"tindex":"52d56f40-3e6f-11e6-8416-0b5e9ea6778e","method":{"position":"com.google.gson.internal.bind.ObjectTypeAdapter:94","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Object value) throws java.io.IOException {\n    if (value instanceof com.google.gson.JsonArray) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value == null) {\n                out.nullValue();\n                return ;\n            } \n            com.google.gson.TypeAdapter<java.lang.Object> com.google.gson.TypeAdapter<java.lang.Object> = ((com.google.gson.TypeAdapter<java.lang.Object>)(com.google.gson.Gson.getAdapter(value.getClass())));\n            if (typeAdapter instanceof com.google.gson.internal.bind.ObjectTypeAdapter) {\n                out.beginObject();\n                out.endObject();\n                return ;\n            } \n            typeAdapter.write(out, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:164","type":"CtBinaryOperatorImpl","sourcecode":"from instanceof java.lang.reflect.GenericArrayType"},"failures":[370,57,58,373,374,60,61,72,73,74,75,76,380,77,78,79,381,382,384,385,82,386,94,8,9,10,11,387,100,110,111,393,129,14,154,16,399,400,156,18,160,408,199,210,211,216,217,218,219,424,220,221,222,223,224,225,226,228,229,230,235,425,430,260,285,286,287,288,20,21,26,441,442,303,444,313,328,338,339],"tindex":"52d56f41-3e6f-11e6-8416-47d5230d9a1d","method":{"position":"com.google.gson.internal.ConstructorConstructor:200","type":"CtMethodImpl","sourcecode":"private <T>com.google.gson.internal.ObjectConstructor<T> newUnsafeAllocator(final java.lang.reflect.Type type, final java.lang.Class<? super T> rawType) {\n    if (type instanceof java.lang.reflect.GenericArrayType) {\n        {\n            return new com.google.gson.internal.ObjectConstructor<T>() {\n                private final com.google.gson.internal.UnsafeAllocator unsafeAllocator = com.google.gson.internal.UnsafeAllocator.create();\n\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                public T construct() {\n                    try {\n                        java.lang.Object java.lang.Object = com.google.gson.internal.UnsafeAllocator.newInstance(rawType);\n                        return ((T)(newInstance));\n                    } catch (java.lang.Exception e) {\n                        throw new java.lang.RuntimeException((((\"Unable to invoke no-args constructor for \" + type) + \". \") + \"Register an InstanceCreator with Gson for this type may fix this problem.\") , e);\n                    }\n                }\n            };\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"type"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"52d59652-3e6f-11e6-8416-a7b4633ea2be","method":{"position":"com.google.gson.internal.bind.TypeAdapters:501","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.UUID read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return java.util.UUID.fromString(in.nextString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"52d59653-3e6f-11e6-8416-d189a28ef591","method":{"position":"com.google.gson.internal.bind.TypeAdapters:546","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.Calendar read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    in.beginObject();\n    int int = 0;\n    int int = 0;\n    int int = 0;\n    int int = 0;\n    int int = 0;\n    int int = 0;\n    while ((in.peek()) != (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        java.lang.String java.lang.String = in.nextName();\n        int int = in.nextInt();\n        if (com.google.gson.internal.bind.TypeAdapters.23.java.lang.String.equals(name)) {\n            year = value;\n        } else if (com.google.gson.internal.bind.TypeAdapters.23.java.lang.String.equals(name)) {\n            month = value;\n        } else if (com.google.gson.internal.bind.TypeAdapters.23.java.lang.String.equals(name)) {\n            dayOfMonth = value;\n        } else if (com.google.gson.internal.bind.TypeAdapters.23.java.lang.String.equals(name)) {\n            hourOfDay = value;\n        } else if (com.google.gson.internal.bind.TypeAdapters.23.java.lang.String.equals(name)) {\n            minute = value;\n        } else if (com.google.gson.internal.bind.TypeAdapters.23.java.lang.String.equals(name)) {\n            second = value;\n        } \n    }\n    in.endObject();\n    return new java.util.GregorianCalendar(year , month , dayOfMonth , hourOfDay , minute , second);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.stream.JsonReader:290","type":"CtBinaryOperatorImpl","sourcecode":"in == null"},"failures":[],"tindex":"52d5bd64-3e6f-11e6-8416-d956dbd5b145","method":{"position":"com.google.gson.JsonParser:56","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement parse(java.io.Reader json) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException {\n    if (json == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    } else {\n        {\n            try {\n                com.google.gson.stream.JsonReader com.google.gson.stream.JsonReader = new com.google.gson.stream.JsonReader(json);\n                com.google.gson.JsonElement com.google.gson.JsonElement = parse(jsonReader);\n                if ((!(element.isJsonNull())) && ((jsonReader.peek()) != (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken))) {\n                    throw new com.google.gson.JsonSyntaxException(\"Did not consume the entire document.\");\n                } \n                return element;\n            } catch (com.google.gson.stream.MalformedJsonException e) {\n                throw new com.google.gson.JsonSyntaxException(e);\n            } catch (java.io.IOException e) {\n                throw new com.google.gson.JsonIOException(e);\n            } catch (java.lang.NumberFormatException e) {\n                throw new com.google.gson.JsonSyntaxException(e);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"in":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"52d5bd65-3e6f-11e6-8416-7392fcb9507c","method":{"position":"com.google.gson.internal.bind.TypeAdapters:406","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.StringBuilder read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return new java.lang.StringBuilder(in.nextString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:138","type":"CtBinaryOperatorImpl","sourcecode":"(peek()) != expected"},"failures":[],"tindex":"52d5bd66-3e6f-11e6-8416-f5911460d03f","method":{"position":"com.google.gson.internal.$Gson$Types:471","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object other) {\n    return (other instanceof java.lang.reflect.ParameterizedType) && (com.google.gson.internal.$Gson$Types.equals(com.google.gson.internal.$Gson$Types.ParameterizedTypeImpl.this, ((java.lang.reflect.ParameterizedType)(other))));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"expected":"other","this":"other"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:198","type":"CtBinaryOperatorImpl","sourcecode":"out == null"},"failures":[],"tindex":"52d5e477-3e6f-11e6-8416-b1d9f14f7b1b","method":{"position":"com.google.gson.TypeAdapter:140","type":"CtMethodImpl","sourcecode":"public final void toJson(java.io.Writer out, T value) throws java.io.IOException {\n    if (out == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            com.google.gson.stream.JsonWriter com.google.gson.stream.JsonWriter = new com.google.gson.stream.JsonWriter(out);\n            write(writer, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"out":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:145","type":"CtBinaryOperatorImpl","sourcecode":"previous != null"},"failures":[145],"tindex":"52d5e478-3e6f-11e6-8416-7315950229a6","method":{"position":"com.google.gson.Gson:133","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement serialize(java.lang.Object src) {\n    if (src != null) {\n        {\n            return toJsonTree(src);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"previous":"src"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:106","type":"CtBinaryOperatorImpl","sourcecode":"element instanceof com.google.gson.JsonArray"},"failures":[],"tindex":"52d5e479-3e6f-11e6-8416-f546d8e37761","method":{"position":"com.google.gson.internal.LinkedTreeMap:609","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(java.lang.Object key) {\n    if (key instanceof com.google.gson.JsonArray) {\n        {\n            return (removeInternalByKey(key)) != null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"52d5e47a-3e6f-11e6-8416-57f99b3297f0","method":{"position":"com.google.gson.Gson:895","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, T value) throws java.io.IOException {\n    if ((com.google.gson.TypeAdapter<T>) == null) {\n        throw new java.lang.IllegalStateException();\n    } \n    com.google.gson.TypeAdapter<T>.write(out, value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"52d5e47b-3e6f-11e6-8416-b91bd6e9a904","method":{"position":"com.google.gson.internal.bind.TimeTypeAdapter:63","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized void write(com.google.gson.stream.JsonWriter out, java.sql.Time value) throws java.io.IOException {\n    out.value((value == null ? null : java.text.DateFormat.format(value)));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.Gson:720","type":"CtBinaryOperatorImpl","sourcecode":"json == null"},"failures":[31,34,5,35,36,37,44,45,48,63,68,74,76,77,78,80,82,83,86,88,89,90,91,92,93,110,111,113,114,115,116,117,118,119,123,125,126,128,129,131,12,138,139,140,141,142,144,13,14,15,153,155,16,17,156,157,18,160,161,164,194,195,196,197,201,204,206,209,212,213,214,0,221,222,223,224,225,235,477,478,250,254,255,256,258,259,261,19,263,265,266,268,269,270,271,274,275,277,278,280,281,283,285,286,20,289,290,291,23,24,25,26,28,292,308,320,322,334,338,339,346,347,348,349,350,351,352,353,354,355,358,359,363],"tindex":"52d60b8c-3e6f-11e6-8416-05843565b856","method":{"position":"com.google.gson.internal.bind.TypeAdapters:361","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.String value) throws java.io.IOException {\n    if (value == null) {\n        {\n            out.value(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.internal.$Gson$Types:199","type":"CtUnaryOperatorImpl","sourcecode":"!(b instanceof java.lang.reflect.TypeVariable)"},"failures":[],"tindex":"52d60b8d-3e6f-11e6-8416-13f81ea9c56b","method":{"position":"com.google.gson.Gson:801","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic <T>T fromJson(com.google.gson.stream.JsonReader reader, java.lang.reflect.Type typeOfT) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException {\n    if (typeOfT instanceof java.lang.reflect.GenericArrayType) {\n        {\n            if (!(typeOfT instanceof java.lang.reflect.TypeVariable)) {\n                {\n                    boolean boolean = true;\n                    boolean boolean = reader.isLenient();\n                    reader.setLenient(true);\n                    try {\n                        reader.peek();\n                        isEmpty = false;\n                        com.google.gson.reflect.TypeToken<T> com.google.gson.reflect.TypeToken<T> = ((com.google.gson.reflect.TypeToken<T>)(com.google.gson.reflect.TypeToken.get(typeOfT)));\n                        com.google.gson.TypeAdapter<T> com.google.gson.TypeAdapter<T> = getAdapter(typeToken);\n                        T T = typeAdapter.read(reader);\n                        return object;\n                    } catch (java.io.EOFException e) {\n                        if (isEmpty) {\n                            return null;\n                        } \n                        throw new com.google.gson.JsonSyntaxException(e);\n                    } catch (java.lang.IllegalStateException e) {\n                        throw new com.google.gson.JsonSyntaxException(e);\n                    } catch (java.io.IOException e) {\n                        throw new com.google.gson.JsonSyntaxException(e);\n                    } finally {\n                        reader.setLenient(oldLenient);\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new com.google.gson.JsonSyntaxException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"typeOfT"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:94","type":"CtBinaryOperatorImpl","sourcecode":"primitive instanceof java.lang.Character"},"failures":[],"tindex":"52d60b8e-3e6f-11e6-8416-038317c836df","method":{"position":"com.google.gson.internal.LinkedTreeMap:570","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(java.lang.Object o) {\n    if (o instanceof java.lang.Character) {\n        {\n            return (o instanceof java.util.Map.Entry) && ((findByEntry(((java.util.Map.Entry<?, ?>)(o)))) != null);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"primitive":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:309","type":"CtBinaryOperatorImpl","sourcecode":"(obj == null) || ((getClass()) != (obj.getClass()))"},"failures":[],"tindex":"52d60b8f-3e6f-11e6-8416-d1c2074e536f","method":{"position":"com.google.gson.TreeTypeAdapter:84","type":"CtMethodImpl","sourcecode":"public static com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken<?> exactType, java.lang.Object typeAdapter) {\n    return new com.google.gson.TreeTypeAdapter.SingleTypeFactory(typeAdapter , exactType , false , null);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"typeAdapter","this":"typeAdapter"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"52d632a0-3e6f-11e6-8416-6ff71ec7b25e","method":{"position":"com.google.gson.Gson:261","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        out.nullValue();\n        return ;\n    } \n    double double = value.doubleValue();\n    checkValidFloatingPoint(doubleValue);\n    out.value(value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"52d632a1-3e6f-11e6-8416-d9002315469a","method":{"position":"com.google.gson.internal.bind.TimeTypeAdapter:63","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized void write(com.google.gson.stream.JsonWriter out, java.sql.Time value) throws java.io.IOException {\n    out.value((value == null ? null : java.text.DateFormat.format(value)));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"52d632a2-3e6f-11e6-8416-51436c5ee90c","method":{"position":"com.google.gson.internal.bind.TypeAdapters:367","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.math.BigDecimal read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        return new java.math.BigDecimal(in.nextString());\n    } catch (java.lang.NumberFormatException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"52d632a3-3e6f-11e6-8416-2f7c58470f8c","method":{"position":"com.google.gson.internal.bind.MapTypeAdapterFactory:198","type":"CtMethodImpl","sourcecode":"public void write(com.google.gson.stream.JsonWriter out, java.util.Map<K, V> map) throws java.io.IOException {\n    if (map == null) {\n        out.nullValue();\n        return ;\n    } \n    if (!(boolean)) {\n        out.beginObject();\n        for (java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : map.entrySet()) {\n            out.name(java.lang.String.valueOf(entry.getKey()));\n            com.google.gson.TypeAdapter<V>.write(out, entry.getValue());\n        }\n        out.endObject();\n        return ;\n    } \n    boolean boolean = false;\n    java.util.List<com.google.gson.JsonElement> java.util.List<com.google.gson.JsonElement> = new java.util.ArrayList<com.google.gson.JsonElement>(map.size());\n    java.util.List<V> java.util.List<V> = new java.util.ArrayList<V>(map.size());\n    for (java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : map.entrySet()) {\n        com.google.gson.JsonElement com.google.gson.JsonElement = com.google.gson.TypeAdapter<K>.toJsonTree(entry.getKey());\n        keys.add(keyElement);\n        values.add(entry.getValue());\n        hasComplexKeys |= (keyElement.isJsonArray()) || (keyElement.isJsonObject());\n    }\n    if (hasComplexKeys) {\n        out.beginArray();\n        for (int int = 0 ; i < (keys.size()) ; i++) {\n            out.beginArray();\n            com.google.gson.internal.Streams.write(keys.get(i), out);\n            com.google.gson.TypeAdapter<V>.write(out, values.get(i));\n            out.endArray();\n        }\n        out.endArray();\n    } else {\n        out.beginObject();\n        for (int int = 0 ; i < (keys.size()) ; i++) {\n            com.google.gson.JsonElement com.google.gson.JsonElement = keys.get(i);\n            out.name(keyToString(keyElement));\n            com.google.gson.TypeAdapter<V>.write(out, values.get(i));\n        }\n        out.endObject();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.GsonBuilder:554","type":"CtBinaryOperatorImpl","sourcecode":"(datePattern != null) && (!(\"\".equals(datePattern.trim())))"},"failures":[],"tindex":"52d632a4-3e6f-11e6-8416-b10158acee25","method":{"position":"com.google.gson.TypeAdapter:268","type":"CtMethodImpl","sourcecode":"public final T fromJson(java.lang.String json) throws java.io.IOException {\n    if ((json != null) && (!(\"\".equals(datePattern.trim())))) {\n        {\n            return fromJson(new java.io.StringReader(json));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"datePattern":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:309","type":"CtBinaryOperatorImpl","sourcecode":"context == (java.util.Properties.class)"},"failures":[],"tindex":"52d659b5-3e6f-11e6-8416-9f011d3ad60b","method":{"position":"com.google.gson.internal.$Gson$Types:471","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object other) {\n    return (other instanceof java.lang.reflect.ParameterizedType) && (com.google.gson.internal.$Gson$Types.equals(com.google.gson.internal.$Gson$Types.ParameterizedTypeImpl.this, ((java.lang.reflect.ParameterizedType)(other))));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.util.Properties.class":"other","context":"other"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.$Gson$Types:332","type":"CtBinaryOperatorImpl","sourcecode":"(toResolve instanceof java.lang.Class) && (((java.lang.Class<?>)(toResolve)).isArray())"},"failures":[],"tindex":"52d659b6-3e6f-11e6-8416-892baafbc023","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:101","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nvoid read(com.google.gson.stream.JsonReader reader, java.lang.Object value) throws java.io.IOException, java.lang.IllegalAccessException {\n    if ((value instanceof java.lang.Class) && (((java.lang.Class<?>)(toResolve)).isArray())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            java.lang.Object java.lang.Object = com.google.gson.TypeAdapter<?>.read(reader);\n            if ((fieldValue != null) || (!isPrimitive)) {\n                field.set(value, fieldValue);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"52d659b7-3e6f-11e6-8416-2bb724ee7739","method":{"position":"com.google.gson.TypeAdapter:194","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic T read(com.google.gson.stream.JsonReader reader) throws java.io.IOException {\n    if ((reader.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        reader.nextNull();\n        return null;\n    } \n    return com.google.gson.TypeAdapter.this.read(reader);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"reader"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"52d659b8-3e6f-11e6-8416-47cc2387f679","method":{"position":"com.google.gson.internal.bind.TypeAdapters:156","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Boolean value) throws java.io.IOException {\n    if (value == null) {\n        out.nullValue();\n        return ;\n    } \n    out.value(value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:325","type":"CtBinaryOperatorImpl","sourcecode":"toResolve instanceof java.lang.reflect.TypeVariable"},"failures":[],"tindex":"52d659b9-3e6f-11e6-8416-19b956501bb1","method":{"position":"com.google.gson.internal.$Gson$Types:158","type":"CtMethodImpl","sourcecode":"public static boolean equals(java.lang.reflect.Type a, java.lang.reflect.Type b) {\n    if (a == b) {\n        return true;\n    } else if (a instanceof java.lang.Class) {\n        return a.equals(b);\n    } else if (a instanceof java.lang.reflect.ParameterizedType) {\n        if (!(b instanceof java.lang.reflect.ParameterizedType)) {\n            return false;\n        } \n        java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(a));\n        java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(b));\n        return ((com.google.gson.internal.$Gson$Types.equal(pa.getOwnerType(), pb.getOwnerType())) && (pa.getRawType().equals(pb.getRawType()))) && (java.util.Arrays.equals(pa.getActualTypeArguments(), pb.getActualTypeArguments()));\n    } else if (a instanceof java.lang.reflect.GenericArrayType) {\n        if (!(b instanceof java.lang.reflect.GenericArrayType)) {\n            return false;\n        } \n        java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(a));\n        java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(b));\n        return com.google.gson.internal.$Gson$Types.equals(ga.getGenericComponentType(), gb.getGenericComponentType());\n    } else if (a instanceof java.lang.reflect.WildcardType) {\n        if (!(b instanceof java.lang.reflect.WildcardType)) {\n            return false;\n        } \n        java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(a));\n        java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(b));\n        return (java.util.Arrays.equals(wa.getUpperBounds(), wb.getUpperBounds())) && (java.util.Arrays.equals(wa.getLowerBounds(), wb.getLowerBounds()));\n    } else if (a instanceof java.lang.reflect.TypeVariable) {\n        if (!(b instanceof java.lang.reflect.TypeVariable)) {\n            return false;\n        } \n        java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(a));\n        java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(b));\n        return ((va.getGenericDeclaration()) == (vb.getGenericDeclaration())) && (va.getName().equals(vb.getName()));\n    } else {\n        return false;\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"a"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"52d680ca-3e6f-11e6-8416-13c6df04ddba","method":{"position":"com.google.gson.internal.bind.TypeAdapters:736","type":"CtMethodImpl","sourcecode":"public T read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return java.util.Map<java.lang.String, T>.get(in.nextString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:111","type":"CtInvocationImpl","sourcecode":"primitive.isString()"},"failures":[],"tindex":"52d680cb-3e6f-11e6-8416-99a6b7bfd144","method":{"position":"com.google.gson.JsonObject:53","type":"CtMethodImpl","sourcecode":"public void add(java.lang.String property, com.google.gson.JsonElement value) {\n    if (value.isString()) {\n        {\n            if (value == null) {\n                value = com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull;\n            } \n            com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.put(property, value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"primitive":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"52d680cc-3e6f-11e6-8416-35eb0a186d6e","method":{"position":"com.google.gson.internal.bind.TypeAdapters:178","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Boolean value) throws java.io.IOException {\n    out.value((value == null ? \"null\" : value.toString()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.stream.JsonReader:290","type":"CtBinaryOperatorImpl","sourcecode":"in == null"},"failures":[],"tindex":"52d680cd-3e6f-11e6-8416-25c91e981298","method":{"position":"com.google.gson.Gson:746","type":"CtMethodImpl","sourcecode":"public <T>T fromJson(java.io.Reader json, java.lang.Class<T> classOfT) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException {\n    if (json == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    } else {\n        {\n            if (json == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new com.google.gson.JsonIOException();\n            } else {\n                {\n                    com.google.gson.stream.JsonReader com.google.gson.stream.JsonReader = new com.google.gson.stream.JsonReader(json);\n                    java.lang.Object java.lang.Object = fromJson(jsonReader, classOfT);\n                    com.google.gson.Gson.assertFullConsumption(object, jsonReader);\n                    return com.google.gson.internal.Primitives.wrap(classOfT).cast(object);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"in":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.internal.$Gson$Types:340","type":"CtBinaryOperatorImpl","sourcecode":"toResolve instanceof java.lang.reflect.GenericArrayType"},"failures":[],"tindex":"52d680ce-3e6f-11e6-8416-354129621d23","method":{"position":"com.google.gson.Gson:801","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic <T>T fromJson(com.google.gson.stream.JsonReader reader, java.lang.reflect.Type typeOfT) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException {\n    if (typeOfT instanceof java.lang.reflect.GenericArrayType) {\n        {\n            if (!(typeOfT instanceof java.lang.reflect.TypeVariable)) {\n                {\n                    boolean boolean = true;\n                    boolean boolean = reader.isLenient();\n                    reader.setLenient(true);\n                    try {\n                        reader.peek();\n                        isEmpty = false;\n                        com.google.gson.reflect.TypeToken<T> com.google.gson.reflect.TypeToken<T> = ((com.google.gson.reflect.TypeToken<T>)(com.google.gson.reflect.TypeToken.get(typeOfT)));\n                        com.google.gson.TypeAdapter<T> com.google.gson.TypeAdapter<T> = getAdapter(typeToken);\n                        T T = typeAdapter.read(reader);\n                        return object;\n                    } catch (java.io.EOFException e) {\n                        if (isEmpty) {\n                            return null;\n                        } \n                        throw new com.google.gson.JsonSyntaxException(e);\n                    } catch (java.lang.IllegalStateException e) {\n                        throw new com.google.gson.JsonSyntaxException(e);\n                    } catch (java.io.IOException e) {\n                        throw new com.google.gson.JsonSyntaxException(e);\n                    } finally {\n                        reader.setLenient(oldLenient);\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new com.google.gson.JsonSyntaxException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"typeOfT"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"52d6a7df-3e6f-11e6-8416-8161668a9e39","method":{"position":"com.google.gson.internal.bind.TypeAdapters:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Boolean read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return java.lang.Boolean.valueOf(in.nextString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:182","type":"CtBinaryOperatorImpl","sourcecode":"(java.lang.Double.isNaN(d)) || (java.lang.Double.isInfinite(d))"},"failures":[],"tindex":"52d6a7e0-3e6f-11e6-8416-b1e31d28e94c","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:162","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic com.google.gson.stream.JsonWriter value(double value) throws java.io.IOException {\n    if ((java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(d))) {\n        {\n            if ((!(isLenient())) && ((java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(value)))) {\n                throw new java.lang.IllegalArgumentException((\"JSON forbids NaN and infinities: \" + value));\n            } \n            put(new com.google.gson.JsonPrimitive(value));\n            return com.google.gson.internal.bind.JsonTreeWriter.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"d":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:86","type":"CtBinaryOperatorImpl","sourcecode":"element instanceof com.google.gson.JsonArray"},"failures":[],"tindex":"52d6a7e1-3e6f-11e6-8416-8beaecc41330","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:75","type":"CtMethodImpl","sourcecode":"private void put(com.google.gson.JsonElement value) {\n    if (value instanceof com.google.gson.JsonArray) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value instanceof com.google.gson.JsonObject) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((java.lang.String) != null) {\n                        if ((!(value.isJsonNull())) || (getSerializeNulls())) {\n                            com.google.gson.JsonObject com.google.gson.JsonObject = ((com.google.gson.JsonObject)(peek()));\n                            object.add(java.lang.String, value);\n                        } \n                        java.lang.String = null;\n                    } else if (java.util.List<com.google.gson.JsonElement>.isEmpty()) {\n                        com.google.gson.JsonElement = value;\n                    } else {\n                        com.google.gson.JsonElement com.google.gson.JsonElement = peek();\n                        if (element instanceof com.google.gson.JsonArray) {\n                            ((com.google.gson.JsonArray)(element)).add(value);\n                        } else {\n                            throw new java.lang.IllegalStateException();\n                        }\n                    }\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.Excluder:235","type":"CtBinaryOperatorImpl","sourcecode":"annotationVersion > (version)"},"failures":[],"tindex":"52d6a7e2-3e6f-11e6-8416-91780d1df769","method":{"position":"com.google.gson.stream.JsonWriter:461","type":"CtMethodImpl","sourcecode":"public com.google.gson.stream.JsonWriter value(double value) throws java.io.IOException {\n    if (value > value) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if ((java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(value))) {\n                throw new java.lang.IllegalArgumentException((\"Numeric values must be finite, but was \" + value));\n            } \n            writeDeferredName();\n            beforeValue(false);\n            java.io.Writer.append(java.lang.Double.toString(value));\n            return com.google.gson.stream.JsonWriter.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"version":"value","annotationVersion":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"52d6cef3-3e6f-11e6-8416-5d3edab0d4f4","method":{"position":"com.google.gson.internal.bind.TypeAdapters:72","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Class read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } else {\n        throw new java.lang.UnsupportedOperationException(\"Attempted to deserialize a java.lang.Class. Forgot to register a type adapter?\");\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:735","type":"CtBinaryOperatorImpl","sourcecode":"(last == (com.google.gson.stream.JsonReader.NUMBER_CHAR_EXP_E)) || (last == (com.google.gson.stream.JsonReader.NUMBER_CHAR_EXP_SIGN))"},"failures":[],"tindex":"52d6cef4-3e6f-11e6-8416-bda3722bd1ae","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:233","type":"CtMethodImpl","sourcecode":"private static int secondaryHash(int h) {\n    if ((h == h) || (last == h)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            h ^= (h >>> 20) ^ (h >>> 12);\n            return (h ^ (h >>> 7)) ^ (h >>> 4);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"com.google.gson.stream.JsonReader.NUMBER_CHAR_EXP_SIGN":"h","last":"h","com.google.gson.stream.JsonReader.NUMBER_CHAR_EXP_E":"h"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:213","type":"CtBinaryOperatorImpl","sourcecode":"(indent.length()) == 0"},"failures":[101,102,106,389,390,391,392],"tindex":"52d6cef5-3e6f-11e6-8416-cf893cbb42a6","method":{"position":"com.google.gson.JsonObject:89","type":"CtMethodImpl","sourcecode":"public void addProperty(java.lang.String property, java.lang.Number value) {\n    if ((property.length()) == 0) {\n        {\n            add(property, createJsonElement(value));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"indent":"property"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:139","type":"CtBinaryOperatorImpl","sourcecode":"comparison == 0"},"failures":[],"tindex":"52d6cef6-3e6f-11e6-8416-af1c442b03cb","method":{"position":"com.google.gson.internal.bind.JsonTreeReader:41","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int read(char[] buffer, int offset, int count) throws java.io.IOException {\n    if (count == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            throw new java.lang.AssertionError();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparison":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"com.google.gson.JsonParseException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"52d6cef7-3e6f-11e6-8416-3f2648922dc6","method":{"position":"com.google.gson.internal.Streams:39","type":"CtMethodImpl","sourcecode":"public static com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader reader) throws com.google.gson.JsonParseException {\n    boolean boolean = true;\n    try {\n        reader.peek();\n        isEmpty = false;\n        return com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<com.google.gson.JsonElement>.read(reader);\n    } catch (java.io.EOFException e) {\n        if (isEmpty) {\n            return com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull;\n        } \n        throw new com.google.gson.JsonSyntaxException(e);\n    } catch (com.google.gson.stream.MalformedJsonException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    } catch (java.io.IOException e) {\n        throw new com.google.gson.JsonIOException(e);\n    } catch (java.lang.NumberFormatException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"reader"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:227","type":"CtBinaryOperatorImpl","sourcecode":"toResolve == rawType"},"failures":[],"tindex":"52d6f608-3e6f-11e6-8416-cfdf4b74484e","method":{"position":"com.google.gson.internal.Excluder:191","type":"CtMethodImpl","sourcecode":"public boolean excludeClass(java.lang.Class<?> clazz, boolean serialize) {\n    if (clazz == clazz) {\n        {\n            if (((double) != (com.google.gson.internal.Excluder.com.google.gson.internal.Excluder.double)) && (!(isValidVersion(clazz.getAnnotation(com.google.gson.annotations.Since.com.google.gson.annotations.Since.java.lang.Class), clazz.getAnnotation(com.google.gson.annotations.Until.com.google.gson.annotations.Until.java.lang.Class))))) {\n                return true;\n            } \n            if ((!(boolean)) && (isInnerClass(clazz))) {\n                return true;\n            } \n            if (isAnonymousOrLocal(clazz)) {\n                return true;\n            } \n            java.util.List<com.google.gson.ExclusionStrategy> java.util.List<com.google.gson.ExclusionStrategy> = serialize ? java.util.List<com.google.gson.ExclusionStrategy> : java.util.List<com.google.gson.ExclusionStrategy>;\n            for (com.google.gson.ExclusionStrategy com.google.gson.ExclusionStrategy : list) {\n                if (exclusionStrategy.shouldSkipClass(clazz)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"rawType":"clazz","toResolve":"clazz"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:247","type":"CtBinaryOperatorImpl","sourcecode":"rawSupertype == toResolve"},"failures":[479,480,481,482,340],"tindex":"52d6f609-3e6f-11e6-8416-a30702637a16","method":{"position":"com.google.gson.internal.Excluder:224","type":"CtMethodImpl","sourcecode":"private boolean isStatic(java.lang.Class<?> clazz) {\n    if (clazz == clazz) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((clazz.getModifiers()) & (java.lang.reflect.Modifier.java.lang.reflect.Modifier.int)) != 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"clazz","rawSupertype":"clazz"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:280","type":"CtInvocationImpl","sourcecode":"standardPrimitive.isAssignableFrom(classOfPrimitive)"},"failures":[31,33,34,35,36,370,37,40,41,42,43,44,371,45,483,484,48,51,52,485,53,372,55,57,486,58,373,374,60,61,62,375,63,64,65,66,67,68,376,69,70,71,377,72,378,379,73,74,75,76,380,77,78,79,381,382,80,383,81,384,385,82,84,90,487,386,92,94,488,8,9,10,11,387,489,388,100,102,490,103,491,108,110,111,389,390,391,369,392,458,117,393,123,125,126,129,12,133,135,394,136,137,138,140,141,142,143,395,396,492,146,147,397,148,150,493,152,398,13,14,15,153,154,155,16,17,399,400,156,157,18,494,495,496,497,498,499,161,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,401,519,520,521,522,523,524,193,194,402,403,195,404,405,196,406,407,197,408,199,409,201,525,410,411,204,412,205,206,413,208,414,415,526,527,209,416,210,211,417,212,418,419,420,421,213,422,423,214,0,215,216,217,218,219,424,220,221,222,223,224,225,226,228,229,230,231,232,234,235,236,238,239,240,241,242,243,244,245,425,426,427,528,249,250,254,529,428,255,429,256,530,430,257,258,259,260,261,19,263,531,431,264,432,433,265,266,532,267,434,268,269,533,534,535,536,537,281,435,282,538,539,540,285,286,287,288,20,21,436,437,290,438,541,542,543,22,439,23,24,25,26,27,28,292,440,544,294,545,441,442,546,547,548,300,443,549,550,303,551,444,552,553,554,313,314,316,555,556,318,476,557,558,323,324,326,328,559,560,561,562,333,445,446,334,335,447,448,336,563,564,338,339,341,342,343,344,345,565,347,349,566,567,568,569,570,571,572,573,355,358,359,361,364,449,450],"tindex":"52d6f60a-3e6f-11e6-8416-89259125aa7a","method":{"position":"com.google.gson.internal.Primitives:60","type":"CtMethodImpl","sourcecode":"private static void add(java.util.Map<java.lang.Class<?>, java.lang.Class<?>> forward, java.util.Map<java.lang.Class<?>, java.lang.Class<?>> backward, java.lang.Class<?> key, java.lang.Class<?> value) {\n    if (!(value.isInterface())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value.isAssignableFrom(value)) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    forward.put(key, value);\n                    backward.put(value, key);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"standardPrimitive":"value","classOfPrimitive":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"52d6f60b-3e6f-11e6-8416-474a37bfb88f","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:208","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, T value) throws java.io.IOException {\n    if (value == null) {\n        out.nullValue();\n        return ;\n    } \n    out.beginObject();\n    try {\n        for (com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField : java.util.Map<java.lang.String, com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField>.values()) {\n            if (boundField.writeField(value)) {\n                out.name(boundField.java.lang.String);\n                boundField.write(out, value);\n            } \n        }\n    } catch (java.lang.IllegalAccessException e) {\n        throw new java.lang.AssertionError();\n    }\n    out.endObject();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.internal.$Gson$Types:377","type":"CtBinaryOperatorImpl","sourcecode":"lowerBound != (originalLowerBound[0])"},"failures":[],"tindex":"52d71d1c-3e6f-11e6-8416-cff649c54fcb","method":{"position":"com.google.gson.Gson:591","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic void toJson(java.lang.Object src, java.lang.reflect.Type typeOfSrc, com.google.gson.stream.JsonWriter writer) throws com.google.gson.JsonIOException {\n    if (src != (src[0])) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    } else {\n        {\n            com.google.gson.TypeAdapter<?> com.google.gson.TypeAdapter<?> = getAdapter(com.google.gson.reflect.TypeToken.get(typeOfSrc));\n            boolean boolean = writer.isLenient();\n            writer.setLenient(true);\n            boolean boolean = writer.isHtmlSafe();\n            writer.setHtmlSafe(boolean);\n            boolean boolean = writer.getSerializeNulls();\n            writer.setSerializeNulls(boolean);\n            try {\n                ((com.google.gson.TypeAdapter<java.lang.Object>)(adapter)).write(writer, src);\n            } catch (java.io.IOException e) {\n                throw new com.google.gson.JsonIOException(e);\n            } finally {\n                writer.setLenient(oldLenient);\n                writer.setHtmlSafe(oldHtmlSafe);\n                writer.setSerializeNulls(oldSerializeNulls);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"originalLowerBound":"src","lowerBound":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:319","type":"CtBinaryOperatorImpl","sourcecode":"((value) instanceof java.lang.Number) && ((other.value) instanceof java.lang.Number)"},"failures":[],"tindex":"52d71d1d-3e6f-11e6-8416-af3cf5941e52","method":{"position":"com.google.gson.internal.$Gson$Types:213","type":"CtMethodImpl","sourcecode":"private static int hashCodeOrZero(java.lang.Object o) {\n    return o != null ? o.hashCode() : 0;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"other":"o","value":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonElement:103","type":"CtInvocationImpl","sourcecode":"isJsonArray()"},"failures":[],"tindex":"52d71d1e-3e6f-11e6-8416-c9a9cee4bc83","method":{"position":"com.google.gson.JsonArray:92","type":"CtMethodImpl","sourcecode":"public boolean remove(com.google.gson.JsonElement element) {\n    return java.util.List<com.google.gson.JsonElement>.remove(element);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"element"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:244","type":"CtUnaryOperatorImpl","sourcecode":"!(rawType.isInterface())"},"failures":[],"tindex":"52d71d1f-3e6f-11e6-8416-2bd89e2c8abb","method":{"position":"com.google.gson.internal.Primitives:60","type":"CtMethodImpl","sourcecode":"private static void add(java.util.Map<java.lang.Class<?>, java.lang.Class<?>> forward, java.util.Map<java.lang.Class<?>, java.lang.Class<?>> backward, java.lang.Class<?> key, java.lang.Class<?> value) {\n    if (!(value.isInterface())) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value.isAssignableFrom(value)) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    forward.put(key, value);\n                    backward.put(value, key);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"rawType":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:293","type":"CtInvocationImpl","sourcecode":"com.google.gson.JsonPrimitive.isIntegral(com.google.gson.JsonPrimitive.this)"},"failures":[],"tindex":"52d71d20-3e6f-11e6-8416-758ecb952e30","method":{"position":"com.google.gson.JsonArray:115","type":"CtMethodImpl","sourcecode":"public boolean contains(com.google.gson.JsonElement element) {\n    return java.util.List<com.google.gson.JsonElement>.contains(element);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"element"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"52d71d21-3e6f-11e6-8416-5b5d1cd2339d","method":{"position":"com.google.gson.internal.bind.TypeAdapters:525","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.sql.Timestamp read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    java.util.Date java.util.Date = dateTypeAdapter.read(in);\n    return date != null ? new java.sql.Timestamp(date.getTime()) : null;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.DateTypeAdapter:86","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"52d74432-3e6f-11e6-8416-cf18c0d5f085","method":{"position":"com.google.gson.internal.LinkedTreeMap:41","type":"CtMethodImpl","sourcecode":"public int compare(java.lang.Comparable a, java.lang.Comparable b) {\n    if (a == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return a.compareTo(b);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"a"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:720","type":"CtBinaryOperatorImpl","sourcecode":"json == null"},"failures":[],"tindex":"52d74433-3e6f-11e6-8416-a93e62c47cae","method":{"position":"com.google.gson.internal.$Gson$Types:411","type":"CtMethodImpl","sourcecode":"private static int indexOf(java.lang.Object[] array, java.lang.Object toFind) {\n    for (int int = 0 ; i < (array.int) ; i++) {\n        if (toFind.equals(array[i])) {\n            return i;\n        } \n    }\n    throw new java.util.NoSuchElementException();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"toFind"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:118","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.Class<?>"},"failures":[],"tindex":"52d74434-3e6f-11e6-8416-cb2ea16d2cf7","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:804","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(java.lang.Object o) {\n    if (o instanceof java.lang.Class<?>) {\n        {\n            return (o instanceof java.util.Map.Entry) && ((findByEntry(((java.util.Map.Entry<?, ?>)(o)))) != null);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:370","type":"CtBinaryOperatorImpl","sourcecode":"toResolve instanceof java.lang.reflect.WildcardType"},"failures":[],"tindex":"52d74435-3e6f-11e6-8416-17291e468aca","method":{"position":"com.google.gson.internal.$Gson$Types:93","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Type canonicalize(java.lang.reflect.Type type) {\n    if (type instanceof java.lang.Class) {\n        java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(type));\n        return c.isArray() ? new com.google.gson.internal.$Gson$Types.GenericArrayTypeImpl(com.google.gson.internal.$Gson$Types.canonicalize(c.getComponentType())) : c;\n    } else if (type instanceof java.lang.reflect.ParameterizedType) {\n        java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(type));\n        return new com.google.gson.internal.$Gson$Types.ParameterizedTypeImpl(p.getOwnerType() , p.getRawType() , p.getActualTypeArguments());\n    } else if (type instanceof java.lang.reflect.GenericArrayType) {\n        java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(type));\n        return new com.google.gson.internal.$Gson$Types.GenericArrayTypeImpl(g.getGenericComponentType());\n    } else if (type instanceof java.lang.reflect.WildcardType) {\n        java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(type));\n        return new com.google.gson.internal.$Gson$Types.WildcardTypeImpl(w.getUpperBounds() , w.getLowerBounds());\n    } else {\n        return type;\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"type"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"52d74436-3e6f-11e6-8416-e9718488d96c","method":{"position":"com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:39","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic T read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    return com.google.gson.TypeAdapter<T>.read(in);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"52d74437-3e6f-11e6-8416-45d0af58baf4","method":{"position":"com.google.gson.internal.Excluder:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, T value) throws java.io.IOException {\n    if (skipSerialize) {\n        out.nullValue();\n        return ;\n    } \n    delegate().write(out, value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.DefaultDateTypeAdapter:87","type":"CtBinaryOperatorImpl","sourcecode":"typeOfT == (java.sql.Date.class)"},"failures":[],"tindex":"52d76b48-3e6f-11e6-8416-73676d105154","method":{"position":"com.google.gson.reflect.TypeToken:160","type":"CtMethodImpl","sourcecode":"private static boolean isAssignableFrom(java.lang.reflect.Type from, java.lang.reflect.GenericArrayType to) {\n    if (from == from) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.reflect.Type java.lang.reflect.Type = to.getGenericComponentType();\n            if (toGenericComponentType instanceof java.lang.reflect.ParameterizedType) {\n                java.lang.reflect.Type java.lang.reflect.Type = from;\n                if (from instanceof java.lang.reflect.GenericArrayType) {\n                    t = ((java.lang.reflect.GenericArrayType)(from)).getGenericComponentType();\n                } else if (from instanceof java.lang.Class<?>) {\n                    java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(from));\n                    while (classType.isArray()) {\n                        classType = classType.getComponentType();\n                    }\n                    t = classType;\n                } \n                return com.google.gson.reflect.TypeToken.isAssignableFrom(t, ((java.lang.reflect.ParameterizedType)(toGenericComponentType)), new java.util.HashMap<java.lang.String, java.lang.reflect.Type>());\n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.sql.Date.class":"from","typeOfT":"from"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:290","type":"CtBinaryOperatorImpl","sourcecode":"in == null"},"failures":[],"tindex":"52d76b49-3e6f-11e6-8416-7552676a3c82","method":{"position":"com.google.gson.internal.LinkedTreeMap:481","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"rawtypes\")\n@java.lang.Override\npublic boolean equals(java.lang.Object o) {\n    if (o instanceof java.lang.reflect.TypeVariable) {\n        {\n            if (o == null) {\n                {\n                    if (o instanceof java.util.Map.Entry) {\n                        java.util.Map.Entry java.util.Map.Entry = ((java.util.Map.Entry)(o));\n                        return ((K) == null ? (other.getKey()) == null : K.equals(other.getKey())) && ((V) == null ? (other.getValue()) == null : V.equals(other.getValue()));\n                    } \n                    return false;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"in":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl","sourcecode":"field.isSynthetic()"},"failures":[31,35,36,370,37,371,45,48,53,372,57,58,373,374,60,61,62,375,64,65,66,67,68,376,69,70,71,377,72,379,73,74,75,76,380,77,78,79,381,382,80,383,81,384,385,82,84,90,386,92,94,8,9,10,11,387,388,100,102,103,110,111,389,390,391,369,392,117,393,123,125,126,129,12,133,135,394,136,137,138,141,142,143,395,396,146,147,397,148,150,152,398,13,14,15,153,154,155,16,17,399,400,156,157,18,401,193,194,402,403,195,404,405,196,406,407,197,408,199,409,201,410,411,204,412,205,206,413,208,414,415,209,416,210,211,417,212,418,419,420,421,213,422,423,214,0,216,217,218,219,424,220,221,222,223,224,225,226,228,229,230,235,425,426,427,249,250,254,428,255,429,256,430,257,258,259,260,261,19,263,431,264,432,433,265,266,267,434,269,281,435,282,285,286,287,288,20,21,436,437,290,438,22,439,23,24,25,26,27,28,292,440,441,442,443,303,444,313,323,328,333,445,446,334,335,447,448,336,338,339,341,342,343,344,345,355,358,359,361,364,449,450],"tindex":"52d76b4a-3e6f-11e6-8416-073b85b61fdc","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:70","type":"CtMethodImpl","sourcecode":"static java.lang.String getFieldName(com.google.gson.FieldNamingStrategy fieldNamingPolicy, java.lang.reflect.Field f) {\n    if (f.isSynthetic()) {\n        {\n            com.google.gson.annotations.SerializedName com.google.gson.annotations.SerializedName = f.getAnnotation(com.google.gson.annotations.SerializedName.com.google.gson.annotations.SerializedName.java.lang.Class);\n            return serializedName == null ? fieldNamingPolicy.translateName(f) : serializedName.value();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"f"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:332","type":"CtBinaryOperatorImpl","sourcecode":"(toResolve instanceof java.lang.Class) && (((java.lang.Class<?>)(toResolve)).isArray())"},"failures":[],"tindex":"52d76b4b-3e6f-11e6-8416-1bd1aa8c7c01","method":{"position":"com.google.gson.JsonArray:329","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object o) {\n    if ((o instanceof java.lang.Class) && (((java.lang.Class<?>)(toResolve)).isArray())) {\n        {\n            return (o == (com.google.gson.JsonArray.this)) || ((o instanceof com.google.gson.JsonArray) && (((com.google.gson.JsonArray)(o)).java.util.List<com.google.gson.JsonElement>.equals(java.util.List<com.google.gson.JsonElement>)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:797","type":"CtBinaryOperatorImpl","sourcecode":"p == (com.google.gson.stream.JsonReader.PEEKED_DOUBLE_QUOTED_NAME)"},"failures":[],"tindex":"52d76b4c-3e6f-11e6-8416-09789e2a3ade","method":{"position":"com.google.gson.stream.JsonReader:1288","type":"CtMethodImpl","sourcecode":"private boolean fillBuffer(int minimum) throws java.io.IOException {\n    if (minimum == minimum) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            char[] char[] = com.google.gson.stream.JsonReader.this.char[];\n            int -= int;\n            if ((int) != (int)) {\n                int -= int;\n                java.lang.System.arraycopy(buffer, int, buffer, 0, int);\n            } else {\n                int = 0;\n            }\n            int = 0;\n            int int;\n            while ((total = java.io.Reader.read(buffer, int, ((buffer.int) - (int)))) != (-1)) {\n                int += total;\n                if (((((int) == 0) && ((int) == 0)) && ((int) > 0)) && ((buffer[0]) == '\\ufeff')) {\n                    (int)++;\n                    (int)++;\n                    minimum++;\n                } \n                if ((int) >= minimum) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"minimum","com.google.gson.stream.JsonReader.PEEKED_DOUBLE_QUOTED_NAME":"minimum"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:325","type":"CtBinaryOperatorImpl","sourcecode":"toResolve instanceof java.lang.reflect.TypeVariable"},"failures":[],"tindex":"52d7925d-3e6f-11e6-8416-7964946360d9","method":{"position":"com.google.gson.internal.LinkedTreeMap:481","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"rawtypes\")\n@java.lang.Override\npublic boolean equals(java.lang.Object o) {\n    if (o instanceof java.lang.reflect.TypeVariable) {\n        {\n            if (o == null) {\n                {\n                    if (o instanceof java.util.Map.Entry) {\n                        java.util.Map.Entry java.util.Map.Entry = ((java.util.Map.Entry)(o));\n                        return ((K) == null ? (other.getKey()) == null : K.equals(other.getKey())) && ((V) == null ? (other.getValue()) == null : V.equals(other.getValue()));\n                    } \n                    return false;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467254463573/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":90,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}