{"failureDictionary":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":9,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":429,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":74,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":26,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":141,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":65,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":112,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":412,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":54,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":48,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":52,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":110,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":254,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":384,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":160,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":39,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":85,"com.google.gson.functional.ObjectTest.testSingletonLists":108,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":199,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":408,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":430,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":22,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":123,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":243,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":219,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":146,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":364,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":69,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":236,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":360,"com.google.gson.functional.EnumTest.testEnumCaseMapping":253,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":428,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":439,"com.google.gson.functional.JsonTreeTest.testToJsonTree":207,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":367,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":105,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":46,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":393,"com.google.gson.internal.LinkedHashTreeMapTest.testAvlBuilder":14,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":304,"com.google.gson.internal.LinkedTreeMapTest.testLargeSetOfRandomKeys":2,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":270,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":148,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":120,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":240,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization":333,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":345,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":358,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":79,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":130,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":239,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":348,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":420,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":81,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":325,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":319,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":132,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":378,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":407,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":66,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":263,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":204,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":58,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":298,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":326,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":129,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":374,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":20,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":116,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":227,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":31,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":311,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":200,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":96,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":37,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":411,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":163,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":403,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":78,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":151,"com.google.gson.functional.CollectionTest.testSetDeserialization":51,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":161,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":119,"com.google.gson.functional.EnumTest.testEnumSet":248,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":38,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":276,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":287,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":124,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":16,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":36,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":165,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":23,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":355,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":329,"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":423,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":178,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":257,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":201,"com.google.gson.functional.MapTest.testMapSerialization":291,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":179,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":169,"com.google.gson.functional.MapTest.testSerializeMaps":286,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":427,"com.google.gson.functional.MapTest.testComplexKeysSerialization":73,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":383,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":25,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":150,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":91,"com.google.gson.internal.LinkedTreeMapTest.testRemoveRootDoesNotDoubleUnlink":5,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriter":246,"com.google.gson.internal.LinkedHashTreeMapTest.testDoubleCapacity":15,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":167,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":27,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":277,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":337,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":299,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":351,"com.google.gson.functional.PrettyPrintingTest.testMap":365,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":266,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":181,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":390,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":242,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":434,"com.google.gson.functional.CollectionTest.testQueueSerialization":267,"com.google.gson.functional.MapTest.testMapSerializationEmpty":297,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":400,"com.google.gson.functional.MapTest.testMapOfMapSerialization":290,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":317,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":157,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":322,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":281,"com.google.gson.functional.FieldNamingTest.testIdentity":228,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":431,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":183,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":133,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":30,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":107,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":206,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":237,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":300,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":432,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":143,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization":320,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":18,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":156,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":401,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullJsonElementSerialization":419,"com.google.gson.functional.MapTest.testMapSubclassSerialization":285,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":336,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":45,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":175,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":162,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":231,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":421,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":7,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":21,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":35,"com.google.gson.functional.EnumTest.testEnumSubclass":251,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization":323,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":122,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":244,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization":307,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":75,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":60,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":145,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":144,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":94,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":17,"com.google.gson.internal.LinkedTreeMapTest.testEqualsAndHashCode":4,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":29,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization":318,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":415,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":109,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":380,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":376,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":33,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":149,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":88,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":111,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":278,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":189,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":194,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":293,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":433,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":158,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":44,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":335,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":417,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":170,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":310,"com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash":13,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":191,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":314,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":155,"com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization":330,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":405,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":402,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":368,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":284,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":84,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":103,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":288,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":87,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":303,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":11,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":211,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":134,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization":344,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":259,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":353,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":95,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":394,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":43,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":142,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":264,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":166,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":292,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":418,"com.google.gson.functional.PrimitiveTest.testShortSerialization":334,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":305,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":362,"com.google.gson.internal.LinkedTreeMapTest.testIterationOrder":3,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":327,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":213,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":424,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":250,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":49,"com.google.gson.internal.LinkedTreeMapTest.testPutOverrides":0,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":174,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":274,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":338,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":8,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":92,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":235,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization":341,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":255,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":59,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":102,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":135,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":218,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":386,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":106,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":209,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":61,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":139,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":115,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":252,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":260,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":385,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":50,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":212,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":349,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":83,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":89,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":406,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":203,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":397,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":90,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":99,"com.google.gson.functional.PrimitiveTest.testNumberSerialization":321,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":339,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":63,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":86,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":249,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":10,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":171,"com.google.gson.functional.MapTest.testGeneralMapField":72,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":113,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":373,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":76,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":188,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":350,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":413,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":294,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":302,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":309,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":387,"com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization":328,"com.google.gson.MixedStreamTest.testReadMixedStreamed":234,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":315,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":202,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":238,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":272,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":198,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":361,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":164,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":215,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":422,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":279,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":340,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":187,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":222,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":404,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":184,"com.google.gson.functional.ObjectTest.testNestedDeserialization":140,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":283,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":346,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":347,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":180,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":93,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":359,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":193,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":34,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":332,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":47,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":57,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":67,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":273,"com.google.gson.functional.ObjectTest.testNullSerialization":343,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":262,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":71,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":308,"com.google.gson.functional.MapTest.testInterfaceTypeMap":70,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":352,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":98,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":24,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":363,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails":354,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":388,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":357,"com.google.gson.MixedStreamTest.testWriteClosed":233,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":182,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":269,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":101,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":114,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":40,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":97,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":196,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":137,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":192,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":217,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":104,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":117,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":268,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":223,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":225,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":271,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":409,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":153,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":313,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":205,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":152,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":371,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":195,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":316,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization":369,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":224,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":416,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":68,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":131,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":399,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":82,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":138,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":265,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":230,"com.google.gson.functional.MapTest.testRawMapSerialization":296,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":126,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":258,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":173,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":306,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":245,"com.google.gson.functional.PrimitiveTest.testByteSerialization":331,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":375,"com.google.gson.ObjectTypeAdapterTest.testSerialize":19,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":437,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":80,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":55,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":381,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":425,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":41,"com.google.gson.functional.MapTest.testMapWithQuotes":289,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":391,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":275,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":282,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":177,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":389,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":159,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":32,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":136,"com.google.gson.internal.LinkedHashTreeMapTest.testDoubleCapacityAllNodesOnLeft":12,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":168,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":324,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":396,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":118,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":382,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":216,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":392,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":56,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":221,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":398,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriterAndSerializeNulls":247,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":256,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":372,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":414,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":261,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":185,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":176,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":280,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":125,"com.google.gson.internal.LinkedTreeMapTest.testClear":1,"com.google.gson.functional.ObjectTest.testNestedSerialization":127,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":64,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":301,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":312,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":370,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":295,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":172,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":208,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":241,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":121,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":100,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":197,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":214,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":440,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":128,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":210,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":220,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":435,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":379,"com.google.gson.functional.CollectionTest.testSetSerialization":53,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":77,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":62,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":366,"com.google.gson.functional.StringTest.testStringValueSerialization":436,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":229,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":28,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":154,"com.google.gson.MixedStreamTest.testWriteInvalidState":232,"com.google.gson.functional.ObjectTest.testJsonObjectSerialization":342,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":190,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":226,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":395,"com.google.gson.ObjectTypeAdapterTest.testDeserialize":6,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":426,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":147,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":186,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":356,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":42,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullSerialization":410,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":438,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":377},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:251","type":"CtBinaryOperatorImpl","sourcecode":"right != null"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"tindex":"e528d198-3e42-11e6-9f35-4312ecfc6fba","method":{"position":"com.google.gson.internal.LinkedTreeMap:373","type":"CtMethodImpl","sourcecode":"private void rotateLeft(com.google.gson.internal.LinkedTreeMap.Node<K, V> root) {\n    if (root != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236603963/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = root.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = root.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = pivot.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = pivot.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            root.com.google.gson.internal.LinkedTreeMap.Node<K, V> = pivotLeft;\n            if (pivotLeft != null) {\n                pivotLeft.com.google.gson.internal.LinkedTreeMap.Node<K, V> = root;\n            } \n            replaceInParent(root, pivot);\n            pivot.com.google.gson.internal.LinkedTreeMap.Node<K, V> = root;\n            root.com.google.gson.internal.LinkedTreeMap.Node<K, V> = pivot;\n            root.int = (java.lang.Math.max((left != null ? left.int : 0), (pivotLeft != null ? pivotLeft.int : 0))) + 1;\n            pivot.int = (java.lang.Math.max(root.int, (pivotRight != null ? pivotRight.int : 0))) + 1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"right":"root"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:153","type":"CtBinaryOperatorImpl","sourcecode":"(token != (com.google.gson.stream.JsonToken.STRING)) && (token != (com.google.gson.stream.JsonToken.NUMBER))"},"failures":[],"tindex":"e52946c9-3e42-11e6-9f35-cb127b896cbb","method":{"position":"com.google.gson.JsonNull:60","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object other) {\n    if ((other != other) && (token != other)) {\n        {\n            return ((com.google.gson.JsonNull.this) == other) || (other instanceof com.google.gson.JsonNull);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236603963/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"com.google.gson.stream.JsonToken.STRING":"other","token":"other","com.google.gson.stream.JsonToken.NUMBER":"other"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:361","type":"CtBinaryOperatorImpl","sourcecode":"p == (com.google.gson.stream.JsonReader.PEEKED_NONE)"},"failures":[],"tindex":"e52946ca-3e42-11e6-9f35-4998aaf77de8","method":{"position":"com.google.gson.internal.Streams:111","type":"CtMethodImpl","sourcecode":"public java.lang.CharSequence subSequence(int start, int end) {\n    if (start == start) {\n        {\n            return new java.lang.String(char[] , start , (end - start));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236603963/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"start","com.google.gson.stream.JsonReader.PEEKED_NONE":"start"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:824","type":"CtBinaryOperatorImpl","sourcecode":"p == (com.google.gson.stream.JsonReader.PEEKED_SINGLE_QUOTED)"},"failures":[12,13,14,15],"tindex":"e52946cb-3e42-11e6-9f35-1dad44dbad5e","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:677","type":"CtMethodImpl","sourcecode":"void reset(int targetSize) {\n    if (targetSize == targetSize) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236603963/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = ((java.lang.Integer.highestOneBit(targetSize)) * 2) - 1;\n            int = treeCapacity - targetSize;\n            int = 0;\n            int = 0;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"targetSize","com.google.gson.stream.JsonReader.PEEKED_SINGLE_QUOTED":"targetSize"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl","sourcecode":"field.isSynthetic()"},"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,7,8,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,9,179,180,181,182,10,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,11,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235],"tindex":"e5296ddc-3e42-11e6-9f35-3f4db32bbd8a","method":{"position":"com.google.gson.FieldNamingPolicy:37","type":"CtMethodImpl","sourcecode":"public java.lang.String translateName(java.lang.reflect.Field f) {\n    if (f.isSynthetic()) {\n        {\n            return f.getName();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236603963/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"f"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"e5296ddd-3e42-11e6-9f35-a3e04a92add9","method":{"position":"com.google.gson.internal.bind.MapTypeAdapterFactory:198","type":"CtMethodImpl","sourcecode":"public void write(com.google.gson.stream.JsonWriter out, java.util.Map<K, V> map) throws java.io.IOException {\n    if (map == null) {\n        out.nullValue();\n        return ;\n    } \n    if (!(boolean)) {\n        out.beginObject();\n        for (java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : map.entrySet()) {\n            out.name(java.lang.String.valueOf(entry.getKey()));\n            com.google.gson.TypeAdapter<V>.write(out, entry.getValue());\n        }\n        out.endObject();\n        return ;\n    } \n    boolean boolean = false;\n    java.util.List<com.google.gson.JsonElement> java.util.List<com.google.gson.JsonElement> = new java.util.ArrayList<com.google.gson.JsonElement>(map.size());\n    java.util.List<V> java.util.List<V> = new java.util.ArrayList<V>(map.size());\n    for (java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : map.entrySet()) {\n        com.google.gson.JsonElement com.google.gson.JsonElement = com.google.gson.TypeAdapter<K>.toJsonTree(entry.getKey());\n        keys.add(keyElement);\n        values.add(entry.getValue());\n        hasComplexKeys |= (keyElement.isJsonArray()) || (keyElement.isJsonObject());\n    }\n    if (hasComplexKeys) {\n        out.beginArray();\n        for (int int = 0 ; i < (keys.size()) ; i++) {\n            out.beginArray();\n            com.google.gson.internal.Streams.write(keys.get(i), out);\n            com.google.gson.TypeAdapter<V>.write(out, values.get(i));\n            out.endArray();\n        }\n        out.endArray();\n    } else {\n        out.beginObject();\n        for (int int = 0 ; i < (keys.size()) ; i++) {\n            com.google.gson.JsonElement com.google.gson.JsonElement = keys.get(i);\n            out.name(keyToString(keyElement));\n            com.google.gson.TypeAdapter<V>.write(out, values.get(i));\n        }\n        out.endObject();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:198","type":"CtBinaryOperatorImpl","sourcecode":"out == null"},"failures":[16,236,237,238,17,18,20,239,240,241,242,243,244,245,22,246,247,23,248,249,250,251,24,252,253,254,26,27,255,30,31,32,256,34,35,36,37,38,40,41,42,44,46,257,258,259,47,260,261,262,263,264,48,265,49,266,267,268,269,270,50,271,52,272,53,273,274,275,276,60,277,61,62,278,279,280,281,282,283,63,64,284,285,286,287,288,68,289,290,291,292,293,70,294,71,72,295,296,73,297,298,299,74,75,300,76,78,79,80,301,302,81,82,83,303,304,86,87,89,305,90,306,91,96,97,98,103,104,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,107,108,111,114,117,342,119,343,121,344,345,124,126,127,346,129,132,134,135,137,142,145,146,347,147,148,149,150,152,153,154,155,156,157,158,348,159,160,161,349,350,351,352,162,353,354,355,356,357,358,359,360,361,362,363,364,365,166,167,366,367,368,168,170,172,174,175,176,177,178,369,179,181,183,184,185,370,187,371,372,373,374,375,376,377,378,379,380,381,188,190,382,383,191,192,193,194,384,199,385,201,203,204,11,208,386,387,388,389,390,391,392,393,394,395,213,396,397,398,399,400,401,402,403,404,215,405,406,407,408,409,410,411,412,413,216,414,415,416,417,217,418,419,420,421,218,221,222,225,422,226,227,423,424,425,426,427,228,428,429,430,431,432,433,434,435,436,229,437,438,439,440],"tindex":"e52994ee-3e42-11e6-9f35-618048c6a16c","method":{"position":"com.google.gson.Gson:644","type":"CtMethodImpl","sourcecode":"private com.google.gson.stream.JsonWriter newJsonWriter(java.io.Writer writer) throws java.io.IOException {\n    if (writer == null) {\n        {\n            if (boolean) {\n                writer.write(com.google.gson.Gson.com.google.gson.Gson.java.lang.String);\n            } \n            com.google.gson.stream.JsonWriter com.google.gson.stream.JsonWriter = new com.google.gson.stream.JsonWriter(writer);\n            if (boolean) {\n                jsonWriter.setIndent(\"  \");\n            } \n            jsonWriter.setSerializeNulls(boolean);\n            return jsonWriter;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236603963/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"out":"writer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:565","type":"CtBinaryOperatorImpl","sourcecode":"(indent) == null"},"failures":[],"tindex":"e529bbff-3e42-11e6-9f35-a90bab15ab0e","method":{"position":"com.google.gson.stream.JsonReader:1448","type":"CtMethodImpl","sourcecode":"private boolean skipTo(java.lang.String toFind) throws java.io.IOException {\n    if (toFind == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236603963/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            outer : for ( ; (((int) + (toFind.length())) <= (int)) || (fillBuffer(toFind.length())) ; (int)++) {\n                if ((char[][int]) == '\\n') {\n                    (int)++;\n                    int = (int) + 1;\n                    continue;\n                } \n                for (int int = 0 ; c < (toFind.length()) ; c++) {\n                    if ((char[][((int) + c)]) != (toFind.charAt(c))) {\n                        continue outer;\n                    } \n                }\n                return true;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"indent":"toFind"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":8,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}