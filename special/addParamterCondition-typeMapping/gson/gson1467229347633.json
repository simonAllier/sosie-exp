{"failureDictionary":{"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":67,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":200,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":110,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":237,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":20,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":321,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":339,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":121,"com.google.gson.functional.PrimitiveTest.testShortSerialization":173,"com.google.gson.internal.LinkedHashTreeMapTest.testIterationOrder":9,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":233,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":42,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":166,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":297,"com.google.gson.MixedStreamTest.testWriteLenient":353,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":333,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":36,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":313,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":83,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":68,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":70,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":78,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":245,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":41,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":276,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":217,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":82,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":177,"com.google.gson.functional.ObjectTest.testSingletonLists":182,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":277,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":309,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":340,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":31,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization":180,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":1,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":44,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":198,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":287,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":325,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":92,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":202,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":235,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":39,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":63,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":278,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":76,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":219,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":16,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":231,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":308,"com.google.gson.functional.EnumTest.testEnumCaseMapping":40,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":338,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":356,"com.google.gson.internal.LinkedHashTreeMapTest.testClear":6,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":2,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":280,"com.google.gson.functional.JsonTreeTest.testToJsonTree":285,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":240,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":141,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":145,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":58,"com.google.gson.functional.PrimitiveTest.testNumberSerialization":160,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":294,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":178,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":100,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":133,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":35,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":75,"com.google.gson.functional.MapTest.testGeneralMapField":115,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":258,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":205,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":124,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":220,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":266,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":314,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":113,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":26,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":129,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":148,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization":172,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":288,"com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization":167,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":190,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":229,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":126,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":154,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":18,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":25,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":79,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":215,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":323,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":130,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":232,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":164,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":306,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":158,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":329,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":95,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":179,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":196,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":263,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":3,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":255,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":327,"com.google.gson.internal.LinkedHashTreeMapTest.testEqualsAndHashCode":12,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":305,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":66,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":252,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":281,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":99,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":194,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":203,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":119,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":135,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":165,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":230,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":272,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":195,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":259,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":24,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":331,"com.google.gson.internal.LinkedHashTreeMapTest.testEmptyStringValues":8,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":46,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":150,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":49,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":171,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":62,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":138,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":52,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":87,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":81,"com.google.gson.functional.ObjectTest.testNullSerialization":187,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":65,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":312,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":114,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":147,"com.google.gson.functional.MapTest.testInterfaceTypeMap":112,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":304,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":125,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":222,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":140,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":218,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":38,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":234,"com.google.gson.functional.EnumTest.testEnumSet":34,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":186,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails":225,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":53,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":89,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":289,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":105,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":228,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":191,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":15,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":51,"com.google.gson.MixedStreamTest.testWriteClosed":355,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":33,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":74,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":226,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":168,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":184,"com.google.gson.internal.LinkedHashTreeMapTest.testPutNonComparableKeyFails":10,"com.google.gson.internal.LinkedHashTreeMapTest.testContainsNullKeyIsAlwaysFalse":11,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":54,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":139,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":275,"com.google.gson.stream.JsonWriterTest.testLongs":0,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":199,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":271,"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":332,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":59,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":279,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":320,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":144,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":185,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":73,"com.google.gson.functional.MapTest.testMapSerialization":109,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":250,"com.google.gson.functional.MapTest.testSerializeMaps":104,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":336,"com.google.gson.functional.MapTest.testComplexKeysSerialization":117,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":328,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":77,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsFalse":14,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":310,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":269,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":209,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":207,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":134,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":152,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":282,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":208,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":256,"com.google.gson.internal.LinkedHashTreeMapTest.testPutOverrides":5,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":274,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":155,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriter":32,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization":249,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":238,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":318,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":43,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":300,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":91,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":131,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":69,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":176,"com.google.gson.functional.MapTest.testRawMapSerialization":116,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":349,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":120,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":221,"com.google.gson.functional.PrettyPrintingTest.testMap":236,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":60,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":71,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":192,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":291,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":28,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":344,"com.google.gson.functional.CollectionTest.testQueueSerialization":72,"com.google.gson.functional.MapTest.testMapSerializationEmpty":118,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":301,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":19,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapNoTypeSerialization":21,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":30,"com.google.gson.functional.PrimitiveTest.testByteSerialization":170,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":260,"com.google.gson.functional.MapTest.testMapOfMapSerialization":108,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":156,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":127,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":84,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":161,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":213,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":97,"com.google.gson.functional.FieldNamingTest.testIdentity":337,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":341,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":265,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":334,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":55,"com.google.gson.functional.MapTest.testMapWithQuotes":107,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":251,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":292,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":45,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":85,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":181,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":284,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":88,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":98,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":17,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":248,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":123,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":290,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":342,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization":159,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":216,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":23,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":212,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":302,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullJsonElementSerialization":322,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":47,"com.google.gson.functional.MapTest.testMapSubclassSerialization":103,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":175,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":242,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":163,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":246,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":298,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":268,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":223,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":324,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":350,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":315,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":50,"com.google.gson.functional.EnumTest.testEnumSubclass":37,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization":162,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":293,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":29,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization":146,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":122,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":86,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":299,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":326,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":90,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":48,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":257,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":316,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":64,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":253,"com.google.gson.internal.LinkedHashTreeMapTest.testContainsNonComparableKeyReturnsFalse":7,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":201,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":247,"com.google.gson.internal.LinkedHashTreeMapTest.testRemoveRootDoesNotDoubleUnlink":13,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":136,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":96,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":22,"com.google.gson.functional.ObjectTest.testNestedSerialization":193,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":101,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":128,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":151,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization":157,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":254,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":244,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":317,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":286,"com.google.gson.MixedStreamTest.testWriteNulls":351,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":264,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":27,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":354,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":261,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":188,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":206,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":94,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":183,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":142,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":273,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":111,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":343,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":357,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":214,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":345,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":57,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":174,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":319,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":243,"com.google.gson.functional.CollectionTest.testSetSerialization":80,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":93,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":239,"com.google.gson.functional.StringTest.testStringValueSerialization":346,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":347,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":210,"com.google.gson.MixedStreamTest.testWriteInvalidState":352,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":149,"com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash":4,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":270,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":153,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":211,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":267,"com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization":169,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":307,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":330,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":296,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":303,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":335,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":204,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":241,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":102,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":106,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":143,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":132,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":283,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":227,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":56,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization":189,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":197,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullSerialization":311,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":61,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":348,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":224,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":137,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":295,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":262},"transformations":[{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"9c370596-3e31-11e6-864f-85faeb6bea33","method":{"position":"com.google.gson.Gson:285","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        out.nullValue();\n        return ;\n    } \n    float float = value.floatValue();\n    checkValidFloatingPoint(floatValue);\n    out.value(value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:543","type":"CtBinaryOperatorImpl","sourcecode":"c == (-1)"},"failures":[],"tindex":"9c3753b7-3e31-11e6-864f-73088db57784","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:35","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(char[] buffer, int offset, int counter) {\n    if (offset == (-1)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229030386/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            throw new java.lang.AssertionError();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"offset"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:726","type":"CtBinaryOperatorImpl","sourcecode":"value == 0"},"failures":[0,1,2,3],"tindex":"9c377ac8-3e31-11e6-864f-fd366e803271","method":{"position":"com.google.gson.stream.JsonWriter:476","type":"CtMethodImpl","sourcecode":"public com.google.gson.stream.JsonWriter value(long value) throws java.io.IOException {\n    if (value == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229030386/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            writeDeferredName();\n            beforeValue(false);\n            java.io.Writer.write(java.lang.Long.toString(value));\n            return com.google.gson.stream.JsonWriter.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.DefaultDateTypeAdapter:85","type":"CtBinaryOperatorImpl","sourcecode":"typeOfT == (java.sql.Timestamp.class)"},"failures":[],"tindex":"9c377ac9-3e31-11e6-864f-87d9c17e836b","method":{"position":"com.google.gson.Gson:801","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic <T>T fromJson(com.google.gson.stream.JsonReader reader, java.lang.reflect.Type typeOfT) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException {\n    if (typeOfT == typeOfT) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229030386/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    } else {\n        {\n            boolean boolean = true;\n            boolean boolean = reader.isLenient();\n            reader.setLenient(true);\n            try {\n                reader.peek();\n                isEmpty = false;\n                com.google.gson.reflect.TypeToken<T> com.google.gson.reflect.TypeToken<T> = ((com.google.gson.reflect.TypeToken<T>)(com.google.gson.reflect.TypeToken.get(typeOfT)));\n                com.google.gson.TypeAdapter<T> com.google.gson.TypeAdapter<T> = getAdapter(typeToken);\n                T T = typeAdapter.read(reader);\n                return object;\n            } catch (java.io.EOFException e) {\n                if (isEmpty) {\n                    return null;\n                } \n                throw new com.google.gson.JsonSyntaxException(e);\n            } catch (java.lang.IllegalStateException e) {\n                throw new com.google.gson.JsonSyntaxException(e);\n            } catch (java.io.IOException e) {\n                throw new com.google.gson.JsonSyntaxException(e);\n            } finally {\n                reader.setLenient(oldLenient);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeOfT":"typeOfT","java.sql.Timestamp.class":"typeOfT"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"9c37a1da-3e31-11e6-864f-bd40159a66ec","method":{"position":"com.google.gson.Gson:254","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Double read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return in.nextDouble();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"9c37a1db-3e31-11e6-864f-61a584c1ddce","method":{"position":"com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:45","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"rawtypes\" , \"unchecked\" })\n@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, T value) throws java.io.IOException {\n    com.google.gson.TypeAdapter com.google.gson.TypeAdapter = com.google.gson.TypeAdapter<T>;\n    java.lang.reflect.Type java.lang.reflect.Type = getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type, value);\n    if (runtimeType != (java.lang.reflect.Type)) {\n        com.google.gson.TypeAdapter com.google.gson.TypeAdapter = com.google.gson.Gson.getAdapter(com.google.gson.reflect.TypeToken.get(runtimeType));\n        if (!(runtimeTypeAdapter instanceof com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.Adapter)) {\n            chosen = runtimeTypeAdapter;\n        } else if (!((com.google.gson.TypeAdapter<T>) instanceof com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.Adapter)) {\n            chosen = com.google.gson.TypeAdapter<T>;\n        } else {\n            chosen = runtimeTypeAdapter;\n        }\n    } \n    chosen.write(out, value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonElement:103","type":"CtInvocationImpl","sourcecode":"isJsonArray()"},"failures":[],"tindex":"9c37c8ec-3e31-11e6-864f-8ddfdb20e35a","method":{"position":"com.google.gson.DefaultDateTypeAdapter:94","type":"CtMethodImpl","sourcecode":"private java.util.Date deserializeToDate(com.google.gson.JsonElement json) {\n    synchronized(java.text.DateFormat) {\n        try {\n            return java.text.DateFormat.parse(json.getAsString());\n        } catch (java.text.ParseException ignored) {\n        }\n        try {\n            return java.text.DateFormat.parse(json.getAsString());\n        } catch (java.text.ParseException ignored) {\n        }\n        try {\n            return java.text.DateFormat.parse(json.getAsString());\n        } catch (java.text.ParseException e) {\n            throw new com.google.gson.JsonSyntaxException(json.getAsString() , e);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"9c37c8ed-3e31-11e6-864f-bb4e0b58a3d8","method":{"position":"com.google.gson.internal.bind.CollectionTypeAdapterFactory:88","type":"CtMethodImpl","sourcecode":"public void write(com.google.gson.stream.JsonWriter out, java.util.Collection<E> collection) throws java.io.IOException {\n    if (collection == null) {\n        out.nullValue();\n        return ;\n    } \n    out.beginArray();\n    for (E E : collection) {\n        com.google.gson.TypeAdapter<E>.write(out, element);\n    }\n    out.endArray();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:137","type":"CtBinaryOperatorImpl","sourcecode":"element instanceof com.google.gson.JsonObject"},"failures":[],"tindex":"9c37c8ee-3e31-11e6-864f-7f41ce451780","method":{"position":"com.google.gson.Gson:660","type":"CtMethodImpl","sourcecode":"public void toJson(com.google.gson.JsonElement jsonElement, com.google.gson.stream.JsonWriter writer) throws com.google.gson.JsonIOException {\n    if (jsonElement instanceof com.google.gson.JsonObject) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229030386/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    } else {\n        {\n            boolean boolean = writer.isLenient();\n            writer.setLenient(true);\n            boolean boolean = writer.isHtmlSafe();\n            writer.setHtmlSafe(boolean);\n            boolean boolean = writer.getSerializeNulls();\n            writer.setSerializeNulls(boolean);\n            try {\n                com.google.gson.internal.Streams.write(jsonElement, writer);\n            } catch (java.io.IOException e) {\n                throw new com.google.gson.JsonIOException(e);\n            } finally {\n                writer.setLenient(oldLenient);\n                writer.setHtmlSafe(oldHtmlSafe);\n                writer.setSerializeNulls(oldSerializeNulls);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"jsonElement"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:153","type":"CtBinaryOperatorImpl","sourcecode":"(token != (com.google.gson.stream.JsonToken.STRING)) && (token != (com.google.gson.stream.JsonToken.NUMBER))"},"failures":[],"tindex":"9c37efff-3e31-11e6-864f-83d80768c9d5","method":{"position":"com.google.gson.internal.bind.JsonTreeReader:137","type":"CtMethodImpl","sourcecode":"private void expect(com.google.gson.stream.JsonToken expected) throws java.io.IOException {\n    if ((expected != expected) && (token != expected)) {\n        {\n            if ((peek()) != expected) {\n                throw new java.lang.IllegalStateException((((\"Expected \" + expected) + \" but was \") + (peek())));\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229030386/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"com.google.gson.stream.JsonToken.STRING":"expected","token":"expected","com.google.gson.stream.JsonToken.NUMBER":"expected"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:332","type":"CtBinaryOperatorImpl","sourcecode":"(toResolve instanceof java.lang.Class) && (((java.lang.Class<?>)(toResolve)).isArray())"},"failures":[],"tindex":"9c37f000-3e31-11e6-864f-2350ca0dc777","method":{"position":"com.google.gson.internal.$Gson$Types:431","type":"CtMethodImpl","sourcecode":"private static void checkNotPrimitive(java.lang.reflect.Type type) {\n    com.google.gson.internal.$Gson$Preconditions.checkArgument(((!(type instanceof java.lang.Class<?>)) || (!(((java.lang.Class<?>)(type)).isPrimitive()))));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"type"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1258","type":"CtBinaryOperatorImpl","sourcecode":"p == (com.google.gson.stream.JsonReader.PEEKED_NUMBER)"},"failures":[4,5,6,7,8,9,10,11,12,13],"tindex":"9c386531-3e31-11e6-864f-23083a907c15","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:233","type":"CtMethodImpl","sourcecode":"private static int secondaryHash(int h) {\n    if (h == h) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229030386/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (h == h) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229030386/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    h ^= (h >>> 20) ^ (h >>> 12);\n                    return (h ^ (h >>> 7)) ^ (h >>> 4);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"h","com.google.gson.stream.JsonReader.PEEKED_NUMBER":"h"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"9c386532-3e31-11e6-864f-fbf6ae4a7d4b","method":{"position":"com.google.gson.internal.bind.TypeAdapters:317","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    out.value(value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:218","type":"CtVariableReadImpl","sourcecode":"unlink"},"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,1,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,2,299,300,301,302,303,304,305,306,307,308,3,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357],"tindex":"9c388c43-3e31-11e6-864f-a90e21ae2136","method":{"position":"com.google.gson.stream.JsonWriter:268","type":"CtMethodImpl","sourcecode":"public final void setSerializeNulls(boolean serializeNulls) {\n    if (serializeNulls) {\n        {\n            com.google.gson.stream.JsonWriter.this.boolean = serializeNulls;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229030386/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"unlink":"serializeNulls"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.$Gson$Types:293","type":"CtBinaryOperatorImpl","sourcecode":"collectionType instanceof java.lang.reflect.ParameterizedType"},"failures":[],"tindex":"9c38da64-3e31-11e6-864f-5b9aac713878","method":{"position":"com.google.gson.internal.bind.ArrayTypeAdapter:84","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Object array) throws java.io.IOException {\n    if (array instanceof java.lang.reflect.ParameterizedType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229030386/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (array == null) {\n                out.nullValue();\n                return ;\n            } \n            out.beginArray();\n            for (int int = 0, int int = java.lang.reflect.Array.getLength(array) ; i < length ; i++) {\n                E E = ((E)(java.lang.reflect.Array.get(array, i)));\n                com.google.gson.TypeAdapter<E>.write(out, value);\n            }\n            out.endArray();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collectionType":"array"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1249","type":"CtBinaryOperatorImpl","sourcecode":"p == (com.google.gson.stream.JsonReader.PEEKED_END_OBJECT)"},"failures":[],"tindex":"9c38da65-3e31-11e6-864f-3dcf8c0deb75","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:233","type":"CtMethodImpl","sourcecode":"private static int secondaryHash(int h) {\n    if (h == h) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229030386/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (h == h) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467229030386/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    h ^= (h >>> 20) ^ (h >>> 12);\n                    return (h ^ (h >>> 7)) ^ (h >>> 4);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"h","com.google.gson.stream.JsonReader.PEEKED_END_OBJECT":"h"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"9c390176-3e31-11e6-864f-7382404b48e4","method":{"position":"com.google.gson.internal.bind.ObjectTypeAdapter:54","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Object read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    com.google.gson.stream.JsonToken com.google.gson.stream.JsonToken = in.peek();\n    switch (token) {\n        case BEGIN_ARRAY :\n            java.util.List<java.lang.Object> java.util.List<java.lang.Object> = new java.util.ArrayList<java.lang.Object>();\n            in.beginArray();\n            while (in.hasNext()) {\n                list.add(read(in));\n            }\n            in.endArray();\n            return list;\n        case BEGIN_OBJECT :\n            java.util.Map<java.lang.String, java.lang.Object> java.util.Map<java.lang.String, java.lang.Object> = new com.google.gson.internal.LinkedTreeMap<java.lang.String, java.lang.Object>();\n            in.beginObject();\n            while (in.hasNext()) {\n                map.put(in.nextName(), read(in));\n            }\n            in.endObject();\n            return map;\n        case STRING :\n            return in.nextString();\n        case NUMBER :\n            return in.nextDouble();\n        case BOOLEAN :\n            return in.nextBoolean();\n        case NULL :\n            in.nextNull();\n            return null;\n        default :\n            throw new java.lang.IllegalStateException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":17,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}