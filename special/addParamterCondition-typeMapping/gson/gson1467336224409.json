{"failureDictionary":{"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":230,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":263,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":148,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":20,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":106,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":224,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":191,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":85,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":153,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":90,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":162,"com.google.gson.internal.LinkedTreeMapTest.testEmptyStringValues":15,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":33,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":218,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":219,"com.google.gson.internal.LinkedTreeMapTest.testPutOverrides":12,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":73,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":160,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":222,"com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues":23,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":194,"com.google.gson.JsonObjectTest.testAddingNullPropertyValue":2,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":120,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":240,"com.google.gson.functional.ObjectTest.testSingletonLists":158,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":41,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":98,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":146,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":247,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":67,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":173,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":135,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":185,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":215,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":200,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":201,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":74,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":152,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":137,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":189,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":165,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":52,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":256,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":84,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":220,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":238,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":101,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":244,"com.google.gson.functional.MapTest.testMapOfMapDeserialization":27,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":278,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":210,"com.google.gson.functional.JsonTreeTest.testToJsonTree":141,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":245,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":49,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":51,"com.google.gson.JsonObjectTest.testEqualsNonEmptyObject":3,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":127,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":248,"com.google.gson.internal.LinkedTreeMapTest.testLargeSetOfRandomKeys":13,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":241,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":80,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":31,"com.google.gson.functional.MapTest.testGeneralMapField":104,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":163,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":129,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":109,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":274,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":170,"com.google.gson.ObjectTypeAdapterTest.testDeserializeNullValue":8,"com.google.gson.MixedStreamTest.testReadMixedStreamed":66,"com.google.gson.internal.LinkedTreeMapTest.testContainsNonComparableKeyReturnsFalse":14,"com.google.gson.JsonObjectTest.testDeepCopy":6,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":277,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":180,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":209,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectDeserialization":21,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":97,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":143,"com.google.gson.JsonParserTest.testParseString":11,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":71,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":87,"com.google.gson.functional.MapTest.testDeerializeMapOfMaps":26,"com.google.gson.functional.MapTest.testMapDeserializationWithNullKey":22,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":182,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":81,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":154,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":204,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":261,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":235,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":45,"com.google.gson.functional.ObjectTest.testNestedDeserialization":190,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":134,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":77,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":46,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":198,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":179,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":68,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":166,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":251,"com.google.gson.functional.MapTest.testMapDeserializationWithNullValue":28,"com.google.gson.internal.LinkedHashTreeMapTest.testEmptyStringValues":57,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":229,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":115,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":99,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":255,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":211,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":118,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":36,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":156,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":38,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":258,"com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey":24,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":103,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":70,"com.google.gson.functional.MapTest.testInterfaceTypeMap":102,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":276,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":132,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":213,"com.google.gson.functional.CollectionTest.testSetDeserialization":221,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":195,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":266,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":169,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":262,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":119,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":174,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":69,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":117,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":72,"com.google.gson.MixedStreamTest.testWriteClosed":65,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":79,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":147,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":164,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":214,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":279,"com.google.gson.internal.LinkedHashTreeMapTest.testContainsNullKeyIsAlwaysFalse":58,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":121,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":212,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":44,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":187,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":197,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":75,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":252,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":208,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":89,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":167,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":217,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":205,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":76,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":107,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":93,"com.google.gson.functional.MapTest.testComplexKeysSerialization":105,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":207,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":260,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":53,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":268,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":131,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":267,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":246,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":139,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":133,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":264,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":43,"com.google.gson.JsonObjectTest.testAddingAndRemovingObjectProperties":4,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":149,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":206,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":225,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":100,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":181,"com.google.gson.functional.MapTest.testStringKeyDeserialization":29,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":144,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":188,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":62,"com.google.gson.JsonParserTest.testParseReader":10,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":176,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":253,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":78,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":108,"com.google.gson.JsonObjectTest.testAddingBooleanProperties":5,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":17,"com.google.gson.ObjectTypeAdapterTest.testSerialize":61,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":142,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":34,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":272,"com.google.gson.functional.FieldNamingTest.testIdentity":94,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":91,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":122,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":39,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":234,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":183,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":40,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":157,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":228,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":42,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":231,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":193,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":60,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":271,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":113,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":186,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":150,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":18,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":126,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":168,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":63,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":112,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":155,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":88,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":145,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":116,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":172,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":273,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":35,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":203,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":136,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":259,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":257,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":236,"com.google.gson.internal.LinkedHashTreeMapTest.testContainsNonComparableKeyReturnsFalse":56,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":19,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":233,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":232,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":37,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":47,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":59,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":175,"com.google.gson.JsonObjectTest.testAddingStringProperties":7,"com.google.gson.internal.LinkedTreeMapTest.testEqualsAndHashCode":16,"com.google.gson.functional.ObjectTest.testNestedSerialization":177,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":249,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":227,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":32,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":151,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":159,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":171,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":114,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":130,"com.google.gson.JsonObjectTest.testReadPropertyWithEmptyStringName":0,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":161,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":243,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":50,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":96,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":110,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":199,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":86,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":82,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":178,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":202,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":192,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":125,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":30,"com.google.gson.functional.CollectionTest.testSetSerialization":223,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":275,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":138,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":95,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":226,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":269,"com.google.gson.MixedStreamTest.testWriteInvalidState":64,"com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash":55,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":196,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":111,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":270,"com.google.gson.functional.MapTest.testMapDeserialization":25,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":250,"com.google.gson.ObjectTypeAdapterTest.testDeserialize":9,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":92,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":128,"com.google.gson.JsonObjectTest.testAddingCharacterProperties":1,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":239,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":216,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":242,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":237,"com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeMap":54,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":265,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":140,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":83,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":123,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":184,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":254,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":48,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":124},"transformations":[{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"73c14140-3f2a-11e6-8e87-fd0585ab1ca5","method":{"position":"com.google.gson.internal.bind.TypeAdapters:348","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.String read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    com.google.gson.stream.JsonToken com.google.gson.stream.JsonToken = in.peek();\n    if (peek == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    if (peek == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        return java.lang.Boolean.toString(in.nextBoolean());\n    } \n    return in.nextString();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"73c20491-3f2a-11e6-8e87-ef5546f7976d","method":{"position":"com.google.gson.internal.bind.SqlDateTypeAdapter:64","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized void write(com.google.gson.stream.JsonWriter out, java.sql.Date value) throws java.io.IOException {\n    out.value((value == null ? null : java.text.DateFormat.format(value)));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:163","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"73c22ba2-3f2a-11e6-8e87-7d88e1cbb4b0","method":{"position":"com.google.gson.internal.$Gson$Types:54","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type ownerType, java.lang.reflect.Type rawType, java.lang.reflect.Type... typeArguments) {\n    return new com.google.gson.internal.$Gson$Types.ParameterizedTypeImpl(ownerType , rawType , typeArguments);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"ownerType"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"73c22ba3-3f2a-11e6-8e87-a9eeb3b245cf","method":{"position":"com.google.gson.internal.bind.TypeAdapters:379","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.math.BigDecimal value) throws java.io.IOException {\n    out.value(value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:182","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"73c252b4-3f2a-11e6-8e87-f1031b01d68e","method":{"position":"com.google.gson.stream.JsonWriter:461","type":"CtMethodImpl","sourcecode":"public com.google.gson.stream.JsonWriter value(double value) throws java.io.IOException {\n    if ((java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(value))) {\n        {\n            if ((java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(d))) {\n                {\n                    if ((java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(value))) {\n                        throw new java.lang.IllegalArgumentException((\"Numeric values must be finite, but was \" + value));\n                    } \n                    writeDeferredName();\n                    beforeValue(false);\n                    java.io.Writer.append(java.lang.Double.toString(value));\n                    return com.google.gson.stream.JsonWriter.this;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467335744802/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467335744802/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"d":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:290","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"73c279c5-3f2a-11e6-8e87-d558760f5b48","method":{"position":"com.google.gson.TypeAdapter:254","type":"CtMethodImpl","sourcecode":"public final T fromJson(java.io.Reader in) throws java.io.IOException {\n    if (in == null) {\n        {\n            if (in == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467335744802/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            } else {\n                {\n                    com.google.gson.stream.JsonReader com.google.gson.stream.JsonReader = new com.google.gson.stream.JsonReader(in);\n                    return read(reader);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467335744802/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"in":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:198","type":"CtBinaryOperatorImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"tindex":"73c279c6-3f2a-11e6-8e87-f7338ffb165c","method":{"position":"com.google.gson.internal.LinkedTreeMap:184","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\ncom.google.gson.internal.LinkedTreeMap.Node<K, V> findByObject(java.lang.Object key) {\n    if (key == null) {\n        {\n            try {\n                return key != null ? find(((K)(key)), false) : null;\n            } catch (java.lang.ClassCastException e) {\n                return null;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467335744802/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"out":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"73c2a0d7-3f2a-11e6-8e87-99fd7f4a7285","method":{"position":"com.google.gson.internal.bind.TypeAdapters:580","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.util.Calendar value) throws java.io.IOException {\n    if (value == null) {\n        out.nullValue();\n        return ;\n    } \n    out.beginObject();\n    out.name(com.google.gson.internal.bind.TypeAdapters.23.java.lang.String);\n    out.value(value.get(java.util.Calendar.java.util.Calendar.int));\n    out.name(com.google.gson.internal.bind.TypeAdapters.23.java.lang.String);\n    out.value(value.get(java.util.Calendar.java.util.Calendar.int));\n    out.name(com.google.gson.internal.bind.TypeAdapters.23.java.lang.String);\n    out.value(value.get(java.util.Calendar.java.util.Calendar.int));\n    out.name(com.google.gson.internal.bind.TypeAdapters.23.java.lang.String);\n    out.value(value.get(java.util.Calendar.java.util.Calendar.int));\n    out.name(com.google.gson.internal.bind.TypeAdapters.23.java.lang.String);\n    out.value(value.get(java.util.Calendar.java.util.Calendar.int));\n    out.name(com.google.gson.internal.bind.TypeAdapters.23.java.lang.String);\n    out.value(value.get(java.util.Calendar.java.util.Calendar.int));\n    out.endObject();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.GsonBuilder:501","type":"CtBinaryOperatorImpl"},"failures":[55,56,57,58],"tindex":"73c2c7e8-3f2a-11e6-8e87-bbb8108b3f53","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:90","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(java.lang.Object key) {\n    if (key instanceof com.google.gson.TypeAdapter<?>) {\n        {\n            return (findByObject(key)) != null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467335744802/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeAdapter":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"73c2eef9-3f2a-11e6-8e87-2f71c0896b16","method":{"position":"com.google.gson.internal.bind.CollectionTypeAdapterFactory:72","type":"CtMethodImpl","sourcecode":"public java.util.Collection<E> read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    java.util.Collection<E> java.util.Collection<E> = com.google.gson.internal.ObjectConstructor<? extends java.util.Collection<E>>.construct();\n    in.beginArray();\n    while (in.hasNext()) {\n        E E = com.google.gson.TypeAdapter<E>.read(in);\n        collection.add(instance);\n    }\n    in.endArray();\n    return collection;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.JsonArray:58","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"73c2eefa-3f2a-11e6-8e87-6baa0adf85ff","method":{"position":"com.google.gson.Gson:631","type":"CtMethodImpl","sourcecode":"public void toJson(com.google.gson.JsonElement jsonElement, java.lang.Appendable writer) throws com.google.gson.JsonIOException {\n    if (jsonElement == null) {\n        {\n            try {\n                com.google.gson.stream.JsonWriter com.google.gson.stream.JsonWriter = newJsonWriter(com.google.gson.internal.Streams.writerForAppendable(writer));\n                toJson(jsonElement, jsonWriter);\n            } catch (java.io.IOException e) {\n                throw new java.lang.RuntimeException(e);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467335744802/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"jsonElement"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:414","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"73c3160b-3f2a-11e6-8e87-a540384fa826","method":{"position":"com.google.gson.internal.LinkedTreeMap:570","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(java.lang.Object o) {\n    if (o == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467335744802/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (o instanceof java.util.Map.Entry) && ((findByEntry(((java.util.Map.Entry<?, ?>)(o)))) != null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:462","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"73c3160c-3f2a-11e6-8e87-6352f1fbbbb4","method":{"position":"com.google.gson.stream.JsonWriter:461","type":"CtMethodImpl","sourcecode":"public com.google.gson.stream.JsonWriter value(double value) throws java.io.IOException {\n    if ((java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(value))) {\n        {\n            if ((java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(d))) {\n                {\n                    if ((java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(value))) {\n                        throw new java.lang.IllegalArgumentException((\"Numeric values must be finite, but was \" + value));\n                    } \n                    writeDeferredName();\n                    beforeValue(false);\n                    java.io.Writer.append(java.lang.Double.toString(value));\n                    return com.google.gson.stream.JsonWriter.this;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467335744802/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467335744802/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:133","type":"CtBinaryOperatorImpl"},"failures":[59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,18,19,74,75,20,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,30,31,32,108,109,110,111,112,33,34,35,36,113,114,115,116,117,118,119,120,121,122,123,124,125,37,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,40,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,41,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,42,192,193,194,195,196,197,198,199,43,44,200,201,202,203,204,205,206,207,208,209,210,45,46,47,48,211,212,213,49,50,214,215,216,217,51,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,52,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277],"tindex":"73c38b3d-3f2a-11e6-8e87-7d48c3183df3","method":{"position":"com.google.gson.internal.Primitives:69","type":"CtMethodImpl","sourcecode":"public static boolean isPrimitive(java.lang.reflect.Type type) {\n    if (type instanceof java.lang.reflect.ParameterizedType) {\n        {\n            return com.google.gson.internal.Primitives.com.google.gson.internal.Primitives.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.containsKey(type);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467335744802/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:111","type":"CtInvocationImpl"},"failures":[],"tindex":"73c4277e-3f2a-11e6-8e87-73f69bc05f16","method":{"position":"com.google.gson.JsonArray:57","type":"CtMethodImpl","sourcecode":"public void add(com.google.gson.JsonElement element) {\n    if (element.isString()) {\n        {\n            if (element == null) {\n                element = com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull;\n            } \n            java.util.List<com.google.gson.JsonElement>.add(element);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467335744802/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"primitive":"element"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.JsonPrimitive:293","type":"CtInvocationImpl"},"failures":[],"tindex":"73c44e8f-3f2a-11e6-8e87-7df28bf028ee","method":{"position":"com.google.gson.Gson:847","type":"CtMethodImpl","sourcecode":"public <T>T fromJson(com.google.gson.JsonElement json, java.lang.Class<T> classOfT) throws com.google.gson.JsonSyntaxException {\n    java.lang.Object java.lang.Object = fromJson(json, ((java.lang.reflect.Type)(classOfT)));\n    return com.google.gson.internal.Primitives.wrap(classOfT).cast(object);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:86","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"73c44e90-3f2a-11e6-8e87-7b655db69118","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:303","type":"CtMethodImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V> removeInternalByKey(java.lang.Object key) {\n    if (key instanceof com.google.gson.JsonArray) {\n        {\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = findByObject(key);\n            if (node != null) {\n                removeInternal(node, true);\n            } \n            return node;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467335744802/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.Gson:511","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"73c475a1-3f2a-11e6-8e87-eb1108970676","method":{"position":"com.google.gson.Gson:552","type":"CtMethodImpl","sourcecode":"public void toJson(java.lang.Object src, java.lang.Appendable writer) throws com.google.gson.JsonIOException {\n    if (src == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467335744802/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    } else {\n        {\n            if (src != null) {\n                toJson(src, src.getClass(), writer);\n            } else {\n                toJson(com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull, writer);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"src":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"73c475a2-3f2a-11e6-8e87-ad6f64bc3f54","method":{"position":"com.google.gson.internal.bind.TypeAdapters:274","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return ((float)(in.nextDouble()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"73c475a3-3f2a-11e6-8e87-1b6e58197683","method":{"position":"com.google.gson.internal.bind.TypeAdapters:432","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.StringBuffer value) throws java.io.IOException {\n    out.value((value == null ? null : value.toString()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:491","type":"CtBinaryOperatorImpl"},"failures":[278,279],"tindex":"73c49cb4-3f2a-11e6-8e87-edadb5e1cf3a","method":{"position":"com.google.gson.Gson:317","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        {\n            if (value == null) {\n                out.nullValue();\n                return ;\n            } \n            out.value(value.toString());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467335744802/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:735","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"73c49cb5-3f2a-11e6-8e87-9f9bde1be8d5","method":{"position":"com.google.gson.stream.JsonReader:1288","type":"CtMethodImpl","sourcecode":"private boolean fillBuffer(int minimum) throws java.io.IOException {\n    if ((minimum == minimum) || (last == minimum)) {\n        {\n            char[] char[] = com.google.gson.stream.JsonReader.this.char[];\n            int -= int;\n            if ((int) != (int)) {\n                int -= int;\n                java.lang.System.arraycopy(buffer, int, buffer, 0, int);\n            } else {\n                int = 0;\n            }\n            int = 0;\n            int int;\n            while ((total = java.io.Reader.read(buffer, int, ((buffer.int) - (int)))) != (-1)) {\n                int += total;\n                if (((((int) == 0) && ((int) == 0)) && ((int) > 0)) && ((buffer[0]) == '\\ufeff')) {\n                    (int)++;\n                    (int)++;\n                    minimum++;\n                } \n                if ((int) >= minimum) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467335744802/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"com.google.gson.stream.JsonReader.NUMBER_CHAR_EXP_SIGN":"minimum","last":"minimum","com.google.gson.stream.JsonReader.NUMBER_CHAR_EXP_E":"minimum"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:389","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"73c4c3c6-3f2a-11e6-8e87-b58d6f1b4c5c","method":{"position":"com.google.gson.JsonObject:171","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonArray getAsJsonArray(java.lang.String memberName) {\n    if (memberName != null) {\n        {\n            return ((com.google.gson.JsonArray)(com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.get(memberName)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467335744802/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"memberName"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:290","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"73c4c3c7-3f2a-11e6-8e87-e1c2a2434638","method":{"position":"com.google.gson.TypeAdapter:254","type":"CtMethodImpl","sourcecode":"public final T fromJson(java.io.Reader in) throws java.io.IOException {\n    if (in == null) {\n        {\n            if (in == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467335744802/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            } else {\n                {\n                    com.google.gson.stream.JsonReader com.google.gson.stream.JsonReader = new com.google.gson.stream.JsonReader(in);\n                    return read(reader);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467335744802/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"in":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:403","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"73c4ead8-3f2a-11e6-8e87-3798bc6a33fe","method":{"position":"com.google.gson.Gson:780","type":"CtMethodImpl","sourcecode":"private static void assertFullConsumption(java.lang.Object obj, com.google.gson.stream.JsonReader reader) {\n    if (obj instanceof java.lang.reflect.ParameterizedType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467335744802/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            try {\n                if ((obj != null) && ((reader.peek()) != (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken))) {\n                    throw new com.google.gson.JsonIOException(\"JSON document was not fully consumed.\");\n                } \n            } catch (com.google.gson.stream.MalformedJsonException e) {\n                throw new com.google.gson.JsonSyntaxException(e);\n            } catch (java.io.IOException e) {\n                throw new com.google.gson.JsonIOException(e);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"declaredBy":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:429","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"73c4ead9-3f2a-11e6-8e87-19400f5f7e8e","method":{"position":"com.google.gson.JsonObject:89","type":"CtMethodImpl","sourcecode":"public void addProperty(java.lang.String property, java.lang.Number value) {\n    if (property != null) {\n        {\n            add(property, createJsonElement(value));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467335744802/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"property"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":26,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}