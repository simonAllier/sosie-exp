{"failureDictionary":{"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":161,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":218,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":28,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":160,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":60,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":199,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":99,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":122,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":170,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":45,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":212,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":213,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":109,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":168,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":216,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":114,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":88,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":146,"com.google.gson.functional.ObjectTest.testSingletonLists":166,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":125,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":142,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":105,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":153,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":6,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":181,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":56,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":76,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":193,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":36,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":37,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":54,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":139,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":58,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":197,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":173,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":80,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":98,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":214,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":144,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":155,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":150,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":136,"com.google.gson.functional.JsonTreeTest.testToJsonTree":121,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":151,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":73,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":79,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":95,"com.google.gson.internal.LinkedHashTreeMapTest.testAvlBuilder":228,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":25,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":147,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":33,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":208,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":236,"com.google.gson.functional.MapTest.testGeneralMapField":158,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":171,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":201,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":50,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":127,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":178,"com.google.gson.MixedStreamTest.testReadMixedStreamed":5,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":53,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":188,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":135,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":131,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":141,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":8,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":101,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":190,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":133,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":123,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":40,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":11,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":137,"com.google.gson.functional.ObjectTest.testNestedDeserialization":198,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":55,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":30,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":67,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":21,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":187,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":35,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":174,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":221,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":65,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":83,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":143,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":66,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":70,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":86,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":48,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":126,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":157,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":7,"com.google.gson.functional.MapTest.testInterfaceTypeMap":156,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":52,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":72,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":204,"com.google.gson.functional.CollectionTest.testSetDeserialization":215,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":115,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":107,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":177,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":87,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":182,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":0,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":85,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":9,"com.google.gson.MixedStreamTest.testWriteClosed":4,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":32,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":106,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":75,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":172,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":89,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":71,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":24,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":20,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":195,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":27,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":134,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":103,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":78,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":175,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":41,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":29,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":206,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":43,"com.google.gson.functional.MapTest.testComplexKeysSerialization":159,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":14,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":108,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":203,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":152,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":118,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":205,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":23,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":42,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":219,"com.google.gson.internal.LinkedHashTreeMapTest.testDoubleCapacity":229,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":61,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":154,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":189,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":132,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":196,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":1,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":184,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":31,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":210,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":235,"com.google.gson.ObjectTypeAdapterTest.testSerialize":224,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":230,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":130,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":46,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":18,"com.google.gson.functional.FieldNamingTest.testIdentity":211,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":90,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":10,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":191,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":64,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":120,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":165,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":117,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":162,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":113,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":223,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":17,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":81,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":194,"com.google.gson.internal.LinkedHashTreeMapTest.testDoubleCapacityAllNodesOnLeft":226,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":220,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":94,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":110,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":176,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":233,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":2,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":116,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":124,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":102,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":104,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":84,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":180,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":49,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":39,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":47,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":57,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":12,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":111,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":164,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":163,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":68,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":183,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":222,"com.google.gson.functional.ObjectTest.testNestedSerialization":185,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":26,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":63,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":209,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":138,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":167,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":179,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":82,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":202,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":149,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":169,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":74,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":140,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":22,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":128,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":100,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":96,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":186,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":38,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":112,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":93,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":232,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":207,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":51,"com.google.gson.functional.CollectionTest.testSetSerialization":217,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":59,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":44,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":15,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":62,"com.google.gson.MixedStreamTest.testWriteInvalidState":3,"com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash":227,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":19,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":16,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":129,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":34,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":200,"com.google.gson.JsonObjectTest.testAddingCharacterProperties":225,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":145,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":77,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":148,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":13,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":234,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":119,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":97,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":91,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":192,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":231,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":69,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":92},"transformations":[{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"6895fe76-3e8d-11e6-9c47-5d9e5a55142f","method":{"position":"com.google.gson.internal.bind.TypeAdapters:72","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Class read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } else {\n        throw new java.lang.UnsupportedOperationException(\"Attempted to deserialize a java.lang.Class. Forgot to register a type adapter?\");\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:204","type":"CtBinaryOperatorImpl","sourcecode":"ptype != null"},"failures":[],"tindex":"689673a7-3e8d-11e6-9c47-6540c5a0cd82","method":{"position":"com.google.gson.internal.$Gson$Types:303","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type context, java.lang.Class<?> contextRawType) {\n    if (context == (java.util.Properties.java.util.Properties.java.lang.Class)) {\n        return new java.lang.reflect.Type[]{ java.lang.String.java.lang.String.java.lang.Class , java.lang.String.java.lang.String.java.lang.Class };\n    } \n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.getSupertype(context, contextRawType, java.util.Map.java.util.Map.java.lang.Class);\n    if (mapType instanceof java.lang.reflect.ParameterizedType) {\n        java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(mapType));\n        return mapParameterizedType.getActualTypeArguments();\n    } \n    return new java.lang.reflect.Type[]{ java.lang.Object.java.lang.Object.java.lang.Class , java.lang.Object.java.lang.Object.java.lang.Class };\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ptype":"context"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"68969ab8-3e8d-11e6-9c47-8164428f3112","method":{"position":"com.google.gson.internal.bind.TypeAdapters:546","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.Calendar read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    in.beginObject();\n    int int = 0;\n    int int = 0;\n    int int = 0;\n    int int = 0;\n    int int = 0;\n    int int = 0;\n    while ((in.peek()) != (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        java.lang.String java.lang.String = in.nextName();\n        int int = in.nextInt();\n        if (com.google.gson.internal.bind.TypeAdapters.23.java.lang.String.equals(name)) {\n            year = value;\n        } else if (com.google.gson.internal.bind.TypeAdapters.23.java.lang.String.equals(name)) {\n            month = value;\n        } else if (com.google.gson.internal.bind.TypeAdapters.23.java.lang.String.equals(name)) {\n            dayOfMonth = value;\n        } else if (com.google.gson.internal.bind.TypeAdapters.23.java.lang.String.equals(name)) {\n            hourOfDay = value;\n        } else if (com.google.gson.internal.bind.TypeAdapters.23.java.lang.String.equals(name)) {\n            minute = value;\n        } else if (com.google.gson.internal.bind.TypeAdapters.23.java.lang.String.equals(name)) {\n            second = value;\n        } \n    }\n    in.endObject();\n    return new java.util.GregorianCalendar(year , month , dayOfMonth , hourOfDay , minute , second);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.reflect.TypeToken:204","type":"CtBinaryOperatorImpl","sourcecode":"ptype != null"},"failures":[],"tindex":"6896c1c9-3e8d-11e6-9c47-099c0387da34","method":{"position":"com.google.gson.Gson:773","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic <T>T fromJson(java.io.Reader json, java.lang.reflect.Type typeOfT) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException {\n    if (typeOfT instanceof java.lang.reflect.TypeVariable) {\n        {\n            if (typeOfT != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467268110742/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new com.google.gson.JsonIOException();\n            } else {\n                {\n                    com.google.gson.stream.JsonReader com.google.gson.stream.JsonReader = new com.google.gson.stream.JsonReader(json);\n                    T T = ((T)(fromJson(jsonReader, typeOfT)));\n                    com.google.gson.Gson.assertFullConsumption(object, jsonReader);\n                    return object;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467268110742/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ptype":"typeOfT"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"6896e8da-3e8d-11e6-9c47-7d2d3658ed4f","method":{"position":"com.google.gson.internal.bind.TypeAdapters:424","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.StringBuffer read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return new java.lang.StringBuffer(in.nextString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl","sourcecode":"field.isSynthetic()"},"failures":[],"tindex":"6896e8db-3e8d-11e6-9c47-bb24399acc27","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:116","type":"CtMethodImpl","sourcecode":"private com.google.gson.TypeAdapter<?> getFieldAdapter(com.google.gson.Gson gson, java.lang.reflect.Field field, com.google.gson.reflect.TypeToken<?> fieldType) {\n    if (field.isSynthetic()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467268110742/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.annotations.JsonAdapter com.google.gson.annotations.JsonAdapter = field.getAnnotation(com.google.gson.annotations.JsonAdapter.com.google.gson.annotations.JsonAdapter.java.lang.Class);\n            if (annotation != null) {\n                com.google.gson.TypeAdapter<?> com.google.gson.TypeAdapter<?> = com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.getTypeAdapter(com.google.gson.internal.ConstructorConstructor, gson, fieldType, annotation);\n                if (adapter != null)\n                    return adapter;\n                \n            } \n            return gson.getAdapter(fieldType);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"field"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:132","type":"CtInvocationImpl","sourcecode":"isBoolean()"},"failures":[],"tindex":"68970fec-3e8d-11e6-9c47-b1131809de1c","method":{"position":"com.google.gson.Gson:468","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement toJsonTree(java.lang.Object src) {\n    if (src == null) {\n        return com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull;\n    } \n    return toJsonTree(src, src.getClass());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl","sourcecode":"field.isSynthetic()"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224],"tindex":"68970fed-3e8d-11e6-9c47-457ee05c842d","method":{"position":"com.google.gson.FieldNamingPolicy:37","type":"CtMethodImpl","sourcecode":"public java.lang.String translateName(java.lang.reflect.Field f) {\n    if (f.isSynthetic()) {\n        {\n            return f.getName();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467268110742/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"f"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1368","type":"CtUnaryOperatorImpl","sourcecode":"!charsLoaded"},"failures":[118,119,120,121],"tindex":"689736fe-3e8d-11e6-9c47-3f75aadc0b7f","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:157","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic com.google.gson.stream.JsonWriter value(boolean value) throws java.io.IOException {\n    if (!value) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467268110742/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            put(new com.google.gson.JsonPrimitive(value));\n            return com.google.gson.internal.bind.JsonTreeWriter.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"charsLoaded":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:103","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.GenericArrayType"},"failures":[],"tindex":"689736ff-3e8d-11e6-9c47-93a7f025d071","method":{"position":"com.google.gson.internal.$Gson$Types:277","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type array) {\n    return array instanceof java.lang.reflect.GenericArrayType ? ((java.lang.reflect.GenericArrayType)(array)).getGenericComponentType() : ((java.lang.Class<?>)(array)).getComponentType();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"array"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"68975e10-3e8d-11e6-9c47-f378948b3f99","method":{"position":"com.google.gson.internal.bind.TypeAdapters:289","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return in.nextDouble();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"68975e11-3e8d-11e6-9c47-f72053d7e05d","method":{"position":"com.google.gson.internal.bind.TypeAdapters:85","type":"CtMethodImpl","sourcecode":"public java.util.BitSet read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    java.util.BitSet java.util.BitSet = new java.util.BitSet();\n    in.beginArray();\n    int int = 0;\n    com.google.gson.stream.JsonToken com.google.gson.stream.JsonToken = in.peek();\n    while (tokenType != (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        boolean boolean;\n        switch (tokenType) {\n            case NUMBER :\n                set = (in.nextInt()) != 0;\n                break;\n            case BOOLEAN :\n                set = in.nextBoolean();\n                break;\n            case STRING :\n                java.lang.String java.lang.String = in.nextString();\n                try {\n                    set = (java.lang.Integer.parseInt(stringValue)) != 0;\n                } catch (java.lang.NumberFormatException e) {\n                    throw new com.google.gson.JsonSyntaxException((\"Error: Expecting: bitset number value (1, 0), Found: \" + stringValue));\n                }\n                break;\n            default :\n                throw new com.google.gson.JsonSyntaxException((\"Invalid bitset value type: \" + tokenType));\n        }\n        if (set) {\n            bitset.set(i);\n        } \n        ++i;\n        tokenType = in.peek();\n    }\n    in.endArray();\n    return bitset;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:176","type":"CtInvocationImpl","sourcecode":"isNumber()"},"failures":[],"tindex":"68978522-3e8d-11e6-9c47-c3e4e7e31909","method":{"position":"com.google.gson.JsonArray:57","type":"CtMethodImpl","sourcecode":"public void add(com.google.gson.JsonElement element) {\n    if (element == null) {\n        element = com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull;\n    } \n    java.util.List<com.google.gson.JsonElement>.add(element);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"element"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"68978523-3e8d-11e6-9c47-9d2c025c10b7","method":{"position":"com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:45","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"rawtypes\" , \"unchecked\" })\n@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, T value) throws java.io.IOException {\n    com.google.gson.TypeAdapter com.google.gson.TypeAdapter = com.google.gson.TypeAdapter<T>;\n    java.lang.reflect.Type java.lang.reflect.Type = getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type, value);\n    if (runtimeType != (java.lang.reflect.Type)) {\n        com.google.gson.TypeAdapter com.google.gson.TypeAdapter = com.google.gson.Gson.getAdapter(com.google.gson.reflect.TypeToken.get(runtimeType));\n        if (!(runtimeTypeAdapter instanceof com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.Adapter)) {\n            chosen = runtimeTypeAdapter;\n        } else if (!((com.google.gson.TypeAdapter<T>) instanceof com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.Adapter)) {\n            chosen = com.google.gson.TypeAdapter<T>;\n        } else {\n            chosen = runtimeTypeAdapter;\n        }\n    } \n    chosen.write(out, value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:386","type":"CtBinaryOperatorImpl","sourcecode":"name == null"},"failures":[225],"tindex":"68978524-3e8d-11e6-9c47-5133e591f02a","method":{"position":"com.google.gson.JsonObject:111","type":"CtMethodImpl","sourcecode":"public void addProperty(java.lang.String property, java.lang.Character value) {\n    if (property == null) {\n        {\n            add(property, createJsonElement(value));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467268110742/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"property"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1344","type":"CtBinaryOperatorImpl","sourcecode":"p == l"},"failures":[226,227,228,229],"tindex":"6897ac35-3e8d-11e6-9c47-913e1b1d68d6","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:677","type":"CtMethodImpl","sourcecode":"void reset(int targetSize) {\n    if (targetSize == targetSize) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467268110742/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = ((java.lang.Integer.highestOneBit(targetSize)) * 2) - 1;\n            int = treeCapacity - targetSize;\n            int = 0;\n            int = 0;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"targetSize","l":"targetSize"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.ObjectTypeAdapter:95","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"6897ac36-3e8d-11e6-9c47-9d8c7b0bb54f","method":{"position":"com.google.gson.internal.$Gson$Types:411","type":"CtMethodImpl","sourcecode":"private static int indexOf(java.lang.Object[] array, java.lang.Object toFind) {\n    for (int int = 0 ; i < (array.int) ; i++) {\n        if (toFind.equals(array[i])) {\n            return i;\n        } \n    }\n    throw new java.util.NoSuchElementException();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"toFind"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"6897ac37-3e8d-11e6-9c47-c983cefd3086","method":{"position":"com.google.gson.internal.bind.ArrayTypeAdapter:63","type":"CtMethodImpl","sourcecode":"public java.lang.Object read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n    in.beginArray();\n    while (in.hasNext()) {\n        E E = com.google.gson.TypeAdapter<E>.read(in);\n        list.add(instance);\n    }\n    in.endArray();\n    java.lang.Object java.lang.Object = java.lang.reflect.Array.newInstance(java.lang.Class<E>, list.size());\n    for (int int = 0 ; i < (list.size()) ; i++) {\n        java.lang.reflect.Array.set(array, i, list.get(i));\n    }\n    return array;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.GsonBuilder:554","type":"CtBinaryOperatorImpl","sourcecode":"(datePattern != null) && (!(\"\".equals(datePattern.trim())))"},"failures":[],"tindex":"6897d348-3e8d-11e6-9c47-211e985df889","method":{"position":"com.google.gson.JsonObject:171","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonArray getAsJsonArray(java.lang.String memberName) {\n    if ((memberName != null) && (!(\"\".equals(datePattern.trim())))) {\n        {\n            return ((com.google.gson.JsonArray)(com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.get(memberName)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467268110742/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"datePattern":"memberName"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:213","type":"CtBinaryOperatorImpl","sourcecode":"(indent.length()) == 0"},"failures":[230,231],"tindex":"6897d349-3e8d-11e6-9c47-e74e37e4bc8b","method":{"position":"com.google.gson.JsonObject:78","type":"CtMethodImpl","sourcecode":"public void addProperty(java.lang.String property, java.lang.String value) {\n    if ((value.length()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467268110742/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            add(property, createJsonElement(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"indent":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:198","type":"CtBinaryOperatorImpl","sourcecode":"out == null"},"failures":[],"tindex":"6897d34a-3e8d-11e6-9c47-29ecfb395664","method":{"position":"com.google.gson.TypeAdapter:140","type":"CtMethodImpl","sourcecode":"public final void toJson(java.io.Writer out, T value) throws java.io.IOException {\n    if (out == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467268110742/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            com.google.gson.stream.JsonWriter com.google.gson.stream.JsonWriter = new com.google.gson.stream.JsonWriter(out);\n            write(writer, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"out":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"6897fa5b-3e8d-11e6-9c47-019f7ece3ecd","method":{"position":"com.google.gson.internal.bind.TypeAdapters:63","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Class value) throws java.io.IOException {\n    if (value == null) {\n        out.nullValue();\n    } else {\n        throw new java.lang.UnsupportedOperationException(((\"Attempted to serialize java.lang.Class: \" + (value.getName())) + \". Forgot to register a type adapter?\"));\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:204","type":"CtBinaryOperatorImpl","sourcecode":"ptype != null"},"failures":[],"tindex":"6897fa5c-3e8d-11e6-9c47-a3c333c6fefc","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:120","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(java.lang.Object key) {\n    if (key != null) {\n        {\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = removeInternalByKey(key);\n            return node != null ? node.V : null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467268110742/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ptype":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"6897fa5d-3e8d-11e6-9c47-73bc658c3270","method":{"position":"com.google.gson.internal.bind.TypeAdapters:482","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.net.InetAddress read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return java.net.InetAddress.getByName(in.nextString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"6898216e-3e8d-11e6-9c47-2d7909f28b48","method":{"position":"com.google.gson.internal.bind.TypeAdapters:156","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Boolean value) throws java.io.IOException {\n    if (value == null) {\n        out.nullValue();\n        return ;\n    } \n    out.value(value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:491","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"6898216f-3e8d-11e6-9c47-2b87021e3734","method":{"position":"com.google.gson.Gson:317","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467268110742/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value == null) {\n                out.nullValue();\n                return ;\n            } \n            out.value(value.toString());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"68982170-3e8d-11e6-9c47-174f00ef5404","method":{"position":"com.google.gson.internal.bind.TypeAdapters:643","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic com.google.gson.JsonElement read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    switch (in.peek()) {\n        case STRING :\n            return new com.google.gson.JsonPrimitive(in.nextString());\n        case NUMBER :\n            java.lang.String java.lang.String = in.nextString();\n            return new com.google.gson.JsonPrimitive(new com.google.gson.internal.LazilyParsedNumber(number));\n        case BOOLEAN :\n            return new com.google.gson.JsonPrimitive(in.nextBoolean());\n        case NULL :\n            in.nextNull();\n            return com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull;\n        case BEGIN_ARRAY :\n            com.google.gson.JsonArray com.google.gson.JsonArray = new com.google.gson.JsonArray();\n            in.beginArray();\n            while (in.hasNext()) {\n                array.add(read(in));\n            }\n            in.endArray();\n            return array;\n        case BEGIN_OBJECT :\n            com.google.gson.JsonObject com.google.gson.JsonObject = new com.google.gson.JsonObject();\n            in.beginObject();\n            while (in.hasNext()) {\n                object.add(in.nextName(), read(in));\n            }\n            in.endObject();\n            return object;\n        case END_DOCUMENT :\n        case NAME :\n        case END_OBJECT :\n        case END_ARRAY :\n        default :\n            throw new java.lang.IllegalArgumentException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:213","type":"CtBinaryOperatorImpl","sourcecode":"(indent.length()) == 0"},"failures":[10,11,15,44,67,68,69,70,72,73,74,78,79,87,99,106,120,232,127,233,142,144,234,147,148,235,152,154,156,157,160,175,179,236,214,220],"tindex":"68984881-3e8d-11e6-9c47-35117ff2ee97","method":{"position":"com.google.gson.internal.bind.TypeAdapters:361","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.String value) throws java.io.IOException {\n    if ((value.length()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467268110742/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            out.value(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"indent":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.internal.$Gson$Types:198","type":"CtBinaryOperatorImpl","sourcecode":"a instanceof java.lang.reflect.TypeVariable"},"failures":[],"tindex":"68984882-3e8d-11e6-9c47-e195f9becfcd","method":{"position":"com.google.gson.Gson:773","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic <T>T fromJson(java.io.Reader json, java.lang.reflect.Type typeOfT) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException {\n    if (typeOfT instanceof java.lang.reflect.TypeVariable) {\n        {\n            if (typeOfT != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467268110742/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new com.google.gson.JsonIOException();\n            } else {\n                {\n                    com.google.gson.stream.JsonReader com.google.gson.stream.JsonReader = new com.google.gson.stream.JsonReader(json);\n                    T T = ((T)(fromJson(jsonReader, typeOfT)));\n                    com.google.gson.Gson.assertFullConsumption(object, jsonReader);\n                    return object;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467268110742/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"typeOfT"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"68984883-3e8d-11e6-9c47-eb4967dec41d","method":{"position":"com.google.gson.internal.bind.TypeAdapters:348","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.String read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    com.google.gson.stream.JsonToken com.google.gson.stream.JsonToken = in.peek();\n    if (peek == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    if (peek == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        return java.lang.Boolean.toString(in.nextBoolean());\n    } \n    return in.nextString();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:136","type":"CtBinaryOperatorImpl","sourcecode":"(type) instanceof java.lang.reflect.GenericArrayType"},"failures":[],"tindex":"68984884-3e8d-11e6-9c47-77ffea8636d7","method":{"position":"com.google.gson.internal.$Gson$Types:226","type":"CtMethodImpl","sourcecode":"static java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type context, java.lang.Class<?> rawType, java.lang.Class<?> toResolve) {\n    if (toResolve == rawType) {\n        return context;\n    } \n    if (toResolve.isInterface()) {\n        java.lang.Class<?>[] java.lang.Class<?>[] = rawType.getInterfaces();\n        for (int int = 0, int int = interfaces.int ; i < length ; i++) {\n            if ((interfaces[i]) == toResolve) {\n                return rawType.getGenericInterfaces()[i];\n            } else if (toResolve.isAssignableFrom(interfaces[i])) {\n                return com.google.gson.internal.$Gson$Types.getGenericSupertype(rawType.getGenericInterfaces()[i], interfaces[i], toResolve);\n            } \n        }\n    } \n    if (!(rawType.isInterface())) {\n        while (rawType != (java.lang.Object.java.lang.Object.java.lang.Class)) {\n            java.lang.Class<?> java.lang.Class<?> = rawType.getSuperclass();\n            if (rawSupertype == toResolve) {\n                return rawType.getGenericSuperclass();\n            } else if (toResolve.isAssignableFrom(rawSupertype)) {\n                return com.google.gson.internal.$Gson$Types.getGenericSupertype(rawType.getGenericSuperclass(), rawSupertype, toResolve);\n            } \n            rawType = rawSupertype;\n        }\n    } \n    return toResolve;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"context"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:831","type":"CtBinaryOperatorImpl","sourcecode":"p == (com.google.gson.stream.JsonReader.PEEKED_LONG)"},"failures":[],"tindex":"68986f95-3e8d-11e6-9c47-57e92646ad04","method":{"position":"com.google.gson.internal.Streams:88","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(char[] chars, int offset, int length) throws java.io.IOException {\n    if (length == offset) {\n        {\n            com.google.gson.internal.Streams.AppendableWriter.CurrentWrite.char[] = chars;\n            java.lang.Appendable.append(com.google.gson.internal.Streams.AppendableWriter.CurrentWrite, offset, (offset + length));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467268110742/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"length","com.google.gson.stream.JsonReader.PEEKED_LONG":"offset"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"68986f96-3e8d-11e6-9c47-5d2ea97e285b","method":{"position":"com.google.gson.Gson:888","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic T read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((com.google.gson.TypeAdapter<T>) == null) {\n        throw new java.lang.IllegalStateException();\n    } \n    return com.google.gson.TypeAdapter<T>.read(in);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:622","type":"CtBinaryOperatorImpl","sourcecode":"(c == 'n') || (c == 'N')"},"failures":[],"tindex":"68986f97-3e8d-11e6-9c47-d581ebf98a7f","method":{"position":"com.google.gson.stream.JsonReader:999","type":"CtMethodImpl","sourcecode":"private java.lang.String nextQuotedValue(char quote) throws java.io.IOException {\n    if ((quote == 'n') || (c == 'N')) {\n        {\n            char[] char[] = com.google.gson.stream.JsonReader.this.char[];\n            java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            while (true) {\n                int int = int;\n                int int = int;\n                int int = p;\n                while (p < l) {\n                    int int = buffer[(p++)];\n                    if (c == quote) {\n                        int = p;\n                        builder.append(buffer, start, ((p - start) - 1));\n                        return builder.toString();\n                    } else if (c == '\\\\') {\n                        int = p;\n                        builder.append(buffer, start, ((p - start) - 1));\n                        builder.append(readEscapeCharacter());\n                        p = int;\n                        l = int;\n                        start = p;\n                    } else if (c == '\\n') {\n                        (int)++;\n                        int = p;\n                    } \n                }\n                builder.append(buffer, start, (p - start));\n                int = p;\n                if (!(fillBuffer(1))) {\n                    throw syntaxError(\"Unterminated string\");\n                } \n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467268110742/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"quote"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:726","type":"CtBinaryOperatorImpl","sourcecode":"value == 0"},"failures":[],"tindex":"68986f98-3e8d-11e6-9c47-75f72243a6da","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic com.google.gson.stream.JsonWriter value(long value) throws java.io.IOException {\n    if (value == 0) {\n        {\n            put(new com.google.gson.JsonPrimitive(value));\n            return com.google.gson.internal.bind.JsonTreeWriter.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467268110742/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":35,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}