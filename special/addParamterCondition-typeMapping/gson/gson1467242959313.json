{"failureDictionary":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":258,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":352,"com.google.gson.functional.StringTest.testStringValueDeserialization":630,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":120,"com.google.gson.functional.PrimitiveTest.testBigIntegerDeserialization":525,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullDeserialization":619,"com.google.gson.functional.PrimitiveTest.testBigDecimalNaNDeserializationNotSupported":498,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":40,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":570,"com.google.gson.internal.bind.JsonTreeWriterTest.testPrematureClose":0,"com.google.gson.MixedStreamTest.testWriteLenient":367,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":389,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":549,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":326,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":80,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":65,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":75,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":548,"com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization":530,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":39,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":287,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":224,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerDeserialization":505,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":431,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":479,"com.google.gson.functional.ObjectTest.testSingletonLists":188,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":288,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":322,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":353,"com.google.gson.functional.PrimitiveTest.testNumberDeserialization":493,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator":455,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":28,"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":448,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization":626,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":558,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":25,"com.google.gson.functional.PrimitiveTest.testStringsAsBooleans":532,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":405,"com.google.gson.functional.StringTest.testEscapedBackslashInStringDeserialization":638,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":209,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":242,"com.google.gson.functional.PrimitiveTest.testBigDecimalNoFractAsStringRepresentationDeserialization":526,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":472,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":10,"com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization":487,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":238,"com.google.gson.functional.MapTest.testMapOfMapDeserialization":471,"com.google.gson.functional.EnumTest.testEnumCaseMapping":38,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":351,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":372,"com.google.gson.functional.JsonTreeTest.testToJsonTree":296,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsLong":486,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":247,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveDeserialization":627,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":151,"com.google.gson.JsonObjectTest.testEqualsNonEmptyObject":381,"com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreBehindInVersion":412,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":56,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":305,"com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization":589,"com.google.gson.functional.PrimitiveTest.testUnquotedStringDeserializationFails":494,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferDeserialization":617,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":133,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":72,"com.google.gson.functional.ObjectTest.testNullDeserialization":564,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":212,"com.google.gson.internal.bind.JsonElementReaderTest.testNestedObjects":374,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringDeserialization":636,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":555,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":22,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization":178,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsBigIntegerFails":499,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":197,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":236,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":125,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":561,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":21,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":222,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":336,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectDeserialization":404,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":129,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionDeserialization":538,"com.google.gson.functional.PrimitiveTest.testDoubleInfinityDeserialization":537,"com.google.gson.JsonParserTest.testParseString":378,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization":625,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":170,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":164,"com.google.gson.functional.PrimitiveTest.testFloatInfinityDeserialization":542,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArrayDeserialization":610,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":203,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":273,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":321,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityDeserialization":513,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":390,"com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization":467,"com.google.gson.functional.PrimitiveTest.testDoubleNoFractAsStringRepresentationDeserialization":523,"com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree":396,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":63,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountryVariant":616,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":292,"com.google.gson.internal.bind.JsonTreeWriterTest.testLenientNansAndInfinities":2,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":450,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":118,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":171,"com.google.gson.functional.JsonParserTest.testParseInvalidJson":458,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsDouble":524,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":202,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":269,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":18,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":344,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":552,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":44,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":156,"com.google.gson.functional.MapTest.testMapDeserializationWithNullValue":474,"com.google.gson.metrics.PerformanceTest.testDummy":418,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":598,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":144,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":50,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":579,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":388,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings":419,"com.google.gson.functional.MapTest.testNumberKeyDeserialization":476,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":325,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":400,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":316,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":576,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":124,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":574,"com.google.gson.functional.CollectionTest.testSetDeserialization":446,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":225,"com.google.gson.functional.EnumTest.testEnumSet":32,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":193,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersEscapedDeserialization":600,"com.google.gson.functional.PrimitiveTest.testBigDecimalAsStringRepresentationDeserialization":516,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":51,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":86,"com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithNestedWildcards":413,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":102,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampDeserialization":613,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":198,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":9,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":49,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBytePrimitive":527,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":578,"com.google.gson.functional.PrimitiveTest.testDeserializingDecimalPointValueZeroSucceeds":533,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":31,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":233,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":174,"com.google.gson.functional.MapTest.testHashMapDeserialization":461,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsIntegerFails":496,"com.google.gson.functional.CollectionTest.testLinkedListDeserialization":442,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesDeserialization":622,"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":345,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization":580,"com.google.gson.MixedStreamTest.testReadNulls":641,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":57,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":256,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":290,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":423,"com.google.gson.functional.MapTest.testSortedMap":473,"com.google.gson.functional.MapTest.testMapSerialization":107,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":259,"com.google.gson.internal.bind.JsonElementReaderTest.testObject":376,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":398,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedDeserialization":521,"com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization":591,"com.google.gson.functional.MapTest.testSerializeMaps":101,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":349,"com.google.gson.functional.MapTest.testComplexKeysSerialization":116,"com.google.gson.functional.InternationalizationTest.testStringsWithRawChineseCharactersDeserialization":599,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsFalse":1,"com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader":394,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":280,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":214,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":426,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":140,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":438,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriter":29,"com.google.gson.functional.EnumTest.testTopLevelEnumDeserialization":425,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":245,"com.google.gson.JsonObjectTest.testAddingAndRemovingObjectProperties":382,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":41,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsDeserialization":563,"com.google.gson.functional.MapTest.testStringKeyDeserialization":475,"com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithBasicWildcards":415,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsDeserialization":593,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":88,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":182,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":119,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesDeserialization":502,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":228,"com.google.gson.functional.PrettyPrintingTest.testMap":243,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigInteger":497,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":68,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":260,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":302,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls":421,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":24,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysDeserialization":594,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":357,"com.google.gson.functional.StringTest.testStringWithEscapedSlashDeserialization":631,"com.google.gson.functional.CollectionTest.testQueueSerialization":69,"com.google.gson.functional.MapTest.testMapSerializationEmpty":117,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":313,"com.google.gson.JsonObjectTest.testAddingBooleanProperties":383,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsByteWrapper":517,"com.google.gson.functional.MapTest.testMapOfMapSerialization":106,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":162,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountry":618,"com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization":444,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":167,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":220,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":94,"com.google.gson.functional.FieldNamingTest.testIdentity":350,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":354,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":451,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":261,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":565,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":43,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":82,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":187,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":295,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalDeserialization":488,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":11,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":122,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":355,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization":165,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":571,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeDeserialization":624,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":17,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidDeserialization":614,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":219,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":314,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullJsonElementSerialization":335,"com.google.gson.functional.MapTest.testMapDeserializationEmpty":459,"com.google.gson.functional.MapTest.testMapSubclassSerialization":100,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":181,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":253,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":433,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersDeserialization":601,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":230,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":337,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":364,"com.google.gson.functional.PrimitiveTest.testBigDecimalDeserialization":511,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":391,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsLongPrimitive":546,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguage":608,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":420,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":48,"com.google.gson.functional.EnumTest.testEnumSubclass":35,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization":168,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":26,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":557,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization":152,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":121,"com.google.gson.functional.PrimitiveTest.testFloatNaNDeserialization":529,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":87,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":435,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsLongWrapper":489,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":208,"com.google.gson.functional.PrimitiveTest.testBigDecimalNegativeInfinityDeserializationNotSupported":514,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":572,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":142,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":16,"com.google.gson.functional.ArrayTest.testArrayOfNullDeserialization":588,"com.google.gson.functional.PrimitiveTest.testBigDecimalInfinityDeserializationNotSupported":518,"com.google.gson.functional.ObjectTest.testTruncatedDeserialization":554,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization":163,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":429,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":330,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":547,"com.google.gson.MixedStreamTest.testWriteNulls":365,"com.google.gson.functional.MapTest.testMapSubclassDeserialization":460,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":275,"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":456,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":271,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":213,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":430,"com.google.gson.CommentsTest.testParseComments":644,"com.google.gson.JsonObjectTest.testReadPropertyWithEmptyStringName":379,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":91,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":189,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":480,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":284,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigDecimal":528,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":592,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":397,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":109,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":356,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSubTypeFirstAllowed":573,"com.google.gson.MixedStreamTest.testReadInvalidState":639,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":221,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":55,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":180,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":332,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":250,"com.google.gson.JsonParserTest.testParseMixedArray":19,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":155,"com.google.gson.functional.ArrayTest.testArrayOfStringsDeserialization":595,"com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithTypeParameters":414,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":281,"com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreAheadInVersion":410,"com.google.gson.internal.bind.JsonTreeWriterTest.testWriteAfterClose":4,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":159,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":218,"com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization":175,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":319,"com.google.gson.functional.MapTest.testMapDeserialization":466,"com.google.gson.functional.ArrayTest.testEmptyArrayDeserialization":587,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":315,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":248,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":99,"com.google.gson.JsonPrimitiveTest.testValidJsonOnToString":371,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":478,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":103,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":149,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":135,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":132,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":439,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":294,"com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization":424,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":607,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization":196,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":204,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":59,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":231,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":143,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":306,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":432,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":64,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":207,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":108,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":244,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":14,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":334,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigDecimal":485,"com.google.gson.functional.PrimitiveTest.testShortSerialization":179,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":454,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":137,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedDeserialization":531,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":240,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedDeserialization":512,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":172,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":308,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsBigDecimal":495,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":346,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":34,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":67,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":252,"com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues":463,"com.google.gson.functional.PrimitiveTest.testLargeDoubleDeserialization":508,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":79,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":183,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":392,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedArray":7,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":482,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization":623,"com.google.gson.internal.bind.JsonTreeWriterTest.testObject":5,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":643,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization":186,"com.google.gson.functional.PrimitiveTest.testDeserializingNonZeroDecimalPointValuesAsIntegerFails":541,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":42,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":205,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":452,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":484,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsTrue":8,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":298,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":338,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":535,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":604,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":89,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsDoublePrimitive":515,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":568,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":551,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":37,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":60,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":289,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":73,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":611,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":226,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives":453,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":131,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":136,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":320,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsInt":501,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":291,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":310,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":138,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization":621,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":147,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization":440,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsShortWrapper":490,"com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral":536,"com.google.gson.functional.PrimitiveTest.testNumberSerialization":166,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":184,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":97,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":33,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":134,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":402,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":399,"com.google.gson.functional.MapTest.testGeneralMapField":113,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":550,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":268,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsShortPrimitive":544,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":123,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":227,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":277,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":327,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":111,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":128,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":154,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":299,"com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization":173,"com.google.gson.MixedStreamTest.testReadMixedStreamed":642,"com.google.gson.JsonObjectTest.testDeepCopy":384,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":160,"com.google.gson.functional.MapTest.testBooleanKeyDeserialization":468,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlDeserialization":612,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":12,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":76,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":603,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":597,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBooleanPrimitive":519,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":239,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":577,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":318,"com.google.gson.functional.MapTest.testDeerializeMapOfMaps":469,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":342,"com.google.gson.functional.MapTest.testMapDeserializationWithNullKey":462,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":92,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":185,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":265,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":340,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsFloatPrimitive":509,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedObject":6,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":317,"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":457,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":262,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionDeserilaization":443,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserialization":605,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization":481,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":96,"com.google.gson.functional.ObjectTest.testNestedDeserialization":569,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":201,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":210,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":581,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":141,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":237,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsNumber":543,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":283,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":427,"com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys":470,"com.google.gson.functional.StringTest.testSingleQuoteInStringDeserialization":632,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":47,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":177,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":434,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":84,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":393,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":78,"com.google.gson.functional.ObjectTest.testNullSerialization":194,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":62,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization":629,"com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey":464,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":112,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":153,"com.google.gson.functional.MapTest.testInterfaceTypeMap":110,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization":590,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":229,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":146,"com.google.gson.JsonObjectTest.testAddingNullOrEmptyPropertyName":386,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsDoubleWrapper":491,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":36,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":241,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails":232,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":437,"com.google.gson.MixedStreamTest.testReadClosed":640,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":300,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":235,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsInteger":503,"com.google.gson.MixedStreamTest.testWriteClosed":369,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":71,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":582,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":190,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":483,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateDeserialization":628,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":52,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":145,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":286,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":206,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":282,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":333,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":150,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":191,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":70,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":407,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBooleanWrapper":522,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":341,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":436,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":74,"com.google.gson.internal.bind.JsonElementReaderTest.testSkipValue":375,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":323,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":403,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":216,"com.google.gson.functional.PrimitiveTest.testDoubleAsStringRepresentationDeserialization":545,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":158,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":293,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderDeserialization":609,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":215,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":266,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":285,"com.google.gson.functional.CollectionTest.testQueueDeserialization":449,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":161,"com.google.gson.functional.PrimitiveTest.testByteDeserialization":520,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringDeserialization":635,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization":257,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":331,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":408,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":104,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":562,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":312,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":130,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":567,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":66,"com.google.gson.functional.MapTest.testRawMapSerialization":115,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":363,"com.google.gson.JsonParserTest.testParseReader":377,"com.google.gson.functional.CollectionTest.testNullsInListDeserialization":447,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetDeserialization":620,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":58,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":199,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":401,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":139,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":13,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapNoTypeSerialization":15,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":27,"com.google.gson.functional.PrimitiveTest.testByteSerialization":176,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":270,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":361,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":126,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsFloatWrapper":500,"com.google.gson.JsonPrimitiveTest.testEqualsIntegerAndBigInteger":370,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":81,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":276,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":347,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":53,"com.google.gson.GsonTypeAdapterTest.testDefaultTypeAdapterThrowsParseException":416,"com.google.gson.functional.StringTest.testAssignmentCharDeserialization":633,"com.google.gson.functional.MapTest.testMapWithQuotes":105,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":303,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatDeserialization":506,"com.google.gson.functional.StringTest.testEscapingQuotesInStringDeserialization":634,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":85,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":602,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":95,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":255,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsNumber":539,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":301,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":223,"com.google.gson.stream.JsonWriterTest.testLenientWriterPermitsMultipleTopLevelValues":20,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":395,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":45,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":566,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":249,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":169,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":309,"com.google.gson.functional.ObjectTest.testEmptyStringDeserialization":556,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":279,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":553,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":328,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":304,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":83,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":311,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":339,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigInteger":534,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriterAndSerializeNulls":30,"com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed":445,"com.google.gson.functional.ArrayTest.testSingleStringArrayDeserialization":586,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":46,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":267,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":329,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":61,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":263,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization":409,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":254,"com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreAtSameVersion":411,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReader":422,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":387,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsFloat":492,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":93,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":559,"com.google.gson.functional.ObjectTest.testNestedSerialization":200,"com.google.gson.JsonObjectTest.testAddingStringProperties":385,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":98,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":127,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":157,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringDeserialization":637,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":264,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":114,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":251,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":297,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":23,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":368,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":195,"com.google.gson.functional.UncategorizedTest.testTrailingWhitespace":583,"com.google.gson.functional.PrimitiveTest.testBooleanDeserialization":540,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":148,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":596,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":615,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":373,"com.google.gson.GsonBuilderTest.testCreatingMoreThanOnce":417,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsInteger":504,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":560,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":606,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":406,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":358,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":274,"com.google.gson.functional.CollectionTest.testSetSerialization":77,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":477,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":90,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":246,"com.google.gson.functional.StringTest.testStringValueSerialization":359,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":360,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":217,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":428,"com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization":441,"com.google.gson.MixedStreamTest.testWriteInvalidState":366,"com.google.gson.functional.ArrayTest.testInvalidArrayDeserialization":585,"com.google.gson.functional.ObjectTest.testJsonObjectSerialization":192,"com.google.gson.functional.PrimitiveTest.testBadValueForBigIntegerDeserialization":507,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":278,"com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero":510,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":343,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":307,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":348,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":211,"com.google.gson.JsonObjectTest.testAddingCharacterProperties":380,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":584,"com.google.gson.internal.bind.JsonTreeWriterTest.testArray":3,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":234,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":54,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullSerialization":324,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":362,"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":465,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":272,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType":575},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:370","type":"CtVariableReadImpl","sourcecode":"requiresThreadLocalCleanup"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373],"tindex":"4d67a5e2-3e51-11e6-ad2a-3bd145728506","method":{"position":"com.google.gson.stream.JsonWriter:234","type":"CtMethodImpl","sourcecode":"public final void setLenient(boolean lenient) {\n    if (lenient) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242335985/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.stream.JsonWriter.this.boolean = lenient;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"requiresThreadLocalCleanup":"lenient"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:178","type":"CtInvocationImpl","sourcecode":"isBoolean()"},"failures":[],"tindex":"4d681b13-3e51-11e6-ad2a-e9940de086d2","method":{"position":"com.google.gson.internal.bind.MapTypeAdapterFactory:245","type":"CtMethodImpl","sourcecode":"private java.lang.String keyToString(com.google.gson.JsonElement keyElement) {\n    if (keyElement.isJsonPrimitive()) {\n        com.google.gson.JsonPrimitive com.google.gson.JsonPrimitive = keyElement.getAsJsonPrimitive();\n        if (primitive.isNumber()) {\n            return java.lang.String.valueOf(primitive.getAsNumber());\n        } else if (primitive.isBoolean()) {\n            return java.lang.Boolean.toString(primitive.getAsBoolean());\n        } else if (primitive.isString()) {\n            return primitive.getAsString();\n        } else {\n            throw new java.lang.AssertionError();\n        }\n    } else if (keyElement.isJsonNull()) {\n        return \"null\";\n    } else {\n        throw new java.lang.AssertionError();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"keyElement"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"4d684224-3e51-11e6-ad2a-21cdc863fb5b","method":{"position":"com.google.gson.Gson:310","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return in.nextLong();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:391","type":"CtUnaryOperatorImpl","sourcecode":"!insert"},"failures":[],"tindex":"4d684225-3e51-11e6-ad2a-1fc6677e4e25","method":{"position":"com.google.gson.internal.$Gson$Preconditions:40","type":"CtMethodImpl","sourcecode":"public static void checkArgument(boolean condition) {\n    if (!condition) {\n        throw new java.lang.IllegalArgumentException();\n    } \n}"},"series":0,"name":"addParameterCondition","variableMap":{"insert":"condition"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"4d684226-3e51-11e6-ad2a-abe22c215377","method":{"position":"com.google.gson.internal.bind.TypeAdapters:338","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Character value) throws java.io.IOException {\n    out.value((value == null ? null : java.lang.String.valueOf(value)));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:872","type":"CtBinaryOperatorImpl","sourcecode":"json == null"},"failures":[5,6,8,374,375,376,13,377,378,18,379,21,380,381,382,383,384,385,22,386,28,46,387,80,81,83,84,388,87,88,89,93,389,390,391,392,393,394,120,122,395,137,141,142,143,147,148,151,209,396,397,398,250,399,251,400,401,255,258,402,403,285,286,290,291,292,293,294,295,296,404,307,361,362],"tindex":"4d686937-3e51-11e6-ad2a-91b8c3e85275","method":{"position":"com.google.gson.JsonObject:53","type":"CtMethodImpl","sourcecode":"public void add(java.lang.String property, com.google.gson.JsonElement value) {\n    if (value == null) {\n        {\n            if (value == null) {\n                value = com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull;\n            } \n            com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.put(property, value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242335985/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:542","type":"CtBinaryOperatorImpl","sourcecode":"replacement == null"},"failures":[],"tindex":"4d686938-3e51-11e6-ad2a-5b8944cac96b","method":{"position":"com.google.gson.internal.LinkedTreeMap:605","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(java.lang.Object o) {\n    if (o == null) {\n        {\n            return containsKey(o);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242335985/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"replacement":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:122","type":"CtBinaryOperatorImpl","sourcecode":"o == (com.google.gson.internal.bind.JsonTreeReader.SENTINEL_CLOSED)"},"failures":[],"tindex":"4d686939-3e51-11e6-ad2a-ad545fa6ff41","method":{"position":"com.google.gson.JsonNull:60","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object other) {\n    if (other == other) {\n        {\n            return ((com.google.gson.JsonNull.this) == other) || (other instanceof com.google.gson.JsonNull);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242335985/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"com.google.gson.internal.bind.JsonTreeReader.SENTINEL_CLOSED":"other","o":"other"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.TreeTypeAdapter:55","type":"CtInvocationImpl","sourcecode":"value.isJsonNull()"},"failures":[],"tindex":"4d68904a-3e51-11e6-ad2a-d332ac421bf6","method":{"position":"com.google.gson.GsonBuilder:493","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\npublic com.google.gson.GsonBuilder registerTypeHierarchyAdapter(java.lang.Class<?> baseType, java.lang.Object typeAdapter) {\n    if (typeAdapter.isJsonNull()) {\n        {\n            com.google.gson.internal.$Gson$Preconditions.checkArgument((((typeAdapter instanceof com.google.gson.JsonSerializer<?>) || (typeAdapter instanceof com.google.gson.JsonDeserializer<?>)) || (typeAdapter instanceof com.google.gson.TypeAdapter<?>)));\n            if ((typeAdapter instanceof com.google.gson.JsonDeserializer) || (typeAdapter instanceof com.google.gson.JsonSerializer)) {\n                java.util.List<com.google.gson.TypeAdapterFactory>.add(0, com.google.gson.TreeTypeAdapter.newTypeHierarchyFactory(baseType, typeAdapter));\n            } \n            if (typeAdapter instanceof com.google.gson.TypeAdapter<?>) {\n                java.util.List<com.google.gson.TypeAdapterFactory>.add(com.google.gson.internal.bind.TypeAdapters.newTypeHierarchyFactory(baseType, ((com.google.gson.TypeAdapter)(typeAdapter))));\n            } \n            return com.google.gson.GsonBuilder.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242335985/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"typeAdapter"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.JsonPrimitive:316","type":"CtBinaryOperatorImpl","sourcecode":"(com.google.gson.JsonPrimitive.isIntegral(com.google.gson.JsonPrimitive.this)) && (com.google.gson.JsonPrimitive.isIntegral(other))"},"failures":[],"tindex":"4d68904b-3e51-11e6-ad2a-c1740c9bebc7","method":{"position":"com.google.gson.internal.bind.TypeAdapters:680","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, com.google.gson.JsonElement value) throws java.io.IOException {\n    if ((value == null) || (value.isJsonNull())) {\n        out.nullValue();\n    } else if (value.isJsonPrimitive()) {\n        com.google.gson.JsonPrimitive com.google.gson.JsonPrimitive = value.getAsJsonPrimitive();\n        if (primitive.isNumber()) {\n            out.value(primitive.getAsNumber());\n        } else if (primitive.isBoolean()) {\n            out.value(primitive.getAsBoolean());\n        } else {\n            out.value(primitive.getAsString());\n        }\n    } else if (value.isJsonArray()) {\n        out.beginArray();\n        for (com.google.gson.JsonElement com.google.gson.JsonElement : value.getAsJsonArray()) {\n            write(out, e);\n        }\n        out.endArray();\n    } else if (value.isJsonObject()) {\n        out.beginObject();\n        for (java.util.Map.Entry<java.lang.String, com.google.gson.JsonElement> java.util.Map.Entry<java.lang.String, com.google.gson.JsonElement> : value.getAsJsonObject().entrySet()) {\n            out.name(e.getKey());\n            write(out, e.getValue());\n        }\n        out.endObject();\n    } else {\n        throw new java.lang.IllegalArgumentException((\"Couldn't write \" + (value.getClass())));\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"other":"value","this":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"4d68b75c-3e51-11e6-ad2a-4b1a3b58774f","method":{"position":"com.google.gson.Gson:310","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return in.nextLong();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:133","type":"CtBinaryOperatorImpl","sourcecode":"(type) instanceof java.lang.reflect.ParameterizedType"},"failures":[],"tindex":"4d68b75d-3e51-11e6-ad2a-dd50f1b3649f","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:223","type":"CtMethodImpl","sourcecode":"private boolean equal(java.lang.Object a, java.lang.Object b) {\n    if (b instanceof java.lang.reflect.ParameterizedType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242335985/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (a == b) || ((a != null) && (a.equals(b)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"b"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:370","type":"CtBinaryOperatorImpl","sourcecode":"toResolve instanceof java.lang.reflect.WildcardType"},"failures":[],"tindex":"4d68b75e-3e51-11e6-ad2a-df9864c51df8","method":{"position":"com.google.gson.internal.$Gson$Types:287","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type context, java.lang.Class<?> contextRawType) {\n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.getSupertype(context, contextRawType, java.util.Collection.java.util.Collection.java.lang.Class);\n    if (collectionType instanceof java.lang.reflect.WildcardType) {\n        collectionType = ((java.lang.reflect.WildcardType)(collectionType)).getUpperBounds()[0];\n    } \n    if (collectionType instanceof java.lang.reflect.ParameterizedType) {\n        return ((java.lang.reflect.ParameterizedType)(collectionType)).getActualTypeArguments()[0];\n    } \n    return java.lang.Object.java.lang.Object.java.lang.Class;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"context"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"4d68de6f-3e51-11e6-ad2a-7bb145136c44","method":{"position":"com.google.gson.internal.bind.DateTypeAdapter:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized void write(com.google.gson.stream.JsonWriter out, java.util.Date value) throws java.io.IOException {\n    if (value == null) {\n        out.nullValue();\n        return ;\n    } \n    java.lang.String java.lang.String = java.text.DateFormat.format(value);\n    out.value(dateFormatAsString);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:389","type":"CtBinaryOperatorImpl","sourcecode":"(deferredName) != null"},"failures":[],"tindex":"4d68de70-3e51-11e6-ad2a-03ce8b911f7c","method":{"position":"com.google.gson.JsonObject:181","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonObject getAsJsonObject(java.lang.String memberName) {\n    if (memberName != null) {\n        {\n            return ((com.google.gson.JsonObject)(com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.get(memberName)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242335985/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"memberName"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:243","type":"CtBinaryOperatorImpl","sourcecode":"annotation != null"},"failures":[337,338,405,406,339,340,407,408,341,409,410,411,412],"tindex":"4d68de71-3e51-11e6-ad2a-9fdf1923d94e","method":{"position":"com.google.gson.internal.Excluder:228","type":"CtMethodImpl","sourcecode":"private boolean isValidVersion(com.google.gson.annotations.Since since, com.google.gson.annotations.Until until) {\n    if (until != null) {\n        {\n            return (isValidSince(since)) && (isValidUntil(until));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242335985/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"annotation":"until"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:400","type":"CtBinaryOperatorImpl","sourcecode":"(deferredName) != null"},"failures":[382,392],"tindex":"4d68de72-3e51-11e6-ad2a-6b772799a263","method":{"position":"com.google.gson.JsonObject:67","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement remove(java.lang.String property) {\n    if (property != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242335985/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.remove(property);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"property"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:189","type":"CtUnaryOperatorImpl","sourcecode":"!(b instanceof java.lang.reflect.WildcardType)"},"failures":[],"tindex":"4d68de73-3e51-11e6-ad2a-e12d44feadf1","method":{"position":"com.google.gson.TreeTypeAdapter:92","type":"CtMethodImpl","sourcecode":"public static com.google.gson.TypeAdapterFactory newFactoryWithMatchRawType(com.google.gson.reflect.TypeToken<?> exactType, java.lang.Object typeAdapter) {\n    if (!(typeAdapter instanceof java.lang.reflect.WildcardType)) {\n        {\n            boolean boolean = (exactType.getType()) == (exactType.getRawType());\n            return new com.google.gson.TreeTypeAdapter.SingleTypeFactory(typeAdapter , exactType , matchRawType , null);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242335985/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"typeAdapter"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:136","type":"CtBinaryOperatorImpl","sourcecode":"(type) instanceof java.lang.reflect.GenericArrayType"},"failures":[413,414,415],"tindex":"4d690584-3e51-11e6-ad2a-ef07b66a04ce","method":{"position":"com.google.gson.reflect.TypeToken:272","type":"CtMethodImpl","sourcecode":"private static boolean matches(java.lang.reflect.Type from, java.lang.reflect.Type to, java.util.Map<java.lang.String, java.lang.reflect.Type> typeMap) {\n    if (from instanceof java.lang.reflect.GenericArrayType) {\n        {\n            return (to.equals(from)) || ((from instanceof java.lang.reflect.TypeVariable) && (to.equals(typeMap.get(((java.lang.reflect.TypeVariable<?>)(from)).getName()))));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242335985/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"from"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.internal.$Gson$Types:199","type":"CtUnaryOperatorImpl","sourcecode":"!(b instanceof java.lang.reflect.TypeVariable)"},"failures":[],"tindex":"4d690585-3e51-11e6-ad2a-a31deb5ef0a7","method":{"position":"com.google.gson.Gson:591","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic void toJson(java.lang.Object src, java.lang.reflect.Type typeOfSrc, com.google.gson.stream.JsonWriter writer) throws com.google.gson.JsonIOException {\n    if (!(typeOfSrc instanceof java.lang.reflect.TypeVariable)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242335985/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    } else {\n        {\n            com.google.gson.TypeAdapter<?> com.google.gson.TypeAdapter<?> = getAdapter(com.google.gson.reflect.TypeToken.get(typeOfSrc));\n            boolean boolean = writer.isLenient();\n            writer.setLenient(true);\n            boolean boolean = writer.isHtmlSafe();\n            writer.setHtmlSafe(boolean);\n            boolean boolean = writer.getSerializeNulls();\n            writer.setSerializeNulls(boolean);\n            try {\n                ((com.google.gson.TypeAdapter<java.lang.Object>)(adapter)).write(writer, src);\n            } catch (java.io.IOException e) {\n                throw new com.google.gson.JsonIOException(e);\n            } finally {\n                writer.setLenient(oldLenient);\n                writer.setHtmlSafe(oldHtmlSafe);\n                writer.setSerializeNulls(oldSerializeNulls);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"typeOfSrc"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"4d690586-3e51-11e6-ad2a-e51662059426","method":{"position":"com.google.gson.Gson:310","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return in.nextLong();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:400","type":"CtBinaryOperatorImpl","sourcecode":"(deferredName) != null"},"failures":[],"tindex":"4d690587-3e51-11e6-ad2a-a3506bd133a5","method":{"position":"com.google.gson.internal.LinkedTreeMap:609","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(java.lang.Object key) {\n    if (key != null) {\n        {\n            return (removeInternalByKey(key)) != null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242335985/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"4d690588-3e51-11e6-ad2a-8359eabd2a86","method":{"position":"com.google.gson.internal.bind.TypeAdapters:63","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Class value) throws java.io.IOException {\n    if (value == null) {\n        out.nullValue();\n    } else {\n        throw new java.lang.UnsupportedOperationException(((\"Attempted to serialize java.lang.Class: \" + (value.getName())) + \". Forgot to register a type adapter?\"));\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.GsonBuilder:554","type":"CtBinaryOperatorImpl","sourcecode":"(datePattern != null) && (!(\"\".equals(datePattern.trim())))"},"failures":[],"tindex":"4d692c99-3e51-11e6-ad2a-8fbf7f480b5f","method":{"position":"com.google.gson.TypeAdapter:268","type":"CtMethodImpl","sourcecode":"public final T fromJson(java.lang.String json) throws java.io.IOException {\n    if ((json != null) && (!(\"\".equals(datePattern.trim())))) {\n        {\n            return fromJson(new java.io.StringReader(json));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242335985/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"datePattern":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory:43","type":"CtBinaryOperatorImpl","sourcecode":"annotation == null"},"failures":[],"tindex":"4d692c9a-3e51-11e6-ad2a-0fc846c7d806","method":{"position":"com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory:50","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic com.google.gson.TypeAdapter<?> getTypeAdapter(com.google.gson.internal.ConstructorConstructor constructorConstructor, com.google.gson.Gson gson, com.google.gson.reflect.TypeToken<?> fieldType, com.google.gson.annotations.JsonAdapter annotation) {\n    if (annotation == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242335985/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Class<?> java.lang.Class<?> = annotation.value();\n            if (com.google.gson.TypeAdapter.com.google.gson.TypeAdapter.java.lang.Class.isAssignableFrom(value)) {\n                java.lang.Class<com.google.gson.TypeAdapter<?>> java.lang.Class<com.google.gson.TypeAdapter<?>> = ((java.lang.Class<com.google.gson.TypeAdapter<?>>)(value));\n                return constructorConstructor.get(com.google.gson.reflect.TypeToken.get(typeAdapter)).construct();\n            } \n            if (com.google.gson.TypeAdapterFactory.com.google.gson.TypeAdapterFactory.java.lang.Class.isAssignableFrom(value)) {\n                java.lang.Class<com.google.gson.TypeAdapterFactory> java.lang.Class<com.google.gson.TypeAdapterFactory> = ((java.lang.Class<com.google.gson.TypeAdapterFactory>)(value));\n                return constructorConstructor.get(com.google.gson.reflect.TypeToken.get(typeAdapterFactory)).construct().create(gson, fieldType);\n            } \n            throw new java.lang.IllegalArgumentException(\"@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"annotation":"annotation"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.JsonElement:136","type":"CtInvocationImpl","sourcecode":"isJsonNull()"},"failures":[],"tindex":"4d692c9b-3e51-11e6-ad2a-19451e0ea0a7","method":{"position":"com.google.gson.Gson:631","type":"CtMethodImpl","sourcecode":"public void toJson(com.google.gson.JsonElement jsonElement, java.lang.Appendable writer) throws com.google.gson.JsonIOException {\n    try {\n        com.google.gson.stream.JsonWriter com.google.gson.stream.JsonWriter = newJsonWriter(com.google.gson.internal.Streams.writerForAppendable(writer));\n        toJson(jsonElement, jsonWriter);\n    } catch (java.io.IOException e) {\n        throw new java.lang.RuntimeException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"jsonElement"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:565","type":"CtBinaryOperatorImpl","sourcecode":"(indent) == null"},"failures":[72,104,110,112,120,131,132,134,135,139,140,141,142,143,144,146,147,148,150,151,217,274,279,295,308],"tindex":"4d692c9c-3e51-11e6-ad2a-81e6cf13fe4f","method":{"position":"com.google.gson.internal.bind.TypeAdapters:361","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.String value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242335985/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            out.value(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"indent":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:99","type":"CtVariableReadImpl","sourcecode":"serialization"},"failures":[416,9,10,11,12,16,17,417,18,21,22,23,418,24,25,26,419,27,420,28,29,421,422,423,30,31,32,33,34,35,424,425,36,426,37,38,39,40,427,41,428,42,429,43,44,45,430,46,47,48,49,50,51,431,52,53,54,432,55,387,433,56,57,58,59,434,60,61,62,435,436,63,437,64,438,439,65,66,67,68,440,441,442,69,70,71,72,73,443,444,74,445,446,75,76,447,77,78,448,79,449,80,81,82,83,84,85,450,86,388,451,452,87,88,89,453,90,91,92,454,93,455,94,95,96,97,98,389,390,391,392,393,456,457,458,459,99,460,461,462,100,101,463,464,102,465,103,466,104,467,468,469,470,105,106,107,471,472,108,109,473,110,111,112,113,114,115,474,116,117,475,118,394,476,119,120,121,122,123,477,124,125,126,127,128,129,130,131,478,479,132,395,133,134,135,480,136,137,138,139,481,140,482,141,142,143,144,145,146,147,148,483,484,149,150,151,485,486,487,152,488,153,489,490,491,492,493,154,494,495,155,496,497,498,499,500,501,502,156,157,503,504,505,506,507,158,508,159,160,509,510,161,511,512,162,513,163,164,514,515,165,166,516,517,518,167,519,520,521,522,523,524,525,526,168,527,169,528,170,171,529,530,172,531,532,173,533,174,534,535,536,175,176,177,178,179,180,181,537,538,539,182,540,183,541,542,543,184,185,544,186,545,546,187,188,547,548,189,549,550,190,551,552,191,192,553,554,193,555,194,195,556,557,196,558,197,198,559,199,200,201,560,202,561,562,563,564,203,565,204,205,566,206,567,568,569,570,207,571,572,208,209,210,573,211,212,213,214,574,215,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,575,576,577,578,579,242,243,244,245,246,247,248,249,397,398,250,399,251,400,401,252,253,254,256,257,258,259,580,581,260,582,402,583,261,262,403,263,584,264,265,266,267,585,268,269,270,271,272,586,587,273,274,275,588,589,590,276,591,277,592,278,593,279,594,280,595,281,282,283,284,285,286,287,596,597,288,598,599,600,289,601,290,602,603,291,292,293,294,295,296,297,604,605,298,299,300,404,606,607,301,608,302,303,609,304,610,305,306,611,612,307,613,308,614,309,310,311,312,313,615,314,616,315,316,617,317,618,318,319,320,321,619,322,620,621,323,622,324,325,623,326,327,624,328,329,330,331,332,333,625,626,334,335,627,336,628,337,338,405,406,339,340,407,408,341,409,629,342,343,344,345,346,347,348,349,350,630,351,352,353,354,355,631,632,356,633,357,634,635,636,358,637,638,359,360,361,362,363,639,640,364,365,366,367,641,368,369,642,643,372,373,644],"tindex":"4d6953ad-3e51-11e6-ad2a-e5a2f7a169d9","method":{"position":"com.google.gson.Gson:249","type":"CtMethodImpl","sourcecode":"private com.google.gson.TypeAdapter<java.lang.Number> doubleAdapter(boolean serializeSpecialFloatingPointValues) {\n    if (serializeSpecialFloatingPointValues) {\n        {\n            if (serializeSpecialFloatingPointValues) {\n                return com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<java.lang.Number>;\n            } \n            return new com.google.gson.TypeAdapter<java.lang.Number>() {\n                @java.lang.Override\n                public java.lang.Double read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n                    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n                        in.nextNull();\n                        return null;\n                    } \n                    return in.nextDouble();\n                }\n\n                @java.lang.Override\n                public void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n                    if (value == null) {\n                        out.nullValue();\n                        return ;\n                    } \n                    double double = value.doubleValue();\n                    checkValidFloatingPoint(doubleValue);\n                    out.value(value);\n                }\n            };\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242335985/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"serialization":"serializeSpecialFloatingPointValues"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"4d697abe-3e51-11e6-ad2a-ff1c3a575b77","method":{"position":"com.google.gson.internal.bind.TypeAdapters:304","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    com.google.gson.stream.JsonToken com.google.gson.stream.JsonToken = in.peek();\n    switch (jsonToken) {\n        case NULL :\n            in.nextNull();\n            return null;\n        case NUMBER :\n            return new com.google.gson.internal.LazilyParsedNumber(in.nextString());\n        default :\n            throw new com.google.gson.JsonSyntaxException((\"Expecting number, got: \" + jsonToken));\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl","sourcecode":"field.isSynthetic()"},"failures":[],"tindex":"4d697abf-3e51-11e6-ad2a-375331007683","method":{"position":"com.google.gson.FieldNamingPolicy:90","type":"CtMethodImpl","sourcecode":"public java.lang.String translateName(java.lang.reflect.Field f) {\n    if (f.isSynthetic()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242335985/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return com.google.gson.FieldNamingPolicy.separateCamelCase(f.getName(), \"_\").toLowerCase();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"f"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:431","type":"CtBinaryOperatorImpl","sourcecode":"factory == skipPast"},"failures":[9,227,229,233,235,236,238,250,251,255,256,258,259,581,582,264,265,334],"tindex":"4d697ac0-3e51-11e6-ad2a-81189cee78f5","method":{"position":"com.google.gson.Gson:422","type":"CtMethodImpl","sourcecode":"public <T>com.google.gson.TypeAdapter<T> getDelegateAdapter(com.google.gson.TypeAdapterFactory skipPast, com.google.gson.reflect.TypeToken<T> type) {\n    if (skipPast == skipPast) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242335985/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            boolean boolean = false;\n            if (!(java.util.List<com.google.gson.TypeAdapterFactory>.contains(skipPast)))\n                skipPastFound = true;\n            \n            for (com.google.gson.TypeAdapterFactory com.google.gson.TypeAdapterFactory : java.util.List<com.google.gson.TypeAdapterFactory>) {\n                if (!skipPastFound) {\n                    if (factory == skipPast) {\n                        skipPastFound = true;\n                    } \n                    continue;\n                } \n                com.google.gson.TypeAdapter<T> com.google.gson.TypeAdapter<T> = factory.create(com.google.gson.Gson.this, type);\n                if (candidate != null) {\n                    return candidate;\n                } \n            }\n            throw new java.lang.IllegalArgumentException((\"GSON cannot serialize \" + type));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"skipPast","skipPast":"skipPast"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"4d697ac1-3e51-11e6-ad2a-5b3d6815b9ca","method":{"position":"com.google.gson.internal.bind.TypeAdapters:338","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Character value) throws java.io.IOException {\n    out.value((value == null ? null : java.lang.String.valueOf(value)));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.ConstructorConstructor:181","type":"CtBinaryOperatorImpl","sourcecode":"(type instanceof java.lang.reflect.ParameterizedType) && (!(java.lang.String.class.isAssignableFrom(com.google.gson.reflect.TypeToken.get(((java.lang.reflect.ParameterizedType)(type)).getActualTypeArguments()[0]).getRawType())))"},"failures":[],"tindex":"4d697ac2-3e51-11e6-ad2a-c9f1cb3a04e6","method":{"position":"com.google.gson.internal.ConstructorConstructor:128","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprivate <T>com.google.gson.internal.ObjectConstructor<T> newDefaultImplementationConstructor(final java.lang.reflect.Type type, java.lang.Class<? super T> rawType) {\n    if ((type instanceof java.lang.reflect.ParameterizedType) && (!(type.isAssignableFrom(com.google.gson.reflect.TypeToken.get(((java.lang.reflect.ParameterizedType)(type)).getActualTypeArguments()[0]).getRawType())))) {\n        {\n            if (java.util.Collection.java.util.Collection.java.lang.Class.isAssignableFrom(rawType)) {\n                if (java.util.SortedSet.java.util.SortedSet.java.lang.Class.isAssignableFrom(rawType)) {\n                    return new com.google.gson.internal.ObjectConstructor<T>() {\n                        public T construct() {\n                            return ((T)(new java.util.TreeSet<java.lang.Object>()));\n                        }\n                    };\n                } else if (java.util.EnumSet.java.util.EnumSet.java.lang.Class.isAssignableFrom(rawType)) {\n                    return new com.google.gson.internal.ObjectConstructor<T>() {\n                        @java.lang.SuppressWarnings(value = \"rawtypes\")\n                        public T construct() {\n                            if (type instanceof java.lang.reflect.ParameterizedType) {\n                                java.lang.reflect.Type java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(type)).getActualTypeArguments()[0];\n                                if (elementType instanceof java.lang.Class) {\n                                    return ((T)(java.util.EnumSet.noneOf(((java.lang.Class)(elementType)))));\n                                } else {\n                                    throw new com.google.gson.JsonIOException((\"Invalid EnumSet type: \" + (type.toString())));\n                                }\n                            } else {\n                                throw new com.google.gson.JsonIOException((\"Invalid EnumSet type: \" + (type.toString())));\n                            }\n                        }\n                    };\n                } else if (java.util.Set.java.util.Set.java.lang.Class.isAssignableFrom(rawType)) {\n                    return new com.google.gson.internal.ObjectConstructor<T>() {\n                        public T construct() {\n                            return ((T)(new java.util.LinkedHashSet<java.lang.Object>()));\n                        }\n                    };\n                } else if (java.util.Queue.java.util.Queue.java.lang.Class.isAssignableFrom(rawType)) {\n                    return new com.google.gson.internal.ObjectConstructor<T>() {\n                        public T construct() {\n                            return ((T)(new java.util.LinkedList<java.lang.Object>()));\n                        }\n                    };\n                } else {\n                    return new com.google.gson.internal.ObjectConstructor<T>() {\n                        public T construct() {\n                            return ((T)(new java.util.ArrayList<java.lang.Object>()));\n                        }\n                    };\n                }\n            } \n            if (java.util.Map.java.util.Map.java.lang.Class.isAssignableFrom(rawType)) {\n                if (java.util.SortedMap.java.util.SortedMap.java.lang.Class.isAssignableFrom(rawType)) {\n                    return new com.google.gson.internal.ObjectConstructor<T>() {\n                        public T construct() {\n                            return ((T)(new java.util.TreeMap<java.lang.Object, java.lang.Object>()));\n                        }\n                    };\n                } else if ((type instanceof java.lang.reflect.ParameterizedType) && (!(java.lang.String.java.lang.String.java.lang.Class.isAssignableFrom(com.google.gson.reflect.TypeToken.get(((java.lang.reflect.ParameterizedType)(type)).getActualTypeArguments()[0]).getRawType())))) {\n                    return new com.google.gson.internal.ObjectConstructor<T>() {\n                        public T construct() {\n                            return ((T)(new java.util.LinkedHashMap<java.lang.Object, java.lang.Object>()));\n                        }\n                    };\n                } else {\n                    return new com.google.gson.internal.ObjectConstructor<T>() {\n                        public T construct() {\n                            return ((T)(new com.google.gson.internal.LinkedTreeMap<java.lang.String, java.lang.Object>()));\n                        }\n                    };\n                }\n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242335985/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.lang.String.class":"type","type":"type"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1344","type":"CtBinaryOperatorImpl","sourcecode":"p == l"},"failures":[],"tindex":"4d69a1d3-3e51-11e6-ad2a-d5da5a559655","method":{"position":"com.google.gson.GsonBuilder:423","type":"CtMethodImpl","sourcecode":"public com.google.gson.GsonBuilder setDateFormat(int dateStyle, int timeStyle) {\n    if (timeStyle == dateStyle) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467242335985/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.GsonBuilder.this.int = dateStyle;\n            com.google.gson.GsonBuilder.this.int = timeStyle;\n            com.google.gson.GsonBuilder.this.java.lang.String = null;\n            return com.google.gson.GsonBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"timeStyle","l":"dateStyle"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"4d69c8e4-3e51-11e6-ad2a-d3ece8caa94d","method":{"position":"com.google.gson.Gson:310","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return in.nextLong();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"4d69c8e5-3e51-11e6-ad2a-c7ea00fa3604","method":{"position":"com.google.gson.internal.bind.TypeAdapters:72","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Class read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } else {\n        throw new java.lang.UnsupportedOperationException(\"Attempted to deserialize a java.lang.Class. Forgot to register a type adapter?\");\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"4d69c8e6-3e51-11e6-ad2a-cb98c4d5259f","method":{"position":"com.google.gson.internal.bind.CollectionTypeAdapterFactory:72","type":"CtMethodImpl","sourcecode":"public java.util.Collection<E> read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    java.util.Collection<E> java.util.Collection<E> = com.google.gson.internal.ObjectConstructor<? extends java.util.Collection<E>>.construct();\n    in.beginArray();\n    while (in.hasNext()) {\n        E E = com.google.gson.TypeAdapter<E>.read(in);\n        collection.add(instance);\n    }\n    in.endArray();\n    return collection;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":37,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}