{"failureDictionary":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":558,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":53,"com.google.gson.functional.StringTest.testStringValueDeserialization":374,"com.google.gson.stream.JsonWriterTest.testPrettyPrintObject":612,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":110,"com.google.gson.functional.PrimitiveTest.testBigIntegerDeserialization":535,"com.google.gson.functional.PrimitiveTest.testBigDecimalNaNDeserializationNotSupported":508,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":136,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":494,"com.google.gson.MixedStreamTest.testWriteLenient":5,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":439,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":475,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":171,"com.google.gson.ExposeAnnotationExclusionStrategyTest.testNeverSkipClasses":610,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":187,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":111,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":121,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":474,"com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization":540,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":134,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":195,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":76,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerDeserialization":515,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":394,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":590,"com.google.gson.functional.ObjectTest.testSingletonLists":198,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":167,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":196,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":54,"com.google.gson.functional.PrimitiveTest.testNumberDeserialization":503,"com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue":604,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator":574,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":296,"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":428,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization":468,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":483,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":9,"com.google.gson.functional.PrimitiveTest.testStringsAsBooleans":542,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":388,"com.google.gson.functional.StringTest.testEscapedBackslashInStringDeserialization":382,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":61,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":44,"com.google.gson.functional.PrimitiveTest.testBigDecimalNoFractAsStringRepresentationDeserialization":536,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":413,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":345,"com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization":497,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":24,"com.google.gson.functional.MapTest.testMapOfMapDeserialization":412,"com.google.gson.functional.EnumTest.testEnumCaseMapping":133,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":11,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":52,"com.google.gson.functional.JsonTreeTest.testToJsonTree":307,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsLong":496,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":49,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":294,"com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreBehindInVersion":608,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":89,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":150,"com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization":366,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferDeserialization":460,"com.google.gson.functional.PrimitiveTest.testUnquotedStringDeserializationFails":504,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":332,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":118,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":300,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringDeserialization":380,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":481,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization":242,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":343,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsBigIntegerFails":509,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":206,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":22,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":271,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":486,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":342,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":74,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":181,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":320,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionDeserialization":548,"com.google.gson.functional.PrimitiveTest.testDoubleInfinityDeserialization":547,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization":467,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":234,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":228,"com.google.gson.functional.PrimitiveTest.testFloatInfinityDeserialization":552,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":36,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":212,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":166,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityDeserialization":523,"com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization":408,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":440,"com.google.gson.functional.PrimitiveTest.testDoubleNoFractAsStringRepresentationDeserialization":533,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":315,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountryVariant":459,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":336,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":568,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":108,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":235,"com.google.gson.functional.JsonParserTest.testParseInvalidJson":446,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsDouble":534,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":32,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":211,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":14,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":17,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":478,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":140,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":220,"com.google.gson.functional.MapTest.testMapDeserializationWithNullValue":416,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":472,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":287,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":83,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":360,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":569,"com.google.gson.functional.MapTest.testNumberKeyDeserialization":419,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings":577,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":170,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":386,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":161,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":357,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":270,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":582,"com.google.gson.functional.CollectionTest.testSetDeserialization":426,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":77,"com.google.gson.functional.EnumTest.testEnumSet":127,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":202,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersEscapedDeserialization":434,"com.google.gson.functional.PrimitiveTest.testBigDecimalAsStringRepresentationDeserialization":526,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":84,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":273,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":94,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampDeserialization":456,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":207,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":82,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":344,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBytePrimitive":537,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":359,"com.google.gson.functional.PrimitiveTest.testDeserializingDecimalPointValueZeroSucceeds":543,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":19,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":298,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":238,"com.google.gson.functional.MapTest.testHashMapDeserialization":401,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsIntegerFails":506,"com.google.gson.functional.CollectionTest.testLinkedListDeserialization":422,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesDeserialization":464,"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":18,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization":559,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":308,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":557,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":334,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":581,"com.google.gson.functional.MapTest.testSortedMap":414,"com.google.gson.functional.MapTest.testMapSerialization":98,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":257,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":384,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedDeserialization":531,"com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization":368,"com.google.gson.functional.MapTest.testSerializeMaps":93,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":185,"com.google.gson.functional.MapTest.testComplexKeysSerialization":106,"com.google.gson.functional.InternationalizationTest.testStringsWithRawChineseCharactersDeserialization":433,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsFalse":15,"com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader":418,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":42,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":302,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":432,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":333,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":586,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriter":297,"com.google.gson.functional.EnumTest.testTopLevelEnumDeserialization":431,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":47,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":137,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsDeserialization":488,"com.google.gson.functional.MapTest.testStringKeyDeserialization":417,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsDeserialization":370,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":275,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":246,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":109,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesDeserialization":512,"com.google.gson.functional.PrettyPrintingTest.testMap":45,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":326,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigInteger":507,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":114,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":147,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":561,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls":579,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":8,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysDeserialization":371,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":58,"com.google.gson.functional.StringTest.testStringWithEscapedSlashDeserialization":375,"com.google.gson.functional.MapTest.testMapSerializationEmpty":107,"com.google.gson.functional.CollectionTest.testQueueSerialization":115,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":158,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsByteWrapper":527,"com.google.gson.functional.MapTest.testMapOfMapSerialization":97,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":226,"com.google.gson.JavaSerializationTest.testMapIsSerializable":352,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountry":461,"com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization":424,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":231,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":255,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":281,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":55,"com.google.gson.functional.FieldNamingTest.testIdentity":186,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":570,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":264,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":489,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":139,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":189,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":197,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":306,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalDeserialization":498,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":346,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":56,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":268,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization":229,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":447,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeDeserialization":466,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":338,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidDeserialization":457,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":159,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullJsonElementSerialization":180,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":254,"com.google.gson.functional.MapTest.testMapDeserializationEmpty":399,"com.google.gson.functional.MapTest.testMapSubclassSerialization":92,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":245,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":193,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":397,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersDeserialization":435,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":2,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":68,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":328,"com.google.gson.functional.PrimitiveTest.testBigDecimalDeserialization":521,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":441,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguage":452,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsLongPrimitive":556,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":578,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":81,"com.google.gson.functional.EnumTest.testEnumSubclass":130,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization":232,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":10,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":482,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization":216,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":267,"com.google.gson.functional.PrimitiveTest.testFloatNaNDeserialization":539,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":274,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":583,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsLongWrapper":499,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":142,"com.google.gson.InnerClassExclusionStrategyTest.testIncludeStaticNestedClassObject":354,"com.google.gson.functional.PrimitiveTest.testBigDecimalNegativeInfinityDeserializationNotSupported":524,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":448,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":285,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":337,"com.google.gson.functional.ArrayTest.testArrayOfNullDeserialization":365,"com.google.gson.functional.ObjectTest.testTruncatedDeserialization":480,"com.google.gson.functional.PrimitiveTest.testBigDecimalInfinityDeserializationNotSupported":528,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization":227,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":438,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":175,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":473,"com.google.gson.MixedStreamTest.testWriteNulls":3,"com.google.gson.functional.MapTest.testMapSubclassDeserialization":400,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":37,"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":444,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":34,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":301,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":393,"com.google.gson.CommentsTest.testParseComments":605,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":199,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":278,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":594,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":261,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":369,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigDecimal":538,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":383,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":57,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":100,"com.google.gson.MixedStreamTest.testReadInvalidState":348,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":73,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":88,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":177,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":244,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":65,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":219,"com.google.gson.functional.ArrayTest.testArrayOfStringsDeserialization":372,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":258,"com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreAheadInVersion":606,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":223,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":253,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":164,"com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization":239,"com.google.gson.functional.ArrayTest.testEmptyArrayDeserialization":363,"com.google.gson.functional.MapTest.testMapDeserialization":406,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":160,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":50,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":91,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":589,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":95,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":292,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":593,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":331,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":587,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":305,"com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization":430,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":451,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization":205,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":213,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":310,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":329,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":286,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":151,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":395,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":141,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":316,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":46,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":99,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":340,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":179,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigDecimal":495,"com.google.gson.functional.PrimitiveTest.testShortSerialization":243,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":573,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":596,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedDeserialization":541,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":26,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedDeserialization":522,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":236,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":153,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsBigDecimal":505,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":182,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":129,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":113,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":192,"com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues":403,"com.google.gson.functional.PrimitiveTest.testLargeDoubleDeserialization":518,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":125,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":247,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":442,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization":465,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":600,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":350,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization":250,"com.google.gson.functional.PrimitiveTest.testDeserializingNonZeroDecimalPointValuesAsIntegerFails":551,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":138,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":214,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":571,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":576,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":69,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":143,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":545,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":373,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":276,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsDoublePrimitive":525,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":492,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":477,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":132,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":135,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":312,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":119,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":454,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":324,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives":572,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":588,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":165,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":595,"com.google.gson.InnerClassExclusionStrategyTest.testExcludeInnerClassObject":355,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsInt":511,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":155,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":335,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":597,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization":463,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":290,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization":420,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsShortWrapper":500,"com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral":546,"com.google.gson.functional.PrimitiveTest.testNumberSerialization":230,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":248,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":27,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":128,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":592,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":563,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":385,"com.google.gson.functional.MapTest.testGeneralMapField":104,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":476,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":31,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsShortPrimitive":554,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":39,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":269,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":325,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":172,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":102,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":144,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":218,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":319,"com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization":237,"com.google.gson.MixedStreamTest.testReadMixedStreamed":349,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":224,"com.google.gson.functional.MapTest.testBooleanKeyDeserialization":409,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlDeserialization":455,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":122,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":347,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":602,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":471,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBooleanPrimitive":529,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":25,"com.google.gson.JavaSerializationTest.testNumberIsSerializable":351,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":358,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":163,"com.google.gson.functional.MapTest.testDeerializeMapOfMaps":410,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":90,"com.google.gson.functional.MapTest.testMapDeserializationWithNullKey":402,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":249,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":279,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":64,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":71,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsFloatPrimitive":519,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":162,"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":445,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":265,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionDeserilaization":423,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserialization":449,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization":599,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":283,"com.google.gson.functional.ObjectTest.testNestedDeserialization":493,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":62,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":210,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":560,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":284,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":23,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsNumber":553,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":260,"com.google.gson.functional.StringTest.testSingleQuoteInStringDeserialization":376,"com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys":411,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":436,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":80,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":241,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":311,"com.google.gson.JavaSerializationTest.testListIsSerializable":353,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":191,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":443,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":124,"com.google.gson.functional.ObjectTest.testNullSerialization":203,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":314,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization":398,"com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey":404,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":103,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":217,"com.google.gson.functional.MapTest.testInterfaceTypeMap":101,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization":367,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":327,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":289,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsDoubleWrapper":501,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":67,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":131,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails":330,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":585,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":145,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":21,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsInteger":513,"com.google.gson.MixedStreamTest.testWriteClosed":7,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":117,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":562,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":200,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateDeserialization":469,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":575,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":85,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":288,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":263,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":215,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":259,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":178,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":201,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":293,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":116,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":390,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBooleanWrapper":532,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":72,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":584,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":120,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":168,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":565,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":251,"com.google.gson.functional.PrimitiveTest.testDoubleAsStringRepresentationDeserialization":555,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":222,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":304,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderDeserialization":453,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":29,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":303,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":262,"com.google.gson.functional.CollectionTest.testQueueDeserialization":429,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":225,"com.google.gson.functional.PrimitiveTest.testByteDeserialization":530,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringDeserialization":379,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization":256,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":176,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":391,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":407,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":487,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":157,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":321,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":491,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":112,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":1,"com.google.gson.functional.MapTest.testRawMapSerialization":105,"com.google.gson.functional.CollectionTest.testNullsInListDeserialization":427,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetDeserialization":462,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":208,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":309,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":387,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":598,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":339,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":33,"com.google.gson.functional.PrimitiveTest.testByteSerialization":240,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":295,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapNoTypeSerialization":341,"com.google.gson.ObjectTypeAdapterTest.testSerialize":603,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":317,"com.google.gson.reflect.TypeTokenTest.testIsAssignableFromRawTypes":0,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsFloatWrapper":510,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":188,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":38,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":183,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":86,"com.google.gson.functional.StringTest.testAssignmentCharDeserialization":377,"com.google.gson.GsonTypeAdapterTest.testDefaultTypeAdapterThrowsParseException":609,"com.google.gson.functional.MapTest.testMapWithQuotes":96,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":148,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatDeserialization":516,"com.google.gson.functional.StringTest.testEscapingQuotesInStringDeserialization":378,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":272,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":601,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":282,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":126,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsNumber":549,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":146,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":75,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":591,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":78,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":490,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":51,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":154,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":233,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":41,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":479,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":173,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":149,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":70,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":156,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":190,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigInteger":544,"com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed":425,"com.google.gson.functional.ArrayTest.testSingleStringArrayDeserialization":362,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":30,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":79,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":174,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":313,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":266,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization":392,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":194,"com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreAtSameVersion":607,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReader":580,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":396,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsFloat":502,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":280,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":484,"com.google.gson.functional.ObjectTest.testNestedSerialization":209,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":28,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":221,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":318,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringDeserialization":381,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":63,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":415,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":66,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":43,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":6,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":13,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":204,"com.google.gson.functional.UncategorizedTest.testTrailingWhitespace":564,"com.google.gson.functional.PrimitiveTest.testBooleanDeserialization":550,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":291,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":470,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":458,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":12,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsInteger":514,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":450,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":485,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":389,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":59,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":364,"com.google.gson.functional.CollectionTest.testSetSerialization":123,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":567,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":48,"com.google.gson.functional.StringTest.testStringValueSerialization":60,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":277,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":322,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":252,"com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization":421,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":437,"com.google.gson.MixedStreamTest.testWriteInvalidState":4,"com.google.gson.functional.ArrayTest.testInvalidArrayDeserialization":361,"com.google.gson.functional.PrimitiveTest.testBadValueForBigIntegerDeserialization":517,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":40,"com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero":520,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":16,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":152,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":184,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":299,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":566,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":20,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":87,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullSerialization":169,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":323,"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":405,"com.google.gson.stream.JsonWriterTest.testPrettyPrintArray":611,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":35,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType":356},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:122","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"3819ff49-3f20-11e6-b961-8555cbb7d9f3","method":{"position":"com.google.gson.internal.$Gson$Types:431","type":"CtMethodImpl","sourcecode":"private static void checkNotPrimitive(java.lang.reflect.Type type) {\n    com.google.gson.internal.$Gson$Preconditions.checkArgument(((!(type instanceof java.lang.Class<?>)) || (!(((java.lang.Class<?>)(type)).isPrimitive()))));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:315","type":"CtBinaryOperatorImpl"},"failures":[0],"tindex":"381a4d6a-3f20-11e6-b961-b31d7fb6f2e0","method":{"position":"com.google.gson.reflect.TypeToken:122","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic boolean isAssignableFrom(java.lang.reflect.Type from) {\n    if (from instanceof java.lang.reflect.ParameterizedType) {\n        {\n            if (from == null) {\n                return false;\n            } \n            if (java.lang.reflect.Type.equals(from)) {\n                return true;\n            } \n            if ((java.lang.reflect.Type) instanceof java.lang.Class<?>) {\n                return java.lang.Class<? super T>.isAssignableFrom(com.google.gson.internal.$Gson$Types.getRawType(from));\n            } else if ((java.lang.reflect.Type) instanceof java.lang.reflect.ParameterizedType) {\n                return com.google.gson.reflect.TypeToken.isAssignableFrom(from, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)), new java.util.HashMap<java.lang.String, java.lang.reflect.Type>());\n            } else if ((java.lang.reflect.Type) instanceof java.lang.reflect.GenericArrayType) {\n                return (java.lang.Class<? super T>.isAssignableFrom(com.google.gson.internal.$Gson$Types.getRawType(from))) && (com.google.gson.reflect.TypeToken.isAssignableFrom(from, ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type))));\n            } else {\n                throw com.google.gson.reflect.TypeToken.buildUnexpectedTypeError(java.lang.reflect.Type, java.lang.Class.java.lang.Class.java.lang.Class, java.lang.reflect.ParameterizedType.java.lang.reflect.ParameterizedType.java.lang.Class, java.lang.reflect.GenericArrayType.java.lang.reflect.GenericArrayType.java.lang.Class);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331215603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"mapType":"from"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:122","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"381a4d6b-3f20-11e6-b961-3322ff09da70","method":{"position":"com.google.gson.internal.LinkedTreeMap:605","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(java.lang.Object o) {\n    if (o instanceof java.lang.reflect.ParameterizedType) {\n        {\n            return containsKey(o);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331215603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"381a747c-3f20-11e6-b961-bb72bd7da4a8","method":{"position":"com.google.gson.internal.bind.TypeAdapters:245","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    out.value(value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:746","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"381a747d-3f20-11e6-b961-6da76a086273","method":{"position":"com.google.gson.stream.JsonWriter:324","type":"CtMethodImpl","sourcecode":"private com.google.gson.stream.JsonWriter open(int empty, java.lang.String openBracket) throws java.io.IOException {\n    if (((empty == empty) || (last == empty)) || (last == empty)) {\n        {\n            beforeValue(true);\n            push(empty);\n            java.io.Writer.write(openBracket);\n            return com.google.gson.stream.JsonWriter.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331215603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"com.google.gson.stream.JsonReader.NUMBER_CHAR_FRACTION_DIGIT":"empty","last":"empty","com.google.gson.stream.JsonReader.NUMBER_CHAR_EXP_DIGIT":"empty","com.google.gson.stream.JsonReader.NUMBER_CHAR_DIGIT":"empty"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:403","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"381a747e-3f20-11e6-b961-9de9348ba96b","method":{"position":"com.google.gson.DefaultDateTypeAdapter:70","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement serialize(java.util.Date src, java.lang.reflect.Type typeOfSrc, com.google.gson.JsonSerializationContext context) {\n    if (typeOfSrc instanceof java.lang.reflect.ParameterizedType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331215603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.text.DateFormat) {\n                java.lang.String java.lang.String = java.text.DateFormat.format(src);\n                return new com.google.gson.JsonPrimitive(dateFormatAsString);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"declaredBy":"typeOfSrc"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:306","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"381a9b8f-3f20-11e6-b961-5f2fcaeec871","method":{"position":"com.google.gson.JsonObject:121","type":"CtMethodImpl","sourcecode":"private com.google.gson.JsonElement createJsonElement(java.lang.Object value) {\n    if (value == value) {\n        {\n            return value == null ? com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull : new com.google.gson.JsonPrimitive(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331215603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"longSerializationPolicy":"value","com.google.gson.LongSerializationPolicy.DEFAULT":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:370","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"381a9b90-3f20-11e6-b961-7fd62794f915","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:120","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(java.lang.Object key) {\n    if (key instanceof java.lang.reflect.WildcardType) {\n        {\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = removeInternalByKey(key);\n            return node != null ? node.V : null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331215603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.internal.$Gson$Types:348","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"381a9b91-3f20-11e6-b961-4bcf8ac15214","method":{"position":"com.google.gson.Gson:773","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic <T>T fromJson(java.io.Reader json, java.lang.reflect.Type typeOfT) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException {\n    if (typeOfT instanceof java.lang.reflect.ParameterizedType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331215603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    } else {\n        {\n            com.google.gson.stream.JsonReader com.google.gson.stream.JsonReader = new com.google.gson.stream.JsonReader(json);\n            T T = ((T)(fromJson(jsonReader, typeOfT)));\n            com.google.gson.Gson.assertFullConsumption(object, jsonReader);\n            return object;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"typeOfT"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:115","type":"CtInvocationImpl"},"failures":[],"tindex":"381a9b92-3f20-11e6-b961-c5e8888e9e90","method":{"position":"com.google.gson.Gson:847","type":"CtMethodImpl","sourcecode":"public <T>T fromJson(com.google.gson.JsonElement json, java.lang.Class<T> classOfT) throws com.google.gson.JsonSyntaxException {\n    if (json.isNumber()) {\n        {\n            java.lang.Object java.lang.Object = fromJson(json, ((java.lang.reflect.Type)(classOfT)));\n            return com.google.gson.internal.Primitives.wrap(classOfT).cast(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331215603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"primitive":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:176","type":"CtInvocationImpl"},"failures":[],"tindex":"381ac2a3-3f20-11e6-b961-7f3c6e630158","method":{"position":"com.google.gson.JsonArray:92","type":"CtMethodImpl","sourcecode":"public boolean remove(com.google.gson.JsonElement element) {\n    return java.util.List<com.google.gson.JsonElement>.remove(element);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"element"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"381ac2a4-3f20-11e6-b961-19ef9b80c681","method":{"position":"com.google.gson.internal.bind.CollectionTypeAdapterFactory:72","type":"CtMethodImpl","sourcecode":"public java.util.Collection<E> read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    java.util.Collection<E> java.util.Collection<E> = com.google.gson.internal.ObjectConstructor<? extends java.util.Collection<E>>.construct();\n    in.beginArray();\n    while (in.hasNext()) {\n        E E = com.google.gson.TypeAdapter<E>.read(in);\n        collection.add(instance);\n    }\n    in.endArray();\n    return collection;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"381ac2a5-3f20-11e6-b961-b332d69c6d10","method":{"position":"com.google.gson.internal.bind.ArrayTypeAdapter:63","type":"CtMethodImpl","sourcecode":"public java.lang.Object read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n    in.beginArray();\n    while (in.hasNext()) {\n        E E = com.google.gson.TypeAdapter<E>.read(in);\n        list.add(instance);\n    }\n    in.endArray();\n    java.lang.Object java.lang.Object = java.lang.reflect.Array.newInstance(java.lang.Class<E>, list.size());\n    for (int int = 0 ; i < (list.size()) ; i++) {\n        java.lang.reflect.Array.set(array, i, list.get(i));\n    }\n    return array;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"381ae9b6-3f20-11e6-b961-f19b7d28e77e","method":{"position":"com.google.gson.internal.bind.TypeAdapters:367","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.math.BigDecimal read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        return new java.math.BigDecimal(in.nextString());\n    } catch (java.lang.NumberFormatException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.TreeTypeAdapter:55","type":"CtInvocationImpl"},"failures":[],"tindex":"381ae9b7-3f20-11e6-b961-77a006f4bf2f","method":{"position":"com.google.gson.internal.bind.ObjectTypeAdapter:94","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Object value) throws java.io.IOException {\n    if (value.isJsonNull()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331215603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value == null) {\n                out.nullValue();\n                return ;\n            } \n            com.google.gson.TypeAdapter<java.lang.Object> com.google.gson.TypeAdapter<java.lang.Object> = ((com.google.gson.TypeAdapter<java.lang.Object>)(com.google.gson.Gson.getAdapter(value.getClass())));\n            if (typeAdapter instanceof com.google.gson.internal.bind.ObjectTypeAdapter) {\n                out.beginObject();\n                out.endObject();\n                return ;\n            } \n            typeAdapter.write(out, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"381ae9b8-3f20-11e6-b961-bf57738643fb","method":{"position":"com.google.gson.internal.bind.TypeAdapters:491","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.net.InetAddress value) throws java.io.IOException {\n    out.value((value == null ? null : value.getHostAddress()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:163","type":"CtFieldReadImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347],"tindex":"381ae9b9-3f20-11e6-b961-0d20bc9e9b84","method":{"position":"com.google.gson.stream.JsonWriter:268","type":"CtMethodImpl","sourcecode":"public final void setSerializeNulls(boolean serializeNulls) {\n    if (serializeNulls) {\n        {\n            com.google.gson.stream.JsonWriter.this.boolean = serializeNulls;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331215603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"requireExpose":"serializeNulls"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"381b10ca-3f20-11e6-b961-fb1acfb234c8","method":{"position":"com.google.gson.internal.bind.TypeAdapters:546","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.Calendar read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    in.beginObject();\n    int int = 0;\n    int int = 0;\n    int int = 0;\n    int int = 0;\n    int int = 0;\n    int int = 0;\n    while ((in.peek()) != (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        java.lang.String java.lang.String = in.nextName();\n        int int = in.nextInt();\n        if (com.google.gson.internal.bind.TypeAdapters.23.java.lang.String.equals(name)) {\n            year = value;\n        } else if (com.google.gson.internal.bind.TypeAdapters.23.java.lang.String.equals(name)) {\n            month = value;\n        } else if (com.google.gson.internal.bind.TypeAdapters.23.java.lang.String.equals(name)) {\n            dayOfMonth = value;\n        } else if (com.google.gson.internal.bind.TypeAdapters.23.java.lang.String.equals(name)) {\n            hourOfDay = value;\n        } else if (com.google.gson.internal.bind.TypeAdapters.23.java.lang.String.equals(name)) {\n            minute = value;\n        } else if (com.google.gson.internal.bind.TypeAdapters.23.java.lang.String.equals(name)) {\n            second = value;\n        } \n    }\n    in.endObject();\n    return new java.util.GregorianCalendar(year , month , dayOfMonth , hourOfDay , minute , second);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:247","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"381b5eeb-3f20-11e6-b961-a5bb69094209","method":{"position":"com.google.gson.reflect.TypeToken:81","type":"CtMethodImpl","sourcecode":"static java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class<?> subclass) {\n    if (subclass == subclass) {\n        {\n            java.lang.reflect.Type java.lang.reflect.Type = subclass.getGenericSuperclass();\n            if (superclass instanceof java.lang.Class) {\n                throw new java.lang.RuntimeException(\"Missing type parameter.\");\n            } \n            java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(superclass));\n            return com.google.gson.internal.$Gson$Types.canonicalize(parameterized.getActualTypeArguments()[0]);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331215603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"subclass","rawSupertype":"subclass"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"381b5eec-3f20-11e6-b961-c149bc6ff87e","method":{"position":"com.google.gson.internal.bind.TypeAdapters:530","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.sql.Timestamp value) throws java.io.IOException {\n    dateTypeAdapter.write(out, value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.stream.JsonWriter:386","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"381b5eed-3f20-11e6-b961-b59c5d47c3b4","method":{"position":"com.google.gson.Gson:695","type":"CtMethodImpl","sourcecode":"public <T>T fromJson(java.lang.String json, java.lang.Class<T> classOfT) throws com.google.gson.JsonSyntaxException {\n    if (json == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331215603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    } else {\n        {\n            java.lang.Object java.lang.Object = fromJson(json, ((java.lang.reflect.Type)(classOfT)));\n            return com.google.gson.internal.Primitives.wrap(classOfT).cast(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:76","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"381b5eee-3f20-11e6-b961-05d49db33696","method":{"position":"com.google.gson.JsonObject:161","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonPrimitive getAsJsonPrimitive(java.lang.String memberName) {\n    if (memberName != null) {\n        {\n            return ((com.google.gson.JsonPrimitive)(com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.get(memberName)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331215603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pendingName":"memberName"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:105","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"381b85ff-3f20-11e6-b961-b9cf8e3b8073","method":{"position":"com.google.gson.Gson:552","type":"CtMethodImpl","sourcecode":"public void toJson(java.lang.Object src, java.lang.Appendable writer) throws com.google.gson.JsonIOException {\n    if (src instanceof com.google.gson.JsonObject) {\n        {\n            if (src != null) {\n                toJson(src, src.getClass(), writer);\n            } else {\n                toJson(com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull, writer);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331215603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:125","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"381b8600-3f20-11e6-b961-fdff386fe15c","method":{"position":"com.google.gson.internal.LinkedTreeMap:184","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\ncom.google.gson.internal.LinkedTreeMap.Node<K, V> findByObject(java.lang.Object key) {\n    if (key instanceof com.google.gson.JsonObject) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331215603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            try {\n                return key != null ? find(((K)(key)), false) : null;\n            } catch (java.lang.ClassCastException e) {\n                return null;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:378","type":"CtVariableReadImpl"},"failures":[1,348,2,4,5,6,7,349,350,8,9,10,351,352,353,11,12,13,354,355,14,16,17,18,356,357,358,359,360,19,20,21,22,23,24,25,26,27,28,29,30,361,31,32,33,34,35,362,363,36,364,37,365,366,367,38,368,39,369,40,370,41,371,42,372,43,373,44,45,46,47,48,49,50,51,374,52,53,54,55,56,375,376,57,377,58,378,379,380,59,381,382,60,61,62,63,64,383,384,65,385,66,386,387,68,69,388,389,70,71,390,391,72,392,73,74,75,76,77,78,393,79,80,81,82,83,84,394,85,86,87,395,88,396,397,89,398,90,399,91,400,401,402,92,93,403,404,94,405,95,406,407,408,409,410,411,96,97,98,412,413,99,100,414,101,102,103,104,415,105,416,106,107,417,108,418,419,109,110,111,112,113,114,420,421,422,115,116,117,118,119,423,424,120,425,426,121,122,427,123,124,428,125,429,126,127,128,129,130,430,431,131,432,132,133,134,433,434,135,435,136,436,137,437,138,438,139,140,439,440,441,442,443,444,445,446,141,447,448,142,449,143,144,145,450,451,452,147,453,149,150,151,454,455,456,153,457,154,155,156,157,158,458,159,459,160,161,460,162,461,163,164,165,166,167,462,463,168,464,170,465,171,172,466,173,174,175,176,177,178,467,468,179,181,469,182,183,184,185,186,187,188,189,190,191,192,193,194,195,470,471,196,472,197,198,473,474,199,475,476,200,477,478,201,479,480,202,481,204,482,205,483,206,207,484,208,209,210,485,211,486,487,488,212,489,213,214,490,215,491,492,493,494,495,496,497,216,498,217,499,500,501,502,503,218,504,505,219,506,507,508,509,510,511,512,220,221,513,514,515,516,517,222,518,223,224,519,520,225,521,522,226,523,227,228,524,525,229,230,526,527,528,231,529,530,531,532,533,534,535,536,232,537,233,538,234,235,539,540,236,541,542,237,543,238,544,545,546,239,240,241,242,243,244,245,547,548,549,246,550,247,551,552,553,248,249,554,250,555,556,251,252,253,254,255,557,256,558,257,559,560,561,562,563,258,259,260,261,262,263,564,264,265,565,266,566,267,268,269,567,270,271,272,568,273,569,570,571,274,275,276,572,277,278,279,573,280,574,281,282,283,284,285,286,287,288,289,290,291,575,576,292,293,294,577,295,578,296,579,580,581,298,299,300,301,302,582,303,304,305,306,307,308,309,310,311,312,313,314,583,584,315,585,316,586,587,317,318,319,320,321,322,324,325,326,327,328,329,330,588,589,590,331,591,332,592,593,594,595,596,597,598,599,333,600,334,601,602,335,336,603,604,605,606,607,608,337,338,339,340,341,609,344,345,346,347,610],"tindex":"381b8601-3f20-11e6-b961-2133d0ed918b","method":{"position":"com.google.gson.internal.Excluder:191","type":"CtMethodImpl","sourcecode":"public boolean excludeClass(java.lang.Class<?> clazz, boolean serialize) {\n    if (serialize) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331215603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((double) != (com.google.gson.internal.Excluder.com.google.gson.internal.Excluder.double)) && (!(isValidVersion(clazz.getAnnotation(com.google.gson.annotations.Since.com.google.gson.annotations.Since.java.lang.Class), clazz.getAnnotation(com.google.gson.annotations.Until.com.google.gson.annotations.Until.java.lang.Class))))) {\n                return true;\n            } \n            if ((!(boolean)) && (isInnerClass(clazz))) {\n                return true;\n            } \n            if (isAnonymousOrLocal(clazz)) {\n                return true;\n            } \n            java.util.List<com.google.gson.ExclusionStrategy> java.util.List<com.google.gson.ExclusionStrategy> = serialize ? java.util.List<com.google.gson.ExclusionStrategy> : java.util.List<com.google.gson.ExclusionStrategy>;\n            for (com.google.gson.ExclusionStrategy com.google.gson.ExclusionStrategy : list) {\n                if (exclusionStrategy.shouldSkipClass(clazz)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"insert":"serialize"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"381bad12-3f20-11e6-b961-a9f99470f8b2","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:208","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, T value) throws java.io.IOException {\n    if (value == null) {\n        out.nullValue();\n        return ;\n    } \n    out.beginObject();\n    try {\n        for (com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField : java.util.Map<java.lang.String, com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField>.values()) {\n            if (boundField.writeField(value)) {\n                out.name(boundField.java.lang.String);\n                boundField.write(out, value);\n            } \n        }\n    } catch (java.lang.IllegalAccessException e) {\n        throw new java.lang.AssertionError();\n    }\n    out.endObject();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:192","type":"CtInvocationImpl"},"failures":[],"tindex":"381bd423-3f20-11e6-b961-654b9dd7fdce","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:804","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(java.lang.Object o) {\n    if (o.equals(o)) {\n        {\n            return (o instanceof java.util.Map.Entry) && ((findByEntry(((java.util.Map.Entry<?, ?>)(o)))) != null);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331215603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"o","to":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"381bd424-3f20-11e6-b961-5b49b6cc8ba7","method":{"position":"com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:45","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"rawtypes\" , \"unchecked\" })\n@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, T value) throws java.io.IOException {\n    com.google.gson.TypeAdapter com.google.gson.TypeAdapter = com.google.gson.TypeAdapter<T>;\n    java.lang.reflect.Type java.lang.reflect.Type = getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type, value);\n    if (runtimeType != (java.lang.reflect.Type)) {\n        com.google.gson.TypeAdapter com.google.gson.TypeAdapter = com.google.gson.Gson.getAdapter(com.google.gson.reflect.TypeToken.get(runtimeType));\n        if (!(runtimeTypeAdapter instanceof com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.Adapter)) {\n            chosen = runtimeTypeAdapter;\n        } else if (!((com.google.gson.TypeAdapter<T>) instanceof com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.Adapter)) {\n            chosen = com.google.gson.TypeAdapter<T>;\n        } else {\n            chosen = runtimeTypeAdapter;\n        }\n    } \n    chosen.write(out, value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:213","type":"CtBinaryOperatorImpl"},"failures":[2,44,45,46,47,48,49,50,51,61,93,611,612],"tindex":"381bd425-3f20-11e6-b961-2f1b1f7daf8a","method":{"position":"com.google.gson.stream.JsonWriter:212","type":"CtMethodImpl","sourcecode":"public final void setIndent(java.lang.String indent) {\n    if ((indent.length()) == 0) {\n        {\n            if ((indent.length()) == 0) {\n                com.google.gson.stream.JsonWriter.this.java.lang.String = null;\n                com.google.gson.stream.JsonWriter.this.java.lang.String = \":\";\n            } else {\n                com.google.gson.stream.JsonWriter.this.java.lang.String = indent;\n                com.google.gson.stream.JsonWriter.this.java.lang.String = \": \";\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331215603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"indent":"indent"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"381bd426-3f20-11e6-b961-2db3a05666fd","method":{"position":"com.google.gson.internal.bind.TypeAdapters:233","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        return in.nextInt();\n    } catch (java.lang.NumberFormatException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:537","type":"CtFieldReadImpl"},"failures":[],"tindex":"381bfb37-3f20-11e6-b961-bd5688d7eb19","method":{"position":"com.google.gson.stream.JsonReader:325","type":"CtMethodImpl","sourcecode":"public final void setLenient(boolean lenient) {\n    if (lenient) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331215603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.stream.JsonReader.this.boolean = lenient;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lenient":"lenient"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.stream.JsonReader:290","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"381bfb38-3f20-11e6-b961-f5ca2f7c55be","method":{"position":"com.google.gson.Gson:746","type":"CtMethodImpl","sourcecode":"public <T>T fromJson(java.io.Reader json, java.lang.Class<T> classOfT) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException {\n    if (json == null) {\n        {\n            com.google.gson.stream.JsonReader com.google.gson.stream.JsonReader = new com.google.gson.stream.JsonReader(json);\n            java.lang.Object java.lang.Object = fromJson(jsonReader, classOfT);\n            com.google.gson.Gson.assertFullConsumption(object, jsonReader);\n            return com.google.gson.internal.Primitives.wrap(classOfT).cast(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331215603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"in":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:182","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"381bfb39-3f20-11e6-b961-cf20b481568e","method":{"position":"com.google.gson.Gson:297","type":"CtMethodImpl","sourcecode":"private void checkValidFloatingPoint(double value) {\n    if ((java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(d))) {\n        {\n            if ((java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(value))) {\n                throw new java.lang.IllegalArgumentException(((value + \" is not a valid double value as per JSON specification. To override this\") + \" behavior, use GsonBuilder.serializeSpecialFloatingPointValues() method.\"));\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331215603/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"d":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":33,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}