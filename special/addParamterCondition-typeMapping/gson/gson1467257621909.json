{"failureDictionary":{"com.google.gson.JsonStreamParserTest.testNoSideEffectForHasNext":636,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":51,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":364,"com.google.gson.functional.StringTest.testStringValueDeserialization":362,"com.google.gson.stream.JsonWriterTest.testPrettyPrintObject":702,"com.google.gson.functional.PrimitiveTest.testBigIntegerDeserialization":141,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":489,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullDeserialization":297,"com.google.gson.JsonPrimitiveTest.testDeepCopy":665,"com.google.gson.functional.PrimitiveTest.testBigDecimalNaNDeserializationNotSupported":102,"com.google.gson.stream.JsonWriterTest.testRepeatedName":699,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":203,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":537,"com.google.gson.MixedStreamTest.testWriteLenient":20,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":380,"com.google.gson.internal.bind.JsonTreeWriterTest.testPrematureClose":670,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":499,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":306,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":74,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":556,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":497,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":573,"com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization":150,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":342,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":428,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":349,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerDeserialization":111,"com.google.gson.internal.bind.JsonElementReaderTest.testStrictNansAndInfinities":687,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":249,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":435,"com.google.gson.JsonParserTest.testParseUnquotedMultiWordStringFails":641,"com.google.gson.functional.ObjectTest.testSingletonLists":495,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":298,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":431,"com.google.gson.functional.PrimitiveTest.testNumberDeserialization":95,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":365,"com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue":719,"com.google.gson.stream.JsonWriterTest.testStrings":708,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator":197,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":325,"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":578,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization":316,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":515,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":6,"com.google.gson.functional.PrimitiveTest.testStringsAsBooleans":153,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":63,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeRecursive":717,"com.google.gson.functional.StringTest.testEscapedBackslashInStringDeserialization":378,"com.google.gson.DefaultDateTypeAdapterTest.testDatePattern":622,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":238,"com.google.gson.functional.PrimitiveTest.testBigDecimalNoFractAsStringRepresentationDeserialization":142,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":581,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":471,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":10,"com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization":87,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":594,"com.google.gson.functional.MapTest.testMapOfMapDeserialization":470,"com.google.gson.functional.EnumTest.testEnumCaseMapping":341,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":28,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":363,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsLong":86,"com.google.gson.functional.JsonTreeTest.testToJsonTree":361,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":586,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveDeserialization":319,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":237,"com.google.gson.stream.JsonWriterTest.testNulls":697,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":257,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":272,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullField":714,"com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization":402,"com.google.gson.functional.PrimitiveTest.testUnquotedStringDeserializationFails":97,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferDeserialization":290,"com.google.gson.internal.LinkedHashTreeMapTest.testAvlBuilder":618,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":438,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":566,"com.google.gson.functional.ObjectTest.testNullDeserialization":527,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":539,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringDeserialization":375,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":509,"com.google.gson.JsonPrimitiveTest.testParsingStringAsBoolean":654,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":27,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization":163,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsBigIntegerFails":103,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":516,"com.google.gson.internal.bind.JsonElementReaderTest.testLenientNansAndInfinities":684,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":592,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":84,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":524,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":26,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":347,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectDeserialization":262,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":320,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionDeserialization":168,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":417,"com.google.gson.functional.PrimitiveTest.testDoubleInfinityDeserialization":167,"com.google.gson.JsonParserTest.testParseString":643,"com.google.gson.stream.JsonWriterTest.testValueWithoutName":703,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization":315,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":147,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullObject":715,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":126,"com.google.gson.functional.PrimitiveTest.testFloatInfinityDeserialization":174,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArrayDeserialization":271,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":398,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":528,"com.google.gson.DefaultDateTypeAdapterTest.testFormatUsesDefaultTimezone":626,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityDeserialization":124,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":296,"com.google.gson.functional.PrimitiveTest.testDoubleNoFractAsStringRepresentationDeserialization":139,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":381,"com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization":463,"com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree":640,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":220,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountryVariant":287,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":425,"com.google.gson.internal.bind.JsonTreeWriterTest.testLenientNansAndInfinities":672,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":183,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":485,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":148,"com.google.gson.functional.JsonParserTest.testParseInvalidJson":387,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsDouble":140,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":392,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":523,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":59,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":503,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":601,"com.google.gson.JsonPrimitiveTest.testEqualsAcrossTypes":669,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":107,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":210,"com.google.gson.functional.MapTest.testMapDeserializationWithNullValue":481,"com.google.gson.metrics.PerformanceTest.testDummy":4,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":432,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":228,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":247,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":34,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":185,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings":322,"com.google.gson.functional.MapTest.testNumberKeyDeserialization":487,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":304,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":549,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":31,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":289,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":83,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":542,"com.google.gson.functional.CollectionTest.testSetDeserialization":572,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":350,"com.google.gson.functional.EnumTest.testEnumSet":332,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":508,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersEscapedDeserialization":598,"com.google.gson.JsonStreamParserTest.testIterator":637,"com.google.gson.functional.PrimitiveTest.testBigDecimalAsStringRepresentationDeserialization":131,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":248,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":184,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampDeserialization":277,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":458,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":517,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":9,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":246,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBytePrimitive":144,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":33,"com.google.gson.functional.PrimitiveTest.testDeserializingDecimalPointValueZeroSucceeds":155,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":331,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":589,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":156,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsIntegerFails":100,"com.google.gson.functional.MapTest.testHashMapDeserialization":452,"com.google.gson.functional.CollectionTest.testLinkedListDeserialization":562,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesDeserialization":302,"com.google.gson.MixedStreamTest.testReadNulls":21,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization":53,"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":60,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":49,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":211,"com.google.gson.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithSystemLocale":624,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":329,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":421,"com.google.gson.functional.MapTest.testSortedMap":474,"com.google.gson.functional.MapTest.testMapSerialization":469,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":52,"com.google.gson.internal.bind.JsonElementReaderTest.testObject":691,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedDeserialization":137,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":545,"com.google.gson.JsonPrimitiveTest.testByteEqualsShort":666,"com.google.gson.JsonPrimitiveTest.testByteEqualsBigInteger":655,"com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization":405,"com.google.gson.functional.MapTest.testSerializeMaps":455,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":554,"com.google.gson.functional.MapTest.testComplexKeysSerialization":482,"com.google.gson.functional.InternationalizationTest.testStringsWithRawChineseCharactersDeserialization":597,"com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader":486,"com.google.gson.JsonPrimitiveTest.testLongEqualsBigInteger":657,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsFalse":671,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":412,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":339,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":541,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":447,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":223,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriter":326,"com.google.gson.functional.EnumTest.testTopLevelEnumDeserialization":337,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":584,"com.google.gson.internal.LinkedHashTreeMapTest.testDoubleCapacity":619,"com.google.gson.JsonObjectTest.testAddingAndRemovingObjectProperties":630,"com.google.gson.internal.bind.JsonElementReaderTest.testWrongType":688,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":205,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsDeserialization":526,"com.google.gson.functional.MapTest.testStringKeyDeserialization":484,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsDeserialization":409,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":189,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":170,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesDeserialization":106,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":488,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigInteger":101,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":353,"com.google.gson.functional.PrettyPrintingTest.testMap":582,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":559,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":55,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":267,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls":327,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":5,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysDeserialization":411,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeMap":716,"com.google.gson.functional.StringTest.testStringWithEscapedSlashDeserialization":368,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":372,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":284,"com.google.gson.functional.MapTest.testMapSerializationEmpty":483,"com.google.gson.functional.CollectionTest.testQueueSerialization":563,"com.google.gson.JsonObjectTest.testAddingBooleanProperties":631,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsByteWrapper":132,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnValue":704,"com.google.gson.functional.MapTest.testMapOfMapSerialization":468,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":123,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountry":292,"com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization":569,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":134,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":610,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":198,"com.google.gson.internal.bind.JsonTreeWriterTest.testStrictBoxedNansAndInfinities":676,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":366,"com.google.gson.functional.FieldNamingTest.testIdentity":555,"com.google.gson.JsonStreamParserTest.testCallingNextBeyondAvailableInput":634,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":186,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":36,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":529,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":76,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":209,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":360,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":494,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalDeserialization":89,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":11,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":80,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":367,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization":129,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":491,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeDeserialization":308,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":604,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidDeserialization":279,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":286,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullJsonElementSerialization":318,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":609,"com.google.gson.functional.MapTest.testMapDeserializationEmpty":449,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":166,"com.google.gson.functional.MapTest.testMapSubclassSerialization":454,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":256,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":344,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersDeserialization":600,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":17,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":61,"com.google.gson.functional.PrimitiveTest.testBigDecimalDeserialization":121,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":355,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsLongPrimitive":181,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguage":266,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":382,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":324,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":245,"com.google.gson.functional.EnumTest.testEnumSubclass":335,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization":143,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":7,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":513,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization":88,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":79,"com.google.gson.internal.bind.JsonElementReaderTest.testArray":685,"com.google.gson.functional.PrimitiveTest.testFloatNaNDeserialization":149,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":188,"com.google.gson.JsonPrimitiveTest.testShortEqualsInteger":661,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":218,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsLongWrapper":91,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":493,"com.google.gson.functional.PrimitiveTest.testBigDecimalNegativeInfinityDeserializationNotSupported":127,"com.google.gson.JsonPrimitiveTest.testByteEqualsLong":648,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":492,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":226,"com.google.gson.functional.ArrayTest.testArrayOfNullDeserialization":401,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":603,"com.google.gson.functional.PrimitiveTest.testBigDecimalInfinityDeserializationNotSupported":133,"com.google.gson.functional.ObjectTest.testTruncatedDeserialization":507,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization":125,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":208,"com.google.gson.stream.JsonWriterTest.testObjectsInArrays":700,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":311,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":496,"com.google.gson.MixedStreamTest.testWriteNulls":18,"com.google.gson.functional.MapTest.testMapSubclassDeserialization":451,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":400,"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":385,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":394,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":242,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":540,"com.google.gson.CommentsTest.testParseComments":602,"com.google.gson.JsonObjectTest.testReadPropertyWithEmptyStringName":628,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":193,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":441,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":498,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":44,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigDecimal":146,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":407,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":544,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":370,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":473,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSubTypeFirstAllowed":240,"com.google.gson.MixedStreamTest.testReadInvalidState":15,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":346,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":254,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":165,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":313,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":546,"com.google.gson.internal.bind.JsonElementReaderTest.testEarlyClose":686,"com.google.gson.JsonParserTest.testParseMixedArray":0,"com.google.gson.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithUsLocale":627,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":99,"com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash":617,"com.google.gson.functional.ArrayTest.testArrayOfStringsDeserialization":413,"com.google.gson.JsonPrimitiveTest.testDoubleEqualsBigDecimal":650,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":41,"com.google.gson.internal.bind.JsonTreeWriterTest.testWriteAfterClose":677,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":116,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":608,"com.google.gson.JsonArrayTest.testRemove":620,"com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization":160,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":294,"com.google.gson.functional.ArrayTest.testEmptyArrayDeserialization":397,"com.google.gson.functional.MapTest.testMapDeserialization":461,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":288,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":587,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":450,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":434,"com.google.gson.JsonPrimitiveTest.testValidJsonOnToString":653,"com.google.gson.internal.bind.JsonElementReaderTest.testStringsFromNumbers":690,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":235,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":460,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":440,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":436,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":224,"com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization":336,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":359,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":264,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization":514,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":530,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":213,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":356,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":227,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":273,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":253,"com.google.gson.internal.bind.JsonElementReaderTest.testNumbersFromStrings":689,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":222,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":490,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":472,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":583,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":614,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":317,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigDecimal":85,"com.google.gson.functional.PrimitiveTest.testShortSerialization":164,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":195,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":443,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedDeserialization":152,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":596,"com.google.gson.internal.bind.JsonTreeWriterTest.testStrictNansAndInfinities":674,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedDeserialization":122,"com.google.gson.JsonParserTest.testParseEmptyString":645,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":151,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsBigDecimal":98,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":278,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":551,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":334,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":558,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":343,"com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues":456,"com.google.gson.functional.PrimitiveTest.testLargeDoubleDeserialization":115,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":172,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":579,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":383,"com.google.gson.DefaultDateTypeAdapterTest.testFormattingInFr":625,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedArray":680,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization":305,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":448,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":25,"com.google.gson.internal.bind.JsonTreeWriterTest.testObject":678,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization":179,"com.google.gson.functional.PrimitiveTest.testDeserializingNonZeroDecimalPointValuesAsIntegerFails":173,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":711,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":207,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":187,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":234,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":531,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":62,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":259,"com.google.gson.JsonPrimitiveTest.testStringsAndChar":662,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsTrue":681,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":158,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":427,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsDoublePrimitive":128,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":190,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":535,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":502,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":340,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":215,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":599,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":274,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":567,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":351,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives":191,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":433,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":295,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":442,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsInt":105,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":281,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":424,"com.google.gson.stream.JsonWriterTest.testNullStringValue":695,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":444,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization":300,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":231,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization":560,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsShortWrapper":92,"com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral":159,"com.google.gson.JsonArrayTest.testSet":2,"com.google.gson.functional.PrimitiveTest.testNumberSerialization":130,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":176,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":47,"com.google.gson.JsonPrimitiveTest.testEquals":664,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":333,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":439,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":57,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":547,"com.google.gson.functional.MapTest.testGeneralMapField":478,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":500,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":391,"com.google.gson.internal.bind.JsonElementReaderTest.testNumbers":692,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsShortPrimitive":178,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":81,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":352,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":406,"com.google.gson.DefaultDateTypeAdapterTest.testDateSerialization":621,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":307,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":476,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":96,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":260,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":416,"com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization":154,"com.google.gson.MixedStreamTest.testReadMixedStreamed":24,"com.google.gson.JsonObjectTest.testDeepCopy":632,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":117,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlDeserialization":275,"com.google.gson.functional.MapTest.testBooleanKeyDeserialization":464,"com.google.gson.internal.bind.JsonElementReaderTest.testBooleans":682,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":12,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":423,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":574,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":430,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBooleanPrimitive":135,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":595,"com.google.gson.internal.bind.JsonTreeWriterTest.testEmptyWriter":675,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":32,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":293,"com.google.gson.functional.MapTest.testDeerializeMapOfMaps":465,"com.google.gson.JsonArrayTest.testDeepCopy":3,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":202,"com.google.gson.functional.MapTest.testMapDeserializationWithNullKey":453,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":177,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":194,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":420,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":66,"com.google.gson.stream.JsonWriterTest.testArraysInObjects":698,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsFloatPrimitive":118,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedObject":679,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":291,"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":386,"com.google.gson.JsonPrimitiveTest.testEqualsDoesNotEquateStringAndNonStringTypes":663,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":37,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserialization":258,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionDeserilaization":568,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization":446,"com.google.gson.JsonPrimitiveTest.testFloatEqualsDouble":656,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":200,"com.google.gson.functional.ObjectTest.testNestedDeserialization":536,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":239,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":521,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":54,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":225,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":593,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsNumber":175,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":43,"com.google.gson.JsonParserTest.testParseUnquotedStringArrayFails":1,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":204,"com.google.gson.functional.StringTest.testSingleQuoteInStringDeserialization":369,"com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys":466,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":244,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":162,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":214,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":78,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":384,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":577,"com.google.gson.functional.ObjectTest.testNullSerialization":510,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":217,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerialization":639,"com.google.gson.stream.JsonWriterTest.testDoubles":705,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization":201,"com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey":457,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":90,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":477,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization":403,"com.google.gson.functional.MapTest.testInterfaceTypeMap":475,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":354,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":230,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsDoubleWrapper":93,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":338,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":611,"com.google.gson.MixedStreamTest.testReadClosed":16,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":221,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails":357,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":261,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":591,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsInteger":109,"com.google.gson.JsonPrimitiveTest.testIntegerEqualsLong":659,"com.google.gson.MixedStreamTest.testWriteClosed":23,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":56,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":565,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":233,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateDeserialization":321,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":501,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":250,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":229,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":46,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":42,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":533,"com.google.gson.LongSerializationPolicyTest.testStringLongSerialization":638,"com.google.gson.stream.JsonWriterTest.testLongs":696,"com.google.gson.JsonPrimitiveTest.testShortEqualsLong":652,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":314,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":236,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":504,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":564,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":67,"com.google.gson.JsonPrimitiveTest.testShortEqualsBigInteger":647,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBooleanWrapper":138,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":69,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":219,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":570,"com.google.gson.DefaultDateTypeAdapterTest.testFormattingInEnUs":623,"com.google.gson.internal.bind.JsonElementReaderTest.testSkipValue":683,"com.google.gson.internal.bind.JsonElementReaderTest.testStrings":693,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":301,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":38,"com.google.gson.functional.PrimitiveTest.testDoubleAsStringRepresentationDeserialization":180,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":606,"com.google.gson.JsonPrimitiveTest.testParsingStringAsNumber":668,"com.google.gson.stream.JsonWriterTest.testNumbers":707,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":114,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":358,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderDeserialization":269,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":388,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":543,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":45,"com.google.gson.functional.CollectionTest.testQueueDeserialization":580,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":120,"com.google.gson.functional.PrimitiveTest.testByteDeserialization":136,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringDeserialization":374,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization":50,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":68,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":312,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":462,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":525,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":283,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":418,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":534,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":557,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":14,"com.google.gson.functional.MapTest.testRawMapSerialization":480,"com.google.gson.JsonParserTest.testParseReader":642,"com.google.gson.functional.CollectionTest.testNullsInListDeserialization":575,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetDeserialization":299,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize":712,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":212,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":519,"com.google.gson.JsonPrimitiveTest.testExponential":667,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":550,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":445,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":613,"com.google.gson.functional.PrimitiveTest.testByteSerialization":161,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":323,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":393,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapNoTypeSerialization":615,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":72,"com.google.gson.ObjectTypeAdapterTest.testSerialize":718,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":414,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsFloatWrapper":104,"com.google.gson.JsonPrimitiveTest.testEqualsIntegerAndBigInteger":649,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":75,"com.google.gson.JsonPrimitiveTest.testFloatEqualsBigDecimal":646,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":404,"com.google.gson.JsonPrimitiveTest.testByteEqualsInteger":658,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":552,"com.google.gson.GsonTypeAdapterTest.testDefaultTypeAdapterThrowsParseException":8,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":251,"com.google.gson.functional.StringTest.testAssignmentCharDeserialization":371,"com.google.gson.functional.MapTest.testMapWithQuotes":467,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatDeserialization":112,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":268,"com.google.gson.functional.StringTest.testEscapingQuotesInStringDeserialization":373,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":182,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":422,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":199,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":612,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsNumber":169,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":265,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":348,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":437,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":241,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":532,"com.google.gson.internal.LinkedHashTreeMapTest.testDoubleCapacityAllNodesOnLeft":616,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":588,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":145,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":280,"com.google.gson.functional.ObjectTest.testEmptyStringDeserialization":512,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":410,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":506,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":309,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":270,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":65,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":77,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":282,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigInteger":157,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriterAndSerializeNulls":330,"com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed":571,"com.google.gson.functional.ArrayTest.testSingleStringArrayDeserialization":396,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":243,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":310,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":389,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":216,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":39,"com.google.gson.JsonPrimitiveTest.testIntegerEqualsBigInteger":660,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization":70,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":345,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReader":328,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsFloat":94,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":255,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":196,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize2dArray":710,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":518,"com.google.gson.functional.ObjectTest.testNestedSerialization":520,"com.google.gson.JsonObjectTest.testAddingStringProperties":633,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":48,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":108,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringDeserialization":377,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":415,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":419,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":479,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":548,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":426,"com.google.gson.JsonParserTest.testParseUnquotedSingleWordStringFails":644,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":13,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":22,"com.google.gson.stream.JsonWriterTest.testUnicodeLineBreaksEscaped":709,"com.google.gson.functional.UncategorizedTest.testTrailingWhitespace":35,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":511,"com.google.gson.functional.PrimitiveTest.testBooleanDeserialization":171,"com.google.gson.JsonPrimitiveTest.testBoolean":651,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":232,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":429,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":285,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":29,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsInteger":110,"com.google.gson.GsonBuilderTest.testCreatingMoreThanOnce":605,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":263,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":522,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":64,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize1dArray":713,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":376,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":399,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":82,"com.google.gson.functional.CollectionTest.testSetSerialization":576,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":192,"com.google.gson.functional.StringTest.testStringValueSerialization":379,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":585,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":71,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":206,"com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization":561,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":607,"com.google.gson.MixedStreamTest.testWriteInvalidState":19,"com.google.gson.functional.ArrayTest.testInvalidArrayDeserialization":390,"com.google.gson.functional.ObjectTest.testJsonObjectSerialization":505,"com.google.gson.functional.PrimitiveTest.testBadValueForBigIntegerDeserialization":113,"com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero":119,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":408,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":58,"com.google.gson.stream.JsonWriterTest.testBooleans":694,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":276,"com.google.gson.stream.JsonWriterTest.testWrongTopLevelType":706,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":553,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":538,"com.google.gson.JsonObjectTest.testAddingCharacterProperties":629,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":40,"com.google.gson.JsonStreamParserTest.testParseTwoStrings":635,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":590,"com.google.gson.internal.bind.JsonTreeWriterTest.testArray":673,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":252,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullSerialization":303,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":73,"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":459,"com.google.gson.stream.JsonWriterTest.testPrettyPrintArray":701,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType":30,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":395},"transformations":[{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"70ff9d0a-3e73-11e6-acce-c1781e3ec3ad","method":{"position":"com.google.gson.internal.bind.MapTypeAdapterFactory:160","type":"CtMethodImpl","sourcecode":"public java.util.Map<K, V> read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    com.google.gson.stream.JsonToken com.google.gson.stream.JsonToken = in.peek();\n    if (peek == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    java.util.Map<K, V> java.util.Map<K, V> = com.google.gson.internal.ObjectConstructor<? extends java.util.Map<K, V>>.construct();\n    if (peek == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.beginArray();\n        while (in.hasNext()) {\n            in.beginArray();\n            K K = com.google.gson.TypeAdapter<K>.read(in);\n            V V = com.google.gson.TypeAdapter<V>.read(in);\n            V V = map.put(key, value);\n            if (replaced != null) {\n                throw new com.google.gson.JsonSyntaxException((\"duplicate key: \" + key));\n            } \n            in.endArray();\n        }\n        in.endArray();\n    } else {\n        in.beginObject();\n        while (in.hasNext()) {\n            com.google.gson.internal.JsonReaderInternalAccess.com.google.gson.internal.JsonReaderInternalAccess.com.google.gson.internal.JsonReaderInternalAccess.promoteNameToValue(in);\n            K K = com.google.gson.TypeAdapter<K>.read(in);\n            V V = com.google.gson.TypeAdapter<V>.read(in);\n            V V = map.put(key, value);\n            if (replaced != null) {\n                throw new com.google.gson.JsonSyntaxException((\"duplicate key: \" + key));\n            } \n        }\n        in.endObject();\n    }\n    return map;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:298","type":"CtBinaryOperatorImpl","sourcecode":"(java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(value))"},"failures":[],"tindex":"7100123b-3e73-11e6-acce-b5a827eec219","method":{"position":"com.google.gson.internal.Excluder:69","type":"CtMethodImpl","sourcecode":"public com.google.gson.internal.Excluder withVersion(double ignoreVersionsAfter) {\n    if ((java.lang.Double.isNaN(ignoreVersionsAfter)) || (java.lang.Double.isInfinite(value))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256887389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.Excluder com.google.gson.internal.Excluder = clone();\n            result.double = ignoreVersionsAfter;\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"ignoreVersionsAfter"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:306","type":"CtBinaryOperatorImpl","sourcecode":"longSerializationPolicy == (com.google.gson.LongSerializationPolicy.DEFAULT)"},"failures":[],"tindex":"7100394c-3e73-11e6-acce-39b6aa39a945","method":{"position":"com.google.gson.internal.$Gson$Types:151","type":"CtMethodImpl","sourcecode":"static boolean equal(java.lang.Object a, java.lang.Object b) {\n    return (a == b) || ((a != null) && (a.equals(b)));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"longSerializationPolicy":"a","com.google.gson.LongSerializationPolicy.DEFAULT":"b"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"7100394d-3e73-11e6-acce-1fa26c56a7ae","method":{"position":"com.google.gson.internal.bind.TypeAdapters:211","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        return ((short)(in.nextInt()));\n    } catch (java.lang.NumberFormatException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"7100605e-3e73-11e6-acce-2123c01f39da","method":{"position":"com.google.gson.internal.bind.TypeAdapters:635","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.util.Locale value) throws java.io.IOException {\n    out.value((value == null ? null : value.toString()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory:43","type":"CtBinaryOperatorImpl","sourcecode":"annotation == null"},"failures":[],"tindex":"7100605f-3e73-11e6-acce-07603c70f6cc","method":{"position":"com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory:50","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic com.google.gson.TypeAdapter<?> getTypeAdapter(com.google.gson.internal.ConstructorConstructor constructorConstructor, com.google.gson.Gson gson, com.google.gson.reflect.TypeToken<?> fieldType, com.google.gson.annotations.JsonAdapter annotation) {\n    if (annotation == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256887389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.Class<?> java.lang.Class<?> = annotation.value();\n            if (com.google.gson.TypeAdapter.com.google.gson.TypeAdapter.java.lang.Class.isAssignableFrom(value)) {\n                java.lang.Class<com.google.gson.TypeAdapter<?>> java.lang.Class<com.google.gson.TypeAdapter<?>> = ((java.lang.Class<com.google.gson.TypeAdapter<?>>)(value));\n                return constructorConstructor.get(com.google.gson.reflect.TypeToken.get(typeAdapter)).construct();\n            } \n            if (com.google.gson.TypeAdapterFactory.com.google.gson.TypeAdapterFactory.java.lang.Class.isAssignableFrom(value)) {\n                java.lang.Class<com.google.gson.TypeAdapterFactory> java.lang.Class<com.google.gson.TypeAdapterFactory> = ((java.lang.Class<com.google.gson.TypeAdapterFactory>)(value));\n                return constructorConstructor.get(com.google.gson.reflect.TypeToken.get(typeAdapterFactory)).construct().create(gson, fieldType);\n            } \n            throw new java.lang.IllegalArgumentException(\"@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"annotation":"annotation"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:316","type":"CtBinaryOperatorImpl","sourcecode":"(com.google.gson.JsonPrimitive.isIntegral(com.google.gson.JsonPrimitive.this)) && (com.google.gson.JsonPrimitive.isIntegral(other))"},"failures":[],"tindex":"71008770-3e73-11e6-acce-31434e9d9be5","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:839","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(java.lang.Object o) {\n    if (o == o) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256887389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return containsKey(o);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"other":"o","this":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:822","type":"CtBinaryOperatorImpl","sourcecode":"p == (com.google.gson.stream.JsonReader.PEEKED_UNQUOTED)"},"failures":[],"tindex":"7100ae81-3e73-11e6-acce-a395a2249a50","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:35","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(char[] buffer, int offset, int counter) {\n    if (offset == offset) {\n        {\n            throw new java.lang.AssertionError();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256887389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"offset","com.google.gson.stream.JsonReader.PEEKED_UNQUOTED":"offset"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl","sourcecode":"field.isSynthetic()"},"failures":[],"tindex":"7100ae82-3e73-11e6-acce-21e4b0557663","method":{"position":"com.google.gson.FieldNamingPolicy:90","type":"CtMethodImpl","sourcecode":"public java.lang.String translateName(java.lang.reflect.Field f) {\n    if (f.isSynthetic()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256887389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return com.google.gson.FieldNamingPolicy.separateCamelCase(f.getName(), \"_\").toLowerCase();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"f"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1186","type":"CtBinaryOperatorImpl","sourcecode":"p == (com.google.gson.stream.JsonReader.PEEKED_NUMBER)"},"failures":[0,1,2,3],"tindex":"7100d593-3e73-11e6-acce-9b9bd57a7529","method":{"position":"com.google.gson.JsonArray:146","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement get(int i) {\n    if (i == i) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256887389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<com.google.gson.JsonElement>.get(i);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"i","com.google.gson.stream.JsonReader.PEEKED_NUMBER":"i"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"7100d594-3e73-11e6-acce-f1f8b5208d83","method":{"position":"com.google.gson.Gson:888","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic T read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((com.google.gson.TypeAdapter<T>) == null) {\n        throw new java.lang.IllegalStateException();\n    } \n    return com.google.gson.TypeAdapter<T>.read(in);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:176","type":"CtInvocationImpl","sourcecode":"isNumber()"},"failures":[],"tindex":"7100fca5-3e73-11e6-acce-57d48881f181","method":{"position":"com.google.gson.JsonPrimitive:333","type":"CtMethodImpl","sourcecode":"private static boolean isIntegral(com.google.gson.JsonPrimitive primitive) {\n    if ((primitive.java.lang.Object) instanceof java.lang.Number) {\n        java.lang.Number java.lang.Number = ((java.lang.Number)(primitive.java.lang.Object));\n        return ((((number instanceof java.math.BigInteger) || (number instanceof java.lang.Long)) || (number instanceof java.lang.Integer)) || (number instanceof java.lang.Short)) || (number instanceof java.lang.Byte);\n    } \n    return false;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"primitive"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:145","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"7100fca6-3e73-11e6-acce-5d832ab05d03","method":{"position":"com.google.gson.JsonObject:181","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonObject getAsJsonObject(java.lang.String memberName) {\n    if ((memberName.length()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256887389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (memberName == null) {\n                {\n                    return ((com.google.gson.JsonObject)(com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.get(memberName)));\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256887389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"memberName"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:306","type":"CtBinaryOperatorImpl","sourcecode":"longSerializationPolicy == (com.google.gson.LongSerializationPolicy.DEFAULT)"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605],"tindex":"710123b7-3e73-11e6-acce-03f742b396ab","method":{"position":"com.google.gson.Gson:305","type":"CtMethodImpl","sourcecode":"private com.google.gson.TypeAdapter<java.lang.Number> longAdapter(com.google.gson.LongSerializationPolicy longSerializationPolicy) {\n    if (longSerializationPolicy == longSerializationPolicy) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256887389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (longSerializationPolicy == (com.google.gson.LongSerializationPolicy.com.google.gson.LongSerializationPolicy.com.google.gson.LongSerializationPolicy)) {\n                return com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<java.lang.Number>;\n            } \n            return new com.google.gson.TypeAdapter<java.lang.Number>() {\n                @java.lang.Override\n                public java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n                    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n                        in.nextNull();\n                        return null;\n                    } \n                    return in.nextLong();\n                }\n\n                @java.lang.Override\n                public void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n                    if (value == null) {\n                        out.nullValue();\n                        return ;\n                    } \n                    out.value(value.toString());\n                }\n            };\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"longSerializationPolicy":"longSerializationPolicy","com.google.gson.LongSerializationPolicy.DEFAULT":"longSerializationPolicy"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.JsonArray:58","type":"CtBinaryOperatorImpl","sourcecode":"element == null"},"failures":[],"tindex":"710171d8-3e73-11e6-acce-33bb50936b9d","method":{"position":"com.google.gson.Gson:631","type":"CtMethodImpl","sourcecode":"public void toJson(com.google.gson.JsonElement jsonElement, java.lang.Appendable writer) throws com.google.gson.JsonIOException {\n    if (jsonElement == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256887389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    } else {\n        {\n            try {\n                com.google.gson.stream.JsonWriter com.google.gson.stream.JsonWriter = newJsonWriter(com.google.gson.internal.Streams.writerForAppendable(writer));\n                toJson(jsonElement, jsonWriter);\n            } catch (java.io.IOException e) {\n                throw new java.lang.RuntimeException(e);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"jsonElement"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:542","type":"CtBinaryOperatorImpl","sourcecode":"replacement == null"},"failures":[],"tindex":"710198e9-3e73-11e6-acce-e55674a28363","method":{"position":"com.google.gson.internal.LinkedTreeMap:481","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"rawtypes\")\n@java.lang.Override\npublic boolean equals(java.lang.Object o) {\n    if (o == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256887389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (o instanceof java.util.Map.Entry) {\n                java.util.Map.Entry java.util.Map.Entry = ((java.util.Map.Entry)(o));\n                return ((K) == null ? (other.getKey()) == null : K.equals(other.getKey())) && ((V) == null ? (other.getValue()) == null : V.equals(other.getValue()));\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"replacement":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:213","type":"CtBinaryOperatorImpl","sourcecode":"(indent.length()) == 0"},"failures":[],"tindex":"710198ea-3e73-11e6-acce-6104f3d9e78a","method":{"position":"com.google.gson.JsonObject:181","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonObject getAsJsonObject(java.lang.String memberName) {\n    if ((memberName.length()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256887389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (memberName == null) {\n                {\n                    return ((com.google.gson.JsonObject)(com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.get(memberName)));\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256887389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"indent":"memberName"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"7101bffb-3e73-11e6-acce-33f4a233f6cb","method":{"position":"com.google.gson.internal.bind.TypeAdapters:289","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return in.nextDouble();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl","sourcecode":"field.isSynthetic()"},"failures":[],"tindex":"7101bffc-3e73-11e6-acce-e77f30dd2f71","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:116","type":"CtMethodImpl","sourcecode":"private com.google.gson.TypeAdapter<?> getFieldAdapter(com.google.gson.Gson gson, java.lang.reflect.Field field, com.google.gson.reflect.TypeToken<?> fieldType) {\n    if (field.isSynthetic()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256887389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.annotations.JsonAdapter com.google.gson.annotations.JsonAdapter = field.getAnnotation(com.google.gson.annotations.JsonAdapter.com.google.gson.annotations.JsonAdapter.java.lang.Class);\n            if (annotation != null) {\n                com.google.gson.TypeAdapter<?> com.google.gson.TypeAdapter<?> = com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.getTypeAdapter(com.google.gson.internal.ConstructorConstructor, gson, fieldType, annotation);\n                if (adapter != null)\n                    return adapter;\n                \n            } \n            return gson.getAdapter(fieldType);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"field"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:391","type":"CtUnaryOperatorImpl","sourcecode":"!insert"},"failures":[5,6,7,9,10,11,12,13,14,17,18,19,20,22,23,26,27,28,29,36,37,39,606,607,608,609,610,41,42,43,44,45,46,47,48,49,50,51,52,55,58,59,60,611,61,62,65,66,69,71,72,73,74,75,76,77,78,79,80,81,83,84,88,90,96,99,107,108,114,116,117,120,123,125,126,129,130,134,143,145,147,148,151,154,156,160,161,162,163,164,165,166,170,172,176,177,179,182,184,188,189,190,192,193,194,196,198,199,200,202,203,205,207,209,210,211,212,213,215,216,217,220,222,225,226,227,228,229,230,231,232,235,236,237,238,239,241,243,244,245,246,247,248,250,251,252,254,257,259,260,261,265,267,268,270,272,273,276,278,280,281,282,283,284,286,288,289,291,293,294,295,296,298,301,303,304,306,307,309,310,311,312,313,314,317,318,320,323,325,326,330,331,332,333,334,335,338,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,612,358,359,360,361,363,364,365,366,367,370,372,376,379,388,389,391,392,393,394,395,398,399,400,404,406,408,410,412,414,415,416,417,418,419,420,421,424,425,426,428,431,433,436,438,439,440,442,443,444,445,447,450,454,455,458,460,462,467,468,469,472,473,475,476,477,478,479,480,482,483,485,488,489,490,493,494,495,498,501,504,505,508,510,511,514,516,517,519,520,521,523,528,530,531,533,538,539,540,541,543,546,548,551,552,553,554,555,556,557,558,559,563,564,565,566,567,570,573,574,576,577,579,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,599,601,613,614,615,603,604],"tindex":"7101e70d-3e73-11e6-acce-0b6377863ab3","method":{"position":"com.google.gson.stream.JsonWriter:252","type":"CtMethodImpl","sourcecode":"public final void setHtmlSafe(boolean htmlSafe) {\n    if (!htmlSafe) {\n        {\n            com.google.gson.stream.JsonWriter.this.boolean = htmlSafe;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256887389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"insert":"htmlSafe"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:382","type":"CtBinaryOperatorImpl","sourcecode":"delta == 0"},"failures":[616,617,618,619],"tindex":"71020e1e-3e73-11e6-acce-ad4ecf0a73ea","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:677","type":"CtMethodImpl","sourcecode":"void reset(int targetSize) {\n    if (targetSize == 0) {\n        {\n            int int = ((java.lang.Integer.highestOneBit(targetSize)) * 2) - 1;\n            int = treeCapacity - targetSize;\n            int = 0;\n            int = 0;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256887389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delta":"targetSize"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"71020e1f-3e73-11e6-acce-8b713ce34fa6","method":{"position":"com.google.gson.TreeTypeAdapter:61","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, T value) throws java.io.IOException {\n    if ((com.google.gson.JsonSerializer<T>) == null) {\n        delegate().write(out, value);\n        return ;\n    } \n    if (value == null) {\n        out.nullValue();\n        return ;\n    } \n    com.google.gson.JsonElement com.google.gson.JsonElement = com.google.gson.JsonSerializer<T>.serialize(value, com.google.gson.reflect.TypeToken<T>.getType(), com.google.gson.Gson.com.google.gson.JsonSerializationContext);\n    com.google.gson.internal.Streams.write(tree, out);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:537","type":"CtFieldReadImpl","sourcecode":"lenient"},"failures":[20,134,147,148,162,170,176],"tindex":"71020e20-3e73-11e6-acce-2d1a2bb1b80b","method":{"position":"com.google.gson.Gson:273","type":"CtMethodImpl","sourcecode":"private com.google.gson.TypeAdapter<java.lang.Number> floatAdapter(boolean serializeSpecialFloatingPointValues) {\n    if (serializeSpecialFloatingPointValues) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256887389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (serializeSpecialFloatingPointValues) {\n                return com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<java.lang.Number>;\n            } \n            return new com.google.gson.TypeAdapter<java.lang.Number>() {\n                @java.lang.Override\n                public java.lang.Float read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n                    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n                        in.nextNull();\n                        return null;\n                    } \n                    return ((float)(in.nextDouble()));\n                }\n\n                @java.lang.Override\n                public void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n                    if (value == null) {\n                        out.nullValue();\n                        return ;\n                    } \n                    float float = value.floatValue();\n                    checkValidFloatingPoint(floatValue);\n                    out.value(value);\n                }\n            };\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lenient":"serializeSpecialFloatingPointValues"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:107","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.WildcardType"},"failures":[],"tindex":"71023531-3e73-11e6-acce-4719ae4ff7f3","method":{"position":"com.google.gson.reflect.TypeToken:185","type":"CtMethodImpl","sourcecode":"private static boolean isAssignableFrom(java.lang.reflect.Type from, java.lang.reflect.ParameterizedType to, java.util.Map<java.lang.String, java.lang.reflect.Type> typeVarMap) {\n    if (from instanceof java.lang.reflect.WildcardType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256887389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (from == null) {\n                return false;\n            } \n            if (to.equals(from)) {\n                return true;\n            } \n            java.lang.Class<?> java.lang.Class<?> = com.google.gson.internal.$Gson$Types.getRawType(from);\n            java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = null;\n            if (from instanceof java.lang.reflect.ParameterizedType) {\n                ptype = ((java.lang.reflect.ParameterizedType)(from));\n            } \n            if (ptype != null) {\n                java.lang.reflect.Type[] java.lang.reflect.Type[] = ptype.getActualTypeArguments();\n                java.lang.reflect.TypeVariable<?>[] java.lang.reflect.TypeVariable<?>[] = clazz.getTypeParameters();\n                for (int int = 0 ; i < (tArgs.int) ; i++) {\n                    java.lang.reflect.Type java.lang.reflect.Type = tArgs[i];\n                    java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = tParams[i];\n                    while (arg instanceof java.lang.reflect.TypeVariable<?>) {\n                        java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(arg));\n                        arg = typeVarMap.get(v.getName());\n                    }\n                    typeVarMap.put(var.getName(), arg);\n                }\n                if (com.google.gson.reflect.TypeToken.typeEquals(ptype, to, typeVarMap)) {\n                    return true;\n                } \n            } \n            for (java.lang.reflect.Type java.lang.reflect.Type : clazz.getGenericInterfaces()) {\n                if (com.google.gson.reflect.TypeToken.isAssignableFrom(itype, to, new java.util.HashMap<java.lang.String, java.lang.reflect.Type>(typeVarMap))) {\n                    return true;\n                } \n            }\n            java.lang.reflect.Type java.lang.reflect.Type = clazz.getGenericSuperclass();\n            return com.google.gson.reflect.TypeToken.isAssignableFrom(sType, to, new java.util.HashMap<java.lang.String, java.lang.reflect.Type>(typeVarMap));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"from"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:137","type":"CtBinaryOperatorImpl","sourcecode":"element instanceof com.google.gson.JsonObject"},"failures":[620],"tindex":"71023532-3e73-11e6-acce-032bea7cfb86","method":{"position":"com.google.gson.JsonArray:115","type":"CtMethodImpl","sourcecode":"public boolean contains(com.google.gson.JsonElement element) {\n    if (element instanceof com.google.gson.JsonObject) {\n        {\n            return java.util.List<com.google.gson.JsonElement>.contains(element);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256887389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"element"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:137","type":"CtBinaryOperatorImpl","sourcecode":"element instanceof com.google.gson.JsonObject"},"failures":[],"tindex":"71023533-3e73-11e6-acce-4f04f6623eca","method":{"position":"com.google.gson.internal.bind.MapTypeAdapterFactory:245","type":"CtMethodImpl","sourcecode":"private java.lang.String keyToString(com.google.gson.JsonElement keyElement) {\n    if (keyElement instanceof com.google.gson.JsonObject) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256887389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (keyElement.isJsonPrimitive()) {\n                com.google.gson.JsonPrimitive com.google.gson.JsonPrimitive = keyElement.getAsJsonPrimitive();\n                if (primitive.isNumber()) {\n                    return java.lang.String.valueOf(primitive.getAsNumber());\n                } else if (primitive.isBoolean()) {\n                    return java.lang.Boolean.toString(primitive.getAsBoolean());\n                } else if (primitive.isString()) {\n                    return primitive.getAsString();\n                } else {\n                    throw new java.lang.AssertionError();\n                }\n            } else if (keyElement.isJsonNull()) {\n                return \"null\";\n            } else {\n                throw new java.lang.AssertionError();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"keyElement"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:491","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[203,209,241,246,251,252,278,472,479],"tindex":"71025c44-3e73-11e6-acce-352bde5e7f88","method":{"position":"com.google.gson.internal.bind.TypeAdapters:245","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256887389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            out.value(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:491","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[217,278],"tindex":"71025c45-3e73-11e6-acce-c31d7a187d13","method":{"position":"com.google.gson.Gson:261","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256887389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value == null) {\n                out.nullValue();\n                return ;\n            } \n            double double = value.doubleValue();\n            checkValidFloatingPoint(doubleValue);\n            out.value(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:400","type":"CtBinaryOperatorImpl","sourcecode":"(deferredName) != null"},"failures":[10,11,18,621,622,623,624,625,626,627,628,26,629,630,631,632,633,27,634,635,636,637,638,639,38,45,46,51,57,640,72,73,74,75,76,77,78,80,159,182,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,225,226,227,231,232,237,238,239,243,255,260,262,265,268,270,271,272,276,306,310,317,319,323,325,334,352,354,612,358,359,360,361,380,381,382,383,384,421,424,425,426,427,437,450,475,478,486,489,544,545,546,547,548,549,550,579,589,591,592,594,641,642,643,601,644,0,645,1,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,613,614,615,2,3,620,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693],"tindex":"71025c46-3e73-11e6-acce-4b19c5ec9dbd","method":{"position":"com.google.gson.JsonPrimitive:93","type":"CtMethodImpl","sourcecode":"void setValue(java.lang.Object primitive) {\n    if (primitive != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256887389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (primitive instanceof java.lang.Character) {\n                char char = ((java.lang.Character)(primitive)).charValue();\n                com.google.gson.JsonPrimitive.this.java.lang.Object = java.lang.String.valueOf(c);\n            } else {\n                com.google.gson.internal.$Gson$Preconditions.checkArgument(((primitive instanceof java.lang.Number) || (com.google.gson.JsonPrimitive.isPrimitiveOrString(primitive))));\n                com.google.gson.JsonPrimitive.this.java.lang.Object = primitive;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"primitive"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"71025c47-3e73-11e6-acce-fd7f8dc7685f","method":{"position":"com.google.gson.internal.bind.ArrayTypeAdapter:63","type":"CtMethodImpl","sourcecode":"public java.lang.Object read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n    in.beginArray();\n    while (in.hasNext()) {\n        E E = com.google.gson.TypeAdapter<E>.read(in);\n        list.add(instance);\n    }\n    in.endArray();\n    java.lang.Object java.lang.Object = java.lang.reflect.Array.newInstance(java.lang.Class<E>, list.size());\n    for (int int = 0 ; i < (list.size()) ; i++) {\n        java.lang.reflect.Array.set(array, i, list.get(i));\n    }\n    return array;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonStreamParser:82","type":"CtUnaryOperatorImpl","sourcecode":"!(hasNext())"},"failures":[],"tindex":"71028358-3e73-11e6-acce-eb8e08a8792f","method":{"position":"com.google.gson.internal.LinkedTreeMap:605","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(java.lang.Object o) {\n    return containsKey(o);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"71028359-3e73-11e6-acce-917da022c07f","method":{"position":"com.google.gson.internal.bind.TypeAdapters:379","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.math.BigDecimal value) throws java.io.IOException {\n    out.value(value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:75","type":"CtBinaryOperatorImpl","sourcecode":"(value != null) && (((type == (java.lang.Object.class)) || (type instanceof java.lang.reflect.TypeVariable<?>)) || (type instanceof java.lang.Class<?>))"},"failures":[],"tindex":"7102835a-3e73-11e6-acce-f511ac700022","method":{"position":"com.google.gson.internal.LinkedTreeMap:574","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(java.lang.Object o) {\n    if ((o != null) && (((o == o) || (type instanceof java.lang.reflect.TypeVariable<?>)) || (type instanceof java.lang.Class<?>))) {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = findByEntry(((java.util.Map.Entry<?, ?>)(o)));\n            if (node == null) {\n                return false;\n            } \n            removeInternal(node, true);\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256887389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"o","value":"o","java.lang.Object.class":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"7102835b-3e73-11e6-acce-8bd4d4904ec3","method":{"position":"com.google.gson.internal.bind.TypeAdapters:432","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.StringBuffer value) throws java.io.IOException {\n    out.value((value == null ? null : value.toString()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.Streams:50","type":"CtVariableReadImpl","sourcecode":"isEmpty"},"failures":[694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,5,6,7,9,11,12,13,14,17,18,20,22,26,27,28,29,36,37,606,607,608,609,610,41,42,43,44,47,48,49,50,52,55,58,59,60,710,611,711,712,713,714,715,716,717,61,62,65,66,69,71,72,73,88,96,99,108,114,117,120,125,129,130,134,143,145,147,148,151,154,156,160,161,162,163,164,165,170,172,176,177,179,182,184,188,189,190,192,193,194,196,198,199,200,202,203,205,209,211,212,213,215,216,217,220,222,228,229,230,235,236,238,239,241,243,244,245,246,247,248,250,251,252,254,257,259,260,261,265,267,268,270,272,273,276,278,280,281,282,283,284,286,288,289,291,293,294,295,296,298,301,303,304,306,307,310,311,312,313,314,317,318,320,323,325,326,330,331,332,333,334,335,338,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,612,359,363,364,365,366,367,370,372,376,379,388,389,391,393,394,395,398,399,400,404,406,408,410,412,414,415,416,417,418,419,420,421,424,425,426,428,431,433,436,438,439,440,442,443,444,445,447,450,454,455,458,460,462,467,468,469,473,475,477,478,479,480,482,485,488,489,490,493,494,495,498,501,504,508,510,511,514,516,517,519,520,528,530,531,533,538,539,540,541,543,546,548,551,552,553,554,555,556,557,558,559,563,564,565,566,567,570,573,574,576,577,579,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,599,601,649,653,603,604,718,719,672,673,678,681],"tindex":"7102aa6c-3e73-11e6-acce-b5b231c1bb86","method":{"position":"com.google.gson.stream.JsonWriter:599","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"fallthrough\")\nprivate void beforeValue(boolean root) throws java.io.IOException {\n    if (root) {\n        {\n            switch (peek()) {\n                case com.google.gson.stream.JsonScope.com.google.gson.stream.JsonScope.int :\n                    if (!(boolean)) {\n                        throw new java.lang.IllegalStateException(\"JSON must have only one top-level value.\");\n                    } \n                case com.google.gson.stream.JsonScope.com.google.gson.stream.JsonScope.int :\n                    if ((!(boolean)) && (!root)) {\n                        throw new java.lang.IllegalStateException(\"JSON must start with an array or an object.\");\n                    } \n                    replaceTop(com.google.gson.stream.JsonScope.com.google.gson.stream.JsonScope.int);\n                    break;\n                case com.google.gson.stream.JsonScope.com.google.gson.stream.JsonScope.int :\n                    replaceTop(com.google.gson.stream.JsonScope.com.google.gson.stream.JsonScope.int);\n                    newline();\n                    break;\n                case com.google.gson.stream.JsonScope.com.google.gson.stream.JsonScope.int :\n                    java.io.Writer.append(',');\n                    newline();\n                    break;\n                case com.google.gson.stream.JsonScope.com.google.gson.stream.JsonScope.int :\n                    java.io.Writer.append(java.lang.String);\n                    replaceTop(com.google.gson.stream.JsonScope.com.google.gson.stream.JsonScope.int);\n                    break;\n                default :\n                    throw new java.lang.IllegalStateException(\"Nesting problem.\");\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256887389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isEmpty":"root"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"7102aa6d-3e73-11e6-acce-cb04b230f561","method":{"position":"com.google.gson.internal.bind.TypeAdapters:451","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.net.URL value) throws java.io.IOException {\n    out.value((value == null ? null : value.toExternalForm()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.DefaultDateTypeAdapter:85","type":"CtBinaryOperatorImpl","sourcecode":"typeOfT == (java.sql.Timestamp.class)"},"failures":[],"tindex":"7102aa6e-3e73-11e6-acce-413c320e21b8","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:839","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(java.lang.Object o) {\n    if (o == o) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256887389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return containsKey(o);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeOfT":"o","java.sql.Timestamp.class":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.Gson:298","type":"CtBinaryOperatorImpl","sourcecode":"(java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(value))"},"failures":[672,674],"tindex":"7102d17f-3e73-11e6-acce-13f6c4cb4191","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:162","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic com.google.gson.stream.JsonWriter value(double value) throws java.io.IOException {\n    if ((java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(value))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256887389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if ((!(isLenient())) && ((java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(value)))) {\n                throw new java.lang.IllegalArgumentException((\"JSON forbids NaN and infinities: \" + value));\n            } \n            put(new com.google.gson.JsonPrimitive(value));\n            return com.google.gson.internal.bind.JsonTreeWriter.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:716","type":"CtBinaryOperatorImpl","sourcecode":"(c < '0') || (c > '9')"},"failures":[],"tindex":"7102d180-3e73-11e6-acce-9b10a0316682","method":{"position":"com.google.gson.stream.JsonReader:755","type":"CtMethodImpl","sourcecode":"private boolean isLiteral(char c) throws java.io.IOException {\n    if ((c < '0') || (c > '9')) {\n        {\n            switch (c) {\n                case '/' :\n                case '\\\\' :\n                case ';' :\n                case '#' :\n                case '=' :\n                    checkLenient();\n                case '{' :\n                case '}' :\n                case '[' :\n                case ']' :\n                case ':' :\n                case ',' :\n                case ' ' :\n                case '\\t' :\n                case '\\f' :\n                case '\\r' :\n                case '\\n' :\n                    return false;\n                default :\n                    return true;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256887389/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"c"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":39,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}