{"failureDictionary":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":87,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":121,"com.google.gson.functional.StringTest.testStringValueDeserialization":367,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":40,"com.google.gson.functional.PrimitiveTest.testBigIntegerDeserialization":235,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullDeserialization":348,"com.google.gson.functional.PrimitiveTest.testBigDecimalNaNDeserializationNotSupported":462,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":386,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":270,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":420,"com.google.gson.MixedStreamTest.testWriteLenient":596,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":251,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":575,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":404,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":16,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":23,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":250,"com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization":238,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":105,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":385,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":527,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerDeserialization":223,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":158,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":209,"com.google.gson.functional.ObjectTest.testSingletonLists":60,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":106,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":573,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":122,"com.google.gson.functional.PrimitiveTest.testNumberDeserialization":219,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator":188,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":7,"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":180,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization":358,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":259,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":139,"com.google.gson.functional.PrimitiveTest.testStringsAsBooleans":240,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeRecursive":79,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":361,"com.google.gson.functional.StringTest.testEscapedBackslashInStringDeserialization":375,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":71,"com.google.gson.functional.PrimitiveTest.testBigDecimalNoFractAsStringRepresentationDeserialization":236,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":531,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":430,"com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization":216,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":378,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":289,"com.google.gson.functional.MapTest.testMapOfMapDeserialization":202,"com.google.gson.functional.EnumTest.testEnumCaseMapping":151,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":120,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":600,"com.google.gson.functional.JsonTreeTest.testToJsonTree":112,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsLong":454,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":535,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveDeserialization":359,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":56,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":336,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":395,"com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization":313,"com.google.gson.functional.PrimitiveTest.testUnquotedStringDeserializationFails":220,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferDeserialization":344,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":444,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":20,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":275,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringDeserialization":373,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":256,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization":500,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsBigIntegerFails":463,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":518,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":287,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":442,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":262,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":525,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectDeserialization":330,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":582,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":44,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionDeserialization":245,"com.google.gson.functional.PrimitiveTest.testDoubleInfinityDeserialization":244,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization":357,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":491,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":477,"com.google.gson.functional.PrimitiveTest.testFloatInfinityDeserialization":247,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArrayDeserialization":335,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":67,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":97,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityDeserialization":229,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":347,"com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization":198,"com.google.gson.functional.PrimitiveTest.testDoubleNoFractAsStringRepresentationDeserialization":233,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":421,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":15,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountryVariant":343,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":109,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":182,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":39,"com.google.gson.functional.JsonParserTest.testParseInvalidJson":426,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":492,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsDouble":234,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":521,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":544,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":5,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":119,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":254,"com.google.gson.functional.MapTest.testMapDeserializationWithNullValue":204,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":390,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":466,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":322,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":50,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":393,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":297,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":183,"com.google.gson.functional.MapTest.testNumberKeyDeserialization":206,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings":381,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":115,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":301,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":294,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":569,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":441,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":278,"com.google.gson.functional.CollectionTest.testSetDeserialization":178,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":528,"com.google.gson.functional.EnumTest.testEnumSet":144,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersEscapedDeserialization":324,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":516,"com.google.gson.functional.PrimitiveTest.testBigDecimalAsStringRepresentationDeserialization":230,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":10,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":410,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":29,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampDeserialization":339,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":65,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":0,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":392,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBytePrimitive":488,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":296,"com.google.gson.functional.PrimitiveTest.testDeserializingDecimalPointValueZeroSucceeds":241,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":8,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":284,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":495,"com.google.gson.functional.MapTest.testHashMapDeserialization":193,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsIntegerFails":460,"com.google.gson.functional.CollectionTest.testLinkedListDeserialization":174,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesDeserialization":352,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization":305,"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":588,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":11,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":86,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":382,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":552,"com.google.gson.functional.MapTest.testSortedMap":203,"com.google.gson.functional.MapTest.testMapSerialization":429,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":88,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedDeserialization":232,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":299,"com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization":315,"com.google.gson.functional.MapTest.testSerializeMaps":28,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":592,"com.google.gson.functional.MapTest.testComplexKeysSerialization":38,"com.google.gson.functional.InternationalizationTest.testStringsWithRawChineseCharactersDeserialization":323,"com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader":436,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":548,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":150,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":277,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":451,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":169,"com.google.gson.functional.EnumTest.testTopLevelEnumDeserialization":149,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":80,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":387,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsDeserialization":264,"com.google.gson.functional.MapTest.testStringKeyDeserialization":205,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsDeserialization":317,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":412,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":505,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesDeserialization":222,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":437,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigInteger":461,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":529,"com.google.gson.functional.PrettyPrintingTest.testMap":532,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":399,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls":142,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":538,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":559,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":138,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysDeserialization":318,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":126,"com.google.gson.functional.StringTest.testStringWithEscapedSlashDeserialization":368,"com.google.gson.functional.CollectionTest.testQueueSerialization":18,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":114,"com.google.gson.functional.MapTest.testMapSerializationEmpty":435,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsByteWrapper":482,"com.google.gson.functional.MapTest.testMapOfMapSerialization":33,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":475,"com.google.gson.JavaSerializationTest.testMapIsSerializable":136,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountry":345,"com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization":176,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":76,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":484,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":418,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":123,"com.google.gson.functional.FieldNamingTest.testIdentity":593,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":184,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":89,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":265,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":389,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":406,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":514,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":554,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalDeserialization":217,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":133,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":124,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":439,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":271,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization":480,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeDeserialization":354,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":4,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidDeserialization":341,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":75,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":567,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullJsonElementSerialization":581,"com.google.gson.functional.MapTest.testMapDeserializationEmpty":191,"com.google.gson.functional.MapTest.testMapSubclassSerialization":27,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":503,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":84,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":164,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersDeserialization":325,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":77,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":131,"com.google.gson.functional.PrimitiveTest.testBigDecimalDeserialization":227,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":583,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguage":332,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":422,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsLongPrimitive":513,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":141,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":157,"com.google.gson.functional.EnumTest.testEnumSubclass":147,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization":487,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":140,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":258,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization":455,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":438,"com.google.gson.functional.PrimitiveTest.testFloatNaNDeserialization":237,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":411,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":166,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsLongWrapper":457,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":70,"com.google.gson.functional.PrimitiveTest.testBigDecimalNegativeInfinityDeserializationNotSupported":478,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":272,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":48,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":3,"com.google.gson.functional.ArrayTest.testArrayOfNullDeserialization":312,"com.google.gson.functional.PrimitiveTest.testBigDecimalInfinityDeserializationNotSupported":483,"com.google.gson.functional.ObjectTest.testTruncatedDeserialization":515,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":154,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization":476,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":577,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":249,"com.google.gson.functional.MapTest.testMapSubclassDeserialization":192,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":546,"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":425,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":96,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":156,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":276,"com.google.gson.CommentsTest.testParseComments":376,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":61,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":211,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":415,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":316,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigDecimal":490,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":550,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":298,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":125,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":432,"com.google.gson.MixedStreamTest.testReadInvalidState":594,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":524,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":394,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":502,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":578,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":82,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":58,"com.google.gson.functional.ArrayTest.testArrayOfStringsDeserialization":319,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":102,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":471,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":74,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":346,"com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization":497,"com.google.gson.functional.MapTest.testMapDeserialization":197,"com.google.gson.functional.ArrayTest.testEmptyArrayDeserialization":311,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":568,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":536,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":427,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":208,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":30,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":54,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":446,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":46,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":170,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":111,"com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization":148,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":557,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization":517,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":522,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":12,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":283,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":49,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":561,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":162,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":69,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":398,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":431,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":533,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":379,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":580,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigDecimal":453,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":187,"com.google.gson.functional.PrimitiveTest.testShortSerialization":501,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":448,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedDeserialization":239,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":291,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedDeserialization":228,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":493,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsBigDecimal":221,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":340,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":589,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":146,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":171,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":303,"com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues":195,"com.google.gson.functional.PrimitiveTest.testLargeDoubleDeserialization":225,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":403,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":506,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":423,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":213,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization":353,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":599,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization":512,"com.google.gson.functional.PrimitiveTest.testDeserializingNonZeroDecimalPointValuesAsIntegerFails":507,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":388,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":185,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":215,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":523,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":555,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":584,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":242,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":327,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":413,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsDoublePrimitive":479,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":268,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":253,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":384,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":13,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":107,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":21,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":337,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":280,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives":186,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":443,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":447,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":572,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsInt":465,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":108,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":564,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":449,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization":350,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":52,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization":172,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsShortWrapper":458,"com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral":243,"com.google.gson.functional.PrimitiveTest.testNumberSerialization":481,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":509,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":25,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":145,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":445,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":539,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":300,"com.google.gson.functional.MapTest.testGeneralMapField":36,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":252,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":543,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsShortPrimitive":511,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":100,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":281,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":440,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":116,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":433,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":43,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":57,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":329,"com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization":494,"com.google.gson.MixedStreamTest.testReadMixedStreamed":598,"com.google.gson.functional.MapTest.testBooleanKeyDeserialization":199,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlDeserialization":338,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":472,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":1,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":24,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":326,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":321,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBooleanPrimitive":485,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":290,"com.google.gson.JavaSerializationTest.testNumberIsSerializable":135,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":295,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":571,"com.google.gson.functional.MapTest.testDeerializeMapOfMaps":200,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":587,"com.google.gson.functional.MapTest.testMapDeserializationWithNullKey":194,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":416,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":510,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":92,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":585,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsFloatPrimitive":473,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":570,"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":190,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":90,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionDeserilaization":175,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserialization":328,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization":212,"com.google.gson.functional.ObjectTest.testNestedDeserialization":269,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":419,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":273,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":520,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":306,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":47,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":288,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsNumber":508,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":549,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":152,"com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys":201,"com.google.gson.functional.StringTest.testSingleQuoteInStringDeserialization":369,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":391,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":499,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":396,"com.google.gson.JavaSerializationTest.testListIsSerializable":137,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":408,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":424,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":402,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":397,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization":366,"com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey":196,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":35,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":456,"com.google.gson.functional.MapTest.testInterfaceTypeMap":34,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization":314,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":282,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":51,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsDoubleWrapper":459,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":292,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":383,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":168,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails":530,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":556,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":286,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsInteger":468,"com.google.gson.MixedStreamTest.testWriteClosed":597,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":19,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":307,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":62,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":214,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateDeserialization":360,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":159,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":452,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":551,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":68,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":103,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":579,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":55,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":63,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":400,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":363,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBooleanWrapper":486,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":586,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":167,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":22,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":351,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":309,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":72,"com.google.gson.functional.PrimitiveTest.testDoubleAsStringRepresentationDeserialization":248,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":59,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":110,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderDeserialization":333,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":93,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":279,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":104,"com.google.gson.functional.CollectionTest.testQueueDeserialization":181,"com.google.gson.functional.PrimitiveTest.testByteDeserialization":231,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":474,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringDeserialization":372,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization":537,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":356,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":364,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":31,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":263,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":566,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":45,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":267,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":17,"com.google.gson.functional.MapTest.testRawMapSerialization":37,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":130,"com.google.gson.functional.CollectionTest.testNullsInListDeserialization":179,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetDeserialization":349,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize":78,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":165,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":519,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":302,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":450,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":2,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":6,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":95,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapNoTypeSerialization":380,"com.google.gson.functional.PrimitiveTest.testByteSerialization":498,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":41,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsFloatWrapper":464,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":405,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":99,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":590,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":160,"com.google.gson.functional.StringTest.testAssignmentCharDeserialization":370,"com.google.gson.GsonTypeAdapterTest.testDefaultTypeAdapterThrowsParseException":377,"com.google.gson.functional.MapTest.testMapWithQuotes":32,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatDeserialization":224,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":560,"com.google.gson.functional.StringTest.testEscapingQuotesInStringDeserialization":371,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":409,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":553,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":189,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":304,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsNumber":504,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":558,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":526,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":210,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":155,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":266,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":81,"com.google.gson.functional.ObjectTest.testEmptyStringDeserialization":257,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":489,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":563,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":101,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":255,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":576,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":334,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":117,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":407,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":565,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigInteger":496,"com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed":177,"com.google.gson.functional.ArrayTest.testSingleStringArrayDeserialization":310,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":9,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":94,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":355,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":14,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":540,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization":365,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":85,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReader":143,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":163,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsFloat":218,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":417,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":260,"com.google.gson.functional.ObjectTest.testNestedSerialization":66,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":26,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":42,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringDeserialization":374,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":467,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":91,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":434,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":83,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":113,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":132,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":134,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":64,"com.google.gson.functional.UncategorizedTest.testTrailingWhitespace":308,"com.google.gson.functional.PrimitiveTest.testBooleanDeserialization":246,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":53,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":320,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":342,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsInteger":469,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":601,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":261,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":331,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":362,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":127,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":98,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":207,"com.google.gson.functional.CollectionTest.testSetSerialization":401,"com.google.gson.functional.StringTest.testStringValueSerialization":128,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":414,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":534,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":129,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":73,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":153,"com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization":173,"com.google.gson.functional.ArrayTest.testInvalidArrayDeserialization":542,"com.google.gson.MixedStreamTest.testWriteInvalidState":595,"com.google.gson.functional.PrimitiveTest.testBadValueForBigIntegerDeserialization":470,"com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero":226,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":547,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":118,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":562,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":591,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":274,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":541,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":285,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":161,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullSerialization":574,"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":428,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType":293,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":545},"transformations":[{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.internal.$Gson$Types:325","type":"CtBinaryOperatorImpl","sourcecode":"toResolve instanceof java.lang.reflect.TypeVariable"},"failures":[],"tindex":"4f2cc5ce-3e62-11e6-9187-adb31bad988a","method":{"position":"com.google.gson.Gson:591","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic void toJson(java.lang.Object src, java.lang.reflect.Type typeOfSrc, com.google.gson.stream.JsonWriter writer) throws com.google.gson.JsonIOException {\n    if (src instanceof java.lang.reflect.TypeVariable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249931908/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    } else {\n        {\n            com.google.gson.TypeAdapter<?> com.google.gson.TypeAdapter<?> = getAdapter(com.google.gson.reflect.TypeToken.get(typeOfSrc));\n            boolean boolean = writer.isLenient();\n            writer.setLenient(true);\n            boolean boolean = writer.isHtmlSafe();\n            writer.setHtmlSafe(boolean);\n            boolean boolean = writer.getSerializeNulls();\n            writer.setSerializeNulls(boolean);\n            try {\n                ((com.google.gson.TypeAdapter<java.lang.Object>)(adapter)).write(writer, src);\n            } catch (java.io.IOException e) {\n                throw new com.google.gson.JsonIOException(e);\n            } finally {\n                writer.setLenient(oldLenient);\n                writer.setHtmlSafe(oldHtmlSafe);\n                writer.setSerializeNulls(oldSerializeNulls);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:137","type":"CtBinaryOperatorImpl","sourcecode":"element instanceof com.google.gson.JsonObject"},"failures":[],"tindex":"4f2d13ef-3e62-11e6-9187-558ed81c6042","method":{"position":"com.google.gson.internal.LinkedTreeMap:81","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(java.lang.Object key) {\n    if (key instanceof com.google.gson.JsonObject) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249931908/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = findByObject(key);\n            return node != null ? node.V : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:389","type":"CtBinaryOperatorImpl","sourcecode":"(deferredName) != null"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132],"tindex":"4f2d13f0-3e62-11e6-9187-cda394c64d6b","method":{"position":"com.google.gson.internal.bind.TypeAdapters:361","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.String value) throws java.io.IOException {\n    if (value != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249931908/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            out.value(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"4f2d3b01-3e62-11e6-9187-a558e85c5e3a","method":{"position":"com.google.gson.internal.bind.TypeAdapters:379","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.math.BigDecimal value) throws java.io.IOException {\n    out.value(value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"4f2d3b02-3e62-11e6-9187-f75a5633f8f9","method":{"position":"com.google.gson.internal.bind.TypeAdapters:501","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.UUID read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return java.util.UUID.fromString(in.nextString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"4f2d3b03-3e62-11e6-9187-e1e80604c104","method":{"position":"com.google.gson.Gson:261","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        out.nullValue();\n        return ;\n    } \n    double double = value.doubleValue();\n    checkValidFloatingPoint(doubleValue);\n    out.value(value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"4f2d3b04-3e62-11e6-9187-ef1e9cc5c4e1","method":{"position":"com.google.gson.Gson:317","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        out.nullValue();\n        return ;\n    } \n    out.value(value.toString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:176","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"4f2d6215-3e62-11e6-9187-43cd2da4e647","method":{"position":"com.google.gson.internal.LinkedTreeMap:110","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(java.lang.Object key) {\n    if (key == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249931908/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = removeInternalByKey(key);\n            return node != null ? node.V : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.GsonBuilder:501","type":"CtBinaryOperatorImpl","sourcecode":"typeAdapter instanceof com.google.gson.TypeAdapter<?>"},"failures":[133,1,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,16,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,41,43,44,45,208,209,210,211,212,213,214,215,216,217,218,219,220,221,58,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,60,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,71,273,274,275,276,277,278,279,72,74,75,76,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,82,300,83,301,302,303,84,85,304,305,306,307,308,89,309,91,92,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,108,109,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,121,123,368,369,370,371,372,373,374,375,376],"tindex":"4f2d8926-3e62-11e6-9187-e900f6cb89f4","method":{"position":"com.google.gson.Gson:780","type":"CtMethodImpl","sourcecode":"private static void assertFullConsumption(java.lang.Object obj, com.google.gson.stream.JsonReader reader) {\n    if (obj instanceof com.google.gson.TypeAdapter<?>) {\n        {\n            try {\n                if ((obj != null) && ((reader.peek()) != (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken))) {\n                    throw new com.google.gson.JsonIOException(\"JSON document was not fully consumed.\");\n                } \n            } catch (com.google.gson.stream.MalformedJsonException e) {\n                throw new com.google.gson.JsonSyntaxException(e);\n            } catch (java.io.IOException e) {\n                throw new com.google.gson.JsonIOException(e);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249931908/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeAdapter":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:132","type":"CtInvocationImpl","sourcecode":"isBoolean()"},"failures":[],"tindex":"4f2d8927-3e62-11e6-9187-1fc5c6b40a11","method":{"position":"com.google.gson.JsonPrimitive:333","type":"CtMethodImpl","sourcecode":"private static boolean isIntegral(com.google.gson.JsonPrimitive primitive) {\n    if ((primitive.java.lang.Object) instanceof java.lang.Number) {\n        java.lang.Number java.lang.Number = ((java.lang.Number)(primitive.java.lang.Object));\n        return ((((number instanceof java.math.BigInteger) || (number instanceof java.lang.Long)) || (number instanceof java.lang.Integer)) || (number instanceof java.lang.Short)) || (number instanceof java.lang.Byte);\n    } \n    return false;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"primitive"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"4f2db038-3e62-11e6-9187-139633ced4e2","method":{"position":"com.google.gson.internal.Excluder:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, T value) throws java.io.IOException {\n    if (skipSerialize) {\n        out.nullValue();\n        return ;\n    } \n    delegate().write(out, value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:306","type":"CtBinaryOperatorImpl","sourcecode":"longSerializationPolicy == (com.google.gson.LongSerializationPolicy.DEFAULT)"},"failures":[],"tindex":"4f2db039-3e62-11e6-9187-9bdda4e35dee","method":{"position":"com.google.gson.GsonBuilder:261","type":"CtMethodImpl","sourcecode":"public com.google.gson.GsonBuilder setLongSerializationPolicy(com.google.gson.LongSerializationPolicy serializationPolicy) {\n    if (serializationPolicy == serializationPolicy) {\n        {\n            com.google.gson.GsonBuilder.this.com.google.gson.LongSerializationPolicy = serializationPolicy;\n            return com.google.gson.GsonBuilder.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249931908/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"longSerializationPolicy":"serializationPolicy","com.google.gson.LongSerializationPolicy.DEFAULT":"serializationPolicy"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:171","type":"CtBinaryOperatorImpl","sourcecode":"(token != (com.google.gson.stream.JsonToken.NUMBER)) && (token != (com.google.gson.stream.JsonToken.STRING))"},"failures":[],"tindex":"4f2db03a-3e62-11e6-9187-4f238d526e0c","method":{"position":"com.google.gson.TreeTypeAdapter:103","type":"CtMethodImpl","sourcecode":"public static com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class<?> hierarchyType, java.lang.Object typeAdapter) {\n    if ((typeAdapter != typeAdapter) && (token != typeAdapter)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249931908/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new com.google.gson.TreeTypeAdapter.SingleTypeFactory(typeAdapter , null , false , hierarchyType);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"com.google.gson.stream.JsonToken.STRING":"typeAdapter","token":"typeAdapter","com.google.gson.stream.JsonToken.NUMBER":"typeAdapter"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:360","type":"CtBinaryOperatorImpl","sourcecode":"candidate != null"},"failures":[377,0,378,133,1,2,379,380,3,4,5,134,135,136,137,138,139,140,381,6,141,7,142,143,382,8,144,145,146,147,148,149,383,150,384,151,385,386,152,387,153,388,154,389,390,155,156,9,391,157,392,393,10,158,159,160,161,162,394,163,164,395,11,165,12,396,13,14,397,166,167,15,168,398,169,170,16,17,171,399,172,173,174,18,400,19,20,21,175,176,22,177,178,23,24,179,401,402,180,403,181,404,405,406,407,408,409,182,410,183,184,185,411,412,413,186,414,415,416,187,417,188,418,189,419,25,26,420,421,422,423,424,425,190,426,191,427,192,193,194,27,28,195,196,29,428,30,197,31,198,199,200,201,32,33,429,202,430,431,432,203,34,433,35,36,434,37,204,38,435,205,39,436,206,437,40,438,439,440,207,441,442,41,42,43,44,45,443,208,209,46,210,444,445,446,211,447,448,449,450,212,451,213,47,48,49,50,452,51,52,53,214,215,54,55,56,453,454,216,455,217,456,457,458,459,218,219,57,220,221,58,460,461,462,463,464,465,222,466,467,468,469,223,224,470,59,225,471,472,473,226,474,227,228,475,229,476,477,478,479,480,481,230,482,483,484,485,231,232,486,233,234,235,236,487,488,489,490,491,492,237,238,493,239,240,494,241,495,496,242,243,497,498,499,500,501,502,503,244,245,504,505,246,506,507,247,508,509,510,511,512,248,513,514,60,249,250,61,251,252,62,253,254,63,255,515,516,256,64,258,517,259,518,65,260,519,66,520,261,521,262,263,264,67,265,522,523,266,68,267,268,269,270,69,271,272,70,71,273,274,275,276,277,278,279,72,73,74,75,76,524,525,526,527,528,280,281,529,282,77,283,530,284,285,286,287,288,289,290,291,293,294,295,296,297,531,532,533,80,534,535,536,81,298,299,82,300,83,301,302,303,84,85,304,86,537,87,88,305,306,538,307,539,308,89,90,309,540,541,91,92,93,94,542,543,544,95,96,545,310,311,97,98,546,312,313,314,99,315,100,316,547,317,101,318,548,319,102,103,549,550,104,551,105,320,321,106,322,323,324,107,325,552,553,326,108,109,110,111,554,112,113,327,328,555,329,556,330,331,557,558,332,559,560,333,334,335,336,561,337,338,562,339,340,341,563,564,565,566,114,342,567,343,568,569,344,570,345,571,346,572,347,348,573,349,350,351,352,574,115,353,575,116,354,576,355,577,356,578,579,357,358,580,581,359,582,360,583,584,361,362,117,585,363,364,586,365,366,587,118,119,588,589,590,591,592,593,367,120,121,122,123,124,368,369,125,370,126,371,372,373,127,374,375,128,129,130,594,131,595,596,132,597,598,599,600,601,376],"tindex":"4f2dd74b-3e62-11e6-9187-c74f7b4a41c3","method":{"position":"com.google.gson.Gson:881","type":"CtMethodImpl","sourcecode":"public void setDelegate(com.google.gson.TypeAdapter<T> typeAdapter) {\n    if (typeAdapter != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249931908/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((com.google.gson.TypeAdapter<T>) != null) {\n                throw new java.lang.AssertionError();\n            } \n            com.google.gson.TypeAdapter<T> = typeAdapter;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"candidate":"typeAdapter"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"4f2dfe5c-3e62-11e6-9187-81a4157d635f","method":{"position":"com.google.gson.Gson:895","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, T value) throws java.io.IOException {\n    if ((com.google.gson.TypeAdapter<T>) == null) {\n        throw new java.lang.IllegalStateException();\n    } \n    com.google.gson.TypeAdapter<T>.write(out, value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1368","type":"CtUnaryOperatorImpl","sourcecode":"!charsLoaded"},"failures":[484,491,492,499,505,509,596],"tindex":"4f2dfe5d-3e62-11e6-9187-f9a87fc1ef06","method":{"position":"com.google.gson.Gson:273","type":"CtMethodImpl","sourcecode":"private com.google.gson.TypeAdapter<java.lang.Number> floatAdapter(boolean serializeSpecialFloatingPointValues) {\n    if (!serializeSpecialFloatingPointValues) {\n        {\n            if (serializeSpecialFloatingPointValues) {\n                return com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<java.lang.Number>;\n            } \n            return new com.google.gson.TypeAdapter<java.lang.Number>() {\n                @java.lang.Override\n                public java.lang.Float read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n                    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n                        in.nextNull();\n                        return null;\n                    } \n                    return ((float)(in.nextDouble()));\n                }\n\n                @java.lang.Override\n                public void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n                    if (value == null) {\n                        out.nullValue();\n                        return ;\n                    } \n                    float float = value.floatValue();\n                    checkValidFloatingPoint(floatValue);\n                    out.value(value);\n                }\n            };\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249931908/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"charsLoaded":"serializeSpecialFloatingPointValues"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:111","type":"CtInvocationImpl","sourcecode":"primitive.isString()"},"failures":[],"tindex":"4f2dfe5e-3e62-11e6-9187-f54043a67d6b","method":{"position":"com.google.gson.internal.$Gson$Types:563","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object other) {\n    return (other instanceof java.lang.reflect.WildcardType) && (com.google.gson.internal.$Gson$Types.equals(com.google.gson.internal.$Gson$Types.WildcardTypeImpl.this, ((java.lang.reflect.WildcardType)(other))));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"primitive":"other"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory:43","type":"CtBinaryOperatorImpl","sourcecode":"annotation == null"},"failures":[275,276,277,278,279,280,281,282,283,530,304],"tindex":"4f2dfe5f-3e62-11e6-9187-8306a2d80ada","method":{"position":"com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory:50","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic com.google.gson.TypeAdapter<?> getTypeAdapter(com.google.gson.internal.ConstructorConstructor constructorConstructor, com.google.gson.Gson gson, com.google.gson.reflect.TypeToken<?> fieldType, com.google.gson.annotations.JsonAdapter annotation) {\n    if (annotation == null) {\n        {\n            java.lang.Class<?> java.lang.Class<?> = annotation.value();\n            if (com.google.gson.TypeAdapter.com.google.gson.TypeAdapter.java.lang.Class.isAssignableFrom(value)) {\n                java.lang.Class<com.google.gson.TypeAdapter<?>> java.lang.Class<com.google.gson.TypeAdapter<?>> = ((java.lang.Class<com.google.gson.TypeAdapter<?>>)(value));\n                return constructorConstructor.get(com.google.gson.reflect.TypeToken.get(typeAdapter)).construct();\n            } \n            if (com.google.gson.TypeAdapterFactory.com.google.gson.TypeAdapterFactory.java.lang.Class.isAssignableFrom(value)) {\n                java.lang.Class<com.google.gson.TypeAdapterFactory> java.lang.Class<com.google.gson.TypeAdapterFactory> = ((java.lang.Class<com.google.gson.TypeAdapterFactory>)(value));\n                return constructorConstructor.get(com.google.gson.reflect.TypeToken.get(typeAdapterFactory)).construct().create(gson, fieldType);\n            } \n            throw new java.lang.IllegalArgumentException(\"@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249931908/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"annotation":"annotation"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:716","type":"CtBinaryOperatorImpl","sourcecode":"(c < '0') || (c > '9')"},"failures":[],"tindex":"4f2e2570-3e62-11e6-9187-77568af45fa8","method":{"position":"com.google.gson.stream.JsonReader:1101","type":"CtMethodImpl","sourcecode":"private void skipQuotedValue(char quote) throws java.io.IOException {\n    if ((quote < '0') || (c > '9')) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249931908/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            char[] char[] = com.google.gson.stream.JsonReader.this.char[];\n            do {\n                int int = int;\n                int int = int;\n                while (p < l) {\n                    int int = buffer[(p++)];\n                    if (c == quote) {\n                        int = p;\n                        return ;\n                    } else if (c == '\\\\') {\n                        int = p;\n                        readEscapeCharacter();\n                        p = int;\n                        l = int;\n                    } else if (c == '\\n') {\n                        (int)++;\n                        int = p;\n                    } \n                }\n                int = p;\n            } while (fillBuffer(1) );\n            throw syntaxError(\"Unterminated string\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"quote"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:118","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.Class<?>"},"failures":[],"tindex":"4f2e2571-3e62-11e6-9187-93a68ea232a9","method":{"position":"com.google.gson.Gson:532","type":"CtMethodImpl","sourcecode":"public java.lang.String toJson(java.lang.Object src, java.lang.reflect.Type typeOfSrc) {\n    if (src instanceof java.lang.Class<?>) {\n        {\n            java.io.StringWriter java.io.StringWriter = new java.io.StringWriter();\n            toJson(src, typeOfSrc, writer);\n            return writer.toString();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249931908/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":20,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}