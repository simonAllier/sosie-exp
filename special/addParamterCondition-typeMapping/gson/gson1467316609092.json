{"failureDictionary":{"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":83,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":216,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":19,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":153,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":62,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":72,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":145,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":90,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":78,"com.google.gson.MixedStreamTest.testWriteLenient":251,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":95,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":116,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":100,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":63,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":64,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":67,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":104,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":114,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":39,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":48,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":226,"com.google.gson.functional.ObjectTest.testSingletonLists":112,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":81,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":109,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":193,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":233,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":5,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":127,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":139,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":175,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":188,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":29,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":30,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":146,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":18,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":177,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":143,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":119,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":22,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":209,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":65,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":89,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":224,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":57,"com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization":244,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":230,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":242,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":236,"com.google.gson.functional.JsonTreeTest.testToJsonTree":204,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":231,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":185,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":191,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":55,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":12,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":227,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":158,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":26,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":248,"com.google.gson.functional.MapTest.testGeneralMapField":60,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":117,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":196,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":14,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":170,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":124,"com.google.gson.MixedStreamTest.testReadMixedStreamed":4,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":173,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":134,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":235,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":108,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":220,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":10,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":92,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":256,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":136,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":23,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":79,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":33,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":214,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":166,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":237,"com.google.gson.functional.ObjectTest.testNestedDeserialization":144,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":174,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":155,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":179,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":161,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":133,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":6,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":8,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":120,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":77,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":253,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":43,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":110,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":208,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":182,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":46,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":82,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":103,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":211,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":59,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":252,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":9,"com.google.gson.functional.MapTest.testInterfaceTypeMap":58,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":172,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":184,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":199,"com.google.gson.functional.CollectionTest.testSetDeserialization":66,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":40,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":70,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":123,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":215,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":47,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":128,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":45,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":241,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":11,"com.google.gson.MixedStreamTest.testWriteClosed":3,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":157,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":194,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":118,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":187,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":245,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":49,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":183,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":164,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":141,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":160,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":152,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":205,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":234,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":94,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":121,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":190,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":34,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":154,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":24,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":98,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":36,"com.google.gson.functional.MapTest.testComplexKeysSerialization":61,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":213,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":147,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":71,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":198,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":232,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":201,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":200,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":217,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":163,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":20,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":35,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":73,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":56,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":135,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":142,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":221,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":0,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":130,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":206,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":156,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":28,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":250,"com.google.gson.ObjectTypeAdapterTest.testSerialize":238,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":255,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":219,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":101,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":151,"com.google.gson.functional.FieldNamingTest.testIdentity":99,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":96,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":50,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":165,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":137,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":76,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":111,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":203,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":69,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":84,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":38,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":240,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":150,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":41,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":140,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":257,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":21,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":54,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":105,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":122,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":247,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":1,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":223,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":80,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":93,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":192,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":44,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":126,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":169,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":32,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":102,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":176,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":212,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":210,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":167,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":86,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":106,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":85,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":180,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":129,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":239,"com.google.gson.functional.ObjectTest.testNestedSerialization":131,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":13,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":75,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":27,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":17,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":113,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":125,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":42,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":197,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":115,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":229,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":186,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":107,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":15,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":162,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":91,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":243,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":87,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":132,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":31,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":37,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":53,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":246,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":25,"com.google.gson.functional.CollectionTest.testSetSerialization":68,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":171,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":178,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":222,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":74,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":148,"com.google.gson.MixedStreamTest.testWriteInvalidState":2,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":159,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":254,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":16,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":149,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":7,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":97,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":195,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":225,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":189,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":228,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":168,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":249,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":218,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":202,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":88,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":51,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":138,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":207,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":181,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":52},"transformations":[{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"c819bfec-3efc-11e6-8b6a-cfdc90233790","method":{"position":"com.google.gson.Gson:310","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return in.nextLong();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"c81a351d-3efc-11e6-8b6a-33c9fdf1eaea","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:839","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(java.lang.Object o) {\n    if (!(o instanceof java.lang.reflect.GenericArrayType)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316043499/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return containsKey(o);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl"},"failures":[],"tindex":"c81a351e-3efc-11e6-8b6a-0f51d7fb49b3","method":{"position":"com.google.gson.FieldNamingPolicy:90","type":"CtMethodImpl","sourcecode":"public java.lang.String translateName(java.lang.reflect.Field f) {\n    if (f.isSynthetic()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316043499/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return com.google.gson.FieldNamingPolicy.separateCamelCase(f.getName(), \"_\").toLowerCase();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"f"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"c81a351f-3efc-11e6-8b6a-676dc1b96e06","method":{"position":"com.google.gson.internal.bind.TypeAdapters:509","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.util.UUID value) throws java.io.IOException {\n    out.value((value == null ? null : value.toString()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"c81a5b30-3efc-11e6-8b6a-dd6fff81d7ca","method":{"position":"com.google.gson.internal.bind.TypeAdapters:156","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Boolean value) throws java.io.IOException {\n    if (value == null) {\n        out.nullValue();\n        return ;\n    } \n    out.value(value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:103","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"c81a5b31-3efc-11e6-8b6a-6551cb41784a","method":{"position":"com.google.gson.internal.LinkedTreeMap:574","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(java.lang.Object o) {\n    if (o instanceof java.lang.reflect.GenericArrayType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316043499/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = findByEntry(((java.util.Map.Entry<?, ?>)(o)));\n            if (node == null) {\n                return false;\n            } \n            removeInternal(node, true);\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"c81a8242-3efc-11e6-8b6a-432c871aa456","method":{"position":"com.google.gson.internal.bind.TypeAdapters:156","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Boolean value) throws java.io.IOException {\n    if (value == null) {\n        out.nullValue();\n        return ;\n    } \n    out.value(value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.GsonBuilder:497","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"c81a8243-3efc-11e6-8b6a-f7f3360b75c2","method":{"position":"com.google.gson.internal.LinkedTreeMap:276","type":"CtMethodImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V> removeInternalByKey(java.lang.Object key) {\n    if ((key instanceof com.google.gson.JsonDeserializer) || (typeAdapter instanceof com.google.gson.JsonSerializer)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316043499/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = findByObject(key);\n            if (node != null) {\n                removeInternal(node, true);\n            } \n            return node;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeAdapter":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241],"tindex":"c81aa954-3efc-11e6-8b6a-8d75ab49d05d","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:70","type":"CtMethodImpl","sourcecode":"static java.lang.String getFieldName(com.google.gson.FieldNamingStrategy fieldNamingPolicy, java.lang.reflect.Field f) {\n    if (f.isSynthetic()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316043499/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (f.isSynthetic()) {\n                {\n                    if (f.isSynthetic()) {\n                        {\n                            com.google.gson.annotations.SerializedName com.google.gson.annotations.SerializedName = f.getAnnotation(com.google.gson.annotations.SerializedName.com.google.gson.annotations.SerializedName.java.lang.Class);\n                            return serializedName == null ? fieldNamingPolicy.translateName(f) : serializedName.value();\n                        }\n                    } else {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316043499/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316043499/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"f"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"c81ad065-3efc-11e6-8b6a-ed26865fa7e1","method":{"position":"com.google.gson.internal.bind.TypeAdapters:145","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Boolean read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } else if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        return java.lang.Boolean.parseBoolean(in.nextString());\n    } \n    return in.nextBoolean();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"c81af776-3efc-11e6-8b6a-a1f8555c851a","method":{"position":"com.google.gson.internal.bind.SqlDateTypeAdapter:50","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized java.sql.Date read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        final long long = java.text.DateFormat.parse(in.nextString()).getTime();\n        return new java.sql.Date(utilDate);\n    } catch (java.text.ParseException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl"},"failures":[96,209,213],"tindex":"c81af777-3efc-11e6-8b6a-373c12bfa652","method":{"position":"com.google.gson.FieldNamingPolicy:113","type":"CtMethodImpl","sourcecode":"public java.lang.String translateName(java.lang.reflect.Field f) {\n    if (f.isSynthetic()) {\n        {\n            return com.google.gson.FieldNamingPolicy.separateCamelCase(f.getName(), \"-\").toLowerCase();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316043499/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"f"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:733","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"c81b1e88-3efc-11e6-8b6a-a77831287785","method":{"position":"com.google.gson.JsonArray:146","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement get(int i) {\n    if (i == i) {\n        {\n            if (i == i) {\n                {\n                    return java.util.List<com.google.gson.JsonElement>.get(i);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316043499/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316043499/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"last":"i","com.google.gson.stream.JsonReader.NUMBER_CHAR_DECIMAL":"i"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"c81b1e89-3efc-11e6-8b6a-79feb4504fdb","method":{"position":"com.google.gson.internal.bind.TypeAdapters:379","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.math.BigDecimal value) throws java.io.IOException {\n    out.value(value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:179","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"c81b459a-3efc-11e6-8b6a-0d492ba6f0d8","method":{"position":"com.google.gson.internal.bind.MapTypeAdapterFactory:139","type":"CtMethodImpl","sourcecode":"private com.google.gson.TypeAdapter<?> getKeyAdapter(com.google.gson.Gson context, java.lang.reflect.Type keyType) {\n    if (keyType instanceof java.lang.reflect.GenericArrayType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316043499/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (keyType == (boolean.boolean.java.lang.Class)) || (keyType == (java.lang.Boolean.java.lang.Boolean.java.lang.Class)) ? com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<java.lang.Boolean> : context.getAdapter(com.google.gson.reflect.TypeToken.get(keyType));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"keyType"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl"},"failures":[],"tindex":"c81b459b-3efc-11e6-8b6a-7b94c86fb6d5","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:70","type":"CtMethodImpl","sourcecode":"static java.lang.String getFieldName(com.google.gson.FieldNamingStrategy fieldNamingPolicy, java.lang.reflect.Field f) {\n    if (f.isSynthetic()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316043499/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (f.isSynthetic()) {\n                {\n                    if (f.isSynthetic()) {\n                        {\n                            com.google.gson.annotations.SerializedName com.google.gson.annotations.SerializedName = f.getAnnotation(com.google.gson.annotations.SerializedName.com.google.gson.annotations.SerializedName.java.lang.Class);\n                            return serializedName == null ? fieldNamingPolicy.translateName(f) : serializedName.value();\n                        }\n                    } else {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316043499/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316043499/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"f"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"c81b6cac-3efc-11e6-8b6a-6b29300b94d9","method":{"position":"com.google.gson.internal.bind.TypeAdapters:432","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.StringBuffer value) throws java.io.IOException {\n    out.value((value == null ? null : value.toString()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:828","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"c81b6cad-3efc-11e6-8b6a-eb29306de712","method":{"position":"com.google.gson.JsonArray:146","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement get(int i) {\n    if (i == i) {\n        {\n            if (i == i) {\n                {\n                    return java.util.List<com.google.gson.JsonElement>.get(i);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316043499/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316043499/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"i","com.google.gson.stream.JsonReader.PEEKED_BUFFERED":"i"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"c81b93be-3efc-11e6-8b6a-55eac014b8f4","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:208","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, T value) throws java.io.IOException {\n    if (value == null) {\n        out.nullValue();\n        return ;\n    } \n    out.beginObject();\n    try {\n        for (com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField : java.util.Map<java.lang.String, com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField>.values()) {\n            if (boundField.writeField(value)) {\n                out.name(boundField.java.lang.String);\n                boundField.write(out, value);\n            } \n        }\n    } catch (java.lang.IllegalAccessException e) {\n        throw new java.lang.AssertionError();\n    }\n    out.endObject();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl"},"failures":[98,210,212],"tindex":"c81b93bf-3efc-11e6-8b6a-099bf7768311","method":{"position":"com.google.gson.FieldNamingPolicy:72","type":"CtMethodImpl","sourcecode":"public java.lang.String translateName(java.lang.reflect.Field f) {\n    if (f.isSynthetic()) {\n        {\n            return com.google.gson.FieldNamingPolicy.upperCaseFirstLetter(com.google.gson.FieldNamingPolicy.separateCamelCase(f.getName(), \" \"));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316043499/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"f"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:306","type":"CtBinaryOperatorImpl"},"failures":[242,243,244,245],"tindex":"c81bbad0-3efc-11e6-8b6a-d5c64b890893","method":{"position":"com.google.gson.GsonBuilder:261","type":"CtMethodImpl","sourcecode":"public com.google.gson.GsonBuilder setLongSerializationPolicy(com.google.gson.LongSerializationPolicy serializationPolicy) {\n    if (serializationPolicy == serializationPolicy) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316043499/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.GsonBuilder.this.com.google.gson.LongSerializationPolicy = serializationPolicy;\n            return com.google.gson.GsonBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"longSerializationPolicy":"serializationPolicy","com.google.gson.LongSerializationPolicy.DEFAULT":"serializationPolicy"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:98","type":"CtBinaryOperatorImpl"},"failures":[37,38,40,53,55,159,160,163],"tindex":"c81bbad1-3efc-11e6-8b6a-2b28d16f088a","method":{"position":"com.google.gson.internal.ConstructorConstructor:200","type":"CtMethodImpl","sourcecode":"private <T>com.google.gson.internal.ObjectConstructor<T> newUnsafeAllocator(final java.lang.reflect.Type type, final java.lang.Class<? super T> rawType) {\n    if (type instanceof java.lang.reflect.ParameterizedType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316043499/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new com.google.gson.internal.ObjectConstructor<T>() {\n                private final com.google.gson.internal.UnsafeAllocator unsafeAllocator = com.google.gson.internal.UnsafeAllocator.create();\n\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                public T construct() {\n                    try {\n                        java.lang.Object java.lang.Object = com.google.gson.internal.UnsafeAllocator.newInstance(rawType);\n                        return ((T)(newInstance));\n                    } catch (java.lang.Exception e) {\n                        throw new java.lang.RuntimeException((((\"Unable to invoke no-args constructor for \" + type) + \". \") + \"Register an InstanceCreator with Gson for this type may fix this problem.\") , e);\n                    }\n                }\n            };\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:414","type":"CtBinaryOperatorImpl"},"failures":[246,247,56,58,59,62,248,90,148,179,180,181,182,184,185,186,190,191,203,224,249,227,228,250,232],"tindex":"c81be1e2-3efc-11e6-8b6a-a56d00fee58c","method":{"position":"com.google.gson.internal.bind.TypeAdapters:361","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.String value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316043499/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            out.value(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:462","type":"CtBinaryOperatorImpl"},"failures":[251,252,253,254,255,256,257],"tindex":"c81be1e3-3efc-11e6-8b6a-07b39eabd493","method":{"position":"com.google.gson.Gson:297","type":"CtMethodImpl","sourcecode":"private void checkValidFloatingPoint(double value) {\n    if ((java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(value))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316043499/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(value))) {\n                throw new java.lang.IllegalArgumentException(((value + \" is not a valid double value as per JSON specification. To override this\") + \" behavior, use GsonBuilder.serializeSpecialFloatingPointValues() method.\"));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl"},"failures":[],"tindex":"c81c08f4-3efc-11e6-8b6a-0348b53e8336","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:70","type":"CtMethodImpl","sourcecode":"static java.lang.String getFieldName(com.google.gson.FieldNamingStrategy fieldNamingPolicy, java.lang.reflect.Field f) {\n    if (f.isSynthetic()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316043499/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (f.isSynthetic()) {\n                {\n                    if (f.isSynthetic()) {\n                        {\n                            com.google.gson.annotations.SerializedName com.google.gson.annotations.SerializedName = f.getAnnotation(com.google.gson.annotations.SerializedName.com.google.gson.annotations.SerializedName.java.lang.Class);\n                            return serializedName == null ? fieldNamingPolicy.translateName(f) : serializedName.value();\n                        }\n                    } else {\n                        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316043499/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                        throw new java.lang.RuntimeException();\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316043499/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"f"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"c81c08f5-3efc-11e6-8b6a-1b6c6efe6c71","method":{"position":"com.google.gson.internal.Excluder:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, T value) throws java.io.IOException {\n    if (skipSerialize) {\n        out.nullValue();\n        return ;\n    } \n    delegate().write(out, value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:378","type":"CtVariableReadImpl"},"failures":[],"tindex":"c81c08f6-3efc-11e6-8b6a-8fa301826567","method":{"position":"com.google.gson.stream.JsonReader:325","type":"CtMethodImpl","sourcecode":"public final void setLenient(boolean lenient) {\n    if (lenient) {\n        {\n            com.google.gson.stream.JsonReader.this.boolean = lenient;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316043499/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"insert":"lenient"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:166","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"c81c3007-3efc-11e6-8b6a-290ae9fb2d68","method":{"position":"com.google.gson.TreeTypeAdapter:84","type":"CtMethodImpl","sourcecode":"public static com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken<?> exactType, java.lang.Object typeAdapter) {\n    if (typeAdapter instanceof java.lang.Class<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316043499/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new com.google.gson.TreeTypeAdapter.SingleTypeFactory(typeAdapter , exactType , false , null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"typeAdapter"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:306","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"c81c3008-3efc-11e6-8b6a-bb730e510782","method":{"position":"com.google.gson.Gson:305","type":"CtMethodImpl","sourcecode":"private com.google.gson.TypeAdapter<java.lang.Number> longAdapter(com.google.gson.LongSerializationPolicy longSerializationPolicy) {\n    if (longSerializationPolicy == longSerializationPolicy) {\n        {\n            if (longSerializationPolicy == (com.google.gson.LongSerializationPolicy.com.google.gson.LongSerializationPolicy.com.google.gson.LongSerializationPolicy)) {\n                return com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<java.lang.Number>;\n            } \n            return new com.google.gson.TypeAdapter<java.lang.Number>() {\n                @java.lang.Override\n                public java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n                    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n                        in.nextNull();\n                        return null;\n                    } \n                    return in.nextLong();\n                }\n\n                @java.lang.Override\n                public void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n                    if (value == null) {\n                        out.nullValue();\n                        return ;\n                    } \n                    out.value(value.toString());\n                }\n            };\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316043499/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"longSerializationPolicy":"longSerializationPolicy","com.google.gson.LongSerializationPolicy.DEFAULT":"longSerializationPolicy"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":29,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}